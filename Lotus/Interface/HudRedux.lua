
main <?:0,0> (1122 instructions, 4488 bytes at 0000021125BE4BF0)
0+ params, 180 slots, 0 upvalues, 0 locals, 264 constants, 182 functions
	1	[89]	NEWTABLE 	R0 0 5 ; R0 := {}
	2	[90]	SETTABLE 	R0 K0 K1 ; R0["INVALID32"] := 4294967296.000000
	3	[91]	SETTABLE 	R0 K2 K3 ; R0["PVP_XP_PER_LEVEL"] := 150.000000
	4	[92]	SETTABLE 	R0 K4 K5 ; R0["MAX_LOG_FADE_TIME"] := 0.350000
	5	[93]	SETTABLE 	R0 K6 K7 ; R0["LEVEL_ABBREV"] := ""
	6	[94]	SETTABLE 	R0 K8 K9 ; R0["HUD_BUFF_ICON_SIZE"] := 35.000000
	7	[97]	NEWTABLE 	R1 0 4 ; R1 := {}
	8	[97]	NEWTABLE 	R2 0 3 ; R2 := {}
	9	[97]	SETTABLE 	R2 K11 K12 ; R2["X"] := -75.000000
	10	[97]	SETTABLE 	R2 K13 K14 ; R2["Y"] := 13.000000
	11	[97]	SETTABLE 	R2 K15 K16 ; R2["Ability"] := nil
	12	[97]	SETTABLE 	R1 K10 R2 ; R1["A"] := R2
	13	[97]	NEWTABLE 	R2 0 3 ; R2 := {}
	14	[97]	SETTABLE 	R2 K11 K17 ; R2["X"] := -126.000000
	15	[97]	SETTABLE 	R2 K13 K18 ; R2["Y"] := -37.000000
	16	[97]	SETTABLE 	R2 K15 K16 ; R2["Ability"] := nil
	17	[97]	SETTABLE 	R1 K11 R2 ; R1["X"] := R2
	18	[97]	NEWTABLE 	R2 0 3 ; R2 := {}
	19	[97]	SETTABLE 	R2 K11 K20 ; R2["X"] := -23.000000
	20	[97]	SETTABLE 	R2 K13 K18 ; R2["Y"] := -37.000000
	21	[97]	SETTABLE 	R2 K15 K16 ; R2["Ability"] := nil
	22	[97]	SETTABLE 	R1 K19 R2 ; R1["B"] := R2
	23	[97]	NEWTABLE 	R2 0 3 ; R2 := {}
	24	[97]	SETTABLE 	R2 K11 K12 ; R2["X"] := -75.000000
	25	[97]	SETTABLE 	R2 K13 K21 ; R2["Y"] := -91.000000
	26	[97]	SETTABLE 	R2 K15 K16 ; R2["Ability"] := nil
	27	[97]	SETTABLE 	R1 K13 R2 ; R1["Y"] := R2
	28	[98]	NEWTABLE 	R2 4 0 ; R2 := {}
	29	[98]	NEWTABLE 	R3 0 3 ; R3 := {}
	30	[98]	SETTABLE 	R3 K11 K22 ; R3["X"] := -131.000000
	31	[98]	SETTABLE 	R3 K13 K23 ; R3["Y"] := 18.000000
	32	[98]	SETTABLE 	R3 K15 K24 ; R3["Ability"] := "ACTIVATE_ABILITY_MENU_0"
	33	[98]	NEWTABLE 	R4 0 3 ; R4 := {}
	34	[98]	SETTABLE 	R4 K11 K25 ; R4["X"] := -93.750000
	35	[98]	SETTABLE 	R4 K13 K23 ; R4["Y"] := 18.000000
	36	[98]	SETTABLE 	R4 K15 K26 ; R4["Ability"] := "ACTIVATE_ABILITY_MENU_1"
	37	[98]	NEWTABLE 	R5 0 3 ; R5 := {}
	38	[98]	SETTABLE 	R5 K11 K27 ; R5["X"] := -56.000000
	39	[98]	SETTABLE 	R5 K13 K23 ; R5["Y"] := 18.000000
	40	[98]	SETTABLE 	R5 K15 K28 ; R5["Ability"] := "ACTIVATE_ABILITY_MENU_2"
	41	[98]	NEWTABLE 	R6 0 3 ; R6 := {}
	42	[98]	SETTABLE 	R6 K11 K29 ; R6["X"] := -19.000000
	43	[98]	SETTABLE 	R6 K13 K23 ; R6["Y"] := 18.000000
	44	[98]	SETTABLE 	R6 K15 K30 ; R6["Ability"] := "ACTIVATE_ABILITY_MENU_3"
	45	[98]	SETLIST  	R2 4 1 ; R2[(1-1)*FPF+i] := R(2+i), 1 <= i <= 4
	46	[99]	NEWTABLE 	R3 0 0 ; R3 := {}
	47	[102]	NEWTABLE 	R4 0 20 ; R4 := {}
	48	[103]	SETTABLE 	R4 K31 K32 ; R4["mScreenDuck"] := 0.000000
	49	[104]	SETTABLE 	R4 K33 K34 ; R4["mTransOnRightSide"] := false
	50	[105]	SETTABLE 	R4 K35 K34 ; R4["mPlayingWithController"] := false
	51	[106]	SETTABLE 	R4 K36 K34 ; R4["mDispatchingQueuedFuncs"] := false
	52	[107]	SETTABLE 	R4 K37 K34 ; R4["mWasSpectating"] := false
	53	[108]	SETTABLE 	R4 K38 K34 ; R4["mSpaceMode"] := false
	54	[109]	SETTABLE 	R4 K39 K32 ; R4["mImpactMessageFrame"] := 0.000000
	55	[110]	SETTABLE 	R4 K40 K41 ; R4["mImpactMessageScale"] := 100.000000
	56	[111]	SETTABLE 	R4 K42 K41 ; R4["mImpactMessageTransitionScale"] := 100.000000
	57	[112]	SETTABLE 	R4 K43 K34 ; R4["IsSpectating"] := false
	58	[113]	SETTABLE 	R4 K44 K34 ; R4["IsOperator"] := false
	59	[114]	SETTABLE 	R4 K45 K34 ; R4["Initialized"] := false
	60	[115]	SETTABLE 	R4 K46 K34 ; R4["UIMode"] := false
	61	[116]	SETTABLE 	R4 K47 K34 ; R4["IsInConclave"] := false
	62	[117]	SETTABLE 	R4 K48 K16 ; R4["mProfileMovie"] := nil
	63	[118]	SETTABLE 	R4 K49 K16 ; R4["mHudMarkersMovie"] := nil
	64	[119]	SETTABLE 	R4 K50 K51 ; R4["mDistanceFieldMiniMap"] := true
	65	[120]	SETTABLE 	R4 K52 K34 ; R4["PlayerListHasChanged"] := false
	66	[121]	SETTABLE 	R4 K53 K54 ; R4["MissionType"] := -1.000000
	67	[122]	SETTABLE 	R4 K55 K34 ; R4["StalkerMode"] := false
	68	[123]	SETTABLE 	R4 K56 K34 ; R4["IsAlternateHud"] := false
	69	[124]	SETTABLE 	R4 K57 K51 ; R4["mEnergyVisible"] := true
	70	[125]	SETTABLE 	R4 K58 K34 ; R4["mMiniMapHidden"] := false
	71	[126]	SETTABLE 	R4 K59 K34 ; R4["mAbilityFxPlayed"] := false
	72	[129]	GETGLOBAL	R5 K60 ; R5 := 0x2d0fad09
	73	[129]	LOADK    	R6 K61 ; R6 := "Lotus.Interface.UIUtilities"
	74	[129]	CALL     	R5 2 2 ; R5 := R5(R6)
	75	[130]	GETGLOBAL	R6 K60 ; R6 := 0x2d0fad09
	76	[130]	LOADK    	R7 K62 ; R7 := "Lotus.Interface.LotusUtilities"
	77	[130]	CALL     	R6 2 2 ; R6 := R6(R7)
	78	[131]	GETGLOBAL	R7 K60 ; R7 := 0x2d0fad09
	79	[131]	LOADK    	R8 K63 ; R8 := "Lotus.Interface.LotusNetworkUtilities"
	80	[131]	CALL     	R7 2 2 ; R7 := R7(R8)
	81	[132]	GETGLOBAL	R8 K60 ; R8 := 0x2d0fad09
	82	[132]	LOADK    	R9 K64 ; R9 := "EE.Interface.Utilities"
	83	[132]	CALL     	R8 2 2 ; R8 := R8(R9)
	84	[133]	GETGLOBAL	R9 K60 ; R9 := 0x2d0fad09
	85	[133]	LOADK    	R10 K65 ; R10 := "Lotus.Interface.UIStyleUtilities"
	86	[133]	CALL     	R9 2 2 ; R9 := R9(R10)
	87	[134]	GETGLOBAL	R10 K60 ; R10 := 0x2d0fad09
	88	[134]	LOADK    	R11 K66 ; R11 := "EE.Interface.AnchorMgr"
	89	[134]	CALL     	R10 2 2 ; R10 := R10(R11)
	90	[135]	GETGLOBAL	R11 K60 ; R11 := 0x2d0fad09
	91	[135]	LOADK    	R12 K67 ; R12 := "Lotus.Scripts.HudTrackers"
	92	[135]	CALL     	R11 2 2 ; R11 := R11(R12)
	93	[137]	GETGLOBAL	R12 K60 ; R12 := 0x2d0fad09
	94	[137]	LOADK    	R13 K68 ; R13 := "Lotus.Interface.CardUtilitiesRedux"
	95	[137]	CALL     	R12 2 2 ; R12 := R12(R13)
	96	[138]	GETGLOBAL	R13 K60 ; R13 := 0x2d0fad09
	97	[138]	LOADK    	R14 K69 ; R14 := "Lotus.Interface.Components.HealthAndShieldDisplay"
	98	[138]	CALL     	R13 2 2 ; R13 := R13(R14)
	99	[139]	GETGLOBAL	R14 K60 ; R14 := 0x2d0fad09
	100	[139]	LOADK    	R15 K70 ; R15 := "Lotus.Scripts.Libs.LandscapeLib"
	101	[139]	CALL     	R14 2 2 ; R14 := R14(R15)
	102	[141]	LOADNIL  	R15 R15 ; R15 := nil
	103	[143]	NEWTABLE 	R16 0 5 ; R16 := {}
	104	[143]	SETTABLE 	R16 K71 K16 ; R16["Fade"] := nil
	105	[143]	SETTABLE 	R16 K72 K51 ; R16["WaitingForProgressMovie"] := true
	106	[143]	SETTABLE 	R16 K73 K34 ; R16["TopMenuOpen"] := false
	107	[143]	SETTABLE 	R16 K74 K51 ; R16["mCanControlPlayerPanel"] := true
	108	[143]	SETTABLE 	R16 K75 K16 ; R16["HidePlayerPanel"] := nil
	109	[145]	NEWTABLE 	R17 0 1 ; R17 := {}
	110	[145]	SETTABLE 	R17 K76 K77 ; R17["offsetX"] := 125.000000
	111	[146]	LOADNIL  	R18 R18 ; R18 := nil
	112	[147]	NEWTABLE 	R19 0 4 ; R19 := {}
	113	[147]	SETTABLE 	R19 K78 K16 ; R19["InventoryController"] := nil
	114	[147]	SETTABLE 	R19 K79 K16 ; R19["DamageController"] := nil
	115	[147]	SETTABLE 	R19 K80 K16 ; R19["CameraController"] := nil
	116	[147]	SETTABLE 	R19 K81 K16 ; R19["InputController"] := nil
	117	[148]	LOADNIL  	R20 R21 ; R20 := R21 := nil
	118	[151]	NEWTABLE 	R22 0 0 ; R22 := {}
	119	[153]	NEWTABLE 	R23 0 3 ; R23 := {}
	120	[153]	SETTABLE 	R23 K82 K34 ; R23["mVisible"] := false
	121	[153]	SETTABLE 	R23 K83 K32 ; R23["mProgress"] := 0.000000
	122	[153]	SETTABLE 	R23 K84 K16 ; R23["mList"] := nil
	123	[155]	NEWTABLE 	R24 0 0 ; R24 := {}
	124	[157]	NEWTABLE 	R25 0 0 ; R25 := {}
	125	[159]	LOADNIL  	R26 R28 ; R26 := R27 := R28 := nil
	126	[162]	OP_LOADBOOL	R29 1 0 ; R29 := true
	127	[163]	LOADNIL  	R30 R35 ; R30 := R31 := R32 := R33 := R34 := R35 := nil
	128	[169]	NEWTABLE 	R36 0 0 ; R36 := {}
	129	[170]	OP_LOADBOOL	R37 0 0 ; R37 := false
	130	[172]	NEWTABLE 	R38 0 2 ; R38 := {}
	131	[172]	NEWTABLE 	R39 2 0 ; R39 := {}
	132	[172]	LOADK    	R40 := 0.000000
	133	[172]	LOADK    	R41 := 0.000000
	134	[172]	SETLIST  	R39 2 1 ; R39[(1-1)*FPF+i] := R(39+i), 1 <= i <= 2
	135	[172]	SETTABLE 	R38 K85 R39 ; R38["HudScalePadding"] := R39
	136	[172]	SETTABLE 	R38 K86 K87 ; R38["HudScale"] := 1.000000
	137	[173]	NEWTABLE 	R39 0 0 ; R39 := {}
	138	[174]	NEWTABLE 	R40 0 2 ; R40 := {}
	139	[174]	SETTABLE 	R40 K88 K16 ; R40["Health"] := nil
	140	[174]	SETTABLE 	R40 K89 K16 ; R40["Shield"] := nil
	141	[176]	NEWTABLE 	R41 0 2 ; R41 := {}
	142	[176]	SETTABLE 	R41 K90 K16 ; R41["ptr"] := nil
	143	[176]	SETTABLE 	R41 K91 K16 ; R41["impactBehavior"] := nil
	144	[179]	NEWTABLE 	R42 0 6 ; R42 := {}
	145	[179]	SETTABLE 	R42 K92 K34 ; R42["isEnabled"] := false
	146	[179]	SETTABLE 	R42 K93 K16 ; R42["timer"] := nil
	147	[179]	SETTABLE 	R42 K94 K32 ; R42["timerId"] := 0.000000
	148	[179]	SETTABLE 	R42 K95 K54 ; R42["prevMinute"] := -1.000000
	149	[179]	SETTABLE 	R42 K96 K32 ; R42["mTotalTime"] := 0.000000
	150	[179]	SETTABLE 	R42 K97 K7 ; R42["currentText"] := ""
	151	[181]	NEWTABLE 	R43 0 0 ; R43 := {}
	152	[184]	LOADNIL  	R44 R45 ; R44 := R45 := nil
	153	[188]	NEWTABLE 	R46 0 0 ; R46 := {}
	154	[189]	NEWTABLE 	R47 0 0 ; R47 := {}
	155	[191]	LOADNIL  	R48 R48 ; R48 := nil
	156	[193]	NEWTABLE 	R49 0 3 ; R49 := {}
	157	[193]	SETTABLE 	R49 K98 K34 ; R49["hasCheckedForStatusEffects"] := false
	158	[193]	SETTABLE 	R49 K99 K100 ; R49["effectCheckRetry"] := 5.000000
	159	[193]	SETTABLE 	R49 K101 K16 ; R49["effectOverride"] := nil
	160	[195]	NEWTABLE 	R50 0 0 ; R50 := {}
	161	[197]	LOADNIL  	R51 R51 ; R51 := nil
	162	[198]	NEWTABLE 	R52 0 0 ; R52 := {}
	163	[199]	LOADNIL  	R53 R54 ; R53 := R54 := nil
	164	[201]	NEWTABLE 	R55 0 2 ; R55 := {}
	165	[201]	NEWTABLE 	R56 0 0 ; R56 := {}
	166	[201]	SETTABLE 	R55 K102 R56 ; R55["Buffs"] := R56
	167	[201]	SETTABLE 	R55 K103 K34 ; R55["Cached"] := false
	168	[203]	NEWTABLE 	R56 0 0 ; R56 := {}
	169	[204]	LOADNIL  	R57 R57 ; R57 := nil
	170	[206]	NEWTABLE 	R58 0 0 ; R58 := {}
	171	[208]	LOADNIL  	R59 R59 ; R59 := nil
	172	[209]	LOADK    	R60 := 0.000000
	173	[211]	NEWTABLE 	R61 13 0 ; R61 := {}
	174	[212]	LOADK    	R62 K104 ; R62 := "DT_IMPACT"
	175	[213]	LOADK    	R63 K105 ; R63 := "DT_PUNCTURE"
	176	[214]	LOADK    	R64 K106 ; R64 := "DT_SLASH"
	177	[215]	LOADK    	R65 K107 ; R65 := "DT_FIRE"
	178	[216]	LOADK    	R66 K108 ; R66 := "DT_FREEZE"
	179	[217]	LOADK    	R67 K109 ; R67 := "DT_ELECTRICITY"
	180	[218]	LOADK    	R68 K110 ; R68 := "DT_POISON"
	181	[219]	LOADK    	R69 K111 ; R69 := "DT_EXPLOSION"
	182	[220]	LOADK    	R70 K112 ; R70 := "DT_RADIATION"
	183	[221]	LOADK    	R71 K113 ; R71 := "DT_GAS"
	184	[222]	LOADK    	R72 K114 ; R72 := "DT_MAGNETIC"
	185	[223]	LOADK    	R73 K115 ; R73 := "DT_VIRAL"
	186	[225]	LOADK    	R74 K116 ; R74 := "DT_CORROSIVE"
	187	[225]	SETLIST  	R61 13 1 ; R61[(1-1)*FPF+i] := R(61+i), 1 <= i <= 13
	188	[227]	OP_LOADBOOL	R62 0 0 ; R62 := false
	189	[229]	OP_LOADBOOL	R63 0 0 ; R63 := false
	190	[231]	LOADNIL  	R64 R64 ; R64 := nil
	191	[233]	NEWTABLE 	R65 0 2 ; R65 := {}
	192	[233]	SETTABLE 	R65 K117 K16 ; R65["CurrentValue"] := nil
	193	[233]	SETTABLE 	R65 K118 K34 ; R65["Draining"] := false
	194	[235]	LOADNIL  	R66 R66 ; R66 := nil
	195	[236]	LOADK    	R67 := 0.000000
	196	[237]	LOADNIL  	R68 R68 ; R68 := nil
	197	[238]	OP_LOADBOOL	R69 0 0 ; R69 := false
	198	[240]	NEWTABLE 	R70 0 5 ; R70 := {}
	199	[240]	SETTABLE 	R70 K119 K34 ; R70["Enabled"] := false
	200	[240]	NEWTABLE 	R71 0 0 ; R71 := {}
	201	[240]	SETTABLE 	R70 K120 R71 ; R70["Faded"] := R71
	202	[240]	NEWTABLE 	R71 0 0 ; R71 := {}
	203	[240]	SETTABLE 	R70 K121 R71 ; R70["Interpolating"] := R71
	204	[241]	NEWTABLE 	R71 24 0 ; R71 := {}
	205	[241]	LOADK    	R72 K123 ; R72 := "MiniMapContainer"
	206	[241]	LOADK    	R73 K124 ; R73 := "HudTracker"
	207	[241]	LOADK    	R74 K125 ; R74 := "HealthAndShield"
	208	[241]	LOADK    	R75 K126 ; R75 := "WeaponFrame"
	209	[241]	LOADK    	R76 K127 ; R76 := "AbilityPanel"
	210	[241]	LOADK    	R77 K128 ; R77 := "Card"
	211	[241]	LOADK    	R78 K129 ; R78 := "StandingGain"
	212	[241]	LOADK    	R79 K130 ; R79 := "PvPHeldFlagTimer"
	213	[242]	LOADK    	R80 K131 ; R80 := "MiniGameScore"
	214	[242]	LOADK    	R81 K132 ; R81 := "BorderBox"
	215	[242]	LOADK    	R82 K133 ; R82 := "QuestMessage"
	216	[242]	LOADK    	R83 K134 ; R83 := "GenericMessage"
	217	[242]	LOADK    	R84 K135 ; R84 := "LogMessageContainer"
	218	[242]	LOADK    	R85 K136 ; R85 := "Prompt"
	219	[242]	LOADK    	R86 K137 ; R86 := "DamageIndicator"
	220	[243]	LOADK    	R87 K138 ; R87 := "Reticle"
	221	[243]	LOADK    	R88 K139 ; R88 := "Reticle.Arm1"
	222	[243]	LOADK    	R89 K140 ; R89 := "ReticleCustom"
	223	[243]	LOADK    	R90 K141 ; R90 := "SuccessfulHitNotification"
	224	[243]	LOADK    	R91 K142 ; R91 := "reloadTimer"
	225	[243]	LOADK    	R92 K143 ; R92 := "AbilityChargeProgress"
	226	[243]	LOADK    	R93 K144 ; R93 := "AbilityDots"
	227	[243]	LOADK    	R94 K145 ; R94 := "Stamina"
	228	[243]	LOADK    	R95 K146 ; R95 := "GameplayMessage"
	229	[243]	LOADK    	R96 K147 ; R96 := "PainLeft"
	230	[244]	LOADK    	R97 K148 ; R97 := "PainRight"
	231	[244]	LOADK    	R98 K149 ; R98 := "PainTop"
	232	[244]	LOADK    	R99 K150 ; R99 := "PainBottom"
	233	[244]	LOADK    	R100 K151 ; R100 := "SlamIndicator"
	234	[244]	LOADK    	R101 K152 ; R101 := "MiniMapOverlayMsg"
	235	[244]	LOADK    	R102 K153 ; R102 := "StancePanel"
	236	[244]	SETLIST  	R71 31 1 ; R71[(1-1)*FPF+i] := R(71+i), 1 <= i <= 31
	237	[244]	SETTABLE 	R70 K122 R71 ; R70["Clips"] := R71
	238	[245]	NEWTABLE 	R71 0 4 ; R71 := {}
	239	[245]	SETTABLE 	R71 K147 K51 ; R71["PainLeft"] := true
	240	[245]	SETTABLE 	R71 K148 K51 ; R71["PainRight"] := true
	241	[245]	SETTABLE 	R71 K149 K51 ; R71["PainTop"] := true
	242	[245]	SETTABLE 	R71 K150 K51 ; R71["PainBottom"] := true
	243	[245]	SETTABLE 	R70 K154 R71 ; R70["AutoClips"] := R71
	244	[248]	NEWTABLE 	R71 0 4 ; R71 := {}
	245	[248]	SETTABLE 	R71 K155 K16 ; R71["VoidTearTracker"] := nil
	246	[248]	SETTABLE 	R71 K156 K16 ; R71["VoidTearTitleTracker"] := nil
	247	[248]	SETTABLE 	R71 K157 K16 ; R71["VoidTearListTracker"] := nil
	248	[248]	SETTABLE 	R71 K158 K16 ; R71["TimerOfInterest"] := nil
	249	[250]	NEWTABLE 	R72 0 2 ; R72 := {}
	250	[250]	SETTABLE 	R72 K159 K34 ; R72["DarkSector"] := false
	251	[250]	SETTABLE 	R72 K160 K34 ; R72["PhotoBooth"] := false
	252	[252]	LOADNIL  	R73 R73 ; R73 := nil
	253	[254]	LOADK    	R74 := 0.000000
	254	[258]	NEWTABLE 	R75 0 7 ; R75 := {}
	255	[258]	SETTABLE 	R75 K161 K34 ; R75["Active"] := false
	256	[258]	SETTABLE 	R75 K162 K16 ; R75["IsNight"] := nil
	257	[258]	SETTABLE 	R75 K163 K87 ; R75["TransitionEpsilon"] := 1.000000
	258	[258]	SETTABLE 	R75 K164 K34 ; R75["Visible"] := false
	259	[258]	SETTABLE 	R75 K165 K34 ; R75["Landscape"] := false
	260	[258]	SETTABLE 	R75 K166 K32 ; R75["DayCount"] := 0.000000
	261	[258]	SETTABLE 	R75 K167 K32 ; R75["GameTimeAtDusk"] := 0.000000
	262	[260]	NEWTABLE 	R76 0 8 ; R76 := {}
	263	[261]	SETTABLE 	R76 K168 K16 ; R76["deco"] := nil
	264	[262]	SETTABLE 	R76 K169 K16 ; R76["avatar"] := nil
	265	[263]	SETTABLE 	R76 K170 K16 ; R76["hitProxy"] := nil
	266	[264]	SETTABLE 	R76 K171 K34 ; R76["valid"] := false
	267	[265]	SETTABLE 	R76 K172 K16 ; R76["name"] := nil
	268	[266]	SETTABLE 	R76 K173 K16 ; R76["player"] := nil
	269	[267]	SETTABLE 	R76 K174 K34 ; R76["sameFaction"] := false
	270	[268]	SETTABLE 	R76 K175 K16 ; R76["desc"] := nil
	271	[271]	GETGLOBAL	R77 K176 ; R77 := 0x0469f296
	272	[271]	LOADK    	R78 K177 ; R78 := "Hostage"
	273	[271]	CALL     	R77 2 2 ; R77 := R77(R78)
	274	[273]	LOADNIL  	R78 R79 ; R78 := R79 := nil
	275	[278]	CLOSURE  	R80 0 ; R80 := closure(Function #1)
	276	[278]	MOVE     	R0 R46 ; R0 := R46
	277	[276]	SETGLOBAL	R80 K178 ; GetCards := R80
	278	[283]	CLOSURE  	R80 1 ; R80 := closure(Function #2)
	279	[281]	SETGLOBAL	R80 K179 ; GetSelectedCards := R80
	280	[287]	CLOSURE  	R80 2 ; R80 := closure(Function #3)
	281	[287]	MOVE     	R0 R11 ; R0 := R11
	282	[304]	CLOSURE  	R81 3 ; R81 := closure(Function #4)
	283	[304]	MOVE     	R0 R4 ; R0 := R4
	284	[304]	MOVE     	R0 R3 ; R0 := R3
	285	[332]	CLOSURE  	R82 4 ; R82 := closure(Function #5)
	286	[339]	CLOSURE  	R83 5 ; R83 := closure(Function #6)
	287	[339]	MOVE     	R0 R34 ; R0 := R34
	288	[383]	CLOSURE  	R84 6 ; R84 := closure(Function #7)
	289	[383]	MOVE     	R0 R33 ; R0 := R33
	290	[383]	MOVE     	R0 R74 ; R0 := R74
	291	[383]	MOVE     	R0 R25 ; R0 := R25
	292	[387]	CLOSURE  	R85 7 ; R85 := closure(Function #8)
	293	[387]	MOVE     	R0 R11 ; R0 := R11
	294	[385]	SETGLOBAL	R85 K180 ; SortHudTrackers := R85
	295	[391]	CLOSURE  	R85 8 ; R85 := closure(Function #9)
	296	[391]	MOVE     	R0 R11 ; R0 := R11
	297	[395]	CLOSURE  	R86 9 ; R86 := closure(Function #10)
	298	[395]	MOVE     	R0 R11 ; R0 := R11
	299	[417]	CLOSURE  	R87 10 ; R87 := closure(Function #11)
	300	[417]	MOVE     	R0 R8 ; R0 := R8
	301	[399]	SETGLOBAL	R87 K181 ; ShowQuestMessage := R87
	302	[423]	CLOSURE  	R87 11 ; R87 := closure(Function #12)
	303	[419]	SETGLOBAL	R87 K182 ; HideQuestMessage := R87
	304	[438]	CLOSURE  	R87 12 ; R87 := closure(Function #13)
	305	[438]	MOVE     	R0 R8 ; R0 := R8
	306	[443]	CLOSURE  	R88 13 ; R88 := closure(Function #14)
	307	[443]	MOVE     	R0 R42 ; R0 := R42
	308	[443]	MOVE     	R0 R18 ; R0 := R18
	309	[550]	CLOSURE  	R89 14 ; R89 := closure(Function #15)
	310	[550]	MOVE     	R0 R42 ; R0 := R42
	311	[550]	MOVE     	R0 R8 ; R0 := R8
	312	[550]	MOVE     	R0 R32 ; R0 := R32
	313	[550]	MOVE     	R0 R88 ; R0 := R88
	314	[550]	MOVE     	R0 R18 ; R0 := R18
	315	[550]	MOVE     	R0 R80 ; R0 := R80
	316	[558]	CLOSURE  	R90 15 ; R90 := closure(Function #16)
	317	[558]	MOVE     	R0 R8 ; R0 := R8
	318	[552]	SETGLOBAL	R90 K183 ; AnimateTyping := R90
	319	[567]	CLOSURE  	R90 16 ; R90 := closure(Function #17)
	320	[567]	MOVE     	R0 R17 ; R0 := R17
	321	[574]	CLOSURE  	R91 17 ; R91 := closure(Function #18)
	322	[574]	MOVE     	R0 R26 ; R0 := R26
	323	[569]	SETGLOBAL	R91 K184 ; HideReticle := R91
	324	[581]	CLOSURE  	R91 18 ; R91 := closure(Function #19)
	325	[581]	MOVE     	R0 R26 ; R0 := R26
	326	[581]	MOVE     	R0 R19 ; R0 := R19
	327	[589]	CLOSURE  	R92 19 ; R92 := closure(Function #20)
	328	[589]	MOVE     	R0 R91 ; R0 := R91
	329	[583]	SETGLOBAL	R92 K185 ; ShowReticle := R92
	330	[605]	CLOSURE  	R92 20 ; R92 := closure(Function #21)
	331	[605]	MOVE     	R0 R4 ; R0 := R4
	332	[605]	MOVE     	R0 R26 ; R0 := R26
	333	[591]	SETGLOBAL	R92 K186 ; SetReticleVisible := R92
	334	[611]	CLOSURE  	R92 21 ; R92 := closure(Function #22)
	335	[611]	MOVE     	R0 R27 ; R0 := R27
	336	[607]	SETGLOBAL	R92 K187 ; SuppressDamageIndicators := R92
	337	[615]	CLOSURE  	R92 22 ; R92 := closure(Function #23)
	338	[613]	SETGLOBAL	R92 K188 ; HideAffinity := R92
	339	[619]	CLOSURE  	R92 23 ; R92 := closure(Function #24)
	340	[617]	SETGLOBAL	R92 K189 ; ShowAffinity := R92
	341	[623]	CLOSURE  	R92 24 ; R92 := closure(Function #25)
	342	[623]	MOVE     	R0 R27 ; R0 := R27
	343	[621]	SETGLOBAL	R92 K190 ; HideAbilityDots := R92
	344	[627]	CLOSURE  	R92 25 ; R92 := closure(Function #26)
	345	[627]	MOVE     	R0 R27 ; R0 := R27
	346	[625]	SETGLOBAL	R92 K191 ; ShowAbilityDots := R92
	347	[647]	CLOSURE  	R92 26 ; R92 := closure(Function #27)
	348	[647]	MOVE     	R0 R38 ; R0 := R38
	349	[647]	MOVE     	R0 R5 ; R0 := R5
	350	[647]	MOVE     	R0 R15 ; R0 := R15
	351	[647]	MOVE     	R0 R27 ; R0 := R27
	352	[647]	MOVE     	R0 R25 ; R0 := R25
	353	[689]	CLOSURE  	R93 27 ; R93 := closure(Function #28)
	354	[689]	MOVE     	R0 R38 ; R0 := R38
	355	[697]	CLOSURE  	R94 28 ; R94 := closure(Function #29)
	356	[697]	MOVE     	R0 R93 ; R0 := R93
	357	[697]	MOVE     	R0 R92 ; R0 := R92
	358	[692]	SETGLOBAL	R94 K192 ; onViewportSizeChanged := R94
	359	[717]	CLOSURE  	R94 29 ; R94 := closure(Function #30)
	360	[727]	CLOSURE  	R95 30 ; R95 := closure(Function #31)
	361	[727]	MOVE     	R0 R58 ; R0 := R58
	362	[727]	MOVE     	R0 R94 ; R0 := R94
	363	[727]	SETTABLE 	R58 K193 R95 ; R58["IsBuffEqual"] := R95
	364	[831]	CLOSURE  	R95 31 ; R95 := closure(Function #32)
	365	[831]	MOVE     	R0 R53 ; R0 := R53
	366	[831]	MOVE     	R0 R30 ; R0 := R30
	367	[831]	MOVE     	R0 R28 ; R0 := R28
	368	[831]	MOVE     	R0 R58 ; R0 := R58
	369	[831]	MOVE     	R0 R37 ; R0 := R37
	370	[831]	MOVE     	R0 R51 ; R0 := R51
	371	[889]	CLOSURE  	R96 32 ; R96 := closure(Function #33)
	372	[889]	MOVE     	R0 R53 ; R0 := R53
	373	[889]	MOVE     	R0 R30 ; R0 := R30
	374	[889]	MOVE     	R0 R94 ; R0 := R94
	375	[889]	MOVE     	R0 R51 ; R0 := R51
	376	[897]	CLOSURE  	R97 33 ; R97 := closure(Function #34)
	377	[897]	MOVE     	R0 R27 ; R0 := R27
	378	[901]	CLOSURE  	R98 34 ; R98 := closure(Function #35)
	379	[901]	MOVE     	R0 R27 ; R0 := R27
	380	[908]	CLOSURE  	R99 35 ; R99 := closure(Function #36)
	381	[908]	MOVE     	R0 R6 ; R0 := R6
	382	[903]	SETGLOBAL	R99 K194 ; PlayFocusActivatedFX := R99
	383	[912]	CLOSURE  	R99 36 ; R99 := closure(Function #37)
	384	[912]	MOVE     	R0 R27 ; R0 := R27
	385	[958]	CLOSURE  	R100 37 ; R100 := closure(Function #38)
	386	[958]	MOVE     	R0 R4 ; R0 := R4
	387	[958]	MOVE     	R0 R82 ; R0 := R82
	388	[958]	MOVE     	R0 R26 ; R0 := R26
	389	[958]	MOVE     	R0 R27 ; R0 := R27
	390	[958]	MOVE     	R0 R57 ; R0 := R57
	391	[958]	MOVE     	R0 R51 ; R0 := R51
	392	[914]	SETGLOBAL	R100 K195 ; Shutdown := R100
	393	[983]	CLOSURE  	R100 38 ; R100 := closure(Function #39)
	394	[983]	MOVE     	R0 R27 ; R0 := R27
	395	[998]	CLOSURE  	R101 39 ; R101 := closure(Function #40)
	396	[998]	MOVE     	R0 R28 ; R0 := R28
	397	[998]	MOVE     	R0 R27 ; R0 := R27
	398	[998]	MOVE     	R0 R100 ; R0 := R100
	399	[1004]	CLOSURE  	R102 40 ; R102 := closure(Function #41)
	400	[1000]	SETGLOBAL	R102 K196 ; OnIconReady := R102
	401	[1011]	CLOSURE  	R102 41 ; R102 := closure(Function #42)
	402	[1006]	SETGLOBAL	R102 K197 ; ForceShowMysteryPrize := R102
	403	[1031]	CLOSURE  	R102 42 ; R102 := closure(Function #43)
	404	[1031]	MOVE     	R0 R81 ; R0 := R81
	405	[1013]	SETGLOBAL	R102 K198 ; ShowEncounterReward := R102
	406	[1051]	CLOSURE  	R102 43 ; R102 := closure(Function #44)
	407	[1051]	MOVE     	R0 R32 ; R0 := R32
	408	[1069]	CLOSURE  	R103 44 ; R103 := closure(Function #45)
	409	[1069]	MOVE     	R0 R15 ; R0 := R15
	410	[1053]	SETGLOBAL	R103 K199 ; UpdateLogMessageContainerY := R103
	411	[1076]	CLOSURE  	R103 45 ; R103 := closure(Function #46)
	412	[1076]	MOVE     	R0 R39 ; R0 := R39
	413	[1072]	SETGLOBAL	R103 K200 ; ShowGameplayMessage := R103
	414	[1078]	NEWTABLE 	R103 0 0 ; R103 := {}
	415	[1082]	CLOSURE  	R104 46 ; R104 := closure(Function #47)
	416	[1082]	MOVE     	R0 R103 ; R0 := R103
	417	[1080]	SETGLOBAL	R104 K201 ; ResetBuddyEffects := R104
	418	[1087]	CLOSURE  	R104 47 ; R104 := closure(Function #48)
	419	[1087]	MOVE     	R0 R104 ; R0 := R104
	420	[1092]	CLOSURE  	R78 48 ; R78 := closure(Function #49)
	421	[1092]	MOVE     	R0 R4 ; R0 := R4
	422	[1092]	MOVE     	R0 R6 ; R0 := R6
	423	[1117]	CLOSURE  	R105 49 ; R105 := closure(Function #50)
	424	[1117]	MOVE     	R0 R32 ; R0 := R32
	425	[1117]	MOVE     	R0 R4 ; R0 := R4
	426	[1117]	MOVE     	R0 R6 ; R0 := R6
	427	[1117]	MOVE     	R0 R78 ; R0 := R78
	428	[1117]	MOVE     	R0 R11 ; R0 := R11
	429	[1140]	CLOSURE  	R106 50 ; R106 := closure(Function #51)
	430	[1140]	MOVE     	R0 R27 ; R0 := R27
	431	[1140]	MOVE     	R0 R41 ; R0 := R41
	432	[1140]	MOVE     	R0 R4 ; R0 := R4
	433	[1180]	CLOSURE  	R107 51 ; R107 := closure(Function #52)
	434	[1180]	MOVE     	R0 R27 ; R0 := R27
	435	[1180]	MOVE     	R0 R41 ; R0 := R41
	436	[1180]	MOVE     	R0 R106 ; R0 := R106
	437	[1180]	MOVE     	R0 R79 ; R0 := R79
	438	[1180]	MOVE     	R0 R26 ; R0 := R26
	439	[1180]	MOVE     	R0 R16 ; R0 := R16
	440	[1180]	MOVE     	R0 R8 ; R0 := R8
	441	[1180]	MOVE     	R0 R6 ; R0 := R6
	442	[1180]	MOVE     	R0 R57 ; R0 := R57
	443	[1192]	CLOSURE  	R108 52 ; R108 := closure(Function #53)
	444	[1192]	MOVE     	R0 R61 ; R0 := R61
	445	[1305]	CLOSURE  	R109 53 ; R109 := closure(Function #54)
	446	[1305]	MOVE     	R0 R52 ; R0 := R52
	447	[1305]	MOVE     	R0 R8 ; R0 := R8
	448	[1305]	MOVE     	R0 R108 ; R0 := R108
	449	[1305]	MOVE     	R0 R19 ; R0 := R19
	450	[1305]	MOVE     	R0 R30 ; R0 := R30
	451	[1305]	MOVE     	R0 R53 ; R0 := R53
	452	[1305]	MOVE     	R0 R61 ; R0 := R61
	453	[1305]	MOVE     	R0 R21 ; R0 := R21
	454	[1305]	MOVE     	R0 R20 ; R0 := R20
	455	[1422]	CLOSURE  	R110 54 ; R110 := closure(Function #55)
	456	[1422]	MOVE     	R0 R55 ; R0 := R55
	457	[1422]	MOVE     	R0 R53 ; R0 := R53
	458	[1422]	MOVE     	R0 R4 ; R0 := R4
	459	[1422]	MOVE     	R0 R37 ; R0 := R37
	460	[1422]	MOVE     	R0 R26 ; R0 := R26
	461	[1422]	MOVE     	R0 R95 ; R0 := R95
	462	[1422]	MOVE     	R0 R96 ; R0 := R96
	463	[1422]	MOVE     	R0 R30 ; R0 := R30
	464	[1422]	MOVE     	R0 R8 ; R0 := R8
	465	[1422]	MOVE     	R0 R102 ; R0 := R102
	466	[1427]	CLOSURE  	R111 55 ; R111 := closure(Function #56)
	467	[1425]	SETGLOBAL	R111 K202 ; SetForceLocalRespawn := R111
	468	[1438]	CLOSURE  	R111 56 ; R111 := closure(Function #57)
	469	[1438]	MOVE     	R0 R15 ; R0 := R15
	470	[1430]	SETGLOBAL	R111 K203 ; RegisterToAnchorMgr := R111
	471	[1443]	CLOSURE  	R111 57 ; R111 := closure(Function #58)
	472	[1443]	MOVE     	R0 R15 ; R0 := R15
	473	[1441]	SETGLOBAL	R111 K204 ; UnregisterFromAnchorMgr := R111
	474	[1454]	CLOSURE  	R111 58 ; R111 := closure(Function #59)
	475	[1454]	MOVE     	R0 R52 ; R0 := R52
	476	[1463]	CLOSURE  	R112 59 ; R112 := closure(Function #60)
	477	[1463]	MOVE     	R0 R52 ; R0 := R52
	478	[1520]	CLOSURE  	R113 60 ; R113 := closure(Function #61)
	479	[1520]	MOVE     	R0 R20 ; R0 := R20
	480	[1520]	MOVE     	R0 R19 ; R0 := R19
	481	[1520]	MOVE     	R0 R49 ; R0 := R49
	482	[1520]	MOVE     	R0 R54 ; R0 := R54
	483	[1520]	MOVE     	R0 R112 ; R0 := R112
	484	[1520]	MOVE     	R0 R111 ; R0 := R111
	485	[1535]	CLOSURE  	R114 61 ; R114 := closure(Function #62)
	486	[1535]	MOVE     	R0 R111 ; R0 := R111
	487	[1535]	MOVE     	R0 R112 ; R0 := R112
	488	[1522]	SETGLOBAL	R114 K205 ; ConditionalUpgradeChanged := R114
	489	[1537]	LOADNIL  	R114 R114 ; R114 := nil
	490	[1542]	CLOSURE  	R115 62 ; R115 := closure(Function #63)
	491	[1542]	MOVE     	R0 R114 ; R0 := R114
	492	[1542]	MOVE     	R0 R27 ; R0 := R27
	493	[1568]	CLOSURE  	R116 63 ; R116 := closure(Function #64)
	494	[1568]	MOVE     	R0 R46 ; R0 := R46
	495	[1568]	MOVE     	R0 R12 ; R0 := R12
	496	[1568]	MOVE     	R0 R47 ; R0 := R47
	497	[1568]	MOVE     	R0 R8 ; R0 := R8
	498	[1568]	MOVE     	R0 R27 ; R0 := R27
	499	[1578]	CLOSURE  	R117 64 ; R117 := closure(Function #65)
	500	[1578]	MOVE     	R0 R114 ; R0 := R114
	501	[1587]	CLOSURE  	R118 65 ; R118 := closure(Function #66)
	502	[1587]	MOVE     	R0 R117 ; R0 := R117
	503	[1580]	SETGLOBAL	R118 K206 ; HandleModFound := R118
	504	[1622]	CLOSURE  	R118 66 ; R118 := closure(Function #67)
	505	[1622]	MOVE     	R0 R114 ; R0 := R114
	506	[1622]	MOVE     	R0 R4 ; R0 := R4
	507	[1622]	MOVE     	R0 R116 ; R0 := R116
	508	[1622]	MOVE     	R0 R47 ; R0 := R47
	509	[1622]	MOVE     	R0 R12 ; R0 := R12
	510	[1622]	MOVE     	R0 R115 ; R0 := R115
	511	[1630]	CLOSURE  	R119 67 ; R119 := closure(Function #68)
	512	[1630]	MOVE     	R0 R4 ; R0 := R4
	513	[1630]	MOVE     	R0 R6 ; R0 := R6
	514	[1624]	SETGLOBAL	R119 K207 ; CreateNotificationParticles := R119
	515	[1648]	CLOSURE  	R119 68 ; R119 := closure(Function #69)
	516	[1648]	MOVE     	R0 R4 ; R0 := R4
	517	[1648]	MOVE     	R0 R27 ; R0 := R27
	518	[1632]	SETGLOBAL	R119 K208 ; ShowNotification := R119
	519	[1653]	CLOSURE  	R119 69 ; R119 := closure(Function #70)
	520	[1653]	MOVE     	R0 R17 ; R0 := R17
	521	[1661]	CLOSURE  	R120 70 ; R120 := closure(Function #71)
	522	[1661]	MOVE     	R0 R17 ; R0 := R17
	523	[1661]	MOVE     	R0 R119 ; R0 := R119
	524	[1673]	CLOSURE  	R121 71 ; R121 := closure(Function #72)
	525	[1673]	MOVE     	R0 R120 ; R0 := R120
	526	[1664]	SETGLOBAL	R121 K209 ; NotifyAbilityChange := R121
	527	[1677]	CLOSURE  	R121 72 ; R121 := closure(Function #73)
	528	[1677]	MOVE     	R0 R42 ; R0 := R42
	529	[1677]	MOVE     	R0 R18 ; R0 := R18
	530	[1705]	CLOSURE  	R122 73 ; R122 := closure(Function #74)
	531	[1705]	MOVE     	R0 R120 ; R0 := R120
	532	[1705]	MOVE     	R0 R8 ; R0 := R8
	533	[1705]	MOVE     	R0 R56 ; R0 := R56
	534	[1705]	MOVE     	R0 R4 ; R0 := R4
	535	[1705]	MOVE     	R0 R29 ; R0 := R29
	536	[1705]	MOVE     	R0 R42 ; R0 := R42
	537	[1705]	MOVE     	R0 R121 ; R0 := R121
	538	[1680]	SETGLOBAL	R122 K210 ; NotifyAbilityActivate := R122
	539	[1726]	CLOSURE  	R122 74 ; R122 := closure(Function #75)
	540	[1726]	MOVE     	R0 R120 ; R0 := R120
	541	[1726]	MOVE     	R0 R27 ; R0 := R27
	542	[1726]	MOVE     	R0 R8 ; R0 := R8
	543	[1708]	SETGLOBAL	R122 K211 ; NotifyAbilityActivateError := R122
	544	[1740]	CLOSURE  	R122 75 ; R122 := closure(Function #76)
	545	[1740]	MOVE     	R0 R4 ; R0 := R4
	546	[1740]	MOVE     	R0 R8 ; R0 := R8
	547	[1740]	MOVE     	R0 R56 ; R0 := R56
	548	[1728]	SETGLOBAL	R122 K212 ; OnAbilityHighlight := R122
	549	[1757]	CLOSURE  	R122 76 ; R122 := closure(Function #77)
	550	[1757]	MOVE     	R0 R4 ; R0 := R4
	551	[1774]	CLOSURE  	R123 77 ; R123 := closure(Function #78)
	552	[1774]	MOVE     	R0 R4 ; R0 := R4
	553	[1774]	MOVE     	R0 R8 ; R0 := R8
	554	[1800]	CLOSURE  	R124 78 ; R124 := closure(Function #79)
	555	[1800]	MOVE     	R0 R4 ; R0 := R4
	556	[1800]	MOVE     	R0 R27 ; R0 := R27
	557	[1814]	CLOSURE  	R125 79 ; R125 := closure(Function #80)
	558	[1814]	MOVE     	R0 R15 ; R0 := R15
	559	[1814]	MOVE     	R0 R38 ; R0 := R38
	560	[1872]	CLOSURE  	R126 80 ; R126 := closure(Function #81)
	561	[1872]	MOVE     	R0 R15 ; R0 := R15
	562	[1872]	MOVE     	R0 R65 ; R0 := R65
	563	[1872]	MOVE     	R0 R8 ; R0 := R8
	564	[1872]	MOVE     	R0 R27 ; R0 := R27
	565	[1872]	MOVE     	R0 R125 ; R0 := R125
	566	[1872]	MOVE     	R0 R38 ; R0 := R38
	567	[1872]	MOVE     	R0 R25 ; R0 := R25
	568	[1816]	SETGLOBAL	R126 K213 ; UpdateFocusAnchor := R126
	569	[1891]	CLOSURE  	R126 81 ; R126 := closure(Function #82)
	570	[1891]	MOVE     	R0 R4 ; R0 := R4
	571	[1891]	MOVE     	R0 R33 ; R0 := R33
	572	[1891]	MOVE     	R0 R62 ; R0 := R62
	573	[1891]	MOVE     	R0 R27 ; R0 := R27
	574	[1891]	MOVE     	R0 R30 ; R0 := R30
	575	[1901]	CLOSURE  	R127 82 ; R127 := closure(Function #83)
	576	[1901]	MOVE     	R0 R4 ; R0 := R4
	577	[1901]	MOVE     	R0 R27 ; R0 := R27
	578	[1901]	MOVE     	R0 R62 ; R0 := R62
	579	[1901]	MOVE     	R0 R33 ; R0 := R33
	580	[1918]	CLOSURE  	R128 83 ; R128 := closure(Function #84)
	581	[1918]	MOVE     	R0 R51 ; R0 := R51
	582	[1918]	MOVE     	R0 R27 ; R0 := R27
	583	[1927]	CLOSURE  	R129 84 ; R129 := closure(Function #85)
	584	[1927]	MOVE     	R0 R8 ; R0 := R8
	585	[1922]	SETGLOBAL	R129 K214 ; ToggleChatWindow := R129
	586	[1935]	CLOSURE  	R129 85 ; R129 := closure(Function #86)
	587	[1940]	CLOSURE  	R130 86 ; R130 := closure(Function #87)
	588	[1940]	MOVE     	R0 R4 ; R0 := R4
	589	[1938]	SETGLOBAL	R130 K215 ; OnPlayersChanged := R130
	590	[2007]	CLOSURE  	R130 87 ; R130 := closure(Function #88)
	591	[2007]	MOVE     	R0 R4 ; R0 := R4
	592	[2007]	MOVE     	R0 R51 ; R0 := R51
	593	[2007]	MOVE     	R0 R32 ; R0 := R32
	594	[2007]	MOVE     	R0 R43 ; R0 := R43
	595	[2007]	MOVE     	R0 R27 ; R0 := R27
	596	[2007]	MOVE     	R0 R22 ; R0 := R22
	597	[2007]	MOVE     	R0 R58 ; R0 := R58
	598	[2007]	MOVE     	R0 R129 ; R0 := R129
	599	[2007]	MOVE     	R0 R6 ; R0 := R6
	600	[2007]	MOVE     	R0 R8 ; R0 := R8
	601	[2007]	MOVE     	R0 R26 ; R0 := R26
	602	[2062]	CLOSURE  	R131 88 ; R131 := closure(Function #89)
	603	[2062]	MOVE     	R0 R28 ; R0 := R28
	604	[2062]	MOVE     	R0 R71 ; R0 := R71
	605	[2062]	MOVE     	R0 R86 ; R0 := R86
	606	[2062]	MOVE     	R0 R6 ; R0 := R6
	607	[2062]	MOVE     	R0 R18 ; R0 := R18
	608	[2062]	MOVE     	R0 R80 ; R0 := R80
	609	[2062]	MOVE     	R0 R85 ; R0 := R85
	610	[2096]	CLOSURE  	R132 89 ; R132 := closure(Function #90)
	611	[2096]	MOVE     	R0 R6 ; R0 := R6
	612	[2096]	MOVE     	R0 R27 ; R0 := R27
	613	[2096]	MOVE     	R0 R4 ; R0 := R4
	614	[2066]	SETGLOBAL	R132 K216 ; ShowTransmission := R132
	615	[2100]	CLOSURE  	R132 90 ; R132 := closure(Function #91)
	616	[2158]	CLOSURE  	R133 91 ; R133 := closure(Function #92)
	617	[2158]	MOVE     	R0 R28 ; R0 := R28
	618	[2158]	MOVE     	R0 R76 ; R0 := R76
	619	[2158]	MOVE     	R0 R4 ; R0 := R4
	620	[2158]	MOVE     	R0 R6 ; R0 := R6
	621	[2158]	MOVE     	R0 R77 ; R0 := R77
	622	[2158]	MOVE     	R0 R132 ; R0 := R132
	623	[2158]	MOVE     	R0 R78 ; R0 := R78
	624	[2158]	MOVE     	R0 R32 ; R0 := R32
	625	[2158]	MOVE     	R0 R129 ; R0 := R129
	626	[2178]	CLOSURE  	R134 92 ; R134 := closure(Function #93)
	627	[2178]	MOVE     	R0 R28 ; R0 := R28
	628	[2178]	MOVE     	R0 R76 ; R0 := R76
	629	[2178]	MOVE     	R0 R6 ; R0 := R6
	630	[2178]	MOVE     	R0 R133 ; R0 := R133
	631	[2195]	CLOSURE  	R135 93 ; R135 := closure(Function #94)
	632	[2195]	MOVE     	R0 R30 ; R0 := R30
	633	[2195]	MOVE     	R0 R19 ; R0 := R19
	634	[2195]	MOVE     	R0 R41 ; R0 := R41
	635	[2195]	MOVE     	R0 R27 ; R0 := R27
	636	[2195]	MOVE     	R0 R8 ; R0 := R8
	637	[2199]	CLOSURE  	R136 94 ; R136 := closure(Function #95)
	638	[2199]	MOVE     	R0 R135 ; R0 := R135
	639	[2197]	SETGLOBAL	R136 K217 ; UpdateScanUpdateParams := R136
	640	[2228]	CLOSURE  	R136 95 ; R136 := closure(Function #96)
	641	[2228]	MOVE     	R0 R71 ; R0 := R71
	642	[2228]	MOVE     	R0 R86 ; R0 := R86
	643	[2228]	MOVE     	R0 R6 ; R0 := R6
	644	[2228]	MOVE     	R0 R8 ; R0 := R8
	645	[2254]	CLOSURE  	R137 96 ; R137 := closure(Function #97)
	646	[2254]	MOVE     	R0 R8 ; R0 := R8
	647	[2254]	MOVE     	R0 R71 ; R0 := R71
	648	[2298]	CLOSURE  	R138 97 ; R138 := closure(Function #98)
	649	[2298]	MOVE     	R0 R71 ; R0 := R71
	650	[2298]	MOVE     	R0 R85 ; R0 := R85
	651	[2298]	MOVE     	R0 R23 ; R0 := R23
	652	[2298]	MOVE     	R0 R136 ; R0 := R136
	653	[2298]	MOVE     	R0 R137 ; R0 := R137
	654	[2298]	MOVE     	R0 R86 ; R0 := R86
	655	[2298]	MOVE     	R0 R6 ; R0 := R6
	656	[2352]	CLOSURE  	R139 98 ; R139 := closure(Function #99)
	657	[2352]	MOVE     	R0 R71 ; R0 := R71
	658	[2352]	MOVE     	R0 R86 ; R0 := R86
	659	[2352]	MOVE     	R0 R6 ; R0 := R6
	660	[2352]	MOVE     	R0 R23 ; R0 := R23
	661	[2391]	CLOSURE  	R140 99 ; R140 := closure(Function #100)
	662	[2391]	MOVE     	R0 R4 ; R0 := R4
	663	[2391]	MOVE     	R0 R6 ; R0 := R6
	664	[2391]	MOVE     	R0 R48 ; R0 := R48
	665	[2391]	MOVE     	R0 R86 ; R0 := R86
	666	[2391]	MOVE     	R0 R85 ; R0 := R85
	667	[2391]	MOVE     	R0 R71 ; R0 := R71
	668	[2391]	MOVE     	R0 R138 ; R0 := R138
	669	[2391]	MOVE     	R0 R139 ; R0 := R139
	670	[2432]	CLOSURE  	R141 100 ; R141 := closure(Function #101)
	671	[2432]	MOVE     	R0 R31 ; R0 := R31
	672	[2432]	MOVE     	R0 R8 ; R0 := R8
	673	[2500]	CLOSURE  	R142 101 ; R142 := closure(Function #102)
	674	[2500]	MOVE     	R0 R50 ; R0 := R50
	675	[2672]	CLOSURE  	R143 102 ; R143 := closure(Function #103)
	676	[2672]	MOVE     	R0 R30 ; R0 := R30
	677	[2672]	MOVE     	R0 R33 ; R0 := R33
	678	[2672]	MOVE     	R0 R62 ; R0 := R62
	679	[2672]	MOVE     	R0 R69 ; R0 := R69
	680	[2672]	MOVE     	R0 R40 ; R0 := R40
	681	[2672]	MOVE     	R0 R142 ; R0 := R142
	682	[2672]	MOVE     	R0 R39 ; R0 := R39
	683	[2672]	MOVE     	R0 R58 ; R0 := R58
	684	[2672]	MOVE     	R0 R8 ; R0 := R8
	685	[3016]	CLOSURE  	R144 103 ; R144 := closure(Function #104)
	686	[3016]	MOVE     	R0 R32 ; R0 := R32
	687	[3016]	MOVE     	R0 R105 ; R0 := R105
	688	[3016]	MOVE     	R0 R28 ; R0 := R28
	689	[3016]	MOVE     	R0 R33 ; R0 := R33
	690	[3016]	MOVE     	R0 R62 ; R0 := R62
	691	[3016]	MOVE     	R0 R19 ; R0 := R19
	692	[3016]	MOVE     	R0 R4 ; R0 := R4
	693	[3016]	MOVE     	R0 R35 ; R0 := R35
	694	[3016]	MOVE     	R0 R26 ; R0 := R26
	695	[3016]	MOVE     	R0 R30 ; R0 := R30
	696	[3016]	MOVE     	R0 R6 ; R0 := R6
	697	[3016]	MOVE     	R0 R55 ; R0 := R55
	698	[3016]	MOVE     	R0 R58 ; R0 := R58
	699	[3016]	MOVE     	R0 R40 ; R0 := R40
	700	[3016]	MOVE     	R0 R27 ; R0 := R27
	701	[3016]	MOVE     	R0 R53 ; R0 := R53
	702	[3016]	MOVE     	R0 R51 ; R0 := R51
	703	[3016]	MOVE     	R0 R95 ; R0 := R95
	704	[3016]	MOVE     	R0 R31 ; R0 := R31
	705	[3016]	MOVE     	R0 R141 ; R0 := R141
	706	[3016]	MOVE     	R0 R8 ; R0 := R8
	707	[3016]	MOVE     	R0 R91 ; R0 := R91
	708	[3016]	MOVE     	R0 R22 ; R0 := R22
	709	[3016]	MOVE     	R0 R63 ; R0 := R63
	710	[3033]	CLOSURE  	R145 104 ; R145 := closure(Function #105)
	711	[3048]	CLOSURE  	R146 105 ; R146 := closure(Function #106)
	712	[3116]	CLOSURE  	R147 106 ; R147 := closure(Function #107)
	713	[3116]	MOVE     	R0 R1 ; R0 := R1
	714	[3116]	MOVE     	R0 R34 ; R0 := R34
	715	[3116]	MOVE     	R0 R145 ; R0 := R145
	716	[3116]	MOVE     	R0 R66 ; R0 := R66
	717	[3116]	MOVE     	R0 R146 ; R0 := R146
	718	[3116]	MOVE     	R0 R4 ; R0 := R4
	719	[3249]	CLOSURE  	R148 107 ; R148 := closure(Function #108)
	720	[3249]	MOVE     	R0 R4 ; R0 := R4
	721	[3249]	MOVE     	R0 R16 ; R0 := R16
	722	[3249]	MOVE     	R0 R147 ; R0 := R147
	723	[3249]	MOVE     	R0 R72 ; R0 := R72
	724	[3249]	MOVE     	R0 R30 ; R0 := R30
	725	[3249]	MOVE     	R0 R32 ; R0 := R32
	726	[3249]	MOVE     	R0 R70 ; R0 := R70
	727	[3249]	MOVE     	R0 R6 ; R0 := R6
	728	[3249]	MOVE     	R0 R26 ; R0 := R26
	729	[3249]	MOVE     	R0 R27 ; R0 := R27
	730	[3253]	CLOSURE  	R149 108 ; R149 := closure(Function #109)
	731	[3253]	MOVE     	R0 R148 ; R0 := R148
	732	[3251]	SETGLOBAL	R149 K218 ; UpdateFade := R149
	733	[3650]	CLOSURE  	R149 109 ; R149 := closure(Function #110)
	734	[3650]	MOVE     	R0 R4 ; R0 := R4
	735	[3650]	MOVE     	R0 R18 ; R0 := R18
	736	[3650]	MOVE     	R0 R73 ; R0 := R73
	737	[3650]	MOVE     	R0 R144 ; R0 := R144
	738	[3650]	MOVE     	R0 R3 ; R0 := R3
	739	[3650]	MOVE     	R0 R130 ; R0 := R130
	740	[3650]	MOVE     	R0 R6 ; R0 := R6
	741	[3650]	MOVE     	R0 R32 ; R0 := R32
	742	[3650]	MOVE     	R0 R45 ; R0 := R45
	743	[3650]	MOVE     	R0 R27 ; R0 := R27
	744	[3650]	MOVE     	R0 R28 ; R0 := R28
	745	[3650]	MOVE     	R0 R58 ; R0 := R58
	746	[3650]	MOVE     	R0 R30 ; R0 := R30
	747	[3650]	MOVE     	R0 R19 ; R0 := R19
	748	[3650]	MOVE     	R0 R40 ; R0 := R40
	749	[3650]	MOVE     	R0 R20 ; R0 := R20
	750	[3650]	MOVE     	R0 R49 ; R0 := R49
	751	[3650]	MOVE     	R0 R134 ; R0 := R134
	752	[3650]	MOVE     	R0 R148 ; R0 := R148
	753	[3650]	MOVE     	R0 R8 ; R0 := R8
	754	[3650]	MOVE     	R0 R26 ; R0 := R26
	755	[3650]	MOVE     	R0 R107 ; R0 := R107
	756	[3650]	MOVE     	R0 R75 ; R0 := R75
	757	[3650]	MOVE     	R0 R14 ; R0 := R14
	758	[3650]	MOVE     	R0 R109 ; R0 := R109
	759	[3650]	MOVE     	R0 R118 ; R0 := R118
	760	[3650]	MOVE     	R0 R143 ; R0 := R143
	761	[3650]	MOVE     	R0 R24 ; R0 := R24
	762	[3650]	MOVE     	R0 R16 ; R0 := R16
	763	[3650]	MOVE     	R0 R51 ; R0 := R51
	764	[3650]	MOVE     	R0 R128 ; R0 := R128
	765	[3650]	MOVE     	R0 R56 ; R0 := R56
	766	[3650]	MOVE     	R0 R110 ; R0 := R110
	767	[3650]	MOVE     	R0 R113 ; R0 := R113
	768	[3650]	MOVE     	R0 R11 ; R0 := R11
	769	[3650]	MOVE     	R0 R72 ; R0 := R72
	770	[3650]	MOVE     	R0 R31 ; R0 := R31
	771	[3650]	MOVE     	R0 R131 ; R0 := R131
	772	[3650]	MOVE     	R0 R140 ; R0 := R140
	773	[3650]	MOVE     	R0 R44 ; R0 := R44
	774	[3255]	SETGLOBAL	R149 K219 ; Update := R149
	775	[3688]	CLOSURE  	R149 110 ; R149 := closure(Function #111)
	776	[3688]	MOVE     	R0 R24 ; R0 := R24
	777	[3688]	MOVE     	R0 R4 ; R0 := R4
	778	[3688]	MOVE     	R0 R32 ; R0 := R32
	779	[3688]	MOVE     	R0 R28 ; R0 := R28
	780	[3688]	MOVE     	R0 R8 ; R0 := R8
	781	[3688]	MOVE     	R0 R6 ; R0 := R6
	782	[3731]	CLOSURE  	R150 111 ; R150 := closure(Function #112)
	783	[3731]	MOVE     	R0 R45 ; R0 := R45
	784	[3731]	MOVE     	R0 R51 ; R0 := R51
	785	[3731]	MOVE     	R0 R8 ; R0 := R8
	786	[3731]	MOVE     	R0 R4 ; R0 := R4
	787	[3731]	MOVE     	R0 R37 ; R0 := R37
	788	[3731]	MOVE     	R0 R6 ; R0 := R6
	789	[3731]	MOVE     	R0 R150 ; R0 := R150
	790	[3738]	CLOSURE  	R151 112 ; R151 := closure(Function #113)
	791	[3733]	SETGLOBAL	R151 K220 ; ForceShowMinimapProgressBar := R151
	792	[3742]	CLOSURE  	R151 113 ; R151 := closure(Function #114)
	793	[3740]	SETGLOBAL	R151 K221 ; ForceHideMinimapProgressBar := R151
	794	[3746]	CLOSURE  	R151 114 ; R151 := closure(Function #115)
	795	[3744]	SETGLOBAL	R151 K222 ; SetMinimapProgressText := R151
	796	[3748]	LOADNIL  	R151 R151 ; R151 := nil
	797	[3763]	CLOSURE  	R152 115 ; R152 := closure(Function #116)
	798	[3763]	MOVE     	R0 R151 ; R0 := R151
	799	[3763]	MOVE     	R0 R13 ; R0 := R13
	800	[3749]	SETGLOBAL	R152 K223 ; SetMinimapProgressValue := R152
	801	[3771]	CLOSURE  	R152 116 ; R152 := closure(Function #117)
	802	[3771]	MOVE     	R0 R4 ; R0 := R4
	803	[3771]	MOVE     	R0 R64 ; R0 := R64
	804	[4021]	CLOSURE  	R153 117 ; R153 := closure(Function #118)
	805	[4021]	MOVE     	R0 R32 ; R0 := R32
	806	[4021]	MOVE     	R0 R66 ; R0 := R66
	807	[4021]	MOVE     	R0 R146 ; R0 := R146
	808	[4021]	MOVE     	R0 R8 ; R0 := R8
	809	[4021]	MOVE     	R0 R6 ; R0 := R6
	810	[4021]	MOVE     	R0 R4 ; R0 := R4
	811	[4021]	MOVE     	R0 R39 ; R0 := R39
	812	[4021]	MOVE     	R0 R64 ; R0 := R64
	813	[4021]	MOVE     	R0 R68 ; R0 := R68
	814	[4021]	MOVE     	R0 R18 ; R0 := R18
	815	[4021]	MOVE     	R0 R152 ; R0 := R152
	816	[4029]	CLOSURE  	R154 118 ; R154 := closure(Function #119)
	817	[4029]	MOVE     	R0 R153 ; R0 := R153
	818	[4023]	SETGLOBAL	R154 K224 ; ShowBasicImpactMessage := R154
	819	[4038]	CLOSURE  	R154 119 ; R154 := closure(Function #120)
	820	[4038]	MOVE     	R0 R15 ; R0 := R15
	821	[4038]	MOVE     	R0 R67 ; R0 := R67
	822	[4038]	MOVE     	R0 R38 ; R0 := R38
	823	[4082]	CLOSURE  	R155 120 ; R155 := closure(Function #121)
	824	[4082]	MOVE     	R0 R32 ; R0 := R32
	825	[4082]	MOVE     	R0 R15 ; R0 := R15
	826	[4092]	CLOSURE  	R156 121 ; R156 := closure(Function #122)
	827	[4092]	MOVE     	R0 R27 ; R0 := R27
	828	[4092]	MOVE     	R0 R28 ; R0 := R28
	829	[4084]	SETGLOBAL	R156 K225 ; RefreshGlowEffectsEnabled := R156
	830	[4152]	CLOSURE  	R156 122 ; R156 := closure(Function #123)
	831	[4152]	MOVE     	R0 R51 ; R0 := R51
	832	[4152]	MOVE     	R0 R16 ; R0 := R16
	833	[4152]	MOVE     	R0 R39 ; R0 := R39
	834	[4152]	MOVE     	R0 R11 ; R0 := R11
	835	[4152]	MOVE     	R0 R34 ; R0 := R34
	836	[4152]	MOVE     	R0 R38 ; R0 := R38
	837	[4152]	MOVE     	R0 R29 ; R0 := R29
	838	[4152]	MOVE     	R0 R27 ; R0 := R27
	839	[4152]	MOVE     	R0 R28 ; R0 := R28
	840	[4152]	MOVE     	R0 R26 ; R0 := R26
	841	[4152]	MOVE     	R0 R92 ; R0 := R92
	842	[4152]	MOVE     	R0 R93 ; R0 := R93
	843	[4152]	MOVE     	R0 R141 ; R0 := R141
	844	[4200]	CLOSURE  	R157 123 ; R157 := closure(Function #124)
	845	[4200]	MOVE     	R0 R27 ; R0 := R27
	846	[4200]	MOVE     	R0 R4 ; R0 := R4
	847	[4200]	MOVE     	R0 R41 ; R0 := R41
	848	[4200]	MOVE     	R0 R8 ; R0 := R8
	849	[4200]	MOVE     	R0 R145 ; R0 := R145
	850	[4200]	MOVE     	R0 R1 ; R0 := R1
	851	[4200]	MOVE     	R0 R2 ; R0 := R2
	852	[4214]	CLOSURE  	R158 124 ; R158 := closure(Function #125)
	853	[4214]	MOVE     	R0 R53 ; R0 := R53
	854	[4202]	SETGLOBAL	R158 K226 ; SetStatEffectColumns := R158
	855	[4507]	CLOSURE  	R158 125 ; R158 := closure(Function #126)
	856	[4507]	MOVE     	R0 R53 ; R0 := R53
	857	[4507]	MOVE     	R0 R18 ; R0 := R18
	858	[4507]	MOVE     	R0 R8 ; R0 := R8
	859	[4507]	MOVE     	R0 R39 ; R0 := R39
	860	[4507]	MOVE     	R0 R102 ; R0 := R102
	861	[4507]	MOVE     	R0 R0 ; R0 := R0
	862	[4525]	CLOSURE  	R159 126 ; R159 := closure(Function #127)
	863	[4525]	MOVE     	R0 R156 ; R0 := R156
	864	[4525]	MOVE     	R0 R51 ; R0 := R51
	865	[4525]	MOVE     	R0 R53 ; R0 := R53
	866	[4509]	SETGLOBAL	R159 K227 ; OnProfileSaved := R159
	867	[4533]	CLOSURE  	R159 127 ; R159 := closure(Function #128)
	868	[4533]	MOVE     	R0 R23 ; R0 := R23
	869	[4538]	CLOSURE  	R160 128 ; R160 := closure(Function #129)
	870	[4538]	MOVE     	R0 R8 ; R0 := R8
	871	[4543]	CLOSURE  	R161 129 ; R161 := closure(Function #130)
	872	[4543]	MOVE     	R0 R8 ; R0 := R8
	873	[4555]	CLOSURE  	R162 130 ; R162 := closure(Function #131)
	874	[4555]	MOVE     	R0 R26 ; R0 := R26
	875	[4559]	CLOSURE  	R163 131 ; R163 := closure(Function #132)
	876	[4559]	MOVE     	R0 R70 ; R0 := R70
	877	[4563]	CLOSURE  	R164 132 ; R164 := closure(Function #133)
	878	[4567]	CLOSURE  	R165 133 ; R165 := closure(Function #134)
	879	[4567]	MOVE     	R0 R27 ; R0 := R27
	880	[4571]	CLOSURE  	R166 134 ; R166 := closure(Function #135)
	881	[4571]	MOVE     	R0 R27 ; R0 := R27
	882	[4589]	CLOSURE  	R167 135 ; R167 := closure(Function #136)
	883	[4589]	MOVE     	R0 R8 ; R0 := R8
	884	[4589]	MOVE     	R0 R56 ; R0 := R56
	885	[4589]	MOVE     	R0 R39 ; R0 := R39
	886	[4598]	CLOSURE  	R168 136 ; R168 := closure(Function #137)
	887	[4598]	MOVE     	R0 R167 ; R0 := R167
	888	[4591]	SETGLOBAL	R168 K228 ; AbilityTimerComplete := R168
	889	[4608]	CLOSURE  	R168 137 ; R168 := closure(Function #138)
	890	[4653]	CLOSURE  	R169 138 ; R169 := closure(Function #139)
	891	[4653]	MOVE     	R0 R81 ; R0 := R81
	892	[4653]	MOVE     	R0 R122 ; R0 := R122
	893	[4653]	MOVE     	R0 R124 ; R0 := R124
	894	[4653]	MOVE     	R0 R123 ; R0 := R123
	895	[4653]	MOVE     	R0 R99 ; R0 := R99
	896	[4653]	MOVE     	R0 R100 ; R0 := R100
	897	[4653]	MOVE     	R0 R101 ; R0 := R101
	898	[4653]	MOVE     	R0 R153 ; R0 := R153
	899	[4653]	MOVE     	R0 R152 ; R0 := R152
	900	[4653]	MOVE     	R0 R154 ; R0 := R154
	901	[4653]	MOVE     	R0 R159 ; R0 := R159
	902	[4653]	MOVE     	R0 R160 ; R0 := R160
	903	[4653]	MOVE     	R0 R161 ; R0 := R161
	904	[4653]	MOVE     	R0 R162 ; R0 := R162
	905	[4653]	MOVE     	R0 R163 ; R0 := R163
	906	[4653]	MOVE     	R0 R164 ; R0 := R164
	907	[4653]	MOVE     	R0 R165 ; R0 := R165
	908	[4653]	MOVE     	R0 R126 ; R0 := R126
	909	[4653]	MOVE     	R0 R127 ; R0 := R127
	910	[4653]	MOVE     	R0 R85 ; R0 := R85
	911	[4653]	MOVE     	R0 R166 ; R0 := R166
	912	[4653]	MOVE     	R0 R167 ; R0 := R167
	913	[4653]	MOVE     	R0 R168 ; R0 := R168
	914	[4653]	MOVE     	R0 R97 ; R0 := R97
	915	[4653]	MOVE     	R0 R98 ; R0 := R98
	916	[4653]	MOVE     	R0 R15 ; R0 := R15
	917	[4653]	MOVE     	R0 R83 ; R0 := R83
	918	[4653]	MOVE     	R0 R11 ; R0 := R11
	919	[4653]	MOVE     	R0 R38 ; R0 := R38
	920	[4752]	CLOSURE  	R170 139 ; R170 := closure(Function #140)
	921	[4752]	MOVE     	R0 R36 ; R0 := R36
	922	[4752]	MOVE     	R0 R9 ; R0 := R9
	923	[4752]	MOVE     	R0 R8 ; R0 := R8
	924	[4752]	MOVE     	R0 R39 ; R0 := R39
	925	[4792]	CLOSURE  	R79 140 ; R79 := closure(Function #141)
	926	[4792]	MOVE     	R0 R41 ; R0 := R41
	927	[4792]	MOVE     	R0 R106 ; R0 := R106
	928	[4792]	MOVE     	R0 R142 ; R0 := R142
	929	[4792]	MOVE     	R0 R8 ; R0 := R8
	930	[4797]	CLOSURE  	R171 141 ; R171 := closure(Function #142)
	931	[4797]	MOVE     	R0 R79 ; R0 := R79
	932	[4794]	SETGLOBAL	R171 K229 ; UpdateAmmo := R171
	933	[4857]	CLOSURE  	R171 142 ; R171 := closure(Function #143)
	934	[4857]	MOVE     	R0 R15 ; R0 := R15
	935	[4857]	MOVE     	R0 R38 ; R0 := R38
	936	[4857]	MOVE     	R0 R40 ; R0 := R40
	937	[4857]	MOVE     	R0 R2 ; R0 := R2
	938	[4857]	MOVE     	R0 R79 ; R0 := R79
	939	[5325]	CLOSURE  	R172 143 ; R172 := closure(Function #144)
	940	[5325]	MOVE     	R0 R16 ; R0 := R16
	941	[5325]	MOVE     	R0 R82 ; R0 := R82
	942	[5325]	MOVE     	R0 R4 ; R0 := R4
	943	[5325]	MOVE     	R0 R105 ; R0 := R105
	944	[5325]	MOVE     	R0 R32 ; R0 := R32
	945	[5325]	MOVE     	R0 R156 ; R0 := R156
	946	[5325]	MOVE     	R0 R6 ; R0 := R6
	947	[5325]	MOVE     	R0 R75 ; R0 := R75
	948	[5325]	MOVE     	R0 R23 ; R0 := R23
	949	[5325]	MOVE     	R0 R90 ; R0 := R90
	950	[5325]	MOVE     	R0 R89 ; R0 := R89
	951	[5325]	MOVE     	R0 R15 ; R0 := R15
	952	[5325]	MOVE     	R0 R10 ; R0 := R10
	953	[5325]	MOVE     	R0 R38 ; R0 := R38
	954	[5325]	MOVE     	R0 R73 ; R0 := R73
	955	[5325]	MOVE     	R0 R67 ; R0 := R67
	956	[5325]	MOVE     	R0 R170 ; R0 := R170
	957	[5325]	MOVE     	R0 R149 ; R0 := R149
	958	[5325]	MOVE     	R0 R150 ; R0 := R150
	959	[5325]	MOVE     	R0 R48 ; R0 := R48
	960	[5325]	MOVE     	R0 R8 ; R0 := R8
	961	[5325]	MOVE     	R0 R27 ; R0 := R27
	962	[5325]	MOVE     	R0 R25 ; R0 := R25
	963	[5325]	MOVE     	R0 R5 ; R0 := R5
	964	[5325]	MOVE     	R0 R74 ; R0 := R74
	965	[5325]	MOVE     	R0 R11 ; R0 := R11
	966	[5325]	MOVE     	R0 R18 ; R0 := R18
	967	[5325]	MOVE     	R0 R34 ; R0 := R34
	968	[5325]	MOVE     	R0 R81 ; R0 := R81
	969	[5325]	MOVE     	R0 R84 ; R0 := R84
	970	[5325]	MOVE     	R0 R171 ; R0 := R171
	971	[5325]	MOVE     	R0 R147 ; R0 := R147
	972	[5325]	MOVE     	R0 R44 ; R0 := R44
	973	[5325]	MOVE     	R0 R87 ; R0 := R87
	974	[5325]	MOVE     	R0 R0 ; R0 := R0
	975	[5325]	MOVE     	R0 R155 ; R0 := R155
	976	[5325]	MOVE     	R0 R61 ; R0 := R61
	977	[5325]	MOVE     	R0 R158 ; R0 := R158
	978	[5325]	MOVE     	R0 R169 ; R0 := R169
	979	[5325]	MOVE     	R0 R72 ; R0 := R72
	980	[4859]	SETGLOBAL	R172 K230 ; Initialize := R172
	981	[5329]	CLOSURE  	R172 144 ; R172 := closure(Function #145)
	982	[5329]	MOVE     	R0 R4 ; R0 := R4
	983	[5327]	SETGLOBAL	R172 K231 ; ScreenDuck := R172
	984	[5341]	CLOSURE  	R172 145 ; R172 := closure(Function #146)
	985	[5341]	MOVE     	R0 R49 ; R0 := R49
	986	[5331]	SETGLOBAL	R172 K232 ; StatusEffectChanged := R172
	987	[5346]	CLOSURE  	R172 146 ; R172 := closure(Function #147)
	988	[5346]	MOVE     	R0 R49 ; R0 := R49
	989	[5343]	SETGLOBAL	R172 K233 ; OnPlayerInventoryChanged := R172
	990	[5363]	CLOSURE  	R172 147 ; R172 := closure(Function #148)
	991	[5363]	MOVE     	R0 R51 ; R0 := R51
	992	[5363]	MOVE     	R0 R16 ; R0 := R16
	993	[5348]	SETGLOBAL	R172 K234 ; ToggleSquad := R172
	994	[5377]	CLOSURE  	R172 148 ; R172 := closure(Function #149)
	995	[5377]	MOVE     	R0 R15 ; R0 := R15
	996	[5377]	MOVE     	R0 R38 ; R0 := R38
	997	[5377]	MOVE     	R0 R25 ; R0 := R25
	998	[5377]	MOVE     	R0 R27 ; R0 := R27
	999	[5365]	SETGLOBAL	R172 K235 ; onHudMarginsChanged := R172
	1000	[5389]	CLOSURE  	R172 149 ; R172 := closure(Function #150)
	1001	[5389]	MOVE     	R0 R15 ; R0 := R15
	1002	[5379]	SETGLOBAL	R172 K236 ; HideAllExceptImpact := R172
	1003	[5401]	CLOSURE  	R172 150 ; R172 := closure(Function #151)
	1004	[5401]	MOVE     	R0 R70 ; R0 := R70
	1005	[5391]	SETGLOBAL	R172 K237 ; SetPartialFadeValues := R172
	1006	[5433]	CLOSURE  	R172 151 ; R172 := closure(Function #152)
	1007	[5433]	MOVE     	R0 R60 ; R0 := R60
	1008	[5433]	MOVE     	R0 R59 ; R0 := R59
	1009	[5433]	MOVE     	R0 R8 ; R0 := R8
	1010	[5433]	MOVE     	R0 R6 ; R0 := R6
	1011	[5403]	SETGLOBAL	R172 K238 ; OnComboHitMultiplier := R172
	1012	[5438]	LOADNIL  	R172 R172 ; R172 := nil
	1013	[5439]	OP_LOADBOOL	R173 0 0 ; R173 := false
	1014	[5443]	CLOSURE  	R174 152 ; R174 := closure(Function #153)
	1015	[5443]	MOVE     	R0 R173 ; R0 := R173
	1016	[5441]	SETGLOBAL	R174 K239 ; Close_Dialog := R174
	1017	[5450]	CLOSURE  	R174 153 ; R174 := closure(Function #154)
	1018	[5450]	MOVE     	R0 R172 ; R0 := R172
	1019	[5478]	CLOSURE  	R175 154 ; R175 := closure(Function #155)
	1020	[5478]	MOVE     	R0 R7 ; R0 := R7
	1021	[5478]	MOVE     	R0 R174 ; R0 := R174
	1022	[5478]	MOVE     	R0 R173 ; R0 := R173
	1023	[5478]	MOVE     	R0 R8 ; R0 := R8
	1024	[5452]	SETGLOBAL	R175 K240 ; HUD_OnFindExternalSessionComplete := R175
	1025	[5494]	CLOSURE  	R175 155 ; R175 := closure(Function #156)
	1026	[5494]	MOVE     	R0 R173 ; R0 := R173
	1027	[5494]	MOVE     	R0 R172 ; R0 := R172
	1028	[5494]	MOVE     	R0 R8 ; R0 := R8
	1029	[5480]	SETGLOBAL	R175 K241 ; HUD_ExternalGameReady := R175
	1030	[5514]	CLOSURE  	R175 156 ; R175 := closure(Function #157)
	1031	[5514]	MOVE     	R0 R19 ; R0 := R19
	1032	[5496]	SETGLOBAL	R175 K242 ; SwitchSpectator := R175
	1033	[5518]	CLOSURE  	R175 157 ; R175 := closure(Function #158)
	1034	[5518]	MOVE     	R0 R125 ; R0 := R125
	1035	[5516]	SETGLOBAL	R175 K243 ; SetiOSLayout := R175
	1036	[5522]	CLOSURE  	R175 158 ; R175 := closure(Function #159)
	1037	[5520]	SETGLOBAL	R175 K244 ; SetMiniGameScore := R175
	1038	[5541]	CLOSURE  	R175 159 ; R175 := closure(Function #160)
	1039	[5541]	MOVE     	R0 R27 ; R0 := R27
	1040	[5545]	CLOSURE  	R176 160 ; R176 := closure(Function #161)
	1041	[5545]	MOVE     	R0 R81 ; R0 := R81
	1042	[5545]	MOVE     	R0 R175 ; R0 := R175
	1043	[5543]	SETGLOBAL	R176 K245 ; InitMiniGameMode := R176
	1044	[5549]	CLOSURE  	R176 161 ; R176 := closure(Function #162)
	1045	[5549]	MOVE     	R0 R42 ; R0 := R42
	1046	[5547]	SETGLOBAL	R176 K246 ; IsMissionTimerUp := R176
	1047	[5553]	CLOSURE  	R176 162 ; R176 := closure(Function #163)
	1048	[5551]	SETGLOBAL	R176 K247 ; ForceOpenScreenFromTopMenu := R176
	1049	[5575]	CLOSURE  	R176 163 ; R176 := closure(Function #164)
	1050	[5575]	MOVE     	R0 R157 ; R0 := R157
	1051	[5575]	MOVE     	R0 R27 ; R0 := R27
	1052	[5555]	SETGLOBAL	R176 K248 ; OnPowerModifierHeld := R176
	1053	[5588]	CLOSURE  	R176 164 ; R176 := closure(Function #165)
	1054	[5588]	MOVE     	R0 R6 ; R0 := R6
	1055	[5577]	SETGLOBAL	R176 K249 ; Disconnect := R176
	1056	[5594]	CLOSURE  	R176 165 ; R176 := closure(Function #166)
	1057	[5594]	MOVE     	R0 R4 ; R0 := R4
	1058	[5616]	CLOSURE  	R177 166 ; R177 := closure(Function #167)
	1059	[5616]	MOVE     	R0 R27 ; R0 := R27
	1060	[5616]	MOVE     	R0 R76 ; R0 := R76
	1061	[5616]	MOVE     	R0 R78 ; R0 := R78
	1062	[5616]	MOVE     	R0 R4 ; R0 := R4
	1063	[5616]	MOVE     	R0 R6 ; R0 := R6
	1064	[5616]	MOVE     	R0 R132 ; R0 := R132
	1065	[5616]	MOVE     	R0 R32 ; R0 := R32
	1066	[5616]	MOVE     	R0 R176 ; R0 := R176
	1067	[5596]	SETGLOBAL	R177 K250 ; OnInspect := R177
	1068	[5624]	CLOSURE  	R177 167 ; R177 := closure(Function #168)
	1069	[5629]	CLOSURE  	R178 168 ; R178 := closure(Function #169)
	1070	[5629]	MOVE     	R0 R6 ; R0 := R6
	1071	[5626]	SETGLOBAL	R178 K251 ; SyndicatePowerUp := R178
	1072	[5642]	CLOSURE  	R178 169 ; R178 := closure(Function #170)
	1073	[5642]	MOVE     	R0 R6 ; R0 := R6
	1074	[5642]	MOVE     	R0 R18 ; R0 := R18
	1075	[5642]	MOVE     	R0 R177 ; R0 := R177
	1076	[5631]	SETGLOBAL	R178 K252 ; SyndicatePowerActivated := R178
	1077	[5653]	CLOSURE  	R178 170 ; R178 := closure(Function #171)
	1078	[5672]	CLOSURE  	R179 171 ; R179 := closure(Function #172)
	1079	[5655]	SETGLOBAL	R179 K253 ; SimarisScanChallengeHack := R179
	1080	[5714]	CLOSURE  	R179 172 ; R179 := closure(Function #173)
	1081	[5714]	MOVE     	R0 R8 ; R0 := R8
	1082	[5714]	MOVE     	R0 R178 ; R0 := R178
	1083	[5674]	SETGLOBAL	R179 K254 ; ShowStandingEarned := R179
	1084	[5732]	CLOSURE  	R179 173 ; R179 := closure(Function #174)
	1085	[5732]	MOVE     	R0 R61 ; R0 := R61
	1086	[5732]	MOVE     	R0 R4 ; R0 := R4
	1087	[5732]	MOVE     	R0 R20 ; R0 := R20
	1088	[5732]	MOVE     	R0 R27 ; R0 := R27
	1089	[5732]	MOVE     	R0 R41 ; R0 := R41
	1090	[5716]	SETGLOBAL	R179 K255 ; IconCacheFlushed := R179
	1091	[5738]	CLOSURE  	R179 174 ; R179 := closure(Function #175)
	1092	[5738]	MOVE     	R0 R58 ; R0 := R58
	1093	[5738]	MOVE     	R0 R86 ; R0 := R86
	1094	[5738]	MOVE     	R0 R6 ; R0 := R6
	1095	[5734]	SETGLOBAL	R179 K256 ; CreateTreasureHuntFailTimer := R179
	1096	[5743]	CLOSURE  	R179 175 ; R179 := closure(Function #176)
	1097	[5743]	MOVE     	R0 R85 ; R0 := R85
	1098	[5743]	MOVE     	R0 R58 ; R0 := R58
	1099	[5740]	SETGLOBAL	R179 K257 ; DestroyTreasureHuntFailTimer := R179
	1100	[5778]	CLOSURE  	R179 176 ; R179 := closure(Function #177)
	1101	[5778]	MOVE     	R0 R36 ; R0 := R36
	1102	[5778]	MOVE     	R0 R8 ; R0 := R8
	1103	[5778]	MOVE     	R0 R22 ; R0 := R22
	1104	[5745]	SETGLOBAL	R179 K258 ; OnPreDeath := R179
	1105	[5787]	CLOSURE  	R179 177 ; R179 := closure(Function #178)
	1106	[5787]	MOVE     	R0 R26 ; R0 := R26
	1107	[5787]	MOVE     	R0 R38 ; R0 := R38
	1108	[5780]	SETGLOBAL	R179 K259 ; OnNewReticleMovie := R179
	1109	[5803]	CLOSURE  	R179 178 ; R179 := closure(Function #179)
	1110	[5789]	SETGLOBAL	R179 K260 ; OnFrameEnter := R179
	1111	[5813]	CLOSURE  	R179 179 ; R179 := closure(Function #180)
	1112	[5813]	MOVE     	R0 R8 ; R0 := R8
	1113	[5813]	MOVE     	R0 R38 ; R0 := R38
	1114	[5813]	MOVE     	R0 R6 ; R0 := R6
	1115	[5805]	SETGLOBAL	R179 K261 ; OnPerfectReload := R179
	1116	[5820]	CLOSURE  	R179 180 ; R179 := closure(Function #181)
	1117	[5820]	MOVE     	R0 R147 ; R0 := R147
	1118	[5815]	SETGLOBAL	R179 K262 ; OnGamepadTransition := R179
	1119	[5827]	CLOSURE  	R179 181 ; R179 := closure(Function #182)
	1120	[5827]	MOVE     	R0 R81 ; R0 := R81
	1121	[5822]	SETGLOBAL	R179 K263 ; SetGenericMessageScale := R179
	1122	[5827]	RETURN   	R0 1 ; return 


function #1 <?:276,278> (3 instructions, 12 bytes at 00000211182B8A90)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[277]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[277]	RETURN   	R0 2 ; return R0 
	3	[278]	RETURN   	R0 1 ; return 

function #2 <?:281,283> (2 instructions, 8 bytes at 0000021126DC7A90)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[282]	RETURN   	R0 2 ; return R0 
	2	[283]	RETURN   	R0 1 ; return 

function #3 <?:285,287> (4 instructions, 16 bytes at 00000211362E7930)
0 params, 2 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[286]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[286]	GETTABLE 	R0 R0 K0 ; R0 := R0[0x4fccd182]
	3	[286]	CALL     	R0 1 1 ; R0()
	4	[287]	RETURN   	R0 1 ; return 

function #4 <?:289,304> (35 instructions, 140 bytes at 0000021192C0B8B0)
1+ param, 7 slots, 2 upvalues, 0 locals, 11 constants, 0 functions
	1	[290]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[290]	GETTABLE 	R2 R2 K0 ; R2 := R2["Initialized"]
	3	[290]	TEST     	R2 1 ; if R2 then PC := 6
	4	[290]	JMP      	6 ; PC := 6
	5	[291]	RETURN   	R0 1 ; return 
	6	[294]	GETUPVAL 	R2 U0 ; R2 := U0
	7	[294]	GETTABLE 	R2 R2 K1 ; R2 := R2["mDispatchingQueuedFuncs"]
	8	[294]	TEST     	R2 0 ; if not R2 then PC := 14
	9	[294]	JMP      	14 ; PC := 14
	10	[295]	MOVE     	R2 R0 ; R2 := R0
	11	[295]	VARARG   	R3 0 ; R3 := ...
	12	[295]	CALL     	R2 0 1 ; R2(R3,...)
	13	[295]	JMP      	35 ; PC := 35
	14	[297]	GETGLOBAL	R2 K2 ; R2 := 0x33bdd652
	15	[297]	GETTABLE 	R2 R2 K3 ; R2 := R2[0x23d5322f]
	16	[297]	GETUPVAL 	R3 U1 ; R3 := U1
	17	[297]	NEWTABLE 	R4 1 0 ; R4 := {}
	18	[297]	MOVE     	R5 R0 ; R5 := R0
	19	[297]	VARARG   	R6 0 ; R6 := ...
	20	[297]	SETLIST  	R4 0 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 0
	21	[297]	CALL     	R2 3 1 ; R2(R3,R4)
	22	[299]	GETUPVAL 	R2 U1 ; R2 := U1
	23	[299]	LEN      	R2 R2 ; R2 := # R2
	24	[299]	LT       	0 K4 R2 ; if 400.000000 >= R2 then PC := 35
	25	[299]	JMP      	35 ; PC := 35
	26	[299]	GETGLOBAL	R2 K5 ; R2 := 0x0032441c
	27	[299]	GETTABLE 	R2 R2 K6 ; R2 := R2["functionQueueOverflow"]
	28	[299]	EQ       	0 R2 K7 ; if R2 ~= nil then PC := 35
	29	[299]	JMP      	35 ; PC := 35
	30	[300]	GETGLOBAL	R2 K8 ; R2 := 0x484742b6
	31	[300]	LOADK    	R3 K9 ; R3 := "HudRedux queue overflow"
	32	[300]	CALL     	R2 2 1 ; R2(R3)
	33	[301]	GETGLOBAL	R2 K5 ; R2 := 0x0032441c
	34	[301]	SETTABLE 	R2 K6 K10 ; R2["functionQueueOverflow"] := true
	35	[304]	RETURN   	R0 1 ; return 

function #5 <?:306,332> (55 instructions, 220 bytes at 000002112C894BB0)
1 param, 14 slots, 0 upvalues, 0 locals, 17 constants, 0 functions
	1	[307]	GETGLOBAL	R1 K0 ; R1 := 0x76ea806b
	2	[307]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x3f3ae64c]
	3	[307]	LOADK    	R3 := 0.000000
	4	[307]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	5	[308]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	6	[308]	MOVE     	R3 R1 ; R3 := R1
	7	[308]	CALL     	R2 2 2 ; R2 := R2(R3)
	8	[308]	TEST     	R2 1 ; if R2 then PC := 51
	9	[308]	JMP      	51 ; PC := 51
	10	[309]	SELF     	R2 R1 K3 ; R3 := R1; R2 := R1[0x40e9c32b]
	11	[309]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[310]	SELF     	R3 R2 K4 ; R4 := R2; R3 := R2[0x957b8ee0]
	13	[310]	MOVE     	R5 R0 ; R5 := R0
	14	[310]	CALL     	R3 3 1 ; R3(R4,R5)
	15	[312]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	16	[312]	GETGLOBAL	R4 K5 ; R4 := 0x89326c93
	17	[312]	CALL     	R3 2 2 ; R3 := R3(R4)
	18	[312]	TEST     	R3 1 ; if R3 then PC := 51
	19	[312]	JMP      	51 ; PC := 51
	20	[314]	GETGLOBAL	R3 K5 ; R3 := 0x89326c93
	21	[314]	SELF     	R3 R3 K6 ; R4 := R3; R3 := R3[0x7f8e810c]
	22	[314]	GETGLOBAL	R5 K7 ; R5 := gHealthShieldDisplayType
	23	[314]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	24	[315]	GETGLOBAL	R4 K8 ; R4 := 0xc8802016
	25	[315]	MOVE     	R5 R3 ; R5 := R3
	26	[315]	CALL     	R4 2 4 ; R4,R5,R6 := R4(R5)
	27	[315]	JMP      	30 ; PC := 30
	28	[316]	SELF     	R9 R8 K9 ; R10 := R8; R9 := R8[0x087cbd3f]
	29	[316]	CALL     	R9 2 1 ; R9(R10)
	30	[315]	TFORLOOP 	R4 2 ; R7,R8 := R4(R5,R6); if R7 ~= nil then begin PC = 28; R6 := R7 end
	31	[316]	JMP      	28 ; PC := 28
	32	[319]	GETGLOBAL	R9 K5 ; R9 := 0x89326c93
	33	[319]	SELF     	R9 R9 K10 ; R10 := R9; R9 := R9[0xfb64e76c]
	34	[319]	CALL     	R9 2 2 ; R9 := R9(R10)
	35	[320]	GETGLOBAL	R10 K2 ; R10 := 0x7b998233
	36	[320]	MOVE     	R11 R9 ; R11 := R9
	37	[320]	CALL     	R10 2 2 ; R10 := R10(R11)
	38	[320]	TEST     	R10 1 ; if R10 then PC := 51
	39	[320]	JMP      	51 ; PC := 51
	40	[321]	SELF     	R10 R9 K11 ; R11 := R9; R10 := R9[0x474501e1]
	41	[321]	CALL     	R10 2 2 ; R10 := R10(R11)
	42	[322]	GETGLOBAL	R11 K2 ; R11 := 0x7b998233
	43	[322]	MOVE     	R12 R10 ; R12 := R10
	44	[322]	CALL     	R11 2 2 ; R11 := R11(R12)
	45	[322]	TEST     	R11 1 ; if R11 then PC := 51
	46	[322]	JMP      	51 ; PC := 51
	47	[323]	SELF     	R11 R10 K12 ; R12 := R10; R11 := R10[0xacf046ff]
	48	[323]	CALL     	R11 2 1 ; R11(R12)
	49	[324]	SELF     	R11 R10 K13 ; R12 := R10; R11 := R10[0x3b6bd6b1]
	50	[324]	CALL     	R11 2 1 ; R11(R12)
	51	[331]	GETGLOBAL	R11 K14 ; R11 := 0x53a48847
	52	[331]	GETGLOBAL	R12 K15 ; R12 := 0x25d99d89
	53	[331]	LOADK    	R13 K16 ; R13 := "OnProfileSaved"
	54	[331]	CALL     	R11 3 1 ; R11(R12,R13)
	55	[332]	RETURN   	R0 1 ; return 

function #6 <?:334,339> (14 instructions, 56 bytes at 0000021127B15F70)
1 param, 4 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[335]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[335]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[335]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[335]	TEST     	R1 1 ; if R1 then PC := 11
	5	[335]	JMP      	11 ; PC := 11
	6	[336]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[336]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xef9a3ee6]
	8	[336]	MOVE     	R3 R0 ; R3 := R0
	9	[336]	TAILCALL 	R1 3 0 ; R1,... := R1(R2,R3)
	10	[336]	RETURN   	R1 0 ; return R1,... 
	11	[338]	GETGLOBAL	R1 K2 ; R1 := 0x0032441c
	12	[338]	GETTABLE 	R1 R1 K3 ; R1 := R1["UIColor_White"]
	13	[338]	RETURN   	R1 2 ; return R1 
	14	[339]	RETURN   	R0 1 ; return 

function #7 <?:341,383> (114 instructions, 456 bytes at 0000021135B72290)
1 param, 18 slots, 3 upvalues, 0 locals, 28 constants, 1 function
	1	[342]	LOADK    	R1 := 0.000000
	2	[343]	GETGLOBAL	R2 K0 ; R2 := 0x33bdd652
	3	[343]	GETTABLE 	R2 R2 K1 ; R2 := R2[0xf21b1d8e]
	4	[343]	GETTABLE 	R3 R0 K2 ; R3 := R0["List"]
	5	[350]	CLOSURE  	R4 0 ; R4 := closure(Function #1)
	6	[343]	CALL     	R2 3 1 ; R2(R3,R4)
	7	[351]	GETGLOBAL	R2 K3 ; R2 := 0xc8802016
	8	[351]	GETTABLE 	R3 R0 K2 ; R3 := R0["List"]
	9	[351]	CALL     	R2 2 4 ; R2,R3,R4 := R2(R3)
	10	[351]	JMP      	89 ; PC := 89
	11	[352]	GETTABLE 	R7 R6 K4 ; R7 := R6["NeedsInit"]
	12	[352]	TEST     	R7 1 ; if R7 then PC := 89
	13	[352]	JMP      	89 ; PC := 89
	14	[352]	GETTABLE 	R7 R6 K5 ; R7 := R6["Removing"]
	15	[352]	TEST     	R7 1 ; if R7 then PC := 89
	16	[352]	JMP      	89 ; PC := 89
	17	[353]	GETTABLE 	R7 R6 K6 ; R7 := R6["Data"]
	18	[353]	GETTABLE 	R7 R7 K7 ; R7 := R7["IgnoreStacking"]
	19	[353]	TEST     	R7 1 ; if R7 then PC := 25
	20	[353]	JMP      	25 ; PC := 25
	21	[353]	GETTABLE 	R7 R6 K6 ; R7 := R6["Data"]
	22	[353]	GETTABLE 	R7 R7 K8 ; R7 := R7["Visible"]
	23	[353]	EQ       	0 R7 K9 ; if R7 ~= false then PC := 47
	24	[353]	JMP      	47 ; PC := 47
	25	[354]	GETTABLE 	R7 R6 K6 ; R7 := R6["Data"]
	26	[354]	GETTABLE 	R7 R7 K10 ; R7 := R7["OffsetY"]
	27	[355]	GETTABLE 	R8 R6 K6 ; R8 := R6["Data"]
	28	[355]	GETTABLE 	R8 R8 K11 ; R8 := R8["Static"]
	29	[355]	TEST     	R8 0 ; if not R8 then PC := 40
	30	[355]	JMP      	40 ; PC := 40
	31	[355]	GETUPVAL 	R8 U0 ; R8 := U0
	32	[355]	SELF     	R8 R8 K12 ; R9 := R8; R8 := R8[0xf4ed1581]
	33	[355]	CALL     	R8 2 2 ; R8 := R8(R9)
	34	[355]	TEST     	R8 0 ; if not R8 then PC := 40
	35	[355]	JMP      	40 ; PC := 40
	36	[356]	GETUPVAL 	R8 U0 ; R8 := U0
	37	[356]	SELF     	R8 R8 K13 ; R9 := R8; R8 := R8[0x14959e23]
	38	[356]	CALL     	R8 2 2 ; R8 := R8(R9)
	39	[356]	ADD      	R7 R7 R8 ; R7 := R7 + R8
	40	[358]	GETGLOBAL	R8 K14 ; R8 := 0xae91e43b
	41	[358]	SELF     	R8 R8 K15 ; R9 := R8; R8 := R8[0x67bc869f]
	42	[358]	GETTABLE 	R10 R6 K16 ; R10 := R6["ClipName"]
	43	[358]	LOADK    	R11 := 1.000000
	44	[358]	MOVE     	R12 R7 ; R12 := R7
	45	[358]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	46	[358]	JMP      	76 ; PC := 76
	47	[360]	GETTABLE 	R8 R6 K6 ; R8 := R6["Data"]
	48	[360]	GETTABLE 	R8 R8 K10 ; R8 := R8["OffsetY"]
	49	[360]	ADD      	R8 R1 R8 ; R8 := R1 + R8
	50	[361]	GETGLOBAL	R9 K14 ; R9 := 0xae91e43b
	51	[361]	SELF     	R9 R9 K15 ; R10 := R9; R9 := R9[0x67bc869f]
	52	[361]	GETTABLE 	R11 R6 K16 ; R11 := R6["ClipName"]
	53	[361]	LOADK    	R12 := 1.000000
	54	[361]	MOVE     	R13 R8 ; R13 := R8
	55	[361]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	56	[362]	GETTABLE 	R9 R6 K6 ; R9 := R6["Data"]
	57	[362]	GETTABLE 	R9 R9 K17 ; R9 := R9["Height"]
	58	[362]	GETTABLE 	R10 R6 K6 ; R10 := R6["Data"]
	59	[362]	GETTABLE 	R10 R10 K10 ; R10 := R10["OffsetY"]
	60	[362]	ADD      	R9 R9 R10 ; R9 := R9 + R10
	61	[362]	LE       	0 K18 R9 ; if 0.000000 > R9 then PC := 69
	62	[362]	JMP      	69 ; PC := 69
	63	[363]	GETTABLE 	R9 R6 K6 ; R9 := R6["Data"]
	64	[363]	GETTABLE 	R9 R9 K17 ; R9 := R9["Height"]
	65	[363]	ADD      	R9 R1 R9 ; R9 := R1 + R9
	66	[363]	GETTABLE 	R10 R6 K6 ; R10 := R6["Data"]
	67	[363]	GETTABLE 	R10 R10 K10 ; R10 := R10["OffsetY"]
	68	[363]	ADD      	R1 R9 R10 ; R1 := R9 + R10
	69	[365]	GETTABLE 	R9 R6 K6 ; R9 := R6["Data"]
	70	[365]	GETTABLE 	R9 R9 K19 ; R9 := R9["Padding"]
	71	[365]	EQ       	1 R9 K20 ; if R9 == nil then PC := 76
	72	[365]	JMP      	76 ; PC := 76
	73	[366]	GETTABLE 	R9 R6 K6 ; R9 := R6["Data"]
	74	[366]	GETTABLE 	R9 R9 K19 ; R9 := R9["Padding"]
	75	[366]	ADD      	R1 R1 R9 ; R1 := R1 + R9
	76	[369]	GETTABLE 	R9 R6 K6 ; R9 := R6["Data"]
	77	[369]	GETTABLE 	R9 R9 K21 ; R9 := R9["OffsetX"]
	78	[369]	EQ       	1 R9 K18 ; if R9 == 0.000000 then PC := 89
	79	[369]	JMP      	89 ; PC := 89
	80	[370]	GETGLOBAL	R9 K14 ; R9 := 0xae91e43b
	81	[370]	SELF     	R9 R9 K15 ; R10 := R9; R9 := R9[0x67bc869f]
	82	[370]	GETTABLE 	R11 R6 K16 ; R11 := R6["ClipName"]
	83	[370]	LOADK    	R12 := 0.000000
	84	[370]	GETTABLE 	R13 R6 K22 ; R13 := R6["BaseX"]
	85	[370]	GETTABLE 	R14 R6 K6 ; R14 := R6["Data"]
	86	[370]	GETTABLE 	R14 R14 K21 ; R14 := R14["OffsetX"]
	87	[370]	ADD      	R13 R13 R14 ; R13 := R13 + R14
	88	[370]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	89	[351]	TFORLOOP 	R2 2 ; R5,R6 := R2(R3,R4); if R5 ~= nil then begin PC = 11; R4 := R5 end
	90	[372]	JMP      	11 ; PC := 11
	91	[375]	GETUPVAL 	R9 U1 ; R9 := U1
	92	[375]	EQ       	1 R9 R1 ; if R9 == R1 then PC := 114
	93	[375]	JMP      	114 ; PC := 114
	94	[376]	SETUPVAL 	R1 U1 ; U1 := R1
	95	[377]	GETGLOBAL	R9 K23 ; R9 := 0xcfc01047
	96	[377]	GETUPVAL 	R10 U2 ; R10 := U2
	97	[377]	CALL     	R9 2 4 ; R9,R10,R11 := R9(R10)
	98	[377]	JMP      	112 ; PC := 112
	99	[378]	GETTABLE 	R14 R13 K24 ; R14 := R13["ApplyTrackerOffset"]
	100	[378]	TEST     	R14 0 ; if not R14 then PC := 112
	101	[378]	JMP      	112 ; PC := 112
	102	[378]	GETGLOBAL	R14 K25 ; R14 := 0x7b998233
	103	[378]	GETTABLE 	R15 R13 K26 ; R15 := R13["Movie"]
	104	[378]	CALL     	R14 2 2 ; R14 := R14(R15)
	105	[378]	TEST     	R14 1 ; if R14 then PC := 112
	106	[378]	JMP      	112 ; PC := 112
	107	[379]	GETTABLE 	R14 R13 K26 ; R14 := R13["Movie"]
	108	[379]	SELF     	R14 R14 K27 ; R15 := R14; R14 := R14[0xe4162eed]
	109	[379]	LOADK    	R16 K24 ; R16 := "ApplyTrackerOffset"
	110	[379]	MOVE     	R17 R1 ; R17 := R1
	111	[379]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	112	[377]	TFORLOOP 	R9 2 ; R12,R13 := R9(R10,R11); if R12 ~= nil then begin PC = 99; R11 := R12 end
	113	[380]	JMP      	99 ; PC := 99
	114	[383]	RETURN   	R0 1 ; return 

function #8 <?:385,387> (4 instructions, 16 bytes at 000002113594B950)
0 params, 2 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[386]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[386]	GETTABLE 	R0 R0 K0 ; R0 := R0[0x6f72d56e]
	3	[386]	CALL     	R0 1 1 ; R0()
	4	[387]	RETURN   	R0 1 ; return 

function #9 <?:389,391> (6 instructions, 24 bytes at 000002111CA52610)
2 params, 5 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[390]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[390]	GETTABLE 	R2 R2 K0 ; R2 := R2[0x1a41a3c1]
	3	[390]	MOVE     	R3 R0 ; R3 := R0
	4	[390]	MOVE     	R4 R1 ; R4 := R1
	5	[390]	CALL     	R2 3 1 ; R2(R3,R4)
	6	[391]	RETURN   	R0 1 ; return 

function #10 <?:393,395> (12 instructions, 48 bytes at 00000211373015A0)
7 params, 15 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[394]	GETUPVAL 	R7 U0 ; R7 := U0
	2	[394]	GETTABLE 	R7 R7 K0 ; R7 := R7[0x8ee923fe]
	3	[394]	MOVE     	R8 R0 ; R8 := R0
	4	[394]	MOVE     	R9 R1 ; R9 := R1
	5	[394]	MOVE     	R10 R2 ; R10 := R2
	6	[394]	MOVE     	R11 R3 ; R11 := R3
	7	[394]	MOVE     	R12 R4 ; R12 := R4
	8	[394]	MOVE     	R13 R5 ; R13 := R5
	9	[394]	MOVE     	R14 R6 ; R14 := R6
	10	[394]	TAILCALL 	R7 8 0 ; R7,... := R7(R8,R9,R10,R11,R12,R13,R14)
	11	[394]	RETURN   	R7 0 ; return R7,... 
	12	[395]	RETURN   	R0 1 ; return 

function #11 <?:399,417> (77 instructions, 308 bytes at 0000021177137470)
1 param, 12 slots, 1 upvalue, 0 locals, 16 constants, 0 functions
	1	[401]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	2	[401]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x42b04007]
	3	[401]	MOVE     	R3 R0 ; R3 := R0
	4	[401]	OP_LOADBOOL	R4 1 0 ; R4 := true
	5	[401]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	6	[401]	MOVE     	R0 R1 ; R0 := R1
	7	[402]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	8	[402]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0x20b98db3]
	9	[402]	LOADK    	R3 K3 ; R3 := "QuestMessage.Text.text"
	10	[402]	MOVE     	R4 R0 ; R4 := R0
	11	[402]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	12	[403]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	13	[403]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x91a24e4b]
	14	[403]	LOADK    	R3 K5 ; R3 := "QuestMessage.Text"
	15	[403]	LOADK    	R4 := 33.000000
	16	[403]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	17	[405]	MUL      	R2 R1 K6 ; R2 := R1 * 1.450000
	18	[406]	GETGLOBAL	R3 K0 ; R3 := 0xae91e43b
	19	[406]	SELF     	R3 R3 K7 ; R4 := R3; R3 := R3[0x5f56eeab]
	20	[406]	LOADK    	R5 K5 ; R5 := "QuestMessage.Text"
	21	[406]	LOADK    	R6 := 29.000000
	22	[406]	LOADK    	R7 K8 ; R7 := ""
	23	[406]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	24	[407]	GETGLOBAL	R3 K0 ; R3 := 0xae91e43b
	25	[407]	SELF     	R3 R3 K9 ; R4 := R3; R3 := R3[0x67bc869f]
	26	[407]	LOADK    	R5 K10 ; R5 := "QuestMessage"
	27	[407]	LOADK    	R6 := 5.000000
	28	[407]	LOADK    	R7 := 100.000000
	29	[407]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	30	[408]	GETGLOBAL	R3 K0 ; R3 := 0xae91e43b
	31	[408]	SELF     	R3 R3 K9 ; R4 := R3; R3 := R3[0x67bc869f]
	32	[408]	LOADK    	R5 K10 ; R5 := "QuestMessage"
	33	[408]	LOADK    	R6 := 6.000000
	34	[408]	LOADK    	R7 := 100.000000
	35	[408]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	36	[411]	GETGLOBAL	R3 K0 ; R3 := 0xae91e43b
	37	[411]	SELF     	R3 R3 K9 ; R4 := R3; R3 := R3[0x67bc869f]
	38	[411]	LOADK    	R5 K11 ; R5 := "QuestMessage.Line"
	39	[411]	LOADK    	R6 := 12.000000
	40	[411]	LOADK    	R7 := 1.000000
	41	[411]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	42	[413]	GETUPVAL 	R3 U0 ; R3 := U0
	43	[413]	GETTABLE 	R3 R3 K12 ; R3 := R3[0xf6e70fb6]
	44	[413]	GETGLOBAL	R4 K0 ; R4 := 0xae91e43b
	45	[413]	LOADNIL  	R5 R5 ; R5 := nil
	46	[413]	LOADK    	R6 K5 ; R6 := "QuestMessage.Text"
	47	[413]	MOVE     	R7 R0 ; R7 := R0
	48	[413]	LOADNIL  	R8 R8 ; R8 := nil
	49	[413]	CALL     	R3 6 1 ; R3(R4,R5,R6,R7,R8)
	50	[414]	GETGLOBAL	R3 K13 ; R3 := 0x25312c9b
	51	[414]	GETGLOBAL	R4 K0 ; R4 := 0xae91e43b
	52	[414]	LOADK    	R5 K10 ; R5 := "QuestMessage"
	53	[414]	LOADK    	R6 := 8.000000
	54	[414]	NEWTABLE 	R7 1 0 ; R7 := {}
	55	[414]	LOADK    	R8 := 10.000000
	56	[414]	SETLIST  	R7 1 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
	57	[414]	NEWTABLE 	R8 1 0 ; R8 := {}
	58	[414]	LOADK    	R9 := 100.000000
	59	[414]	SETLIST  	R8 1 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
	60	[414]	LOADK    	R9 K15 ; R9 := 0.350000
	61	[414]	LOADK    	R10 := 0.000000
	62	[414]	LOADNIL  	R11 R11 ; R11 := nil
	63	[414]	CALL     	R3 9 1 ; R3(R4,R5,R6,R7,R8,R9,R10,R11)
	64	[415]	GETGLOBAL	R3 K13 ; R3 := 0x25312c9b
	65	[415]	GETGLOBAL	R4 K0 ; R4 := 0xae91e43b
	66	[415]	LOADK    	R5 K11 ; R5 := "QuestMessage.Line"
	67	[415]	LOADK    	R6 := 8.000000
	68	[415]	NEWTABLE 	R7 1 0 ; R7 := {}
	69	[415]	LOADK    	R8 := 12.000000
	70	[415]	SETLIST  	R7 1 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
	71	[415]	NEWTABLE 	R8 1 0 ; R8 := {}
	72	[415]	MOVE     	R9 R2 ; R9 := R2
	73	[415]	SETLIST  	R8 1 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
	74	[415]	LOADK    	R9 K15 ; R9 := 0.350000
	75	[415]	LOADK    	R10 := 0.000000
	76	[415]	CALL     	R3 8 1 ; R3(R4,R5,R6,R7,R8,R9,R10)
	77	[417]	RETURN   	R0 1 ; return 

function #12 <?:419,423> (19 instructions, 76 bytes at 000002112394F790)
0 params, 9 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[420]	GETGLOBAL	R0 K0 ; R0 := 0x25312c9b
	2	[420]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	3	[420]	LOADK    	R2 K2 ; R2 := "QuestMessage"
	4	[420]	LOADK    	R3 := 8.000000
	5	[420]	NEWTABLE 	R4 3 0 ; R4 := {}
	6	[420]	LOADK    	R5 := 10.000000
	7	[420]	LOADK    	R6 := 5.000000
	8	[420]	LOADK    	R7 := 6.000000
	9	[420]	SETLIST  	R4 3 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 3
	10	[420]	NEWTABLE 	R5 3 0 ; R5 := {}
	11	[420]	LOADK    	R6 := 0.000000
	12	[420]	LOADK    	R7 := 140.000000
	13	[420]	LOADK    	R8 := 140.000000
	14	[420]	SETLIST  	R5 3 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 3
	15	[420]	LOADK    	R6 K4 ; R6 := 0.350000
	16	[420]	LOADK    	R7 := 0.000000
	17	[420]	LOADNIL  	R8 R8 ; R8 := nil
	18	[420]	CALL     	R0 9 1 ; R0(R1,R2,R3,R4,R5,R6,R7,R8)
	19	[423]	RETURN   	R0 1 ; return 

function #13 <?:426,438> (38 instructions, 152 bytes at 0000021129052060)
1 param, 8 slots, 1 upvalue, 0 locals, 10 constants, 0 functions
	1	[427]	EQ       	1 R0 K0 ; if R0 == "" then PC := 32
	2	[427]	JMP      	32 ; PC := 32
	3	[427]	GETGLOBAL	R1 K1 ; R1 := 0x0032441c
	4	[427]	GETTABLE 	R1 R1 K2 ; R1 := R1["StalkerMode"]
	5	[427]	TEST     	R1 1 ; if R1 then PC := 32
	6	[427]	JMP      	32 ; PC := 32
	7	[428]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	8	[428]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x42b04007]
	9	[428]	MOVE     	R3 R0 ; R3 := R0
	10	[428]	OP_LOADBOOL	R4 1 0 ; R4 := true
	11	[428]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	12	[430]	GETGLOBAL	R2 K5 ; R2 := _T
	13	[430]	GETTABLE 	R2 R2 K6 ; R2 := R2["GenericMessageNoAnimateTyping"]
	14	[430]	TEST     	R2 0 ; if not R2 then PC := 23
	15	[430]	JMP      	23 ; PC := 23
	16	[431]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	17	[431]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0x5f56eeab]
	18	[431]	LOADK    	R4 K8 ; R4 := "GenericMessage.Text"
	19	[431]	LOADK    	R5 := 29.000000
	20	[431]	MOVE     	R6 R1 ; R6 := R1
	21	[431]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	22	[431]	JMP      	38 ; PC := 38
	23	[433]	GETUPVAL 	R2 U0 ; R2 := U0
	24	[433]	GETTABLE 	R2 R2 K9 ; R2 := R2[0xf6e70fb6]
	25	[433]	GETGLOBAL	R3 K3 ; R3 := 0xae91e43b
	26	[433]	LOADNIL  	R4 R4 ; R4 := nil
	27	[433]	LOADK    	R5 K8 ; R5 := "GenericMessage.Text"
	28	[433]	MOVE     	R6 R1 ; R6 := R1
	29	[433]	LOADNIL  	R7 R7 ; R7 := nil
	30	[433]	CALL     	R2 6 1 ; R2(R3,R4,R5,R6,R7)
	31	[434]	JMP      	38 ; PC := 38
	32	[436]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	33	[436]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0x5f56eeab]
	34	[436]	LOADK    	R4 K8 ; R4 := "GenericMessage.Text"
	35	[436]	LOADK    	R5 := 29.000000
	36	[436]	LOADK    	R6 K0 ; R6 := ""
	37	[436]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	38	[438]	RETURN   	R0 1 ; return 

function #14 <?:441,443> (9 instructions, 36 bytes at 000002112EF8F8A0)
0 params, 5 slots, 2 upvalues, 0 locals, 3 constants, 0 functions
	1	[442]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[442]	GETUPVAL 	R1 U1 ; R1 := U1
	3	[442]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xbd2e96ea]
	4	[442]	LOADK    	R3 := 5.000000
	5	[442]	GETUPVAL 	R4 U0 ; R4 := U0
	6	[442]	GETTABLE 	R4 R4 K2 ; R4 := R4["Hide"]
	7	[442]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	8	[442]	SETTABLE 	R0 K0 R1 ; R0["timerId"] := R1
	9	[443]	RETURN   	R0 1 ; return 

function #15 <?:447,550> (64 instructions, 256 bytes at 000002113642CAA0)
0 params, 5 slots, 6 upvalues, 0 locals, 22 constants, 4 functions
	1	[448]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[448]	GETGLOBAL	R1 K1 ; R1 := 0x0469f296
	3	[448]	CALL     	R1 1 2 ; R1 := R1()
	4	[448]	SETTABLE 	R0 K0 R1 ; R0["mTimerName"] := R1
	5	[449]	GETUPVAL 	R0 U0 ; R0 := U0
	6	[455]	CLOSURE  	R1 0 ; R1 := closure(Function #1)
	7	[455]	GETUPVAL 	R0 U1 ; R0 := U1
	8	[455]	SETTABLE 	R0 K2 R1 ; R0["Show"] := R1
	9	[457]	GETUPVAL 	R0 U0 ; R0 := U0
	10	[530]	CLOSURE  	R1 1 ; R1 := closure(Function #2)
	11	[530]	GETUPVAL 	R0 U0 ; R0 := U0
	12	[530]	GETUPVAL 	R0 U2 ; R0 := U2
	13	[530]	GETUPVAL 	R0 U3 ; R0 := U3
	14	[530]	GETUPVAL 	R0 U4 ; R0 := U4
	15	[530]	GETUPVAL 	R0 U5 ; R0 := U5
	16	[530]	SETTABLE 	R0 K3 R1 ; R0["Update"] := R1
	17	[532]	GETUPVAL 	R0 U0 ; R0 := U0
	18	[541]	CLOSURE  	R1 2 ; R1 := closure(Function #3)
	19	[541]	GETUPVAL 	R0 U2 ; R0 := U2
	20	[541]	GETUPVAL 	R0 U0 ; R0 := U0
	21	[541]	GETUPVAL 	R0 U4 ; R0 := U4
	22	[541]	SETTABLE 	R0 K4 R1 ; R0["Hide"] := R1
	23	[542]	GETUPVAL 	R0 U0 ; R0 := U0
	24	[542]	GETUPVAL 	R1 U1 ; R1 := U1
	25	[542]	GETTABLE 	R1 R1 K6 ; R1 := R1[0x4c3dfdb3]
	26	[542]	NEWTABLE 	R2 0 2 ; R2 := {}
	27	[542]	SETTABLE 	R2 K7 K8 ; R2["time"] := -1.000000
	28	[542]	SETTABLE 	R2 K9 K10 ; R2["timerStopped"] := true
	29	[542]	GETUPVAL 	R3 U0 ; R3 := U0
	30	[542]	GETTABLE 	R3 R3 K3 ; R3 := R3["Update"]
	31	[542]	CLOSURE  	R4 3 ; R4 := closure(Function #4)
	32	[542]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	33	[542]	SETTABLE 	R0 K5 R1 ; R0["timer"] := R1
	34	[544]	GETGLOBAL	R0 K11 ; R0 := 0xae91e43b
	35	[544]	SELF     	R0 R0 K12 ; R1 := R0; R0 := R0[0x67bc869f]
	36	[544]	LOADK    	R2 K13 ; R2 := "MiniMapContainer.MissionCountdown"
	37	[544]	LOADK    	R3 := 10.000000
	38	[544]	LOADK    	R4 := 0.000000
	39	[544]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	40	[545]	GETGLOBAL	R0 K11 ; R0 := 0xae91e43b
	41	[545]	SELF     	R0 R0 K14 ; R1 := R0; R0 := R0[0x20b98db3]
	42	[545]	LOADK    	R2 K15 ; R2 := "MiniMapContainer.MissionCountdown.Title.text"
	43	[545]	LOADK    	R3 K16 ; R3 := "/Lotus/Language/Menu/AlertPopup_Time"
	44	[545]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	45	[546]	GETGLOBAL	R0 K11 ; R0 := 0xae91e43b
	46	[546]	SELF     	R0 R0 K12 ; R1 := R0; R0 := R0[0x67bc869f]
	47	[546]	LOADK    	R2 K17 ; R2 := "MiniMapContainer.DefenseTarget.LostHealth"
	48	[546]	LOADK    	R3 := 10.000000
	49	[546]	LOADK    	R4 := 0.000000
	50	[546]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	51	[547]	GETGLOBAL	R0 K11 ; R0 := 0xae91e43b
	52	[547]	SELF     	R0 R0 K12 ; R1 := R0; R0 := R0[0x67bc869f]
	53	[547]	LOADK    	R2 K18 ; R2 := "MiniMapContainer.DefenseTarget.LostHealth.Label"
	54	[547]	LOADK    	R3 := 36.000000
	55	[547]	GETGLOBAL	R4 K19 ; R4 := 0x0032441c
	56	[547]	GETTABLE 	R4 R4 K20 ; R4 := R4["UIColor_Red"]
	57	[547]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	58	[549]	GETGLOBAL	R0 K11 ; R0 := 0xae91e43b
	59	[549]	SELF     	R0 R0 K12 ; R1 := R0; R0 := R0[0x67bc869f]
	60	[549]	LOADK    	R2 K21 ; R2 := "BorderBox"
	61	[549]	LOADK    	R3 := 10.000000
	62	[549]	LOADK    	R4 := 0.000000
	63	[549]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	64	[550]	RETURN   	R0 1 ; return 

function #16 <?:552,558> (24 instructions, 96 bytes at 0000021131C094A0)
3 params, 9 slots, 1 upvalue, 0 locals, 7 constants, 0 functions
	1	[553]	TEST     	R1 1 ; if R1 then PC := 4
	2	[553]	JMP      	4 ; PC := 4
	3	[553]	LOADK    	R1 K0 ; R1 := ""
	4	[554]	GETGLOBAL	R3 K1 ; R3 := 0x7f5022cf
	5	[554]	GETTABLE 	R3 R3 K2 ; R3 := R3[0xa5c556b9]
	6	[554]	MOVE     	R4 R1 ; R4 := R1
	7	[554]	LOADK    	R5 K3 ; R5 := "<p>"
	8	[554]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	9	[554]	TEST     	R3 1 ; if R3 then PC := 16
	10	[554]	JMP      	16 ; PC := 16
	11	[555]	GETGLOBAL	R3 K1 ; R3 := 0x7f5022cf
	12	[555]	GETTABLE 	R3 R3 K4 ; R3 := R3[0x3f3e4d12]
	13	[555]	MOVE     	R4 R1 ; R4 := R1
	14	[555]	CALL     	R3 2 2 ; R3 := R3(R4)
	15	[555]	MOVE     	R1 R3 ; R1 := R3
	16	[557]	GETUPVAL 	R3 U0 ; R3 := U0
	17	[557]	GETTABLE 	R3 R3 K5 ; R3 := R3[0xf6e70fb6]
	18	[557]	GETGLOBAL	R4 K6 ; R4 := 0xae91e43b
	19	[557]	LOADNIL  	R5 R5 ; R5 := nil
	20	[557]	MOVE     	R6 R0 ; R6 := R0
	21	[557]	MOVE     	R7 R1 ; R7 := R1
	22	[557]	MOVE     	R8 R2 ; R8 := R2
	23	[557]	CALL     	R3 6 1 ; R3(R4,R5,R6,R7,R8)
	24	[558]	RETURN   	R0 1 ; return 

function #17 <?:561,567> (11 instructions, 44 bytes at 00000211351C6330)
0 params, 5 slots, 1 upvalue, 0 locals, 4 constants, 1 function
	1	[562]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[565]	CLOSURE  	R1 0 ; R1 := closure(Function #1)
	3	[565]	GETUPVAL 	R0 U0 ; R0 := U0
	4	[565]	SETTABLE 	R0 K0 R1 ; R0["CalculatePosition"] := R1
	5	[566]	GETGLOBAL	R0 K1 ; R0 := 0xae91e43b
	6	[566]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x67bc869f]
	7	[566]	LOADK    	R2 K3 ; R2 := "AbilityPanel.AbilityMessage"
	8	[566]	LOADK    	R3 := 10.000000
	9	[566]	LOADK    	R4 := 0.000000
	10	[566]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	11	[567]	RETURN   	R0 1 ; return 

function #18 <?:569,574> (15 instructions, 60 bytes at 0000021118724760)
1 param, 4 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[570]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[570]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[570]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[570]	TEST     	R1 1 ; if R1 then PC := 15
	5	[570]	JMP      	15 ; PC := 15
	6	[571]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[571]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x2ec867ea]
	8	[571]	EQ       	0 R0 K2 ; if R0 ~= "false" then PC := 11
	9	[571]	JMP      	11 ; PC := 11
	10	[571]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 11
	11	[571]	OP_LOADBOOL	R3 1 0 ; R3 := true
	12	[571]	CALL     	R1 3 1 ; R1(R2,R3)
	13	[572]	GETGLOBAL	R1 K3 ; R1 := _T
	14	[572]	SETTABLE 	R1 K4 K5 ; R1["reticleState"] := false
	15	[574]	RETURN   	R0 1 ; return 

function #19 <?:576,581> (43 instructions, 172 bytes at 000002111FAF3A50)
1 param, 4 slots, 2 upvalues, 0 locals, 11 constants, 0 functions
	1	[577]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[577]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[577]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[577]	TEST     	R1 1 ; if R1 then PC := 43
	5	[577]	JMP      	43 ; PC := 43
	6	[577]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	7	[577]	GETUPVAL 	R2 U1 ; R2 := U1
	8	[577]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[577]	TEST     	R1 1 ; if R1 then PC := 23
	10	[577]	JMP      	23 ; PC := 23
	11	[577]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	12	[577]	GETUPVAL 	R2 U1 ; R2 := U1
	13	[577]	GETTABLE 	R2 R2 K1 ; R2 := R2["InventoryController"]
	14	[577]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[577]	TEST     	R1 1 ; if R1 then PC := 23
	16	[577]	JMP      	23 ; PC := 23
	17	[577]	GETUPVAL 	R1 U1 ; R1 := U1
	18	[577]	GETTABLE 	R1 R1 K1 ; R1 := R1["InventoryController"]
	19	[577]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xac03381f]
	20	[577]	CALL     	R1 2 2 ; R1 := R1(R2)
	21	[577]	TEST     	R1 1 ; if R1 then PC := 43
	22	[577]	JMP      	43 ; PC := 43
	23	[577]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	24	[577]	GETGLOBAL	R2 K3 ; R2 := 0xbe190284
	25	[577]	CALL     	R1 2 2 ; R1 := R1(R2)
	26	[577]	TEST     	R1 1 ; if R1 then PC := 34
	27	[577]	JMP      	34 ; PC := 34
	28	[577]	GETGLOBAL	R1 K3 ; R1 := 0xbe190284
	29	[577]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xf2deaf69]
	30	[577]	GETGLOBAL	R3 K5 ; R3 := gLotusSpeedballGameRulesType
	31	[577]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	32	[577]	TEST     	R1 1 ; if R1 then PC := 43
	33	[577]	JMP      	43 ; PC := 43
	34	[578]	GETUPVAL 	R1 U0 ; R1 := U0
	35	[578]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0xe1bb46c1]
	36	[578]	EQ       	0 R0 K7 ; if R0 ~= false then PC := 39
	37	[578]	JMP      	39 ; PC := 39
	38	[578]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 39
	39	[578]	OP_LOADBOOL	R3 1 0 ; R3 := true
	40	[578]	CALL     	R1 3 1 ; R1(R2,R3)
	41	[579]	GETGLOBAL	R1 K8 ; R1 := _T
	42	[579]	SETTABLE 	R1 K9 K10 ; R1["reticleState"] := true
	43	[581]	RETURN   	R0 1 ; return 

function #20 <?:583,589> (10 instructions, 40 bytes at 000002111857EBC0)
1 param, 3 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[584]	EQ       	0 R0 K0 ; if R0 ~= "false" then PC := 7
	2	[584]	JMP      	7 ; PC := 7
	3	[585]	GETUPVAL 	R1 U0 ; R1 := U0
	4	[585]	OP_LOADBOOL	R2 0 0 ; R2 := false
	5	[585]	CALL     	R1 2 1 ; R1(R2)
	6	[585]	JMP      	10 ; PC := 10
	7	[587]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[587]	OP_LOADBOOL	R2 1 0 ; R2 := true
	9	[587]	CALL     	R1 2 1 ; R1(R2)
	10	[589]	RETURN   	R0 1 ; return 

function #21 <?:591,605> (38 instructions, 152 bytes at 0000021118586180)
1 param, 7 slots, 2 upvalues, 0 locals, 9 constants, 0 functions
	1	[592]	EQ       	1 R0 K0 ; if R0 == "true" then PC := 4
	2	[592]	JMP      	4 ; PC := 4
	3	[592]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 4
	4	[592]	OP_LOADBOOL	R0 1 0 ; R0 := true
	5	[594]	GETUPVAL 	R1 U0 ; R1 := U0
	6	[594]	GETTABLE 	R1 R1 K1 ; R1 := R1["IsAlternateHud"]
	7	[594]	TEST     	R1 1 ; if R1 then PC := 38
	8	[594]	JMP      	38 ; PC := 38
	9	[595]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	10	[595]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xaade900e]
	11	[595]	LOADK    	R3 K4 ; R3 := "Reticle"
	12	[595]	LOADK    	R4 := 11.000000
	13	[595]	MOVE     	R5 R0 ; R5 := R0
	14	[595]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	15	[597]	GETGLOBAL	R1 K5 ; R1 := 0x7b998233
	16	[597]	GETUPVAL 	R2 U1 ; R2 := U1
	17	[597]	CALL     	R1 2 2 ; R1 := R1(R2)
	18	[597]	TEST     	R1 1 ; if R1 then PC := 38
	19	[597]	JMP      	38 ; PC := 38
	20	[598]	GETUPVAL 	R1 U1 ; R1 := U1
	21	[598]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x603d617e]
	22	[598]	CALL     	R1 2 2 ; R1 := R1(R2)
	23	[599]	GETGLOBAL	R2 K5 ; R2 := 0x7b998233
	24	[599]	MOVE     	R3 R1 ; R3 := R1
	25	[599]	CALL     	R2 2 2 ; R2 := R2(R3)
	26	[599]	TEST     	R2 1 ; if R2 then PC := 38
	27	[599]	JMP      	38 ; PC := 38
	28	[600]	SELF     	R2 R1 K3 ; R3 := R1; R2 := R1[0xaade900e]
	29	[600]	LOADK    	R4 K7 ; R4 := "_root"
	30	[600]	LOADK    	R5 := 11.000000
	31	[600]	OP_LOADBOOL	R6 1 0 ; R6 := true
	32	[600]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	33	[601]	SELF     	R2 R1 K8 ; R3 := R1; R2 := R1[0x67bc869f]
	34	[601]	LOADK    	R4 K7 ; R4 := "_root"
	35	[601]	LOADK    	R5 := 10.000000
	36	[601]	LOADK    	R6 := 100.000000
	37	[601]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	38	[605]	RETURN   	R0 1 ; return 

function #22 <?:607,611> (13 instructions, 52 bytes at 000002112C012640)
1 param, 4 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[608]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[608]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[608]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[608]	TEST     	R1 1 ; if R1 then PC := 13
	5	[608]	JMP      	13 ; PC := 13
	6	[609]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[609]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x5e7f1652]
	8	[609]	EQ       	0 R0 K2 ; if R0 ~= "false" then PC := 11
	9	[609]	JMP      	11 ; PC := 11
	10	[609]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 11
	11	[609]	OP_LOADBOOL	R3 1 0 ; R3 := true
	12	[609]	CALL     	R1 3 1 ; R1(R2,R3)
	13	[611]	RETURN   	R0 1 ; return 

function #23 <?:613,615> (7 instructions, 28 bytes at 0000021192429290)
0 params, 5 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[614]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[614]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xaade900e]
	3	[614]	LOADK    	R2 K2 ; R2 := "HealthAndShield.SuitAffinity"
	4	[614]	LOADK    	R3 := 11.000000
	5	[614]	OP_LOADBOOL	R4 0 0 ; R4 := false
	6	[614]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	7	[615]	RETURN   	R0 1 ; return 

function #24 <?:617,619> (7 instructions, 28 bytes at 000002119242FD00)
0 params, 5 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[618]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[618]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xaade900e]
	3	[618]	LOADK    	R2 K2 ; R2 := "HealthAndShield.SuitAffinity"
	4	[618]	LOADK    	R3 := 11.000000
	5	[618]	OP_LOADBOOL	R4 1 0 ; R4 := true
	6	[618]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	7	[619]	RETURN   	R0 1 ; return 

function #25 <?:621,623> (5 instructions, 20 bytes at 000002112EF6EC50)
0 params, 3 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[622]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[622]	SELF     	R0 R0 K0 ; R1 := R0; R0 := R0[0xe95b7a4b]
	3	[622]	OP_LOADBOOL	R2 0 0 ; R2 := false
	4	[622]	CALL     	R0 3 1 ; R0(R1,R2)
	5	[623]	RETURN   	R0 1 ; return 

function #26 <?:625,627> (5 instructions, 20 bytes at 0000021192C09F90)
0 params, 3 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[626]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[626]	SELF     	R0 R0 K0 ; R1 := R0; R0 := R0[0xe95b7a4b]
	3	[626]	OP_LOADBOOL	R2 1 0 ; R2 := true
	4	[626]	CALL     	R0 3 1 ; R0(R1,R2)
	5	[627]	RETURN   	R0 1 ; return 

function #27 <?:629,647> (56 instructions, 224 bytes at 0000021131A9A7D0)
0 params, 12 slots, 5 upvalues, 0 locals, 13 constants, 0 functions
	1	[630]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[630]	GETUPVAL 	R1 U1 ; R1 := U1
	3	[630]	GETTABLE 	R1 R1 K1 ; R1 := R1[0xfa221145]
	4	[630]	GETGLOBAL	R2 K2 ; R2 := 0xae91e43b
	5	[630]	GETUPVAL 	R3 U0 ; R3 := U0
	6	[630]	GETTABLE 	R3 R3 K3 ; R3 := R3["HudScale"]
	7	[630]	GETUPVAL 	R4 U2 ; R4 := U2
	8	[630]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	9	[630]	SETTABLE 	R0 K0 R1 ; R0["HudScalePadding"] := R1
	10	[632]	GETGLOBAL	R0 K4 ; R0 := 0x7b998233
	11	[632]	GETUPVAL 	R1 U3 ; R1 := U3
	12	[632]	CALL     	R0 2 2 ; R0 := R0(R1)
	13	[632]	TEST     	R0 1 ; if R0 then PC := 18
	14	[632]	JMP      	18 ; PC := 18
	15	[633]	GETUPVAL 	R0 U3 ; R0 := U3
	16	[633]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xfa221145]
	17	[633]	CALL     	R0 2 1 ; R0(R1)
	18	[636]	GETGLOBAL	R0 K4 ; R0 := 0x7b998233
	19	[636]	GETUPVAL 	R1 U2 ; R1 := U2
	20	[636]	CALL     	R0 2 2 ; R0 := R0(R1)
	21	[636]	TEST     	R0 1 ; if R0 then PC := 56
	22	[636]	JMP      	56 ; PC := 56
	23	[637]	LOADNIL  	R0 R0 ; R0 := nil
	24	[638]	GETGLOBAL	R1 K5 ; R1 := 0xcfc01047
	25	[638]	GETUPVAL 	R2 U4 ; R2 := U4
	26	[638]	CALL     	R1 2 4 ; R1,R2,R3 := R1(R2)
	27	[638]	JMP      	54 ; PC := 54
	28	[639]	GETUPVAL 	R6 U2 ; R6 := U2
	29	[639]	SELF     	R6 R6 K6 ; R7 := R6; R6 := R6[0x2de3d774]
	30	[639]	GETTABLE 	R8 R5 K7 ; R8 := R5["Clip"]
	31	[639]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	32	[639]	MOVE     	R0 R6 ; R0 := R6
	33	[640]	GETUPVAL 	R6 U3 ; R6 := U3
	34	[640]	SELF     	R6 R6 K8 ; R7 := R6; R6 := R6[0x31669273]
	35	[640]	GETTABLE 	R8 R5 K9 ; R8 := R5["Movie"]
	36	[640]	GETTABLE 	R9 R5 K7 ; R9 := R5["Clip"]
	37	[640]	GETTABLE 	R10 R0 K10 ; R10 := R0["x"]
	38	[640]	GETTABLE 	R11 R0 K11 ; R11 := R0["y"]
	39	[640]	CALL     	R6 6 1 ; R6(R7,R8,R9,R10,R11)
	40	[642]	GETTABLE 	R6 R5 K12 ; R6 := R5["HandleHudScale"]
	41	[642]	TEST     	R6 0 ; if not R6 then PC := 54
	42	[642]	JMP      	54 ; PC := 54
	43	[642]	GETGLOBAL	R6 K4 ; R6 := 0x7b998233
	44	[642]	GETTABLE 	R7 R5 K9 ; R7 := R5["Movie"]
	45	[642]	CALL     	R6 2 2 ; R6 := R6(R7)
	46	[642]	TEST     	R6 1 ; if R6 then PC := 54
	47	[642]	JMP      	54 ; PC := 54
	48	[643]	GETUPVAL 	R6 U1 ; R6 := U1
	49	[643]	GETTABLE 	R6 R6 K1 ; R6 := R6[0xfa221145]
	50	[643]	GETTABLE 	R7 R5 K9 ; R7 := R5["Movie"]
	51	[643]	GETUPVAL 	R8 U0 ; R8 := U0
	52	[643]	GETTABLE 	R8 R8 K3 ; R8 := R8["HudScale"]
	53	[643]	CALL     	R6 3 1 ; R6(R7,R8)
	54	[638]	TFORLOOP 	R1 2 ; R4,R5 := R1(R2,R3); if R4 ~= nil then begin PC = 28; R3 := R4 end
	55	[644]	JMP      	28 ; PC := 28
	56	[647]	RETURN   	R0 1 ; return 

function #28 <?:649,689> (150 instructions, 600 bytes at 000002111859AC20)
0 params, 12 slots, 1 upvalue, 0 locals, 14 constants, 0 functions
	1	[650]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[650]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x6b837788]
	3	[650]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[651]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	5	[651]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xaf9fda9f]
	6	[651]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[652]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	8	[652]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0x091c120e]
	9	[652]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[652]	LT       	1 R0 R2 ; if R0 < R2 then PC := 17
	11	[652]	JMP      	17 ; PC := 17
	12	[652]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	13	[652]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0x2cc9d281]
	14	[652]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[652]	LT       	0 R1 R2 ; if R1 >= R2 then PC := 30
	16	[652]	JMP      	30 ; PC := 30
	17	[652]	GETGLOBAL	R2 K5 ; R2 := 0x34291f5c
	18	[652]	GETTABLE 	R2 R2 K6 ; R2 := R2[0x056bfe8b]
	19	[652]	CALL     	R2 1 2 ; R2 := R2()
	20	[652]	TEST     	R2 1 ; if R2 then PC := 30
	21	[652]	JMP      	30 ; PC := 30
	22	[653]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	23	[653]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0x091c120e]
	24	[653]	CALL     	R2 2 2 ; R2 := R2(R3)
	25	[653]	MOVE     	R0 R2 ; R0 := R2
	26	[654]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	27	[654]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0x2cc9d281]
	28	[654]	CALL     	R2 2 2 ; R2 := R2(R3)
	29	[654]	MOVE     	R1 R2 ; R1 := R2
	30	[657]	GETGLOBAL	R2 K5 ; R2 := 0x34291f5c
	31	[657]	GETTABLE 	R2 R2 K6 ; R2 := R2[0x056bfe8b]
	32	[657]	CALL     	R2 1 2 ; R2 := R2()
	33	[657]	TEST     	R2 0 ; if not R2 then PC := 43
	34	[657]	JMP      	43 ; PC := 43
	35	[658]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	36	[658]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0x091c120e]
	37	[658]	CALL     	R2 2 2 ; R2 := R2(R3)
	38	[658]	MOVE     	R0 R2 ; R0 := R2
	39	[659]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	40	[659]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0x2cc9d281]
	41	[659]	CALL     	R2 2 2 ; R2 := R2(R3)
	42	[659]	MOVE     	R1 R2 ; R1 := R2
	43	[662]	LOADK    	R2 := 70.000000
	44	[664]	GETUPVAL 	R3 U0 ; R3 := U0
	45	[664]	GETTABLE 	R3 R3 K7 ; R3 := R3["HudScale"]
	46	[664]	DIV      	R3 R0 R3 ; R3 := R0 / R3
	47	[665]	SUB      	R4 R0 R3 ; R4 := R0 - R3
	48	[666]	GETUPVAL 	R5 U0 ; R5 := U0
	49	[666]	GETTABLE 	R5 R5 K7 ; R5 := R5["HudScale"]
	50	[666]	DIV      	R5 R1 R5 ; R5 := R1 / R5
	51	[667]	SUB      	R6 R1 R5 ; R6 := R1 - R5
	52	[669]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	53	[669]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x67bc869f]
	54	[669]	LOADK    	R9 K9 ; R9 := "PainTop"
	55	[669]	LOADK    	R10 := 0.000000
	56	[669]	DIV      	R11 R0 K10 ; R11 := R0 / 2.000000
	57	[669]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	58	[670]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	59	[670]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x67bc869f]
	60	[670]	LOADK    	R9 K9 ; R9 := "PainTop"
	61	[670]	LOADK    	R10 := 1.000000
	62	[670]	DIV      	R11 R6 K10 ; R11 := R6 / 2.000000
	63	[670]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	64	[671]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	65	[671]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x67bc869f]
	66	[671]	LOADK    	R9 K9 ; R9 := "PainTop"
	67	[671]	LOADK    	R10 := 12.000000
	68	[671]	MOVE     	R11 R3 ; R11 := R3
	69	[671]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	70	[672]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	71	[672]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x67bc869f]
	72	[672]	LOADK    	R9 K9 ; R9 := "PainTop"
	73	[672]	LOADK    	R10 := 13.000000
	74	[672]	MOVE     	R11 R2 ; R11 := R2
	75	[672]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	76	[674]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	77	[674]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x67bc869f]
	78	[674]	LOADK    	R9 K11 ; R9 := "PainBottom"
	79	[674]	LOADK    	R10 := 0.000000
	80	[674]	DIV      	R11 R0 K10 ; R11 := R0 / 2.000000
	81	[674]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	82	[675]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	83	[675]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x67bc869f]
	84	[675]	LOADK    	R9 K11 ; R9 := "PainBottom"
	85	[675]	LOADK    	R10 := 1.000000
	86	[675]	DIV      	R11 R6 K10 ; R11 := R6 / 2.000000
	87	[675]	ADD      	R11 R5 R11 ; R11 := R5 + R11
	88	[675]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	89	[676]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	90	[676]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x67bc869f]
	91	[676]	LOADK    	R9 K11 ; R9 := "PainBottom"
	92	[676]	LOADK    	R10 := 12.000000
	93	[676]	MOVE     	R11 R3 ; R11 := R3
	94	[676]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	95	[677]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	96	[677]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x67bc869f]
	97	[677]	LOADK    	R9 K11 ; R9 := "PainBottom"
	98	[677]	LOADK    	R10 := 13.000000
	99	[677]	MOVE     	R11 R2 ; R11 := R2
	100	[677]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	101	[679]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	102	[679]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x67bc869f]
	103	[679]	LOADK    	R9 K12 ; R9 := "PainLeft"
	104	[679]	LOADK    	R10 := 0.000000
	105	[679]	DIV      	R11 R4 K10 ; R11 := R4 / 2.000000
	106	[679]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	107	[680]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	108	[680]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x67bc869f]
	109	[680]	LOADK    	R9 K12 ; R9 := "PainLeft"
	110	[680]	LOADK    	R10 := 1.000000
	111	[680]	DIV      	R11 R1 K10 ; R11 := R1 / 2.000000
	112	[680]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	113	[681]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	114	[681]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x67bc869f]
	115	[681]	LOADK    	R9 K12 ; R9 := "PainLeft"
	116	[681]	LOADK    	R10 := 12.000000
	117	[681]	MOVE     	R11 R2 ; R11 := R2
	118	[681]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	119	[682]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	120	[682]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x67bc869f]
	121	[682]	LOADK    	R9 K12 ; R9 := "PainLeft"
	122	[682]	LOADK    	R10 := 13.000000
	123	[682]	MOVE     	R11 R5 ; R11 := R5
	124	[682]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	125	[685]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	126	[685]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x67bc869f]
	127	[685]	LOADK    	R9 K13 ; R9 := "PainRight"
	128	[685]	LOADK    	R10 := 0.000000
	129	[685]	DIV      	R11 R4 K10 ; R11 := R4 / 2.000000
	130	[685]	ADD      	R11 R3 R11 ; R11 := R3 + R11
	131	[685]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	132	[686]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	133	[686]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x67bc869f]
	134	[686]	LOADK    	R9 K13 ; R9 := "PainRight"
	135	[686]	LOADK    	R10 := 1.000000
	136	[686]	DIV      	R11 R1 K10 ; R11 := R1 / 2.000000
	137	[686]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	138	[687]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	139	[687]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x67bc869f]
	140	[687]	LOADK    	R9 K13 ; R9 := "PainRight"
	141	[687]	LOADK    	R10 := 12.000000
	142	[687]	MOVE     	R11 R2 ; R11 := R2
	143	[687]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	144	[688]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	145	[688]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x67bc869f]
	146	[688]	LOADK    	R9 K13 ; R9 := "PainRight"
	147	[688]	LOADK    	R10 := 13.000000
	148	[688]	MOVE     	R11 R5 ; R11 := R5
	149	[688]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	150	[689]	RETURN   	R0 1 ; return 

function #29 <?:692,697> (5 instructions, 20 bytes at 0000021118593EB0)
4 params, 5 slots, 2 upvalues, 0 locals, 0 constants, 0 functions
	1	[693]	GETUPVAL 	R4 U0 ; R4 := U0
	2	[693]	CALL     	R4 1 1 ; R4()
	3	[696]	GETUPVAL 	R4 U1 ; R4 := U1
	4	[696]	CALL     	R4 1 1 ; R4()
	5	[697]	RETURN   	R0 1 ; return 

function #30 <?:700,717> (66 instructions, 264 bytes at 000002112C894A30)
2 params, 7 slots, 0 upvalues, 0 locals, 11 constants, 0 functions
	1	[701]	OP_LOADBOOL	R2 0 0 ; R2 := false
	2	[703]	EQ       	1 R0 K0 ; if R0 == nil then PC := 9
	3	[703]	JMP      	9 ; PC := 9
	4	[703]	EQ       	1 R1 K0 ; if R1 == nil then PC := 9
	5	[703]	JMP      	9 ; PC := 9
	6	[703]	GETTABLE 	R3 R0 K1 ; R3 := R0["mInstigator"]
	7	[703]	EQ       	0 R3 K0 ; if R3 ~= nil then PC := 10
	8	[703]	JMP      	10 ; PC := 10
	9	[704]	RETURN   	R2 2 ; return R2 
	10	[707]	GETTABLE 	R3 R0 K1 ; R3 := R0["mInstigator"]
	11	[707]	GETTABLE 	R3 R3 K2 ; R3 := R3["avatar"]
	12	[707]	GETTABLE 	R4 R1 K3 ; R4 := R1["Instigator"]
	13	[707]	EQ       	1 R3 R4 ; if R3 == R4 then PC := 16
	14	[707]	JMP      	16 ; PC := 16
	15	[707]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 16
	16	[707]	OP_LOADBOOL	R3 1 0 ; R3 := true
	17	[708]	GETGLOBAL	R4 K4 ; R4 := 0x7b998233
	18	[708]	GETTABLE 	R5 R0 K1 ; R5 := R0["mInstigator"]
	19	[708]	GETTABLE 	R5 R5 K5 ; R5 := R5["player"]
	20	[708]	CALL     	R4 2 2 ; R4 := R4(R5)
	21	[708]	TEST     	R4 1 ; if R4 then PC := 38
	22	[708]	JMP      	38 ; PC := 38
	23	[708]	GETGLOBAL	R4 K4 ; R4 := 0x7b998233
	24	[708]	GETTABLE 	R5 R1 K3 ; R5 := R1["Instigator"]
	25	[708]	CALL     	R4 2 2 ; R4 := R4(R5)
	26	[708]	TEST     	R4 1 ; if R4 then PC := 38
	27	[708]	JMP      	38 ; PC := 38
	28	[709]	GETTABLE 	R4 R0 K1 ; R4 := R0["mInstigator"]
	29	[709]	GETTABLE 	R4 R4 K5 ; R4 := R4["player"]
	30	[709]	GETTABLE 	R5 R1 K3 ; R5 := R1["Instigator"]
	31	[709]	SELF     	R5 R5 K6 ; R6 := R5; R5 := R5[0x5b89142c]
	32	[709]	CALL     	R5 2 2 ; R5 := R5(R6)
	33	[709]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 36
	34	[709]	JMP      	36 ; PC := 36
	35	[709]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 36
	36	[709]	OP_LOADBOOL	R3 1 0 ; R3 := true
	37	[709]	JMP      	50 ; PC := 50
	38	[710]	GETGLOBAL	R4 K4 ; R4 := 0x7b998233
	39	[710]	GETTABLE 	R5 R0 K1 ; R5 := R0["mInstigator"]
	40	[710]	GETTABLE 	R5 R5 K2 ; R5 := R5["avatar"]
	41	[710]	CALL     	R4 2 2 ; R4 := R4(R5)
	42	[710]	TEST     	R4 0 ; if not R4 then PC := 50
	43	[710]	JMP      	50 ; PC := 50
	44	[710]	GETGLOBAL	R4 K4 ; R4 := 0x7b998233
	45	[710]	GETTABLE 	R5 R1 K3 ; R5 := R1["Instigator"]
	46	[710]	CALL     	R4 2 2 ; R4 := R4(R5)
	47	[710]	TEST     	R4 0 ; if not R4 then PC := 50
	48	[710]	JMP      	50 ; PC := 50
	49	[711]	OP_LOADBOOL	R3 1 0 ; R3 := true
	50	[714]	TESTSET  	R2 R3 0 ; if not R3 then PC := 65 else R2 := R3 
	51	[714]	JMP      	65 ; PC := 65
	52	[714]	GETTABLE 	R4 R0 K7 ; R4 := R0["mAbilityType"]
	53	[714]	EQ       	1 R4 K0 ; if R4 == nil then PC := 63
	54	[714]	JMP      	63 ; PC := 63
	55	[714]	GETTABLE 	R4 R0 K7 ; R4 := R0["mAbilityType"]
	56	[714]	GETTABLE 	R5 R1 K8 ; R5 := R1["AbilityType"]
	57	[714]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 63
	58	[714]	JMP      	63 ; PC := 63
	59	[714]	GETTABLE 	R4 R0 K9 ; R4 := R0["mAugmentType"]
	60	[714]	GETTABLE 	R5 R1 K10 ; R5 := R1["AugmentType"]
	61	[714]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 64
	62	[714]	JMP      	64 ; PC := 64
	63	[714]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 64
	64	[714]	OP_LOADBOOL	R2 1 0 ; R2 := true
	65	[716]	RETURN   	R2 2 ; return R2 
	66	[717]	RETURN   	R0 1 ; return 

function #31 <?:719,727> (22 instructions, 88 bytes at 0000021192E342D0)
1 param, 4 slots, 2 upvalues, 0 locals, 5 constants, 0 functions
	1	[720]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[720]	GETTABLE 	R1 R1 K0 ; R1 := R1["Status"]
	3	[720]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 12
	4	[720]	JMP      	12 ; PC := 12
	5	[720]	EQ       	1 R0 K1 ; if R0 == nil then PC := 12
	6	[720]	JMP      	12 ; PC := 12
	7	[720]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	8	[720]	GETTABLE 	R2 R0 K3 ; R2 := R0["mAbilityType"]
	9	[720]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[720]	TEST     	R1 0 ; if not R1 then PC := 13
	11	[720]	JMP      	13 ; PC := 13
	12	[721]	RETURN   	R0 1 ; return 
	13	[724]	GETUPVAL 	R1 U1 ; R1 := U1
	14	[724]	MOVE     	R2 R0 ; R2 := R0
	15	[724]	GETUPVAL 	R3 U0 ; R3 := U0
	16	[724]	GETTABLE 	R3 R3 K4 ; R3 := R3["Stat"]
	17	[724]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	18	[724]	TEST     	R1 0 ; if not R1 then PC := 22
	19	[724]	JMP      	22 ; PC := 22
	20	[725]	GETUPVAL 	R1 U0 ; R1 := U0
	21	[725]	SETTABLE 	R1 K0 R0 ; R1["Status"] := R0
	22	[727]	RETURN   	R0 1 ; return 

function #32 <?:738,831> (266 instructions, 1064 bytes at 00000211363F4250)
1 param, 19 slots, 6 upvalues, 0 locals, 47 constants, 0 functions
	1	[739]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[739]	EQ       	1 R1 K0 ; if R1 == nil then PC := 11
	3	[739]	JMP      	11 ; PC := 11
	4	[739]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	5	[739]	GETUPVAL 	R2 U1 ; R2 := U1
	6	[739]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[739]	TEST     	R1 1 ; if R1 then PC := 11
	8	[739]	JMP      	11 ; PC := 11
	9	[739]	EQ       	0 R0 K0 ; if R0 ~= nil then PC := 12
	10	[739]	JMP      	12 ; PC := 12
	11	[740]	RETURN   	R0 1 ; return 
	12	[743]	GETGLOBAL	R1 K2 ; R1 := 0xe72d2edb
	13	[743]	EQ       	0 R1 K4 ; if R1 ~= 4.000000 then PC := 27
	14	[743]	JMP      	27 ; PC := 27
	15	[744]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	16	[744]	GETTABLE 	R2 R0 K5 ; R2 := R0["abilityType"]
	17	[744]	CALL     	R1 2 2 ; R1 := R1(R2)
	18	[744]	TEST     	R1 1 ; if R1 then PC := 27
	19	[744]	JMP      	27 ; PC := 27
	20	[744]	GETTABLE 	R1 R0 K5 ; R1 := R0["abilityType"]
	21	[744]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0xf2deaf69]
	22	[744]	GETGLOBAL	R3 K7 ; R3 := gLotusInventoryControllerType
	23	[744]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	24	[744]	TEST     	R1 0 ; if not R1 then PC := 27
	25	[744]	JMP      	27 ; PC := 27
	26	[746]	RETURN   	R0 1 ; return 
	27	[750]	LOADNIL  	R1 R1 ; R1 := nil
	28	[751]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	29	[751]	GETUPVAL 	R3 U2 ; R3 := U2
	30	[751]	CALL     	R2 2 2 ; R2 := R2(R3)
	31	[751]	TEST     	R2 1 ; if R2 then PC := 38
	32	[751]	JMP      	38 ; PC := 38
	33	[752]	GETUPVAL 	R2 U2 ; R2 := U2
	34	[752]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0xbb610e5b]
	35	[752]	CALL     	R2 2 2 ; R2 := R2(R3)
	36	[752]	MOVE     	R1 R2 ; R1 := R2
	37	[752]	JMP      	39 ; PC := 39
	38	[754]	GETUPVAL 	R1 U1 ; R1 := U1
	39	[756]	LOADNIL  	R2 R2 ; R2 := nil
	40	[758]	GETGLOBAL	R3 K1 ; R3 := 0x7b998233
	41	[758]	MOVE     	R4 R1 ; R4 := R1
	42	[758]	CALL     	R3 2 2 ; R3 := R3(R4)
	43	[758]	TEST     	R3 1 ; if R3 then PC := 53
	44	[758]	JMP      	53 ; PC := 53
	45	[758]	SELF     	R3 R1 K6 ; R4 := R1; R3 := R1[0xf2deaf69]
	46	[758]	GETGLOBAL	R5 K9 ; R5 := gLotusVehicleAvatarType
	47	[758]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	48	[758]	TEST     	R3 0 ; if not R3 then PC := 53
	49	[758]	JMP      	53 ; PC := 53
	50	[759]	SELF     	R3 R1 K10 ; R4 := R1; R3 := R1[0xff005826]
	51	[759]	CALL     	R3 2 2 ; R3 := R3(R4)
	52	[759]	MOVE     	R2 R3 ; R2 := R3
	53	[762]	GETUPVAL 	R3 U3 ; R3 := U3
	54	[762]	NEWTABLE 	R4 0 4 ; R4 := {}
	55	[762]	GETTABLE 	R5 R0 K13 ; R5 := R0["instigator"]
	56	[762]	SETTABLE 	R4 K12 R5 ; R4["Instigator"] := R5
	57	[762]	GETTABLE 	R5 R0 K5 ; R5 := R0["abilityType"]
	58	[762]	SETTABLE 	R4 K14 R5 ; R4["AbilityType"] := R5
	59	[762]	GETTABLE 	R5 R0 K16 ; R5 := R0["augmentType"]
	60	[762]	SETTABLE 	R4 K15 R5 ; R4["AugmentType"] := R5
	61	[762]	GETTABLE 	R5 R0 K18 ; R5 := R0["affected"]
	62	[762]	SETTABLE 	R4 K17 R5 ; R4["Affected"] := R5
	63	[762]	SETTABLE 	R3 K11 R4 ; R3["Stat"] := R4
	64	[764]	GETUPVAL 	R3 U3 ; R3 := U3
	65	[764]	GETTABLE 	R3 R3 K11 ; R3 := R3["Stat"]
	66	[764]	GETTABLE 	R3 R3 K12 ; R3 := R3["Instigator"]
	67	[764]	EQ       	1 R3 R1 ; if R3 == R1 then PC := 86
	68	[764]	JMP      	86 ; PC := 86
	69	[765]	GETUPVAL 	R3 U3 ; R3 := U3
	70	[765]	GETTABLE 	R3 R3 K11 ; R3 := R3["Stat"]
	71	[765]	GETTABLE 	R3 R3 K12 ; R3 := R3["Instigator"]
	72	[765]	EQ       	1 R3 R2 ; if R3 == R2 then PC := 86
	73	[765]	JMP      	86 ; PC := 86
	74	[766]	GETTABLE 	R3 R0 K19 ; R3 := R0["forceSquadPanel"]
	75	[766]	TEST     	R3 1 ; if R3 then PC := 87
	76	[766]	JMP      	87 ; PC := 87
	77	[767]	GETUPVAL 	R3 U4 ; R3 := U4
	78	[767]	TEST     	R3 0 ; if not R3 then PC := 87
	79	[767]	JMP      	87 ; PC := 87
	80	[767]	GETTABLE 	R3 R0 K5 ; R3 := R0["abilityType"]
	81	[767]	SELF     	R3 R3 K6 ; R4 := R3; R3 := R3[0xf2deaf69]
	82	[767]	GETGLOBAL	R5 K20 ; R5 := 0xbaec173b
	83	[767]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	84	[767]	JMP      	87 ; PC := 87
	85	[767]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 86
	86	[767]	OP_LOADBOOL	R3 1 0 ; R3 := true
	87	[769]	LOADK    	R4 := 1.000000
	88	[769]	GETUPVAL 	R5 U3 ; R5 := U3
	89	[769]	GETTABLE 	R5 R5 K11 ; R5 := R5["Stat"]
	90	[769]	GETTABLE 	R5 R5 K17 ; R5 := R5["Affected"]
	91	[769]	LEN      	R5 R5 ; R5 := # R5
	92	[769]	LOADK    	R6 := 1.000000
	93	[769]	FORPREP  	R4 250 ; R4 -= R6; PC := 250
	94	[770]	GETUPVAL 	R8 U3 ; R8 := U3
	95	[770]	GETTABLE 	R8 R8 K11 ; R8 := R8["Stat"]
	96	[770]	GETTABLE 	R8 R8 K17 ; R8 := R8["Affected"]
	97	[770]	GETTABLE 	R8 R8 R7 ; R8 := R8[R7]
	98	[772]	EQ       	1 R8 R1 ; if R8 == R1 then PC := 102
	99	[772]	JMP      	102 ; PC := 102
	100	[772]	EQ       	0 R8 R2 ; if R8 ~= R2 then PC := 250
	101	[772]	JMP      	250 ; PC := 250
	102	[773]	GETUPVAL 	R9 U3 ; R9 := U3
	103	[773]	SETTABLE 	R9 K21 K0 ; R9["Status"] := nil
	104	[774]	GETUPVAL 	R9 U0 ; R9 := U0
	105	[774]	SELF     	R9 R9 K22 ; R10 := R9; R9 := R9[0xea061e98]
	106	[774]	GETUPVAL 	R11 U3 ; R11 := U3
	107	[774]	GETTABLE 	R11 R11 K23 ; R11 := R11["IsBuffEqual"]
	108	[774]	CALL     	R9 3 1 ; R9(R10,R11)
	109	[776]	GETUPVAL 	R9 U3 ; R9 := U3
	110	[776]	GETTABLE 	R9 R9 K21 ; R9 := R9["Status"]
	111	[776]	EQ       	1 R9 K0 ; if R9 == nil then PC := 181
	112	[776]	JMP      	181 ; PC := 181
	113	[777]	OP_LOADBOOL	R9 0 0 ; R9 := false
	114	[779]	GETTABLE 	R10 R0 K24 ; R10 := R0["stackData"]
	115	[779]	TEST     	R10 0 ; if not R10 then PC := 137
	116	[779]	JMP      	137 ; PC := 137
	117	[779]	GETTABLE 	R10 R0 K25 ; R10 := R0["buffType"]
	118	[779]	GETUPVAL 	R11 U3 ; R11 := U3
	119	[779]	GETTABLE 	R11 R11 K21 ; R11 := R11["Status"]
	120	[779]	GETTABLE 	R11 R11 K26 ; R11 := R11["mBuffType"]
	121	[779]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 137
	122	[779]	JMP      	137 ; PC := 137
	123	[780]	GETTABLE 	R10 R0 K27 ; R10 := R0["buffData"]
	124	[780]	EQ       	0 R10 K28 ; if R10 ~= 0.000000 then PC := 127
	125	[780]	JMP      	127 ; PC := 127
	126	[780]	OP_LOADBOOL	R9 0 1 ; R9 := false; PC := 127
	127	[780]	OP_LOADBOOL	R9 1 0 ; R9 := true
	128	[781]	GETUPVAL 	R10 U3 ; R10 := U3
	129	[781]	GETTABLE 	R10 R10 K21 ; R10 := R10["Status"]
	130	[781]	GETUPVAL 	R11 U3 ; R11 := U3
	131	[781]	GETTABLE 	R11 R11 K21 ; R11 := R11["Status"]
	132	[781]	GETTABLE 	R11 R11 K29 ; R11 := R11["mBuffData"]
	133	[781]	GETTABLE 	R12 R0 K27 ; R12 := R0["buffData"]
	134	[781]	ADD      	R11 R11 R12 ; R11 := R11 + R12
	135	[781]	SETTABLE 	R10 K29 R11 ; R10["mBuffData"] := R11
	136	[781]	JMP      	149 ; PC := 149
	137	[783]	GETUPVAL 	R10 U3 ; R10 := U3
	138	[783]	GETTABLE 	R10 R10 K21 ; R10 := R10["Status"]
	139	[783]	GETTABLE 	R10 R10 K29 ; R10 := R10["mBuffData"]
	140	[783]	GETTABLE 	R11 R0 K27 ; R11 := R0["buffData"]
	141	[783]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 144
	142	[783]	JMP      	144 ; PC := 144
	143	[783]	OP_LOADBOOL	R9 0 1 ; R9 := false; PC := 144
	144	[783]	OP_LOADBOOL	R9 1 0 ; R9 := true
	145	[784]	GETUPVAL 	R10 U3 ; R10 := U3
	146	[784]	GETTABLE 	R10 R10 K21 ; R10 := R10["Status"]
	147	[784]	GETTABLE 	R11 R0 K27 ; R11 := R0["buffData"]
	148	[784]	SETTABLE 	R10 K29 R11 ; R10["mBuffData"] := R11
	149	[787]	TEST     	R9 1 ; if R9 then PC := 165
	150	[787]	JMP      	165 ; PC := 165
	151	[787]	GETUPVAL 	R10 U3 ; R10 := U3
	152	[787]	GETTABLE 	R10 R10 K21 ; R10 := R10["Status"]
	153	[787]	GETTABLE 	R10 R10 K26 ; R10 := R10["mBuffType"]
	154	[787]	GETTABLE 	R11 R0 K25 ; R11 := R0["buffType"]
	155	[787]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 164
	156	[787]	JMP      	164 ; PC := 164
	157	[787]	GETUPVAL 	R10 U3 ; R10 := U3
	158	[787]	GETTABLE 	R10 R10 K21 ; R10 := R10["Status"]
	159	[787]	GETTABLE 	R10 R10 K30 ; R10 := R10["mBuffDataExtra"]
	160	[787]	GETTABLE 	R11 R0 K31 ; R11 := R0["buffDataExtra"]
	161	[787]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 164
	162	[787]	JMP      	164 ; PC := 164
	163	[787]	OP_LOADBOOL	R9 0 1 ; R9 := false; PC := 164
	164	[787]	OP_LOADBOOL	R9 1 0 ; R9 := true
	165	[788]	GETUPVAL 	R10 U3 ; R10 := U3
	166	[788]	GETTABLE 	R10 R10 K21 ; R10 := R10["Status"]
	167	[788]	GETTABLE 	R11 R0 K25 ; R11 := R0["buffType"]
	168	[788]	SETTABLE 	R10 K26 R11 ; R10["mBuffType"] := R11
	169	[789]	GETUPVAL 	R10 U3 ; R10 := U3
	170	[789]	GETTABLE 	R10 R10 K21 ; R10 := R10["Status"]
	171	[789]	GETTABLE 	R11 R0 K31 ; R11 := R0["buffDataExtra"]
	172	[789]	SETTABLE 	R10 K30 R11 ; R10[0x00000001] := R11
	173	[791]	TEST     	R9 0 ; if not R9 then PC := 251
	174	[791]	JMP      	251 ; PC := 251
	175	[792]	GETUPVAL 	R10 U0 ; R10 := U0
	176	[792]	GETTABLE 	R10 R10 K32 ; R10 := R10[0xb15e6aca]
	177	[792]	GETUPVAL 	R11 U3 ; R11 := U3
	178	[792]	GETTABLE 	R11 R11 K21 ; R11 := R11["Status"]
	179	[792]	CALL     	R10 2 1 ; R10(R11)
	180	[793]	JMP      	251 ; PC := 251
	181	[796]	LOADNIL  	R10 R10 ; R10 := nil
	182	[797]	GETGLOBAL	R11 K1 ; R11 := 0x7b998233
	183	[797]	GETUPVAL 	R12 U3 ; R12 := U3
	184	[797]	GETTABLE 	R12 R12 K11 ; R12 := R12["Stat"]
	185	[797]	GETTABLE 	R12 R12 K12 ; R12 := R12["Instigator"]
	186	[797]	CALL     	R11 2 2 ; R11 := R11(R12)
	187	[797]	TEST     	R11 1 ; if R11 then PC := 195
	188	[797]	JMP      	195 ; PC := 195
	189	[801]	GETUPVAL 	R11 U3 ; R11 := U3
	190	[801]	GETTABLE 	R11 R11 K11 ; R11 := R11["Stat"]
	191	[801]	GETTABLE 	R11 R11 K12 ; R11 := R11["Instigator"]
	192	[801]	SELF     	R11 R11 K33 ; R12 := R11; R11 := R11[0x5b89142c]
	193	[801]	CALL     	R11 2 2 ; R11 := R11(R12)
	194	[801]	MOVE     	R10 R11 ; R10 := R11
	195	[804]	GETUPVAL 	R11 U0 ; R11 := U0
	196	[804]	SELF     	R11 R11 K34 ; R12 := R11; R11 := R11[0x5fbddc1a]
	197	[804]	CALL     	R11 2 2 ; R11 := R11(R12)
	198	[804]	ADD      	R11 R11 K35 ; R11 := R11 + 1.000000
	199	[805]	GETTABLE 	R12 R0 K36 ; R12 := R0["isDebuff"]
	200	[805]	TEST     	R12 0 ; if not R12 then PC := 219
	201	[805]	JMP      	219 ; PC := 219
	202	[806]	LT       	0 K35 R11 ; if 1.000000 >= R11 then PC := 219
	203	[806]	JMP      	219 ; PC := 219
	204	[807]	GETUPVAL 	R12 U0 ; R12 := U0
	205	[807]	SELF     	R12 R12 K37 ; R13 := R12; R12 := R12[0x5465f8f3]
	206	[807]	SUB      	R14 R11 K35 ; R14 := R11 - 1.000000
	207	[807]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	208	[809]	GETGLOBAL	R13 K1 ; R13 := 0x7b998233
	209	[809]	MOVE     	R14 R12 ; R14 := R12
	210	[809]	CALL     	R13 2 2 ; R13 := R13(R14)
	211	[809]	TEST     	R13 1 ; if R13 then PC := 219
	212	[809]	JMP      	219 ; PC := 219
	213	[809]	GETTABLE 	R13 R12 K38 ; R13 := R12["mIsDebuff"]
	214	[809]	TEST     	R13 0 ; if not R13 then PC := 217
	215	[809]	JMP      	217 ; PC := 217
	216	[811]	JMP      	219 ; PC := 219
	217	[814]	SUB      	R11 R11 K35 ; R11 := R11 - 1.000000
	218	[814]	JMP      	202 ; PC := 202
	219	[818]	GETUPVAL 	R13 U0 ; R13 := U0
	220	[818]	SELF     	R13 R13 K39 ; R14 := R13; R13 := R13[0x45082a31]
	221	[818]	MOVE     	R15 R11 ; R15 := R11
	222	[818]	NEWTABLE 	R16 0 8 ; R16 := {}
	223	[818]	NEWTABLE 	R17 0 2 ; R17 := {}
	224	[818]	GETUPVAL 	R18 U3 ; R18 := U3
	225	[818]	GETTABLE 	R18 R18 K11 ; R18 := R18["Stat"]
	226	[818]	GETTABLE 	R18 R18 K12 ; R18 := R18["Instigator"]
	227	[818]	SETTABLE 	R17 K41 R18 ; R17["avatar"] := R18
	228	[818]	SETTABLE 	R17 K42 R10 ; R17["player"] := R10
	229	[818]	SETTABLE 	R16 K40 R17 ; R16["mInstigator"] := R17
	230	[818]	GETUPVAL 	R17 U3 ; R17 := U3
	231	[818]	GETTABLE 	R17 R17 K11 ; R17 := R17["Stat"]
	232	[818]	GETTABLE 	R17 R17 K14 ; R17 := R17["AbilityType"]
	233	[818]	SETTABLE 	R16 K43 R17 ; R16["mAbilityType"] := R17
	234	[818]	GETUPVAL 	R17 U3 ; R17 := U3
	235	[818]	GETTABLE 	R17 R17 K11 ; R17 := R17["Stat"]
	236	[818]	GETTABLE 	R17 R17 K15 ; R17 := R17["AugmentType"]
	237	[818]	SETTABLE 	R16 K44 R17 ; R16["mAugmentType"] := R17
	238	[818]	GETTABLE 	R17 R0 K25 ; R17 := R0["buffType"]
	239	[818]	SETTABLE 	R16 K26 R17 ; R16["mBuffType"] := R17
	240	[818]	GETTABLE 	R17 R0 K27 ; R17 := R0["buffData"]
	241	[818]	SETTABLE 	R16 K29 R17 ; R16["mBuffData"] := R17
	242	[818]	GETTABLE 	R17 R0 K31 ; R17 := R0["buffDataExtra"]
	243	[818]	SETTABLE 	R16 K30 R17 ; R16[0x00000001] := R17
	244	[818]	GETTABLE 	R17 R0 K27 ; R17 := R0["buffData"]
	245	[818]	SETTABLE 	R16 K45 R17 ; R16["mInitialBuffData"] := R17
	246	[818]	GETTABLE 	R17 R0 K36 ; R17 := R0["isDebuff"]
	247	[818]	SETTABLE 	R16 K38 R17 ; R16["mIsDebuff"] := R17
	248	[818]	CALL     	R13 4 1 ; R13(R14,R15,R16)
	249	[821]	JMP      	251 ; PC := 251
	250	[769]	FORLOOP  	R4 94 ; R4 += R6; if R4 <= R5 then begin PC := 94; R7 := R4 end
	251	[825]	TEST     	R3 0 ; if not R3 then PC := 262
	252	[825]	JMP      	262 ; PC := 262
	253	[825]	GETUPVAL 	R13 U5 ; R13 := U5
	254	[825]	EQ       	1 R13 K0 ; if R13 == nil then PC := 262
	255	[825]	JMP      	262 ; PC := 262
	256	[826]	GETUPVAL 	R13 U5 ; R13 := U5
	257	[826]	SELF     	R13 R13 K46 ; R14 := R13; R13 := R13[0xb03ae482]
	258	[826]	MOVE     	R15 R0 ; R15 := R0
	259	[826]	GETUPVAL 	R16 U3 ; R16 := U3
	260	[826]	GETTABLE 	R16 R16 K11 ; R16 := R16["Stat"]
	261	[826]	CALL     	R13 4 1 ; R13(R14,R15,R16)
	262	[829]	GETUPVAL 	R13 U3 ; R13 := U3
	263	[829]	SETTABLE 	R13 K11 K0 ; R13["Stat"] := nil
	264	[830]	GETUPVAL 	R13 U3 ; R13 := U3
	265	[830]	SETTABLE 	R13 K21 K0 ; R13["Status"] := nil
	266	[831]	RETURN   	R0 1 ; return 

function #33 <?:838,889> (140 instructions, 560 bytes at 000002111AD582F0)
1 param, 18 slots, 4 upvalues, 0 locals, 26 constants, 0 functions
	1	[839]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[839]	EQ       	1 R1 K0 ; if R1 == nil then PC := 9
	3	[839]	JMP      	9 ; PC := 9
	4	[839]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	5	[839]	GETUPVAL 	R2 U1 ; R2 := U1
	6	[839]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[839]	TEST     	R1 0 ; if not R1 then PC := 10
	8	[839]	JMP      	10 ; PC := 10
	9	[840]	RETURN   	R0 1 ; return 
	10	[843]	LOADNIL  	R1 R1 ; R1 := nil
	11	[844]	GETUPVAL 	R2 U1 ; R2 := U1
	12	[844]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0xf2deaf69]
	13	[844]	GETGLOBAL	R4 K3 ; R4 := gLotusVehicleAvatarType
	14	[844]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	15	[844]	TEST     	R2 0 ; if not R2 then PC := 21
	16	[844]	JMP      	21 ; PC := 21
	17	[845]	GETUPVAL 	R2 U1 ; R2 := U1
	18	[845]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0xff005826]
	19	[845]	CALL     	R2 2 2 ; R2 := R2(R3)
	20	[845]	MOVE     	R1 R2 ; R1 := R2
	21	[848]	NEWTABLE 	R2 0 3 ; R2 := {}
	22	[848]	GETTABLE 	R3 R0 K6 ; R3 := R0["instigator"]
	23	[848]	SETTABLE 	R2 K5 R3 ; R2["Instigator"] := R3
	24	[848]	GETTABLE 	R3 R0 K8 ; R3 := R0["abilityType"]
	25	[848]	SETTABLE 	R2 K7 R3 ; R2["AbilityType"] := R3
	26	[848]	GETTABLE 	R3 R0 K10 ; R3 := R0["augmentType"]
	27	[848]	SETTABLE 	R2 K9 R3 ; R2["AugmentType"] := R3
	28	[850]	LOADK    	R3 := 1.000000
	29	[850]	GETUPVAL 	R4 U0 ; R4 := U0
	30	[850]	SELF     	R4 R4 K11 ; R5 := R4; R4 := R4[0x5fbddc1a]
	31	[850]	CALL     	R4 2 2 ; R4 := R4(R5)
	32	[850]	LOADK    	R5 := 1.000000
	33	[850]	FORPREP  	R3 119 ; R3 -= R5; PC := 119
	34	[851]	GETUPVAL 	R7 U0 ; R7 := U0
	35	[851]	GETTABLE 	R7 R7 K12 ; R7 := R7["mElements"]
	36	[851]	GETTABLE 	R7 R7 R6 ; R7 := R7[R6]
	37	[853]	GETUPVAL 	R8 U2 ; R8 := U2
	38	[853]	MOVE     	R9 R7 ; R9 := R7
	39	[853]	MOVE     	R10 R2 ; R10 := R2
	40	[853]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	41	[853]	TEST     	R8 0 ; if not R8 then PC := 119
	42	[853]	JMP      	119 ; PC := 119
	43	[854]	GETGLOBAL	R8 K1 ; R8 := 0x7b998233
	44	[854]	GETUPVAL 	R9 U1 ; R9 := U1
	45	[854]	CALL     	R8 2 2 ; R8 := R8(R9)
	46	[854]	TEST     	R8 1 ; if R8 then PC := 120
	47	[854]	JMP      	120 ; PC := 120
	48	[855]	GETGLOBAL	R8 K13 ; R8 := 0xcfc01047
	49	[855]	GETTABLE 	R9 R0 K14 ; R9 := R0["affected"]
	50	[855]	CALL     	R8 2 4 ; R8,R9,R10 := R8(R9)
	51	[855]	JMP      	116 ; PC := 116
	52	[856]	GETGLOBAL	R13 K1 ; R13 := 0x7b998233
	53	[856]	MOVE     	R14 R12 ; R14 := R12
	54	[856]	CALL     	R13 2 2 ; R13 := R13(R14)
	55	[856]	TEST     	R13 1 ; if R13 then PC := 116
	56	[856]	JMP      	116 ; PC := 116
	57	[858]	GETUPVAL 	R13 U1 ; R13 := U1
	58	[858]	EQ       	1 R12 R13 ; if R12 == R13 then PC := 62
	59	[858]	JMP      	62 ; PC := 62
	60	[858]	EQ       	0 R12 R1 ; if R12 ~= R1 then PC := 116
	61	[858]	JMP      	116 ; PC := 116
	62	[860]	GETGLOBAL	R13 K1 ; R13 := 0x7b998233
	63	[860]	SELF     	R14 R12 K15 ; R15 := R12; R14 := R12[0x5e651723]
	64	[860]	CALL     	R14 2 0 ; R14,... := R14(R15)
	65	[860]	CALL     	R13 0 2 ; R13 := R13(R14,...)
	66	[860]	TEST     	R13 1 ; if R13 then PC := 82
	67	[860]	JMP      	82 ; PC := 82
	68	[861]	GETGLOBAL	R13 K1 ; R13 := 0x7b998233
	69	[861]	GETUPVAL 	R14 U1 ; R14 := U1
	70	[861]	SELF     	R14 R14 K15 ; R15 := R14; R14 := R14[0x5e651723]
	71	[861]	CALL     	R14 2 0 ; R14,... := R14(R15)
	72	[861]	CALL     	R13 0 2 ; R13 := R13(R14,...)
	73	[861]	TEST     	R13 1 ; if R13 then PC := 82
	74	[861]	JMP      	82 ; PC := 82
	75	[862]	SELF     	R13 R12 K15 ; R14 := R12; R13 := R12[0x5e651723]
	76	[862]	CALL     	R13 2 2 ; R13 := R13(R14)
	77	[862]	GETUPVAL 	R14 U1 ; R14 := U1
	78	[862]	SELF     	R14 R14 K15 ; R15 := R14; R14 := R14[0x5e651723]
	79	[862]	CALL     	R14 2 2 ; R14 := R14(R15)
	80	[862]	EQ       	0 R13 R14 ; if R13 ~= R14 then PC := 116
	81	[862]	JMP      	116 ; PC := 116
	82	[865]	GETTABLE 	R13 R0 K16 ; R13 := R0["stackData"]
	83	[865]	TEST     	R13 0 ; if not R13 then PC := 103
	84	[865]	JMP      	103 ; PC := 103
	85	[865]	GETTABLE 	R13 R0 K17 ; R13 := R0["buffType"]
	86	[865]	GETTABLE 	R14 R7 K18 ; R14 := R7["mBuffType"]
	87	[865]	EQ       	0 R13 R14 ; if R13 ~= R14 then PC := 103
	88	[865]	JMP      	103 ; PC := 103
	89	[866]	GETTABLE 	R13 R7 K19 ; R13 := R7["mBuffData"]
	90	[866]	GETTABLE 	R14 R0 K20 ; R14 := R0["buffData"]
	91	[866]	SUB      	R13 R13 R14 ; R13 := R13 - R14
	92	[866]	SETTABLE 	R7 K19 R13 ; R7["mBuffData"] := R13
	93	[867]	GETTABLE 	R13 R7 K19 ; R13 := R7["mBuffData"]
	94	[867]	LT       	0 K21 R13 ; if 0.000010 >= R13 then PC := 103
	95	[867]	JMP      	103 ; PC := 103
	96	[868]	GETUPVAL 	R13 U0 ; R13 := U0
	97	[868]	SELF     	R13 R13 K22 ; R14 := R13; R13 := R13[0x71e9ac81]
	98	[868]	LOADNIL  	R15 R15 ; R15 := nil
	99	[868]	OP_LOADBOOL	R16 1 0 ; R16 := true
	100	[868]	OP_LOADBOOL	R17 1 0 ; R17 := true
	101	[868]	CALL     	R13 5 1 ; R13(R14,R15,R16,R17)
	102	[869]	JMP      	120 ; PC := 120
	103	[873]	GETUPVAL 	R13 U0 ; R13 := U0
	104	[873]	SELF     	R13 R13 K23 ; R14 := R13; R13 := R13[0x9ae7e2d2]
	105	[873]	MOVE     	R15 R6 ; R15 := R6
	106	[873]	OP_LOADBOOL	R16 1 0 ; R16 := true
	107	[873]	OP_LOADBOOL	R17 1 0 ; R17 := true
	108	[873]	CALL     	R13 5 1 ; R13(R14,R15,R16,R17)
	109	[874]	GETUPVAL 	R13 U0 ; R13 := U0
	110	[874]	SELF     	R13 R13 K22 ; R14 := R13; R13 := R13[0x71e9ac81]
	111	[874]	LOADNIL  	R15 R15 ; R15 := nil
	112	[874]	OP_LOADBOOL	R16 1 0 ; R16 := true
	113	[874]	OP_LOADBOOL	R17 1 0 ; R17 := true
	114	[874]	CALL     	R13 5 1 ; R13(R14,R15,R16,R17)
	115	[875]	JMP      	120 ; PC := 120
	116	[855]	TFORLOOP 	R8 2 ; R11,R12 := R8(R9,R10); if R11 ~= nil then begin PC = 52; R10 := R11 end
	117	[877]	JMP      	52 ; PC := 52
	118	[881]	JMP      	120 ; PC := 120
	119	[850]	FORLOOP  	R3 34 ; R3 += R5; if R3 <= R4 then begin PC := 34; R6 := R3 end
	120	[885]	GETTABLE 	R13 R2 K5 ; R13 := R2["Instigator"]
	121	[885]	GETUPVAL 	R14 U1 ; R14 := U1
	122	[885]	EQ       	1 R13 R14 ; if R13 == R14 then PC := 130
	123	[885]	JMP      	130 ; PC := 130
	124	[885]	GETTABLE 	R13 R2 K5 ; R13 := R2["Instigator"]
	125	[885]	EQ       	1 R13 R1 ; if R13 == R1 then PC := 130
	126	[885]	JMP      	130 ; PC := 130
	127	[885]	GETTABLE 	R13 R0 K24 ; R13 := R0["forceSquadPanel"]
	128	[885]	JMP      	131 ; PC := 131
	129	[885]	OP_LOADBOOL	R13 0 1 ; R13 := false; PC := 130
	130	[885]	OP_LOADBOOL	R13 1 0 ; R13 := true
	131	[886]	TEST     	R13 0 ; if not R13 then PC := 140
	132	[886]	JMP      	140 ; PC := 140
	133	[886]	GETUPVAL 	R14 U3 ; R14 := U3
	134	[886]	EQ       	1 R14 K0 ; if R14 == nil then PC := 140
	135	[886]	JMP      	140 ; PC := 140
	136	[887]	GETUPVAL 	R14 U3 ; R14 := U3
	137	[887]	SELF     	R14 R14 K25 ; R15 := R14; R14 := R14[0xc2a148ad]
	138	[887]	MOVE     	R16 R0 ; R16 := R0
	139	[887]	CALL     	R14 3 1 ; R14(R15,R16)
	140	[889]	RETURN   	R0 1 ; return 

function #34 <?:891,897> (23 instructions, 92 bytes at 00000211638C4480)
4 params, 10 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[892]	GETGLOBAL	R4 K0 ; R4 := 0x0b96777e
	2	[892]	MOVE     	R5 R2 ; R5 := R2
	3	[892]	CALL     	R4 2 2 ; R4 := R4(R5)
	4	[892]	EQ       	0 R4 K1 ; if R4 ~= "string" then PC := 13
	5	[892]	JMP      	13 ; PC := 13
	6	[893]	GETUPVAL 	R4 U0 ; R4 := U0
	7	[893]	SELF     	R4 R4 K2 ; R5 := R4; R4 := R4[0x23c0e8e8]
	8	[893]	MOVE     	R6 R0 ; R6 := R0
	9	[893]	MOVE     	R7 R1 ; R7 := R1
	10	[893]	MOVE     	R8 R2 ; R8 := R2
	11	[893]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	12	[893]	JMP      	23 ; PC := 23
	13	[895]	GETUPVAL 	R4 U0 ; R4 := U0
	14	[895]	SELF     	R4 R4 K3 ; R5 := R4; R4 := R4[0xe6d078f5]
	15	[895]	MOVE     	R6 R0 ; R6 := R0
	16	[895]	MOVE     	R7 R1 ; R7 := R1
	17	[895]	MOVE     	R8 R2 ; R8 := R2
	18	[895]	EQ       	1 R3 K4 ; if R3 == true then PC := 21
	19	[895]	JMP      	21 ; PC := 21
	20	[895]	OP_LOADBOOL	R9 0 1 ; R9 := false; PC := 21
	21	[895]	OP_LOADBOOL	R9 1 0 ; R9 := true
	22	[895]	CALL     	R4 6 1 ; R4(R5,R6,R7,R8,R9)
	23	[897]	RETURN   	R0 1 ; return 

function #35 <?:899,901> (12 instructions, 48 bytes at 000002117F75A830)
5 params, 12 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[900]	GETUPVAL 	R5 U0 ; R5 := U0
	2	[900]	SELF     	R5 R5 K0 ; R6 := R5; R5 := R5[0xcc4ac7a6]
	3	[900]	MOVE     	R7 R0 ; R7 := R0
	4	[900]	MOVE     	R8 R1 ; R8 := R1
	5	[900]	MOVE     	R9 R2 ; R9 := R2
	6	[900]	MOVE     	R10 R3 ; R10 := R3
	7	[900]	EQ       	1 R4 K1 ; if R4 == true then PC := 10
	8	[900]	JMP      	10 ; PC := 10
	9	[900]	OP_LOADBOOL	R11 0 1 ; R11 := false; PC := 10
	10	[900]	OP_LOADBOOL	R11 1 0 ; R11 := true
	11	[900]	CALL     	R5 7 1 ; R5(R6,R7,R8,R9,R10,R11)
	12	[901]	RETURN   	R0 1 ; return 

function #36 <?:903,908> (18 instructions, 72 bytes at 000002111BF91620)
0 params, 7 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[904]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[904]	GETGLOBAL	R1 K1 ; R1 := 0x988ffae3
	3	[904]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[904]	TEST     	R0 1 ; if R0 then PC := 18
	5	[904]	JMP      	18 ; PC := 18
	6	[905]	GETUPVAL 	R0 U0 ; R0 := U0
	7	[905]	GETTABLE 	R0 R0 K2 ; R0 := R0[0xb5be5d4a]
	8	[905]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	9	[905]	LOADK    	R2 K4 ; R2 := "AbilityPanel.Focus"
	10	[905]	CALL     	R0 3 3 ; R0,R1 := R0(R1,R2)
	11	[906]	GETUPVAL 	R2 U0 ; R2 := U0
	12	[906]	GETTABLE 	R2 R2 K5 ; R2 := R2[0x5a22d251]
	13	[906]	GETGLOBAL	R3 K3 ; R3 := 0xae91e43b
	14	[906]	GETGLOBAL	R4 K1 ; R4 := 0x988ffae3
	15	[906]	MOVE     	R5 R0 ; R5 := R0
	16	[906]	MOVE     	R6 R1 ; R6 := R1
	17	[906]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	18	[908]	RETURN   	R0 1 ; return 

function #37 <?:910,912> (6 instructions, 24 bytes at 0000021132D19F10)
2 params, 6 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[911]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[911]	SELF     	R2 R2 K0 ; R3 := R2; R2 := R2[0x052b9d3b]
	3	[911]	MOVE     	R4 R0 ; R4 := R0
	4	[911]	MOVE     	R5 R1 ; R5 := R1
	5	[911]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	6	[912]	RETURN   	R0 1 ; return 

function #38 <?:914,958> (125 instructions, 500 bytes at 000002112BF50980)
0 params, 7 slots, 6 upvalues, 0 locals, 30 constants, 3 functions
	1	[915]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[915]	SETTABLE 	R0 K0 K1 ; R0["Initialized"] := false
	3	[916]	GETGLOBAL	R0 K2 ; R0 := _T
	4	[916]	GETTABLE 	R0 R0 K3 ; R0 := R0["HudInitialized"]
	5	[916]	TEST     	R0 0 ; if not R0 then PC := 14
	6	[916]	JMP      	14 ; PC := 14
	7	[916]	GETGLOBAL	R0 K2 ; R0 := _T
	8	[916]	GETTABLE 	R0 R0 K3 ; R0 := R0["HudInitialized"]
	9	[916]	GETGLOBAL	R1 K4 ; R1 := 0xae91e43b
	10	[916]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 14
	11	[916]	JMP      	14 ; PC := 14
	12	[917]	GETGLOBAL	R0 K2 ; R0 := _T
	13	[917]	SETTABLE 	R0 K3 K5 ; R0["HudInitialized"] := nil
	14	[919]	GETGLOBAL	R0 K6 ; R0 := 0x7b998233
	15	[919]	GETGLOBAL	R1 K7 ; R1 := 0x9d6c77be
	16	[919]	CALL     	R0 2 2 ; R0 := R0(R1)
	17	[919]	TEST     	R0 1 ; if R0 then PC := 22
	18	[919]	JMP      	22 ; PC := 22
	19	[920]	GETUPVAL 	R0 U1 ; R0 := U1
	20	[920]	LOADNIL  	R1 R1 ; R1 := nil
	21	[920]	CALL     	R0 2 1 ; R0(R1)
	22	[922]	GETGLOBAL	R0 K6 ; R0 := 0x7b998233
	23	[922]	GETUPVAL 	R1 U2 ; R1 := U2
	24	[922]	CALL     	R0 2 2 ; R0 := R0(R1)
	25	[922]	TEST     	R0 1 ; if R0 then PC := 34
	26	[922]	JMP      	34 ; PC := 34
	27	[923]	GETGLOBAL	R0 K8 ; R0 := 0xe72d2edb
	28	[923]	EQ       	1 R0 K10 ; if R0 == 0.000000 then PC := 34
	29	[923]	JMP      	34 ; PC := 34
	30	[924]	GETUPVAL 	R0 U2 ; R0 := U2
	31	[924]	SELF     	R0 R0 K11 ; R1 := R0; R0 := R0[0xeaef69de]
	32	[924]	LOADK    	R2 := 0.000000
	33	[924]	CALL     	R0 3 1 ; R0(R1,R2)
	34	[927]	GETGLOBAL	R0 K6 ; R0 := 0x7b998233
	35	[927]	GETUPVAL 	R1 U3 ; R1 := U3
	36	[927]	CALL     	R0 2 2 ; R0 := R0(R1)
	37	[927]	TEST     	R0 1 ; if R0 then PC := 46
	38	[927]	JMP      	46 ; PC := 46
	39	[928]	GETGLOBAL	R0 K8 ; R0 := 0xe72d2edb
	40	[928]	EQ       	1 R0 K10 ; if R0 == 0.000000 then PC := 46
	41	[928]	JMP      	46 ; PC := 46
	42	[929]	GETUPVAL 	R0 U3 ; R0 := U3
	43	[929]	SELF     	R0 R0 K11 ; R1 := R0; R0 := R0[0xeaef69de]
	44	[929]	LOADK    	R2 := 0.000000
	45	[929]	CALL     	R0 3 1 ; R0(R1,R2)
	46	[932]	GETGLOBAL	R0 K6 ; R0 := 0x7b998233
	47	[932]	GETUPVAL 	R1 U4 ; R1 := U4
	48	[932]	CALL     	R0 2 2 ; R0 := R0(R1)
	49	[932]	TEST     	R0 1 ; if R0 then PC := 54
	50	[932]	JMP      	54 ; PC := 54
	51	[933]	GETUPVAL 	R0 U4 ; R0 := U4
	52	[933]	SELF     	R0 R0 K12 ; R1 := R0; R0 := R0[0xa2880940]
	53	[933]	CALL     	R0 2 1 ; R0(R1)
	54	[936]	GETGLOBAL	R0 K13 ; R0 := 0x9ba7909f
	55	[936]	SELF     	R0 R0 K14 ; R1 := R0; R0 := R0[0xbcfb64ab]
	56	[936]	GETGLOBAL	R2 K15 ; R2 := 0xd991a286
	57	[936]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	58	[937]	GETGLOBAL	R1 K6 ; R1 := 0x7b998233
	59	[937]	MOVE     	R2 R0 ; R2 := R0
	60	[937]	CALL     	R1 2 2 ; R1 := R1(R2)
	61	[937]	TEST     	R1 1 ; if R1 then PC := 74
	62	[937]	JMP      	74 ; PC := 74
	63	[937]	GETGLOBAL	R1 K16 ; R1 := 0xbe190284
	64	[937]	SELF     	R1 R1 K17 ; R2 := R1; R1 := R1[0xf2deaf69]
	65	[937]	GETGLOBAL	R3 K18 ; R3 := gLotusAttractModeGameRulesType
	66	[937]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	67	[937]	TEST     	R1 1 ; if R1 then PC := 74
	68	[937]	JMP      	74 ; PC := 74
	69	[938]	GETGLOBAL	R1 K19 ; R1 := 0x3d106989
	70	[938]	LOADK    	R2 K20 ; R2 := "HUD Redux: Closing background movie"
	71	[938]	CALL     	R1 2 1 ; R1(R2)
	72	[939]	SELF     	R1 R0 K21 ; R2 := R0; R1 := R0[0x32302b4a]
	73	[939]	CALL     	R1 2 1 ; R1(R2)
	74	[941]	GETGLOBAL	R1 K6 ; R1 := 0x7b998233
	75	[941]	GETUPVAL 	R2 U0 ; R2 := U0
	76	[941]	GETTABLE 	R2 R2 K22 ; R2 := R2["mProfileMovie"]
	77	[941]	CALL     	R1 2 2 ; R1 := R1(R2)
	78	[941]	TEST     	R1 1 ; if R1 then PC := 84
	79	[941]	JMP      	84 ; PC := 84
	80	[942]	GETUPVAL 	R1 U0 ; R1 := U0
	81	[942]	GETTABLE 	R1 R1 K22 ; R1 := R1["mProfileMovie"]
	82	[942]	SELF     	R1 R1 K21 ; R2 := R1; R1 := R1[0x32302b4a]
	83	[942]	CALL     	R1 2 1 ; R1(R2)
	84	[944]	GETGLOBAL	R1 K6 ; R1 := 0x7b998233
	85	[944]	GETUPVAL 	R2 U0 ; R2 := U0
	86	[944]	GETTABLE 	R2 R2 K23 ; R2 := R2["mHudMarkersMovie"]
	87	[944]	CALL     	R1 2 2 ; R1 := R1(R2)
	88	[944]	TEST     	R1 1 ; if R1 then PC := 94
	89	[944]	JMP      	94 ; PC := 94
	90	[945]	GETUPVAL 	R1 U0 ; R1 := U0
	91	[945]	GETTABLE 	R1 R1 K23 ; R1 := R1["mHudMarkersMovie"]
	92	[945]	SELF     	R1 R1 K21 ; R2 := R1; R1 := R1[0x32302b4a]
	93	[945]	CALL     	R1 2 1 ; R1(R2)
	94	[947]	GETGLOBAL	R1 K6 ; R1 := 0x7b998233
	95	[947]	GETUPVAL 	R2 U5 ; R2 := U5
	96	[947]	CALL     	R1 2 2 ; R1 := R1(R2)
	97	[947]	TEST     	R1 1 ; if R1 then PC := 102
	98	[947]	JMP      	102 ; PC := 102
	99	[948]	GETUPVAL 	R1 U5 ; R1 := U5
	100	[948]	SELF     	R1 R1 K24 ; R2 := R1; R1 := R1[0xdb371820]
	101	[948]	CALL     	R1 2 1 ; R1(R2)
	102	[950]	GETGLOBAL	R1 K2 ; R1 := _T
	103	[950]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	104	[950]	SETTABLE 	R1 K25 R2 ; R1["HUD_AddMotionClip"] := R2
	105	[951]	GETGLOBAL	R1 K2 ; R1 := _T
	106	[951]	CLOSURE  	R2 1 ; R2 := closure(Function #2)
	107	[951]	SETTABLE 	R1 K26 R2 ; R1["HUD_UpdateMotionClip"] := R2
	108	[952]	GETGLOBAL	R1 K2 ; R1 := _T
	109	[952]	CLOSURE  	R2 2 ; R2 := closure(Function #3)
	110	[952]	SETTABLE 	R1 K27 R2 ; R1["HUD_RemoveMotionClip"] := R2
	111	[953]	GETGLOBAL	R1 K2 ; R1 := _T
	112	[953]	SETTABLE 	R1 K28 K5 ; R1["HudType"] := nil
	113	[955]	LOADK    	R1 := 1.000000
	114	[955]	GETGLOBAL	R2 K2 ; R2 := _T
	115	[955]	GETTABLE 	R2 R2 K29 ; R2 := R2["HudNonQueuedFunctions"]
	116	[955]	LEN      	R2 R2 ; R2 := # R2
	117	[955]	LOADK    	R3 := 1.000000
	118	[955]	FORPREP  	R1 124 ; R1 -= R3; PC := 124
	119	[956]	GETGLOBAL	R5 K2 ; R5 := _T
	120	[956]	GETGLOBAL	R6 K2 ; R6 := _T
	121	[956]	GETTABLE 	R6 R6 K29 ; R6 := R6["HudNonQueuedFunctions"]
	122	[956]	GETTABLE 	R6 R6 R4 ; R6 := R6[R4]
	123	[956]	SETTABLE 	R5 R6 K5 ; R5[R6] := nil
	124	[955]	FORLOOP  	R1 119 ; R1 += R3; if R1 <= R2 then begin PC := 119; R4 := R1 end
	125	[958]	RETURN   	R0 1 ; return 

function #39 <?:962,983> (52 instructions, 208 bytes at 00000211157F3770)
2 params, 14 slots, 1 upvalue, 0 locals, 13 constants, 0 functions
	1	[963]	GETGLOBAL	R2 K0 ; R2 := 0x0032441c
	2	[963]	GETTABLE 	R2 R2 K1 ; R2 := R2["StalkerMode"]
	3	[963]	TEST     	R2 0 ; if not R2 then PC := 7
	4	[963]	JMP      	7 ; PC := 7
	5	[964]	LOADNIL  	R2 R2 ; R2 := nil
	6	[964]	RETURN   	R2 2 ; return R2 
	7	[967]	LOADK    	R2 K2 ; R2 := ""
	8	[968]	TEST     	R1 0 ; if not R1 then PC := 47
	9	[968]	JMP      	47 ; PC := 47
	10	[969]	NEWTABLE 	R3 0 1 ; R3 := {}
	11	[969]	SETTABLE 	R3 K3 K4 ; R3["Icon"] := true
	12	[970]	NEWTABLE 	R4 0 0 ; R4 := {}
	13	[971]	GETGLOBAL	R5 K5 ; R5 := 0xcfc01047
	14	[971]	MOVE     	R6 R1 ; R6 := R1
	15	[971]	CALL     	R5 2 4 ; R5,R6,R7 := R5(R6)
	16	[971]	JMP      	40 ; PC := 40
	17	[972]	GETGLOBAL	R10 K6 ; R10 := 0x0b96777e
	18	[972]	MOVE     	R11 R9 ; R11 := R9
	19	[972]	CALL     	R10 2 2 ; R10 := R10(R11)
	20	[972]	EQ       	0 R10 K7 ; if R10 ~= "userdata" then PC := 29
	21	[972]	JMP      	29 ; PC := 29
	22	[972]	GETTABLE 	R10 R3 R8 ; R10 := R3[R8]
	23	[972]	TEST     	R10 0 ; if not R10 then PC := 29
	24	[972]	JMP      	29 ; PC := 29
	25	[973]	SELF     	R10 R9 K8 ; R11 := R9; R10 := R9[0xed4e0128]
	26	[973]	CALL     	R10 2 2 ; R10 := R10(R11)
	27	[973]	SETTABLE 	R4 R8 R10 ; R4[R8] := R10
	28	[973]	JMP      	40 ; PC := 40
	29	[974]	GETGLOBAL	R10 K6 ; R10 := 0x0b96777e
	30	[974]	MOVE     	R11 R9 ; R11 := R9
	31	[974]	CALL     	R10 2 2 ; R10 := R10(R11)
	32	[974]	EQ       	1 R10 K9 ; if R10 == "function" then PC := 40
	33	[974]	JMP      	40 ; PC := 40
	34	[974]	GETGLOBAL	R10 K6 ; R10 := 0x0b96777e
	35	[974]	MOVE     	R11 R9 ; R11 := R9
	36	[974]	CALL     	R10 2 2 ; R10 := R10(R11)
	37	[974]	EQ       	1 R10 K7 ; if R10 == "userdata" then PC := 40
	38	[974]	JMP      	40 ; PC := 40
	39	[975]	SETTABLE 	R4 R8 R9 ; R4[R8] := R9
	40	[971]	TFORLOOP 	R5 2 ; R8,R9 := R5(R6,R7); if R8 ~= nil then begin PC = 17; R7 := R8 end
	41	[976]	JMP      	17 ; PC := 17
	42	[979]	GETGLOBAL	R10 K10 ; R10 := cjson
	43	[979]	GETTABLE 	R10 R10 K11 ; R10 := R10[0xb139d7bc]
	44	[979]	MOVE     	R11 R4 ; R11 := R4
	45	[979]	CALL     	R10 2 2 ; R10 := R10(R11)
	46	[979]	MOVE     	R2 R10 ; R2 := R10
	47	[982]	GETUPVAL 	R10 U0 ; R10 := U0
	48	[982]	SELF     	R10 R10 K12 ; R11 := R10; R10 := R10[0x80b8b450]
	49	[982]	MOVE     	R12 R0 ; R12 := R0
	50	[982]	MOVE     	R13 R2 ; R13 := R2
	51	[982]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	52	[983]	RETURN   	R0 1 ; return 

function #40 <?:985,998> (39 instructions, 156 bytes at 00000211148EE7D0)
3 params, 10 slots, 3 upvalues, 0 locals, 4 constants, 0 functions
	1	[986]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	2	[986]	GETUPVAL 	R4 U0 ; R4 := U0
	3	[986]	CALL     	R3 2 2 ; R3 := R3(R4)
	4	[986]	TEST     	R3 1 ; if R3 then PC := 39
	5	[986]	JMP      	39 ; PC := 39
	6	[986]	EQ       	1 R0 K1 ; if R0 == "" then PC := 39
	7	[986]	JMP      	39 ; PC := 39
	8	[986]	EQ       	1 R1 K1 ; if R1 == "" then PC := 39
	9	[986]	JMP      	39 ; PC := 39
	10	[987]	GETUPVAL 	R3 U0 ; R3 := U0
	11	[987]	SELF     	R3 R3 K2 ; R4 := R3; R3 := R3[0x5ca33548]
	12	[987]	CALL     	R3 2 2 ; R3 := R3(R4)
	13	[988]	EQ       	1 R3 R0 ; if R3 == R0 then PC := 19
	14	[988]	JMP      	19 ; PC := 19
	15	[988]	EQ       	0 R3 R1 ; if R3 ~= R1 then PC := 29
	16	[988]	JMP      	29 ; PC := 29
	17	[988]	EQ       	1 R1 R0 ; if R1 == R0 then PC := 29
	18	[988]	JMP      	29 ; PC := 29
	19	[990]	EQ       	1 R1 R3 ; if R1 == R3 then PC := 22
	20	[990]	JMP      	22 ; PC := 22
	21	[990]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 22
	22	[990]	OP_LOADBOOL	R4 1 0 ; R4 := true
	23	[991]	GETUPVAL 	R5 U1 ; R5 := U1
	24	[991]	SELF     	R5 R5 K3 ; R6 := R5; R5 := R5[0x7fbe731e]
	25	[991]	MOVE     	R7 R4 ; R7 := R4
	26	[991]	MOVE     	R8 R0 ; R8 := R0
	27	[991]	MOVE     	R9 R1 ; R9 := R1
	28	[991]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	29	[994]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	30	[994]	MOVE     	R6 R2 ; R6 := R2
	31	[994]	CALL     	R5 2 2 ; R5 := R5(R6)
	32	[994]	TEST     	R5 1 ; if R5 then PC := 39
	33	[994]	JMP      	39 ; PC := 39
	34	[994]	EQ       	1 R2 K1 ; if R2 == "" then PC := 39
	35	[994]	JMP      	39 ; PC := 39
	36	[995]	GETUPVAL 	R5 U2 ; R5 := U2
	37	[995]	MOVE     	R6 R2 ; R6 := R2
	38	[995]	CALL     	R5 2 1 ; R5(R6)
	39	[998]	RETURN   	R0 1 ; return 

function #41 <?:1000,1004> (6 instructions, 24 bytes at 0000021120EC1900)
2 params, 3 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[1001]	TEST     	R0 0 ; if not R0 then PC := 6
	2	[1001]	JMP      	6 ; PC := 6
	3	[1002]	GETGLOBAL	R2 K0 ; R2 := _T
	4	[1002]	GETTABLE 	R2 R2 K1 ; R2 := R2["gLoadedIcons"]
	5	[1002]	SETTABLE 	R2 R1 K2 ; R2[R1] := true
	6	[1004]	RETURN   	R0 1 ; return 

function #42 <?:1006,1011> (17 instructions, 68 bytes at 000002117E2646B0)
0 params, 3 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[1007]	GETGLOBAL	R0 K0 ; R0 := 0x9ba7909f
	2	[1007]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x6dd7aa66]
	3	[1007]	GETGLOBAL	R2 K2 ; R2 := 0x63879a7c
	4	[1007]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	5	[1008]	GETGLOBAL	R1 K3 ; R1 := 0x7b998233
	6	[1008]	MOVE     	R2 R0 ; R2 := R0
	7	[1008]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[1008]	TEST     	R1 1 ; if R1 then PC := 17
	9	[1008]	JMP      	17 ; PC := 17
	10	[1008]	GETGLOBAL	R1 K4 ; R1 := _T
	11	[1008]	GETTABLE 	R1 R1 K5 ; R1 := R1["DisplayMysteryPrize"]
	12	[1008]	TEST     	R1 0 ; if not R1 then PC := 17
	13	[1008]	JMP      	17 ; PC := 17
	14	[1009]	GETGLOBAL	R1 K4 ; R1 := _T
	15	[1009]	GETTABLE 	R1 R1 K6 ; R1 := R1[0x83fce65b]
	16	[1009]	CALL     	R1 1 1 ; R1()
	17	[1011]	RETURN   	R0 1 ; return 

function #43 <?:1013,1031> (5 instructions, 20 bytes at 000002112B7B6E10)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 1 function
	1	[1014]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1030]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	3	[1030]	MOVE     	R0 R0 ; R0 := R0
	4	[1014]	CALL     	R1 2 1 ; R1(R2)
	5	[1031]	RETURN   	R0 1 ; return 

function #44 <?:1034,1051> (43 instructions, 172 bytes at 0000021126237180)
1 param, 6 slots, 1 upvalue, 0 locals, 8 constants, 0 functions
	1	[1035]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[1035]	GETTABLE 	R1 R1 K1 ; R1 := R1["gLoadedIcons"]
	3	[1035]	EQ       	0 R1 K2 ; if R1 ~= nil then PC := 8
	4	[1035]	JMP      	8 ; PC := 8
	5	[1036]	GETGLOBAL	R1 K0 ; R1 := _T
	6	[1036]	NEWTABLE 	R2 0 0 ; R2 := {}
	7	[1036]	SETTABLE 	R1 K1 R2 ; R1["gLoadedIcons"] := R2
	8	[1039]	OP_LOADBOOL	R1 0 0 ; R1 := false
	9	[1040]	GETGLOBAL	R2 K3 ; R2 := 0x7b998233
	10	[1040]	MOVE     	R3 R0 ; R3 := R0
	11	[1040]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[1040]	TEST     	R2 1 ; if R2 then PC := 42
	13	[1040]	JMP      	42 ; PC := 42
	14	[1041]	GETGLOBAL	R2 K0 ; R2 := _T
	15	[1041]	GETTABLE 	R2 R2 K1 ; R2 := R2["gLoadedIcons"]
	16	[1041]	SELF     	R3 R0 K4 ; R4 := R0; R3 := R0[0xed4e0128]
	17	[1041]	CALL     	R3 2 2 ; R3 := R3(R4)
	18	[1041]	GETTABLE 	R2 R2 R3 ; R2 := R2[R3]
	19	[1041]	EQ       	0 R2 K2 ; if R2 ~= nil then PC := 34
	20	[1041]	JMP      	34 ; PC := 34
	21	[1042]	GETGLOBAL	R2 K0 ; R2 := _T
	22	[1042]	GETTABLE 	R2 R2 K1 ; R2 := R2["gLoadedIcons"]
	23	[1042]	SELF     	R3 R0 K4 ; R4 := R0; R3 := R0[0xed4e0128]
	24	[1042]	CALL     	R3 2 2 ; R3 := R3(R4)
	25	[1042]	SETTABLE 	R2 R3 K5 ; R2[R3] := false
	26	[1043]	GETUPVAL 	R2 U0 ; R2 := U0
	27	[1043]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0x8e07e77f]
	28	[1043]	SELF     	R4 R0 K4 ; R5 := R0; R4 := R0[0xed4e0128]
	29	[1043]	CALL     	R4 2 2 ; R4 := R4(R5)
	30	[1043]	LOADK    	R5 K7 ; R5 := "OnIconReady"
	31	[1043]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	32	[1044]	OP_LOADBOOL	R1 1 0 ; R1 := true
	33	[1044]	JMP      	42 ; PC := 42
	34	[1045]	GETGLOBAL	R2 K0 ; R2 := _T
	35	[1045]	GETTABLE 	R2 R2 K1 ; R2 := R2["gLoadedIcons"]
	36	[1045]	SELF     	R3 R0 K4 ; R4 := R0; R3 := R0[0xed4e0128]
	37	[1045]	CALL     	R3 2 2 ; R3 := R3(R4)
	38	[1045]	GETTABLE 	R2 R2 R3 ; R2 := R2[R3]
	39	[1045]	EQ       	0 R2 K5 ; if R2 ~= false then PC := 42
	40	[1045]	JMP      	42 ; PC := 42
	41	[1046]	OP_LOADBOOL	R1 1 0 ; R1 := true
	42	[1050]	RETURN   	R1 2 ; return R1 
	43	[1051]	RETURN   	R0 1 ; return 

function #45 <?:1053,1069> (32 instructions, 128 bytes at 000002111CA3D210)
1 param, 12 slots, 1 upvalue, 0 locals, 9 constants, 0 functions
	1	[1054]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[1054]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[1054]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[1054]	TEST     	R1 1 ; if R1 then PC := 32
	5	[1054]	JMP      	32 ; PC := 32
	6	[1055]	LOADNIL  	R1 R1 ; R1 := nil
	7	[1056]	LOADK    	R2 := 0.000000
	8	[1057]	LOADK    	R3 := 1.000000
	9	[1057]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[1057]	GETTABLE 	R4 R4 K1 ; R4 := R4["list"]
	11	[1057]	LEN      	R4 R4 ; R4 := # R4
	12	[1057]	LOADK    	R5 := 1.000000
	13	[1057]	FORPREP  	R3 22 ; R3 -= R5; PC := 22
	14	[1058]	GETUPVAL 	R7 U0 ; R7 := U0
	15	[1058]	GETTABLE 	R7 R7 K1 ; R7 := R7["list"]
	16	[1058]	GETTABLE 	R1 R7 R6 ; R1 := R7[R6]
	17	[1059]	GETTABLE 	R7 R1 K2 ; R7 := R1["clip"]
	18	[1059]	EQ       	0 R7 K3 ; if R7 ~= "LogMessageContainer" then PC := 22
	19	[1059]	JMP      	22 ; PC := 22
	20	[1060]	GETTABLE 	R2 R1 K4 ; R2 := R1["NewY"]
	21	[1061]	JMP      	23 ; PC := 23
	22	[1057]	FORLOOP  	R3 14 ; R3 += R5; if R3 <= R4 then begin PC := 14; R6 := R3 end
	23	[1064]	EQ       	0 R0 K5 ; if R0 ~= "true" then PC := 26
	24	[1064]	JMP      	26 ; PC := 26
	25	[1065]	SUB      	R2 R2 K6 ; R2 := R2 - 80.000000
	26	[1067]	GETGLOBAL	R7 K7 ; R7 := 0xae91e43b
	27	[1067]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x67bc869f]
	28	[1067]	LOADK    	R9 K3 ; R9 := "LogMessageContainer"
	29	[1067]	LOADK    	R10 := 1.000000
	30	[1067]	MOVE     	R11 R2 ; R11 := R2
	31	[1067]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	32	[1069]	RETURN   	R0 1 ; return 

function #46 <?:1072,1076> (18 instructions, 72 bytes at 000002113801B980)
1 param, 6 slots, 1 upvalue, 0 locals, 9 constants, 0 functions
	1	[1073]	GETGLOBAL	R1 K0 ; R1 := 0x38f10e85
	2	[1073]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	3	[1073]	LOADK    	R3 K2 ; R3 := "GameplayMessage.gotoAndPlay"
	4	[1073]	LOADK    	R4 K3 ; R4 := "Show"
	5	[1073]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	6	[1074]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	7	[1074]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x67bc869f]
	8	[1074]	LOADK    	R3 K5 ; R3 := "GameplayMessage.MsgContainer.Msg"
	9	[1074]	LOADK    	R4 := 36.000000
	10	[1074]	GETUPVAL 	R5 U0 ; R5 := U0
	11	[1074]	GETTABLE 	R5 R5 K6 ; R5 := R5["Text"]
	12	[1074]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	13	[1075]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	14	[1075]	SELF     	R1 R1 K7 ; R2 := R1; R1 := R1[0x20b98db3]
	15	[1075]	LOADK    	R3 K8 ; R3 := "GameplayMessage.MsgContainer.Msg.text"
	16	[1075]	MOVE     	R4 R0 ; R4 := R0
	17	[1075]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	18	[1076]	RETURN   	R0 1 ; return 

function #47 <?:1080,1082> (3 instructions, 12 bytes at 00000211920936E0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1081]	NEWTABLE 	R0 0 0 ; R0 := {}
	2	[1081]	SETUPVAL 	R0 U0 ; U0 := R0
	3	[1082]	RETURN   	R0 1 ; return 

function #48 <?:1085,1087> (17 instructions, 68 bytes at 00000211159D7CF0)
1 param, 10 slots, 1 upvalue, 0 locals, 4 constants, 1 function
	1	[1086]	GETGLOBAL	R1 K0 ; R1 := 0x25312c9b
	2	[1086]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	3	[1086]	MOVE     	R3 R0 ; R3 := R0
	4	[1086]	LOADK    	R4 := 8.000000
	5	[1086]	NEWTABLE 	R5 1 0 ; R5 := {}
	6	[1086]	LOADK    	R6 := 10.000000
	7	[1086]	SETLIST  	R5 1 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
	8	[1086]	NEWTABLE 	R6 1 0 ; R6 := {}
	9	[1086]	LOADK    	R7 := 30.000000
	10	[1086]	SETLIST  	R6 1 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
	11	[1086]	LOADK    	R7 K3 ; R7 := 0.300000
	12	[1086]	LOADK    	R8 := 0.000000
	13	[1086]	CLOSURE  	R9 0 ; R9 := closure(Function #1)
	14	[1086]	MOVE     	R0 R0 ; R0 := R0
	15	[1086]	GETUPVAL 	R0 U0 ; R0 := U0
	16	[1086]	CALL     	R1 9 1 ; R1(R2,R3,R4,R5,R6,R7,R8,R9)
	17	[1087]	RETURN   	R0 1 ; return 

function #49 <?:1090,1092> (16 instructions, 64 bytes at 0000021130247B70)
0 params, 2 slots, 2 upvalues, 0 locals, 5 constants, 0 functions
	1	[1091]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1091]	EQ       	1 R0 K0 ; if R0 == nil then PC := 10
	3	[1091]	JMP      	10 ; PC := 10
	4	[1091]	GETUPVAL 	R0 U0 ; R0 := U0
	5	[1091]	GETTABLE 	R0 R0 K1 ; R0 := R0["UIMode"]
	6	[1091]	GETUPVAL 	R1 U1 ; R1 := U1
	7	[1091]	GETTABLE 	R1 R1 K2 ; R1 := R1["UI_MODE_IN_SPACE_HUB"]
	8	[1091]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 14
	9	[1091]	JMP      	14 ; PC := 14
	10	[1091]	GETGLOBAL	R0 K3 ; R0 := 0x0032441c
	11	[1091]	GETTABLE 	R0 R0 K4 ; R0 := R0["StalkerMode"]
	12	[1091]	JMP      	15 ; PC := 15
	13	[1091]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 14
	14	[1091]	OP_LOADBOOL	R0 1 0 ; R0 := true
	15	[1091]	RETURN   	R0 2 ; return R0 
	16	[1092]	RETURN   	R0 1 ; return 

function #50 <?:1094,1117> (83 instructions, 332 bytes at 0000021131BBCDD0)
0 params, 6 slots, 5 upvalues, 0 locals, 20 constants, 0 functions
	1	[1095]	GETGLOBAL	R0 K0 ; R0 := 0xbe190284
	2	[1095]	SETUPVAL 	R0 U0 ; U0 := R0
	3	[1096]	GETUPVAL 	R0 U1 ; R0 := U1
	4	[1096]	GETUPVAL 	R1 U2 ; R1 := U2
	5	[1096]	GETTABLE 	R1 R1 K2 ; R1 := R1[0xb73d420f]
	6	[1096]	CALL     	R1 1 2 ; R1 := R1()
	7	[1096]	SETTABLE 	R0 K1 R1 ; R0["UIMode"] := R1
	8	[1098]	GETUPVAL 	R0 U3 ; R0 := U3
	9	[1098]	CALL     	R0 1 2 ; R0 := R0()
	10	[1099]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	11	[1099]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xaade900e]
	12	[1099]	LOADK    	R3 K5 ; R3 := "HealthAndShield"
	13	[1099]	LOADK    	R4 := 11.000000
	14	[1099]	NOT      	R5 R0 ; R5 := not R0
	15	[1099]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	16	[1100]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	17	[1100]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xaade900e]
	18	[1100]	LOADK    	R3 K6 ; R3 := "WeaponFrame"
	19	[1100]	LOADK    	R4 := 11.000000
	20	[1100]	NOT      	R5 R0 ; R5 := not R0
	21	[1100]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	22	[1101]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	23	[1101]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xaade900e]
	24	[1101]	LOADK    	R3 K7 ; R3 := "Reticle"
	25	[1101]	LOADK    	R4 := 11.000000
	26	[1101]	NOT      	R5 R0 ; R5 := not R0
	27	[1101]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	28	[1102]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	29	[1102]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xaade900e]
	30	[1102]	LOADK    	R3 K8 ; R3 := "reloadTimer"
	31	[1102]	LOADK    	R4 := 11.000000
	32	[1102]	NOT      	R5 R0 ; R5 := not R0
	33	[1102]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	34	[1103]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	35	[1103]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xaade900e]
	36	[1103]	LOADK    	R3 K9 ; R3 := "AbilityChargeProgress"
	37	[1103]	LOADK    	R4 := 11.000000
	38	[1103]	NOT      	R5 R0 ; R5 := not R0
	39	[1103]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	40	[1105]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	41	[1105]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xaade900e]
	42	[1105]	LOADK    	R3 K10 ; R3 := "PainTop"
	43	[1105]	LOADK    	R4 := 11.000000
	44	[1105]	NOT      	R5 R0 ; R5 := not R0
	45	[1105]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	46	[1106]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	47	[1106]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xaade900e]
	48	[1106]	LOADK    	R3 K11 ; R3 := "PainBottom"
	49	[1106]	LOADK    	R4 := 11.000000
	50	[1106]	NOT      	R5 R0 ; R5 := not R0
	51	[1106]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	52	[1107]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	53	[1107]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xaade900e]
	54	[1107]	LOADK    	R3 K12 ; R3 := "PainLeft"
	55	[1107]	LOADK    	R4 := 11.000000
	56	[1107]	NOT      	R5 R0 ; R5 := not R0
	57	[1107]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	58	[1108]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	59	[1108]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xaade900e]
	60	[1108]	LOADK    	R3 K13 ; R3 := "PainRight"
	61	[1108]	LOADK    	R4 := 11.000000
	62	[1108]	NOT      	R5 R0 ; R5 := not R0
	63	[1108]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	64	[1110]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	65	[1110]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xaade900e]
	66	[1110]	LOADK    	R3 K14 ; R3 := "AbilityPanel"
	67	[1110]	LOADK    	R4 := 11.000000
	68	[1110]	NOT      	R5 R0 ; R5 := not R0
	69	[1110]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	70	[1112]	GETUPVAL 	R1 U4 ; R1 := U4
	71	[1112]	GETTABLE 	R1 R1 K15 ; R1 := R1[0xd2229093]
	72	[1112]	GETUPVAL 	R2 U0 ; R2 := U0
	73	[1112]	CALL     	R1 2 1 ; R1(R2)
	74	[1114]	GETGLOBAL	R1 K16 ; R1 := 0x7b998233
	75	[1114]	GETGLOBAL	R2 K17 ; R2 := _T
	76	[1114]	GETTABLE 	R2 R2 K18 ; R2 := R2["Touch_UpdateTouchControls"]
	77	[1114]	CALL     	R1 2 2 ; R1 := R1(R2)
	78	[1114]	TEST     	R1 1 ; if R1 then PC := 83
	79	[1114]	JMP      	83 ; PC := 83
	80	[1115]	GETGLOBAL	R1 K17 ; R1 := _T
	81	[1115]	GETTABLE 	R1 R1 K19 ; R1 := R1[0xaa4aa244]
	82	[1115]	CALL     	R1 1 1 ; R1()
	83	[1117]	RETURN   	R0 1 ; return 

function #51 <?:1119,1140> (66 instructions, 264 bytes at 00000211159D75D0)
0 params, 5 slots, 3 upvalues, 0 locals, 16 constants, 0 functions
	1	[1120]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[1120]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[1120]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[1120]	TEST     	R0 0 ; if not R0 then PC := 7
	5	[1120]	JMP      	7 ; PC := 7
	6	[1121]	RETURN   	R0 1 ; return 
	7	[1124]	GETUPVAL 	R0 U1 ; R0 := U1
	8	[1124]	GETUPVAL 	R1 U0 ; R1 := U0
	9	[1124]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0x73a8846a]
	10	[1124]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[1124]	SETTABLE 	R0 K1 R1 ; R0["ptr"] := R1
	12	[1125]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	13	[1125]	GETUPVAL 	R1 U1 ; R1 := U1
	14	[1125]	GETTABLE 	R1 R1 K1 ; R1 := R1["ptr"]
	15	[1125]	CALL     	R0 2 2 ; R0 := R0(R1)
	16	[1125]	TEST     	R0 1 ; if R0 then PC := 31
	17	[1125]	JMP      	31 ; PC := 31
	18	[1126]	GETUPVAL 	R0 U1 ; R0 := U1
	19	[1126]	GETUPVAL 	R1 U1 ; R1 := U1
	20	[1126]	GETTABLE 	R1 R1 K1 ; R1 := R1["ptr"]
	21	[1126]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x327f2778]
	22	[1126]	CALL     	R1 2 2 ; R1 := R1(R2)
	23	[1126]	SETTABLE 	R0 K3 R1 ; R0["impactBehavior"] := R1
	24	[1127]	GETUPVAL 	R0 U1 ; R0 := U1
	25	[1127]	GETUPVAL 	R1 U1 ; R1 := U1
	26	[1127]	GETTABLE 	R1 R1 K1 ; R1 := R1["ptr"]
	27	[1127]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x5419c5ba]
	28	[1127]	CALL     	R1 2 2 ; R1 := R1(R2)
	29	[1127]	SETTABLE 	R0 K5 R1 ; R0["IsMelee"] := R1
	30	[1127]	JMP      	35 ; PC := 35
	31	[1129]	GETUPVAL 	R0 U1 ; R0 := U1
	32	[1129]	SETTABLE 	R0 K3 K7 ; R0["impactBehavior"] := nil
	33	[1130]	GETUPVAL 	R0 U1 ; R0 := U1
	34	[1130]	SETTABLE 	R0 K5 K7 ; R0["IsMelee"] := nil
	35	[1133]	GETUPVAL 	R0 U2 ; R0 := U2
	36	[1133]	GETTABLE 	R0 R0 K8 ; R0 := R0["IsOperator"]
	37	[1133]	TEST     	R0 0 ; if not R0 then PC := 57
	38	[1133]	JMP      	57 ; PC := 57
	39	[1133]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	40	[1133]	GETUPVAL 	R1 U1 ; R1 := U1
	41	[1133]	GETTABLE 	R1 R1 K1 ; R1 := R1["ptr"]
	42	[1133]	CALL     	R0 2 2 ; R0 := R0(R1)
	43	[1133]	TEST     	R0 1 ; if R0 then PC := 57
	44	[1133]	JMP      	57 ; PC := 57
	45	[1133]	GETUPVAL 	R0 U1 ; R0 := U1
	46	[1133]	GETTABLE 	R0 R0 K1 ; R0 := R0["ptr"]
	47	[1133]	SELF     	R0 R0 K9 ; R1 := R0; R0 := R0[0x81f3a598]
	48	[1133]	CALL     	R0 2 2 ; R0 := R0(R1)
	49	[1133]	TEST     	R0 0 ; if not R0 then PC := 57
	50	[1133]	JMP      	57 ; PC := 57
	51	[1134]	GETGLOBAL	R0 K10 ; R0 := 0xae91e43b
	52	[1134]	SELF     	R0 R0 K11 ; R1 := R0; R0 := R0[0xaade900e]
	53	[1134]	LOADK    	R2 K12 ; R2 := "WeaponFrame"
	54	[1134]	LOADK    	R3 := 11.000000
	55	[1134]	OP_LOADBOOL	R4 1 0 ; R4 := true
	56	[1134]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	57	[1137]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	58	[1137]	GETGLOBAL	R1 K13 ; R1 := _T
	59	[1137]	GETTABLE 	R1 R1 K14 ; R1 := R1["Touch_UpdateTouchControls"]
	60	[1137]	CALL     	R0 2 2 ; R0 := R0(R1)
	61	[1137]	TEST     	R0 1 ; if R0 then PC := 66
	62	[1137]	JMP      	66 ; PC := 66
	63	[1138]	GETGLOBAL	R0 K13 ; R0 := _T
	64	[1138]	GETTABLE 	R0 R0 K15 ; R0 := R0[0xaa4aa244]
	65	[1138]	CALL     	R0 1 1 ; R0()
	66	[1140]	RETURN   	R0 1 ; return 

function #52 <?:1142,1180> (164 instructions, 656 bytes at 0000021138050FC0)
2 params, 16 slots, 9 upvalues, 0 locals, 39 constants, 0 functions
	1	[1143]	GETGLOBAL	R2 K0 ; R2 := _T
	2	[1143]	GETTABLE 	R2 R2 K1 ; R2 := R2["SecretMiniGameActive"]
	3	[1143]	TEST     	R2 0 ; if not R2 then PC := 12
	4	[1143]	JMP      	12 ; PC := 12
	5	[1144]	GETGLOBAL	R2 K2 ; R2 := 0xae91e43b
	6	[1144]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0xaade900e]
	7	[1144]	LOADK    	R4 K4 ; R4 := "WeaponFrame"
	8	[1144]	LOADK    	R5 := 11.000000
	9	[1144]	OP_LOADBOOL	R6 0 0 ; R6 := false
	10	[1144]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	11	[1145]	RETURN   	R0 1 ; return 
	12	[1148]	GETUPVAL 	R2 U0 ; R2 := U0
	13	[1148]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0x3583ccf1]
	14	[1148]	MOVE     	R4 R0 ; R4 := R0
	15	[1148]	MOVE     	R5 R1 ; R5 := R1
	16	[1148]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	17	[1149]	GETUPVAL 	R2 U0 ; R2 := U0
	18	[1149]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0x31051e5a]
	19	[1149]	CALL     	R2 2 2 ; R2 := R2(R3)
	20	[1149]	TEST     	R2 1 ; if R2 then PC := 28
	21	[1149]	JMP      	28 ; PC := 28
	22	[1149]	GETGLOBAL	R2 K7 ; R2 := 0x7b998233
	23	[1149]	GETUPVAL 	R3 U1 ; R3 := U1
	24	[1149]	GETTABLE 	R3 R3 K8 ; R3 := R3["ptr"]
	25	[1149]	CALL     	R2 2 2 ; R2 := R2(R3)
	26	[1149]	TEST     	R2 0 ; if not R2 then PC := 58
	27	[1149]	JMP      	58 ; PC := 58
	28	[1150]	GETUPVAL 	R2 U2 ; R2 := U2
	29	[1150]	CALL     	R2 1 1 ; R2()
	30	[1151]	GETGLOBAL	R2 K7 ; R2 := 0x7b998233
	31	[1151]	GETUPVAL 	R3 U1 ; R3 := U1
	32	[1151]	GETTABLE 	R3 R3 K8 ; R3 := R3["ptr"]
	33	[1151]	CALL     	R2 2 2 ; R2 := R2(R3)
	34	[1151]	TEST     	R2 1 ; if R2 then PC := 58
	35	[1151]	JMP      	58 ; PC := 58
	36	[1152]	GETUPVAL 	R2 U3 ; R2 := U3
	37	[1152]	GETUPVAL 	R3 U1 ; R3 := U1
	38	[1152]	GETTABLE 	R3 R3 K8 ; R3 := R3["ptr"]
	39	[1152]	SELF     	R3 R3 K9 ; R4 := R3; R3 := R3[0x7a7373f5]
	40	[1152]	CALL     	R3 2 2 ; R3 := R3(R4)
	41	[1152]	GETGLOBAL	R4 K10 ; R4 := 0x5bced4c4
	42	[1152]	GETTABLE 	R4 R4 K11 ; R4 := R4[0xac1b386a]
	43	[1152]	LOADK    	R5 K12 ; R5 := 9999.000000
	44	[1152]	GETUPVAL 	R6 U1 ; R6 := U1
	45	[1152]	GETTABLE 	R6 R6 K8 ; R6 := R6["ptr"]
	46	[1152]	SELF     	R6 R6 K13 ; R7 := R6; R6 := R6[0x094b3a83]
	47	[1152]	CALL     	R6 2 0 ; R6,... := R6(R7)
	48	[1152]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	49	[1152]	GETUPVAL 	R5 U1 ; R5 := U1
	50	[1152]	GETTABLE 	R5 R5 K8 ; R5 := R5["ptr"]
	51	[1152]	SELF     	R5 R5 K14 ; R6 := R5; R5 := R5[0xd6bd1155]
	52	[1152]	CALL     	R5 2 2 ; R5 := R5(R6)
	53	[1152]	GETUPVAL 	R6 U1 ; R6 := U1
	54	[1152]	GETTABLE 	R6 R6 K8 ; R6 := R6["ptr"]
	55	[1152]	SELF     	R6 R6 K15 ; R7 := R6; R6 := R6[0xa63336e7]
	56	[1152]	CALL     	R6 2 0 ; R6,... := R6(R7)
	57	[1152]	CALL     	R2 0 1 ; R2(R3,...)
	58	[1156]	GETGLOBAL	R2 K0 ; R2 := _T
	59	[1156]	GETTABLE 	R2 R2 K16 ; R2 := R2["VoidMeleeWeaponComboRequirement"]
	60	[1156]	EQ       	1 R2 K17 ; if R2 == nil then PC := 164
	61	[1156]	JMP      	164 ; PC := 164
	62	[1157]	GETGLOBAL	R2 K7 ; R2 := 0x7b998233
	63	[1157]	GETUPVAL 	R3 U4 ; R3 := U4
	64	[1157]	CALL     	R2 2 2 ; R2 := R2(R3)
	65	[1157]	TEST     	R2 1 ; if R2 then PC := 71
	66	[1157]	JMP      	71 ; PC := 71
	67	[1157]	GETUPVAL 	R2 U4 ; R2 := U4
	68	[1157]	SELF     	R2 R2 K18 ; R3 := R2; R2 := R2[0xb9700060]
	69	[1157]	CALL     	R2 2 2 ; R2 := R2(R3)
	70	[1157]	JMP      	73 ; PC := 73
	71	[1157]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 72
	72	[1157]	OP_LOADBOOL	R2 1 0 ; R2 := true
	73	[1158]	GETGLOBAL	R3 K7 ; R3 := 0x7b998233
	74	[1158]	GETUPVAL 	R4 U1 ; R4 := U1
	75	[1158]	GETTABLE 	R4 R4 K8 ; R4 := R4["ptr"]
	76	[1158]	CALL     	R3 2 2 ; R3 := R3(R4)
	77	[1158]	TEST     	R3 1 ; if R3 then PC := 156
	78	[1158]	JMP      	156 ; PC := 156
	79	[1158]	GETUPVAL 	R3 U1 ; R3 := U1
	80	[1158]	GETTABLE 	R3 R3 K19 ; R3 := R3["IsMelee"]
	81	[1158]	TEST     	R3 1 ; if R3 then PC := 85
	82	[1158]	JMP      	85 ; PC := 85
	83	[1158]	TEST     	R2 0 ; if not R2 then PC := 156
	84	[1158]	JMP      	156 ; PC := 156
	85	[1159]	GETUPVAL 	R3 U1 ; R3 := U1
	86	[1159]	GETTABLE 	R3 R3 K20 ; R3 := R3["impactBehavior"]
	87	[1159]	SELF     	R3 R3 K21 ; R4 := R3; R3 := R3[0xdb875eba]
	88	[1159]	CALL     	R3 2 2 ; R3 := R3(R4)
	89	[1160]	GETGLOBAL	R4 K0 ; R4 := _T
	90	[1160]	GETTABLE 	R4 R4 K16 ; R4 := R4["VoidMeleeWeaponComboRequirement"]
	91	[1160]	LE       	0 R4 R3 ; if R4 > R3 then PC := 147
	92	[1160]	JMP      	147 ; PC := 147
	93	[1160]	GETUPVAL 	R4 U5 ; R4 := U5
	94	[1160]	GETTABLE 	R4 R4 K22 ; R4 := R4["Fade"]
	95	[1160]	LT       	0 R4 K23 ; if R4 >= 1.000000 then PC := 147
	96	[1160]	JMP      	147 ; PC := 147
	97	[1161]	GETUPVAL 	R4 U6 ; R4 := U6
	98	[1161]	GETTABLE 	R4 R4 K24 ; R4 := R4[0x06d055f9]
	99	[1161]	MOVE     	R5 R2 ; R5 := R2
	100	[1161]	LOADK    	R6 K25 ; R6 := "WeaponFrame.ComboLabelMiddle"
	101	[1161]	LOADK    	R7 K26 ; R7 := "WeaponFrame.LabelMiddle"
	102	[1161]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	103	[1162]	GETUPVAL 	R5 U7 ; R5 := U7
	104	[1162]	GETTABLE 	R5 R5 K27 ; R5 := R5[0xb5be5d4a]
	105	[1162]	GETGLOBAL	R6 K2 ; R6 := 0xae91e43b
	106	[1162]	MOVE     	R7 R4 ; R7 := R4
	107	[1162]	OP_LOADBOOL	R8 1 0 ; R8 := true
	108	[1162]	CALL     	R5 4 3 ; R5,R6 := R5(R6,R7,R8)
	109	[1164]	GETGLOBAL	R7 K7 ; R7 := 0x7b998233
	110	[1164]	GETUPVAL 	R8 U8 ; R8 := U8
	111	[1164]	CALL     	R7 2 2 ; R7 := R7(R8)
	112	[1164]	TEST     	R7 0 ; if not R7 then PC := 122
	113	[1164]	JMP      	122 ; PC := 122
	114	[1165]	GETUPVAL 	R7 U7 ; R7 := U7
	115	[1165]	GETTABLE 	R7 R7 K28 ; R7 := R7[0x5a22d251]
	116	[1165]	GETGLOBAL	R8 K2 ; R8 := 0xae91e43b
	117	[1165]	GETGLOBAL	R9 K29 ; R9 := 0xe858af5c
	118	[1165]	ADD      	R10 R5 K30 ; R10 := R5 + 3.000000
	119	[1165]	ADD      	R11 R6 K31 ; R11 := R6 + 10.000000
	120	[1165]	CALL     	R7 5 2 ; R7 := R7(R8,R9,R10,R11)
	121	[1165]	SETUPVAL 	R7 U8 ; U8 := R7
	122	[1168]	GETGLOBAL	R7 K7 ; R7 := 0x7b998233
	123	[1168]	GETUPVAL 	R8 U8 ; R8 := U8
	124	[1168]	CALL     	R7 2 2 ; R7 := R7(R8)
	125	[1168]	TEST     	R7 1 ; if R7 then PC := 164
	126	[1168]	JMP      	164 ; PC := 164
	127	[1169]	GETGLOBAL	R7 K32 ; R7 := 0x89326c93
	128	[1169]	SELF     	R7 R7 K33 ; R8 := R7; R7 := R7[0xb4364067]
	129	[1169]	CALL     	R7 2 2 ; R7 := R7(R8)
	130	[1170]	GETUPVAL 	R8 U6 ; R8 := U6
	131	[1170]	GETTABLE 	R8 R8 K34 ; R8 := R8[0x3e145a1a]
	132	[1170]	GETGLOBAL	R9 K2 ; R9 := 0xae91e43b
	133	[1170]	ADD      	R10 R5 K30 ; R10 := R5 + 3.000000
	134	[1170]	ADD      	R11 R6 K31 ; R11 := R6 + 10.000000
	135	[1170]	MOVE     	R12 R7 ; R12 := R7
	136	[1170]	CALL     	R8 5 3 ; R8,R9 := R8(R9,R10,R11,R12)
	137	[1171]	GETUPVAL 	R10 U8 ; R10 := U8
	138	[1171]	SELF     	R10 R10 K35 ; R11 := R10; R10 := R10[0xe28aa928]
	139	[1171]	GETGLOBAL	R12 K36 ; R12 := 0xa421af95
	140	[1171]	MOVE     	R13 R8 ; R13 := R8
	141	[1171]	MOVE     	R14 R9 ; R14 := R9
	142	[1171]	LOADK    	R15 := 1.000000
	143	[1171]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	144	[1171]	GETGLOBAL	R13 K37 ; R13 := ZERO_ROTATION
	145	[1171]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	146	[1172]	JMP      	164 ; PC := 164
	147	[1173]	GETGLOBAL	R10 K7 ; R10 := 0x7b998233
	148	[1173]	GETUPVAL 	R11 U8 ; R11 := U8
	149	[1173]	CALL     	R10 2 2 ; R10 := R10(R11)
	150	[1173]	TEST     	R10 1 ; if R10 then PC := 164
	151	[1173]	JMP      	164 ; PC := 164
	152	[1174]	GETUPVAL 	R10 U8 ; R10 := U8
	153	[1174]	SELF     	R10 R10 K38 ; R11 := R10; R10 := R10[0xa2880940]
	154	[1174]	CALL     	R10 2 1 ; R10(R11)
	155	[1175]	JMP      	164 ; PC := 164
	156	[1176]	GETGLOBAL	R10 K7 ; R10 := 0x7b998233
	157	[1176]	GETUPVAL 	R11 U8 ; R11 := U8
	158	[1176]	CALL     	R10 2 2 ; R10 := R10(R11)
	159	[1176]	TEST     	R10 1 ; if R10 then PC := 164
	160	[1176]	JMP      	164 ; PC := 164
	161	[1177]	GETUPVAL 	R10 U8 ; R10 := U8
	162	[1177]	SELF     	R10 R10 K38 ; R11 := R10; R10 := R10[0xa2880940]
	163	[1177]	CALL     	R10 2 1 ; R10(R11)
	164	[1180]	RETURN   	R0 1 ; return 

function #53 <?:1183,1192> (33 instructions, 132 bytes at 0000021192024E00)
2 params, 14 slots, 1 upvalue, 0 locals, 13 constants, 0 functions
	1	[1184]	SELF     	R2 R1 K0 ; R3 := R1; R2 := R1[0xc6c1d322]
	2	[1184]	CALL     	R2 2 2 ; R2 := R2(R3)
	3	[1185]	LE       	0 R2 K2 ; if R2 > 12.000000 then PC := 33
	4	[1185]	JMP      	33 ; PC := 33
	5	[1186]	MOVE     	R3 R2 ; R3 := R2
	6	[1186]	LOADK    	R4 := 12.000000
	7	[1186]	LOADK    	R5 := 1.000000
	8	[1186]	FORPREP  	R3 32 ; R3 -= R5; PC := 32
	9	[1187]	SELF     	R7 R1 K3 ; R8 := R1; R7 := R1[0xf80e8dff]
	10	[1187]	MOVE     	R9 R6 ; R9 := R6
	11	[1187]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	12	[1187]	LT       	0 K4 R7 ; if 0.000000 >= R7 then PC := 32
	13	[1187]	JMP      	32 ; PC := 32
	14	[1188]	GETGLOBAL	R7 K5 ; R7 := 0x33bdd652
	15	[1188]	GETTABLE 	R7 R7 K6 ; R7 := R7[0x23d5322f]
	16	[1188]	MOVE     	R8 R0 ; R8 := R0
	17	[1188]	NEWTABLE 	R9 0 3 ; R9 := {}
	18	[1188]	SETTABLE 	R9 K7 R6 ; R9["DamageType"] := R6
	19	[1188]	GETUPVAL 	R10 U0 ; R10 := U0
	20	[1188]	ADD      	R11 R6 K9 ; R11 := R6 + 1.000000
	21	[1188]	GETTABLE 	R10 R10 R11 ; R10 := R10[R11]
	22	[1188]	GETTABLE 	R10 R10 K8 ; R10 := R10["Icon"]
	23	[1188]	SETTABLE 	R9 K8 R10 ; R9["Icon"] := R10
	24	[1188]	GETGLOBAL	R10 K11 ; R10 := 0x5bced4c4
	25	[1188]	GETTABLE 	R10 R10 K12 ; R10 := R10[0x99675e23]
	26	[1188]	SELF     	R11 R1 K3 ; R12 := R1; R11 := R1[0xf80e8dff]
	27	[1188]	MOVE     	R13 R6 ; R13 := R6
	28	[1188]	CALL     	R11 3 0 ; R11,... := R11(R12,R13)
	29	[1188]	CALL     	R10 0 2 ; R10 := R10(R11,...)
	30	[1188]	SETTABLE 	R9 K10 R10 ; R9["Time"] := R10
	31	[1188]	CALL     	R7 3 1 ; R7(R8,R9)
	32	[1186]	FORLOOP  	R3 9 ; R3 += R5; if R3 <= R4 then begin PC := 9; R6 := R3 end
	33	[1192]	RETURN   	R0 1 ; return 

function #54 <?:1194,1305> (234 instructions, 936 bytes at 00000211229517E0)
1 param, 30 slots, 9 upvalues, 0 locals, 44 constants, 0 functions
	1	[1195]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[1195]	GETTABLE 	R1 R1 K1 ; R1 := R1["SecretMiniGameActive"]
	3	[1195]	TEST     	R1 0 ; if not R1 then PC := 9
	4	[1195]	JMP      	9 ; PC := 9
	5	[1195]	GETGLOBAL	R1 K0 ; R1 := _T
	6	[1195]	GETTABLE 	R1 R1 K2 ; R1 := R1["SecretMiniGameAllowsPause"]
	7	[1195]	TEST     	R1 0 ; if not R1 then PC := 13
	8	[1195]	JMP      	13 ; PC := 13
	9	[1195]	SELF     	R1 R0 K3 ; R2 := R0; R1 := R0[0xa5e492d4]
	10	[1195]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[1195]	TEST     	R1 1 ; if R1 then PC := 14
	12	[1195]	JMP      	14 ; PC := 14
	13	[1196]	RETURN   	R0 1 ; return 
	14	[1199]	GETGLOBAL	R1 K4 ; R1 := 0x67652851
	15	[1199]	CALL     	R1 1 2 ; R1 := R1()
	16	[1201]	NEWTABLE 	R2 0 0 ; R2 := {}
	17	[1202]	GETUPVAL 	R3 U0 ; R3 := U0
	18	[1202]	LEN      	R3 R3 ; R3 := # R3
	19	[1202]	LT       	0 K5 R3 ; if 0.000000 >= R3 then PC := 51
	20	[1202]	JMP      	51 ; PC := 51
	21	[1203]	GETGLOBAL	R3 K6 ; R3 := 0xc8802016
	22	[1203]	GETUPVAL 	R4 U0 ; R4 := U0
	23	[1203]	CALL     	R3 2 4 ; R3,R4,R5 := R3(R4)
	24	[1203]	JMP      	49 ; PC := 49
	25	[1204]	GETTABLE 	R8 R7 K7 ; R8 := R7["Timer"]
	26	[1204]	TEST     	R8 0 ; if not R8 then PC := 47
	27	[1204]	JMP      	47 ; PC := 47
	28	[1204]	GETTABLE 	R8 R7 K7 ; R8 := R7["Timer"]
	29	[1204]	LT       	0 K5 R8 ; if 0.000000 >= R8 then PC := 47
	30	[1204]	JMP      	47 ; PC := 47
	31	[1205]	GETGLOBAL	R8 K8 ; R8 := 0x5bced4c4
	32	[1205]	GETTABLE 	R8 R8 K9 ; R8 := R8[0xb62ecfe0]
	33	[1205]	LOADK    	R9 := 0.000000
	34	[1205]	GETTABLE 	R10 R7 K7 ; R10 := R7["Timer"]
	35	[1205]	SUB      	R10 R10 R1 ; R10 := R10 - R1
	36	[1205]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	37	[1205]	SETTABLE 	R7 K7 R8 ; R7["Timer"] := R8
	38	[1206]	GETGLOBAL	R8 K11 ; R8 := 0x64fb1586
	39	[1206]	GETUPVAL 	R9 U1 ; R9 := U1
	40	[1206]	GETTABLE 	R9 R9 K12 ; R9 := R9[0x1142c7a8]
	41	[1206]	GETTABLE 	R10 R7 K7 ; R10 := R7["Timer"]
	42	[1206]	ADD      	R10 R10 K13 ; R10 := R10 + 1.000000
	43	[1206]	LOADK    	R11 := 0.000000
	44	[1206]	CALL     	R9 3 0 ; R9,... := R9(R10,R11)
	45	[1206]	CALL     	R8 0 2 ; R8 := R8(R9,...)
	46	[1206]	SETTABLE 	R7 K10 R8 ; R7["Time"] := R8
	47	[1208]	SETTABLE 	R7 K14 K15 ; R7["InStatEffectList"] := false
	48	[1209]	SETTABLE 	R2 R6 R7 ; R2[R6] := R7
	49	[1203]	TFORLOOP 	R3 2 ; R6,R7 := R3(R4,R5); if R6 ~= nil then begin PC = 25; R5 := R6 end
	50	[1209]	JMP      	25 ; PC := 25
	51	[1213]	GETUPVAL 	R8 U2 ; R8 := U2
	52	[1213]	MOVE     	R9 R2 ; R9 := R2
	53	[1213]	GETUPVAL 	R10 U3 ; R10 := U3
	54	[1213]	GETTABLE 	R10 R10 K16 ; R10 := R10["DamageController"]
	55	[1213]	CALL     	R8 3 1 ; R8(R9,R10)
	56	[1215]	GETGLOBAL	R8 K17 ; R8 := 0x7b998233
	57	[1215]	GETUPVAL 	R9 U4 ; R9 := U4
	58	[1215]	CALL     	R8 2 2 ; R8 := R8(R9)
	59	[1215]	TEST     	R8 1 ; if R8 then PC := 81
	60	[1215]	JMP      	81 ; PC := 81
	61	[1215]	GETUPVAL 	R8 U4 ; R8 := U4
	62	[1215]	SELF     	R8 R8 K18 ; R9 := R8; R8 := R8[0xf2deaf69]
	63	[1215]	GETGLOBAL	R10 K19 ; R10 := gLotusVehicleAvatarType
	64	[1215]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	65	[1215]	TEST     	R8 0 ; if not R8 then PC := 81
	66	[1215]	JMP      	81 ; PC := 81
	67	[1216]	GETUPVAL 	R8 U4 ; R8 := U4
	68	[1216]	SELF     	R8 R8 K20 ; R9 := R8; R8 := R8[0xff005826]
	69	[1216]	CALL     	R8 2 2 ; R8 := R8(R9)
	70	[1217]	GETGLOBAL	R9 K17 ; R9 := 0x7b998233
	71	[1217]	MOVE     	R10 R8 ; R10 := R8
	72	[1217]	CALL     	R9 2 2 ; R9 := R9(R10)
	73	[1217]	TEST     	R9 1 ; if R9 then PC := 81
	74	[1217]	JMP      	81 ; PC := 81
	75	[1218]	SELF     	R9 R8 K21 ; R10 := R8; R9 := R8[0x1ac1655c]
	76	[1218]	CALL     	R9 2 2 ; R9 := R9(R10)
	77	[1219]	GETUPVAL 	R10 U2 ; R10 := U2
	78	[1219]	MOVE     	R11 R2 ; R11 := R2
	79	[1219]	MOVE     	R12 R9 ; R12 := R9
	80	[1219]	CALL     	R10 3 1 ; R10(R11,R12)
	81	[1224]	LEN      	R10 R2 ; R10 := # R2
	82	[1225]	LOADK    	R11 := 1.000000
	83	[1226]	OP_LOADBOOL	R12 0 0 ; R12 := false
	84	[1227]	GETUPVAL 	R13 U5 ; R13 := U5
	85	[1227]	EQ       	1 R13 K22 ; if R13 == nil then PC := 152
	86	[1227]	JMP      	152 ; PC := 152
	87	[1228]	LOADK    	R13 := 1.000000
	88	[1229]	GETUPVAL 	R14 U5 ; R14 := U5
	89	[1229]	SELF     	R14 R14 K23 ; R15 := R14; R14 := R14[0x5fbddc1a]
	90	[1229]	CALL     	R14 2 2 ; R14 := R14(R15)
	91	[1229]	LE       	0 R13 R14 ; if R13 > R14 then PC := 152
	92	[1229]	JMP      	152 ; PC := 152
	93	[1230]	GETUPVAL 	R14 U5 ; R14 := U5
	94	[1230]	SELF     	R14 R14 K24 ; R15 := R14; R14 := R14[0x5465f8f3]
	95	[1230]	MOVE     	R16 R13 ; R16 := R13
	96	[1230]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	97	[1232]	GETGLOBAL	R15 K17 ; R15 := 0x7b998233
	98	[1232]	MOVE     	R16 R14 ; R16 := R14
	99	[1232]	CALL     	R15 2 2 ; R15 := R15(R16)
	100	[1232]	TEST     	R15 1 ; if R15 then PC := 152
	101	[1232]	JMP      	152 ; PC := 152
	102	[1232]	GETTABLE 	R15 R14 K25 ; R15 := R14["mIsDebuff"]
	103	[1232]	TEST     	R15 0 ; if not R15 then PC := 152
	104	[1232]	JMP      	152 ; PC := 152
	105	[1232]	GETTABLE 	R15 R14 K26 ; R15 := R14["mAbilityType"]
	106	[1232]	EQ       	1 R15 K22 ; if R15 == nil then PC := 109
	107	[1232]	JMP      	109 ; PC := 109
	108	[1234]	JMP      	152 ; PC := 152
	109	[1237]	ADD      	R11 R13 K13 ; R11 := R13 + 1.000000
	110	[1240]	OP_LOADBOOL	R15 0 0 ; R15 := false
	111	[1241]	LOADK    	R16 := 1.000000
	112	[1241]	MOVE     	R17 R10 ; R17 := R10
	113	[1241]	LOADK    	R18 := 1.000000
	114	[1241]	FORPREP  	R16 139 ; R16 -= R18; PC := 139
	115	[1242]	GETTABLE 	R20 R2 R19 ; R20 := R2[R19]
	116	[1242]	EQ       	1 R20 K22 ; if R20 == nil then PC := 139
	117	[1242]	JMP      	139 ; PC := 139
	118	[1242]	GETTABLE 	R20 R2 R19 ; R20 := R2[R19]
	119	[1242]	GETTABLE 	R20 R20 K27 ; R20 := R20["DamageType"]
	120	[1242]	GETTABLE 	R21 R14 K28 ; R21 := R14["mDamageType"]
	121	[1242]	EQ       	0 R20 R21 ; if R20 ~= R21 then PC := 139
	122	[1242]	JMP      	139 ; PC := 139
	123	[1243]	GETTABLE 	R20 R2 R19 ; R20 := R2[R19]
	124	[1243]	GETTABLE 	R20 R20 K10 ; R20 := R20["Time"]
	125	[1243]	GETTABLE 	R21 R14 K29 ; R21 := R14["mBuffData"]
	126	[1243]	EQ       	1 R20 R21 ; if R20 == R21 then PC := 135
	127	[1243]	JMP      	135 ; PC := 135
	128	[1244]	GETTABLE 	R20 R2 R19 ; R20 := R2[R19]
	129	[1244]	GETTABLE 	R20 R20 K10 ; R20 := R20["Time"]
	130	[1244]	SETTABLE 	R14 K29 R20 ; R14["mBuffData"] := R20
	131	[1245]	GETUPVAL 	R20 U5 ; R20 := U5
	132	[1245]	GETTABLE 	R20 R20 K30 ; R20 := R20[0xb15e6aca]
	133	[1245]	MOVE     	R21 R14 ; R21 := R14
	134	[1245]	CALL     	R20 2 1 ; R20(R21)
	135	[1248]	GETTABLE 	R20 R2 R19 ; R20 := R2[R19]
	136	[1248]	SETTABLE 	R20 K14 K31 ; R20["InStatEffectList"] := true
	137	[1249]	OP_LOADBOOL	R15 1 0 ; R15 := true
	138	[1250]	JMP      	140 ; PC := 140
	139	[1241]	FORLOOP  	R16 115 ; R16 += R18; if R16 <= R17 then begin PC := 115; R19 := R16 end
	140	[1255]	TEST     	R15 1 ; if R15 then PC := 150
	141	[1255]	JMP      	150 ; PC := 150
	142	[1256]	OP_LOADBOOL	R12 1 0 ; R12 := true
	143	[1258]	GETUPVAL 	R20 U5 ; R20 := U5
	144	[1258]	SELF     	R20 R20 K32 ; R21 := R20; R20 := R20[0x9ae7e2d2]
	145	[1258]	MOVE     	R22 R13 ; R22 := R13
	146	[1258]	OP_LOADBOOL	R23 1 0 ; R23 := true
	147	[1258]	OP_LOADBOOL	R24 1 0 ; R24 := true
	148	[1258]	CALL     	R20 5 1 ; R20(R21,R22,R23,R24)
	149	[1258]	JMP      	88 ; PC := 88
	150	[1260]	ADD      	R13 R13 K13 ; R13 := R13 + 1.000000
	151	[1261]	JMP      	88 ; PC := 88
	152	[1266]	LOADK    	R20 := 1.000000
	153	[1266]	MOVE     	R21 R10 ; R21 := R10
	154	[1266]	LOADK    	R22 := 1.000000
	155	[1266]	FORPREP  	R20 211 ; R20 -= R22; PC := 211
	156	[1267]	GETTABLE 	R24 R2 R23 ; R24 := R2[R23]
	157	[1267]	GETTABLE 	R24 R24 K14 ; R24 := R24["InStatEffectList"]
	158	[1267]	TEST     	R24 1 ; if R24 then PC := 211
	159	[1267]	JMP      	211 ; PC := 211
	160	[1268]	OP_LOADBOOL	R12 1 0 ; R12 := true
	161	[1269]	NEWTABLE 	R24 0 6 ; R24 := {}
	162	[1269]	SETTABLE 	R24 K33 K13 ; R24["mBuffType"] := 1.000000
	163	[1270]	SETTABLE 	R24 K25 K31 ; R24["mIsDebuff"] := true
	164	[1271]	GETTABLE 	R25 R2 R23 ; R25 := R2[R23]
	165	[1271]	GETTABLE 	R25 R25 K27 ; R25 := R25["DamageType"]
	166	[1271]	SETTABLE 	R24 K28 R25 ; R24["mDamageType"] := R25
	167	[1272]	GETTABLE 	R25 R2 R23 ; R25 := R2[R23]
	168	[1272]	GETTABLE 	R25 R25 K36 ; R25 := R25["Icon"]
	169	[1272]	SETTABLE 	R24 K35 R25 ; R24["mIcon"] := R25
	170	[1273]	SETTABLE 	R24 K37 K38 ; R24["mDesc"] := ""
	171	[1274]	GETTABLE 	R25 R2 R23 ; R25 := R2[R23]
	172	[1274]	GETTABLE 	R25 R25 K10 ; R25 := R25["Time"]
	173	[1274]	SETTABLE 	R24 K29 R25 ; R24["mBuffData"] := R25
	174	[1277]	GETTABLE 	R25 R2 R23 ; R25 := R2[R23]
	175	[1277]	GETTABLE 	R25 R25 K39 ; R25 := R25["Description"]
	176	[1277]	EQ       	1 R25 K22 ; if R25 == nil then PC := 182
	177	[1277]	JMP      	182 ; PC := 182
	178	[1278]	GETTABLE 	R25 R2 R23 ; R25 := R2[R23]
	179	[1278]	GETTABLE 	R25 R25 K39 ; R25 := R25["Description"]
	180	[1278]	SETTABLE 	R24 K37 R25 ; R24["mDesc"] := R25
	181	[1278]	JMP      	197 ; PC := 197
	182	[1279]	GETGLOBAL	R25 K40 ; R25 := 0x03f57322
	183	[1279]	GETTABLE 	R26 R2 R23 ; R26 := R2[R23]
	184	[1279]	GETTABLE 	R26 R26 K27 ; R26 := R26["DamageType"]
	185	[1279]	CALL     	R25 2 2 ; R25 := R25(R26)
	186	[1279]	EQ       	1 R25 K22 ; if R25 == nil then PC := 197
	187	[1279]	JMP      	197 ; PC := 197
	188	[1280]	GETUPVAL 	R25 U6 ; R25 := U6
	189	[1280]	GETGLOBAL	R26 K40 ; R26 := 0x03f57322
	190	[1280]	GETTABLE 	R27 R2 R23 ; R27 := R2[R23]
	191	[1280]	GETTABLE 	R27 R27 K27 ; R27 := R27["DamageType"]
	192	[1280]	CALL     	R26 2 2 ; R26 := R26(R27)
	193	[1280]	ADD      	R26 R26 K13 ; R26 := R26 + 1.000000
	194	[1280]	GETTABLE 	R25 R25 R26 ; R25 := R25[R26]
	195	[1280]	GETTABLE 	R25 R25 K41 ; R25 := R25["NameTag"]
	196	[1280]	SETTABLE 	R24 K37 R25 ; R24["mDesc"] := R25
	197	[1283]	GETTABLE 	R25 R24 K29 ; R25 := R24["mBuffData"]
	198	[1283]	EQ       	1 R25 K22 ; if R25 == nil then PC := 203
	199	[1283]	JMP      	203 ; PC := 203
	200	[1283]	GETTABLE 	R25 R24 K29 ; R25 := R24["mBuffData"]
	201	[1283]	EQ       	0 R25 K38 ; if R25 ~= "" then PC := 204
	202	[1283]	JMP      	204 ; PC := 204
	203	[1284]	SETTABLE 	R24 K33 K5 ; R24["mBuffType"] := 0.000000
	204	[1287]	GETUPVAL 	R25 U5 ; R25 := U5
	205	[1287]	SELF     	R25 R25 K42 ; R26 := R25; R25 := R25[0x45082a31]
	206	[1287]	MOVE     	R27 R11 ; R27 := R11
	207	[1287]	MOVE     	R28 R24 ; R28 := R24
	208	[1287]	OP_LOADBOOL	R29 1 0 ; R29 := true
	209	[1287]	CALL     	R25 5 1 ; R25(R26,R27,R28,R29)
	210	[1289]	ADD      	R11 R11 K13 ; R11 := R11 + 1.000000
	211	[1266]	FORLOOP  	R20 156 ; R20 += R22; if R20 <= R21 then begin PC := 156; R23 := R20 end
	212	[1293]	TEST     	R12 1 ; if R12 then PC := 226
	213	[1293]	JMP      	226 ; PC := 226
	214	[1293]	GETUPVAL 	R25 U7 ; R25 := U7
	215	[1293]	GETUPVAL 	R26 U8 ; R26 := U8
	216	[1293]	EQ       	1 R25 R26 ; if R25 == R26 then PC := 226
	217	[1293]	JMP      	226 ; PC := 226
	218	[1294]	OP_LOADBOOL	R12 1 0 ; R12 := true
	219	[1295]	GETUPVAL 	R25 U8 ; R25 := U8
	220	[1295]	SETUPVAL 	R25 U7 ; U7 := R25
	221	[1296]	GETUPVAL 	R25 U5 ; R25 := U5
	222	[1296]	SELF     	R25 R25 K43 ; R26 := R25; R25 := R25[0x71e9ac81]
	223	[1296]	LOADNIL  	R27 R27 ; R27 := nil
	224	[1296]	OP_LOADBOOL	R28 1 0 ; R28 := true
	225	[1296]	CALL     	R25 4 1 ; R25(R26,R27,R28)
	226	[1299]	TEST     	R12 0 ; if not R12 then PC := 234
	227	[1299]	JMP      	234 ; PC := 234
	228	[1301]	GETUPVAL 	R25 U5 ; R25 := U5
	229	[1301]	SELF     	R25 R25 K43 ; R26 := R25; R25 := R25[0x71e9ac81]
	230	[1301]	LOADNIL  	R27 R27 ; R27 := nil
	231	[1301]	OP_LOADBOOL	R28 1 0 ; R28 := true
	232	[1301]	OP_LOADBOOL	R29 1 0 ; R29 := true
	233	[1301]	CALL     	R25 5 1 ; R25(R26,R27,R28,R29)
	234	[1305]	RETURN   	R0 1 ; return 

function #55 <?:1307,1422> (312 instructions, 1248 bytes at 000002119240E8A0)
1 param, 27 slots, 10 upvalues, 0 locals, 52 constants, 0 functions
	1	[1308]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1308]	GETTABLE 	R1 R1 K0 ; R1 := R1["Cached"]
	3	[1308]	TEST     	R1 0 ; if not R1 then PC := 45
	4	[1308]	JMP      	45 ; PC := 45
	5	[1309]	LOADK    	R1 := 1.000000
	6	[1310]	GETUPVAL 	R2 U0 ; R2 := U0
	7	[1310]	GETTABLE 	R2 R2 K1 ; R2 := R2["Buffs"]
	8	[1310]	LEN      	R2 R2 ; R2 := # R2
	9	[1310]	LE       	0 R1 R2 ; if R1 > R2 then PC := 45
	10	[1310]	JMP      	45 ; PC := 45
	11	[1311]	GETUPVAL 	R2 U0 ; R2 := U0
	12	[1311]	GETTABLE 	R2 R2 K1 ; R2 := R2["Buffs"]
	13	[1311]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	14	[1312]	OP_LOADBOOL	R3 1 0 ; R3 := true
	15	[1314]	GETGLOBAL	R4 K2 ; R4 := 0x6c97a788
	16	[1314]	GETTABLE 	R4 R4 K3 ; R4 := R4[0xd6ae36be]
	17	[1314]	GETTABLE 	R5 R2 K4 ; R5 := R2["buffType"]
	18	[1314]	CALL     	R4 2 2 ; R4 := R4(R5)
	19	[1314]	TEST     	R4 0 ; if not R4 then PC := 41
	20	[1314]	JMP      	41 ; PC := 41
	21	[1314]	GETTABLE 	R4 R2 K5 ; R4 := R2["buffData"]
	22	[1314]	LE       	0 K6 R4 ; if 0.000000 > R4 then PC := 41
	23	[1314]	JMP      	41 ; PC := 41
	24	[1315]	GETGLOBAL	R4 K7 ; R4 := 0x5bced4c4
	25	[1315]	GETTABLE 	R4 R4 K8 ; R4 := R4[0xb62ecfe0]
	26	[1315]	GETTABLE 	R5 R2 K5 ; R5 := R2["buffData"]
	27	[1315]	SUB      	R5 R5 R0 ; R5 := R5 - R0
	28	[1315]	LOADK    	R6 := 0.000000
	29	[1315]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	30	[1315]	SETTABLE 	R2 K5 R4 ; R2["buffData"] := R4
	31	[1316]	GETTABLE 	R4 R2 K5 ; R4 := R2["buffData"]
	32	[1316]	LE       	0 R4 K6 ; if R4 > 0.000000 then PC := 41
	33	[1316]	JMP      	41 ; PC := 41
	34	[1317]	OP_LOADBOOL	R3 0 0 ; R3 := false
	35	[1318]	GETGLOBAL	R4 K9 ; R4 := 0x33bdd652
	36	[1318]	GETTABLE 	R4 R4 K10 ; R4 := R4[0x9c1f3b5a]
	37	[1318]	GETUPVAL 	R5 U0 ; R5 := U0
	38	[1318]	GETTABLE 	R5 R5 K1 ; R5 := R5["Buffs"]
	39	[1318]	MOVE     	R6 R1 ; R6 := R1
	40	[1318]	CALL     	R4 3 1 ; R4(R5,R6)
	41	[1322]	TEST     	R3 0 ; if not R3 then PC := 6
	42	[1322]	JMP      	6 ; PC := 6
	43	[1323]	ADD      	R1 R1 K11 ; R1 := R1 + 1.000000
	44	[1324]	JMP      	6 ; PC := 6
	45	[1328]	GETUPVAL 	R4 U1 ; R4 := U1
	46	[1328]	EQ       	1 R4 K12 ; if R4 == nil then PC := 55
	47	[1328]	JMP      	55 ; PC := 55
	48	[1328]	GETUPVAL 	R4 U2 ; R4 := U2
	49	[1328]	GETTABLE 	R4 R4 K13 ; R4 := R4["IsSpectating"]
	50	[1328]	TEST     	R4 0 ; if not R4 then PC := 56
	51	[1328]	JMP      	56 ; PC := 56
	52	[1328]	GETUPVAL 	R4 U3 ; R4 := U3
	53	[1328]	TEST     	R4 1 ; if R4 then PC := 56
	54	[1328]	JMP      	56 ; PC := 56
	55	[1329]	RETURN   	R0 1 ; return 
	56	[1332]	GETUPVAL 	R4 U2 ; R4 := U2
	57	[1332]	GETTABLE 	R4 R4 K13 ; R4 := R4["IsSpectating"]
	58	[1332]	TEST     	R4 1 ; if R4 then PC := 91
	59	[1332]	JMP      	91 ; PC := 91
	60	[1333]	GETUPVAL 	R4 U4 ; R4 := U4
	61	[1333]	EQ       	1 R4 K12 ; if R4 == nil then PC := 123
	62	[1333]	JMP      	123 ; PC := 123
	63	[1333]	GETUPVAL 	R4 U4 ; R4 := U4
	64	[1333]	SELF     	R4 R4 K14 ; R5 := R4; R4 := R4[0x5a32db44]
	65	[1333]	CALL     	R4 2 2 ; R4 := R4(R5)
	66	[1333]	TEST     	R4 0 ; if not R4 then PC := 123
	67	[1333]	JMP      	123 ; PC := 123
	68	[1335]	GETUPVAL 	R4 U4 ; R4 := U4
	69	[1335]	SELF     	R4 R4 K15 ; R5 := R4; R4 := R4[0x1f7e8969]
	70	[1335]	CALL     	R4 2 2 ; R4 := R4(R5)
	71	[1336]	LOADK    	R5 := 1.000000
	72	[1336]	LEN      	R6 R4 ; R6 := # R4
	73	[1336]	LOADK    	R7 := 1.000000
	74	[1336]	FORPREP  	R5 86 ; R5 -= R7; PC := 86
	75	[1337]	GETTABLE 	R9 R4 R8 ; R9 := R4[R8]
	76	[1337]	GETTABLE 	R9 R9 K16 ; R9 := R9["addBuff"]
	77	[1337]	TEST     	R9 0 ; if not R9 then PC := 83
	78	[1337]	JMP      	83 ; PC := 83
	79	[1338]	GETUPVAL 	R9 U5 ; R9 := U5
	80	[1338]	GETTABLE 	R10 R4 R8 ; R10 := R4[R8]
	81	[1338]	CALL     	R9 2 1 ; R9(R10)
	82	[1338]	JMP      	86 ; PC := 86
	83	[1340]	GETUPVAL 	R9 U6 ; R9 := U6
	84	[1340]	GETTABLE 	R10 R4 R8 ; R10 := R4[R8]
	85	[1340]	CALL     	R9 2 1 ; R9(R10)
	86	[1336]	FORLOOP  	R5 75 ; R5 += R7; if R5 <= R6 then begin PC := 75; R8 := R5 end
	87	[1344]	GETUPVAL 	R9 U4 ; R9 := U4
	88	[1344]	SELF     	R9 R9 K17 ; R10 := R9; R9 := R9[0x484bc106]
	89	[1344]	CALL     	R9 2 1 ; R9(R10)
	90	[1345]	JMP      	123 ; PC := 123
	91	[1346]	GETGLOBAL	R9 K18 ; R9 := 0x7b998233
	92	[1346]	GETUPVAL 	R10 U7 ; R10 := U7
	93	[1346]	CALL     	R9 2 2 ; R9 := R9(R10)
	94	[1346]	TEST     	R9 1 ; if R9 then PC := 123
	95	[1346]	JMP      	123 ; PC := 123
	96	[1346]	GETUPVAL 	R9 U3 ; R9 := U3
	97	[1346]	TEST     	R9 0 ; if not R9 then PC := 123
	98	[1346]	JMP      	123 ; PC := 123
	99	[1347]	GETUPVAL 	R9 U7 ; R9 := U7
	100	[1347]	SELF     	R9 R9 K15 ; R10 := R9; R9 := R9[0x1f7e8969]
	101	[1347]	CALL     	R9 2 2 ; R9 := R9(R10)
	102	[1348]	LOADK    	R10 := 1.000000
	103	[1348]	LEN      	R11 R9 ; R11 := # R9
	104	[1348]	LOADK    	R12 := 1.000000
	105	[1348]	FORPREP  	R10 122 ; R10 -= R12; PC := 122
	106	[1349]	GETGLOBAL	R14 K18 ; R14 := 0x7b998233
	107	[1349]	GETTABLE 	R15 R9 R13 ; R15 := R9[R13]
	108	[1349]	GETTABLE 	R15 R15 K19 ; R15 := R15["abilityType"]
	109	[1349]	CALL     	R14 2 2 ; R14 := R14(R15)
	110	[1349]	TEST     	R14 1 ; if R14 then PC := 122
	111	[1349]	JMP      	122 ; PC := 122
	112	[1349]	GETTABLE 	R14 R9 R13 ; R14 := R9[R13]
	113	[1349]	GETTABLE 	R14 R14 K19 ; R14 := R14["abilityType"]
	114	[1349]	SELF     	R14 R14 K20 ; R15 := R14; R14 := R14[0xf2deaf69]
	115	[1349]	GETGLOBAL	R16 K21 ; R16 := 0xbaec173b
	116	[1349]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	117	[1349]	TEST     	R14 0 ; if not R14 then PC := 122
	118	[1349]	JMP      	122 ; PC := 122
	119	[1350]	GETUPVAL 	R14 U5 ; R14 := U5
	120	[1350]	GETTABLE 	R15 R9 R13 ; R15 := R9[R13]
	121	[1350]	CALL     	R14 2 1 ; R14(R15)
	122	[1348]	FORLOOP  	R10 106 ; R10 += R12; if R10 <= R11 then begin PC := 106; R13 := R10 end
	123	[1355]	GETGLOBAL	R14 K18 ; R14 := 0x7b998233
	124	[1355]	GETUPVAL 	R15 U7 ; R15 := U7
	125	[1355]	CALL     	R14 2 2 ; R14 := R14(R15)
	126	[1355]	TEST     	R14 1 ; if R14 then PC := 133
	127	[1355]	JMP      	133 ; PC := 133
	128	[1355]	GETUPVAL 	R14 U7 ; R14 := U7
	129	[1355]	SELF     	R14 R14 K22 ; R15 := R14; R14 := R14[0x2047cfe7]
	130	[1355]	CALL     	R14 2 2 ; R14 := R14(R15)
	131	[1355]	TEST     	R14 0 ; if not R14 then PC := 148
	132	[1355]	JMP      	148 ; PC := 148
	133	[1355]	GETUPVAL 	R14 U1 ; R14 := U1
	134	[1355]	SELF     	R14 R14 K23 ; R15 := R14; R14 := R14[0x5fbddc1a]
	135	[1355]	CALL     	R14 2 2 ; R14 := R14(R15)
	136	[1355]	LT       	0 K6 R14 ; if 0.000000 >= R14 then PC := 148
	137	[1355]	JMP      	148 ; PC := 148
	138	[1356]	GETUPVAL 	R14 U1 ; R14 := U1
	139	[1356]	SELF     	R14 R14 K24 ; R15 := R14; R14 := R14[0x7c09c373]
	140	[1356]	CALL     	R14 2 1 ; R14(R15)
	141	[1357]	GETUPVAL 	R14 U1 ; R14 := U1
	142	[1357]	SELF     	R14 R14 K25 ; R15 := R14; R14 := R14[0x71e9ac81]
	143	[1357]	CALL     	R14 2 1 ; R14(R15)
	144	[1359]	GETUPVAL 	R14 U1 ; R14 := U1
	145	[1359]	SETTABLE 	R14 K26 K12 ; R14["mVisNameId"] := nil
	146	[1360]	GETUPVAL 	R14 U1 ; R14 := U1
	147	[1360]	SETTABLE 	R14 K27 K12 ; R14["mVisNameFadeTimer"] := nil
	148	[1364]	GETUPVAL 	R14 U1 ; R14 := U1
	149	[1364]	GETTABLE 	R14 R14 K26 ; R14 := R14["mVisNameId"]
	150	[1364]	EQ       	1 R14 K12 ; if R14 == nil then PC := 204
	151	[1364]	JMP      	204 ; PC := 204
	152	[1364]	GETUPVAL 	R14 U1 ; R14 := U1
	153	[1364]	GETTABLE 	R14 R14 K27 ; R14 := R14["mVisNameFadeTimer"]
	154	[1364]	EQ       	1 R14 K12 ; if R14 == nil then PC := 204
	155	[1364]	JMP      	204 ; PC := 204
	156	[1365]	GETUPVAL 	R14 U1 ; R14 := U1
	157	[1365]	SELF     	R14 R14 K28 ; R15 := R14; R14 := R14[0xca30dfb6]
	158	[1365]	GETUPVAL 	R16 U1 ; R16 := U1
	159	[1365]	GETTABLE 	R16 R16 K26 ; R16 := R16["mVisNameId"]
	160	[1365]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	161	[1366]	GETGLOBAL	R15 K18 ; R15 := 0x7b998233
	162	[1366]	MOVE     	R16 R14 ; R16 := R14
	163	[1366]	CALL     	R15 2 2 ; R15 := R15(R16)
	164	[1366]	TEST     	R15 1 ; if R15 then PC := 200
	165	[1366]	JMP      	200 ; PC := 200
	166	[1366]	GETTABLE 	R15 R14 K29 ; R15 := R14["mClipName"]
	167	[1366]	EQ       	1 R15 K12 ; if R15 == nil then PC := 200
	168	[1366]	JMP      	200 ; PC := 200
	169	[1367]	GETUPVAL 	R15 U1 ; R15 := U1
	170	[1367]	GETGLOBAL	R16 K7 ; R16 := 0x5bced4c4
	171	[1367]	GETTABLE 	R16 R16 K8 ; R16 := R16[0xb62ecfe0]
	172	[1367]	GETUPVAL 	R17 U1 ; R17 := U1
	173	[1367]	GETTABLE 	R17 R17 K27 ; R17 := R17["mVisNameFadeTimer"]
	174	[1367]	SUB      	R17 R17 R0 ; R17 := R17 - R0
	175	[1367]	LOADK    	R18 := 0.000000
	176	[1367]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	177	[1367]	SETTABLE 	R15 K27 R16 ; R15["mVisNameFadeTimer"] := R16
	178	[1369]	GETUPVAL 	R15 U1 ; R15 := U1
	179	[1369]	GETTABLE 	R15 R15 K27 ; R15 := R15["mVisNameFadeTimer"]
	180	[1369]	GETUPVAL 	R16 U1 ; R16 := U1
	181	[1369]	GETTABLE 	R16 R16 K30 ; R16 := R16["mVisNameFadeDuration"]
	182	[1369]	DIV      	R15 R15 R16 ; R15 := R15 / R16
	183	[1369]	MUL      	R15 R15 K31 ; R15 := R15 * 100.000000
	184	[1370]	GETGLOBAL	R16 K32 ; R16 := 0xae91e43b
	185	[1370]	SELF     	R16 R16 K33 ; R17 := R16; R16 := R16[0xf64b7262]
	186	[1370]	GETTABLE 	R18 R14 K29 ; R18 := R14["mClipName"]
	187	[1370]	LOADK    	R19 K34 ; R19 := "StatName"
	188	[1370]	LOADK    	R20 := 10.000000
	189	[1370]	MOVE     	R21 R15 ; R21 := R15
	190	[1370]	CALL     	R16 6 1 ; R16(R17,R18,R19,R20,R21)
	191	[1372]	GETUPVAL 	R16 U1 ; R16 := U1
	192	[1372]	GETTABLE 	R16 R16 K27 ; R16 := R16["mVisNameFadeTimer"]
	193	[1372]	EQ       	0 R16 K6 ; if R16 ~= 0.000000 then PC := 204
	194	[1372]	JMP      	204 ; PC := 204
	195	[1373]	GETUPVAL 	R16 U1 ; R16 := U1
	196	[1373]	SETTABLE 	R16 K26 K12 ; R16["mVisNameId"] := nil
	197	[1374]	GETUPVAL 	R16 U1 ; R16 := U1
	198	[1374]	SETTABLE 	R16 K27 K12 ; R16["mVisNameFadeTimer"] := nil
	199	[1375]	JMP      	204 ; PC := 204
	200	[1377]	GETUPVAL 	R16 U1 ; R16 := U1
	201	[1377]	SETTABLE 	R16 K26 K12 ; R16["mVisNameId"] := nil
	202	[1378]	GETUPVAL 	R16 U1 ; R16 := U1
	203	[1378]	SETTABLE 	R16 K27 K12 ; R16["mVisNameFadeTimer"] := nil
	204	[1382]	GETUPVAL 	R16 U1 ; R16 := U1
	205	[1382]	SELF     	R16 R16 K23 ; R17 := R16; R16 := R16[0x5fbddc1a]
	206	[1382]	CALL     	R16 2 2 ; R16 := R16(R17)
	207	[1383]	LOADK    	R17 := 1.000000
	208	[1384]	LE       	0 R17 R16 ; if R17 > R16 then PC := 312
	209	[1384]	JMP      	312 ; PC := 312
	210	[1385]	GETUPVAL 	R18 U1 ; R18 := U1
	211	[1385]	SELF     	R18 R18 K35 ; R19 := R18; R18 := R18[0x5465f8f3]
	212	[1385]	MOVE     	R20 R17 ; R20 := R17
	213	[1385]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	214	[1386]	OP_LOADBOOL	R19 1 0 ; R19 := true
	215	[1388]	EQ       	1 R18 K12 ; if R18 == nil then PC := 308
	216	[1388]	JMP      	308 ; PC := 308
	217	[1388]	GETTABLE 	R20 R18 K29 ; R20 := R18["mClipName"]
	218	[1388]	EQ       	1 R20 K12 ; if R20 == nil then PC := 308
	219	[1388]	JMP      	308 ; PC := 308
	220	[1389]	GETGLOBAL	R20 K2 ; R20 := 0x6c97a788
	221	[1389]	GETTABLE 	R20 R20 K3 ; R20 := R20[0xd6ae36be]
	222	[1389]	GETTABLE 	R21 R18 K36 ; R21 := R18["mBuffType"]
	223	[1389]	CALL     	R20 2 2 ; R20 := R20(R21)
	224	[1389]	TEST     	R20 0 ; if not R20 then PC := 283
	225	[1389]	JMP      	283 ; PC := 283
	226	[1389]	GETTABLE 	R20 R18 K37 ; R20 := R18["mBuffData"]
	227	[1389]	LE       	0 K6 R20 ; if 0.000000 > R20 then PC := 283
	228	[1389]	JMP      	283 ; PC := 283
	229	[1391]	GETGLOBAL	R20 K7 ; R20 := 0x5bced4c4
	230	[1391]	GETTABLE 	R20 R20 K8 ; R20 := R20[0xb62ecfe0]
	231	[1391]	GETTABLE 	R21 R18 K37 ; R21 := R18["mBuffData"]
	232	[1391]	SUB      	R21 R21 R0 ; R21 := R21 - R0
	233	[1391]	LOADK    	R22 := 0.000000
	234	[1391]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	235	[1391]	SETTABLE 	R18 K37 R20 ; R18["mBuffData"] := R20
	236	[1394]	GETTABLE 	R20 R18 K37 ; R20 := R18["mBuffData"]
	237	[1394]	LE       	0 R20 K6 ; if R20 > 0.000000 then PC := 271
	238	[1394]	JMP      	271 ; PC := 271
	239	[1395]	GETTABLE 	R20 R18 K36 ; R20 := R18["mBuffType"]
	240	[1395]	EQ       	0 R20 K38 ; if R20 ~= 13.000000 then PC := 257
	241	[1395]	JMP      	257 ; PC := 257
	242	[1395]	GETTABLE 	R20 R18 K39 ; R20 := R18["mBuffDataExtra"]
	243	[1395]	LT       	0 K11 R20 ; if 1.000000 >= R20 then PC := 257
	244	[1395]	JMP      	257 ; PC := 257
	245	[1396]	GETTABLE 	R20 R18 K39 ; R20 := R18["mBuffDataExtra"]
	246	[1396]	SUB      	R20 R20 K11 ; R20 := R20 - 1.000000
	247	[1396]	SETTABLE 	R18 K39 R20 ; R18["mBuffDataExtra"] := R20
	248	[1397]	GETTABLE 	R20 R18 K40 ; R20 := R18["mInitialBuffData"]
	249	[1397]	SETTABLE 	R18 K37 R20 ; R18["mBuffData"] := R20
	250	[1398]	GETUPVAL 	R20 U1 ; R20 := U1
	251	[1398]	SELF     	R20 R20 K25 ; R21 := R20; R20 := R20[0x71e9ac81]
	252	[1398]	LOADNIL  	R22 R22 ; R22 := nil
	253	[1398]	OP_LOADBOOL	R23 1 0 ; R23 := true
	254	[1398]	OP_LOADBOOL	R24 1 0 ; R24 := true
	255	[1398]	CALL     	R20 5 1 ; R20(R21,R22,R23,R24)
	256	[1398]	JMP      	283 ; PC := 283
	257	[1400]	GETUPVAL 	R20 U1 ; R20 := U1
	258	[1400]	SELF     	R20 R20 K41 ; R21 := R20; R20 := R20[0x9ae7e2d2]
	259	[1400]	MOVE     	R22 R17 ; R22 := R17
	260	[1400]	OP_LOADBOOL	R23 1 0 ; R23 := true
	261	[1400]	OP_LOADBOOL	R24 1 0 ; R24 := true
	262	[1400]	CALL     	R20 5 1 ; R20(R21,R22,R23,R24)
	263	[1401]	GETUPVAL 	R20 U1 ; R20 := U1
	264	[1401]	SELF     	R20 R20 K25 ; R21 := R20; R20 := R20[0x71e9ac81]
	265	[1401]	LOADNIL  	R22 R22 ; R22 := nil
	266	[1401]	OP_LOADBOOL	R23 1 0 ; R23 := true
	267	[1401]	OP_LOADBOOL	R24 1 0 ; R24 := true
	268	[1401]	CALL     	R20 5 1 ; R20(R21,R22,R23,R24)
	269	[1402]	OP_LOADBOOL	R19 0 0 ; R19 := false
	270	[1403]	JMP      	283 ; PC := 283
	271	[1405]	GETGLOBAL	R20 K32 ; R20 := 0xae91e43b
	272	[1405]	SELF     	R20 R20 K42 ; R21 := R20; R20 := R20[0x5f56eeab]
	273	[1405]	GETTABLE 	R22 R18 K29 ; R22 := R18["mClipName"]
	274	[1405]	LOADK    	R23 K43 ; R23 := ".Desc"
	275	[1405]	CONCAT   	R22 R22 R23 ; R22 := R22 .. R23
	276	[1405]	LOADK    	R23 := 29.000000
	277	[1405]	GETUPVAL 	R24 U8 ; R24 := U8
	278	[1405]	GETTABLE 	R24 R24 K44 ; R24 := R24[0x1142c7a8]
	279	[1405]	GETTABLE 	R25 R18 K37 ; R25 := R18["mBuffData"]
	280	[1405]	LOADK    	R26 := 1.000000
	281	[1405]	CALL     	R24 3 0 ; R24,... := R24(R25,R26)
	282	[1405]	CALL     	R20 0 1 ; R20(R21,...)
	283	[1409]	TEST     	R19 0 ; if not R19 then PC := 308
	284	[1409]	JMP      	308 ; PC := 308
	285	[1409]	GETTABLE 	R20 R18 K45 ; R20 := R18["WaitingForIcon"]
	286	[1409]	TEST     	R20 0 ; if not R20 then PC := 308
	287	[1409]	JMP      	308 ; PC := 308
	288	[1409]	GETUPVAL 	R20 U9 ; R20 := U9
	289	[1409]	GETTABLE 	R21 R18 K46 ; R21 := R18["Icon"]
	290	[1409]	CALL     	R20 2 2 ; R20 := R20(R21)
	291	[1409]	TEST     	R20 0 ; if not R20 then PC := 308
	292	[1409]	JMP      	308 ; PC := 308
	293	[1412]	SETTABLE 	R18 K45 K47 ; R18["WaitingForIcon"] := false
	294	[1413]	GETGLOBAL	R20 K32 ; R20 := 0xae91e43b
	295	[1413]	SELF     	R20 R20 K48 ; R21 := R20; R20 := R20[0xc0a3774b]
	296	[1413]	GETTABLE 	R22 R18 K29 ; R22 := R18["mClipName"]
	297	[1413]	LOADK    	R23 K49 ; R23 := "Icon.Icon"
	298	[1413]	LOADK    	R24 := 11.000000
	299	[1413]	OP_LOADBOOL	R25 1 0 ; R25 := true
	300	[1413]	CALL     	R20 6 1 ; R20(R21,R22,R23,R24,R25)
	301	[1414]	GETGLOBAL	R20 K32 ; R20 := 0xae91e43b
	302	[1414]	SELF     	R20 R20 K50 ; R21 := R20; R20 := R20[0x1cb415c1]
	303	[1414]	GETTABLE 	R22 R18 K29 ; R22 := R18["mClipName"]
	304	[1414]	LOADK    	R23 K51 ; R23 := ".Icon.Icon"
	305	[1414]	CONCAT   	R22 R22 R23 ; R22 := R22 .. R23
	306	[1414]	GETTABLE 	R23 R18 K46 ; R23 := R18["Icon"]
	307	[1414]	CALL     	R20 4 1 ; R20(R21,R22,R23)
	308	[1418]	TEST     	R19 0 ; if not R19 then PC := 208
	309	[1418]	JMP      	208 ; PC := 208
	310	[1419]	ADD      	R17 R17 K11 ; R17 := R17 + 1.000000
	311	[1420]	JMP      	208 ; PC := 208
	312	[1422]	RETURN   	R0 1 ; return 

function #56 <?:1425,1427> (7 instructions, 28 bytes at 0000021126713AE0)
1 param, 3 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[1426]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[1426]	EQ       	1 R0 K2 ; if R0 == "true" then PC := 5
	3	[1426]	JMP      	5 ; PC := 5
	4	[1426]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 5
	5	[1426]	OP_LOADBOOL	R2 1 0 ; R2 := true
	6	[1426]	SETTABLE 	R1 K1 R2 ; R1["forceLocalRespawn"] := R2
	7	[1427]	RETURN   	R0 1 ; return 

function #57 <?:1430,1438> (22 instructions, 88 bytes at 000002112B7BA800)
3 params, 12 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[1431]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[1431]	GETTABLE 	R3 R3 R1 ; R3 := R3[R1]
	3	[1432]	GETUPVAL 	R4 U0 ; R4 := U0
	4	[1432]	GETTABLE 	R4 R4 R2 ; R4 := R4[R2]
	5	[1433]	TEST     	R3 0 ; if not R3 then PC := 19
	6	[1433]	JMP      	19 ; PC := 19
	7	[1433]	TEST     	R4 0 ; if not R4 then PC := 19
	8	[1433]	JMP      	19 ; PC := 19
	9	[1434]	GETUPVAL 	R5 U0 ; R5 := U0
	10	[1434]	SELF     	R5 R5 K0 ; R6 := R5; R5 := R5[0x20ff29f7]
	11	[1434]	GETGLOBAL	R7 K1 ; R7 := 0xae91e43b
	12	[1434]	MOVE     	R8 R0 ; R8 := R0
	13	[1434]	NEWTABLE 	R9 2 0 ; R9 := {}
	14	[1434]	MOVE     	R10 R3 ; R10 := R3
	15	[1434]	MOVE     	R11 R4 ; R11 := R4
	16	[1434]	SETLIST  	R9 2 1 ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 2
	17	[1434]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	18	[1434]	JMP      	22 ; PC := 22
	19	[1436]	GETGLOBAL	R5 K2 ; R5 := 0x3d106989
	20	[1436]	LOADK    	R6 K3 ; R6 := "Failed to register to AnchorMgr, invalid alignment"
	21	[1436]	CALL     	R5 2 1 ; R5(R6)
	22	[1438]	RETURN   	R0 1 ; return 

function #58 <?:1441,1443> (6 instructions, 24 bytes at 0000021122964160)
1 param, 5 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[1442]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1442]	SELF     	R1 R1 K0 ; R2 := R1; R1 := R1[0x7f19c438]
	3	[1442]	GETGLOBAL	R3 K1 ; R3 := 0xae91e43b
	4	[1442]	MOVE     	R4 R0 ; R4 := R0
	5	[1442]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	6	[1443]	RETURN   	R0 1 ; return 

function #59 <?:1446,1454> (22 instructions, 88 bytes at 0000021130E7DB90)
1 param, 9 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[1447]	LOADK    	R1 := 1.000000
	2	[1447]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[1447]	LEN      	R2 R2 ; R2 := # R2
	4	[1447]	LOADK    	R3 := 1.000000
	5	[1447]	FORPREP  	R1 15 ; R1 -= R3; PC := 15
	6	[1448]	GETTABLE 	R5 R0 K0 ; R5 := R0["DamageType"]
	7	[1448]	GETUPVAL 	R6 U0 ; R6 := U0
	8	[1448]	GETTABLE 	R6 R6 R4 ; R6 := R6[R4]
	9	[1448]	GETTABLE 	R6 R6 K0 ; R6 := R6["DamageType"]
	10	[1448]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 15
	11	[1448]	JMP      	15 ; PC := 15
	12	[1449]	GETUPVAL 	R5 U0 ; R5 := U0
	13	[1449]	SETTABLE 	R5 R4 R0 ; R5[R4] := R0
	14	[1450]	RETURN   	R0 1 ; return 
	15	[1447]	FORLOOP  	R1 6 ; R1 += R3; if R1 <= R2 then begin PC := 6; R4 := R1 end
	16	[1453]	GETGLOBAL	R5 K1 ; R5 := 0x33bdd652
	17	[1453]	GETTABLE 	R5 R5 K2 ; R5 := R5[0x23d5322f]
	18	[1453]	GETUPVAL 	R6 U0 ; R6 := U0
	19	[1453]	LOADK    	R7 := 1.000000
	20	[1453]	MOVE     	R8 R0 ; R8 := R0
	21	[1453]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	22	[1454]	RETURN   	R0 1 ; return 

function #60 <?:1456,1463> (19 instructions, 76 bytes at 0000021127ADD8A0)
1 param, 8 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[1457]	LOADK    	R1 := 1.000000
	2	[1457]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[1457]	LEN      	R2 R2 ; R2 := # R2
	4	[1457]	LOADK    	R3 := 1.000000
	5	[1457]	FORPREP  	R1 18 ; R1 -= R3; PC := 18
	6	[1458]	GETTABLE 	R5 R0 K0 ; R5 := R0["DamageType"]
	7	[1458]	GETUPVAL 	R6 U0 ; R6 := U0
	8	[1458]	GETTABLE 	R6 R6 R4 ; R6 := R6[R4]
	9	[1458]	GETTABLE 	R6 R6 K0 ; R6 := R6["DamageType"]
	10	[1458]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 18
	11	[1458]	JMP      	18 ; PC := 18
	12	[1459]	GETGLOBAL	R5 K1 ; R5 := 0x33bdd652
	13	[1459]	GETTABLE 	R5 R5 K2 ; R5 := R5[0x9c1f3b5a]
	14	[1459]	GETUPVAL 	R6 U0 ; R6 := U0
	15	[1459]	MOVE     	R7 R4 ; R7 := R4
	16	[1459]	CALL     	R5 3 1 ; R5(R6,R7)
	17	[1460]	RETURN   	R0 1 ; return 
	18	[1457]	FORLOOP  	R1 6 ; R1 += R3; if R1 <= R2 then begin PC := 6; R4 := R1 end
	19	[1463]	RETURN   	R0 1 ; return 

function #61 <?:1465,1520> (134 instructions, 536 bytes at 000002111D2F3310)
2 params, 13 slots, 6 upvalues, 0 locals, 32 constants, 0 functions
	1	[1466]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[1466]	MOVE     	R3 R0 ; R3 := R0
	3	[1466]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[1466]	TEST     	R2 1 ; if R2 then PC := 17
	5	[1466]	JMP      	17 ; PC := 17
	6	[1466]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	7	[1466]	GETUPVAL 	R3 U0 ; R3 := U0
	8	[1466]	CALL     	R2 2 2 ; R2 := R2(R3)
	9	[1466]	TEST     	R2 1 ; if R2 then PC := 17
	10	[1466]	JMP      	17 ; PC := 17
	11	[1466]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	12	[1466]	GETUPVAL 	R3 U1 ; R3 := U1
	13	[1466]	GETTABLE 	R3 R3 K1 ; R3 := R3["InventoryController"]
	14	[1466]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[1466]	TEST     	R2 0 ; if not R2 then PC := 19
	16	[1466]	JMP      	19 ; PC := 19
	17	[1467]	RETURN   	R0 1 ; return 
	18	[1467]	JMP      	39 ; PC := 39
	19	[1468]	GETUPVAL 	R2 U2 ; R2 := U2
	20	[1468]	GETTABLE 	R2 R2 K2 ; R2 := R2["hasCheckedForStatusEffects"]
	21	[1468]	TEST     	R2 0 ; if not R2 then PC := 39
	22	[1468]	JMP      	39 ; PC := 39
	23	[1469]	GETUPVAL 	R2 U2 ; R2 := U2
	24	[1469]	GETTABLE 	R2 R2 K3 ; R2 := R2["effectCheckRetry"]
	25	[1469]	LT       	0 K4 R2 ; if 0.000000 >= R2 then PC := 38
	26	[1469]	JMP      	38 ; PC := 38
	27	[1471]	GETUPVAL 	R2 U2 ; R2 := U2
	28	[1471]	GETUPVAL 	R3 U2 ; R3 := U2
	29	[1471]	GETTABLE 	R3 R3 K3 ; R3 := R3["effectCheckRetry"]
	30	[1471]	SUB      	R3 R3 R1 ; R3 := R3 - R1
	31	[1471]	SETTABLE 	R2 K3 R3 ; R2["effectCheckRetry"] := R3
	32	[1472]	GETUPVAL 	R2 U2 ; R2 := U2
	33	[1472]	GETTABLE 	R2 R2 K3 ; R2 := R2["effectCheckRetry"]
	34	[1472]	LT       	0 R2 K4 ; if R2 >= 0.000000 then PC := 38
	35	[1472]	JMP      	38 ; PC := 38
	36	[1473]	GETUPVAL 	R2 U2 ; R2 := U2
	37	[1473]	SETTABLE 	R2 K2 K5 ; R2["hasCheckedForStatusEffects"] := false
	38	[1476]	RETURN   	R0 1 ; return 
	39	[1479]	GETUPVAL 	R2 U2 ; R2 := U2
	40	[1479]	SETTABLE 	R2 K2 K6 ; R2["hasCheckedForStatusEffects"] := true
	41	[1481]	LOADNIL  	R2 R2 ; R2 := nil
	42	[1482]	GETUPVAL 	R3 U2 ; R3 := U2
	43	[1482]	GETTABLE 	R3 R3 K7 ; R3 := R3["effectOverride"]
	44	[1483]	EQ       	0 R3 K8 ; if R3 ~= nil then PC := 111
	45	[1483]	JMP      	111 ; PC := 111
	46	[1484]	LOADNIL  	R4 R4 ; R4 := nil
	47	[1485]	LOADK    	R5 := 1.000000
	48	[1485]	GETUPVAL 	R6 U1 ; R6 := U1
	49	[1485]	GETTABLE 	R6 R6 K1 ; R6 := R6["InventoryController"]
	50	[1485]	SELF     	R6 R6 K9 ; R7 := R6; R6 := R6[0x4056d183]
	51	[1485]	LOADK    	R8 := 0.000000
	52	[1485]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	53	[1485]	LOADK    	R7 := 1.000000
	54	[1485]	FORPREP  	R5 110 ; R5 -= R7; PC := 110
	55	[1486]	GETUPVAL 	R9 U1 ; R9 := U1
	56	[1486]	GETTABLE 	R9 R9 K1 ; R9 := R9["InventoryController"]
	57	[1486]	SELF     	R9 R9 K11 ; R10 := R9; R9 := R9[0xe6e56442]
	58	[1486]	SUB      	R11 R8 K12 ; R11 := R8 - 1.000000
	59	[1486]	LOADK    	R12 := 0.000000
	60	[1486]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	61	[1486]	MOVE     	R4 R9 ; R4 := R9
	62	[1487]	GETGLOBAL	R9 K0 ; R9 := 0x7b998233
	63	[1487]	MOVE     	R10 R4 ; R10 := R4
	64	[1487]	CALL     	R9 2 2 ; R9 := R9(R10)
	65	[1487]	TEST     	R9 1 ; if R9 then PC := 110
	66	[1487]	JMP      	110 ; PC := 110
	67	[1487]	GETUPVAL 	R9 U1 ; R9 := U1
	68	[1487]	GETTABLE 	R9 R9 K1 ; R9 := R9["InventoryController"]
	69	[1487]	SELF     	R9 R9 K13 ; R10 := R9; R9 := R9[0x3dc59189]
	70	[1487]	SUB      	R11 R8 K12 ; R11 := R8 - 1.000000
	71	[1487]	LOADK    	R12 := 0.000000
	72	[1487]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	73	[1487]	LT       	0 K4 R9 ; if 0.000000 >= R9 then PC := 110
	74	[1487]	JMP      	110 ; PC := 110
	75	[1488]	SELF     	R9 R4 K14 ; R10 := R4; R9 := R4[0xed4e0128]
	76	[1488]	CALL     	R9 2 2 ; R9 := R9(R10)
	77	[1488]	MOVE     	R3 R9 ; R3 := R9
	78	[1489]	EQ       	0 R3 K15 ; if R3 ~= "ShieldDebuffKey" then PC := 85
	79	[1489]	JMP      	85 ; PC := 85
	80	[1490]	NEWTABLE 	R9 0 2 ; R9 := {}
	81	[1490]	SETTABLE 	R9 K16 K17 ; R9["Icon"] := "<SHIELD_DEBUFF_KEY>"
	82	[1490]	SETTABLE 	R9 K18 K19 ; R9["Description"] := "/Lotus/Language/Items/ShieldDebuffKeyName"
	83	[1490]	MOVE     	R2 R9 ; R2 := R9
	84	[1490]	JMP      	105 ; PC := 105
	85	[1491]	EQ       	0 R3 K20 ; if R3 ~= "HealthDebuffKey" then PC := 92
	86	[1491]	JMP      	92 ; PC := 92
	87	[1492]	NEWTABLE 	R9 0 2 ; R9 := {}
	88	[1492]	SETTABLE 	R9 K16 K21 ; R9["Icon"] := "<HEALTH_DEBUFF_KEY>"
	89	[1492]	SETTABLE 	R9 K18 K22 ; R9["Description"] := "/Lotus/Language/Items/HealthDebuffKeyName"
	90	[1492]	MOVE     	R2 R9 ; R2 := R9
	91	[1492]	JMP      	105 ; PC := 105
	92	[1493]	EQ       	0 R3 K23 ; if R3 ~= "SpeedDebuffKey" then PC := 99
	93	[1493]	JMP      	99 ; PC := 99
	94	[1494]	NEWTABLE 	R9 0 2 ; R9 := {}
	95	[1494]	SETTABLE 	R9 K16 K24 ; R9["Icon"] := "<SPEED_DEBUFF_KEY>"
	96	[1494]	SETTABLE 	R9 K18 K25 ; R9["Description"] := "/Lotus/Language/Items/SpeedDebuffKeyName"
	97	[1494]	MOVE     	R2 R9 ; R2 := R9
	98	[1494]	JMP      	105 ; PC := 105
	99	[1495]	EQ       	0 R3 K26 ; if R3 ~= "DamageDebuffKey" then PC := 105
	100	[1495]	JMP      	105 ; PC := 105
	101	[1496]	NEWTABLE 	R9 0 2 ; R9 := {}
	102	[1496]	SETTABLE 	R9 K16 K27 ; R9["Icon"] := "<DAMAGE_DEBUFF_KEY>"
	103	[1496]	SETTABLE 	R9 K18 K28 ; R9["Description"] := "/Lotus/Language/Items/DamageDebuffKeyName"
	104	[1496]	MOVE     	R2 R9 ; R2 := R9
	105	[1498]	EQ       	1 R2 K8 ; if R2 == nil then PC := 110
	106	[1498]	JMP      	110 ; PC := 110
	107	[1499]	SETTABLE 	R2 K29 R3 ; R2["DamageType"] := R3
	108	[1500]	SETTABLE 	R2 K30 K31 ; R2["Time"] := ""
	109	[1501]	JMP      	111 ; PC := 111
	110	[1485]	FORLOOP  	R5 55 ; R5 += R7; if R5 <= R6 then begin PC := 55; R8 := R5 end
	111	[1507]	GETUPVAL 	R9 U3 ; R9 := U3
	112	[1507]	EQ       	1 R9 K8 ; if R9 == nil then PC := 128
	113	[1507]	JMP      	128 ; PC := 128
	114	[1508]	EQ       	1 R2 K8 ; if R2 == nil then PC := 121
	115	[1508]	JMP      	121 ; PC := 121
	116	[1508]	GETUPVAL 	R9 U3 ; R9 := U3
	117	[1508]	GETTABLE 	R9 R9 K29 ; R9 := R9["DamageType"]
	118	[1508]	GETTABLE 	R10 R2 K29 ; R10 := R2["DamageType"]
	119	[1508]	EQ       	1 R9 R10 ; if R9 == R10 then PC := 127
	120	[1508]	JMP      	127 ; PC := 127
	121	[1509]	GETUPVAL 	R9 U4 ; R9 := U4
	122	[1509]	GETUPVAL 	R10 U3 ; R10 := U3
	123	[1509]	CALL     	R9 2 1 ; R9(R10)
	124	[1510]	LOADNIL  	R9 R9 ; R9 := nil
	125	[1510]	SETUPVAL 	R9 U3 ; U3 := R9
	126	[1510]	JMP      	128 ; PC := 128
	127	[1512]	RETURN   	R0 1 ; return 
	128	[1516]	EQ       	1 R2 K8 ; if R2 == nil then PC := 134
	129	[1516]	JMP      	134 ; PC := 134
	130	[1517]	GETUPVAL 	R9 U5 ; R9 := U5
	131	[1517]	MOVE     	R10 R2 ; R10 := R2
	132	[1517]	CALL     	R9 2 1 ; R9(R10)
	133	[1518]	SETUPVAL 	R2 U3 ; U3 := R2
	134	[1520]	RETURN   	R0 1 ; return 

function #62 <?:1522,1535> (40 instructions, 160 bytes at 000002111D5C4C70)
3 params, 8 slots, 2 upvalues, 0 locals, 14 constants, 0 functions
	1	[1523]	GETGLOBAL	R3 K0 ; R3 := 0xb009bbc6
	2	[1523]	MOVE     	R4 R0 ; R4 := R0
	3	[1523]	CALL     	R3 2 2 ; R3 := R3(R4)
	4	[1525]	GETGLOBAL	R4 K1 ; R4 := 0x7b998233
	5	[1525]	MOVE     	R5 R3 ; R5 := R3
	6	[1525]	CALL     	R4 2 2 ; R4 := R4(R5)
	7	[1525]	TEST     	R4 1 ; if R4 then PC := 40
	8	[1525]	JMP      	40 ; PC := 40
	9	[1526]	NEWTABLE 	R4 0 5 ; R4 := {}
	10	[1526]	SETTABLE 	R4 K2 K3 ; R4["Icon"] := "<SHIELD_DEBUFF_KEY>"
	11	[1526]	GETGLOBAL	R5 K5 ; R5 := 0x64fb1586
	12	[1526]	SELF     	R6 R3 K6 ; R7 := R3; R6 := R3[0xd3a9d01f]
	13	[1526]	CALL     	R6 2 0 ; R6,... := R6(R7)
	14	[1526]	CALL     	R5 0 2 ; R5 := R5(R6,...)
	15	[1526]	SETTABLE 	R4 K4 R5 ; R4["Description"] := R5
	16	[1526]	SETTABLE 	R4 K7 R0 ; R4["DamageType"] := R0
	17	[1526]	GETGLOBAL	R5 K9 ; R5 := 0x03f57322
	18	[1526]	MOVE     	R6 R2 ; R6 := R2
	19	[1526]	CALL     	R5 2 2 ; R5 := R5(R6)
	20	[1526]	SETTABLE 	R4 K8 R5 ; R4["Timer"] := R5
	21	[1526]	GETGLOBAL	R5 K9 ; R5 := 0x03f57322
	22	[1526]	MOVE     	R6 R2 ; R6 := R2
	23	[1526]	CALL     	R5 2 2 ; R5 := R5(R6)
	24	[1526]	SETTABLE 	R4 K10 R5 ; R4["Time"] := R5
	25	[1527]	EQ       	0 R1 K11 ; if R1 ~= "true" then PC := 37
	26	[1527]	JMP      	37 ; PC := 37
	27	[1528]	GETTABLE 	R5 R4 K8 ; R5 := R4["Timer"]
	28	[1528]	EQ       	1 R5 K12 ; if R5 == nil then PC := 33
	29	[1528]	JMP      	33 ; PC := 33
	30	[1528]	GETTABLE 	R5 R4 K8 ; R5 := R4["Timer"]
	31	[1528]	LT       	0 K13 R5 ; if 0.000000 >= R5 then PC := 40
	32	[1528]	JMP      	40 ; PC := 40
	33	[1529]	GETUPVAL 	R5 U0 ; R5 := U0
	34	[1529]	MOVE     	R6 R4 ; R6 := R4
	35	[1529]	CALL     	R5 2 1 ; R5(R6)
	36	[1530]	JMP      	40 ; PC := 40
	37	[1532]	GETUPVAL 	R5 U1 ; R5 := U1
	38	[1532]	MOVE     	R6 R4 ; R6 := R4
	39	[1532]	CALL     	R5 2 1 ; R5(R6)
	40	[1535]	RETURN   	R0 1 ; return 

function #63 <?:1539,1542> (10 instructions, 40 bytes at 000002111F2AA570)
0 params, 3 slots, 2 upvalues, 0 locals, 3 constants, 0 functions
	1	[1540]	GETGLOBAL	R0 K0 ; R0 := 0x33bdd652
	2	[1540]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x9c1f3b5a]
	3	[1540]	GETUPVAL 	R1 U0 ; R1 := U0
	4	[1540]	LOADK    	R2 := 1.000000
	5	[1540]	CALL     	R0 3 1 ; R0(R1,R2)
	6	[1541]	GETUPVAL 	R0 U1 ; R0 := U1
	7	[1541]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x5f93ee4d]
	8	[1541]	OP_LOADBOOL	R2 0 0 ; R2 := false
	9	[1541]	CALL     	R0 3 1 ; R0(R1,R2)
	10	[1542]	RETURN   	R0 1 ; return 

function #64 <?:1544,1568> (98 instructions, 392 bytes at 000002112F65B730)
1 param, 9 slots, 5 upvalues, 0 locals, 26 constants, 0 functions
	1	[1546]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1546]	GETUPVAL 	R2 U1 ; R2 := U1
	3	[1546]	GETTABLE 	R2 R2 K1 ; R2 := R2[0xfc31b69e]
	4	[1546]	MOVE     	R3 R0 ; R3 := R0
	5	[1546]	LOADK    	R4 := -1.000000
	6	[1546]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	7	[1546]	SETTABLE 	R1 K0 R2 ; R1[1.000000] := R2
	8	[1547]	GETUPVAL 	R1 U0 ; R1 := U0
	9	[1547]	GETTABLE 	R1 R1 K0 ; R1 := R1[1.000000]
	10	[1547]	GETTABLE 	R1 R1 K2 ; R1 := R1["mInstalled"]
	11	[1547]	SETTABLE 	R1 K3 K0 ; R1["fake"] := 1.000000
	12	[1548]	GETUPVAL 	R1 U2 ; R1 := U2
	13	[1548]	NEWTABLE 	R2 0 0 ; R2 := {}
	14	[1548]	SETTABLE 	R1 K0 R2 ; R1[1.000000] := R2
	15	[1549]	GETUPVAL 	R1 U2 ; R1 := U2
	16	[1549]	GETTABLE 	R1 R1 K0 ; R1 := R1[1.000000]
	17	[1549]	SETTABLE 	R1 K4 K0 ; R1["mCardIndex"] := 1.000000
	18	[1550]	GETUPVAL 	R1 U2 ; R1 := U2
	19	[1550]	GETTABLE 	R1 R1 K0 ; R1 := R1[1.000000]
	20	[1550]	SETTABLE 	R1 K5 K6 ; R1["mClipName"] := "Card.Card"
	21	[1551]	GETUPVAL 	R1 U2 ; R1 := U2
	22	[1551]	GETTABLE 	R1 R1 K0 ; R1 := R1[1.000000]
	23	[1551]	SETTABLE 	R1 K2 K0 ; R1["mInstalled"] := 1.000000
	24	[1552]	GETUPVAL 	R1 U2 ; R1 := U2
	25	[1552]	GETTABLE 	R1 R1 K0 ; R1 := R1[1.000000]
	26	[1552]	SETTABLE 	R1 K7 K9 ; R1["mPolarity"] := 0.000000
	27	[1554]	GETUPVAL 	R1 U1 ; R1 := U1
	28	[1554]	GETTABLE 	R1 R1 K10 ; R1 := R1[0xcbcefa26]
	29	[1554]	GETUPVAL 	R2 U2 ; R2 := U2
	30	[1554]	GETTABLE 	R2 R2 K0 ; R2 := R2[1.000000]
	31	[1554]	CALL     	R1 2 1 ; R1(R2)
	32	[1555]	GETUPVAL 	R1 U1 ; R1 := U1
	33	[1555]	GETTABLE 	R1 R1 K11 ; R1 := R1[0x7b21de70]
	34	[1555]	GETUPVAL 	R2 U2 ; R2 := U2
	35	[1555]	GETTABLE 	R2 R2 K0 ; R2 := R2[1.000000]
	36	[1555]	GETUPVAL 	R3 U2 ; R3 := U2
	37	[1555]	GETTABLE 	R3 R3 K0 ; R3 := R3[1.000000]
	38	[1555]	GETTABLE 	R3 R3 K5 ; R3 := R3["mClipName"]
	39	[1555]	LOADK    	R4 K12 ; R4 := ".Card"
	40	[1555]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	41	[1555]	OP_LOADBOOL	R4 0 0 ; R4 := false
	42	[1555]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	43	[1556]	GETUPVAL 	R1 U1 ; R1 := U1
	44	[1556]	GETTABLE 	R1 R1 K13 ; R1 := R1[0x37970f97]
	45	[1556]	GETUPVAL 	R2 U2 ; R2 := U2
	46	[1556]	GETTABLE 	R2 R2 K0 ; R2 := R2[1.000000]
	47	[1556]	GETUPVAL 	R3 U2 ; R3 := U2
	48	[1556]	GETTABLE 	R3 R3 K0 ; R3 := R3[1.000000]
	49	[1556]	GETTABLE 	R3 R3 K5 ; R3 := R3["mClipName"]
	50	[1556]	LOADK    	R4 K12 ; R4 := ".Card"
	51	[1556]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	52	[1556]	OP_LOADBOOL	R4 1 0 ; R4 := true
	53	[1556]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	54	[1558]	GETGLOBAL	R1 K14 ; R1 := 0xae91e43b
	55	[1558]	SELF     	R1 R1 K15 ; R2 := R1; R1 := R1[0xf64b7262]
	56	[1558]	GETUPVAL 	R3 U2 ; R3 := U2
	57	[1558]	GETTABLE 	R3 R3 K0 ; R3 := R3[1.000000]
	58	[1558]	GETTABLE 	R3 R3 K5 ; R3 := R3["mClipName"]
	59	[1558]	LOADK    	R4 K16 ; R4 := "Card.BottomFrame.Equipped"
	60	[1558]	LOADK    	R5 := 10.000000
	61	[1558]	LOADK    	R6 := 0.000000
	62	[1558]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	63	[1560]	GETUPVAL 	R1 U3 ; R1 := U3
	64	[1560]	GETTABLE 	R1 R1 K17 ; R1 := R1[0x659d451f]
	65	[1560]	GETGLOBAL	R2 K18 ; R2 := 0x2e797504
	66	[1560]	CALL     	R1 2 1 ; R1(R2)
	67	[1562]	GETUPVAL 	R1 U2 ; R1 := U2
	68	[1562]	GETTABLE 	R1 R1 K0 ; R1 := R1[1.000000]
	69	[1562]	GETTABLE 	R1 R1 K5 ; R1 := R1["mClipName"]
	70	[1563]	GETGLOBAL	R2 K14 ; R2 := 0xae91e43b
	71	[1563]	SELF     	R2 R2 K19 ; R3 := R2; R2 := R2[0x67bc869f]
	72	[1563]	MOVE     	R4 R1 ; R4 := R1
	73	[1563]	LOADK    	R5 := 10.000000
	74	[1563]	LOADK    	R6 := 0.000000
	75	[1563]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	76	[1564]	GETGLOBAL	R2 K20 ; R2 := 0x25312c9b
	77	[1564]	GETGLOBAL	R3 K14 ; R3 := 0xae91e43b
	78	[1564]	MOVE     	R4 R1 ; R4 := R1
	79	[1564]	LOADK    	R5 := 8.000000
	80	[1564]	NEWTABLE 	R6 1 0 ; R6 := {}
	81	[1564]	LOADK    	R7 := 10.000000
	82	[1564]	SETLIST  	R6 1 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
	83	[1564]	NEWTABLE 	R7 1 0 ; R7 := {}
	84	[1564]	LOADK    	R8 := 100.000000
	85	[1564]	SETLIST  	R7 1 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
	86	[1564]	LOADK    	R8 K22 ; R8 := 0.200000
	87	[1564]	CALL     	R2 7 1 ; R2(R3,R4,R5,R6,R7,R8)
	88	[1566]	GETGLOBAL	R2 K14 ; R2 := 0xae91e43b
	89	[1566]	SELF     	R2 R2 K23 ; R3 := R2; R2 := R2[0xaade900e]
	90	[1566]	LOADK    	R4 K24 ; R4 := "Card"
	91	[1566]	LOADK    	R5 := 11.000000
	92	[1566]	OP_LOADBOOL	R6 1 0 ; R6 := true
	93	[1566]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	94	[1567]	GETUPVAL 	R2 U4 ; R2 := U4
	95	[1567]	SELF     	R2 R2 K25 ; R3 := R2; R2 := R2[0x5f93ee4d]
	96	[1567]	OP_LOADBOOL	R4 1 0 ; R4 := true
	97	[1567]	CALL     	R2 3 1 ; R2(R3,R4)
	98	[1568]	RETURN   	R0 1 ; return 

function #65 <?:1570,1578> (21 instructions, 84 bytes at 000002112F6276D0)
1 param, 7 slots, 1 upvalue, 0 locals, 9 constants, 0 functions
	1	[1571]	GETGLOBAL	R1 K0 ; R1 := 0x6c97a788
	2	[1571]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x1aba4d9e]
	3	[1571]	CALL     	R1 1 2 ; R1 := R1()
	4	[1572]	GETTABLE 	R2 R0 K3 ; R2 := R0["mItem"]
	5	[1572]	SETTABLE 	R1 K2 R2 ; R1["mItemType"] := R2
	6	[1573]	GETTABLE 	R2 R0 K5 ; R2 := R0["mFingerprint"]
	7	[1573]	SETTABLE 	R1 K4 R2 ; R1["mUpgradeFingerprint"] := R2
	8	[1574]	GETUPVAL 	R2 U0 ; R2 := U0
	9	[1574]	EQ       	0 R2 K6 ; if R2 ~= nil then PC := 13
	10	[1574]	JMP      	13 ; PC := 13
	11	[1575]	NEWTABLE 	R2 0 0 ; R2 := {}
	12	[1575]	SETUPVAL 	R2 U0 ; U0 := R2
	13	[1577]	GETGLOBAL	R2 K7 ; R2 := 0x33bdd652
	14	[1577]	GETTABLE 	R2 R2 K8 ; R2 := R2[0x23d5322f]
	15	[1577]	GETUPVAL 	R3 U0 ; R3 := U0
	16	[1577]	NEWTABLE 	R4 2 0 ; R4 := {}
	17	[1577]	MOVE     	R5 R1 ; R5 := R1
	18	[1577]	LOADK    	R6 := -1.000000
	19	[1577]	SETLIST  	R4 2 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
	20	[1577]	CALL     	R2 3 1 ; R2(R3,R4)
	21	[1578]	RETURN   	R0 1 ; return 

function #66 <?:1580,1587> (13 instructions, 52 bytes at 000002111BB94A80)
2 params, 5 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[1581]	EQ       	0 R1 K0 ; if R1 ~= nil then PC := 4
	2	[1581]	JMP      	4 ; PC := 4
	3	[1582]	LOADK    	R1 K1 ; R1 := ""
	4	[1585]	NEWTABLE 	R2 0 2 ; R2 := {}
	5	[1585]	GETGLOBAL	R3 K3 ; R3 := 0x7ed0a956
	6	[1585]	MOVE     	R4 R0 ; R4 := R0
	7	[1585]	CALL     	R3 2 2 ; R3 := R3(R4)
	8	[1585]	SETTABLE 	R2 K2 R3 ; R2["mItem"] := R3
	9	[1585]	SETTABLE 	R2 K4 R1 ; R2["mFingerprint"] := R1
	10	[1586]	GETUPVAL 	R3 U0 ; R3 := U0
	11	[1586]	MOVE     	R4 R2 ; R4 := R2
	12	[1586]	CALL     	R3 2 1 ; R3(R4)
	13	[1587]	RETURN   	R0 1 ; return 

function #67 <?:1589,1622> (97 instructions, 388 bytes at 000002112A5CFCF0)
1 param, 12 slots, 6 upvalues, 0 locals, 19 constants, 0 functions
	1	[1590]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1590]	TEST     	R1 0 ; if not R1 then PC := 8
	3	[1590]	JMP      	8 ; PC := 8
	4	[1590]	GETGLOBAL	R1 K0 ; R1 := 0x0032441c
	5	[1590]	GETTABLE 	R1 R1 K1 ; R1 := R1["StalkerMode"]
	6	[1590]	TEST     	R1 0 ; if not R1 then PC := 9
	7	[1590]	JMP      	9 ; PC := 9
	8	[1591]	RETURN   	R0 1 ; return 
	9	[1594]	GETUPVAL 	R1 U0 ; R1 := U0
	10	[1594]	LEN      	R1 R1 ; R1 := # R1
	11	[1594]	EQ       	0 R1 K2 ; if R1 ~= 0.000000 then PC := 22
	12	[1594]	JMP      	22 ; PC := 22
	13	[1595]	LOADNIL  	R1 R1 ; R1 := nil
	14	[1595]	SETUPVAL 	R1 U0 ; U0 := R1
	15	[1596]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	16	[1596]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xaade900e]
	17	[1596]	LOADK    	R3 K5 ; R3 := "Card"
	18	[1596]	LOADK    	R4 := 11.000000
	19	[1596]	OP_LOADBOOL	R5 1 0 ; R5 := true
	20	[1596]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	21	[1597]	RETURN   	R0 1 ; return 
	22	[1601]	GETGLOBAL	R1 K6 ; R1 := 0x9ba7909f
	23	[1601]	SELF     	R1 R1 K7 ; R2 := R1; R1 := R1[0x5374b92e]
	24	[1601]	GETGLOBAL	R3 K0 ; R3 := 0x0032441c
	25	[1601]	GETTABLE 	R3 R3 K8 ; R3 := R3["UIMovie_TransmissionMovie"]
	26	[1601]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	27	[1601]	TEST     	R1 0 ; if not R1 then PC := 34
	28	[1601]	JMP      	34 ; PC := 34
	29	[1602]	GETUPVAL 	R1 U1 ; R1 := U1
	30	[1602]	GETTABLE 	R1 R1 K9 ; R1 := R1["mTransOnRightSide"]
	31	[1602]	TEST     	R1 0 ; if not R1 then PC := 34
	32	[1602]	JMP      	34 ; PC := 34
	33	[1603]	RETURN   	R0 1 ; return 
	34	[1607]	LOADK    	R1 := 1.000000
	35	[1608]	GETUPVAL 	R2 U0 ; R2 := U0
	36	[1608]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	37	[1608]	GETTABLE 	R2 R2 K10 ; R2 := R2[2.000000]
	38	[1608]	LT       	0 R2 K2 ; if R2 >= 0.000000 then PC := 49
	39	[1608]	JMP      	49 ; PC := 49
	40	[1609]	GETUPVAL 	R2 U0 ; R2 := U0
	41	[1609]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	42	[1609]	SETTABLE 	R2 K10 K11 ; R2[2.000000] := 3.000000
	43	[1610]	GETUPVAL 	R2 U2 ; R2 := U2
	44	[1610]	GETUPVAL 	R3 U0 ; R3 := U0
	45	[1610]	GETTABLE 	R3 R3 R1 ; R3 := R3[R1]
	46	[1610]	GETTABLE 	R3 R3 K12 ; R3 := R3[1.000000]
	47	[1610]	CALL     	R2 2 1 ; R2(R3)
	48	[1610]	JMP      	97 ; PC := 97
	49	[1611]	GETUPVAL 	R2 U0 ; R2 := U0
	50	[1611]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	51	[1611]	GETTABLE 	R2 R2 K10 ; R2 := R2[2.000000]
	52	[1611]	LT       	0 K2 R2 ; if 0.000000 >= R2 then PC := 97
	53	[1611]	JMP      	97 ; PC := 97
	54	[1612]	GETUPVAL 	R2 U0 ; R2 := U0
	55	[1612]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	56	[1612]	GETUPVAL 	R3 U0 ; R3 := U0
	57	[1612]	GETTABLE 	R3 R3 R1 ; R3 := R3[R1]
	58	[1612]	GETTABLE 	R3 R3 K10 ; R3 := R3[2.000000]
	59	[1612]	SUB      	R3 R3 R0 ; R3 := R3 - R0
	60	[1612]	SETTABLE 	R2 K10 R3 ; R2[2.000000] := R3
	61	[1613]	GETUPVAL 	R2 U0 ; R2 := U0
	62	[1613]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	63	[1613]	GETTABLE 	R2 R2 K10 ; R2 := R2[2.000000]
	64	[1613]	LT       	0 R2 K2 ; if R2 >= 0.000000 then PC := 97
	65	[1613]	JMP      	97 ; PC := 97
	66	[1615]	GETUPVAL 	R2 U0 ; R2 := U0
	67	[1615]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	68	[1615]	SETTABLE 	R2 K10 K2 ; R2[2.000000] := 0.000000
	69	[1616]	GETUPVAL 	R2 U3 ; R2 := U3
	70	[1616]	GETTABLE 	R2 R2 K12 ; R2 := R2[1.000000]
	71	[1616]	GETTABLE 	R2 R2 K13 ; R2 := R2["mClipName"]
	72	[1617]	GETUPVAL 	R3 U4 ; R3 := U4
	73	[1617]	GETTABLE 	R3 R3 K14 ; R3 := R3[0x37970f97]
	74	[1617]	GETUPVAL 	R4 U3 ; R4 := U3
	75	[1617]	GETTABLE 	R4 R4 K12 ; R4 := R4[1.000000]
	76	[1617]	GETUPVAL 	R5 U3 ; R5 := U3
	77	[1617]	GETTABLE 	R5 R5 K12 ; R5 := R5[1.000000]
	78	[1617]	GETTABLE 	R5 R5 K13 ; R5 := R5["mClipName"]
	79	[1617]	LOADK    	R6 K15 ; R6 := ".Card"
	80	[1617]	CONCAT   	R5 R5 R6 ; R5 := R5 .. R6
	81	[1617]	OP_LOADBOOL	R6 1 0 ; R6 := true
	82	[1617]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	83	[1618]	GETGLOBAL	R3 K16 ; R3 := 0x25312c9b
	84	[1618]	GETGLOBAL	R4 K3 ; R4 := 0xae91e43b
	85	[1618]	MOVE     	R5 R2 ; R5 := R2
	86	[1618]	LOADK    	R6 := 8.000000
	87	[1618]	NEWTABLE 	R7 1 0 ; R7 := {}
	88	[1618]	LOADK    	R8 := 10.000000
	89	[1618]	SETLIST  	R7 1 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
	90	[1618]	NEWTABLE 	R8 1 0 ; R8 := {}
	91	[1618]	LOADK    	R9 := 0.000000
	92	[1618]	SETLIST  	R8 1 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
	93	[1618]	LOADK    	R9 K18 ; R9 := 0.200000
	94	[1618]	LOADK    	R10 := 0.000000
	95	[1618]	GETUPVAL 	R11 U5 ; R11 := U5
	96	[1618]	CALL     	R3 9 1 ; R3(R4,R5,R6,R7,R8,R9,R10,R11)
	97	[1622]	RETURN   	R0 1 ; return 

function #68 <?:1624,1630> (24 instructions, 96 bytes at 000002111E2103E0)
2 params, 10 slots, 2 upvalues, 0 locals, 8 constants, 0 functions
	1	[1625]	GETGLOBAL	R2 K0 ; R2 := _T
	2	[1625]	GETTABLE 	R2 R2 K1 ; R2 := R2["MinimalHud"]
	3	[1625]	TEST     	R2 1 ; if R2 then PC := 24
	4	[1625]	JMP      	24 ; PC := 24
	5	[1625]	GETUPVAL 	R2 U0 ; R2 := U0
	6	[1625]	GETTABLE 	R2 R2 K2 ; R2 := R2["IsAlternateHud"]
	7	[1625]	TEST     	R2 1 ; if R2 then PC := 24
	8	[1625]	JMP      	24 ; PC := 24
	9	[1626]	GETGLOBAL	R2 K3 ; R2 := 0xb009bbc6
	10	[1626]	MOVE     	R3 R0 ; R3 := R0
	11	[1626]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[1627]	GETUPVAL 	R3 U1 ; R3 := U1
	13	[1627]	GETTABLE 	R3 R3 K4 ; R3 := R3[0xb5be5d4a]
	14	[1627]	GETGLOBAL	R4 K5 ; R4 := 0xae91e43b
	15	[1627]	LOADK    	R5 K6 ; R5 := "Notification"
	16	[1627]	CALL     	R3 3 3 ; R3,R4 := R3(R4,R5)
	17	[1628]	GETUPVAL 	R5 U1 ; R5 := U1
	18	[1628]	GETTABLE 	R5 R5 K7 ; R5 := R5[0x5a22d251]
	19	[1628]	GETGLOBAL	R6 K5 ; R6 := 0xae91e43b
	20	[1628]	MOVE     	R7 R2 ; R7 := R2
	21	[1628]	MOVE     	R8 R3 ; R8 := R3
	22	[1628]	ADD      	R9 R4 R1 ; R9 := R4 + R1
	23	[1628]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	24	[1630]	RETURN   	R0 1 ; return 

function #69 <?:1632,1648> (37 instructions, 148 bytes at 000002112948F700)
1 param, 11 slots, 2 upvalues, 0 locals, 9 constants, 1 function
	1	[1633]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[1633]	GETTABLE 	R1 R1 K1 ; R1 := R1["MinimalHud"]
	3	[1633]	TEST     	R1 1 ; if R1 then PC := 9
	4	[1633]	JMP      	9 ; PC := 9
	5	[1633]	GETUPVAL 	R1 U0 ; R1 := U0
	6	[1633]	GETTABLE 	R1 R1 K2 ; R1 := R1["IsAlternateHud"]
	7	[1633]	TEST     	R1 0 ; if not R1 then PC := 14
	8	[1633]	JMP      	14 ; PC := 14
	9	[1634]	GETUPVAL 	R1 U1 ; R1 := U1
	10	[1634]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xf707943e]
	11	[1634]	OP_LOADBOOL	R3 0 0 ; R3 := false
	12	[1634]	CALL     	R1 3 1 ; R1(R2,R3)
	13	[1634]	JMP      	37 ; PC := 37
	14	[1636]	LOADK    	R1 := 105.000000
	15	[1637]	GETGLOBAL	R2 K4 ; R2 := 0x25312c9b
	16	[1637]	GETGLOBAL	R3 K5 ; R3 := 0xae91e43b
	17	[1637]	LOADK    	R4 K6 ; R4 := "Notification"
	18	[1637]	LOADK    	R5 := 1.000000
	19	[1637]	NEWTABLE 	R6 3 0 ; R6 := {}
	20	[1637]	LOADK    	R7 := 10.000000
	21	[1637]	LOADK    	R8 := 5.000000
	22	[1637]	LOADK    	R9 := 6.000000
	23	[1637]	SETLIST  	R6 3 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 3
	24	[1637]	NEWTABLE 	R7 3 0 ; R7 := {}
	25	[1637]	LOADK    	R8 := 100.000000
	26	[1637]	LOADK    	R9 := 100.000000
	27	[1637]	LOADK    	R10 := 100.000000
	28	[1637]	SETLIST  	R7 3 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 3
	29	[1637]	LOADK    	R8 K8 ; R8 := 0.350000
	30	[1637]	LOADK    	R9 := 0.000000
	31	[1646]	CLOSURE  	R10 0 ; R10 := closure(Function #1)
	32	[1646]	MOVE     	R0 R1 ; R0 := R1
	33	[1646]	MOVE     	R0 R0 ; R0 := R0
	34	[1646]	GETUPVAL 	R0 U1 ; R0 := U1
	35	[1637]	CALL     	R2 9 1 ; R2(R3,R4,R5,R6,R7,R8,R9,R10)
	36	[1646]	CLOSE    	R1 ; SAVE R1,...
	37	[1648]	RETURN   	R0 1 ; return 

function #70 <?:1651,1653> (20 instructions, 80 bytes at 000002111D2E1B90)
0 params, 9 slots, 1 upvalue, 0 locals, 7 constants, 0 functions
	1	[1652]	GETGLOBAL	R0 K0 ; R0 := 0x25312c9b
	2	[1652]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	3	[1652]	LOADK    	R2 K2 ; R2 := "AbilityPanel.AbilityMessage"
	4	[1652]	LOADK    	R3 := 8.000000
	5	[1652]	NEWTABLE 	R4 2 0 ; R4 := {}
	6	[1652]	LOADK    	R5 := 10.000000
	7	[1652]	LOADK    	R6 := 0.000000
	8	[1652]	SETLIST  	R4 2 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
	9	[1652]	NEWTABLE 	R5 2 0 ; R5 := {}
	10	[1652]	LOADK    	R6 := 0.000000
	11	[1652]	GETUPVAL 	R7 U0 ; R7 := U0
	12	[1652]	GETTABLE 	R7 R7 K4 ; R7 := R7["newX"]
	13	[1652]	GETUPVAL 	R8 U0 ; R8 := U0
	14	[1652]	GETTABLE 	R8 R8 K5 ; R8 := R8["offsetX"]
	15	[1652]	SUB      	R7 R7 R8 ; R7 := R7 - R8
	16	[1652]	SETLIST  	R5 2 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 2
	17	[1652]	LOADK    	R6 K6 ; R6 := 0.300000
	18	[1652]	LOADK    	R7 := 2.000000
	19	[1652]	CALL     	R0 8 1 ; R0(R1,R2,R3,R4,R5,R6,R7)
	20	[1653]	RETURN   	R0 1 ; return 

function #71 <?:1656,1661> (36 instructions, 144 bytes at 000002112A1FB720)
3 params, 12 slots, 2 upvalues, 0 locals, 10 constants, 0 functions
	1	[1657]	GETGLOBAL	R3 K0 ; R3 := 0xae91e43b
	2	[1657]	SELF     	R3 R3 K1 ; R4 := R3; R3 := R3[0x20b98db3]
	3	[1657]	LOADK    	R5 K2 ; R5 := "AbilityPanel.AbilityMessage.Label.text"
	4	[1657]	MOVE     	R6 R2 ; R6 := R2
	5	[1657]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	6	[1658]	GETUPVAL 	R3 U0 ; R3 := U0
	7	[1658]	SELF     	R3 R3 K3 ; R4 := R3; R3 := R3[0x3488eaf1]
	8	[1658]	CALL     	R3 2 1 ; R3(R4)
	9	[1659]	GETGLOBAL	R3 K0 ; R3 := 0xae91e43b
	10	[1659]	SELF     	R3 R3 K4 ; R4 := R3; R3 := R3[0x67bc869f]
	11	[1659]	LOADK    	R5 K5 ; R5 := "AbilityPanel.AbilityMessage"
	12	[1659]	LOADK    	R6 := 0.000000
	13	[1659]	GETUPVAL 	R7 U0 ; R7 := U0
	14	[1659]	GETTABLE 	R7 R7 K6 ; R7 := R7["newX"]
	15	[1659]	GETUPVAL 	R8 U0 ; R8 := U0
	16	[1659]	GETTABLE 	R8 R8 K7 ; R8 := R8["offsetX"]
	17	[1659]	ADD      	R7 R7 R8 ; R7 := R7 + R8
	18	[1659]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	19	[1660]	GETGLOBAL	R3 K8 ; R3 := 0x25312c9b
	20	[1660]	GETGLOBAL	R4 K0 ; R4 := 0xae91e43b
	21	[1660]	LOADK    	R5 K5 ; R5 := "AbilityPanel.AbilityMessage"
	22	[1660]	LOADK    	R6 := 8.000000
	23	[1660]	NEWTABLE 	R7 2 0 ; R7 := {}
	24	[1660]	LOADK    	R8 := 10.000000
	25	[1660]	LOADK    	R9 := 0.000000
	26	[1660]	SETLIST  	R7 2 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 2
	27	[1660]	NEWTABLE 	R8 2 0 ; R8 := {}
	28	[1660]	LOADK    	R9 := 100.000000
	29	[1660]	GETUPVAL 	R10 U0 ; R10 := U0
	30	[1660]	GETTABLE 	R10 R10 K6 ; R10 := R10["newX"]
	31	[1660]	SETLIST  	R8 2 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 2
	32	[1660]	LOADK    	R9 := 0.250000
	33	[1660]	LOADK    	R10 := 0.000000
	34	[1660]	GETUPVAL 	R11 U1 ; R11 := U1
	35	[1660]	CALL     	R3 9 1 ; R3(R4,R5,R6,R7,R8,R9,R10,R11)
	36	[1661]	RETURN   	R0 1 ; return 

function #72 <?:1664,1673> (33 instructions, 132 bytes at 000002112264E6C0)
2 params, 9 slots, 1 upvalue, 0 locals, 12 constants, 0 functions
	1	[1665]	EQ       	0 R1 K0 ; if R1 ~= nil then PC := 5
	2	[1665]	JMP      	5 ; PC := 5
	3	[1666]	OP_LOADBOOL	R2 0 0 ; R2 := false
	4	[1666]	RETURN   	R2 2 ; return R2 
	5	[1668]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	6	[1668]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0x42b04007]
	7	[1668]	MOVE     	R4 R0 ; R4 := R0
	8	[1668]	OP_LOADBOOL	R5 0 0 ; R5 := false
	9	[1668]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	10	[1669]	GETGLOBAL	R3 K1 ; R3 := 0xae91e43b
	11	[1669]	SELF     	R3 R3 K2 ; R4 := R3; R3 := R3[0x42b04007]
	12	[1669]	LOADK    	R5 K3 ; R5 := "/Lotus/Language/Game/AbilitySelected"
	13	[1669]	OP_LOADBOOL	R6 0 0 ; R6 := false
	14	[1669]	NEWTABLE 	R7 0 1 ; R7 := {}
	15	[1669]	SETTABLE 	R7 K4 R2 ; R7["ABILITY_NAME"] := R2
	16	[1669]	CALL     	R3 5 2 ; R3 := R3(R4,R5,R6,R7)
	17	[1670]	GETUPVAL 	R4 U0 ; R4 := U0
	18	[1670]	LOADK    	R5 K5 ; R5 := 16777215.000000
	19	[1670]	LOADK    	R6 K5 ; R6 := 16777215.000000
	20	[1670]	MOVE     	R7 R3 ; R7 := R3
	21	[1670]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	22	[1671]	GETGLOBAL	R4 K6 ; R4 := 0x38f10e85
	23	[1671]	GETGLOBAL	R5 K1 ; R5 := 0xae91e43b
	24	[1671]	GETGLOBAL	R6 K7 ; R6 := 0x7f5022cf
	25	[1671]	GETTABLE 	R6 R6 K8 ; R6 := R6[0xe8072ded]
	26	[1671]	LOADK    	R7 K9 ; R7 := "AbilityPanel.Power%i.Icon.gotoAndPlay"
	27	[1671]	ADD      	R8 R1 K10 ; R8 := R1 + 1.000000
	28	[1671]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	29	[1671]	LOADK    	R7 K11 ; R7 := "Play"
	30	[1671]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	31	[1672]	OP_LOADBOOL	R4 1 0 ; R4 := true
	32	[1672]	RETURN   	R4 2 ; return R4 
	33	[1673]	RETURN   	R0 1 ; return 

function #73 <?:1675,1677> (9 instructions, 36 bytes at 0000021117576D60)
0 params, 5 slots, 2 upvalues, 0 locals, 3 constants, 0 functions
	1	[1676]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1676]	GETUPVAL 	R1 U1 ; R1 := U1
	3	[1676]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xbd2e96ea]
	4	[1676]	LOADK    	R3 := 0.250000
	5	[1676]	GETUPVAL 	R4 U0 ; R4 := U0
	6	[1676]	GETTABLE 	R4 R4 K2 ; R4 := R4["Hide"]
	7	[1676]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	8	[1676]	SETTABLE 	R0 K0 R1 ; R0["timerId"] := R1
	9	[1677]	RETURN   	R0 1 ; return 

function #74 <?:1680,1705> (75 instructions, 300 bytes at 000002117FC0E560)
2 params, 12 slots, 7 upvalues, 0 locals, 27 constants, 0 functions
	1	[1681]	EQ       	0 R1 K0 ; if R1 ~= nil then PC := 5
	2	[1681]	JMP      	5 ; PC := 5
	3	[1682]	OP_LOADBOOL	R2 0 0 ; R2 := false
	4	[1682]	RETURN   	R2 2 ; return R2 
	5	[1684]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	6	[1684]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0x42b04007]
	7	[1684]	MOVE     	R4 R0 ; R4 := R0
	8	[1684]	OP_LOADBOOL	R5 0 0 ; R5 := false
	9	[1684]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	10	[1685]	GETUPVAL 	R3 U0 ; R3 := U0
	11	[1685]	LOADK    	R4 K3 ; R4 := 16777215.000000
	12	[1685]	LOADK    	R5 K4 ; R5 := 366327.000000
	13	[1685]	MOVE     	R6 R2 ; R6 := R2
	14	[1685]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	15	[1686]	GETGLOBAL	R3 K5 ; R3 := 0x38f10e85
	16	[1686]	GETGLOBAL	R4 K1 ; R4 := 0xae91e43b
	17	[1686]	GETGLOBAL	R5 K6 ; R5 := 0x7f5022cf
	18	[1686]	GETTABLE 	R5 R5 K7 ; R5 := R5[0xe8072ded]
	19	[1686]	LOADK    	R6 K8 ; R6 := "AbilityPanel.Power%i.Icon.gotoAndPlay"
	20	[1686]	ADD      	R7 R1 K9 ; R7 := R1 + 1.000000
	21	[1686]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	22	[1686]	LOADK    	R6 K10 ; R6 := "Play"
	23	[1686]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	24	[1688]	GETGLOBAL	R3 K11 ; R3 := 0xe72d2edb
	25	[1688]	EQ       	0 R3 K13 ; if R3 ~= 3.000000 then PC := 53
	26	[1688]	JMP      	53 ; PC := 53
	27	[1690]	GETGLOBAL	R3 K14 ; R3 := 0x7b998233
	28	[1690]	GETGLOBAL	R4 K15 ; R4 := 0xcf7f594a
	29	[1690]	CALL     	R3 2 2 ; R3 := R3(R4)
	30	[1690]	TEST     	R3 1 ; if R3 then PC := 53
	31	[1690]	JMP      	53 ; PC := 53
	32	[1691]	GETUPVAL 	R3 U1 ; R3 := U1
	33	[1691]	GETTABLE 	R3 R3 K16 ; R3 := R3[0xb5be5d4a]
	34	[1691]	GETGLOBAL	R4 K1 ; R4 := 0xae91e43b
	35	[1691]	LOADK    	R5 K17 ; R5 := "StancePanel.StanceComponent.Stance"
	36	[1691]	ADD      	R6 R1 K9 ; R6 := R1 + 1.000000
	37	[1691]	LOADK    	R7 K18 ; R7 := ".Icon"
	38	[1691]	CONCAT   	R5 R5 R7 ; R5 := R5 .. R6 .. R7
	39	[1691]	OP_LOADBOOL	R6 0 0 ; R6 := false
	40	[1691]	CALL     	R3 4 3 ; R3,R4 := R3(R4,R5,R6)
	41	[1692]	GETUPVAL 	R5 U2 ; R5 := U2
	42	[1692]	ADD      	R6 R1 K9 ; R6 := R1 + 1.000000
	43	[1692]	GETUPVAL 	R7 U1 ; R7 := U1
	44	[1692]	GETTABLE 	R7 R7 K19 ; R7 := R7[0x5a22d251]
	45	[1692]	GETGLOBAL	R8 K1 ; R8 := 0xae91e43b
	46	[1692]	GETGLOBAL	R9 K15 ; R9 := 0xcf7f594a
	47	[1692]	MOVE     	R10 R3 ; R10 := R3
	48	[1692]	MOVE     	R11 R4 ; R11 := R4
	49	[1692]	CALL     	R7 5 2 ; R7 := R7(R8,R9,R10,R11)
	50	[1692]	SETTABLE 	R5 R6 R7 ; R5[R6] := R7
	51	[1693]	GETUPVAL 	R5 U3 ; R5 := U3
	52	[1693]	SETTABLE 	R5 K20 K21 ; R5["mAbilityFxPlayed"] := true
	53	[1697]	GETUPVAL 	R5 U4 ; R5 := U4
	54	[1697]	TEST     	R5 0 ; if not R5 then PC := 61
	55	[1697]	JMP      	61 ; PC := 61
	56	[1698]	GETUPVAL 	R5 U5 ; R5 := U5
	57	[1698]	GETTABLE 	R5 R5 K22 ; R5 := R5[0x587aa683]
	58	[1698]	MOVE     	R6 R2 ; R6 := R2
	59	[1698]	GETUPVAL 	R7 U6 ; R7 := U6
	60	[1698]	CALL     	R5 3 1 ; R5(R6,R7)
	61	[1700]	GETGLOBAL	R5 K14 ; R5 := 0x7b998233
	62	[1700]	GETGLOBAL	R6 K23 ; R6 := _T
	63	[1700]	GETTABLE 	R6 R6 K24 ; R6 := R6["RailjackHud_Movie"]
	64	[1700]	CALL     	R5 2 2 ; R5 := R5(R6)
	65	[1700]	TEST     	R5 1 ; if R5 then PC := 73
	66	[1700]	JMP      	73 ; PC := 73
	67	[1701]	GETGLOBAL	R5 K23 ; R5 := _T
	68	[1701]	GETTABLE 	R5 R5 K24 ; R5 := R5["RailjackHud_Movie"]
	69	[1701]	SELF     	R5 R5 K25 ; R6 := R5; R5 := R5[0xe4162eed]
	70	[1701]	LOADK    	R7 K26 ; R7 := "NotifyAbilityActivate"
	71	[1701]	MOVE     	R8 R1 ; R8 := R1
	72	[1701]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	73	[1704]	OP_LOADBOOL	R5 1 0 ; R5 := true
	74	[1704]	RETURN   	R5 2 ; return R5 
	75	[1705]	RETURN   	R0 1 ; return 

function #75 <?:1708,1726> (48 instructions, 192 bytes at 00000211262AF0D0)
1 param, 6 slots, 3 upvalues, 0 locals, 12 constants, 0 functions
	1	[1709]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[1709]	GETTABLE 	R1 R1 K1 ; R1 := R1["SecretMiniGameActive"]
	3	[1709]	TEST     	R1 1 ; if R1 then PC := 46
	4	[1709]	JMP      	46 ; PC := 46
	5	[1710]	MOVE     	R1 R0 ; R1 := R0
	6	[1711]	GETUPVAL 	R2 U0 ; R2 := U0
	7	[1711]	LOADK    	R3 K2 ; R3 := 16777215.000000
	8	[1711]	LOADK    	R4 := 16711680.000000
	9	[1711]	MOVE     	R5 R1 ; R5 := R1
	10	[1711]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	11	[1713]	GETUPVAL 	R2 U1 ; R2 := U1
	12	[1713]	TEST     	R2 0 ; if not R2 then PC := 19
	13	[1713]	JMP      	19 ; PC := 19
	14	[1714]	GETUPVAL 	R2 U1 ; R2 := U1
	15	[1714]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0xc9dd135d]
	16	[1714]	LOADK    	R4 K4 ; R4 := "NotifyAbilityActivateError"
	17	[1714]	MOVE     	R5 R0 ; R5 := R0
	18	[1714]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	19	[1716]	GETGLOBAL	R2 K5 ; R2 := 0x7b998233
	20	[1716]	GETGLOBAL	R3 K0 ; R3 := _T
	21	[1716]	GETTABLE 	R3 R3 K6 ; R3 := R3["RailjackHud_Movie"]
	22	[1716]	CALL     	R2 2 2 ; R2 := R2(R3)
	23	[1716]	TEST     	R2 1 ; if R2 then PC := 41
	24	[1716]	JMP      	41 ; PC := 41
	25	[1717]	GETGLOBAL	R2 K0 ; R2 := _T
	26	[1717]	GETTABLE 	R2 R2 K6 ; R2 := R2["RailjackHud_Movie"]
	27	[1717]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0xe4162eed]
	28	[1717]	LOADK    	R4 K4 ; R4 := "NotifyAbilityActivateError"
	29	[1717]	MOVE     	R5 R0 ; R5 := R0
	30	[1717]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	31	[1718]	GETGLOBAL	R2 K5 ; R2 := 0x7b998233
	32	[1718]	GETGLOBAL	R3 K8 ; R3 := 0x674a7881
	33	[1718]	CALL     	R2 2 2 ; R2 := R2(R3)
	34	[1718]	TEST     	R2 1 ; if R2 then PC := 46
	35	[1718]	JMP      	46 ; PC := 46
	36	[1719]	GETUPVAL 	R2 U2 ; R2 := U2
	37	[1719]	GETTABLE 	R2 R2 K9 ; R2 := R2[0x659d451f]
	38	[1719]	GETGLOBAL	R3 K8 ; R3 := 0x674a7881
	39	[1719]	CALL     	R2 2 1 ; R2(R3)
	40	[1720]	JMP      	46 ; PC := 46
	41	[1722]	GETUPVAL 	R2 U2 ; R2 := U2
	42	[1722]	GETTABLE 	R2 R2 K9 ; R2 := R2[0x659d451f]
	43	[1722]	GETGLOBAL	R3 K10 ; R3 := 0x0032441c
	44	[1722]	GETTABLE 	R3 R3 K11 ; R3 := R3["UISound_Error"]
	45	[1722]	CALL     	R2 2 1 ; R2(R3)
	46	[1725]	OP_LOADBOOL	R2 1 0 ; R2 := true
	47	[1725]	RETURN   	R2 2 ; return R2 
	48	[1726]	RETURN   	R0 1 ; return 

function #76 <?:1728,1740> (34 instructions, 136 bytes at 0000021127A23C50)
1 param, 9 slots, 3 upvalues, 0 locals, 12 constants, 0 functions
	1	[1729]	GETGLOBAL	R1 K0 ; R1 := 0xe72d2edb
	2	[1729]	EQ       	0 R1 K2 ; if R1 ~= 3.000000 then PC := 34
	3	[1729]	JMP      	34 ; PC := 34
	4	[1731]	GETGLOBAL	R1 K3 ; R1 := 0x7b998233
	5	[1731]	GETGLOBAL	R2 K4 ; R2 := 0xcf7f594a
	6	[1731]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[1731]	TEST     	R1 1 ; if R1 then PC := 34
	8	[1731]	JMP      	34 ; PC := 34
	9	[1732]	GETUPVAL 	R1 U0 ; R1 := U0
	10	[1732]	GETTABLE 	R1 R1 K5 ; R1 := R1["mAbilityFxPlayed"]
	11	[1732]	TEST     	R1 0 ; if not R1 then PC := 16
	12	[1732]	JMP      	16 ; PC := 16
	13	[1733]	GETUPVAL 	R1 U0 ; R1 := U0
	14	[1733]	SETTABLE 	R1 K5 K6 ; R1["mAbilityFxPlayed"] := false
	15	[1733]	JMP      	34 ; PC := 34
	16	[1735]	GETUPVAL 	R1 U1 ; R1 := U1
	17	[1735]	GETTABLE 	R1 R1 K7 ; R1 := R1[0xb5be5d4a]
	18	[1735]	GETGLOBAL	R2 K8 ; R2 := 0xae91e43b
	19	[1735]	LOADK    	R3 K9 ; R3 := "StancePanel.StanceComponent.Stance"
	20	[1735]	MOVE     	R4 R0 ; R4 := R0
	21	[1735]	LOADK    	R5 K10 ; R5 := ".Icon"
	22	[1735]	CONCAT   	R3 R3 R5 ; R3 := R3 .. R4 .. R5
	23	[1735]	OP_LOADBOOL	R4 0 0 ; R4 := false
	24	[1735]	CALL     	R1 4 3 ; R1,R2 := R1(R2,R3,R4)
	25	[1736]	GETUPVAL 	R3 U2 ; R3 := U2
	26	[1736]	GETUPVAL 	R4 U1 ; R4 := U1
	27	[1736]	GETTABLE 	R4 R4 K11 ; R4 := R4[0x5a22d251]
	28	[1736]	GETGLOBAL	R5 K8 ; R5 := 0xae91e43b
	29	[1736]	GETGLOBAL	R6 K4 ; R6 := 0xcf7f594a
	30	[1736]	MOVE     	R7 R1 ; R7 := R1
	31	[1736]	MOVE     	R8 R2 ; R8 := R2
	32	[1736]	CALL     	R4 5 2 ; R4 := R4(R5,R6,R7,R8)
	33	[1736]	SETTABLE 	R3 R0 R4 ; R3[R0] := R4
	34	[1740]	RETURN   	R0 1 ; return 

function #77 <?:1742,1757> (45 instructions, 180 bytes at 000002113730BBE0)
1 param, 10 slots, 1 upvalue, 0 locals, 9 constants, 1 function
	1	[1743]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1743]	GETTABLE 	R1 R1 K0 ; R1 := R1["IsAlternateHud"]
	3	[1743]	TEST     	R1 0 ; if not R1 then PC := 6
	4	[1743]	JMP      	6 ; PC := 6
	5	[1744]	RETURN   	R0 1 ; return 
	6	[1746]	TEST     	R0 0 ; if not R0 then PC := 31
	7	[1746]	JMP      	31 ; PC := 31
	8	[1747]	GETGLOBAL	R1 K1 ; R1 := _T
	9	[1747]	GETTABLE 	R1 R1 K2 ; R1 := R1["BlockWeaponPanelVisibility"]
	10	[1747]	TEST     	R1 1 ; if R1 then PC := 45
	11	[1747]	JMP      	45 ; PC := 45
	12	[1748]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	13	[1748]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xaade900e]
	14	[1748]	LOADK    	R3 K5 ; R3 := "WeaponFrame"
	15	[1748]	LOADK    	R4 := 11.000000
	16	[1748]	OP_LOADBOOL	R5 1 0 ; R5 := true
	17	[1748]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	18	[1749]	GETGLOBAL	R1 K6 ; R1 := 0x25312c9b
	19	[1749]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	20	[1749]	LOADK    	R3 K5 ; R3 := "WeaponFrame"
	21	[1749]	LOADK    	R4 := 0.000000
	22	[1749]	NEWTABLE 	R5 1 0 ; R5 := {}
	23	[1749]	LOADK    	R6 := 10.000000
	24	[1749]	SETLIST  	R5 1 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
	25	[1749]	NEWTABLE 	R6 1 0 ; R6 := {}
	26	[1749]	LOADK    	R7 := 100.000000
	27	[1749]	SETLIST  	R6 1 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
	28	[1749]	LOADK    	R7 K8 ; R7 := 0.150000
	29	[1749]	CALL     	R1 7 1 ; R1(R2,R3,R4,R5,R6,R7)
	30	[1750]	JMP      	45 ; PC := 45
	31	[1752]	GETGLOBAL	R1 K6 ; R1 := 0x25312c9b
	32	[1752]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	33	[1752]	LOADK    	R3 K5 ; R3 := "WeaponFrame"
	34	[1752]	LOADK    	R4 := 0.000000
	35	[1752]	NEWTABLE 	R5 1 0 ; R5 := {}
	36	[1752]	LOADK    	R6 := 10.000000
	37	[1752]	SETLIST  	R5 1 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
	38	[1752]	NEWTABLE 	R6 1 0 ; R6 := {}
	39	[1752]	LOADK    	R7 := 0.000000
	40	[1752]	SETLIST  	R6 1 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
	41	[1752]	LOADK    	R7 K8 ; R7 := 0.150000
	42	[1752]	LOADK    	R8 := 0.000000
	43	[1755]	CLOSURE  	R9 0 ; R9 := closure(Function #1)
	44	[1752]	CALL     	R1 9 1 ; R1(R2,R3,R4,R5,R6,R7,R8,R9)
	45	[1757]	RETURN   	R0 1 ; return 

function #78 <?:1759,1774> (70 instructions, 280 bytes at 000002112FDFFF00)
1 param, 22 slots, 2 upvalues, 0 locals, 15 constants, 0 functions
	1	[1760]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1760]	GETTABLE 	R1 R1 K0 ; R1 := R1["IsAlternateHud"]
	3	[1760]	TEST     	R1 0 ; if not R1 then PC := 6
	4	[1760]	JMP      	6 ; PC := 6
	5	[1761]	RETURN   	R0 1 ; return 
	6	[1763]	NEWTABLE 	R1 2 0 ; R1 := {}
	7	[1763]	LOADK    	R2 K1 ; R2 := ".EnergyBar"
	8	[1763]	LOADK    	R3 K2 ; R3 := ".EnergyAmount"
	9	[1763]	SETLIST  	R1 2 1 ; R1[(1-1)*FPF+i] := R(1+i), 1 <= i <= 2
	10	[1764]	NEWTABLE 	R2 4 0 ; R2 := {}
	11	[1764]	LOADK    	R3 K3 ; R3 := ".Ability1"
	12	[1764]	LOADK    	R4 K4 ; R4 := ".Ability2"
	13	[1764]	LOADK    	R5 K5 ; R5 := ".Ability3"
	14	[1764]	LOADK    	R6 K6 ; R6 := ".Ability4"
	15	[1764]	SETLIST  	R2 4 1 ; R2[(1-1)*FPF+i] := R(2+i), 1 <= i <= 4
	16	[1765]	GETUPVAL 	R3 U0 ; R3 := U0
	17	[1765]	SETTABLE 	R3 K7 R0 ; R3["mEnergyVisible"] := R0
	18	[1766]	GETUPVAL 	R3 U1 ; R3 := U1
	19	[1766]	GETTABLE 	R3 R3 K8 ; R3 := R3[0x06d055f9]
	20	[1766]	MOVE     	R4 R0 ; R4 := R0
	21	[1766]	LOADK    	R5 := 100.000000
	22	[1766]	LOADK    	R6 := 0.000000
	23	[1766]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	24	[1767]	GETUPVAL 	R4 U1 ; R4 := U1
	25	[1767]	GETTABLE 	R4 R4 K8 ; R4 := R4[0x06d055f9]
	26	[1767]	MOVE     	R5 R0 ; R5 := R0
	27	[1767]	LOADK    	R6 := 18.000000
	28	[1767]	LOADK    	R7 := 32.000000
	29	[1767]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	30	[1768]	GETGLOBAL	R5 K9 ; R5 := 0xc8802016
	31	[1768]	MOVE     	R6 R1 ; R6 := R1
	32	[1768]	CALL     	R5 2 4 ; R5,R6,R7 := R5(R6)
	33	[1768]	JMP      	48 ; PC := 48
	34	[1769]	GETGLOBAL	R10 K10 ; R10 := 0x25312c9b
	35	[1769]	GETGLOBAL	R11 K11 ; R11 := 0xae91e43b
	36	[1769]	LOADK    	R12 K12 ; R12 := "AbilityPanel"
	37	[1769]	MOVE     	R13 R9 ; R13 := R9
	38	[1769]	CONCAT   	R12 R12 R13 ; R12 := R12 .. R13
	39	[1769]	LOADK    	R13 := 0.000000
	40	[1769]	NEWTABLE 	R14 1 0 ; R14 := {}
	41	[1769]	LOADK    	R15 := 10.000000
	42	[1769]	SETLIST  	R14 1 1 ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 1
	43	[1769]	NEWTABLE 	R15 1 0 ; R15 := {}
	44	[1769]	MOVE     	R16 R3 ; R16 := R3
	45	[1769]	SETLIST  	R15 1 1 ; R15[(1-1)*FPF+i] := R(15+i), 1 <= i <= 1
	46	[1769]	LOADK    	R16 K14 ; R16 := 0.150000
	47	[1769]	CALL     	R10 7 1 ; R10(R11,R12,R13,R14,R15,R16)
	48	[1768]	TFORLOOP 	R5 2 ; R8,R9 := R5(R6,R7); if R8 ~= nil then begin PC = 34; R7 := R8 end
	49	[1769]	JMP      	34 ; PC := 34
	50	[1771]	GETGLOBAL	R10 K9 ; R10 := 0xc8802016
	51	[1771]	MOVE     	R11 R2 ; R11 := R2
	52	[1771]	CALL     	R10 2 4 ; R10,R11,R12 := R10(R11)
	53	[1771]	JMP      	68 ; PC := 68
	54	[1772]	GETGLOBAL	R15 K10 ; R15 := 0x25312c9b
	55	[1772]	GETGLOBAL	R16 K11 ; R16 := 0xae91e43b
	56	[1772]	LOADK    	R17 K12 ; R17 := "AbilityPanel"
	57	[1772]	MOVE     	R18 R14 ; R18 := R14
	58	[1772]	CONCAT   	R17 R17 R18 ; R17 := R17 .. R18
	59	[1772]	LOADK    	R18 := 0.000000
	60	[1772]	NEWTABLE 	R19 1 0 ; R19 := {}
	61	[1772]	LOADK    	R20 := 1.000000
	62	[1772]	SETLIST  	R19 1 1 ; R19[(1-1)*FPF+i] := R(19+i), 1 <= i <= 1
	63	[1772]	NEWTABLE 	R20 1 0 ; R20 := {}
	64	[1772]	MOVE     	R21 R4 ; R21 := R4
	65	[1772]	SETLIST  	R20 1 1 ; R20[(1-1)*FPF+i] := R(20+i), 1 <= i <= 1
	66	[1772]	LOADK    	R21 K14 ; R21 := 0.150000
	67	[1772]	CALL     	R15 7 1 ; R15(R16,R17,R18,R19,R20,R21)
	68	[1771]	TFORLOOP 	R10 2 ; R13,R14 := R10(R11,R12); if R13 ~= nil then begin PC = 54; R12 := R13 end
	69	[1772]	JMP      	54 ; PC := 54
	70	[1774]	RETURN   	R0 1 ; return 

function #79 <?:1776,1800> (64 instructions, 256 bytes at 0000021135E1DAE0)
3 params, 12 slots, 2 upvalues, 0 locals, 12 constants, 1 function
	1	[1777]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[1777]	GETTABLE 	R3 R3 K0 ; R3 := R3["IsAlternateHud"]
	3	[1777]	TEST     	R3 0 ; if not R3 then PC := 6
	4	[1777]	JMP      	6 ; PC := 6
	5	[1778]	RETURN   	R0 1 ; return 
	6	[1781]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 9
	7	[1781]	JMP      	9 ; PC := 9
	8	[1782]	MOVE     	R1 R0 ; R1 := R0
	9	[1785]	TEST     	R0 0 ; if not R0 then PC := 40
	10	[1785]	JMP      	40 ; PC := 40
	11	[1785]	TEST     	R2 0 ; if not R2 then PC := 17
	12	[1785]	JMP      	17 ; PC := 17
	13	[1785]	GETGLOBAL	R3 K2 ; R3 := _T
	14	[1785]	GETTABLE 	R3 R3 K3 ; R3 := R3["MinimalHud"]
	15	[1785]	TEST     	R3 1 ; if R3 then PC := 40
	16	[1785]	JMP      	40 ; PC := 40
	17	[1786]	GETGLOBAL	R3 K2 ; R3 := _T
	18	[1786]	GETTABLE 	R3 R3 K4 ; R3 := R3["BlockAbilityPanelVisibility"]
	19	[1786]	TEST     	R3 1 ; if R3 then PC := 54
	20	[1786]	JMP      	54 ; PC := 54
	21	[1787]	GETGLOBAL	R3 K5 ; R3 := 0xae91e43b
	22	[1787]	SELF     	R3 R3 K6 ; R4 := R3; R3 := R3[0xaade900e]
	23	[1787]	LOADK    	R5 K7 ; R5 := "AbilityPanel"
	24	[1787]	LOADK    	R6 := 11.000000
	25	[1787]	OP_LOADBOOL	R7 1 0 ; R7 := true
	26	[1787]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	27	[1788]	GETGLOBAL	R3 K8 ; R3 := 0x25312c9b
	28	[1788]	GETGLOBAL	R4 K5 ; R4 := 0xae91e43b
	29	[1788]	LOADK    	R5 K7 ; R5 := "AbilityPanel"
	30	[1788]	LOADK    	R6 := 0.000000
	31	[1788]	NEWTABLE 	R7 1 0 ; R7 := {}
	32	[1788]	LOADK    	R8 := 10.000000
	33	[1788]	SETLIST  	R7 1 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
	34	[1788]	NEWTABLE 	R8 1 0 ; R8 := {}
	35	[1788]	LOADK    	R9 := 100.000000
	36	[1788]	SETLIST  	R8 1 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
	37	[1788]	LOADK    	R9 K10 ; R9 := 0.150000
	38	[1788]	CALL     	R3 7 1 ; R3(R4,R5,R6,R7,R8,R9)
	39	[1789]	JMP      	54 ; PC := 54
	40	[1791]	GETGLOBAL	R3 K8 ; R3 := 0x25312c9b
	41	[1791]	GETGLOBAL	R4 K5 ; R4 := 0xae91e43b
	42	[1791]	LOADK    	R5 K7 ; R5 := "AbilityPanel"
	43	[1791]	LOADK    	R6 := 0.000000
	44	[1791]	NEWTABLE 	R7 1 0 ; R7 := {}
	45	[1791]	LOADK    	R8 := 10.000000
	46	[1791]	SETLIST  	R7 1 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
	47	[1791]	NEWTABLE 	R8 1 0 ; R8 := {}
	48	[1791]	LOADK    	R9 := 0.000000
	49	[1791]	SETLIST  	R8 1 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
	50	[1791]	LOADK    	R9 K10 ; R9 := 0.150000
	51	[1791]	LOADK    	R10 := 0.000000
	52	[1794]	CLOSURE  	R11 0 ; R11 := closure(Function #1)
	53	[1791]	CALL     	R3 9 1 ; R3(R4,R5,R6,R7,R8,R9,R10,R11)
	54	[1797]	TEST     	R0 0 ; if not R0 then PC := 60
	55	[1797]	JMP      	60 ; PC := 60
	56	[1797]	GETGLOBAL	R3 K2 ; R3 := _T
	57	[1797]	GETTABLE 	R3 R3 K4 ; R3 := R3["BlockAbilityPanelVisibility"]
	58	[1797]	TEST     	R3 1 ; if R3 then PC := 64
	59	[1797]	JMP      	64 ; PC := 64
	60	[1798]	GETUPVAL 	R3 U1 ; R3 := U1
	61	[1798]	SELF     	R3 R3 K11 ; R4 := R3; R3 := R3[0x7727930f]
	62	[1798]	MOVE     	R5 R1 ; R5 := R1
	63	[1798]	CALL     	R3 3 1 ; R3(R4,R5)
	64	[1800]	RETURN   	R0 1 ; return 

function #80 <?:1803,1814> (55 instructions, 220 bytes at 000002111F5CFF70)
0 params, 6 slots, 2 upvalues, 0 locals, 14 constants, 0 functions
	1	[1804]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[1804]	GETGLOBAL	R1 K1 ; R1 := _T
	3	[1804]	GETTABLE 	R1 R1 K2 ; R1 := R1["Touch_GetTopMenuOffset"]
	4	[1804]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[1804]	TEST     	R0 1 ; if R0 then PC := 12
	6	[1804]	JMP      	12 ; PC := 12
	7	[1804]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	8	[1804]	GETUPVAL 	R1 U0 ; R1 := U0
	9	[1804]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[1804]	TEST     	R0 0 ; if not R0 then PC := 13
	11	[1804]	JMP      	13 ; PC := 13
	12	[1805]	RETURN   	R0 1 ; return 
	13	[1807]	GETUPVAL 	R0 U0 ; R0 := U0
	14	[1807]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x4bc5dc8b]
	15	[1807]	LOADK    	R2 K4 ; R2 := "HudTracker"
	16	[1807]	LOADK    	R3 := 40.000000
	17	[1807]	LOADK    	R4 := 235.000000
	18	[1807]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	19	[1808]	GETUPVAL 	R0 U0 ; R0 := U0
	20	[1808]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x4bc5dc8b]
	21	[1808]	LOADK    	R2 K5 ; R2 := "MiniMapContainer"
	22	[1808]	LOADK    	R3 := 40.000000
	23	[1808]	LOADK    	R4 := 65.000000
	24	[1808]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	25	[1809]	GETUPVAL 	R0 U0 ; R0 := U0
	26	[1809]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x4bc5dc8b]
	27	[1809]	LOADK    	R2 K6 ; R2 := "WeaponFrame"
	28	[1809]	LOADNIL  	R3 R3 ; R3 := nil
	29	[1809]	LOADK    	R4 := 600.000000
	30	[1809]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	31	[1810]	GETUPVAL 	R0 U0 ; R0 := U0
	32	[1810]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x4bc5dc8b]
	33	[1810]	LOADK    	R2 K7 ; R2 := "HealthAndShield"
	34	[1810]	LOADK    	R3 := 1240.000000
	35	[1810]	LOADNIL  	R4 R4 ; R4 := nil
	36	[1810]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	37	[1811]	GETUPVAL 	R0 U0 ; R0 := U0
	38	[1811]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x4bc5dc8b]
	39	[1811]	LOADK    	R2 K8 ; R2 := "AbilityPanel"
	40	[1811]	LOADK    	R3 := 1200.000000
	41	[1811]	LOADNIL  	R4 R4 ; R4 := nil
	42	[1811]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	43	[1813]	GETUPVAL 	R0 U0 ; R0 := U0
	44	[1813]	SELF     	R0 R0 K9 ; R1 := R0; R0 := R0[0xfaa69527]
	45	[1813]	GETGLOBAL	R2 K10 ; R2 := 0xae91e43b
	46	[1813]	SELF     	R2 R2 K11 ; R3 := R2; R2 := R2[0x6b837788]
	47	[1813]	CALL     	R2 2 2 ; R2 := R2(R3)
	48	[1813]	GETGLOBAL	R3 K10 ; R3 := 0xae91e43b
	49	[1813]	SELF     	R3 R3 K12 ; R4 := R3; R3 := R3[0xaf9fda9f]
	50	[1813]	CALL     	R3 2 2 ; R3 := R3(R4)
	51	[1813]	OP_LOADBOOL	R4 1 0 ; R4 := true
	52	[1813]	GETUPVAL 	R5 U1 ; R5 := U1
	53	[1813]	GETTABLE 	R5 R5 K13 ; R5 := R5["HudScalePadding"]
	54	[1813]	CALL     	R0 6 1 ; R0(R1,R2,R3,R4,R5)
	55	[1814]	RETURN   	R0 1 ; return 

function #81 <?:1816,1872> (164 instructions, 656 bytes at 000002112A26F060)
3 params, 23 slots, 7 upvalues, 0 locals, 30 constants, 0 functions
	1	[1817]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	2	[1817]	GETUPVAL 	R4 U0 ; R4 := U0
	3	[1817]	CALL     	R3 2 2 ; R3 := R3(R4)
	4	[1817]	TEST     	R3 1 ; if R3 then PC := 162
	5	[1817]	JMP      	162 ; PC := 162
	6	[1818]	EQ       	1 R0 K1 ; if R0 == "true" then PC := 9
	7	[1818]	JMP      	9 ; PC := 9
	8	[1818]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 9
	9	[1818]	OP_LOADBOOL	R0 1 0 ; R0 := true
	10	[1819]	EQ       	1 R1 K1 ; if R1 == "true" then PC := 13
	11	[1819]	JMP      	13 ; PC := 13
	12	[1819]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 13
	13	[1819]	OP_LOADBOOL	R1 1 0 ; R1 := true
	14	[1820]	EQ       	1 R2 K1 ; if R2 == "true" then PC := 17
	15	[1820]	JMP      	17 ; PC := 17
	16	[1820]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 17
	17	[1820]	OP_LOADBOOL	R2 1 0 ; R2 := true
	18	[1821]	LOADNIL  	R3 R3 ; R3 := nil
	19	[1822]	LOADK    	R4 := 1.000000
	20	[1822]	GETUPVAL 	R5 U0 ; R5 := U0
	21	[1822]	GETTABLE 	R5 R5 K2 ; R5 := R5["list"]
	22	[1822]	LEN      	R5 R5 ; R5 := # R5
	23	[1822]	LOADK    	R6 := 1.000000
	24	[1822]	FORPREP  	R4 53 ; R4 -= R6; PC := 53
	25	[1823]	GETUPVAL 	R8 U0 ; R8 := U0
	26	[1823]	GETTABLE 	R8 R8 K2 ; R8 := R8["list"]
	27	[1823]	GETTABLE 	R3 R8 R7 ; R3 := R8[R7]
	28	[1824]	GETTABLE 	R8 R3 K3 ; R8 := R3["clip"]
	29	[1824]	EQ       	0 R8 K4 ; if R8 ~= "AbilityPanel" then PC := 53
	30	[1824]	JMP      	53 ; PC := 53
	31	[1825]	TEST     	R0 1 ; if R0 then PC := 37
	32	[1825]	JMP      	37 ; PC := 37
	33	[1825]	GETUPVAL 	R8 U1 ; R8 := U1
	34	[1825]	GETTABLE 	R8 R8 K5 ; R8 := R8["OriginalX"]
	35	[1825]	EQ       	0 R8 K6 ; if R8 ~= nil then PC := 40
	36	[1825]	JMP      	40 ; PC := 40
	37	[1826]	GETUPVAL 	R8 U1 ; R8 := U1
	38	[1826]	GETTABLE 	R9 R3 K7 ; R9 := R3["originalX"]
	39	[1826]	SETTABLE 	R8 K5 R9 ; R8["OriginalX"] := R9
	40	[1828]	GETUPVAL 	R8 U1 ; R8 := U1
	41	[1828]	GETTABLE 	R8 R8 K5 ; R8 := R8["OriginalX"]
	42	[1828]	GETUPVAL 	R9 U2 ; R9 := U2
	43	[1828]	GETTABLE 	R9 R9 K8 ; R9 := R9[0x06d055f9]
	44	[1828]	TESTSET  	R10 R1 1 ; if R1 then PC := 47 else R10 := R1 
	45	[1828]	JMP      	47 ; PC := 47
	46	[1828]	MOVE     	R10 R2 ; R10 := R2
	47	[1828]	LOADK    	R11 := -65.000000
	48	[1828]	LOADK    	R12 := 0.000000
	49	[1828]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	50	[1828]	ADD      	R8 R8 R9 ; R8 := R8 + R9
	51	[1828]	SETTABLE 	R3 K7 R8 ; R3["originalX"] := R8
	52	[1829]	JMP      	54 ; PC := 54
	53	[1822]	FORLOOP  	R4 25 ; R4 += R6; if R4 <= R5 then begin PC := 25; R7 := R4 end
	54	[1833]	TEST     	R0 0 ; if not R0 then PC := 60
	55	[1833]	JMP      	60 ; PC := 60
	56	[1833]	TEST     	R1 1 ; if R1 then PC := 60
	57	[1833]	JMP      	60 ; PC := 60
	58	[1833]	TEST     	R2 0 ; if not R2 then PC := 160
	59	[1833]	JMP      	160 ; PC := 160
	60	[1834]	GETGLOBAL	R8 K0 ; R8 := 0x7b998233
	61	[1834]	GETUPVAL 	R9 U3 ; R9 := U3
	62	[1834]	CALL     	R8 2 2 ; R8 := R8(R9)
	63	[1834]	TEST     	R8 0 ; if not R8 then PC := 86
	64	[1834]	JMP      	86 ; PC := 86
	65	[1835]	GETGLOBAL	R8 K9 ; R8 := 0xae91e43b
	66	[1835]	SELF     	R8 R8 K10 ; R9 := R8; R8 := R8[0xcd73323e]
	67	[1835]	CALL     	R8 2 2 ; R8 := R8(R9)
	68	[1836]	GETGLOBAL	R9 K0 ; R9 := 0x7b998233
	69	[1836]	MOVE     	R10 R8 ; R10 := R8
	70	[1836]	CALL     	R9 2 2 ; R9 := R9(R10)
	71	[1836]	TEST     	R9 0 ; if not R9 then PC := 75
	72	[1836]	JMP      	75 ; PC := 75
	73	[1837]	OP_LOADBOOL	R9 0 0 ; R9 := false
	74	[1837]	RETURN   	R9 2 ; return R9 
	75	[1839]	SELF     	R9 R8 K11 ; R10 := R8; R9 := R8[0x6d7bfacb]
	76	[1839]	OP_LOADBOOL	R11 0 0 ; R11 := false
	77	[1839]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	78	[1839]	SETUPVAL 	R9 U3 ; U3 := R9
	79	[1840]	GETGLOBAL	R9 K0 ; R9 := 0x7b998233
	80	[1840]	GETUPVAL 	R10 U3 ; R10 := U3
	81	[1840]	CALL     	R9 2 2 ; R9 := R9(R10)
	82	[1840]	TEST     	R9 0 ; if not R9 then PC := 86
	83	[1840]	JMP      	86 ; PC := 86
	84	[1841]	OP_LOADBOOL	R9 0 0 ; R9 := false
	85	[1841]	RETURN   	R9 2 ; return R9 
	86	[1845]	GETGLOBAL	R9 K9 ; R9 := 0xae91e43b
	87	[1845]	SELF     	R9 R9 K12 ; R10 := R9; R9 := R9[0x6b837788]
	88	[1845]	CALL     	R9 2 2 ; R9 := R9(R10)
	89	[1846]	GETGLOBAL	R10 K9 ; R10 := 0xae91e43b
	90	[1846]	SELF     	R10 R10 K13 ; R11 := R10; R10 := R10[0xaf9fda9f]
	91	[1846]	CALL     	R10 2 2 ; R10 := R10(R11)
	92	[1847]	GETGLOBAL	R11 K9 ; R11 := 0xae91e43b
	93	[1847]	SELF     	R11 R11 K14 ; R12 := R11; R11 := R11[0x091c120e]
	94	[1847]	CALL     	R11 2 2 ; R11 := R11(R12)
	95	[1847]	LT       	1 R9 R11 ; if R9 < R11 then PC := 102
	96	[1847]	JMP      	102 ; PC := 102
	97	[1847]	GETGLOBAL	R11 K9 ; R11 := 0xae91e43b
	98	[1847]	SELF     	R11 R11 K15 ; R12 := R11; R11 := R11[0x2cc9d281]
	99	[1847]	CALL     	R11 2 2 ; R11 := R11(R12)
	100	[1847]	LT       	0 R10 R11 ; if R10 >= R11 then PC := 115
	101	[1847]	JMP      	115 ; PC := 115
	102	[1847]	GETGLOBAL	R11 K16 ; R11 := 0x34291f5c
	103	[1847]	GETTABLE 	R11 R11 K17 ; R11 := R11[0x056bfe8b]
	104	[1847]	CALL     	R11 1 2 ; R11 := R11()
	105	[1847]	TEST     	R11 1 ; if R11 then PC := 115
	106	[1847]	JMP      	115 ; PC := 115
	107	[1848]	GETGLOBAL	R11 K9 ; R11 := 0xae91e43b
	108	[1848]	SELF     	R11 R11 K14 ; R12 := R11; R11 := R11[0x091c120e]
	109	[1848]	CALL     	R11 2 2 ; R11 := R11(R12)
	110	[1848]	MOVE     	R9 R11 ; R9 := R11
	111	[1849]	GETGLOBAL	R11 K9 ; R11 := 0xae91e43b
	112	[1849]	SELF     	R11 R11 K15 ; R12 := R11; R11 := R11[0x2cc9d281]
	113	[1849]	CALL     	R11 2 2 ; R11 := R11(R12)
	114	[1849]	MOVE     	R10 R11 ; R10 := R11
	115	[1852]	GETGLOBAL	R11 K16 ; R11 := 0x34291f5c
	116	[1852]	GETTABLE 	R11 R11 K18 ; R11 := R11[0xe6b41adb]
	117	[1852]	CALL     	R11 1 2 ; R11 := R11()
	118	[1852]	TEST     	R11 0 ; if not R11 then PC := 123
	119	[1852]	JMP      	123 ; PC := 123
	120	[1853]	GETUPVAL 	R11 U4 ; R11 := U4
	121	[1853]	CALL     	R11 1 1 ; R11()
	122	[1853]	JMP      	131 ; PC := 131
	123	[1855]	GETUPVAL 	R11 U0 ; R11 := U0
	124	[1855]	SELF     	R11 R11 K19 ; R12 := R11; R11 := R11[0xfaa69527]
	125	[1855]	MOVE     	R13 R9 ; R13 := R9
	126	[1855]	MOVE     	R14 R10 ; R14 := R10
	127	[1855]	OP_LOADBOOL	R15 1 0 ; R15 := true
	128	[1855]	GETUPVAL 	R16 U5 ; R16 := U5
	129	[1855]	GETTABLE 	R16 R16 K20 ; R16 := R16["HudScalePadding"]
	130	[1855]	CALL     	R11 6 1 ; R11(R12,R13,R14,R15,R16)
	131	[1857]	GETUPVAL 	R11 U3 ; R11 := U3
	132	[1857]	SELF     	R11 R11 K21 ; R12 := R11; R11 := R11[0xdae5251c]
	133	[1857]	GETUPVAL 	R13 U0 ; R13 := U0
	134	[1857]	SELF     	R13 R13 K22 ; R14 := R13; R13 := R13[0x2de3d774]
	135	[1857]	LOADK    	R15 K23 ; R15 := "Notification"
	136	[1857]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	137	[1857]	GETTABLE 	R13 R13 K24 ; R13 := R13["y"]
	138	[1857]	CALL     	R11 3 1 ; R11(R12,R13)
	139	[1859]	GETGLOBAL	R11 K25 ; R11 := 0xc8802016
	140	[1859]	GETUPVAL 	R12 U6 ; R12 := U6
	141	[1859]	CALL     	R11 2 4 ; R11,R12,R13 := R11(R12)
	142	[1859]	JMP      	158 ; PC := 158
	143	[1860]	GETTABLE 	R16 R15 K26 ; R16 := R15["Clip"]
	144	[1860]	EQ       	0 R16 K4 ; if R16 ~= "AbilityPanel" then PC := 158
	145	[1860]	JMP      	158 ; PC := 158
	146	[1861]	GETUPVAL 	R16 U0 ; R16 := U0
	147	[1861]	SELF     	R16 R16 K22 ; R17 := R16; R16 := R16[0x2de3d774]
	148	[1861]	GETTABLE 	R18 R15 K26 ; R18 := R15["Clip"]
	149	[1861]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	150	[1862]	GETUPVAL 	R17 U3 ; R17 := U3
	151	[1862]	SELF     	R17 R17 K27 ; R18 := R17; R17 := R17[0x31669273]
	152	[1862]	GETTABLE 	R19 R15 K28 ; R19 := R15["Movie"]
	153	[1862]	GETTABLE 	R20 R15 K26 ; R20 := R15["Clip"]
	154	[1862]	GETTABLE 	R21 R16 K29 ; R21 := R16["x"]
	155	[1862]	GETTABLE 	R22 R16 K24 ; R22 := R16["y"]
	156	[1862]	CALL     	R17 6 1 ; R17(R18,R19,R20,R21,R22)
	157	[1863]	JMP      	160 ; PC := 160
	158	[1859]	TFORLOOP 	R11 2 ; R14,R15 := R11(R12,R13); if R14 ~= nil then begin PC = 143; R13 := R14 end
	159	[1864]	JMP      	143 ; PC := 143
	160	[1868]	OP_LOADBOOL	R17 1 0 ; R17 := true
	161	[1868]	RETURN   	R17 2 ; return R17 
	162	[1871]	OP_LOADBOOL	R17 0 0 ; R17 := false
	163	[1871]	RETURN   	R17 2 ; return R17 
	164	[1872]	RETURN   	R0 1 ; return 

function #82 <?:1875,1891> (57 instructions, 228 bytes at 000002112D8BE1D0)
1 param, 7 slots, 5 upvalues, 0 locals, 10 constants, 0 functions
	1	[1876]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1876]	GETTABLE 	R1 R1 K0 ; R1 := R1["mMiniMapHidden"]
	3	[1876]	TEST     	R1 1 ; if R1 then PC := 57
	4	[1876]	JMP      	57 ; PC := 57
	5	[1877]	GETUPVAL 	R1 U0 ; R1 := U0
	6	[1877]	SETTABLE 	R1 K0 K1 ; R1["mMiniMapHidden"] := true
	7	[1878]	GETUPVAL 	R1 U1 ; R1 := U1
	8	[1878]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xf4ed1581]
	9	[1878]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[1878]	TEST     	R1 0 ; if not R1 then PC := 51
	11	[1878]	JMP      	51 ; PC := 51
	12	[1879]	OP_LOADBOOL	R1 1 0 ; R1 := true
	13	[1879]	SETUPVAL 	R1 U2 ; U2 := R1
	14	[1880]	GETUPVAL 	R1 U1 ; R1 := U1
	15	[1880]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xbf5bcc4a]
	16	[1880]	OP_LOADBOOL	R3 0 0 ; R3 := false
	17	[1880]	CALL     	R1 3 1 ; R1(R2,R3)
	18	[1881]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	19	[1881]	GETUPVAL 	R2 U3 ; R2 := U3
	20	[1881]	CALL     	R1 2 2 ; R1 := R1(R2)
	21	[1881]	TEST     	R1 1 ; if R1 then PC := 53
	22	[1881]	JMP      	53 ; PC := 53
	23	[1882]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	24	[1882]	GETUPVAL 	R2 U4 ; R2 := U4
	25	[1882]	CALL     	R1 2 2 ; R1 := R1(R2)
	26	[1882]	TEST     	R1 1 ; if R1 then PC := 53
	27	[1882]	JMP      	53 ; PC := 53
	28	[1883]	GETUPVAL 	R1 U3 ; R1 := U3
	29	[1883]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0x840ecf2e]
	30	[1883]	GETUPVAL 	R3 U4 ; R3 := U4
	31	[1883]	GETGLOBAL	R4 K6 ; R4 := _T
	32	[1883]	GETTABLE 	R4 R4 K7 ; R4 := R4["DisableMiniMap"]
	33	[1883]	EQ       	1 R4 K1 ; if R4 == true then PC := 36
	34	[1883]	JMP      	36 ; PC := 36
	35	[1883]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 36
	36	[1883]	OP_LOADBOOL	R4 1 0 ; R4 := true
	37	[1883]	GETGLOBAL	R5 K6 ; R5 := _T
	38	[1883]	GETTABLE 	R5 R5 K7 ; R5 := R5["DisableMiniMap"]
	39	[1883]	EQ       	0 R5 K1 ; if R5 ~= true then PC := 42
	40	[1883]	JMP      	42 ; PC := 42
	41	[1883]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 42
	42	[1883]	OP_LOADBOOL	R5 1 0 ; R5 := true
	43	[1883]	GETGLOBAL	R6 K6 ; R6 := _T
	44	[1883]	GETTABLE 	R6 R6 K8 ; R6 := R6["OverlayMapVisible"]
	45	[1883]	EQ       	1 R6 K1 ; if R6 == true then PC := 48
	46	[1883]	JMP      	48 ; PC := 48
	47	[1883]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 48
	48	[1883]	OP_LOADBOOL	R6 1 0 ; R6 := true
	49	[1883]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	50	[1885]	JMP      	53 ; PC := 53
	51	[1887]	OP_LOADBOOL	R1 0 0 ; R1 := false
	52	[1887]	SETUPVAL 	R1 U2 ; U2 := R1
	53	[1889]	GETUPVAL 	R1 U3 ; R1 := U3
	54	[1889]	SELF     	R1 R1 K9 ; R2 := R1; R1 := R1[0x719f1395]
	55	[1889]	MOVE     	R3 R0 ; R3 := R0
	56	[1889]	CALL     	R1 3 1 ; R1(R2,R3)
	57	[1891]	RETURN   	R0 1 ; return 

function #83 <?:1893,1901> (18 instructions, 72 bytes at 000002112DDB0150)
1 param, 4 slots, 4 upvalues, 0 locals, 4 constants, 0 functions
	1	[1894]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1894]	GETTABLE 	R1 R1 K0 ; R1 := R1["mMiniMapHidden"]
	3	[1894]	TEST     	R1 0 ; if not R1 then PC := 18
	4	[1894]	JMP      	18 ; PC := 18
	5	[1895]	GETUPVAL 	R1 U0 ; R1 := U0
	6	[1895]	SETTABLE 	R1 K0 K1 ; R1["mMiniMapHidden"] := false
	7	[1896]	GETUPVAL 	R1 U1 ; R1 := U1
	8	[1896]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xbb74a13b]
	9	[1896]	MOVE     	R3 R0 ; R3 := R0
	10	[1896]	CALL     	R1 3 1 ; R1(R2,R3)
	11	[1897]	GETUPVAL 	R1 U2 ; R1 := U2
	12	[1897]	TEST     	R1 0 ; if not R1 then PC := 18
	13	[1897]	JMP      	18 ; PC := 18
	14	[1898]	GETUPVAL 	R1 U3 ; R1 := U3
	15	[1898]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xbf5bcc4a]
	16	[1898]	OP_LOADBOOL	R3 1 0 ; R3 := true
	17	[1898]	CALL     	R1 3 1 ; R1(R2,R3)
	18	[1901]	RETURN   	R0 1 ; return 

function #84 <?:1904,1918> (31 instructions, 124 bytes at 000002112D8A03C0)
1 param, 10 slots, 2 upvalues, 0 locals, 8 constants, 0 functions
	1	[1905]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1905]	GETTABLE 	R1 R1 K0 ; R1 := R1["mVisible"]
	3	[1905]	TEST     	R1 0 ; if not R1 then PC := 25
	4	[1905]	JMP      	25 ; PC := 25
	5	[1906]	GETUPVAL 	R1 U0 ; R1 := U0
	6	[1906]	GETTABLE 	R1 R1 K1 ; R1 := R1["mVoipHidden"]
	7	[1906]	TEST     	R1 1 ; if R1 then PC := 24
	8	[1906]	JMP      	24 ; PC := 24
	9	[1907]	LOADK    	R1 := 1.000000
	10	[1907]	LOADK    	R2 := 3.000000
	11	[1907]	LOADK    	R3 := 1.000000
	12	[1907]	FORPREP  	R1 21 ; R1 -= R3; PC := 21
	13	[1908]	GETGLOBAL	R5 K2 ; R5 := 0xae91e43b
	14	[1908]	SELF     	R5 R5 K3 ; R6 := R5; R5 := R5[0x67bc869f]
	15	[1908]	LOADK    	R7 K4 ; R7 := "VoipIndicator"
	16	[1908]	MOVE     	R8 R4 ; R8 := R4
	17	[1908]	CONCAT   	R7 R7 R8 ; R7 := R7 .. R8
	18	[1908]	LOADK    	R8 := 10.000000
	19	[1908]	LOADK    	R9 := 0.000000
	20	[1908]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	21	[1907]	FORLOOP  	R1 13 ; R1 += R3; if R1 <= R2 then begin PC := 13; R4 := R1 end
	22	[1910]	GETUPVAL 	R5 U0 ; R5 := U0
	23	[1910]	SETTABLE 	R5 K1 K5 ; R5["mVoipHidden"] := true
	24	[1912]	RETURN   	R0 1 ; return 
	25	[1915]	GETUPVAL 	R5 U0 ; R5 := U0
	26	[1915]	SETTABLE 	R5 K1 K6 ; R5["mVoipHidden"] := nil
	27	[1917]	GETUPVAL 	R5 U1 ; R5 := U1
	28	[1917]	SELF     	R5 R5 K7 ; R6 := R5; R5 := R5[0x5cd44037]
	29	[1917]	MOVE     	R7 R0 ; R7 := R0
	30	[1917]	CALL     	R5 3 1 ; R5(R6,R7)
	31	[1918]	RETURN   	R0 1 ; return 

function #85 <?:1922,1927> (16 instructions, 64 bytes at 000002112E078380)
0 params, 5 slots, 1 upvalue, 0 locals, 7 constants, 0 functions
	1	[1923]	GETGLOBAL	R0 K0 ; R0 := 0x9ba7909f
	2	[1923]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xbcfb64ab]
	3	[1923]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[1923]	GETTABLE 	R2 R2 K2 ; R2 := R2[0xc472e470]
	5	[1923]	CALL     	R2 1 0 ; R2,... := R2()
	6	[1923]	CALL     	R0 0 2 ; R0 := R0(R1,...)
	7	[1924]	GETGLOBAL	R1 K3 ; R1 := 0x7b998233
	8	[1924]	MOVE     	R2 R0 ; R2 := R0
	9	[1924]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[1924]	TEST     	R1 1 ; if R1 then PC := 16
	11	[1924]	JMP      	16 ; PC := 16
	12	[1925]	SELF     	R1 R0 K4 ; R2 := R0; R1 := R0[0xe4162eed]
	13	[1925]	LOADK    	R3 K5 ; R3 := "ToggleFocus"
	14	[1925]	LOADK    	R4 K6 ; R4 := ""
	15	[1925]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	16	[1927]	RETURN   	R0 1 ; return 

function #86 <?:1930,1935> (11 instructions, 44 bytes at 000002111F573FC0)
1 param, 3 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[1931]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[1931]	MOVE     	R2 R0 ; R2 := R0
	3	[1931]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[1931]	TEST     	R1 1 ; if R1 then PC := 9
	5	[1931]	JMP      	9 ; PC := 9
	6	[1932]	SELF     	R1 R0 K1 ; R2 := R0; R1 := R0[0x5ca33548]
	7	[1932]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	8	[1932]	RETURN   	R1 0 ; return R1,... 
	9	[1934]	LOADK    	R1 K2 ; R1 := ""
	10	[1934]	RETURN   	R1 2 ; return R1 
	11	[1935]	RETURN   	R0 1 ; return 

function #87 <?:1938,1940> (3 instructions, 12 bytes at 0000021125679880)
0 params, 2 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[1939]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1939]	SETTABLE 	R0 K0 K1 ; R0["PlayerListHasChanged"] := true
	3	[1940]	RETURN   	R0 1 ; return 

function #88 <?:1942,2007> (199 instructions, 796 bytes at 0000021118F91840)
0 params, 42 slots, 11 upvalues, 0 locals, 33 constants, 0 functions
	1	[1944]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1944]	SETTABLE 	R0 K0 K1 ; R0["PlayerListHasChanged"] := false
	3	[1946]	GETUPVAL 	R0 U1 ; R0 := U1
	4	[1946]	TEST     	R0 0 ; if not R0 then PC := 8
	5	[1946]	JMP      	8 ; PC := 8
	6	[1947]	GETUPVAL 	R0 U1 ; R0 := U1
	7	[1947]	SETTABLE 	R0 K2 K3 ; R0["mPlayersChanged"] := true
	8	[1950]	GETGLOBAL	R0 K4 ; R0 := 0x7b998233
	9	[1950]	GETUPVAL 	R1 U2 ; R1 := U2
	10	[1950]	CALL     	R0 2 2 ; R0 := R0(R1)
	11	[1950]	TEST     	R0 1 ; if R0 then PC := 24
	12	[1950]	JMP      	24 ; PC := 24
	13	[1950]	GETUPVAL 	R0 U2 ; R0 := U2
	14	[1950]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0xf2deaf69]
	15	[1950]	GETGLOBAL	R2 K6 ; R2 := gLotusAttractModeGameRulesType
	16	[1950]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	17	[1950]	TEST     	R0 1 ; if R0 then PC := 24
	18	[1950]	JMP      	24 ; PC := 24
	19	[1950]	GETUPVAL 	R0 U2 ; R0 := U2
	20	[1950]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0x3790d299]
	21	[1950]	CALL     	R0 2 2 ; R0 := R0(R1)
	22	[1950]	TEST     	R0 0 ; if not R0 then PC := 25
	23	[1950]	JMP      	25 ; PC := 25
	24	[1951]	RETURN   	R0 1 ; return 
	25	[1954]	NEWTABLE 	R0 0 0 ; R0 := {}
	26	[1955]	LOADK    	R1 := 1.000000
	27	[1955]	GETUPVAL 	R2 U3 ; R2 := U3
	28	[1955]	LEN      	R2 R2 ; R2 := # R2
	29	[1955]	LOADK    	R3 := 1.000000
	30	[1955]	FORPREP  	R1 34 ; R1 -= R3; PC := 34
	31	[1956]	GETUPVAL 	R5 U3 ; R5 := U3
	32	[1956]	GETTABLE 	R5 R5 R4 ; R5 := R5[R4]
	33	[1956]	SETTABLE 	R0 R4 R5 ; R0[R4] := R5
	34	[1955]	FORLOOP  	R1 31 ; R1 += R3; if R1 <= R2 then begin PC := 31; R4 := R1 end
	35	[1959]	GETGLOBAL	R5 K4 ; R5 := 0x7b998233
	36	[1959]	GETUPVAL 	R6 U4 ; R6 := U4
	37	[1959]	CALL     	R5 2 2 ; R5 := R5(R6)
	38	[1959]	TEST     	R5 1 ; if R5 then PC := 46
	39	[1959]	JMP      	46 ; PC := 46
	40	[1960]	GETUPVAL 	R5 U4 ; R5 := U4
	41	[1960]	SELF     	R5 R5 K8 ; R6 := R5; R5 := R5[0xc1a65a0f]
	42	[1960]	GETGLOBAL	R7 K9 ; R7 := 0xae91e43b
	43	[1960]	SELF     	R7 R7 K10 ; R8 := R7; R7 := R7[0xcd73323e]
	44	[1960]	CALL     	R7 2 0 ; R7,... := R7(R8)
	45	[1960]	CALL     	R5 0 1 ; R5(R6,...)
	46	[1962]	GETGLOBAL	R5 K11 ; R5 := 0x89326c93
	47	[1962]	SELF     	R5 R5 K12 ; R6 := R5; R5 := R5[0x7d108ddb]
	48	[1962]	CALL     	R5 2 2 ; R5 := R5(R6)
	49	[1962]	SETUPVAL 	R5 U5 ; U5 := R5
	50	[1963]	GETUPVAL 	R5 U6 ; R5 := U6
	51	[1963]	NEWTABLE 	R6 0 0 ; R6 := {}
	52	[1963]	SETTABLE 	R5 K13 R6 ; R5["PlayerAvatars"] := R6
	53	[1965]	NEWTABLE 	R5 0 0 ; R5 := {}
	54	[1965]	SETUPVAL 	R5 U3 ; U3 := R5
	55	[1966]	LOADK    	R5 := 1.000000
	56	[1966]	GETUPVAL 	R6 U5 ; R6 := U5
	57	[1966]	LEN      	R6 R6 ; R6 := # R6
	58	[1966]	LOADK    	R7 := 1.000000
	59	[1966]	FORPREP  	R5 86 ; R5 -= R7; PC := 86
	60	[1967]	GETGLOBAL	R9 K4 ; R9 := 0x7b998233
	61	[1967]	GETUPVAL 	R10 U5 ; R10 := U5
	62	[1967]	GETTABLE 	R10 R10 R8 ; R10 := R10[R8]
	63	[1967]	CALL     	R9 2 2 ; R9 := R9(R10)
	64	[1967]	TEST     	R9 1 ; if R9 then PC := 86
	65	[1967]	JMP      	86 ; PC := 86
	66	[1967]	GETUPVAL 	R9 U5 ; R9 := U5
	67	[1967]	GETTABLE 	R9 R9 R8 ; R9 := R9[R8]
	68	[1967]	SELF     	R9 R9 K14 ; R10 := R9; R9 := R9[0xdcc3e539]
	69	[1967]	CALL     	R9 2 2 ; R9 := R9(R10)
	70	[1967]	TEST     	R9 1 ; if R9 then PC := 86
	71	[1967]	JMP      	86 ; PC := 86
	72	[1967]	GETUPVAL 	R9 U7 ; R9 := U7
	73	[1967]	GETUPVAL 	R10 U5 ; R10 := U5
	74	[1967]	GETTABLE 	R10 R10 R8 ; R10 := R10[R8]
	75	[1967]	CALL     	R9 2 2 ; R9 := R9(R10)
	76	[1967]	GETUPVAL 	R10 U8 ; R10 := U8
	77	[1967]	GETTABLE 	R10 R10 K15 ; R10 := R10["HIDDEN_PLAYER_NAME"]
	78	[1967]	EQ       	1 R9 R10 ; if R9 == R10 then PC := 86
	79	[1967]	JMP      	86 ; PC := 86
	80	[1968]	GETUPVAL 	R9 U3 ; R9 := U3
	81	[1968]	GETUPVAL 	R10 U7 ; R10 := U7
	82	[1968]	GETUPVAL 	R11 U5 ; R11 := U5
	83	[1968]	GETTABLE 	R11 R11 R8 ; R11 := R11[R8]
	84	[1968]	CALL     	R10 2 2 ; R10 := R10(R11)
	85	[1968]	SETTABLE 	R9 R8 R10 ; R9[R8] := R10
	86	[1966]	FORLOOP  	R5 60 ; R5 += R7; if R5 <= R6 then begin PC := 60; R8 := R5 end
	87	[1972]	GETGLOBAL	R9 K16 ; R9 := 0x9ba7909f
	88	[1972]	SELF     	R9 R9 K17 ; R10 := R9; R9 := R9[0xbcfb64ab]
	89	[1972]	GETUPVAL 	R11 U9 ; R11 := U9
	90	[1972]	GETTABLE 	R11 R11 K18 ; R11 := R11[0xc472e470]
	91	[1972]	CALL     	R11 1 0 ; R11,... := R11()
	92	[1972]	CALL     	R9 0 2 ; R9 := R9(R10,...)
	93	[1973]	GETGLOBAL	R10 K4 ; R10 := 0x7b998233
	94	[1973]	MOVE     	R11 R9 ; R11 := R9
	95	[1973]	CALL     	R10 2 2 ; R10 := R10(R11)
	96	[1973]	TEST     	R10 1 ; if R10 then PC := 199
	97	[1973]	JMP      	199 ; PC := 199
	98	[1973]	GETUPVAL 	R10 U0 ; R10 := U0
	99	[1973]	GETTABLE 	R10 R10 K19 ; R10 := R10["Initialized"]
	100	[1973]	TEST     	R10 0 ; if not R10 then PC := 199
	101	[1973]	JMP      	199 ; PC := 199
	102	[1974]	NEWTABLE 	R10 0 0 ; R10 := {}
	103	[1975]	LOADK    	R11 := 1.000000
	104	[1975]	GETUPVAL 	R12 U3 ; R12 := U3
	105	[1975]	LEN      	R12 R12 ; R12 := # R12
	106	[1975]	LOADK    	R13 := 1.000000
	107	[1975]	FORPREP  	R11 111 ; R11 -= R13; PC := 111
	108	[1976]	GETUPVAL 	R15 U3 ; R15 := U3
	109	[1976]	GETTABLE 	R15 R15 R14 ; R15 := R15[R14]
	110	[1976]	SETTABLE 	R10 R14 R15 ; R10[R14] := R15
	111	[1975]	FORLOOP  	R11 108 ; R11 += R13; if R11 <= R12 then begin PC := 108; R14 := R11 end
	112	[1979]	LOADK    	R15 := 1.000000
	113	[1979]	LEN      	R16 R0 ; R16 := # R0
	114	[1979]	LOADK    	R17 := 1.000000
	115	[1979]	FORPREP  	R15 134 ; R15 -= R17; PC := 134
	116	[1980]	LOADK    	R19 := 1.000000
	117	[1980]	LEN      	R20 R10 ; R20 := # R10
	118	[1980]	LOADK    	R21 := 1.000000
	119	[1980]	FORPREP  	R19 133 ; R19 -= R21; PC := 133
	120	[1981]	GETTABLE 	R23 R0 R18 ; R23 := R0[R18]
	121	[1981]	GETTABLE 	R24 R10 R22 ; R24 := R10[R22]
	122	[1981]	EQ       	0 R23 R24 ; if R23 ~= R24 then PC := 133
	123	[1981]	JMP      	133 ; PC := 133
	124	[1981]	GETTABLE 	R23 R0 R18 ; R23 := R0[R18]
	125	[1981]	EQ       	1 R23 K20 ; if R23 == "" then PC := 133
	126	[1981]	JMP      	133 ; PC := 133
	127	[1981]	GETTABLE 	R23 R10 R22 ; R23 := R10[R22]
	128	[1981]	EQ       	1 R23 K20 ; if R23 == "" then PC := 133
	129	[1981]	JMP      	133 ; PC := 133
	130	[1982]	SETTABLE 	R0 R18 K20 ; R0[R18] := ""
	131	[1983]	SETTABLE 	R10 R22 K20 ; R10[R22] := ""
	132	[1984]	JMP      	134 ; PC := 134
	133	[1980]	FORLOOP  	R19 120 ; R19 += R21; if R19 <= R20 then begin PC := 120; R22 := R19 end
	134	[1979]	FORLOOP  	R15 116 ; R15 += R17; if R15 <= R16 then begin PC := 116; R18 := R15 end
	135	[1990]	LOADK    	R23 := 1.000000
	136	[1990]	LEN      	R24 R0 ; R24 := # R0
	137	[1990]	LOADK    	R25 := 1.000000
	138	[1990]	FORPREP  	R23 173 ; R23 -= R25; PC := 173
	139	[1991]	GETTABLE 	R27 R0 R26 ; R27 := R0[R26]
	140	[1991]	EQ       	1 R27 K21 ; if R27 == nil then PC := 173
	141	[1991]	JMP      	173 ; PC := 173
	142	[1991]	GETTABLE 	R27 R0 R26 ; R27 := R0[R26]
	143	[1991]	EQ       	1 R27 K20 ; if R27 == "" then PC := 173
	144	[1991]	JMP      	173 ; PC := 173
	145	[1992]	SELF     	R27 R9 K22 ; R28 := R9; R27 := R9[0xf56f3887]
	146	[1992]	LOADK    	R29 K23 ; R29 := "ChannelSystemMessage"
	147	[1992]	NEWTABLE 	R30 2 0 ; R30 := {}
	148	[1992]	GETGLOBAL	R31 K9 ; R31 := 0xae91e43b
	149	[1992]	SELF     	R31 R31 K24 ; R32 := R31; R31 := R31[0x42b04007]
	150	[1992]	LOADK    	R33 K25 ; R33 := "/Lotus/Language/Menu/PlayerHasDisconnected"
	151	[1992]	OP_LOADBOOL	R34 0 0 ; R34 := false
	152	[1992]	NEWTABLE 	R35 0 1 ; R35 := {}
	153	[1992]	GETTABLE 	R36 R0 R26 ; R36 := R0[R26]
	154	[1992]	SETTABLE 	R35 K26 R36 ; R35["PLAYER_NAME"] := R36
	155	[1992]	CALL     	R31 5 2 ; R31 := R31(R32,R33,R34,R35)
	156	[1992]	LOADK    	R32 K27 ; R32 := "1"
	157	[1992]	SETLIST  	R30 2 1 ; R30[(1-1)*FPF+i] := R(30+i), 1 <= i <= 2
	158	[1992]	CALL     	R27 4 1 ; R27(R28,R29,R30)
	159	[1995]	GETUPVAL 	R27 U10 ; R27 := U10
	160	[1995]	SELF     	R27 R27 K28 ; R28 := R27; R27 := R27[0xf017005a]
	161	[1995]	CALL     	R27 2 2 ; R27 := R27(R28)
	162	[1996]	GETGLOBAL	R28 K29 ; R28 := 0x7f5022cf
	163	[1996]	GETTABLE 	R28 R28 K30 ; R28 := R28[0xa5c556b9]
	164	[1996]	MOVE     	R29 R27 ; R29 := R27
	165	[1996]	GETTABLE 	R30 R0 R26 ; R30 := R0[R26]
	166	[1996]	CALL     	R28 3 2 ; R28 := R28(R29,R30)
	167	[1996]	EQ       	1 R28 K21 ; if R28 == nil then PC := 173
	168	[1996]	JMP      	173 ; PC := 173
	169	[1997]	GETUPVAL 	R28 U10 ; R28 := U10
	170	[1997]	SELF     	R28 R28 K31 ; R29 := R28; R28 := R28[0x89212ed6]
	171	[1997]	LOADK    	R30 K20 ; R30 := ""
	172	[1997]	CALL     	R28 3 1 ; R28(R29,R30)
	173	[1990]	FORLOOP  	R23 139 ; R23 += R25; if R23 <= R24 then begin PC := 139; R26 := R23 end
	174	[2001]	LOADK    	R28 := 1.000000
	175	[2001]	LEN      	R29 R10 ; R29 := # R10
	176	[2001]	LOADK    	R30 := 1.000000
	177	[2001]	FORPREP  	R28 198 ; R28 -= R30; PC := 198
	178	[2002]	GETTABLE 	R32 R10 R31 ; R32 := R10[R31]
	179	[2002]	EQ       	1 R32 K21 ; if R32 == nil then PC := 198
	180	[2002]	JMP      	198 ; PC := 198
	181	[2002]	GETTABLE 	R32 R10 R31 ; R32 := R10[R31]
	182	[2002]	EQ       	1 R32 K20 ; if R32 == "" then PC := 198
	183	[2002]	JMP      	198 ; PC := 198
	184	[2003]	SELF     	R32 R9 K22 ; R33 := R9; R32 := R9[0xf56f3887]
	185	[2003]	LOADK    	R34 K23 ; R34 := "ChannelSystemMessage"
	186	[2003]	NEWTABLE 	R35 2 0 ; R35 := {}
	187	[2003]	GETGLOBAL	R36 K9 ; R36 := 0xae91e43b
	188	[2003]	SELF     	R36 R36 K24 ; R37 := R36; R36 := R36[0x42b04007]
	189	[2003]	LOADK    	R38 K32 ; R38 := "/Lotus/Language/Menu/PlayerHasJoined"
	190	[2003]	OP_LOADBOOL	R39 0 0 ; R39 := false
	191	[2003]	NEWTABLE 	R40 0 1 ; R40 := {}
	192	[2003]	GETTABLE 	R41 R10 R31 ; R41 := R10[R31]
	193	[2003]	SETTABLE 	R40 K26 R41 ; R40["PLAYER_NAME"] := R41
	194	[2003]	CALL     	R36 5 2 ; R36 := R36(R37,R38,R39,R40)
	195	[2003]	LOADK    	R37 K27 ; R37 := "1"
	196	[2003]	SETLIST  	R35 2 1 ; R35[(1-1)*FPF+i] := R(35+i), 1 <= i <= 2
	197	[2003]	CALL     	R32 4 1 ; R32(R33,R34,R35)
	198	[2001]	FORLOOP  	R28 178 ; R28 += R30; if R28 <= R29 then begin PC := 178; R31 := R28 end
	199	[2007]	RETURN   	R0 1 ; return 

function #89 <?:2010,2062> (149 instructions, 596 bytes at 000002112A245C70)
0 params, 14 slots, 7 upvalues, 0 locals, 26 constants, 0 functions
	1	[2012]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[2012]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[2012]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2012]	TEST     	R1 1 ; if R1 then PC := 11
	5	[2012]	JMP      	11 ; PC := 11
	6	[2012]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	7	[2012]	GETGLOBAL	R2 K1 ; R2 := 0xbe190284
	8	[2012]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[2012]	TEST     	R1 0 ; if not R1 then PC := 12
	10	[2012]	JMP      	12 ; PC := 12
	11	[2013]	RETURN   	R0 1 ; return 
	12	[2016]	GETUPVAL 	R1 U0 ; R1 := U0
	13	[2016]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xe5916fbf]
	14	[2016]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[2017]	LOADK    	R2 := 1.000000
	16	[2017]	LEN      	R3 R1 ; R3 := # R1
	17	[2017]	LOADK    	R4 := 1.000000
	18	[2017]	FORPREP  	R2 27 ; R2 -= R4; PC := 27
	19	[2018]	GETGLOBAL	R6 K1 ; R6 := 0xbe190284
	20	[2018]	SELF     	R6 R6 K3 ; R7 := R6; R6 := R6[0x0f823e41]
	21	[2018]	GETTABLE 	R8 R1 R5 ; R8 := R1[R5]
	22	[2018]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	23	[2018]	TEST     	R6 0 ; if not R6 then PC := 27
	24	[2018]	JMP      	27 ; PC := 27
	25	[2019]	GETTABLE 	R0 R1 R5 ; R0 := R1[R5]
	26	[2020]	JMP      	28 ; PC := 28
	27	[2017]	FORLOOP  	R2 19 ; R2 += R4; if R2 <= R3 then begin PC := 19; R5 := R2 end
	28	[2024]	EQ       	1 R0 K4 ; if R0 == nil then PC := 139
	29	[2024]	JMP      	139 ; PC := 139
	30	[2025]	GETGLOBAL	R6 K5 ; R6 := 0x64fb1586
	31	[2025]	GETGLOBAL	R7 K1 ; R7 := 0xbe190284
	32	[2025]	SELF     	R7 R7 K6 ; R8 := R7; R7 := R7[0x6dc7ed4b]
	33	[2025]	MOVE     	R9 R0 ; R9 := R0
	34	[2025]	CALL     	R7 3 0 ; R7,... := R7(R8,R9)
	35	[2025]	CALL     	R6 0 2 ; R6 := R6(R7,...)
	36	[2026]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	37	[2026]	GETUPVAL 	R8 U1 ; R8 := U1
	38	[2026]	GETTABLE 	R8 R8 K7 ; R8 := R8["TimerOfInterest"]
	39	[2026]	CALL     	R7 2 2 ; R7 := R7(R8)
	40	[2026]	TEST     	R7 0 ; if not R7 then PC := 69
	41	[2026]	JMP      	69 ; PC := 69
	42	[2027]	GETUPVAL 	R7 U1 ; R7 := U1
	43	[2027]	GETUPVAL 	R8 U2 ; R8 := U2
	44	[2027]	LOADK    	R9 K7 ; R9 := "TimerOfInterest"
	45	[2027]	GETUPVAL 	R10 U3 ; R10 := U3
	46	[2027]	GETTABLE 	R10 R10 K8 ; R10 := R10["HT_TIMER"]
	47	[2027]	LOADK    	R11 := 0.250000
	48	[2027]	OP_LOADBOOL	R12 0 0 ; R12 := false
	49	[2027]	OP_LOADBOOL	R13 0 0 ; R13 := false
	50	[2027]	CALL     	R8 6 2 ; R8 := R8(R9,R10,R11,R12,R13)
	51	[2027]	SETTABLE 	R7 K7 R8 ; R7["TimerOfInterest"] := R8
	52	[2028]	GETUPVAL 	R7 U1 ; R7 := U1
	53	[2028]	GETTABLE 	R7 R7 K7 ; R7 := R7["TimerOfInterest"]
	54	[2028]	SETTABLE 	R7 K9 R0 ; R7["MissionTimerName"] := R0
	55	[2029]	GETGLOBAL	R7 K10 ; R7 := 0x7f5022cf
	56	[2029]	GETTABLE 	R7 R7 K11 ; R7 := R7[0x41e2ae25]
	57	[2029]	MOVE     	R8 R6 ; R8 := R6
	58	[2029]	CALL     	R7 2 2 ; R7 := R7(R8)
	59	[2029]	LT       	0 K12 R7 ; if 0.000000 >= R7 then PC := 67
	60	[2029]	JMP      	67 ; PC := 67
	61	[2030]	GETUPVAL 	R7 U1 ; R7 := U1
	62	[2030]	GETTABLE 	R7 R7 K7 ; R7 := R7["TimerOfInterest"]
	63	[2030]	GETTABLE 	R7 R7 K13 ; R7 := R7[0xe0cba3ca]
	64	[2030]	MOVE     	R8 R6 ; R8 := R6
	65	[2030]	LOADK    	R9 := 5.000000
	66	[2030]	CALL     	R7 3 1 ; R7(R8,R9)
	67	[2032]	GETGLOBAL	R7 K14 ; R7 := _T
	68	[2032]	SETTABLE 	R7 K15 K4 ; R7["TimerOfInterestEnded"] := nil
	69	[2034]	GETGLOBAL	R7 K1 ; R7 := 0xbe190284
	70	[2034]	SELF     	R7 R7 K16 ; R8 := R7; R7 := R7[0xffddf768]
	71	[2034]	MOVE     	R9 R0 ; R9 := R0
	72	[2034]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	73	[2036]	GETUPVAL 	R8 U1 ; R8 := U1
	74	[2036]	GETTABLE 	R8 R8 K7 ; R8 := R8["TimerOfInterest"]
	75	[2036]	TEST     	R8 0 ; if not R8 then PC := 82
	76	[2036]	JMP      	82 ; PC := 82
	77	[2037]	GETUPVAL 	R8 U1 ; R8 := U1
	78	[2037]	GETTABLE 	R8 R8 K7 ; R8 := R8["TimerOfInterest"]
	79	[2037]	GETTABLE 	R8 R8 K17 ; R8 := R8[0x8550d2a7]
	80	[2037]	MOVE     	R9 R7 ; R9 := R7
	81	[2037]	CALL     	R8 2 1 ; R8(R9)
	82	[2040]	GETGLOBAL	R8 K14 ; R8 := _T
	83	[2040]	GETTABLE 	R8 R8 K15 ; R8 := R8["TimerOfInterestEnded"]
	84	[2040]	TEST     	R8 1 ; if R8 then PC := 122
	85	[2040]	JMP      	122 ; PC := 122
	86	[2040]	LE       	0 R7 K12 ; if R7 > 0.000000 then PC := 122
	87	[2040]	JMP      	122 ; PC := 122
	88	[2042]	GETGLOBAL	R8 K0 ; R8 := 0x7b998233
	89	[2042]	GETGLOBAL	R9 K14 ; R9 := _T
	90	[2042]	GETTABLE 	R9 R9 K18 ; R9 := R9["missionTimerExpiryPortTrigger"]
	91	[2042]	CALL     	R8 2 2 ; R8 := R8(R9)
	92	[2042]	TEST     	R8 1 ; if R8 then PC := 102
	93	[2042]	JMP      	102 ; PC := 102
	94	[2043]	GETGLOBAL	R8 K14 ; R8 := _T
	95	[2043]	GETTABLE 	R8 R8 K18 ; R8 := R8["missionTimerExpiryPortTrigger"]
	96	[2043]	SELF     	R8 R8 K19 ; R9 := R8; R8 := R8[0x8eb2112d]
	97	[2043]	GETGLOBAL	R10 K5 ; R10 := 0x64fb1586
	98	[2043]	GETGLOBAL	R11 K14 ; R11 := _T
	99	[2043]	GETTABLE 	R11 R11 K20 ; R11 := R11["missionTimerExpiryPortCommand"]
	100	[2043]	CALL     	R10 2 0 ; R10,... := R10(R11)
	101	[2043]	CALL     	R8 0 1 ; R8(R9,...)
	102	[2047]	GETGLOBAL	R8 K1 ; R8 := 0xbe190284
	103	[2047]	SELF     	R8 R8 K21 ; R9 := R8; R8 := R8[0x4becc81a]
	104	[2047]	GETUPVAL 	R10 U1 ; R10 := U1
	105	[2047]	GETTABLE 	R10 R10 K7 ; R10 := R10["TimerOfInterest"]
	106	[2047]	GETTABLE 	R10 R10 K9 ; R10 := R10["MissionTimerName"]
	107	[2047]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	108	[2047]	TEST     	R8 0 ; if not R8 then PC := 120
	109	[2047]	JMP      	120 ; PC := 120
	110	[2048]	GETUPVAL 	R8 U1 ; R8 := U1
	111	[2048]	GETTABLE 	R8 R8 K7 ; R8 := R8["TimerOfInterest"]
	112	[2048]	GETTABLE 	R8 R8 K13 ; R8 := R8[0xe0cba3ca]
	113	[2048]	LOADK    	R9 K22 ; R9 := "/Lotus/Language/Menu/HUD_MissionFailed"
	114	[2048]	CALL     	R8 2 1 ; R8(R9)
	115	[2049]	GETUPVAL 	R8 U4 ; R8 := U4
	116	[2049]	SELF     	R8 R8 K23 ; R9 := R8; R8 := R8[0xbd2e96ea]
	117	[2049]	LOADK    	R10 := 1.500000
	118	[2049]	GETUPVAL 	R11 U5 ; R11 := U5
	119	[2049]	CALL     	R8 4 1 ; R8(R9,R10,R11)
	120	[2051]	GETGLOBAL	R8 K14 ; R8 := _T
	121	[2051]	SETTABLE 	R8 K15 K24 ; R8["TimerOfInterestEnded"] := true
	122	[2055]	GETUPVAL 	R8 U1 ; R8 := U1
	123	[2055]	GETTABLE 	R8 R8 K7 ; R8 := R8["TimerOfInterest"]
	124	[2055]	GETTABLE 	R8 R8 K25 ; R8 := R8["CurrentMessage"]
	125	[2055]	EQ       	1 R8 K4 ; if R8 == nil then PC := 149
	126	[2055]	JMP      	149 ; PC := 149
	127	[2055]	GETUPVAL 	R8 U1 ; R8 := U1
	128	[2055]	GETTABLE 	R8 R8 K7 ; R8 := R8["TimerOfInterest"]
	129	[2055]	GETTABLE 	R8 R8 K25 ; R8 := R8["CurrentMessage"]
	130	[2055]	EQ       	1 R8 R6 ; if R8 == R6 then PC := 149
	131	[2055]	JMP      	149 ; PC := 149
	132	[2056]	GETUPVAL 	R8 U1 ; R8 := U1
	133	[2056]	GETTABLE 	R8 R8 K7 ; R8 := R8["TimerOfInterest"]
	134	[2056]	GETTABLE 	R8 R8 K13 ; R8 := R8[0xe0cba3ca]
	135	[2056]	MOVE     	R9 R6 ; R9 := R6
	136	[2056]	LOADK    	R10 := 5.000000
	137	[2056]	CALL     	R8 3 1 ; R8(R9,R10)
	138	[2057]	JMP      	149 ; PC := 149
	139	[2058]	GETUPVAL 	R8 U1 ; R8 := U1
	140	[2058]	GETTABLE 	R8 R8 K7 ; R8 := R8["TimerOfInterest"]
	141	[2058]	EQ       	1 R8 K4 ; if R8 == nil then PC := 149
	142	[2058]	JMP      	149 ; PC := 149
	143	[2059]	GETUPVAL 	R8 U6 ; R8 := U6
	144	[2059]	GETUPVAL 	R9 U1 ; R9 := U1
	145	[2059]	GETTABLE 	R9 R9 K7 ; R9 := R9["TimerOfInterest"]
	146	[2059]	CALL     	R8 2 1 ; R8(R9)
	147	[2060]	GETUPVAL 	R8 U1 ; R8 := U1
	148	[2060]	SETTABLE 	R8 K7 K4 ; R8["TimerOfInterest"] := nil
	149	[2062]	RETURN   	R0 1 ; return 

function #90 <?:2066,2096> (88 instructions, 352 bytes at 000002111EA9D590)
1 param, 12 slots, 3 upvalues, 0 locals, 21 constants, 0 functions
	1	[2067]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[2067]	GETTABLE 	R1 R1 K1 ; R1 := R1["DisableAllTransmissions"]
	3	[2067]	TEST     	R1 0 ; if not R1 then PC := 6
	4	[2067]	JMP      	6 ; PC := 6
	5	[2068]	RETURN   	R0 1 ; return 
	6	[2071]	GETGLOBAL	R1 K2 ; R1 := 0xb009bbc6
	7	[2071]	MOVE     	R2 R0 ; R2 := R0
	8	[2071]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[2074]	GETGLOBAL	R2 K3 ; R2 := 0x7b998233
	10	[2074]	GETGLOBAL	R3 K0 ; R3 := _T
	11	[2074]	GETTABLE 	R3 R3 K4 ; R3 := R3["curTransmission"]
	12	[2074]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[2074]	TEST     	R2 1 ; if R2 then PC := 21
	14	[2074]	JMP      	21 ; PC := 21
	15	[2074]	GETGLOBAL	R2 K0 ; R2 := _T
	16	[2074]	GETTABLE 	R2 R2 K4 ; R2 := R2["curTransmission"]
	17	[2074]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0xed4e0128]
	18	[2074]	CALL     	R2 2 2 ; R2 := R2(R3)
	19	[2074]	EQ       	1 R2 R0 ; if R2 == R0 then PC := 22
	20	[2074]	JMP      	22 ; PC := 22
	21	[2074]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 22
	22	[2074]	OP_LOADBOOL	R2 1 0 ; R2 := true
	23	[2075]	TEST     	R2 1 ; if R2 then PC := 50
	24	[2075]	JMP      	50 ; PC := 50
	25	[2076]	LOADK    	R3 := 1.000000
	26	[2076]	GETGLOBAL	R4 K0 ; R4 := _T
	27	[2076]	GETTABLE 	R4 R4 K6 ; R4 := R4["QueuedTransmissions"]
	28	[2076]	LEN      	R4 R4 ; R4 := # R4
	29	[2076]	LOADK    	R5 := 1.000000
	30	[2076]	FORPREP  	R3 49 ; R3 -= R5; PC := 49
	31	[2077]	GETGLOBAL	R7 K3 ; R7 := 0x7b998233
	32	[2077]	GETGLOBAL	R8 K0 ; R8 := _T
	33	[2077]	GETTABLE 	R8 R8 K6 ; R8 := R8["QueuedTransmissions"]
	34	[2077]	GETTABLE 	R8 R8 R6 ; R8 := R8[R6]
	35	[2077]	GETTABLE 	R8 R8 K7 ; R8 := R8["Transmission"]
	36	[2077]	CALL     	R7 2 2 ; R7 := R7(R8)
	37	[2077]	TEST     	R7 1 ; if R7 then PC := 49
	38	[2077]	JMP      	49 ; PC := 49
	39	[2077]	GETGLOBAL	R7 K0 ; R7 := _T
	40	[2077]	GETTABLE 	R7 R7 K6 ; R7 := R7["QueuedTransmissions"]
	41	[2077]	GETTABLE 	R7 R7 R6 ; R7 := R7[R6]
	42	[2077]	GETTABLE 	R7 R7 K7 ; R7 := R7["Transmission"]
	43	[2077]	SELF     	R7 R7 K5 ; R8 := R7; R7 := R7[0xed4e0128]
	44	[2077]	CALL     	R7 2 2 ; R7 := R7(R8)
	45	[2077]	EQ       	0 R7 R0 ; if R7 ~= R0 then PC := 49
	46	[2077]	JMP      	49 ; PC := 49
	47	[2078]	OP_LOADBOOL	R2 1 0 ; R2 := true
	48	[2079]	JMP      	50 ; PC := 50
	49	[2076]	FORLOOP  	R3 31 ; R3 += R5; if R3 <= R4 then begin PC := 31; R6 := R3 end
	50	[2084]	TEST     	R2 1 ; if R2 then PC := 88
	51	[2084]	JMP      	88 ; PC := 88
	52	[2085]	GETUPVAL 	R7 U0 ; R7 := U0
	53	[2085]	GETTABLE 	R7 R7 K8 ; R7 := R7[0x1f60d532]
	54	[2085]	MOVE     	R8 R1 ; R8 := R1
	55	[2085]	GETUPVAL 	R9 U1 ; R9 := U1
	56	[2085]	SELF     	R9 R9 K9 ; R10 := R9; R9 := R9[0x816beb43]
	57	[2085]	CALL     	R9 2 0 ; R9,... := R9(R10)
	58	[2085]	CALL     	R7 0 1 ; R7(R8,...)
	59	[2086]	GETUPVAL 	R7 U2 ; R7 := U2
	60	[2086]	SELF     	R8 R1 K11 ; R9 := R1; R8 := R1[0xd325c0ea]
	61	[2086]	CALL     	R8 2 2 ; R8 := R8(R9)
	62	[2086]	SETTABLE 	R7 K10 R8 ; R7["mTransOnRightSide"] := R8
	63	[2088]	GETGLOBAL	R7 K12 ; R7 := 0x3d106989
	64	[2088]	LOADK    	R8 K13 ; R8 := "Queued a transmission from Hud: "
	65	[2088]	MOVE     	R9 R0 ; R9 := R0
	66	[2088]	CONCAT   	R8 R8 R9 ; R8 := R8 .. R9
	67	[2088]	CALL     	R7 2 1 ; R7(R8)
	68	[2090]	GETGLOBAL	R7 K14 ; R7 := 0x9ba7909f
	69	[2090]	SELF     	R7 R7 K15 ; R8 := R7; R7 := R7[0xbcfb64ab]
	70	[2090]	GETGLOBAL	R9 K16 ; R9 := 0x0032441c
	71	[2090]	GETTABLE 	R9 R9 K17 ; R9 := R9["UIMovie_TransmissionMovie"]
	72	[2090]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	73	[2091]	GETGLOBAL	R8 K18 ; R8 := 0x60cce7b4
	74	[2091]	GETGLOBAL	R9 K3 ; R9 := 0x7b998233
	75	[2091]	MOVE     	R10 R7 ; R10 := R7
	76	[2091]	CALL     	R9 2 2 ; R9 := R9(R10)
	77	[2091]	NOT      	R9 R9 ; R9 := not R9
	78	[2091]	CALL     	R8 2 1 ; R8(R9)
	79	[2092]	GETGLOBAL	R8 K3 ; R8 := 0x7b998233
	80	[2092]	MOVE     	R9 R7 ; R9 := R7
	81	[2092]	CALL     	R8 2 2 ; R8 := R8(R9)
	82	[2092]	TEST     	R8 1 ; if R8 then PC := 88
	83	[2092]	JMP      	88 ; PC := 88
	84	[2093]	SELF     	R8 R7 K19 ; R9 := R7; R8 := R7[0xe4162eed]
	85	[2093]	LOADK    	R10 K20 ; R10 := "TransmissionQueuedFromHud"
	86	[2093]	MOVE     	R11 R0 ; R11 := R0
	87	[2093]	CALL     	R8 4 1 ; R8(R9,R10,R11)
	88	[2096]	RETURN   	R0 1 ; return 

function #91 <?:2098,2100> (17 instructions, 68 bytes at 000002112D88D480)
1 param, 4 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[2099]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[2099]	MOVE     	R2 R0 ; R2 := R0
	3	[2099]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2099]	TEST     	R1 1 ; if R1 then PC := 11
	5	[2099]	JMP      	11 ; PC := 11
	6	[2099]	SELF     	R1 R0 K1 ; R2 := R0; R1 := R0[0xf2deaf69]
	7	[2099]	GETGLOBAL	R3 K2 ; R3 := gLotusAvatarType
	8	[2099]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	9	[2099]	TEST     	R1 0 ; if not R1 then PC := 15
	10	[2099]	JMP      	15 ; PC := 15
	11	[2099]	SELF     	R1 R0 K3 ; R2 := R0; R1 := R0[0xdcb64a96]
	12	[2099]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[2099]	JMP      	16 ; PC := 16
	14	[2099]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 15
	15	[2099]	OP_LOADBOOL	R1 1 0 ; R1 := true
	16	[2099]	RETURN   	R1 2 ; return R1 
	17	[2100]	RETURN   	R0 1 ; return 

function #92 <?:2102,2158> (223 instructions, 892 bytes at 0000021124985FB0)
0 params, 9 slots, 9 upvalues, 0 locals, 41 constants, 0 functions
	1	[2103]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2103]	SELF     	R0 R0 K0 ; R1 := R0; R0 := R0[0xbb610e5b]
	3	[2103]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[2104]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	5	[2104]	GETUPVAL 	R2 U1 ; R2 := U1
	6	[2104]	GETTABLE 	R2 R2 K2 ; R2 := R2["avatar"]
	7	[2104]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[2104]	TEST     	R1 1 ; if R1 then PC := 180
	9	[2104]	JMP      	180 ; PC := 180
	10	[2104]	GETUPVAL 	R1 U1 ; R1 := U1
	11	[2104]	GETTABLE 	R1 R1 K2 ; R1 := R1["avatar"]
	12	[2104]	EQ       	1 R1 R0 ; if R1 == R0 then PC := 180
	13	[2104]	JMP      	180 ; PC := 180
	14	[2104]	GETUPVAL 	R1 U2 ; R1 := U2
	15	[2104]	GETTABLE 	R1 R1 K3 ; R1 := R1["UIMode"]
	16	[2104]	GETUPVAL 	R2 U3 ; R2 := U3
	17	[2104]	GETTABLE 	R2 R2 K4 ; R2 := R2["UI_MODE_IN_SPACE_HUB"]
	18	[2104]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 27
	19	[2104]	JMP      	27 ; PC := 27
	20	[2104]	GETGLOBAL	R1 K5 ; R1 := 0xbe190284
	21	[2104]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0xd6573683]
	22	[2104]	GETUPVAL 	R3 U1 ; R3 := U1
	23	[2104]	GETTABLE 	R3 R3 K2 ; R3 := R3["avatar"]
	24	[2104]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	25	[2104]	TEST     	R1 1 ; if R1 then PC := 180
	26	[2104]	JMP      	180 ; PC := 180
	27	[2105]	GETUPVAL 	R1 U1 ; R1 := U1
	28	[2105]	GETTABLE 	R1 R1 K2 ; R1 := R1["avatar"]
	29	[2105]	SELF     	R1 R1 K7 ; R2 := R1; R1 := R1[0x22da1852]
	30	[2105]	CALL     	R1 2 2 ; R1 := R1(R2)
	31	[2106]	GETUPVAL 	R2 U4 ; R2 := U4
	32	[2106]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 40
	33	[2106]	JMP      	40 ; PC := 40
	34	[2106]	GETUPVAL 	R2 U5 ; R2 := U5
	35	[2106]	GETUPVAL 	R3 U1 ; R3 := U1
	36	[2106]	GETTABLE 	R3 R3 K2 ; R3 := R3["avatar"]
	37	[2106]	CALL     	R2 2 2 ; R2 := R2(R3)
	38	[2106]	TEST     	R2 1 ; if R2 then PC := 41
	39	[2106]	JMP      	41 ; PC := 41
	40	[2107]	RETURN   	R0 1 ; return 
	41	[2109]	GETUPVAL 	R2 U1 ; R2 := U1
	42	[2109]	SETTABLE 	R2 K8 K9 ; R2["valid"] := true
	43	[2110]	GETUPVAL 	R2 U1 ; R2 := U1
	44	[2110]	GETUPVAL 	R3 U1 ; R3 := U1
	45	[2110]	GETTABLE 	R3 R3 K2 ; R3 := R3["avatar"]
	46	[2110]	SELF     	R3 R3 K11 ; R4 := R3; R3 := R3[0x5e651723]
	47	[2110]	CALL     	R3 2 2 ; R3 := R3(R4)
	48	[2110]	SETTABLE 	R2 K10 R3 ; R2["player"] := R3
	49	[2111]	OP_LOADBOOL	R2 0 0 ; R2 := false
	50	[2112]	GETGLOBAL	R3 K12 ; R3 := 0x34291f5c
	51	[2112]	GETTABLE 	R3 R3 K13 ; R3 := R3[0x1467d5f4]
	52	[2112]	CALL     	R3 1 2 ; R3 := R3()
	53	[2112]	TEST     	R3 0 ; if not R3 then PC := 64
	54	[2112]	JMP      	64 ; PC := 64
	55	[2113]	GETGLOBAL	R3 K14 ; R3 := 0x9ba7909f
	56	[2113]	SELF     	R3 R3 K15 ; R4 := R3; R3 := R3[0xa50d1a6a]
	57	[2113]	LOADK    	R5 K16 ; R5 := "INSPECT"
	58	[2113]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	59	[2113]	EQ       	0 R3 K17 ; if R3 ~= "" then PC := 62
	60	[2113]	JMP      	62 ; PC := 62
	61	[2113]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 62
	62	[2113]	OP_LOADBOOL	R2 1 0 ; R2 := true
	63	[2113]	JMP      	73 ; PC := 73
	64	[2115]	GETGLOBAL	R3 K14 ; R3 := 0x9ba7909f
	65	[2115]	SELF     	R3 R3 K18 ; R4 := R3; R3 := R3[0x9e473958]
	66	[2115]	LOADK    	R5 K16 ; R5 := "INSPECT"
	67	[2115]	OP_LOADBOOL	R6 0 0 ; R6 := false
	68	[2115]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	69	[2115]	EQ       	0 R3 K19 ; if R3 ~= nil then PC := 72
	70	[2115]	JMP      	72 ; PC := 72
	71	[2115]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 72
	72	[2115]	OP_LOADBOOL	R2 1 0 ; R2 := true
	73	[2117]	GETGLOBAL	R3 K1 ; R3 := 0x7b998233
	74	[2117]	GETUPVAL 	R4 U1 ; R4 := U1
	75	[2117]	GETTABLE 	R4 R4 K10 ; R4 := R4["player"]
	76	[2117]	CALL     	R3 2 2 ; R3 := R3(R4)
	77	[2117]	TEST     	R3 1 ; if R3 then PC := 87
	78	[2117]	JMP      	87 ; PC := 87
	79	[2117]	GETUPVAL 	R3 U1 ; R3 := U1
	80	[2117]	GETTABLE 	R3 R3 K2 ; R3 := R3["avatar"]
	81	[2117]	SELF     	R3 R3 K20 ; R4 := R3; R3 := R3[0x808b79e6]
	82	[2117]	CALL     	R3 2 2 ; R3 := R3(R4)
	83	[2117]	SELF     	R4 R0 K20 ; R5 := R0; R4 := R0[0x808b79e6]
	84	[2117]	CALL     	R4 2 2 ; R4 := R4(R5)
	85	[2117]	EQ       	1 R3 R4 ; if R3 == R4 then PC := 162
	86	[2117]	JMP      	162 ; PC := 162
	87	[2118]	GETUPVAL 	R3 U1 ; R3 := U1
	88	[2118]	GETUPVAL 	R4 U1 ; R4 := U1
	89	[2118]	GETTABLE 	R4 R4 K2 ; R4 := R4["avatar"]
	90	[2118]	SELF     	R4 R4 K22 ; R5 := R4; R4 := R4[0xdff9d2a7]
	91	[2118]	CALL     	R4 2 2 ; R4 := R4(R5)
	92	[2118]	SETTABLE 	R3 K21 R4 ; R3["name"] := R4
	93	[2119]	GETUPVAL 	R3 U1 ; R3 := U1
	94	[2119]	GETUPVAL 	R4 U1 ; R4 := U1
	95	[2119]	GETTABLE 	R4 R4 K2 ; R4 := R4["avatar"]
	96	[2119]	SELF     	R4 R4 K24 ; R5 := R4; R4 := R4[0x0f3c38bd]
	97	[2119]	CALL     	R4 2 2 ; R4 := R4(R5)
	98	[2119]	SELF     	R4 R4 K25 ; R5 := R4; R4 := R4[0x6d604ba7]
	99	[2119]	CALL     	R4 2 2 ; R4 := R4(R5)
	100	[2119]	SETTABLE 	R3 K23 R4 ; R3["desc"] := R4
	101	[2120]	GETGLOBAL	R3 K26 ; R3 := 0x7f5022cf
	102	[2120]	GETTABLE 	R3 R3 K27 ; R3 := R3[0x41e2ae25]
	103	[2120]	GETUPVAL 	R4 U1 ; R4 := U1
	104	[2120]	GETTABLE 	R4 R4 K23 ; R4 := R4["desc"]
	105	[2120]	CALL     	R3 2 2 ; R3 := R3(R4)
	106	[2120]	LT       	0 K28 R3 ; if 0.000000 >= R3 then PC := 117
	107	[2120]	JMP      	117 ; PC := 117
	108	[2121]	GETUPVAL 	R3 U1 ; R3 := U1
	109	[2121]	GETGLOBAL	R4 K29 ; R4 := 0xae91e43b
	110	[2121]	SELF     	R4 R4 K30 ; R5 := R4; R4 := R4[0x42b04007]
	111	[2121]	GETUPVAL 	R6 U1 ; R6 := U1
	112	[2121]	GETTABLE 	R6 R6 K23 ; R6 := R6["desc"]
	113	[2121]	OP_LOADBOOL	R7 1 0 ; R7 := true
	114	[2121]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	115	[2121]	SETTABLE 	R3 K23 R4 ; R3["desc"] := R4
	116	[2121]	JMP      	186 ; PC := 186
	117	[2122]	GETUPVAL 	R3 U1 ; R3 := U1
	118	[2122]	GETTABLE 	R3 R3 K21 ; R3 := R3["name"]
	119	[2122]	EQ       	1 R3 K17 ; if R3 == "" then PC := 186
	120	[2122]	JMP      	186 ; PC := 186
	121	[2122]	TEST     	R2 0 ; if not R2 then PC := 186
	122	[2122]	JMP      	186 ; PC := 186
	123	[2124]	LOADNIL  	R3 R3 ; R3 := nil
	124	[2125]	GETUPVAL 	R4 U6 ; R4 := U6
	125	[2125]	CALL     	R4 1 2 ; R4 := R4()
	126	[2125]	TEST     	R4 1 ; if R4 then PC := 134
	127	[2125]	JMP      	134 ; PC := 134
	128	[2125]	GETUPVAL 	R4 U2 ; R4 := U2
	129	[2125]	GETTABLE 	R4 R4 K3 ; R4 := R4["UIMode"]
	130	[2125]	GETUPVAL 	R5 U3 ; R5 := U3
	131	[2125]	GETTABLE 	R5 R5 K31 ; R5 := R5["UI_MODE_IN_DOJO"]
	132	[2125]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 141
	133	[2125]	JMP      	141 ; PC := 141
	134	[2126]	GETUPVAL 	R4 U7 ; R4 := U7
	135	[2126]	SELF     	R4 R4 K32 ; R5 := R4; R4 := R4[0x6566f2d4]
	136	[2126]	GETUPVAL 	R6 U1 ; R6 := U1
	137	[2126]	GETTABLE 	R6 R6 K2 ; R6 := R6["avatar"]
	138	[2126]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	139	[2126]	MOVE     	R3 R4 ; R3 := R4
	140	[2126]	JMP      	152 ; PC := 152
	141	[2127]	GETGLOBAL	R4 K1 ; R4 := 0x7b998233
	142	[2127]	GETUPVAL 	R5 U1 ; R5 := U1
	143	[2127]	GETTABLE 	R5 R5 K10 ; R5 := R5["player"]
	144	[2127]	CALL     	R4 2 2 ; R4 := R4(R5)
	145	[2127]	TEST     	R4 1 ; if R4 then PC := 152
	146	[2127]	JMP      	152 ; PC := 152
	147	[2128]	GETUPVAL 	R4 U1 ; R4 := U1
	148	[2128]	GETTABLE 	R4 R4 K10 ; R4 := R4["player"]
	149	[2128]	SELF     	R4 R4 K33 ; R5 := R4; R4 := R4[0x1020015e]
	150	[2128]	CALL     	R4 2 2 ; R4 := R4(R5)
	151	[2128]	MOVE     	R3 R4 ; R3 := R4
	152	[2131]	EQ       	1 R3 K17 ; if R3 == "" then PC := 186
	153	[2131]	JMP      	186 ; PC := 186
	154	[2132]	GETUPVAL 	R4 U1 ; R4 := U1
	155	[2132]	GETGLOBAL	R5 K29 ; R5 := 0xae91e43b
	156	[2132]	SELF     	R5 R5 K30 ; R6 := R5; R5 := R5[0x42b04007]
	157	[2132]	LOADK    	R7 K34 ; R7 := "/Lotus/Language/Menu/InspectPlayer"
	158	[2132]	OP_LOADBOOL	R8 1 0 ; R8 := true
	159	[2132]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	160	[2132]	SETTABLE 	R4 K23 R5 ; R4["desc"] := R5
	161	[2134]	JMP      	186 ; PC := 186
	162	[2136]	GETUPVAL 	R4 U1 ; R4 := U1
	163	[2136]	GETUPVAL 	R5 U8 ; R5 := U8
	164	[2136]	GETUPVAL 	R6 U1 ; R6 := U1
	165	[2136]	GETTABLE 	R6 R6 K10 ; R6 := R6["player"]
	166	[2136]	CALL     	R5 2 2 ; R5 := R5(R6)
	167	[2136]	SETTABLE 	R4 K21 R5 ; R4["name"] := R5
	168	[2137]	GETUPVAL 	R4 U1 ; R4 := U1
	169	[2137]	SETTABLE 	R4 K35 K9 ; R4["sameFaction"] := true
	170	[2139]	TEST     	R2 0 ; if not R2 then PC := 186
	171	[2139]	JMP      	186 ; PC := 186
	172	[2140]	GETUPVAL 	R4 U1 ; R4 := U1
	173	[2140]	GETGLOBAL	R5 K29 ; R5 := 0xae91e43b
	174	[2140]	SELF     	R5 R5 K30 ; R6 := R5; R5 := R5[0x42b04007]
	175	[2140]	LOADK    	R7 K34 ; R7 := "/Lotus/Language/Menu/InspectPlayer"
	176	[2140]	OP_LOADBOOL	R8 1 0 ; R8 := true
	177	[2140]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	178	[2140]	SETTABLE 	R4 K23 R5 ; R4["desc"] := R5
	179	[2142]	JMP      	186 ; PC := 186
	180	[2144]	GETUPVAL 	R4 U1 ; R4 := U1
	181	[2144]	SETTABLE 	R4 K10 K19 ; R4["player"] := nil
	182	[2145]	GETUPVAL 	R4 U1 ; R4 := U1
	183	[2145]	SETTABLE 	R4 K35 K36 ; R4["sameFaction"] := false
	184	[2147]	GETUPVAL 	R4 U1 ; R4 := U1
	185	[2147]	SETTABLE 	R4 K21 K17 ; R4["name"] := ""
	186	[2150]	GETGLOBAL	R4 K29 ; R4 := 0xae91e43b
	187	[2150]	SELF     	R4 R4 K37 ; R5 := R4; R4 := R4[0x5f56eeab]
	188	[2150]	LOADK    	R6 K38 ; R6 := "TargetStatus.Name"
	189	[2150]	LOADK    	R7 := 29.000000
	190	[2150]	GETUPVAL 	R8 U1 ; R8 := U1
	191	[2150]	GETTABLE 	R8 R8 K21 ; R8 := R8["name"]
	192	[2150]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	193	[2151]	GETGLOBAL	R4 K29 ; R4 := 0xae91e43b
	194	[2151]	SELF     	R4 R4 K39 ; R5 := R4; R4 := R4[0xaade900e]
	195	[2151]	LOADK    	R6 K38 ; R6 := "TargetStatus.Name"
	196	[2151]	LOADK    	R7 := 11.000000
	197	[2151]	OP_LOADBOOL	R8 1 0 ; R8 := true
	198	[2151]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	199	[2152]	GETUPVAL 	R4 U1 ; R4 := U1
	200	[2152]	GETTABLE 	R4 R4 K23 ; R4 := R4["desc"]
	201	[2152]	EQ       	1 R4 K19 ; if R4 == nil then PC := 217
	202	[2152]	JMP      	217 ; PC := 217
	203	[2153]	GETGLOBAL	R4 K29 ; R4 := 0xae91e43b
	204	[2153]	SELF     	R4 R4 K37 ; R5 := R4; R4 := R4[0x5f56eeab]
	205	[2153]	LOADK    	R6 K40 ; R6 := "TargetStatus.Desc"
	206	[2153]	LOADK    	R7 := 29.000000
	207	[2153]	GETUPVAL 	R8 U1 ; R8 := U1
	208	[2153]	GETTABLE 	R8 R8 K23 ; R8 := R8["desc"]
	209	[2153]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	210	[2154]	GETGLOBAL	R4 K29 ; R4 := 0xae91e43b
	211	[2154]	SELF     	R4 R4 K39 ; R5 := R4; R4 := R4[0xaade900e]
	212	[2154]	LOADK    	R6 K40 ; R6 := "TargetStatus.Desc"
	213	[2154]	LOADK    	R7 := 11.000000
	214	[2154]	OP_LOADBOOL	R8 1 0 ; R8 := true
	215	[2154]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	216	[2154]	JMP      	223 ; PC := 223
	217	[2156]	GETGLOBAL	R4 K29 ; R4 := 0xae91e43b
	218	[2156]	SELF     	R4 R4 K39 ; R5 := R4; R4 := R4[0xaade900e]
	219	[2156]	LOADK    	R6 K40 ; R6 := "TargetStatus.Desc"
	220	[2156]	LOADK    	R7 := 11.000000
	221	[2156]	OP_LOADBOOL	R8 0 0 ; R8 := false
	222	[2156]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	223	[2158]	RETURN   	R0 1 ; return 

function #93 <?:2160,2178> (40 instructions, 160 bytes at 0000021125702250)
0 params, 8 slots, 4 upvalues, 0 locals, 15 constants, 0 functions
	1	[2161]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2161]	SELF     	R0 R0 K0 ; R1 := R0; R0 := R0[0xbb610e5b]
	3	[2161]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[2162]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	5	[2162]	MOVE     	R2 R0 ; R2 := R0
	6	[2162]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[2162]	TEST     	R1 0 ; if not R1 then PC := 10
	8	[2162]	JMP      	10 ; PC := 10
	9	[2163]	RETURN   	R0 1 ; return 
	10	[2165]	SELF     	R1 R0 K2 ; R2 := R0; R1 := R0[0xde321e6f]
	11	[2165]	CALL     	R1 2 2 ; R1 := R1(R2)
	12	[2165]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x7c09e541]
	13	[2165]	CALL     	R1 2 2 ; R1 := R1(R2)
	14	[2166]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	15	[2166]	MOVE     	R3 R1 ; R3 := R1
	16	[2166]	CALL     	R2 2 2 ; R2 := R2(R3)
	17	[2166]	TEST     	R2 0 ; if not R2 then PC := 20
	18	[2166]	JMP      	20 ; PC := 20
	19	[2167]	RETURN   	R0 1 ; return 
	20	[2170]	GETUPVAL 	R2 U1 ; R2 := U1
	21	[2170]	SETTABLE 	R2 K4 K5 ; R2["valid"] := false
	22	[2171]	GETUPVAL 	R2 U1 ; R2 := U1
	23	[2171]	SETTABLE 	R2 K6 K7 ; R2["name"] := ""
	24	[2172]	GETUPVAL 	R2 U1 ; R2 := U1
	25	[2172]	SETTABLE 	R2 K8 K9 ; R2["desc"] := nil
	26	[2173]	GETUPVAL 	R2 U1 ; R2 := U1
	27	[2173]	SETTABLE 	R2 K10 K9 ; R2["player"] := nil
	28	[2175]	GETUPVAL 	R2 U1 ; R2 := U1
	29	[2175]	GETUPVAL 	R3 U1 ; R3 := U1
	30	[2175]	GETUPVAL 	R4 U1 ; R4 := U1
	31	[2175]	GETUPVAL 	R5 U2 ; R5 := U2
	32	[2175]	GETTABLE 	R5 R5 K14 ; R5 := R5[0xdb2e16e9]
	33	[2175]	MOVE     	R6 R1 ; R6 := R1
	34	[2175]	CALL     	R5 2 4 ; R5,R6,R7 := R5(R6)
	35	[2175]	SETTABLE 	R4 K13 R7 ; R4["hitProxy"] := R7
	36	[2175]	SETTABLE 	R3 K12 R6 ; R3["avatar"] := R6
	37	[2175]	SETTABLE 	R2 K11 R5 ; R2["deco"] := R5
	38	[2177]	GETUPVAL 	R2 U3 ; R2 := U3
	39	[2177]	CALL     	R2 1 1 ; R2()
	40	[2178]	RETURN   	R0 1 ; return 

function #94 <?:2180,2195> (58 instructions, 232 bytes at 00000211256D6B60)
0 params, 7 slots, 5 upvalues, 0 locals, 17 constants, 0 functions
	1	[2181]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[2181]	NEWTABLE 	R1 0 3 ; R1 := {}
	3	[2181]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2181]	SETTABLE 	R1 K2 R2 ; R1["Avatar"] := R2
	5	[2181]	GETUPVAL 	R2 U1 ; R2 := U1
	6	[2181]	SETTABLE 	R1 K3 R2 ; R1["Controllers"] := R2
	7	[2181]	GETUPVAL 	R2 U2 ; R2 := U2
	8	[2181]	SETTABLE 	R1 K4 R2 ; R1["Weapon"] := R2
	9	[2181]	SETTABLE 	R0 K1 R1 ; R0["ScanUpdateParms"] := R1
	10	[2182]	GETGLOBAL	R0 K5 ; R0 := 0x7b998233
	11	[2182]	GETUPVAL 	R1 U3 ; R1 := U3
	12	[2182]	CALL     	R0 2 2 ; R0 := R0(R1)
	13	[2182]	TEST     	R0 0 ; if not R0 then PC := 34
	14	[2182]	JMP      	34 ; PC := 34
	15	[2183]	GETGLOBAL	R0 K6 ; R0 := 0xae91e43b
	16	[2183]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0xcd73323e]
	17	[2183]	CALL     	R0 2 2 ; R0 := R0(R1)
	18	[2184]	GETGLOBAL	R1 K5 ; R1 := 0x7b998233
	19	[2184]	MOVE     	R2 R0 ; R2 := R0
	20	[2184]	CALL     	R1 2 2 ; R1 := R1(R2)
	21	[2184]	TEST     	R1 0 ; if not R1 then PC := 24
	22	[2184]	JMP      	24 ; PC := 24
	23	[2185]	RETURN   	R0 1 ; return 
	24	[2187]	SELF     	R1 R0 K8 ; R2 := R0; R1 := R0[0x6d7bfacb]
	25	[2187]	OP_LOADBOOL	R3 0 0 ; R3 := false
	26	[2187]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	27	[2187]	SETUPVAL 	R1 U3 ; U3 := R1
	28	[2188]	GETGLOBAL	R1 K5 ; R1 := 0x7b998233
	29	[2188]	GETUPVAL 	R2 U3 ; R2 := U3
	30	[2188]	CALL     	R1 2 2 ; R1 := R1(R2)
	31	[2188]	TEST     	R1 0 ; if not R1 then PC := 34
	32	[2188]	JMP      	34 ; PC := 34
	33	[2189]	RETURN   	R0 1 ; return 
	34	[2192]	GETUPVAL 	R1 U3 ; R1 := U3
	35	[2192]	SELF     	R1 R1 K9 ; R2 := R1; R1 := R1[0x59a9b745]
	36	[2192]	CALL     	R1 2 2 ; R1 := R1(R2)
	37	[2193]	GETGLOBAL	R2 K0 ; R2 := _T
	38	[2193]	GETTABLE 	R2 R2 K1 ; R2 := R2["ScanUpdateParms"]
	39	[2193]	NEWTABLE 	R3 0 4 ; R3 := {}
	40	[2193]	GETTABLE 	R4 R1 K11 ; R4 := R1["mActive"]
	41	[2193]	SETTABLE 	R3 K11 R4 ; R3["mActive"] := R4
	42	[2193]	GETTABLE 	R4 R1 K12 ; R4 := R1["mPtr"]
	43	[2193]	SETTABLE 	R3 K12 R4 ; R3["mPtr"] := R4
	44	[2193]	GETTABLE 	R4 R1 K13 ; R4 := R1["mAvatar"]
	45	[2193]	SETTABLE 	R3 K13 R4 ; R3["mAvatar"] := R4
	46	[2193]	GETTABLE 	R4 R1 K14 ; R4 := R1["mName"]
	47	[2193]	SETTABLE 	R3 K14 R4 ; R3["mName"] := R4
	48	[2193]	SETTABLE 	R2 K10 R3 ; R2["CurrentTarget"] := R3
	49	[2194]	GETGLOBAL	R2 K0 ; R2 := _T
	50	[2194]	GETTABLE 	R2 R2 K1 ; R2 := R2["ScanUpdateParms"]
	51	[2194]	GETUPVAL 	R3 U4 ; R3 := U4
	52	[2194]	GETTABLE 	R3 R3 K16 ; R3 := R3[0x06d055f9]
	53	[2194]	GETTABLE 	R4 R1 K11 ; R4 := R1["mActive"]
	54	[2194]	LOADK    	R5 := 1.000000
	55	[2194]	LOADNIL  	R6 R6 ; R6 := nil
	56	[2194]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	57	[2194]	SETTABLE 	R2 K15 R3 ; R2["ActiveTargetIndex"] := R3
	58	[2195]	RETURN   	R0 1 ; return 

function #95 <?:2197,2199> (3 instructions, 12 bytes at 0000021115AB0580)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2198]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2198]	CALL     	R0 1 1 ; R0()
	3	[2199]	RETURN   	R0 1 ; return 

function #96 <?:2202,2228> (67 instructions, 268 bytes at 000002112A2436F0)
1 param, 8 slots, 4 upvalues, 0 locals, 18 constants, 1 function
	1	[2203]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2203]	GETUPVAL 	R2 U1 ; R2 := U1
	3	[2203]	LOADK    	R3 K1 ; R3 := "HRVoidTearList"
	4	[2203]	GETUPVAL 	R4 U2 ; R4 := U2
	5	[2203]	GETTABLE 	R4 R4 K2 ; R4 := R4["HT_ICON_BAR"]
	6	[2203]	LOADK    	R5 := 0.500000
	7	[2203]	LOADK    	R6 := 1.000000
	8	[2203]	OP_LOADBOOL	R7 0 0 ; R7 := false
	9	[2203]	CALL     	R2 6 2 ; R2 := R2(R3,R4,R5,R6,R7)
	10	[2203]	SETTABLE 	R1 K0 R2 ; R1["VoidTearListTracker"] := R2
	11	[2204]	GETUPVAL 	R1 U0 ; R1 := U0
	12	[2204]	GETTABLE 	R1 R1 K0 ; R1 := R1["VoidTearListTracker"]
	13	[2204]	GETTABLE 	R1 R1 K3 ; R1 := R1[0xb7ae3621]
	14	[2204]	LOADK    	R2 := 0.000000
	15	[2204]	LOADK    	R3 := -15.000000
	16	[2204]	CALL     	R1 3 1 ; R1(R2,R3)
	17	[2205]	GETUPVAL 	R1 U0 ; R1 := U0
	18	[2205]	GETTABLE 	R1 R1 K0 ; R1 := R1["VoidTearListTracker"]
	19	[2205]	GETTABLE 	R1 R1 K4 ; R1 := R1["List"]
	20	[2205]	SETTABLE 	R1 K5 K6 ; R1["mCurrProgress"] := 0.000000
	21	[2206]	GETUPVAL 	R1 U0 ; R1 := U0
	22	[2206]	GETTABLE 	R1 R1 K0 ; R1 := R1["VoidTearListTracker"]
	23	[2206]	GETTABLE 	R1 R1 K4 ; R1 := R1["List"]
	24	[2206]	GETUPVAL 	R2 U3 ; R2 := U3
	25	[2206]	GETTABLE 	R2 R2 K8 ; R2 := R2[0x8bcd12b6]
	26	[2206]	GETGLOBAL	R3 K9 ; R3 := 0x0032441c
	27	[2206]	GETTABLE 	R3 R3 K10 ; R3 := R3["UIColor_Red"]
	28	[2206]	CALL     	R2 2 2 ; R2 := R2(R3)
	29	[2206]	SETTABLE 	R1 K7 R2 ; R1["mCompletedColorObj"] := R2
	30	[2207]	GETUPVAL 	R1 U0 ; R1 := U0
	31	[2207]	GETTABLE 	R1 R1 K0 ; R1 := R1["VoidTearListTracker"]
	32	[2207]	GETTABLE 	R1 R1 K11 ; R1 := R1[0x6608b24b]
	33	[2219]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	34	[2219]	GETUPVAL 	R0 U3 ; R0 := U3
	35	[2207]	CALL     	R1 2 1 ; R1(R2)
	36	[2221]	GETUPVAL 	R1 U0 ; R1 := U0
	37	[2221]	GETTABLE 	R1 R1 K0 ; R1 := R1["VoidTearListTracker"]
	38	[2221]	GETTABLE 	R1 R1 K12 ; R1 := R1[0xbe9ad86f]
	39	[2221]	CALL     	R1 1 1 ; R1()
	40	[2222]	GETUPVAL 	R1 U0 ; R1 := U0
	41	[2222]	GETTABLE 	R1 R1 K0 ; R1 := R1["VoidTearListTracker"]
	42	[2222]	GETTABLE 	R1 R1 K4 ; R1 := R1["List"]
	43	[2222]	SELF     	R1 R1 K13 ; R2 := R1; R1 := R1[0x71e9ac81]
	44	[2222]	CALL     	R1 2 1 ; R1(R2)
	45	[2224]	GETGLOBAL	R1 K14 ; R1 := 0x7b998233
	46	[2224]	GETUPVAL 	R2 U0 ; R2 := U0
	47	[2224]	GETTABLE 	R2 R2 K15 ; R2 := R2["VoidTearTitleTracker"]
	48	[2224]	CALL     	R1 2 2 ; R1 := R1(R2)
	49	[2224]	TEST     	R1 0 ; if not R1 then PC := 67
	50	[2224]	JMP      	67 ; PC := 67
	51	[2225]	GETUPVAL 	R1 U0 ; R1 := U0
	52	[2225]	GETUPVAL 	R2 U1 ; R2 := U1
	53	[2225]	LOADK    	R3 K16 ; R3 := "HRVoidTearTitle"
	54	[2225]	GETUPVAL 	R4 U2 ; R4 := U2
	55	[2225]	GETTABLE 	R4 R4 K17 ; R4 := R4["HT_LABEL"]
	56	[2225]	LOADK    	R5 := 0.500000
	57	[2225]	LOADK    	R6 := 1.000000
	58	[2225]	OP_LOADBOOL	R7 0 0 ; R7 := false
	59	[2225]	CALL     	R2 6 2 ; R2 := R2(R3,R4,R5,R6,R7)
	60	[2225]	SETTABLE 	R1 K15 R2 ; R1["VoidTearTitleTracker"] := R2
	61	[2226]	GETUPVAL 	R1 U0 ; R1 := U0
	62	[2226]	GETTABLE 	R1 R1 K15 ; R1 := R1["VoidTearTitleTracker"]
	63	[2226]	GETTABLE 	R1 R1 K3 ; R1 := R1[0xb7ae3621]
	64	[2226]	LOADK    	R2 := 0.000000
	65	[2226]	LOADK    	R3 := -20.000000
	66	[2226]	CALL     	R1 3 1 ; R1(R2,R3)
	67	[2228]	RETURN   	R0 1 ; return 

function #97 <?:2230,2254> (82 instructions, 328 bytes at 0000021128D4B520)
1 param, 12 slots, 2 upvalues, 0 locals, 22 constants, 0 functions
	1	[2231]	OP_LOADBOOL	R1 0 0 ; R1 := false
	2	[2233]	LOADK    	R2 K0 ; R2 := "<p><font face=\"Noto Sans\" size=\"14\"><b>"
	3	[2233]	GETUPVAL 	R3 U0 ; R3 := U0
	4	[2233]	GETTABLE 	R3 R3 K1 ; R3 := R3[0x06d055f9]
	5	[2233]	GETTABLE 	R4 R0 K2 ; R4 := R0["Title"]
	6	[2233]	EQ       	1 R4 K3 ; if R4 == nil then PC := 9
	7	[2233]	JMP      	9 ; PC := 9
	8	[2233]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 9
	9	[2233]	OP_LOADBOOL	R4 1 0 ; R4 := true
	10	[2233]	LOADK    	R5 K4 ; R5 := ""
	11	[2233]	GETGLOBAL	R6 K5 ; R6 := 0x603636ad
	12	[2233]	GETTABLE 	R7 R0 K2 ; R7 := R0["Title"]
	13	[2233]	OP_LOADBOOL	R8 0 0 ; R8 := false
	14	[2233]	CALL     	R6 3 0 ; R6,... := R6(R7,R8)
	15	[2233]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	16	[2233]	LOADK    	R4 K6 ; R4 := "</b></font></p>"
	17	[2233]	CONCAT   	R2 R2 R4 ; R2 := R2 .. R3 .. R4
	18	[2234]	GETUPVAL 	R3 U1 ; R3 := U1
	19	[2234]	GETTABLE 	R3 R3 K7 ; R3 := R3["VoidTearTitleTracker"]
	20	[2234]	GETTABLE 	R3 R3 K8 ; R3 := R3[0x3f8a850c]
	21	[2234]	MOVE     	R4 R2 ; R4 := R2
	22	[2234]	CALL     	R3 2 1 ; R3(R4)
	23	[2236]	GETUPVAL 	R3 U1 ; R3 := U1
	24	[2236]	GETTABLE 	R3 R3 K9 ; R3 := R3["VoidTearListTracker"]
	25	[2236]	GETTABLE 	R3 R3 K10 ; R3 := R3["NeedsInit"]
	26	[2236]	TEST     	R3 1 ; if R3 then PC := 55
	27	[2236]	JMP      	55 ; PC := 55
	28	[2236]	GETTABLE 	R3 R0 K11 ; R3 := R0["Total"]
	29	[2236]	GETUPVAL 	R4 U1 ; R4 := U1
	30	[2236]	GETTABLE 	R4 R4 K9 ; R4 := R4["VoidTearListTracker"]
	31	[2236]	GETTABLE 	R4 R4 K12 ; R4 := R4["List"]
	32	[2236]	SELF     	R4 R4 K13 ; R5 := R4; R4 := R4[0x5fbddc1a]
	33	[2236]	CALL     	R4 2 2 ; R4 := R4(R5)
	34	[2236]	EQ       	1 R3 R4 ; if R3 == R4 then PC := 55
	35	[2236]	JMP      	55 ; PC := 55
	36	[2237]	GETUPVAL 	R3 U1 ; R3 := U1
	37	[2237]	GETTABLE 	R3 R3 K9 ; R3 := R3["VoidTearListTracker"]
	38	[2237]	GETTABLE 	R3 R3 K14 ; R3 := R3[0x55e7b08c]
	39	[2237]	OP_LOADBOOL	R4 1 0 ; R4 := true
	40	[2237]	OP_LOADBOOL	R5 1 0 ; R5 := true
	41	[2237]	CALL     	R3 3 1 ; R3(R4,R5)
	42	[2238]	LOADK    	R3 := 1.000000
	43	[2238]	GETTABLE 	R4 R0 K11 ; R4 := R0["Total"]
	44	[2238]	LOADK    	R5 := 1.000000
	45	[2238]	FORPREP  	R3 53 ; R3 -= R5; PC := 53
	46	[2239]	GETUPVAL 	R7 U1 ; R7 := U1
	47	[2239]	GETTABLE 	R7 R7 K9 ; R7 := R7["VoidTearListTracker"]
	48	[2239]	GETTABLE 	R7 R7 K15 ; R7 := R7[0xe4b8bb38]
	49	[2239]	LOADNIL  	R8 R8 ; R8 := nil
	50	[2239]	NEWTABLE 	R9 0 1 ; R9 := {}
	51	[2239]	SETTABLE 	R9 K16 K17 ; R9["Rotation"] := 45.000000
	52	[2239]	CALL     	R7 3 1 ; R7(R8,R9)
	53	[2238]	FORLOOP  	R3 46 ; R3 += R5; if R3 <= R4 then begin PC := 46; R6 := R3 end
	54	[2242]	OP_LOADBOOL	R1 1 0 ; R1 := true
	55	[2245]	GETTABLE 	R7 R0 K18 ; R7 := R0["Curr"]
	56	[2245]	GETUPVAL 	R8 U1 ; R8 := U1
	57	[2245]	GETTABLE 	R8 R8 K9 ; R8 := R8["VoidTearListTracker"]
	58	[2245]	GETTABLE 	R8 R8 K12 ; R8 := R8["List"]
	59	[2245]	GETTABLE 	R8 R8 K19 ; R8 := R8["mCurrProgress"]
	60	[2245]	EQ       	1 R7 R8 ; if R7 == R8 then PC := 72
	61	[2245]	JMP      	72 ; PC := 72
	62	[2246]	GETUPVAL 	R7 U1 ; R7 := U1
	63	[2246]	GETTABLE 	R7 R7 K9 ; R7 := R7["VoidTearListTracker"]
	64	[2246]	GETTABLE 	R7 R7 K12 ; R7 := R7["List"]
	65	[2246]	GETTABLE 	R8 R0 K18 ; R8 := R0["Curr"]
	66	[2246]	SETTABLE 	R7 K19 R8 ; R7["mCurrProgress"] := R8
	67	[2247]	GETUPVAL 	R7 U1 ; R7 := U1
	68	[2247]	GETTABLE 	R7 R7 K9 ; R7 := R7["VoidTearListTracker"]
	69	[2247]	GETTABLE 	R7 R7 K20 ; R7 := R7[0xbe9ad86f]
	70	[2247]	CALL     	R7 1 1 ; R7()
	71	[2248]	OP_LOADBOOL	R1 1 0 ; R1 := true
	72	[2251]	TEST     	R1 0 ; if not R1 then PC := 82
	73	[2251]	JMP      	82 ; PC := 82
	74	[2252]	GETUPVAL 	R7 U1 ; R7 := U1
	75	[2252]	GETTABLE 	R7 R7 K9 ; R7 := R7["VoidTearListTracker"]
	76	[2252]	GETTABLE 	R7 R7 K12 ; R7 := R7["List"]
	77	[2252]	SELF     	R7 R7 K21 ; R8 := R7; R7 := R7[0x71e9ac81]
	78	[2252]	LOADNIL  	R9 R9 ; R9 := nil
	79	[2252]	OP_LOADBOOL	R10 1 0 ; R10 := true
	80	[2252]	OP_LOADBOOL	R11 1 0 ; R11 := true
	81	[2252]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	82	[2254]	RETURN   	R0 1 ; return 

function #98 <?:2256,2298> (147 instructions, 588 bytes at 0000021191B3A1A0)
0 params, 8 slots, 7 upvalues, 0 locals, 34 constants, 0 functions
	1	[2257]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[2257]	GETTABLE 	R0 R0 K1 ; R0 := R0["VoidTearProgress"]
	3	[2258]	EQ       	0 R0 K2 ; if R0 ~= nil then PC := 34
	4	[2258]	JMP      	34 ; PC := 34
	5	[2258]	GETGLOBAL	R1 K0 ; R1 := _T
	6	[2258]	GETTABLE 	R1 R1 K3 ; R1 := R1["GreedWagerProgress"]
	7	[2258]	EQ       	0 R1 K2 ; if R1 ~= nil then PC := 34
	8	[2258]	JMP      	34 ; PC := 34
	9	[2258]	GETUPVAL 	R1 U0 ; R1 := U0
	10	[2258]	GETTABLE 	R1 R1 K4 ; R1 := R1["VoidTearTracker"]
	11	[2258]	EQ       	1 R1 K2 ; if R1 == nil then PC := 34
	12	[2258]	JMP      	34 ; PC := 34
	13	[2259]	GETUPVAL 	R1 U1 ; R1 := U1
	14	[2259]	GETUPVAL 	R2 U0 ; R2 := U0
	15	[2259]	GETTABLE 	R2 R2 K4 ; R2 := R2["VoidTearTracker"]
	16	[2259]	CALL     	R1 2 1 ; R1(R2)
	17	[2260]	GETUPVAL 	R1 U0 ; R1 := U0
	18	[2260]	SETTABLE 	R1 K4 K2 ; R1["VoidTearTracker"] := nil
	19	[2261]	GETUPVAL 	R1 U1 ; R1 := U1
	20	[2261]	GETUPVAL 	R2 U0 ; R2 := U0
	21	[2261]	GETTABLE 	R2 R2 K5 ; R2 := R2["VoidTearTitleTracker"]
	22	[2261]	CALL     	R1 2 1 ; R1(R2)
	23	[2262]	GETUPVAL 	R1 U0 ; R1 := U0
	24	[2262]	SETTABLE 	R1 K5 K2 ; R1["VoidTearTitleTracker"] := nil
	25	[2263]	GETUPVAL 	R1 U1 ; R1 := U1
	26	[2263]	GETUPVAL 	R2 U0 ; R2 := U0
	27	[2263]	GETTABLE 	R2 R2 K6 ; R2 := R2["VoidTearListTracker"]
	28	[2263]	CALL     	R1 2 1 ; R1(R2)
	29	[2264]	GETUPVAL 	R1 U0 ; R1 := U0
	30	[2264]	SETTABLE 	R1 K6 K2 ; R1["VoidTearListTracker"] := nil
	31	[2265]	GETUPVAL 	R1 U2 ; R1 := U2
	32	[2265]	SETTABLE 	R1 K7 K8 ; R1["UpdateOverrides"] := true
	33	[2265]	JMP      	147 ; PC := 147
	34	[2266]	EQ       	1 R0 K2 ; if R0 == nil then PC := 147
	35	[2266]	JMP      	147 ; PC := 147
	36	[2267]	GETTABLE 	R1 R0 K9 ; R1 := R0["List"]
	37	[2267]	EQ       	1 R1 K2 ; if R1 == nil then PC := 51
	38	[2267]	JMP      	51 ; PC := 51
	39	[2268]	GETGLOBAL	R1 K10 ; R1 := 0x7b998233
	40	[2268]	GETUPVAL 	R2 U0 ; R2 := U0
	41	[2268]	GETTABLE 	R2 R2 K6 ; R2 := R2["VoidTearListTracker"]
	42	[2268]	CALL     	R1 2 2 ; R1 := R1(R2)
	43	[2268]	TEST     	R1 0 ; if not R1 then PC := 48
	44	[2268]	JMP      	48 ; PC := 48
	45	[2269]	GETUPVAL 	R1 U3 ; R1 := U3
	46	[2269]	GETTABLE 	R2 R0 K9 ; R2 := R0["List"]
	47	[2269]	CALL     	R1 2 1 ; R1(R2)
	48	[2271]	GETUPVAL 	R1 U4 ; R1 := U4
	49	[2271]	GETTABLE 	R2 R0 K9 ; R2 := R0["List"]
	50	[2271]	CALL     	R1 2 1 ; R1(R2)
	51	[2274]	GETGLOBAL	R1 K10 ; R1 := 0x7b998233
	52	[2274]	GETUPVAL 	R2 U0 ; R2 := U0
	53	[2274]	GETTABLE 	R2 R2 K4 ; R2 := R2["VoidTearTracker"]
	54	[2274]	CALL     	R1 2 2 ; R1 := R1(R2)
	55	[2274]	TEST     	R1 0 ; if not R1 then PC := 67
	56	[2274]	JMP      	67 ; PC := 67
	57	[2275]	GETUPVAL 	R1 U0 ; R1 := U0
	58	[2275]	GETUPVAL 	R2 U5 ; R2 := U5
	59	[2275]	LOADK    	R3 K11 ; R3 := "HRVoidTear"
	60	[2275]	GETUPVAL 	R4 U6 ; R4 := U6
	61	[2275]	GETTABLE 	R4 R4 K12 ; R4 := R4["HT_PROGRESS_BAR"]
	62	[2275]	LOADK    	R5 := 0.500000
	63	[2275]	LOADK    	R6 := 1.000000
	64	[2275]	OP_LOADBOOL	R7 0 0 ; R7 := false
	65	[2275]	CALL     	R2 6 2 ; R2 := R2(R3,R4,R5,R6,R7)
	66	[2275]	SETTABLE 	R1 K4 R2 ; R1["VoidTearTracker"] := R2
	67	[2278]	GETUPVAL 	R1 U2 ; R1 := U2
	68	[2278]	GETTABLE 	R1 R1 K7 ; R1 := R1["UpdateOverrides"]
	69	[2278]	TEST     	R1 0 ; if not R1 then PC := 123
	70	[2278]	JMP      	123 ; PC := 123
	71	[2279]	GETUPVAL 	R1 U2 ; R1 := U2
	72	[2279]	SETTABLE 	R1 K7 K2 ; R1["UpdateOverrides"] := nil
	73	[2280]	GETUPVAL 	R1 U0 ; R1 := U0
	74	[2280]	GETTABLE 	R1 R1 K4 ; R1 := R1["VoidTearTracker"]
	75	[2280]	GETTABLE 	R1 R1 K13 ; R1 := R1[0x3f8a850c]
	76	[2280]	GETUPVAL 	R2 U2 ; R2 := U2
	77	[2280]	GETTABLE 	R2 R2 K14 ; R2 := R2["Message"]
	78	[2280]	CALL     	R1 2 1 ; R1(R2)
	79	[2281]	GETUPVAL 	R1 U0 ; R1 := U0
	80	[2281]	GETTABLE 	R1 R1 K4 ; R1 := R1["VoidTearTracker"]
	81	[2281]	GETTABLE 	R1 R1 K15 ; R1 := R1[0x89c1fa33]
	82	[2281]	GETUPVAL 	R2 U2 ; R2 := U2
	83	[2281]	GETTABLE 	R2 R2 K16 ; R2 := R2["Icon"]
	84	[2281]	CALL     	R1 2 1 ; R1(R2)
	85	[2282]	GETUPVAL 	R1 U2 ; R1 := U2
	86	[2282]	GETTABLE 	R1 R1 K17 ; R1 := R1["Tint"]
	87	[2282]	EQ       	1 R1 K2 ; if R1 == nil then PC := 113
	88	[2282]	JMP      	113 ; PC := 113
	89	[2283]	GETUPVAL 	R1 U0 ; R1 := U0
	90	[2283]	GETTABLE 	R1 R1 K4 ; R1 := R1["VoidTearTracker"]
	91	[2283]	GETTABLE 	R1 R1 K18 ; R1 := R1[0x6336d9f3]
	92	[2283]	GETUPVAL 	R2 U2 ; R2 := U2
	93	[2283]	GETTABLE 	R2 R2 K17 ; R2 := R2["Tint"]
	94	[2283]	CALL     	R1 2 1 ; R1(R2)
	95	[2284]	GETUPVAL 	R1 U0 ; R1 := U0
	96	[2284]	GETTABLE 	R1 R1 K4 ; R1 := R1["VoidTearTracker"]
	97	[2284]	GETTABLE 	R1 R1 K19 ; R1 := R1[0x504f8bdc]
	98	[2284]	GETUPVAL 	R2 U2 ; R2 := U2
	99	[2284]	GETTABLE 	R2 R2 K17 ; R2 := R2["Tint"]
	100	[2284]	CALL     	R1 2 1 ; R1(R2)
	101	[2285]	GETUPVAL 	R1 U0 ; R1 := U0
	102	[2285]	GETTABLE 	R1 R1 K4 ; R1 := R1["VoidTearTracker"]
	103	[2285]	GETTABLE 	R1 R1 K20 ; R1 := R1[0x7922f872]
	104	[2285]	GETUPVAL 	R2 U2 ; R2 := U2
	105	[2285]	GETTABLE 	R2 R2 K17 ; R2 := R2["Tint"]
	106	[2285]	CALL     	R1 2 1 ; R1(R2)
	107	[2286]	GETUPVAL 	R1 U0 ; R1 := U0
	108	[2286]	GETTABLE 	R1 R1 K4 ; R1 := R1["VoidTearTracker"]
	109	[2286]	GETTABLE 	R1 R1 K21 ; R1 := R1[0x36b539cc]
	110	[2286]	GETUPVAL 	R2 U2 ; R2 := U2
	111	[2286]	GETTABLE 	R2 R2 K17 ; R2 := R2["Tint"]
	112	[2286]	CALL     	R1 2 1 ; R1(R2)
	113	[2288]	GETUPVAL 	R1 U2 ; R1 := U2
	114	[2288]	GETTABLE 	R1 R1 K22 ; R1 := R1["IconSize"]
	115	[2288]	EQ       	1 R1 K2 ; if R1 == nil then PC := 123
	116	[2288]	JMP      	123 ; PC := 123
	117	[2289]	GETUPVAL 	R1 U0 ; R1 := U0
	118	[2289]	GETTABLE 	R1 R1 K4 ; R1 := R1["VoidTearTracker"]
	119	[2289]	GETTABLE 	R1 R1 K23 ; R1 := R1[0x8412c0d2]
	120	[2289]	GETUPVAL 	R2 U2 ; R2 := U2
	121	[2289]	GETTABLE 	R2 R2 K22 ; R2 := R2["IconSize"]
	122	[2289]	CALL     	R1 2 1 ; R1(R2)
	123	[2293]	GETUPVAL 	R1 U0 ; R1 := U0
	124	[2293]	GETTABLE 	R1 R1 K4 ; R1 := R1["VoidTearTracker"]
	125	[2293]	GETTABLE 	R1 R1 K24 ; R1 := R1[0x900fe191]
	126	[2293]	GETGLOBAL	R2 K25 ; R2 := 0xae91e43b
	127	[2293]	SELF     	R2 R2 K26 ; R3 := R2; R2 := R2[0x42b04007]
	128	[2293]	LOADK    	R4 K27 ; R4 := "/Lotus/Language/Menu/ProgressXOfY"
	129	[2293]	OP_LOADBOOL	R5 1 0 ; R5 := true
	130	[2293]	NEWTABLE 	R6 0 2 ; R6 := {}
	131	[2293]	GETTABLE 	R7 R0 K29 ; R7 := R0["Curr"]
	132	[2293]	SETTABLE 	R6 K28 R7 ; R6["CURRENT"] := R7
	133	[2293]	GETTABLE 	R7 R0 K31 ; R7 := R0["Total"]
	134	[2293]	SETTABLE 	R6 K30 R7 ; R6["TOTAL"] := R7
	135	[2293]	CALL     	R2 5 0 ; R2,... := R2(R3,R4,R5,R6)
	136	[2293]	CALL     	R1 0 1 ; R1(R2,...)
	137	[2294]	GETTABLE 	R1 R0 K31 ; R1 := R0["Total"]
	138	[2294]	LT       	0 K32 R1 ; if 0.000000 >= R1 then PC := 147
	139	[2294]	JMP      	147 ; PC := 147
	140	[2295]	GETUPVAL 	R1 U0 ; R1 := U0
	141	[2295]	GETTABLE 	R1 R1 K4 ; R1 := R1["VoidTearTracker"]
	142	[2295]	GETTABLE 	R1 R1 K33 ; R1 := R1[0x8550d2a7]
	143	[2295]	GETTABLE 	R2 R0 K29 ; R2 := R0["Curr"]
	144	[2295]	GETTABLE 	R3 R0 K31 ; R3 := R0["Total"]
	145	[2295]	DIV      	R2 R2 R3 ; R2 := R2 / R3
	146	[2295]	CALL     	R1 2 1 ; R1(R2)
	147	[2298]	RETURN   	R0 1 ; return 

function #99 <?:2300,2352> (164 instructions, 656 bytes at 0000021135BCB380)
0 params, 11 slots, 4 upvalues, 0 locals, 38 constants, 0 functions
	1	[2301]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[2301]	GETTABLE 	R0 R0 K1 ; R0 := R0["GreedWagerProgress"]
	3	[2303]	TEST     	R0 0 ; if not R0 then PC := 164
	4	[2303]	JMP      	164 ; PC := 164
	5	[2304]	LOADNIL  	R1 R1 ; R1 := nil
	6	[2305]	GETGLOBAL	R2 K2 ; R2 := 0xae91e43b
	7	[2305]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0x42b04007]
	8	[2305]	LOADK    	R4 K4 ; R4 := "/Lotus/Language/Game/PveGreedCarryingPoints"
	9	[2305]	OP_LOADBOOL	R5 1 0 ; R5 := true
	10	[2305]	NEWTABLE 	R6 0 1 ; R6 := {}
	11	[2305]	GETTABLE 	R7 R0 K6 ; R7 := R0["Carrying"]
	12	[2305]	SETTABLE 	R6 K5 R7 ; R6["val"] := R7
	13	[2305]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	14	[2306]	GETTABLE 	R3 R0 K7 ; R3 := R0["NoGoal"]
	15	[2306]	TEST     	R3 0 ; if not R3 then PC := 19
	16	[2306]	JMP      	19 ; PC := 19
	17	[2307]	MOVE     	R1 R2 ; R1 := R2
	18	[2307]	JMP      	39 ; PC := 39
	19	[2309]	GETTABLE 	R3 R0 K8 ; R3 := R0["Completed"]
	20	[2309]	TEST     	R3 1 ; if R3 then PC := 34
	21	[2309]	JMP      	34 ; PC := 34
	22	[2310]	GETGLOBAL	R3 K2 ; R3 := 0xae91e43b
	23	[2310]	SELF     	R3 R3 K3 ; R4 := R3; R3 := R3[0x42b04007]
	24	[2310]	LOADK    	R5 K9 ; R5 := "/Lotus/Language/Menu/ProgressXOfY"
	25	[2310]	OP_LOADBOOL	R6 1 0 ; R6 := true
	26	[2310]	NEWTABLE 	R7 0 2 ; R7 := {}
	27	[2310]	GETTABLE 	R8 R0 K11 ; R8 := R0["Curr"]
	28	[2310]	SETTABLE 	R7 K10 R8 ; R7["CURRENT"] := R8
	29	[2310]	GETTABLE 	R8 R0 K13 ; R8 := R0["Total"]
	30	[2310]	SETTABLE 	R7 K12 R8 ; R7["TOTAL"] := R8
	31	[2310]	CALL     	R3 5 2 ; R3 := R3(R4,R5,R6,R7)
	32	[2310]	MOVE     	R1 R3 ; R1 := R3
	33	[2310]	JMP      	35 ; PC := 35
	34	[2312]	GETTABLE 	R1 R0 K14 ; R1 := R0["CompletedText"]
	35	[2314]	MOVE     	R3 R1 ; R3 := R1
	36	[2314]	LOADK    	R4 K15 ; R4 := "\r\n"
	37	[2314]	MOVE     	R5 R2 ; R5 := R2
	38	[2314]	CONCAT   	R1 R3 R5 ; R1 := R3 .. R4 .. R5
	39	[2316]	GETTABLE 	R3 R0 K16 ; R3 := R0["Bonus"]
	40	[2316]	LT       	0 K17 R3 ; if 0.000000 >= R3 then PC := 55
	41	[2316]	JMP      	55 ; PC := 55
	42	[2317]	LOADK    	R3 K15 ; R3 := "\r\n"
	43	[2317]	GETGLOBAL	R4 K2 ; R4 := 0xae91e43b
	44	[2317]	SELF     	R4 R4 K3 ; R5 := R4; R4 := R4[0x42b04007]
	45	[2317]	LOADK    	R6 K18 ; R6 := "/Lotus/Language/Game/PveGreedCarryingBonus"
	46	[2317]	OP_LOADBOOL	R7 1 0 ; R7 := true
	47	[2317]	NEWTABLE 	R8 0 1 ; R8 := {}
	48	[2317]	GETTABLE 	R9 R0 K16 ; R9 := R0["Bonus"]
	49	[2317]	SETTABLE 	R8 K5 R9 ; R8["val"] := R9
	50	[2317]	CALL     	R4 5 2 ; R4 := R4(R5,R6,R7,R8)
	51	[2317]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	52	[2318]	MOVE     	R4 R1 ; R4 := R1
	53	[2318]	MOVE     	R5 R3 ; R5 := R3
	54	[2318]	CONCAT   	R1 R4 R5 ; R1 := R4 .. R5
	55	[2321]	GETUPVAL 	R4 U0 ; R4 := U0
	56	[2321]	GETTABLE 	R4 R4 K19 ; R4 := R4["VoidTearTracker"]
	57	[2321]	EQ       	0 R4 K20 ; if R4 ~= nil then PC := 69
	58	[2321]	JMP      	69 ; PC := 69
	59	[2322]	GETUPVAL 	R4 U0 ; R4 := U0
	60	[2322]	GETUPVAL 	R5 U1 ; R5 := U1
	61	[2322]	LOADK    	R6 K21 ; R6 := "HRVoidTear"
	62	[2322]	GETUPVAL 	R7 U2 ; R7 := U2
	63	[2322]	GETTABLE 	R7 R7 K22 ; R7 := R7["HT_PROGRESS_BAR"]
	64	[2322]	LOADK    	R8 := 0.500000
	65	[2322]	LOADK    	R9 := 1.000000
	66	[2322]	OP_LOADBOOL	R10 0 0 ; R10 := false
	67	[2322]	CALL     	R5 6 2 ; R5 := R5(R6,R7,R8,R9,R10)
	68	[2322]	SETTABLE 	R4 K19 R5 ; R4["VoidTearTracker"] := R5
	69	[2325]	GETUPVAL 	R4 U3 ; R4 := U3
	70	[2325]	GETTABLE 	R4 R4 K23 ; R4 := R4["UpdateOverrides"]
	71	[2325]	TEST     	R4 0 ; if not R4 then PC := 125
	72	[2325]	JMP      	125 ; PC := 125
	73	[2326]	GETUPVAL 	R4 U3 ; R4 := U3
	74	[2326]	SETTABLE 	R4 K23 K20 ; R4["UpdateOverrides"] := nil
	75	[2327]	GETUPVAL 	R4 U0 ; R4 := U0
	76	[2327]	GETTABLE 	R4 R4 K19 ; R4 := R4["VoidTearTracker"]
	77	[2327]	GETTABLE 	R4 R4 K24 ; R4 := R4[0x3f8a850c]
	78	[2327]	GETUPVAL 	R5 U3 ; R5 := U3
	79	[2327]	GETTABLE 	R5 R5 K25 ; R5 := R5["Message"]
	80	[2327]	CALL     	R4 2 1 ; R4(R5)
	81	[2328]	GETUPVAL 	R4 U0 ; R4 := U0
	82	[2328]	GETTABLE 	R4 R4 K19 ; R4 := R4["VoidTearTracker"]
	83	[2328]	GETTABLE 	R4 R4 K26 ; R4 := R4[0x89c1fa33]
	84	[2328]	GETUPVAL 	R5 U3 ; R5 := U3
	85	[2328]	GETTABLE 	R5 R5 K27 ; R5 := R5["Icon"]
	86	[2328]	CALL     	R4 2 1 ; R4(R5)
	87	[2329]	GETUPVAL 	R4 U3 ; R4 := U3
	88	[2329]	GETTABLE 	R4 R4 K28 ; R4 := R4["Tint"]
	89	[2329]	EQ       	1 R4 K20 ; if R4 == nil then PC := 115
	90	[2329]	JMP      	115 ; PC := 115
	91	[2330]	GETUPVAL 	R4 U0 ; R4 := U0
	92	[2330]	GETTABLE 	R4 R4 K19 ; R4 := R4["VoidTearTracker"]
	93	[2330]	GETTABLE 	R4 R4 K29 ; R4 := R4[0x6336d9f3]
	94	[2330]	GETUPVAL 	R5 U3 ; R5 := U3
	95	[2330]	GETTABLE 	R5 R5 K28 ; R5 := R5["Tint"]
	96	[2330]	CALL     	R4 2 1 ; R4(R5)
	97	[2331]	GETUPVAL 	R4 U0 ; R4 := U0
	98	[2331]	GETTABLE 	R4 R4 K19 ; R4 := R4["VoidTearTracker"]
	99	[2331]	GETTABLE 	R4 R4 K30 ; R4 := R4[0x504f8bdc]
	100	[2331]	GETUPVAL 	R5 U3 ; R5 := U3
	101	[2331]	GETTABLE 	R5 R5 K28 ; R5 := R5["Tint"]
	102	[2331]	CALL     	R4 2 1 ; R4(R5)
	103	[2332]	GETUPVAL 	R4 U0 ; R4 := U0
	104	[2332]	GETTABLE 	R4 R4 K19 ; R4 := R4["VoidTearTracker"]
	105	[2332]	GETTABLE 	R4 R4 K31 ; R4 := R4[0x7922f872]
	106	[2332]	GETUPVAL 	R5 U3 ; R5 := U3
	107	[2332]	GETTABLE 	R5 R5 K28 ; R5 := R5["Tint"]
	108	[2332]	CALL     	R4 2 1 ; R4(R5)
	109	[2333]	GETUPVAL 	R4 U0 ; R4 := U0
	110	[2333]	GETTABLE 	R4 R4 K19 ; R4 := R4["VoidTearTracker"]
	111	[2333]	GETTABLE 	R4 R4 K32 ; R4 := R4[0x36b539cc]
	112	[2333]	GETUPVAL 	R5 U3 ; R5 := U3
	113	[2333]	GETTABLE 	R5 R5 K28 ; R5 := R5["Tint"]
	114	[2333]	CALL     	R4 2 1 ; R4(R5)
	115	[2335]	GETUPVAL 	R4 U3 ; R4 := U3
	116	[2335]	GETTABLE 	R4 R4 K33 ; R4 := R4["IconSize"]
	117	[2335]	EQ       	1 R4 K20 ; if R4 == nil then PC := 125
	118	[2335]	JMP      	125 ; PC := 125
	119	[2336]	GETUPVAL 	R4 U0 ; R4 := U0
	120	[2336]	GETTABLE 	R4 R4 K19 ; R4 := R4["VoidTearTracker"]
	121	[2336]	GETTABLE 	R4 R4 K34 ; R4 := R4[0x8412c0d2]
	122	[2336]	GETUPVAL 	R5 U3 ; R5 := U3
	123	[2336]	GETTABLE 	R5 R5 K33 ; R5 := R5["IconSize"]
	124	[2336]	CALL     	R4 2 1 ; R4(R5)
	125	[2340]	GETTABLE 	R4 R0 K8 ; R4 := R0["Completed"]
	126	[2340]	TEST     	R4 1 ; if R4 then PC := 139
	127	[2340]	JMP      	139 ; PC := 139
	128	[2340]	GETTABLE 	R4 R0 K7 ; R4 := R0["NoGoal"]
	129	[2340]	TEST     	R4 1 ; if R4 then PC := 139
	130	[2340]	JMP      	139 ; PC := 139
	131	[2341]	GETUPVAL 	R4 U0 ; R4 := U0
	132	[2341]	GETTABLE 	R4 R4 K19 ; R4 := R4["VoidTearTracker"]
	133	[2341]	GETTABLE 	R4 R4 K35 ; R4 := R4[0x8550d2a7]
	134	[2341]	GETTABLE 	R5 R0 K11 ; R5 := R0["Curr"]
	135	[2341]	GETTABLE 	R6 R0 K13 ; R6 := R0["Total"]
	136	[2341]	DIV      	R5 R5 R6 ; R5 := R5 / R6
	137	[2341]	CALL     	R4 2 1 ; R4(R5)
	138	[2341]	JMP      	144 ; PC := 144
	139	[2343]	GETUPVAL 	R4 U0 ; R4 := U0
	140	[2343]	GETTABLE 	R4 R4 K19 ; R4 := R4["VoidTearTracker"]
	141	[2343]	GETTABLE 	R4 R4 K35 ; R4 := R4[0x8550d2a7]
	142	[2343]	LOADK    	R5 := 1.000000
	143	[2343]	CALL     	R4 2 1 ; R4(R5)
	144	[2345]	GETTABLE 	R4 R0 K7 ; R4 := R0["NoGoal"]
	145	[2345]	TEST     	R4 0 ; if not R4 then PC := 159
	146	[2345]	JMP      	159 ; PC := 159
	147	[2346]	GETUPVAL 	R4 U0 ; R4 := U0
	148	[2346]	GETTABLE 	R4 R4 K19 ; R4 := R4["VoidTearTracker"]
	149	[2346]	GETTABLE 	R4 R4 K24 ; R4 := R4[0x3f8a850c]
	150	[2346]	MOVE     	R5 R1 ; R5 := R1
	151	[2346]	LOADK    	R6 := 1.000000
	152	[2346]	CALL     	R4 3 1 ; R4(R5,R6)
	153	[2347]	GETUPVAL 	R4 U0 ; R4 := U0
	154	[2347]	GETTABLE 	R4 R4 K19 ; R4 := R4["VoidTearTracker"]
	155	[2347]	GETTABLE 	R4 R4 K36 ; R4 := R4[0x900fe191]
	156	[2347]	LOADK    	R5 K37 ; R5 := ""
	157	[2347]	CALL     	R4 2 1 ; R4(R5)
	158	[2347]	JMP      	164 ; PC := 164
	159	[2349]	GETUPVAL 	R4 U0 ; R4 := U0
	160	[2349]	GETTABLE 	R4 R4 K19 ; R4 := R4["VoidTearTracker"]
	161	[2349]	GETTABLE 	R4 R4 K36 ; R4 := R4[0x900fe191]
	162	[2349]	MOVE     	R5 R1 ; R5 := R1
	163	[2349]	CALL     	R4 2 1 ; R4(R5)
	164	[2352]	RETURN   	R0 1 ; return 

function #100 <?:2354,2391> (100 instructions, 400 bytes at 0000021174AB8730)
2 params, 12 slots, 8 upvalues, 0 locals, 25 constants, 0 functions
	1	[2355]	GETGLOBAL	R2 K0 ; R2 := 0x0032441c
	2	[2355]	GETTABLE 	R2 R2 K1 ; R2 := R2["StalkerMode"]
	3	[2355]	TEST     	R2 0 ; if not R2 then PC := 6
	4	[2355]	JMP      	6 ; PC := 6
	5	[2356]	RETURN   	R0 1 ; return 
	6	[2359]	GETUPVAL 	R2 U0 ; R2 := U0
	7	[2359]	GETTABLE 	R2 R2 K2 ; R2 := R2["UIMode"]
	8	[2359]	GETUPVAL 	R3 U1 ; R3 := U1
	9	[2359]	GETTABLE 	R3 R3 K3 ; R3 := R3["UI_MODE_IN_DOJO"]
	10	[2359]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 84
	11	[2359]	JMP      	84 ; PC := 84
	12	[2360]	SELF     	R2 R0 K4 ; R3 := R0; R2 := R0[0xe79e7ef4]
	13	[2360]	CALL     	R2 2 2 ; R2 := R2(R3)
	14	[2361]	LOADNIL  	R3 R3 ; R3 := nil
	15	[2362]	GETGLOBAL	R4 K5 ; R4 := 0x7b998233
	16	[2362]	MOVE     	R5 R2 ; R5 := R2
	17	[2362]	CALL     	R4 2 2 ; R4 := R4(R5)
	18	[2362]	TEST     	R4 1 ; if R4 then PC := 37
	19	[2362]	JMP      	37 ; PC := 37
	20	[2363]	GETGLOBAL	R4 K6 ; R4 := 0x64fb1586
	21	[2363]	SELF     	R5 R2 K7 ; R6 := R2; R5 := R2[0x109d46aa]
	22	[2363]	CALL     	R5 2 0 ; R5,... := R5(R6)
	23	[2363]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	24	[2364]	EQ       	1 R4 K8 ; if R4 == "" then PC := 32
	25	[2364]	JMP      	32 ; PC := 32
	26	[2365]	GETGLOBAL	R5 K9 ; R5 := 0xae91e43b
	27	[2365]	SELF     	R5 R5 K10 ; R6 := R5; R5 := R5[0x42b04007]
	28	[2365]	MOVE     	R7 R4 ; R7 := R4
	29	[2365]	OP_LOADBOOL	R8 0 0 ; R8 := false
	30	[2365]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	31	[2365]	MOVE     	R3 R5 ; R3 := R5
	32	[2368]	GETUPVAL 	R5 U2 ; R5 := U2
	33	[2368]	SELF     	R5 R5 K11 ; R6 := R5; R5 := R5[0xc63157a6]
	34	[2368]	SELF     	R7 R2 K12 ; R8 := R2; R7 := R2[0x4aecf89f]
	35	[2368]	CALL     	R7 2 0 ; R7,... := R7(R8)
	36	[2368]	CALL     	R5 0 1 ; R5(R6,...)
	37	[2371]	TEST     	R3 0 ; if not R3 then PC := 72
	38	[2371]	JMP      	72 ; PC := 72
	39	[2372]	GETGLOBAL	R5 K5 ; R5 := 0x7b998233
	40	[2372]	GETGLOBAL	R6 K13 ; R6 := _T
	41	[2372]	GETTABLE 	R6 R6 K14 ; R6 := R6["DojoRoomTracker"]
	42	[2372]	CALL     	R5 2 2 ; R5 := R5(R6)
	43	[2372]	TEST     	R5 0 ; if not R5 then PC := 65
	44	[2372]	JMP      	65 ; PC := 65
	45	[2373]	GETGLOBAL	R5 K13 ; R5 := _T
	46	[2373]	GETUPVAL 	R6 U3 ; R6 := U3
	47	[2373]	LOADK    	R7 K15 ; R7 := "DojoRoomLabel"
	48	[2373]	GETUPVAL 	R8 U1 ; R8 := U1
	49	[2373]	GETTABLE 	R8 R8 K16 ; R8 := R8["HT_PROGRESS_BAR"]
	50	[2373]	LOADK    	R9 K17 ; R9 := 0.200000
	51	[2373]	LOADNIL  	R10 R10 ; R10 := nil
	52	[2373]	OP_LOADBOOL	R11 0 0 ; R11 := false
	53	[2373]	CALL     	R6 6 2 ; R6 := R6(R7,R8,R9,R10,R11)
	54	[2373]	SETTABLE 	R5 K14 R6 ; R5["DojoRoomTracker"] := R6
	55	[2375]	GETGLOBAL	R5 K13 ; R5 := _T
	56	[2375]	GETTABLE 	R5 R5 K14 ; R5 := R5["DojoRoomTracker"]
	57	[2375]	GETTABLE 	R5 R5 K18 ; R5 := R5[0x3f8a850c]
	58	[2375]	LOADK    	R6 K8 ; R6 := ""
	59	[2375]	CALL     	R5 2 1 ; R5(R6)
	60	[2376]	GETGLOBAL	R5 K13 ; R5 := _T
	61	[2376]	GETTABLE 	R5 R5 K14 ; R5 := R5["DojoRoomTracker"]
	62	[2376]	GETTABLE 	R5 R5 K19 ; R5 := R5[0x8550d2a7]
	63	[2376]	LOADK    	R6 := -1.000000
	64	[2376]	CALL     	R5 2 1 ; R5(R6)
	65	[2378]	GETGLOBAL	R5 K13 ; R5 := _T
	66	[2378]	GETTABLE 	R5 R5 K14 ; R5 := R5["DojoRoomTracker"]
	67	[2378]	GETTABLE 	R5 R5 K20 ; R5 := R5[0x900fe191]
	68	[2378]	MOVE     	R6 R3 ; R6 := R3
	69	[2378]	LOADK    	R7 := 1.000000
	70	[2378]	CALL     	R5 3 1 ; R5(R6,R7)
	71	[2378]	JMP      	84 ; PC := 84
	72	[2379]	GETGLOBAL	R5 K5 ; R5 := 0x7b998233
	73	[2379]	GETGLOBAL	R6 K13 ; R6 := _T
	74	[2379]	GETTABLE 	R6 R6 K14 ; R6 := R6["DojoRoomTracker"]
	75	[2379]	CALL     	R5 2 2 ; R5 := R5(R6)
	76	[2379]	TEST     	R5 1 ; if R5 then PC := 84
	77	[2379]	JMP      	84 ; PC := 84
	78	[2380]	GETUPVAL 	R5 U4 ; R5 := U4
	79	[2380]	GETGLOBAL	R6 K13 ; R6 := _T
	80	[2380]	GETTABLE 	R6 R6 K14 ; R6 := R6["DojoRoomTracker"]
	81	[2380]	CALL     	R5 2 1 ; R5(R6)
	82	[2381]	GETGLOBAL	R5 K13 ; R5 := _T
	83	[2381]	SETTABLE 	R5 K14 K21 ; R5["DojoRoomTracker"] := nil
	84	[2385]	GETGLOBAL	R5 K13 ; R5 := _T
	85	[2385]	GETTABLE 	R5 R5 K22 ; R5 := R5["VoidTearProgress"]
	86	[2385]	TEST     	R5 1 ; if R5 then PC := 92
	87	[2385]	JMP      	92 ; PC := 92
	88	[2385]	GETUPVAL 	R5 U5 ; R5 := U5
	89	[2385]	GETTABLE 	R5 R5 K23 ; R5 := R5["VoidTearTracker"]
	90	[2385]	EQ       	1 R5 K21 ; if R5 == nil then PC := 94
	91	[2385]	JMP      	94 ; PC := 94
	92	[2386]	GETUPVAL 	R5 U6 ; R5 := U6
	93	[2386]	CALL     	R5 1 1 ; R5()
	94	[2388]	GETGLOBAL	R5 K13 ; R5 := _T
	95	[2388]	GETTABLE 	R5 R5 K24 ; R5 := R5["GreedWagerProgress"]
	96	[2388]	TEST     	R5 0 ; if not R5 then PC := 100
	97	[2388]	JMP      	100 ; PC := 100
	98	[2389]	GETUPVAL 	R5 U7 ; R5 := U7
	99	[2389]	CALL     	R5 1 1 ; R5()
	100	[2391]	RETURN   	R0 1 ; return 

function #101 <?:2393,2432> (134 instructions, 536 bytes at 00000211920778E0)
0 params, 33 slots, 2 upvalues, 0 locals, 25 constants, 0 functions
	1	[2394]	GETGLOBAL	R0 K0 ; R0 := 0x76ea806b
	2	[2394]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x3f3ae64c]
	3	[2394]	LOADK    	R2 := 0.000000
	4	[2394]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	5	[2396]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	6	[2396]	MOVE     	R2 R0 ; R2 := R0
	7	[2396]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[2396]	TEST     	R1 0 ; if not R1 then PC := 11
	9	[2396]	JMP      	11 ; PC := 11
	10	[2397]	RETURN   	R0 1 ; return 
	11	[2400]	SELF     	R1 R0 K3 ; R2 := R0; R1 := R0[0x40e9c32b]
	12	[2400]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[2400]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x21278581]
	14	[2400]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[2401]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	16	[2401]	GETUPVAL 	R3 U0 ; R3 := U0
	17	[2401]	CALL     	R2 2 2 ; R2 := R2(R3)
	18	[2401]	TEST     	R2 1 ; if R2 then PC := 134
	19	[2401]	JMP      	134 ; PC := 134
	20	[2402]	GETUPVAL 	R2 U0 ; R2 := U0
	21	[2402]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0xf2deaf69]
	22	[2402]	GETGLOBAL	R4 K6 ; R4 := 0x5e5216e2
	23	[2402]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	24	[2402]	TEST     	R2 1 ; if R2 then PC := 32
	25	[2402]	JMP      	32 ; PC := 32
	26	[2402]	GETUPVAL 	R2 U0 ; R2 := U0
	27	[2402]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0xf2deaf69]
	28	[2402]	GETGLOBAL	R4 K7 ; R4 := gLotusMoaPetAvatarType
	29	[2402]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	30	[2402]	TEST     	R2 0 ; if not R2 then PC := 134
	31	[2402]	JMP      	134 ; PC := 134
	32	[2403]	GETUPVAL 	R2 U0 ; R2 := U0
	33	[2403]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0xc1595bd5]
	34	[2403]	GETGLOBAL	R4 K9 ; R4 := 0x53d05c5a
	35	[2403]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	36	[2404]	GETGLOBAL	R3 K10 ; R3 := 0xc8802016
	37	[2404]	MOVE     	R4 R2 ; R4 := R2
	38	[2404]	CALL     	R3 2 4 ; R3,R4,R5 := R3(R4)
	39	[2404]	JMP      	42 ; PC := 42
	40	[2405]	SELF     	R8 R7 K11 ; R9 := R7; R8 := R7[0xa2880940]
	41	[2405]	CALL     	R8 2 1 ; R8(R9)
	42	[2404]	TFORLOOP 	R3 2 ; R6,R7 := R3(R4,R5); if R6 ~= nil then begin PC = 40; R5 := R6 end
	43	[2405]	JMP      	40 ; PC := 40
	44	[2407]	GETUPVAL 	R8 U0 ; R8 := U0
	45	[2407]	SELF     	R8 R8 K8 ; R9 := R8; R8 := R8[0xc1595bd5]
	46	[2407]	GETGLOBAL	R10 K12 ; R10 := 0x36c594be
	47	[2407]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	48	[2407]	MOVE     	R2 R8 ; R2 := R8
	49	[2408]	GETGLOBAL	R8 K10 ; R8 := 0xc8802016
	50	[2408]	MOVE     	R9 R2 ; R9 := R2
	51	[2408]	CALL     	R8 2 4 ; R8,R9,R10 := R8(R9)
	52	[2408]	JMP      	55 ; PC := 55
	53	[2409]	SELF     	R13 R12 K11 ; R14 := R12; R13 := R12[0xa2880940]
	54	[2409]	CALL     	R13 2 1 ; R13(R14)
	55	[2408]	TFORLOOP 	R8 2 ; R11,R12 := R8(R9,R10); if R11 ~= nil then begin PC = 53; R10 := R11 end
	56	[2409]	JMP      	53 ; PC := 53
	57	[2411]	GETUPVAL 	R13 U0 ; R13 := U0
	58	[2411]	SELF     	R13 R13 K8 ; R14 := R13; R13 := R13[0xc1595bd5]
	59	[2411]	GETGLOBAL	R15 K13 ; R15 := 0x53f71da0
	60	[2411]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	61	[2411]	MOVE     	R2 R13 ; R2 := R13
	62	[2412]	GETGLOBAL	R13 K10 ; R13 := 0xc8802016
	63	[2412]	MOVE     	R14 R2 ; R14 := R2
	64	[2412]	CALL     	R13 2 4 ; R13,R14,R15 := R13(R14)
	65	[2412]	JMP      	68 ; PC := 68
	66	[2413]	SELF     	R18 R17 K11 ; R19 := R17; R18 := R17[0xa2880940]
	67	[2413]	CALL     	R18 2 1 ; R18(R19)
	68	[2412]	TFORLOOP 	R13 2 ; R16,R17 := R13(R14,R15); if R16 ~= nil then begin PC = 66; R15 := R16 end
	69	[2413]	JMP      	66 ; PC := 66
	70	[2415]	GETUPVAL 	R18 U0 ; R18 := U0
	71	[2415]	SELF     	R18 R18 K8 ; R19 := R18; R18 := R18[0xc1595bd5]
	72	[2415]	GETGLOBAL	R20 K14 ; R20 := 0x7dd50d71
	73	[2415]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	74	[2415]	MOVE     	R2 R18 ; R2 := R18
	75	[2416]	GETGLOBAL	R18 K10 ; R18 := 0xc8802016
	76	[2416]	MOVE     	R19 R2 ; R19 := R2
	77	[2416]	CALL     	R18 2 4 ; R18,R19,R20 := R18(R19)
	78	[2416]	JMP      	81 ; PC := 81
	79	[2417]	SELF     	R23 R22 K11 ; R24 := R22; R23 := R22[0xa2880940]
	80	[2417]	CALL     	R23 2 1 ; R23(R24)
	81	[2416]	TFORLOOP 	R18 2 ; R21,R22 := R18(R19,R20); if R21 ~= nil then begin PC = 79; R20 := R21 end
	82	[2417]	JMP      	79 ; PC := 79
	83	[2420]	TEST     	R1 0 ; if not R1 then PC := 134
	84	[2420]	JMP      	134 ; PC := 134
	85	[2421]	GETUPVAL 	R23 U0 ; R23 := U0
	86	[2421]	SELF     	R23 R23 K5 ; R24 := R23; R23 := R23[0xf2deaf69]
	87	[2421]	GETGLOBAL	R25 K7 ; R25 := gLotusMoaPetAvatarType
	88	[2421]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	89	[2421]	TEST     	R23 0 ; if not R23 then PC := 113
	90	[2421]	JMP      	113 ; PC := 113
	91	[2422]	GETUPVAL 	R23 U1 ; R23 := U1
	92	[2422]	GETTABLE 	R23 R23 K15 ; R23 := R23[0x06d055f9]
	93	[2422]	GETUPVAL 	R24 U0 ; R24 := U0
	94	[2422]	SELF     	R24 R24 K5 ; R25 := R24; R24 := R24[0xf2deaf69]
	95	[2422]	GETGLOBAL	R26 K16 ; R26 := 0x375efbff
	96	[2422]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	97	[2422]	GETGLOBAL	R25 K14 ; R25 := 0x7dd50d71
	98	[2422]	GETGLOBAL	R26 K13 ; R26 := 0x53f71da0
	99	[2422]	CALL     	R23 4 2 ; R23 := R23(R24,R25,R26)
	100	[2423]	GETUPVAL 	R24 U0 ; R24 := U0
	101	[2423]	SELF     	R24 R24 K17 ; R25 := R24; R24 := R24[0x47901f07]
	102	[2423]	MOVE     	R26 R23 ; R26 := R23
	103	[2423]	GETGLOBAL	R27 K18 ; R27 := 0x0469f296
	104	[2423]	LOADK    	R28 K19 ; R28 := "GAME_C1_GUN1"
	105	[2423]	CALL     	R27 2 2 ; R27 := R27(R28)
	106	[2423]	GETGLOBAL	R28 K20 ; R28 := 0xa421af95
	107	[2423]	LOADK    	R29 := 0.000000
	108	[2423]	LOADK    	R30 K21 ; R30 := 0.300000
	109	[2423]	LOADK    	R31 := 0.000000
	110	[2423]	CALL     	R28 4 0 ; R28,... := R28(R29,R30,R31)
	111	[2423]	CALL     	R24 0 1 ; R24(R25,...)
	112	[2423]	JMP      	134 ; PC := 134
	113	[2425]	GETUPVAL 	R24 U1 ; R24 := U1
	114	[2425]	GETTABLE 	R24 R24 K15 ; R24 := R24[0x06d055f9]
	115	[2425]	GETUPVAL 	R25 U0 ; R25 := U0
	116	[2425]	SELF     	R25 R25 K5 ; R26 := R25; R25 := R25[0xf2deaf69]
	117	[2425]	GETGLOBAL	R27 K22 ; R27 := 0x27c4bd31
	118	[2425]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	119	[2425]	GETGLOBAL	R26 K9 ; R26 := 0x53d05c5a
	120	[2425]	GETGLOBAL	R27 K12 ; R27 := 0x36c594be
	121	[2425]	CALL     	R24 4 2 ; R24 := R24(R25,R26,R27)
	122	[2426]	GETUPVAL 	R25 U0 ; R25 := U0
	123	[2426]	SELF     	R25 R25 K17 ; R26 := R25; R25 := R25[0x47901f07]
	124	[2426]	MOVE     	R27 R24 ; R27 := R24
	125	[2426]	GETGLOBAL	R28 K18 ; R28 := 0x0469f296
	126	[2426]	LOADK    	R29 K23 ; R29 := "GAME_C1_HEAD1"
	127	[2426]	CALL     	R28 2 2 ; R28 := R28(R29)
	128	[2426]	GETGLOBAL	R29 K20 ; R29 := 0xa421af95
	129	[2426]	LOADK    	R30 := 0.000000
	130	[2426]	LOADK    	R31 K24 ; R31 := 0.400000
	131	[2426]	LOADK    	R32 := 0.000000
	132	[2426]	CALL     	R29 4 0 ; R29,... := R29(R30,R31,R32)
	133	[2426]	CALL     	R25 0 1 ; R25(R26,...)
	134	[2432]	RETURN   	R0 1 ; return 

function #102 <?:2434,2500> (192 instructions, 768 bytes at 000002112F332150)
6 params, 28 slots, 1 upvalue, 0 locals, 30 constants, 0 functions
	1	[2436]	GETUPVAL 	R6 U0 ; R6 := U0
	2	[2436]	GETTABLE 	R6 R6 R0 ; R6 := R6[R0]
	3	[2436]	EQ       	0 R6 K0 ; if R6 ~= nil then PC := 16
	4	[2436]	JMP      	16 ; PC := 16
	5	[2437]	GETUPVAL 	R6 U0 ; R6 := U0
	6	[2437]	NEWTABLE 	R7 0 3 ; R7 := {}
	7	[2437]	SETTABLE 	R7 K1 R1 ; R7["ClipName"] := R1
	8	[2437]	SETTABLE 	R7 K2 K3 ; R7["NumClips"] := 1.000000
	9	[2437]	GETGLOBAL	R8 K5 ; R8 := 0xae91e43b
	10	[2437]	SELF     	R8 R8 K6 ; R9 := R8; R8 := R8[0x91a24e4b]
	11	[2437]	MOVE     	R10 R1 ; R10 := R1
	12	[2437]	LOADK    	R11 := 5.000000
	13	[2437]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	14	[2437]	SETTABLE 	R7 K4 R8 ; R7["BaseScale"] := R8
	15	[2437]	SETTABLE 	R6 R0 R7 ; R6[R0] := R7
	16	[2440]	GETGLOBAL	R6 K7 ; R6 := 0x5bced4c4
	17	[2440]	GETTABLE 	R6 R6 K8 ; R6 := R6[0xb62ecfe0]
	18	[2440]	LOADK    	R7 := 1.000000
	19	[2440]	GETGLOBAL	R8 K7 ; R8 := 0x5bced4c4
	20	[2440]	GETTABLE 	R8 R8 K9 ; R8 := R8[0x99675e23]
	21	[2440]	GETGLOBAL	R9 K7 ; R9 := 0x5bced4c4
	22	[2440]	GETTABLE 	R9 R9 K10 ; R9 := R9[0xae22009d]
	23	[2440]	ADD      	R10 R2 K3 ; R10 := R2 + 1.000000
	24	[2440]	CALL     	R9 2 0 ; R9,... := R9(R10)
	25	[2440]	CALL     	R8 0 0 ; R8,... := R8(R9,...)
	26	[2440]	CALL     	R6 0 2 ; R6 := R6(R7,...)
	27	[2441]	GETUPVAL 	R7 U0 ; R7 := U0
	28	[2441]	GETTABLE 	R7 R7 R0 ; R7 := R7[R0]
	29	[2442]	GETTABLE 	R8 R7 K2 ; R8 := R7["NumClips"]
	30	[2442]	LT       	0 R8 R6 ; if R8 >= R6 then PC := 49
	31	[2442]	JMP      	49 ; PC := 49
	32	[2443]	GETTABLE 	R8 R7 K2 ; R8 := R7["NumClips"]
	33	[2443]	ADD      	R8 R8 K3 ; R8 := R8 + 1.000000
	34	[2443]	MOVE     	R9 R6 ; R9 := R6
	35	[2443]	LOADK    	R10 := 1.000000
	36	[2443]	FORPREP  	R8 47 ; R8 -= R10; PC := 47
	37	[2444]	GETGLOBAL	R12 K11 ; R12 := 0x38f10e85
	38	[2444]	GETGLOBAL	R13 K5 ; R13 := 0xae91e43b
	39	[2444]	MOVE     	R14 R1 ; R14 := R1
	40	[2444]	LOADK    	R15 K12 ; R15 := ".Container.Digit1.duplicateMovieClip"
	41	[2444]	CONCAT   	R14 R14 R15 ; R14 := R14 .. R15
	42	[2444]	LOADK    	R15 K13 ; R15 := "Digit"
	43	[2444]	MOVE     	R16 R11 ; R16 := R11
	44	[2444]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	45	[2444]	ADD      	R16 K14 R11 ; R16 := 500.000000 + R11
	46	[2444]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	47	[2443]	FORLOOP  	R8 37 ; R8 += R10; if R8 <= R9 then begin PC := 37; R11 := R8 end
	48	[2447]	SETTABLE 	R7 K2 R6 ; R7["NumClips"] := R6
	49	[2450]	LOADK    	R12 := 0.000000
	50	[2451]	LOADK    	R13 := 1.000000
	51	[2451]	GETTABLE 	R14 R7 K2 ; R14 := R7["NumClips"]
	52	[2451]	LOADK    	R15 := 1.000000
	53	[2451]	FORPREP  	R13 118 ; R13 -= R15; PC := 118
	54	[2452]	MOVE     	R17 R1 ; R17 := R1
	55	[2452]	LOADK    	R18 K15 ; R18 := ".Container.Digit"
	56	[2452]	MOVE     	R19 R16 ; R19 := R16
	57	[2452]	CONCAT   	R17 R17 R19 ; R17 := R17 .. R18 .. R19
	58	[2453]	LE       	0 R16 R6 ; if R16 > R6 then PC := 112
	59	[2453]	JMP      	112 ; PC := 112
	60	[2454]	LOADK    	R18 := 0.000000
	61	[2455]	TEST     	R5 0 ; if not R5 then PC := 65
	62	[2455]	JMP      	65 ; PC := 65
	63	[2456]	LOADK    	R18 := 10.000000
	64	[2456]	JMP      	75 ; PC := 75
	65	[2458]	GETGLOBAL	R19 K7 ; R19 := 0x5bced4c4
	66	[2458]	GETTABLE 	R19 R19 K16 ; R19 := R19[0x55f27c30]
	67	[2458]	GETGLOBAL	R20 K7 ; R20 := 0x5bced4c4
	68	[2458]	GETTABLE 	R20 R20 K17 ; R20 := R20[0xa40531d8]
	69	[2458]	LOADK    	R21 := 10.000000
	70	[2458]	SUB      	R22 R16 K3 ; R22 := R16 - 1.000000
	71	[2458]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	72	[2458]	DIV      	R20 R2 R20 ; R20 := R2 / R20
	73	[2458]	CALL     	R19 2 2 ; R19 := R19(R20)
	74	[2458]	MOD      	R18 R19 K18 ; R18 := R19 % 10.000000
	75	[2460]	GETGLOBAL	R19 K11 ; R19 := 0x38f10e85
	76	[2460]	GETGLOBAL	R20 K5 ; R20 := 0xae91e43b
	77	[2460]	MOVE     	R21 R17 ; R21 := R17
	78	[2460]	LOADK    	R22 K19 ; R22 := ".gotoAndStop"
	79	[2460]	CONCAT   	R21 R21 R22 ; R21 := R21 .. R22
	80	[2460]	LOADK    	R22 := 1.000000
	81	[2460]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	82	[2461]	GETGLOBAL	R19 K11 ; R19 := 0x38f10e85
	83	[2461]	GETGLOBAL	R20 K5 ; R20 := 0xae91e43b
	84	[2461]	MOVE     	R21 R17 ; R21 := R17
	85	[2461]	LOADK    	R22 K19 ; R22 := ".gotoAndStop"
	86	[2461]	CONCAT   	R21 R21 R22 ; R21 := R21 .. R22
	87	[2461]	ADD      	R22 R18 K3 ; R22 := R18 + 1.000000
	88	[2461]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	89	[2462]	GETGLOBAL	R19 K5 ; R19 := 0xae91e43b
	90	[2462]	SELF     	R19 R19 K20 ; R20 := R19; R19 := R19[0x67bc869f]
	91	[2462]	MOVE     	R21 R17 ; R21 := R17
	92	[2462]	LOADK    	R22 := 10.000000
	93	[2462]	LOADK    	R23 := 100.000000
	94	[2462]	CALL     	R19 5 1 ; R19(R20,R21,R22,R23)
	95	[2464]	GETGLOBAL	R19 K5 ; R19 := 0xae91e43b
	96	[2464]	SELF     	R19 R19 K20 ; R20 := R19; R19 := R19[0x67bc869f]
	97	[2464]	MOVE     	R21 R17 ; R21 := R17
	98	[2464]	LOADK    	R22 := 0.000000
	99	[2464]	MOVE     	R23 R12 ; R23 := R12
	100	[2464]	CALL     	R19 5 1 ; R19(R20,R21,R22,R23)
	101	[2465]	EQ       	0 R18 K3 ; if R18 ~= 1.000000 then PC := 109
	102	[2465]	JMP      	109 ; PC := 109
	103	[2465]	GETGLOBAL	R19 K21 ; R19 := 0x804cc764
	104	[2465]	EQ       	1 R19 K22 ; if R19 == 0.000000 then PC := 109
	105	[2465]	JMP      	109 ; PC := 109
	106	[2466]	GETGLOBAL	R19 K21 ; R19 := 0x804cc764
	107	[2466]	SUB      	R12 R12 R19 ; R12 := R12 - R19
	108	[2466]	JMP      	118 ; PC := 118
	109	[2468]	GETGLOBAL	R19 K23 ; R19 := 0xa5c9ed93
	110	[2468]	SUB      	R12 R12 R19 ; R12 := R12 - R19
	111	[2469]	JMP      	118 ; PC := 118
	112	[2471]	GETGLOBAL	R19 K5 ; R19 := 0xae91e43b
	113	[2471]	SELF     	R19 R19 K20 ; R20 := R19; R19 := R19[0x67bc869f]
	114	[2471]	MOVE     	R21 R17 ; R21 := R17
	115	[2471]	LOADK    	R22 := 10.000000
	116	[2471]	LOADK    	R23 := 0.000000
	117	[2471]	CALL     	R19 5 1 ; R19(R20,R21,R22,R23)
	118	[2451]	FORLOOP  	R13 54 ; R13 += R15; if R13 <= R14 then begin PC := 54; R16 := R13 end
	119	[2475]	UNM      	R12 R12 ; R12 := ^ R12
	120	[2476]	LOADK    	R19 := 0.000000
	121	[2477]	EQ       	1 R4 K0 ; if R4 == nil then PC := 172
	122	[2477]	JMP      	172 ; PC := 172
	123	[2478]	LT       	0 R4 R12 ; if R4 >= R12 then PC := 153
	124	[2478]	JMP      	153 ; PC := 153
	125	[2479]	DIV      	R20 R4 R12 ; R20 := R4 / R12
	126	[2479]	MUL      	R20 K24 R20 ; R20 := 100.000000 * R20
	127	[2480]	MOVE     	R12 R4 ; R12 := R4
	128	[2481]	GETGLOBAL	R21 K5 ; R21 := 0xae91e43b
	129	[2481]	SELF     	R21 R21 K20 ; R22 := R21; R21 := R21[0x67bc869f]
	130	[2481]	MOVE     	R23 R1 ; R23 := R1
	131	[2481]	LOADK    	R24 := 5.000000
	132	[2481]	MOVE     	R25 R20 ; R25 := R20
	133	[2481]	CALL     	R21 5 1 ; R21(R22,R23,R24,R25)
	134	[2482]	GETGLOBAL	R21 K5 ; R21 := 0xae91e43b
	135	[2482]	SELF     	R21 R21 K20 ; R22 := R21; R21 := R21[0x67bc869f]
	136	[2482]	MOVE     	R23 R1 ; R23 := R1
	137	[2482]	LOADK    	R24 := 6.000000
	138	[2482]	MOVE     	R25 R20 ; R25 := R20
	139	[2482]	CALL     	R21 5 1 ; R21(R22,R23,R24,R25)
	140	[2484]	GETTABLE 	R21 R7 K4 ; R21 := R7["BaseScale"]
	141	[2484]	DIV      	R21 R20 R21 ; R21 := R20 / R21
	142	[2485]	GETGLOBAL	R22 K5 ; R22 := 0xae91e43b
	143	[2485]	SELF     	R22 R22 K25 ; R23 := R22; R22 := R22[0xf64b7262]
	144	[2485]	MOVE     	R24 R1 ; R24 := R1
	145	[2485]	LOADK    	R25 K26 ; R25 := "Container"
	146	[2485]	LOADK    	R26 := 1.000000
	147	[2485]	SUB      	R27 K3 R21 ; R27 := 1.000000 - R21
	148	[2485]	MUL      	R27 K27 R27 ; R27 := 46.000000 * R27
	149	[2485]	CALL     	R22 6 1 ; R22(R23,R24,R25,R26,R27)
	150	[2486]	SUB      	R22 K3 R21 ; R22 := 1.000000 - R21
	151	[2486]	MUL      	R19 K28 R22 ; R19 := 28.000000 * R22
	152	[2486]	JMP      	172 ; PC := 172
	153	[2488]	GETGLOBAL	R22 K5 ; R22 := 0xae91e43b
	154	[2488]	SELF     	R22 R22 K20 ; R23 := R22; R22 := R22[0x67bc869f]
	155	[2488]	MOVE     	R24 R1 ; R24 := R1
	156	[2488]	LOADK    	R25 := 5.000000
	157	[2488]	GETTABLE 	R26 R7 K4 ; R26 := R7["BaseScale"]
	158	[2488]	CALL     	R22 5 1 ; R22(R23,R24,R25,R26)
	159	[2489]	GETGLOBAL	R22 K5 ; R22 := 0xae91e43b
	160	[2489]	SELF     	R22 R22 K20 ; R23 := R22; R22 := R22[0x67bc869f]
	161	[2489]	MOVE     	R24 R1 ; R24 := R1
	162	[2489]	LOADK    	R25 := 6.000000
	163	[2489]	GETTABLE 	R26 R7 K4 ; R26 := R7["BaseScale"]
	164	[2489]	CALL     	R22 5 1 ; R22(R23,R24,R25,R26)
	165	[2490]	GETGLOBAL	R22 K5 ; R22 := 0xae91e43b
	166	[2490]	SELF     	R22 R22 K25 ; R23 := R22; R22 := R22[0xf64b7262]
	167	[2490]	MOVE     	R24 R1 ; R24 := R1
	168	[2490]	LOADK    	R25 K26 ; R25 := "Container"
	169	[2490]	LOADK    	R26 := 1.000000
	170	[2490]	LOADK    	R27 := 0.000000
	171	[2490]	CALL     	R22 6 1 ; R22(R23,R24,R25,R26,R27)
	172	[2494]	EQ       	0 R3 K3 ; if R3 ~= 1.000000 then PC := 179
	173	[2494]	JMP      	179 ; PC := 179
	174	[2495]	GETGLOBAL	R22 K23 ; R22 := 0xa5c9ed93
	175	[2495]	SUB      	R23 R6 K3 ; R23 := R6 - 1.000000
	176	[2495]	MUL      	R22 R22 R23 ; R22 := R22 * R23
	177	[2495]	DIV      	R22 R22 K29 ; R22 := R22 / 2.000000
	178	[2495]	ADD      	R19 R22 R19 ; R19 := R22 + R19
	179	[2497]	GETGLOBAL	R22 K5 ; R22 := 0xae91e43b
	180	[2497]	SELF     	R22 R22 K25 ; R23 := R22; R22 := R22[0xf64b7262]
	181	[2497]	MOVE     	R24 R1 ; R24 := R1
	182	[2497]	LOADK    	R25 K26 ; R25 := "Container"
	183	[2497]	LOADK    	R26 := 0.000000
	184	[2497]	MOVE     	R27 R19 ; R27 := R19
	185	[2497]	CALL     	R22 6 1 ; R22(R23,R24,R25,R26,R27)
	186	[2499]	MOVE     	R22 R6 ; R22 := R6
	187	[2499]	GETGLOBAL	R23 K23 ; R23 := 0xa5c9ed93
	188	[2499]	SUB      	R24 R6 K3 ; R24 := R6 - 1.000000
	189	[2499]	MUL      	R23 R23 R24 ; R23 := R23 * R24
	190	[2499]	SUB      	R23 R19 R23 ; R23 := R19 - R23
	191	[2499]	RETURN   	R22 3 ; return R22, R23 
	192	[2500]	RETURN   	R0 1 ; return 

function #103 <?:2502,2672> (662 instructions, 2648 bytes at 0000021118F670E0)
0 params, 53 slots, 9 upvalues, 0 locals, 88 constants, 0 functions
	1	[2503]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[2503]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[2503]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[2503]	TEST     	R0 0 ; if not R0 then PC := 7
	5	[2503]	JMP      	7 ; PC := 7
	6	[2504]	RETURN   	R0 1 ; return 
	7	[2507]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	8	[2507]	GETUPVAL 	R1 U1 ; R1 := U1
	9	[2507]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[2507]	TEST     	R0 1 ; if R0 then PC := 25
	11	[2507]	JMP      	25 ; PC := 25
	12	[2508]	GETUPVAL 	R0 U1 ; R0 := U1
	13	[2508]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xf4ed1581]
	14	[2508]	CALL     	R0 2 2 ; R0 := R0(R1)
	15	[2509]	GETUPVAL 	R1 U2 ; R1 := U2
	16	[2509]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 25
	17	[2509]	JMP      	25 ; PC := 25
	18	[2510]	SETUPVAL 	R0 U2 ; U2 := R0
	19	[2511]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	20	[2511]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xaade900e]
	21	[2511]	LOADK    	R3 K4 ; R3 := "MiniMapContainer.MapBorders"
	22	[2511]	LOADK    	R4 := 11.000000
	23	[2511]	NOT      	R5 R0 ; R5 := not R0
	24	[2511]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	25	[2515]	GETGLOBAL	R1 K5 ; R1 := 0xe72d2edb
	26	[2515]	EQ       	1 R1 K7 ; if R1 == 1.000000 then PC := 93
	27	[2515]	JMP      	93 ; PC := 93
	28	[2515]	GETUPVAL 	R1 U3 ; R1 := U3
	29	[2515]	GETGLOBAL	R2 K8 ; R2 := 0x34291f5c
	30	[2515]	GETTABLE 	R2 R2 K9 ; R2 := R2[0x1467d5f4]
	31	[2515]	CALL     	R2 1 2 ; R2 := R2()
	32	[2515]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 93
	33	[2515]	JMP      	93 ; PC := 93
	34	[2516]	GETGLOBAL	R1 K8 ; R1 := 0x34291f5c
	35	[2516]	GETTABLE 	R1 R1 K9 ; R1 := R1[0x1467d5f4]
	36	[2516]	CALL     	R1 1 2 ; R1 := R1()
	37	[2516]	SETUPVAL 	R1 U3 ; U3 := R1
	38	[2518]	LOADK    	R1 K10 ; R1 := "MoaComponent.SummonMoa"
	39	[2519]	GETGLOBAL	R2 K5 ; R2 := 0xe72d2edb
	40	[2519]	EQ       	0 R2 K11 ; if R2 ~= 3.000000 then PC := 43
	41	[2519]	JMP      	43 ; PC := 43
	42	[2520]	LOADK    	R1 K12 ; R1 := "StancePanel.StanceComponent.Stance"
	43	[2522]	MOVE     	R2 R1 ; R2 := R1
	44	[2522]	LOADK    	R3 K13 ; R3 := "2"
	45	[2522]	CONCAT   	R2 R2 R3 ; R2 := R2 .. R3
	46	[2523]	MOVE     	R3 R1 ; R3 := R1
	47	[2523]	LOADK    	R4 K14 ; R4 := "1"
	48	[2523]	CONCAT   	R1 R3 R4 ; R1 := R3 .. R4
	49	[2525]	GETGLOBAL	R3 K2 ; R3 := 0xae91e43b
	50	[2525]	SELF     	R3 R3 K15 ; R4 := R3; R3 := R3[0x91a24e4b]
	51	[2525]	MOVE     	R5 R1 ; R5 := R1
	52	[2525]	LOADK    	R6 := 0.000000
	53	[2525]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	54	[2526]	GETGLOBAL	R4 K2 ; R4 := 0xae91e43b
	55	[2526]	SELF     	R4 R4 K15 ; R5 := R4; R4 := R4[0x91a24e4b]
	56	[2526]	MOVE     	R6 R2 ; R6 := R2
	57	[2526]	LOADK    	R7 := 0.000000
	58	[2526]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	59	[2527]	GETGLOBAL	R5 K2 ; R5 := 0xae91e43b
	60	[2527]	SELF     	R5 R5 K16 ; R6 := R5; R5 := R5[0x67bc869f]
	61	[2527]	MOVE     	R7 R1 ; R7 := R1
	62	[2527]	LOADK    	R8 := 0.000000
	63	[2527]	MOVE     	R9 R4 ; R9 := R4
	64	[2527]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	65	[2528]	GETGLOBAL	R5 K2 ; R5 := 0xae91e43b
	66	[2528]	SELF     	R5 R5 K16 ; R6 := R5; R5 := R5[0x67bc869f]
	67	[2528]	MOVE     	R7 R2 ; R7 := R2
	68	[2528]	LOADK    	R8 := 0.000000
	69	[2528]	MOVE     	R9 R3 ; R9 := R3
	70	[2528]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	71	[2530]	GETGLOBAL	R5 K2 ; R5 := 0xae91e43b
	72	[2530]	SELF     	R5 R5 K15 ; R6 := R5; R5 := R5[0x91a24e4b]
	73	[2530]	MOVE     	R7 R1 ; R7 := R1
	74	[2530]	LOADK    	R8 := 1.000000
	75	[2530]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	76	[2531]	GETGLOBAL	R6 K2 ; R6 := 0xae91e43b
	77	[2531]	SELF     	R6 R6 K15 ; R7 := R6; R6 := R6[0x91a24e4b]
	78	[2531]	MOVE     	R8 R2 ; R8 := R2
	79	[2531]	LOADK    	R9 := 1.000000
	80	[2531]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	81	[2532]	GETGLOBAL	R7 K2 ; R7 := 0xae91e43b
	82	[2532]	SELF     	R7 R7 K16 ; R8 := R7; R7 := R7[0x67bc869f]
	83	[2532]	MOVE     	R9 R1 ; R9 := R1
	84	[2532]	LOADK    	R10 := 1.000000
	85	[2532]	MOVE     	R11 R6 ; R11 := R6
	86	[2532]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	87	[2533]	GETGLOBAL	R7 K2 ; R7 := 0xae91e43b
	88	[2533]	SELF     	R7 R7 K16 ; R8 := R7; R7 := R7[0x67bc869f]
	89	[2533]	MOVE     	R9 R2 ; R9 := R2
	90	[2533]	LOADK    	R10 := 1.000000
	91	[2533]	MOVE     	R11 R5 ; R11 := R5
	92	[2533]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	93	[2536]	GETGLOBAL	R7 K17 ; R7 := _T
	94	[2536]	GETTABLE 	R7 R7 K18 ; R7 := R7["CustomHudHealth"]
	95	[2536]	TEST     	R7 1 ; if R7 then PC := 104
	96	[2536]	JMP      	104 ; PC := 104
	97	[2536]	GETGLOBAL	R7 K19 ; R7 := 0x5bced4c4
	98	[2536]	GETTABLE 	R7 R7 K20 ; R7 := R7[0xb62ecfe0]
	99	[2536]	LOADK    	R8 := 0.000000
	100	[2536]	GETUPVAL 	R9 U0 ; R9 := U0
	101	[2536]	SELF     	R9 R9 K21 ; R10 := R9; R9 := R9[0x614c860a]
	102	[2536]	CALL     	R9 2 0 ; R9,... := R9(R10)
	103	[2536]	CALL     	R7 0 2 ; R7 := R7(R8,...)
	104	[2537]	GETGLOBAL	R8 K5 ; R8 := 0xe72d2edb
	105	[2537]	EQ       	0 R8 K7 ; if R8 ~= 1.000000 then PC := 245
	106	[2537]	JMP      	245 ; PC := 245
	107	[2538]	GETUPVAL 	R8 U4 ; R8 := U4
	108	[2538]	GETTABLE 	R8 R8 K22 ; R8 := R8["Health"]
	109	[2538]	EQ       	1 R7 R8 ; if R7 == R8 then PC := 148
	110	[2538]	JMP      	148 ; PC := 148
	111	[2539]	GETUPVAL 	R8 U4 ; R8 := U4
	112	[2539]	SETTABLE 	R8 K22 R7 ; R8["Health"] := R7
	113	[2540]	GETUPVAL 	R8 U5 ; R8 := U5
	114	[2540]	LOADK    	R9 K22 ; R9 := "Health"
	115	[2540]	LOADK    	R10 K23 ; R10 := "HealthAndShield.PlayerHealth"
	116	[2540]	MOVE     	R11 R7 ; R11 := R7
	117	[2540]	GETGLOBAL	R12 K17 ; R12 := _T
	118	[2540]	GETTABLE 	R12 R12 K24 ; R12 := R12["CustomHudHealthOffset"]
	119	[2540]	TEST     	R12 1 ; if R12 then PC := 122
	120	[2540]	JMP      	122 ; PC := 122
	121	[2540]	LOADK    	R12 := 1.000000
	122	[2540]	LOADK    	R13 := 72.000000
	123	[2540]	CALL     	R8 6 1 ; R8(R9,R10,R11,R12,R13)
	124	[2542]	GETUPVAL 	R8 U0 ; R8 := U0
	125	[2542]	SELF     	R8 R8 K25 ; R9 := R8; R8 := R8[0x52cd594a]
	126	[2542]	CALL     	R8 2 2 ; R8 := R8(R9)
	127	[2543]	MUL      	R9 R8 K26 ; R9 := R8 * 59.000000
	128	[2543]	SUB      	R9 K27 R9 ; R9 := 60.000000 - R9
	129	[2544]	GETGLOBAL	R10 K28 ; R10 := 0x38f10e85
	130	[2544]	GETGLOBAL	R11 K2 ; R11 := 0xae91e43b
	131	[2544]	LOADK    	R12 K29 ; R12 := "HealthAndShield.Player.gotoAndStop"
	132	[2544]	MOVE     	R13 R9 ; R13 := R9
	133	[2544]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	134	[2545]	GETGLOBAL	R10 K2 ; R10 := 0xae91e43b
	135	[2545]	SELF     	R10 R10 K16 ; R11 := R10; R10 := R10[0x67bc869f]
	136	[2545]	LOADK    	R12 K30 ; R12 := "HealthAndShield.Player.Health"
	137	[2545]	LOADK    	R13 := 9.000000
	138	[2545]	GETUPVAL 	R14 U6 ; R14 := U6
	139	[2545]	GETTABLE 	R14 R14 K22 ; R14 := R14["Health"]
	140	[2545]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	141	[2546]	GETGLOBAL	R10 K2 ; R10 := 0xae91e43b
	142	[2546]	SELF     	R10 R10 K16 ; R11 := R10; R10 := R10[0x67bc869f]
	143	[2546]	LOADK    	R12 K31 ; R12 := "HealthAndShield.Player.Bg"
	144	[2546]	LOADK    	R13 := 9.000000
	145	[2546]	GETUPVAL 	R14 U6 ; R14 := U6
	146	[2546]	GETTABLE 	R14 R14 K32 ; R14 := R14["UnselectedAbility"]
	147	[2546]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	148	[2550]	GETGLOBAL	R10 K0 ; R10 := 0x7b998233
	149	[2550]	GETUPVAL 	R11 U7 ; R11 := U7
	150	[2550]	GETTABLE 	R11 R11 K33 ; R11 := R11["ActivePowerSuit"]
	151	[2550]	CALL     	R10 2 2 ; R10 := R10(R11)
	152	[2550]	TEST     	R10 1 ; if R10 then PC := 205
	153	[2550]	JMP      	205 ; PC := 205
	154	[2551]	GETUPVAL 	R10 U7 ; R10 := U7
	155	[2551]	GETTABLE 	R10 R10 K33 ; R10 := R10["ActivePowerSuit"]
	156	[2551]	SELF     	R10 R10 K34 ; R11 := R10; R10 := R10[0x58a4d5ac]
	157	[2551]	CALL     	R10 2 2 ; R10 := R10(R11)
	158	[2552]	GETGLOBAL	R11 K19 ; R11 := 0x5bced4c4
	159	[2552]	GETTABLE 	R11 R11 K35 ; R11 := R11[0xac1b386a]
	160	[2552]	DIV      	R12 R10 K36 ; R12 := R10 / 25.000000
	161	[2552]	CALL     	R11 2 2 ; R11 := R11(R12)
	162	[2553]	GETUPVAL 	R12 U4 ; R12 := U4
	163	[2553]	GETTABLE 	R12 R12 K37 ; R12 := R12["GrenadeCount"]
	164	[2553]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 205
	165	[2553]	JMP      	205 ; PC := 205
	166	[2554]	GETUPVAL 	R12 U4 ; R12 := U4
	167	[2554]	SETTABLE 	R12 K37 R11 ; R12["GrenadeCount"] := R11
	168	[2555]	LOADK    	R12 := 1.000000
	169	[2555]	LOADK    	R13 := 4.000000
	170	[2555]	LOADK    	R14 := 1.000000
	171	[2555]	FORPREP  	R12 204 ; R12 -= R14; PC := 204
	172	[2556]	LE       	1 R15 R11 ; if R15 <= R11 then PC := 175
	173	[2556]	JMP      	175 ; PC := 175
	174	[2556]	OP_LOADBOOL	R16 0 1 ; R16 := false; PC := 175
	175	[2556]	OP_LOADBOOL	R16 1 0 ; R16 := true
	176	[2557]	GETGLOBAL	R17 K2 ; R17 := 0xae91e43b
	177	[2557]	SELF     	R17 R17 K38 ; R18 := R17; R17 := R17[0xf64b7262]
	178	[2557]	LOADK    	R19 K39 ; R19 := "GrenadeComponent.Grenade"
	179	[2557]	MOVE     	R20 R15 ; R20 := R15
	180	[2557]	CONCAT   	R19 R19 R20 ; R19 := R19 .. R20
	181	[2557]	LOADK    	R20 K40 ; R20 := "Fill"
	182	[2557]	LOADK    	R21 := 9.000000
	183	[2557]	GETUPVAL 	R22 U8 ; R22 := U8
	184	[2557]	GETTABLE 	R22 R22 K41 ; R22 := R22[0x06d055f9]
	185	[2557]	MOVE     	R23 R16 ; R23 := R16
	186	[2557]	LOADK    	R24 K42 ; R24 := 15844670.000000
	187	[2557]	LOADK    	R25 K43 ; R25 := 16777215.000000
	188	[2557]	CALL     	R22 4 0 ; R22,... := R22(R23,R24,R25)
	189	[2557]	CALL     	R17 0 1 ; R17(R18,...)
	190	[2558]	GETGLOBAL	R17 K2 ; R17 := 0xae91e43b
	191	[2558]	SELF     	R17 R17 K38 ; R18 := R17; R17 := R17[0xf64b7262]
	192	[2558]	LOADK    	R19 K39 ; R19 := "GrenadeComponent.Grenade"
	193	[2558]	MOVE     	R20 R15 ; R20 := R15
	194	[2558]	CONCAT   	R19 R19 R20 ; R19 := R19 .. R20
	195	[2558]	LOADK    	R20 K40 ; R20 := "Fill"
	196	[2558]	LOADK    	R21 := 10.000000
	197	[2558]	GETUPVAL 	R22 U8 ; R22 := U8
	198	[2558]	GETTABLE 	R22 R22 K41 ; R22 := R22[0x06d055f9]
	199	[2558]	MOVE     	R23 R16 ; R23 := R16
	200	[2558]	LOADK    	R24 := 100.000000
	201	[2558]	LOADK    	R25 := 10.000000
	202	[2558]	CALL     	R22 4 0 ; R22,... := R22(R23,R24,R25)
	203	[2558]	CALL     	R17 0 1 ; R17(R18,...)
	204	[2555]	FORLOOP  	R12 172 ; R12 += R14; if R12 <= R13 then begin PC := 172; R15 := R12 end
	205	[2564]	GETGLOBAL	R17 K0 ; R17 := 0x7b998233
	206	[2564]	GETUPVAL 	R18 U7 ; R18 := U7
	207	[2564]	GETTABLE 	R18 R18 K33 ; R18 := R18["ActivePowerSuit"]
	208	[2564]	CALL     	R17 2 2 ; R17 := R17(R18)
	209	[2564]	TEST     	R17 1 ; if R17 then PC := 662
	210	[2564]	JMP      	662 ; PC := 662
	211	[2565]	GETUPVAL 	R17 U4 ; R17 := U4
	212	[2565]	GETTABLE 	R17 R17 K44 ; R17 := R17["CoverAbility"]
	213	[2565]	EQ       	0 R17 K45 ; if R17 ~= nil then PC := 222
	214	[2565]	JMP      	222 ; PC := 222
	215	[2566]	GETUPVAL 	R17 U4 ; R17 := U4
	216	[2566]	GETUPVAL 	R18 U7 ; R18 := U7
	217	[2566]	GETTABLE 	R18 R18 K33 ; R18 := R18["ActivePowerSuit"]
	218	[2566]	SELF     	R18 R18 K46 ; R19 := R18; R18 := R18[0xdaddfb73]
	219	[2566]	LOADK    	R20 := 1.000000
	220	[2566]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	221	[2566]	SETTABLE 	R17 K44 R18 ; R17[0xb71355b8] := R18
	222	[2569]	GETGLOBAL	R17 K0 ; R17 := 0x7b998233
	223	[2569]	GETUPVAL 	R18 U4 ; R18 := U4
	224	[2569]	GETTABLE 	R18 R18 K44 ; R18 := R18["CoverAbility"]
	225	[2569]	CALL     	R17 2 2 ; R17 := R17(R18)
	226	[2569]	TEST     	R17 1 ; if R17 then PC := 662
	227	[2569]	JMP      	662 ; PC := 662
	228	[2570]	GETUPVAL 	R17 U4 ; R17 := U4
	229	[2570]	GETTABLE 	R17 R17 K44 ; R17 := R17["CoverAbility"]
	230	[2570]	SELF     	R17 R17 K47 ; R18 := R17; R17 := R17[0xf8975e8e]
	231	[2570]	CALL     	R17 2 2 ; R17 := R17(R18)
	232	[2570]	NOT      	R17 R17 ; R17 := not R17
	233	[2571]	GETGLOBAL	R18 K2 ; R18 := 0xae91e43b
	234	[2571]	SELF     	R18 R18 K16 ; R19 := R18; R18 := R18[0x67bc869f]
	235	[2571]	LOADK    	R20 K48 ; R20 := "CoverPanel.Cover"
	236	[2571]	LOADK    	R21 := 10.000000
	237	[2571]	GETUPVAL 	R22 U8 ; R22 := U8
	238	[2571]	GETTABLE 	R22 R22 K41 ; R22 := R22[0x06d055f9]
	239	[2571]	MOVE     	R23 R17 ; R23 := R17
	240	[2571]	LOADK    	R24 := 100.000000
	241	[2571]	LOADK    	R25 := 30.000000
	242	[2571]	CALL     	R22 4 0 ; R22,... := R22(R23,R24,R25)
	243	[2571]	CALL     	R18 0 1 ; R18(R19,...)
	244	[2573]	JMP      	662 ; PC := 662
	245	[2574]	GETGLOBAL	R18 K5 ; R18 := 0xe72d2edb
	246	[2574]	EQ       	0 R18 K11 ; if R18 ~= 3.000000 then PC := 431
	247	[2574]	JMP      	431 ; PC := 431
	248	[2575]	GETUPVAL 	R18 U0 ; R18 := U0
	249	[2575]	SELF     	R18 R18 K49 ; R19 := R18; R18 := R18[0x1ac1655c]
	250	[2575]	CALL     	R18 2 2 ; R18 := R18(R19)
	251	[2576]	GETGLOBAL	R19 K17 ; R19 := _T
	252	[2576]	GETTABLE 	R19 R19 K18 ; R19 := R19["CustomHudHealth"]
	253	[2576]	TEST     	R19 1 ; if R19 then PC := 257
	254	[2576]	JMP      	257 ; PC := 257
	255	[2576]	SELF     	R19 R18 K50 ; R20 := R18; R19 := R18[0xd127117d]
	256	[2576]	CALL     	R19 2 2 ; R19 := R19(R20)
	257	[2578]	GETUPVAL 	R20 U4 ; R20 := U4
	258	[2578]	GETTABLE 	R20 R20 K22 ; R20 := R20["Health"]
	259	[2578]	EQ       	1 R7 R20 ; if R7 == R20 then PC := 302
	260	[2578]	JMP      	302 ; PC := 302
	261	[2579]	GETUPVAL 	R20 U4 ; R20 := U4
	262	[2579]	SETTABLE 	R20 K22 R7 ; R20["Health"] := R7
	263	[2580]	GETUPVAL 	R20 U5 ; R20 := U5
	264	[2580]	LOADK    	R21 K22 ; R21 := "Health"
	265	[2580]	LOADK    	R22 K23 ; R22 := "HealthAndShield.PlayerHealth"
	266	[2580]	MOVE     	R23 R7 ; R23 := R7
	267	[2580]	GETGLOBAL	R24 K17 ; R24 := _T
	268	[2580]	GETTABLE 	R24 R24 K24 ; R24 := R24["CustomHudHealthOffset"]
	269	[2580]	TEST     	R24 1 ; if R24 then PC := 272
	270	[2580]	JMP      	272 ; PC := 272
	271	[2580]	LOADK    	R24 := 0.000000
	272	[2580]	LOADK    	R25 := 72.000000
	273	[2580]	CALL     	R20 6 3 ; R20,R21 := R20(R21,R22,R23,R24,R25)
	274	[2581]	GETGLOBAL	R22 K2 ; R22 := 0xae91e43b
	275	[2581]	SELF     	R22 R22 K16 ; R23 := R22; R22 := R22[0x67bc869f]
	276	[2581]	LOADK    	R24 K51 ; R24 := "HealthAndShield.HealthLeafDeco"
	277	[2581]	LOADK    	R25 := 0.000000
	278	[2581]	ADD      	R26 K52 R21 ; R26 := -54.000000 + R21
	279	[2581]	CALL     	R22 5 1 ; R22(R23,R24,R25,R26)
	280	[2583]	GETUPVAL 	R22 U0 ; R22 := U0
	281	[2583]	SELF     	R22 R22 K25 ; R23 := R22; R22 := R22[0x52cd594a]
	282	[2583]	CALL     	R22 2 2 ; R22 := R22(R23)
	283	[2584]	MUL      	R23 R22 K26 ; R23 := R22 * 59.000000
	284	[2584]	SUB      	R23 K27 R23 ; R23 := 60.000000 - R23
	285	[2585]	GETGLOBAL	R24 K28 ; R24 := 0x38f10e85
	286	[2585]	GETGLOBAL	R25 K2 ; R25 := 0xae91e43b
	287	[2585]	LOADK    	R26 K29 ; R26 := "HealthAndShield.Player.gotoAndStop"
	288	[2585]	MOVE     	R27 R23 ; R27 := R23
	289	[2585]	CALL     	R24 4 1 ; R24(R25,R26,R27)
	290	[2586]	GETGLOBAL	R24 K2 ; R24 := 0xae91e43b
	291	[2586]	SELF     	R24 R24 K16 ; R25 := R24; R24 := R24[0x67bc869f]
	292	[2586]	LOADK    	R26 K30 ; R26 := "HealthAndShield.Player.Health"
	293	[2586]	LOADK    	R27 := 9.000000
	294	[2586]	LOADK    	R28 K53 ; R28 := 9150127.000000
	295	[2586]	CALL     	R24 5 1 ; R24(R25,R26,R27,R28)
	296	[2587]	GETGLOBAL	R24 K2 ; R24 := 0xae91e43b
	297	[2587]	SELF     	R24 R24 K16 ; R25 := R24; R24 := R24[0x67bc869f]
	298	[2587]	LOADK    	R26 K31 ; R26 := "HealthAndShield.Player.Bg"
	299	[2587]	LOADK    	R27 := 9.000000
	300	[2587]	LOADK    	R28 K54 ; R28 := 6970169.000000
	301	[2587]	CALL     	R24 5 1 ; R24(R25,R26,R27,R28)
	302	[2589]	GETUPVAL 	R24 U4 ; R24 := U4
	303	[2589]	GETTABLE 	R24 R24 K55 ; R24 := R24["Shield"]
	304	[2589]	EQ       	1 R19 R24 ; if R19 == R24 then PC := 340
	305	[2589]	JMP      	340 ; PC := 340
	306	[2590]	GETUPVAL 	R24 U4 ; R24 := U4
	307	[2590]	SETTABLE 	R24 K55 R19 ; R24["Shield"] := R19
	308	[2591]	GETUPVAL 	R24 U5 ; R24 := U5
	309	[2591]	LOADK    	R25 K55 ; R25 := "Shield"
	310	[2591]	LOADK    	R26 K56 ; R26 := "HealthAndShield.PlayerShield"
	311	[2591]	MOVE     	R27 R19 ; R27 := R19
	312	[2591]	GETGLOBAL	R28 K17 ; R28 := _T
	313	[2591]	GETTABLE 	R28 R28 K24 ; R28 := R28["CustomHudHealthOffset"]
	314	[2591]	TEST     	R28 1 ; if R28 then PC := 317
	315	[2591]	JMP      	317 ; PC := 317
	316	[2591]	LOADK    	R28 := 0.000000
	317	[2591]	LOADK    	R29 := 72.000000
	318	[2591]	CALL     	R24 6 1 ; R24(R25,R26,R27,R28,R29)
	319	[2593]	SELF     	R24 R18 K57 ; R25 := R18; R24 := R18[0xd29b845d]
	320	[2593]	CALL     	R24 2 2 ; R24 := R24(R25)
	321	[2594]	MUL      	R25 R24 K26 ; R25 := R24 * 59.000000
	322	[2594]	SUB      	R25 K27 R25 ; R25 := 60.000000 - R25
	323	[2595]	GETGLOBAL	R26 K28 ; R26 := 0x38f10e85
	324	[2595]	GETGLOBAL	R27 K2 ; R27 := 0xae91e43b
	325	[2595]	LOADK    	R28 K58 ; R28 := "HealthAndShield.PlayerShieldBar.gotoAndStop"
	326	[2595]	MOVE     	R29 R25 ; R29 := R25
	327	[2595]	CALL     	R26 4 1 ; R26(R27,R28,R29)
	328	[2596]	GETGLOBAL	R26 K2 ; R26 := 0xae91e43b
	329	[2596]	SELF     	R26 R26 K16 ; R27 := R26; R26 := R26[0x67bc869f]
	330	[2596]	LOADK    	R28 K59 ; R28 := "HealthAndShield.PlayerShieldBar.Health"
	331	[2596]	LOADK    	R29 := 9.000000
	332	[2596]	LOADK    	R30 K60 ; R30 := 14337426.000000
	333	[2596]	CALL     	R26 5 1 ; R26(R27,R28,R29,R30)
	334	[2597]	GETGLOBAL	R26 K2 ; R26 := 0xae91e43b
	335	[2597]	SELF     	R26 R26 K16 ; R27 := R26; R26 := R26[0x67bc869f]
	336	[2597]	LOADK    	R28 K61 ; R28 := "HealthAndShield.PlayerShieldBar.Bg"
	337	[2597]	LOADK    	R29 := 9.000000
	338	[2597]	LOADK    	R30 K54 ; R30 := 6970169.000000
	339	[2597]	CALL     	R26 5 1 ; R26(R27,R28,R29,R30)
	340	[2600]	GETGLOBAL	R26 K2 ; R26 := 0xae91e43b
	341	[2600]	SELF     	R26 R26 K16 ; R27 := R26; R26 := R26[0x67bc869f]
	342	[2600]	LOADK    	R28 K62 ; R28 := "Reticle.ReticuleLines"
	343	[2600]	LOADK    	R29 := 9.000000
	344	[2600]	LOADK    	R30 K63 ; R30 := 16769169.000000
	345	[2600]	CALL     	R26 5 1 ; R26(R27,R28,R29,R30)
	346	[2601]	GETGLOBAL	R26 K2 ; R26 := 0xae91e43b
	347	[2601]	SELF     	R26 R26 K16 ; R27 := R26; R26 := R26[0x67bc869f]
	348	[2601]	LOADK    	R28 K64 ; R28 := "Reticle.ReticleLeft"
	349	[2601]	LOADK    	R29 := 9.000000
	350	[2601]	LOADK    	R30 K63 ; R30 := 16769169.000000
	351	[2601]	CALL     	R26 5 1 ; R26(R27,R28,R29,R30)
	352	[2602]	GETGLOBAL	R26 K2 ; R26 := 0xae91e43b
	353	[2602]	SELF     	R26 R26 K16 ; R27 := R26; R26 := R26[0x67bc869f]
	354	[2602]	LOADK    	R28 K65 ; R28 := "Reticle.ReticleRight"
	355	[2602]	LOADK    	R29 := 9.000000
	356	[2602]	LOADK    	R30 K63 ; R30 := 16769169.000000
	357	[2602]	CALL     	R26 5 1 ; R26(R27,R28,R29,R30)
	358	[2603]	GETGLOBAL	R26 K2 ; R26 := 0xae91e43b
	359	[2603]	SELF     	R26 R26 K16 ; R27 := R26; R26 := R26[0x67bc869f]
	360	[2603]	LOADK    	R28 K66 ; R28 := "Reticle.Dot"
	361	[2603]	LOADK    	R29 := 9.000000
	362	[2603]	LOADK    	R30 K63 ; R30 := 16769169.000000
	363	[2603]	CALL     	R26 5 1 ; R26(R27,R28,R29,R30)
	364	[2604]	GETGLOBAL	R26 K2 ; R26 := 0xae91e43b
	365	[2604]	SELF     	R26 R26 K16 ; R27 := R26; R26 := R26[0x67bc869f]
	366	[2604]	LOADK    	R28 K67 ; R28 := "Reticle.Arm1.InsideDiamond"
	367	[2604]	LOADK    	R29 := 9.000000
	368	[2604]	LOADK    	R30 K68 ; R30 := 8363959.000000
	369	[2604]	CALL     	R26 5 1 ; R26(R27,R28,R29,R30)
	370	[2606]	GETGLOBAL	R26 K0 ; R26 := 0x7b998233
	371	[2606]	GETUPVAL 	R27 U7 ; R27 := U7
	372	[2606]	GETTABLE 	R27 R27 K33 ; R27 := R27["ActivePowerSuit"]
	373	[2606]	CALL     	R26 2 2 ; R26 := R26(R27)
	374	[2606]	TEST     	R26 1 ; if R26 then PC := 662
	375	[2606]	JMP      	662 ; PC := 662
	376	[2607]	GETUPVAL 	R26 U4 ; R26 := U4
	377	[2607]	GETTABLE 	R26 R26 K69 ; R26 := R26["CustomAbilities"]
	378	[2607]	EQ       	0 R26 K45 ; if R26 ~= nil then PC := 386
	379	[2607]	JMP      	386 ; PC := 386
	380	[2608]	GETUPVAL 	R26 U4 ; R26 := U4
	381	[2608]	GETUPVAL 	R27 U7 ; R27 := U7
	382	[2608]	GETTABLE 	R27 R27 K33 ; R27 := R27["ActivePowerSuit"]
	383	[2608]	SELF     	R27 R27 K70 ; R28 := R27; R27 := R27[0x3c88e434]
	384	[2608]	CALL     	R27 2 2 ; R27 := R27(R28)
	385	[2608]	SETTABLE 	R26 K69 R27 ; R26["CustomAbilities"] := R27
	386	[2611]	GETGLOBAL	R26 K19 ; R26 := 0x5bced4c4
	387	[2611]	GETTABLE 	R26 R26 K35 ; R26 := R26[0xac1b386a]
	388	[2611]	GETUPVAL 	R27 U4 ; R27 := U4
	389	[2611]	GETTABLE 	R27 R27 K69 ; R27 := R27["CustomAbilities"]
	390	[2611]	LEN      	R27 R27 ; R27 := # R27
	391	[2611]	LOADK    	R28 := 3.000000
	392	[2611]	CALL     	R26 3 2 ; R26 := R26(R27,R28)
	393	[2612]	LOADK    	R27 := 1.000000
	394	[2612]	MOVE     	R28 R26 ; R28 := R26
	395	[2612]	LOADK    	R29 := 1.000000
	396	[2612]	FORPREP  	R27 429 ; R27 -= R29; PC := 429
	397	[2613]	GETUPVAL 	R31 U4 ; R31 := U4
	398	[2613]	GETTABLE 	R31 R31 K69 ; R31 := R31["CustomAbilities"]
	399	[2613]	GETTABLE 	R31 R31 R30 ; R31 := R31[R30]
	400	[2613]	SELF     	R31 R31 K71 ; R32 := R31; R31 := R31[0xd8140b94]
	401	[2613]	CALL     	R31 2 2 ; R31 := R31(R32)
	402	[2614]	GETGLOBAL	R32 K2 ; R32 := 0xae91e43b
	403	[2614]	SELF     	R32 R32 K38 ; R33 := R32; R32 := R32[0xf64b7262]
	404	[2614]	LOADK    	R34 K12 ; R34 := "StancePanel.StanceComponent.Stance"
	405	[2614]	MOVE     	R35 R30 ; R35 := R30
	406	[2614]	CONCAT   	R34 R34 R35 ; R34 := R34 .. R35
	407	[2614]	LOADK    	R35 K72 ; R35 := "Icon"
	408	[2614]	LOADK    	R36 := 9.000000
	409	[2614]	GETUPVAL 	R37 U8 ; R37 := U8
	410	[2614]	GETTABLE 	R37 R37 K41 ; R37 := R37[0x06d055f9]
	411	[2614]	MOVE     	R38 R31 ; R38 := R31
	412	[2614]	GETUPVAL 	R39 U4 ; R39 := U4
	413	[2614]	GETTABLE 	R39 R39 K73 ; R39 := R39["TeshinStanceActiveColors"]
	414	[2614]	GETTABLE 	R39 R39 R30 ; R39 := R39[R30]
	415	[2614]	GETUPVAL 	R40 U4 ; R40 := U4
	416	[2614]	GETTABLE 	R40 R40 K74 ; R40 := R40["TeshinStanceInactiveColors"]
	417	[2614]	GETTABLE 	R40 R40 R30 ; R40 := R40[R30]
	418	[2614]	CALL     	R37 4 0 ; R37,... := R37(R38,R39,R40)
	419	[2614]	CALL     	R32 0 1 ; R32(R33,...)
	420	[2615]	GETGLOBAL	R32 K2 ; R32 := 0xae91e43b
	421	[2615]	SELF     	R32 R32 K75 ; R33 := R32; R32 := R32[0xc0a3774b]
	422	[2615]	LOADK    	R34 K12 ; R34 := "StancePanel.StanceComponent.Stance"
	423	[2615]	MOVE     	R35 R30 ; R35 := R30
	424	[2615]	CONCAT   	R34 R34 R35 ; R34 := R34 .. R35
	425	[2615]	LOADK    	R35 K76 ; R35 := "IconGlow"
	426	[2615]	LOADK    	R36 := 11.000000
	427	[2615]	MOVE     	R37 R31 ; R37 := R31
	428	[2615]	CALL     	R32 6 1 ; R32(R33,R34,R35,R36,R37)
	429	[2612]	FORLOOP  	R27 397 ; R27 += R29; if R27 <= R28 then begin PC := 397; R30 := R27 end
	430	[2617]	JMP      	662 ; PC := 662
	431	[2618]	GETGLOBAL	R32 K5 ; R32 := 0xe72d2edb
	432	[2618]	EQ       	0 R32 K77 ; if R32 ~= 2.000000 then PC := 591
	433	[2618]	JMP      	591 ; PC := 591
	434	[2619]	GETUPVAL 	R32 U0 ; R32 := U0
	435	[2619]	SELF     	R32 R32 K49 ; R33 := R32; R32 := R32[0x1ac1655c]
	436	[2619]	CALL     	R32 2 2 ; R32 := R32(R33)
	437	[2620]	GETGLOBAL	R33 K17 ; R33 := _T
	438	[2620]	GETTABLE 	R33 R33 K18 ; R33 := R33["CustomHudHealth"]
	439	[2620]	TEST     	R33 1 ; if R33 then PC := 443
	440	[2620]	JMP      	443 ; PC := 443
	441	[2620]	SELF     	R33 R32 K50 ; R34 := R32; R33 := R32[0xd127117d]
	442	[2620]	CALL     	R33 2 2 ; R33 := R33(R34)
	443	[2622]	GETUPVAL 	R34 U4 ; R34 := U4
	444	[2622]	GETTABLE 	R34 R34 K22 ; R34 := R34["Health"]
	445	[2622]	EQ       	1 R7 R34 ; if R7 == R34 then PC := 482
	446	[2622]	JMP      	482 ; PC := 482
	447	[2623]	GETUPVAL 	R34 U4 ; R34 := U4
	448	[2623]	SETTABLE 	R34 K22 R7 ; R34["Health"] := R7
	449	[2624]	GETUPVAL 	R34 U5 ; R34 := U5
	450	[2624]	LOADK    	R35 K22 ; R35 := "Health"
	451	[2624]	LOADK    	R36 K23 ; R36 := "HealthAndShield.PlayerHealth"
	452	[2624]	MOVE     	R37 R7 ; R37 := R7
	453	[2624]	GETGLOBAL	R38 K17 ; R38 := _T
	454	[2624]	GETTABLE 	R38 R38 K24 ; R38 := R38["CustomHudHealthOffset"]
	455	[2624]	TEST     	R38 1 ; if R38 then PC := 458
	456	[2624]	JMP      	458 ; PC := 458
	457	[2624]	LOADK    	R38 := 0.000000
	458	[2624]	LOADK    	R39 := 58.000000
	459	[2624]	CALL     	R34 6 1 ; R34(R35,R36,R37,R38,R39)
	460	[2626]	GETUPVAL 	R34 U0 ; R34 := U0
	461	[2626]	SELF     	R34 R34 K25 ; R35 := R34; R34 := R34[0x52cd594a]
	462	[2626]	CALL     	R34 2 2 ; R34 := R34(R35)
	463	[2627]	MUL      	R35 R34 K26 ; R35 := R34 * 59.000000
	464	[2627]	SUB      	R35 K27 R35 ; R35 := 60.000000 - R35
	465	[2628]	GETGLOBAL	R36 K28 ; R36 := 0x38f10e85
	466	[2628]	GETGLOBAL	R37 K2 ; R37 := 0xae91e43b
	467	[2628]	LOADK    	R38 K29 ; R38 := "HealthAndShield.Player.gotoAndStop"
	468	[2628]	MOVE     	R39 R35 ; R39 := R35
	469	[2628]	CALL     	R36 4 1 ; R36(R37,R38,R39)
	470	[2629]	GETGLOBAL	R36 K2 ; R36 := 0xae91e43b
	471	[2629]	SELF     	R36 R36 K16 ; R37 := R36; R36 := R36[0x67bc869f]
	472	[2629]	LOADK    	R38 K30 ; R38 := "HealthAndShield.Player.Health"
	473	[2629]	LOADK    	R39 := 9.000000
	474	[2629]	LOADK    	R40 K78 ; R40 := 12284689.000000
	475	[2629]	CALL     	R36 5 1 ; R36(R37,R38,R39,R40)
	476	[2630]	GETGLOBAL	R36 K2 ; R36 := 0xae91e43b
	477	[2630]	SELF     	R36 R36 K16 ; R37 := R36; R36 := R36[0x67bc869f]
	478	[2630]	LOADK    	R38 K31 ; R38 := "HealthAndShield.Player.Bg"
	479	[2630]	LOADK    	R39 := 9.000000
	480	[2630]	LOADK    	R40 K79 ; R40 := 2779007.000000
	481	[2630]	CALL     	R36 5 1 ; R36(R37,R38,R39,R40)
	482	[2632]	GETUPVAL 	R36 U4 ; R36 := U4
	483	[2632]	GETTABLE 	R36 R36 K55 ; R36 := R36["Shield"]
	484	[2632]	EQ       	1 R33 R36 ; if R33 == R36 then PC := 520
	485	[2632]	JMP      	520 ; PC := 520
	486	[2633]	GETUPVAL 	R36 U4 ; R36 := U4
	487	[2633]	SETTABLE 	R36 K55 R33 ; R36["Shield"] := R33
	488	[2634]	GETUPVAL 	R36 U5 ; R36 := U5
	489	[2634]	LOADK    	R37 K55 ; R37 := "Shield"
	490	[2634]	LOADK    	R38 K56 ; R38 := "HealthAndShield.PlayerShield"
	491	[2634]	MOVE     	R39 R33 ; R39 := R33
	492	[2634]	GETGLOBAL	R40 K17 ; R40 := _T
	493	[2634]	GETTABLE 	R40 R40 K24 ; R40 := R40["CustomHudHealthOffset"]
	494	[2634]	TEST     	R40 1 ; if R40 then PC := 497
	495	[2634]	JMP      	497 ; PC := 497
	496	[2634]	LOADK    	R40 := 0.000000
	497	[2634]	LOADK    	R41 := 66.000000
	498	[2634]	CALL     	R36 6 1 ; R36(R37,R38,R39,R40,R41)
	499	[2636]	SELF     	R36 R32 K57 ; R37 := R32; R36 := R32[0xd29b845d]
	500	[2636]	CALL     	R36 2 2 ; R36 := R36(R37)
	501	[2637]	MUL      	R37 R36 K26 ; R37 := R36 * 59.000000
	502	[2637]	SUB      	R37 K27 R37 ; R37 := 60.000000 - R37
	503	[2638]	GETGLOBAL	R38 K28 ; R38 := 0x38f10e85
	504	[2638]	GETGLOBAL	R39 K2 ; R39 := 0xae91e43b
	505	[2638]	LOADK    	R40 K58 ; R40 := "HealthAndShield.PlayerShieldBar.gotoAndStop"
	506	[2638]	MOVE     	R41 R37 ; R41 := R37
	507	[2638]	CALL     	R38 4 1 ; R38(R39,R40,R41)
	508	[2639]	GETGLOBAL	R38 K2 ; R38 := 0xae91e43b
	509	[2639]	SELF     	R38 R38 K16 ; R39 := R38; R38 := R38[0x67bc869f]
	510	[2639]	LOADK    	R40 K59 ; R40 := "HealthAndShield.PlayerShieldBar.Health"
	511	[2639]	LOADK    	R41 := 9.000000
	512	[2639]	LOADK    	R42 K80 ; R42 := 65535.000000
	513	[2639]	CALL     	R38 5 1 ; R38(R39,R40,R41,R42)
	514	[2640]	GETGLOBAL	R38 K2 ; R38 := 0xae91e43b
	515	[2640]	SELF     	R38 R38 K16 ; R39 := R38; R38 := R38[0x67bc869f]
	516	[2640]	LOADK    	R40 K61 ; R40 := "HealthAndShield.PlayerShieldBar.Bg"
	517	[2640]	LOADK    	R41 := 9.000000
	518	[2640]	LOADK    	R42 K79 ; R42 := 2779007.000000
	519	[2640]	CALL     	R38 5 1 ; R38(R39,R40,R41,R42)
	520	[2643]	GETGLOBAL	R38 K0 ; R38 := 0x7b998233
	521	[2643]	GETUPVAL 	R39 U7 ; R39 := U7
	522	[2643]	GETTABLE 	R39 R39 K33 ; R39 := R39["ActivePowerSuit"]
	523	[2643]	CALL     	R38 2 2 ; R38 := R38(R39)
	524	[2643]	TEST     	R38 1 ; if R38 then PC := 662
	525	[2643]	JMP      	662 ; PC := 662
	526	[2644]	GETUPVAL 	R38 U4 ; R38 := U4
	527	[2644]	GETTABLE 	R38 R38 K69 ; R38 := R38["CustomAbilities"]
	528	[2644]	EQ       	0 R38 K45 ; if R38 ~= nil then PC := 536
	529	[2644]	JMP      	536 ; PC := 536
	530	[2645]	GETUPVAL 	R38 U4 ; R38 := U4
	531	[2645]	GETUPVAL 	R39 U7 ; R39 := U7
	532	[2645]	GETTABLE 	R39 R39 K33 ; R39 := R39["ActivePowerSuit"]
	533	[2645]	SELF     	R39 R39 K70 ; R40 := R39; R39 := R39[0x3c88e434]
	534	[2645]	CALL     	R39 2 2 ; R39 := R39(R40)
	535	[2645]	SETTABLE 	R38 K69 R39 ; R38["CustomAbilities"] := R39
	536	[2648]	GETGLOBAL	R38 K19 ; R38 := 0x5bced4c4
	537	[2648]	GETTABLE 	R38 R38 K35 ; R38 := R38[0xac1b386a]
	538	[2648]	GETUPVAL 	R39 U4 ; R39 := U4
	539	[2648]	GETTABLE 	R39 R39 K69 ; R39 := R39["CustomAbilities"]
	540	[2648]	LEN      	R39 R39 ; R39 := # R39
	541	[2648]	LOADK    	R40 := 3.000000
	542	[2648]	CALL     	R38 3 2 ; R38 := R38(R39,R40)
	543	[2649]	LOADK    	R39 := 1.000000
	544	[2649]	MOVE     	R40 R38 ; R40 := R38
	545	[2649]	LOADK    	R41 := 1.000000
	546	[2649]	FORPREP  	R39 589 ; R39 -= R41; PC := 589
	547	[2650]	GETGLOBAL	R43 K17 ; R43 := _T
	548	[2650]	GETTABLE 	R43 R43 K81 ; R43 := R43["VesoMoas"]
	549	[2650]	EQ       	1 R43 K45 ; if R43 == nil then PC := 564
	550	[2650]	JMP      	564 ; PC := 564
	551	[2650]	GETGLOBAL	R43 K17 ; R43 := _T
	552	[2650]	GETTABLE 	R43 R43 K81 ; R43 := R43["VesoMoas"]
	553	[2650]	GETTABLE 	R43 R43 R42 ; R43 := R43[R42]
	554	[2650]	EQ       	1 R43 K45 ; if R43 == nil then PC := 564
	555	[2650]	JMP      	564 ; PC := 564
	556	[2650]	GETGLOBAL	R43 K0 ; R43 := 0x7b998233
	557	[2650]	GETGLOBAL	R44 K17 ; R44 := _T
	558	[2650]	GETTABLE 	R44 R44 K81 ; R44 := R44["VesoMoas"]
	559	[2650]	GETTABLE 	R44 R44 R42 ; R44 := R44[R42]
	560	[2650]	GETTABLE 	R44 R44 K82 ; R44 := R44["avatar"]
	561	[2650]	CALL     	R43 2 2 ; R43 := R43(R44)
	562	[2650]	NOT      	R43 R43 ; R43 := not R43
	563	[2650]	JMP      	566 ; PC := 566
	564	[2650]	OP_LOADBOOL	R43 0 1 ; R43 := false; PC := 565
	565	[2650]	OP_LOADBOOL	R43 1 0 ; R43 := true
	566	[2652]	GETGLOBAL	R44 K2 ; R44 := 0xae91e43b
	567	[2652]	SELF     	R44 R44 K38 ; R45 := R44; R44 := R44[0xf64b7262]
	568	[2652]	LOADK    	R46 K10 ; R46 := "MoaComponent.SummonMoa"
	569	[2652]	MOVE     	R47 R42 ; R47 := R42
	570	[2652]	CONCAT   	R46 R46 R47 ; R46 := R46 .. R47
	571	[2652]	LOADK    	R47 K72 ; R47 := "Icon"
	572	[2652]	LOADK    	R48 := 10.000000
	573	[2652]	GETUPVAL 	R49 U8 ; R49 := U8
	574	[2652]	GETTABLE 	R49 R49 K41 ; R49 := R49[0x06d055f9]
	575	[2652]	MOVE     	R50 R43 ; R50 := R43
	576	[2652]	LOADK    	R51 := 100.000000
	577	[2652]	LOADK    	R52 := 50.000000
	578	[2652]	CALL     	R49 4 0 ; R49,... := R49(R50,R51,R52)
	579	[2652]	CALL     	R44 0 1 ; R44(R45,...)
	580	[2653]	GETGLOBAL	R44 K2 ; R44 := 0xae91e43b
	581	[2653]	SELF     	R44 R44 K75 ; R45 := R44; R44 := R44[0xc0a3774b]
	582	[2653]	LOADK    	R46 K10 ; R46 := "MoaComponent.SummonMoa"
	583	[2653]	MOVE     	R47 R42 ; R47 := R42
	584	[2653]	CONCAT   	R46 R46 R47 ; R46 := R46 .. R47
	585	[2653]	LOADK    	R47 K76 ; R47 := "IconGlow"
	586	[2653]	LOADK    	R48 := 11.000000
	587	[2653]	MOVE     	R49 R43 ; R49 := R43
	588	[2653]	CALL     	R44 6 1 ; R44(R45,R46,R47,R48,R49)
	589	[2649]	FORLOOP  	R39 547 ; R39 += R41; if R39 <= R40 then begin PC := 547; R42 := R39 end
	590	[2655]	JMP      	662 ; PC := 662
	591	[2656]	GETGLOBAL	R44 K5 ; R44 := 0xe72d2edb
	592	[2656]	EQ       	0 R44 K83 ; if R44 ~= 4.000000 then PC := 662
	593	[2656]	JMP      	662 ; PC := 662
	594	[2657]	GETUPVAL 	R44 U0 ; R44 := U0
	595	[2657]	SELF     	R44 R44 K49 ; R45 := R44; R44 := R44[0x1ac1655c]
	596	[2657]	CALL     	R44 2 2 ; R44 := R44(R45)
	597	[2658]	GETGLOBAL	R45 K17 ; R45 := _T
	598	[2658]	GETTABLE 	R45 R45 K18 ; R45 := R45["CustomHudHealth"]
	599	[2658]	TEST     	R45 1 ; if R45 then PC := 603
	600	[2658]	JMP      	603 ; PC := 603
	601	[2658]	SELF     	R45 R44 K50 ; R46 := R44; R45 := R44[0xd127117d]
	602	[2658]	CALL     	R45 2 2 ; R45 := R45(R46)
	603	[2660]	GETUPVAL 	R46 U4 ; R46 := U4
	604	[2660]	GETTABLE 	R46 R46 K22 ; R46 := R46["Health"]
	605	[2660]	EQ       	1 R7 R46 ; if R7 == R46 then PC := 631
	606	[2660]	JMP      	631 ; PC := 631
	607	[2661]	GETUPVAL 	R46 U4 ; R46 := U4
	608	[2661]	SETTABLE 	R46 K22 R7 ; R46["Health"] := R7
	609	[2662]	GETUPVAL 	R46 U5 ; R46 := U5
	610	[2662]	LOADK    	R47 K22 ; R47 := "Health"
	611	[2662]	LOADK    	R48 K23 ; R48 := "HealthAndShield.PlayerHealth"
	612	[2662]	MOVE     	R49 R7 ; R49 := R7
	613	[2662]	GETGLOBAL	R50 K17 ; R50 := _T
	614	[2662]	GETTABLE 	R50 R50 K24 ; R50 := R50["CustomHudHealthOffset"]
	615	[2662]	TEST     	R50 1 ; if R50 then PC := 618
	616	[2662]	JMP      	618 ; PC := 618
	617	[2662]	LOADK    	R50 := 0.000000
	618	[2662]	LOADK    	R51 := 72.000000
	619	[2662]	CALL     	R46 6 1 ; R46(R47,R48,R49,R50,R51)
	620	[2663]	GETUPVAL 	R46 U5 ; R46 := U5
	621	[2663]	LOADK    	R47 K84 ; R47 := "HealthBlur"
	622	[2663]	LOADK    	R48 K85 ; R48 := "HealthAndShield.PlayerHealthBlur"
	623	[2663]	MOVE     	R49 R7 ; R49 := R7
	624	[2663]	GETGLOBAL	R50 K17 ; R50 := _T
	625	[2663]	GETTABLE 	R50 R50 K24 ; R50 := R50["CustomHudHealthOffset"]
	626	[2663]	TEST     	R50 1 ; if R50 then PC := 629
	627	[2663]	JMP      	629 ; PC := 629
	628	[2663]	LOADK    	R50 := 0.000000
	629	[2663]	LOADK    	R51 := 72.000000
	630	[2663]	CALL     	R46 6 1 ; R46(R47,R48,R49,R50,R51)
	631	[2665]	GETUPVAL 	R46 U4 ; R46 := U4
	632	[2665]	GETTABLE 	R46 R46 K55 ; R46 := R46["Shield"]
	633	[2665]	EQ       	1 R45 R46 ; if R45 == R46 then PC := 662
	634	[2665]	JMP      	662 ; PC := 662
	635	[2666]	GETUPVAL 	R46 U4 ; R46 := U4
	636	[2666]	SETTABLE 	R46 K55 R45 ; R46["Shield"] := R45
	637	[2667]	GETUPVAL 	R46 U5 ; R46 := U5
	638	[2667]	LOADK    	R47 K55 ; R47 := "Shield"
	639	[2667]	LOADK    	R48 K56 ; R48 := "HealthAndShield.PlayerShield"
	640	[2667]	MOVE     	R49 R45 ; R49 := R45
	641	[2667]	GETGLOBAL	R50 K17 ; R50 := _T
	642	[2667]	GETTABLE 	R50 R50 K24 ; R50 := R50["CustomHudHealthOffset"]
	643	[2667]	TEST     	R50 1 ; if R50 then PC := 646
	644	[2667]	JMP      	646 ; PC := 646
	645	[2667]	LOADK    	R50 := 0.000000
	646	[2667]	LOADK    	R51 := 72.000000
	647	[2667]	CALL     	R46 6 1 ; R46(R47,R48,R49,R50,R51)
	648	[2668]	EQ       	0 R45 K86 ; if R45 ~= 0.000000 then PC := 655
	649	[2668]	JMP      	655 ; PC := 655
	650	[2668]	SELF     	R46 R44 K87 ; R47 := R44; R46 := R44[0x2ebc4897]
	651	[2668]	CALL     	R46 2 2 ; R46 := R46(R47)
	652	[2668]	LT       	1 K86 R46 ; if 0.000000 < R46 then PC := 655
	653	[2668]	JMP      	655 ; PC := 655
	654	[2668]	OP_LOADBOOL	R46 0 1 ; R46 := false; PC := 655
	655	[2668]	OP_LOADBOOL	R46 1 0 ; R46 := true
	656	[2669]	GETGLOBAL	R47 K2 ; R47 := 0xae91e43b
	657	[2669]	SELF     	R47 R47 K3 ; R48 := R47; R47 := R47[0xaade900e]
	658	[2669]	LOADK    	R49 K56 ; R49 := "HealthAndShield.PlayerShield"
	659	[2669]	LOADK    	R50 := 11.000000
	660	[2669]	MOVE     	R51 R46 ; R51 := R46
	661	[2669]	CALL     	R47 5 1 ; R47(R48,R49,R50,R51)
	662	[2672]	RETURN   	R0 1 ; return 

function #104 <?:2674,3016> (923 instructions, 3692 bytes at 0000021132F7E010)
0 params, 50 slots, 24 upvalues, 0 locals, 114 constants, 0 functions
	1	[2675]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[2675]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[2675]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[2675]	TEST     	R0 1 ; if R0 then PC := 10
	5	[2675]	JMP      	10 ; PC := 10
	6	[2675]	GETUPVAL 	R0 U0 ; R0 := U0
	7	[2675]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	8	[2675]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 12
	9	[2675]	JMP      	12 ; PC := 12
	10	[2676]	GETUPVAL 	R0 U1 ; R0 := U1
	11	[2676]	CALL     	R0 1 1 ; R0()
	12	[2679]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	13	[2679]	GETUPVAL 	R1 U0 ; R1 := U0
	14	[2679]	CALL     	R0 2 2 ; R0 := R0(R1)
	15	[2679]	TEST     	R0 0 ; if not R0 then PC := 19
	16	[2679]	JMP      	19 ; PC := 19
	17	[2680]	OP_LOADBOOL	R0 0 0 ; R0 := false
	18	[2680]	RETURN   	R0 2 ; return R0 
	19	[2683]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	20	[2683]	GETUPVAL 	R1 U2 ; R1 := U2
	21	[2683]	CALL     	R0 2 2 ; R0 := R0(R1)
	22	[2683]	TEST     	R0 0 ; if not R0 then PC := 71
	23	[2683]	JMP      	71 ; PC := 71
	24	[2684]	GETGLOBAL	R0 K2 ; R0 := 0xae91e43b
	25	[2684]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0xcd73323e]
	26	[2684]	CALL     	R0 2 2 ; R0 := R0(R1)
	27	[2684]	SETUPVAL 	R0 U2 ; U2 := R0
	28	[2685]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	29	[2685]	GETUPVAL 	R1 U2 ; R1 := U2
	30	[2685]	CALL     	R0 2 2 ; R0 := R0(R1)
	31	[2685]	TEST     	R0 0 ; if not R0 then PC := 35
	32	[2685]	JMP      	35 ; PC := 35
	33	[2686]	OP_LOADBOOL	R0 0 0 ; R0 := false
	34	[2686]	RETURN   	R0 2 ; return R0 
	35	[2689]	GETUPVAL 	R0 U2 ; R0 := U2
	36	[2689]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0x474501e1]
	37	[2689]	CALL     	R0 2 2 ; R0 := R0(R1)
	38	[2689]	SETUPVAL 	R0 U3 ; U3 := R0
	39	[2691]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	40	[2691]	GETUPVAL 	R1 U3 ; R1 := U3
	41	[2691]	CALL     	R0 2 2 ; R0 := R0(R1)
	42	[2691]	TEST     	R0 0 ; if not R0 then PC := 51
	43	[2691]	JMP      	51 ; PC := 51
	44	[2692]	GETGLOBAL	R0 K5 ; R0 := 0x3d106989
	45	[2692]	LOADK    	R1 K6 ; R1 := "HUD REDUX: null minimap"
	46	[2692]	CALL     	R0 2 1 ; R0(R1)
	47	[2693]	LOADNIL  	R0 R0 ; R0 := nil
	48	[2693]	SETUPVAL 	R0 U2 ; U2 := R0
	49	[2694]	OP_LOADBOOL	R0 0 0 ; R0 := false
	50	[2694]	RETURN   	R0 2 ; return R0 
	51	[2697]	GETUPVAL 	R0 U3 ; R0 := U3
	52	[2697]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0xf4ed1581]
	53	[2697]	CALL     	R0 2 2 ; R0 := R0(R1)
	54	[2697]	SETUPVAL 	R0 U4 ; U4 := R0
	55	[2698]	GETGLOBAL	R0 K8 ; R0 := 0xe72d2edb
	56	[2698]	EQ       	1 R0 K10 ; if R0 == 0.000000 then PC := 65
	57	[2698]	JMP      	65 ; PC := 65
	58	[2699]	GETGLOBAL	R0 K2 ; R0 := 0xae91e43b
	59	[2699]	SELF     	R0 R0 K11 ; R1 := R0; R0 := R0[0xaade900e]
	60	[2699]	LOADK    	R2 K12 ; R2 := "MiniMapContainer.MapBorders"
	61	[2699]	LOADK    	R3 := 11.000000
	62	[2699]	GETUPVAL 	R4 U4 ; R4 := U4
	63	[2699]	NOT      	R4 R4 ; R4 := not R4
	64	[2699]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	65	[2702]	GETUPVAL 	R0 U4 ; R0 := U4
	66	[2702]	TEST     	R0 1 ; if R0 then PC := 71
	67	[2702]	JMP      	71 ; PC := 71
	68	[2705]	GETUPVAL 	R0 U3 ; R0 := U3
	69	[2705]	SELF     	R0 R0 K13 ; R1 := R0; R0 := R0[0xd4735716]
	70	[2705]	CALL     	R0 2 1 ; R0(R1)
	71	[2709]	LOADNIL  	R0 R0 ; R0 := nil
	72	[2711]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	73	[2711]	GETUPVAL 	R2 U5 ; R2 := U5
	74	[2711]	GETTABLE 	R2 R2 K14 ; R2 := R2["CameraController"]
	75	[2711]	CALL     	R1 2 2 ; R1 := R1(R2)
	76	[2711]	TEST     	R1 0 ; if not R1 then PC := 83
	77	[2711]	JMP      	83 ; PC := 83
	78	[2712]	GETUPVAL 	R1 U5 ; R1 := U5
	79	[2712]	GETUPVAL 	R2 U2 ; R2 := U2
	80	[2712]	SELF     	R2 R2 K15 ; R3 := R2; R2 := R2[0x0b4bcfb6]
	81	[2712]	CALL     	R2 2 2 ; R2 := R2(R3)
	82	[2712]	SETTABLE 	R1 K14 R2 ; R1[0x0a000034] := R2
	83	[2715]	GETUPVAL 	R1 U0 ; R1 := U0
	84	[2715]	SELF     	R1 R1 K16 ; R2 := R1; R1 := R1[0xf2deaf69]
	85	[2715]	GETGLOBAL	R3 K17 ; R3 := gLotusBasePvpGameRulesType
	86	[2715]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	87	[2715]	TEST     	R1 0 ; if not R1 then PC := 92
	88	[2715]	JMP      	92 ; PC := 92
	89	[2715]	GETUPVAL 	R1 U0 ; R1 := U0
	90	[2715]	SELF     	R1 R1 K18 ; R2 := R1; R1 := R1[0x32316a21]
	91	[2715]	CALL     	R1 2 2 ; R1 := R1(R2)
	92	[2717]	GETUPVAL 	R2 U6 ; R2 := U6
	93	[2717]	GETUPVAL 	R3 U6 ; R3 := U6
	94	[2717]	GETTABLE 	R3 R3 K20 ; R3 := R3["IsSpectating"]
	95	[2717]	SETTABLE 	R2 K19 R3 ; R2[0x0a00001d] := R3
	96	[2718]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	97	[2718]	GETUPVAL 	R3 U5 ; R3 := U5
	98	[2718]	GETTABLE 	R3 R3 K14 ; R3 := R3["CameraController"]
	99	[2718]	CALL     	R2 2 2 ; R2 := R2(R3)
	100	[2718]	TEST     	R2 1 ; if R2 then PC := 189
	101	[2718]	JMP      	189 ; PC := 189
	102	[2718]	GETUPVAL 	R2 U5 ; R2 := U5
	103	[2718]	GETTABLE 	R2 R2 K14 ; R2 := R2["CameraController"]
	104	[2718]	SELF     	R2 R2 K21 ; R3 := R2; R2 := R2[0x174fdd85]
	105	[2718]	CALL     	R2 2 2 ; R2 := R2(R3)
	106	[2718]	TEST     	R2 0 ; if not R2 then PC := 189
	107	[2718]	JMP      	189 ; PC := 189
	108	[2718]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	109	[2718]	GETUPVAL 	R3 U5 ; R3 := U5
	110	[2718]	GETTABLE 	R3 R3 K14 ; R3 := R3["CameraController"]
	111	[2718]	SELF     	R3 R3 K22 ; R4 := R3; R3 := R3[0x122ed2ac]
	112	[2718]	CALL     	R3 2 0 ; R3,... := R3(R4)
	113	[2718]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	114	[2718]	TEST     	R2 1 ; if R2 then PC := 189
	115	[2718]	JMP      	189 ; PC := 189
	116	[2722]	GETUPVAL 	R2 U5 ; R2 := U5
	117	[2722]	GETTABLE 	R2 R2 K14 ; R2 := R2["CameraController"]
	118	[2722]	SELF     	R2 R2 K22 ; R3 := R2; R2 := R2[0x122ed2ac]
	119	[2722]	CALL     	R2 2 2 ; R2 := R2(R3)
	120	[2722]	MOVE     	R0 R2 ; R0 := R2
	121	[2723]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	122	[2723]	GETGLOBAL	R3 K23 ; R3 := _T
	123	[2723]	GETTABLE 	R3 R3 K24 ; R3 := R3["CommanderMap"]
	124	[2723]	CALL     	R2 2 2 ; R2 := R2(R3)
	125	[2723]	TEST     	R2 0 ; if not R2 then PC := 144
	126	[2723]	JMP      	144 ; PC := 144
	127	[2724]	GETGLOBAL	R2 K25 ; R2 := 0x89326c93
	128	[2724]	SELF     	R2 R2 K26 ; R3 := R2; R2 := R2[0x78298275]
	129	[2724]	CALL     	R2 2 2 ; R2 := R2(R3)
	130	[2725]	EQ       	1 R0 R2 ; if R0 == R2 then PC := 144
	131	[2725]	JMP      	144 ; PC := 144
	132	[2725]	GETUPVAL 	R3 U7 ; R3 := U7
	133	[2725]	EQ       	1 R3 R0 ; if R3 == R0 then PC := 144
	134	[2725]	JMP      	144 ; PC := 144
	135	[2726]	GETUPVAL 	R3 U3 ; R3 := U3
	136	[2726]	SELF     	R3 R3 K27 ; R4 := R3; R3 := R3[0x00f85b37]
	137	[2726]	MOVE     	R5 R0 ; R5 := R0
	138	[2726]	CALL     	R3 3 1 ; R3(R4,R5)
	139	[2727]	SETUPVAL 	R0 U7 ; U7 := R0
	140	[2728]	GETUPVAL 	R3 U7 ; R3 := U7
	141	[2728]	SELF     	R3 R3 K28 ; R4 := R3; R3 := R3[0x7102164f]
	142	[2728]	OP_LOADBOOL	R5 0 0 ; R5 := false
	143	[2728]	CALL     	R3 3 1 ; R3(R4,R5)
	144	[2731]	GETUPVAL 	R3 U6 ; R3 := U6
	145	[2731]	GETTABLE 	R3 R3 K20 ; R3 := R3["IsSpectating"]
	146	[2731]	TEST     	R3 1 ; if R3 then PC := 186
	147	[2731]	JMP      	186 ; PC := 186
	148	[2732]	GETGLOBAL	R3 K5 ; R3 := 0x3d106989
	149	[2732]	LOADK    	R4 K29 ; R4 := "*** Enabling spectator mode ***"
	150	[2732]	CALL     	R3 2 1 ; R3(R4)
	151	[2733]	TEST     	R1 0 ; if not R1 then PC := 177
	152	[2733]	JMP      	177 ; PC := 177
	153	[2733]	GETUPVAL 	R3 U0 ; R3 := U0
	154	[2733]	SELF     	R3 R3 K30 ; R4 := R3; R3 := R3[0x529b110d]
	155	[2733]	CALL     	R3 2 2 ; R3 := R3(R4)
	156	[2733]	EQ       	1 R3 K31 ; if R3 == 5.000000 then PC := 163
	157	[2733]	JMP      	163 ; PC := 163
	158	[2733]	GETUPVAL 	R3 U0 ; R3 := U0
	159	[2733]	SELF     	R3 R3 K30 ; R4 := R3; R3 := R3[0x529b110d]
	160	[2733]	CALL     	R3 2 2 ; R3 := R3(R4)
	161	[2733]	EQ       	0 R3 K32 ; if R3 ~= 2.000000 then PC := 177
	162	[2733]	JMP      	177 ; PC := 177
	163	[2733]	GETGLOBAL	R3 K23 ; R3 := _T
	164	[2733]	GETTABLE 	R3 R3 K33 ; R3 := R3["gSectorWars"]
	165	[2733]	TEST     	R3 1 ; if R3 then PC := 177
	166	[2733]	JMP      	177 ; PC := 177
	167	[2733]	GETUPVAL 	R3 U0 ; R3 := U0
	168	[2733]	SELF     	R3 R3 K16 ; R4 := R3; R3 := R3[0xf2deaf69]
	169	[2733]	GETGLOBAL	R5 K34 ; R5 := gLotusPvpGameRulesType
	170	[2733]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	171	[2733]	TEST     	R3 1 ; if R3 then PC := 177
	172	[2733]	JMP      	177 ; PC := 177
	173	[2734]	GETUPVAL 	R3 U0 ; R3 := U0
	174	[2734]	SELF     	R3 R3 K35 ; R4 := R3; R3 := R3[0x6033d6be]
	175	[2734]	OP_LOADBOOL	R5 1 0 ; R5 := true
	176	[2734]	CALL     	R3 3 1 ; R3(R4,R5)
	177	[2737]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	178	[2737]	GETUPVAL 	R4 U8 ; R4 := U8
	179	[2737]	CALL     	R3 2 2 ; R3 := R3(R4)
	180	[2737]	TEST     	R3 1 ; if R3 then PC := 186
	181	[2737]	JMP      	186 ; PC := 186
	182	[2738]	GETUPVAL 	R3 U8 ; R3 := U8
	183	[2738]	SELF     	R3 R3 K36 ; R4 := R3; R3 := R3[0x5cee792a]
	184	[2738]	OP_LOADBOOL	R5 0 0 ; R5 := false
	185	[2738]	CALL     	R3 3 1 ; R3(R4,R5)
	186	[2741]	GETUPVAL 	R3 U6 ; R3 := U6
	187	[2741]	SETTABLE 	R3 K20 K37 ; R3["IsSpectating"] := true
	188	[2741]	JMP      	277 ; PC := 277
	189	[2742]	GETUPVAL 	R3 U6 ; R3 := U6
	190	[2742]	GETTABLE 	R3 R3 K20 ; R3 := R3["IsSpectating"]
	191	[2742]	TEST     	R3 1 ; if R3 then PC := 198
	192	[2742]	JMP      	198 ; PC := 198
	193	[2742]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	194	[2742]	GETUPVAL 	R4 U9 ; R4 := U9
	195	[2742]	CALL     	R3 2 2 ; R3 := R3(R4)
	196	[2742]	TEST     	R3 0 ; if not R3 then PC := 253
	197	[2742]	JMP      	253 ; PC := 253
	198	[2743]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	199	[2743]	GETGLOBAL	R4 K23 ; R4 := _T
	200	[2743]	GETTABLE 	R4 R4 K24 ; R4 := R4["CommanderMap"]
	201	[2743]	CALL     	R3 2 2 ; R3 := R3(R4)
	202	[2743]	TEST     	R3 0 ; if not R3 then PC := 215
	203	[2743]	JMP      	215 ; PC := 215
	204	[2743]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	205	[2743]	GETUPVAL 	R4 U7 ; R4 := U7
	206	[2743]	CALL     	R3 2 2 ; R3 := R3(R4)
	207	[2743]	TEST     	R3 1 ; if R3 then PC := 215
	208	[2743]	JMP      	215 ; PC := 215
	209	[2744]	GETUPVAL 	R3 U7 ; R3 := U7
	210	[2744]	SELF     	R3 R3 K28 ; R4 := R3; R3 := R3[0x7102164f]
	211	[2744]	OP_LOADBOOL	R5 1 0 ; R5 := true
	212	[2744]	CALL     	R3 3 1 ; R3(R4,R5)
	213	[2745]	LOADNIL  	R3 R3 ; R3 := nil
	214	[2745]	SETUPVAL 	R3 U7 ; U7 := R3
	215	[2747]	GETUPVAL 	R3 U2 ; R3 := U2
	216	[2747]	SELF     	R3 R3 K38 ; R4 := R3; R3 := R3[0xbb610e5b]
	217	[2747]	CALL     	R3 2 2 ; R3 := R3(R4)
	218	[2747]	MOVE     	R0 R3 ; R0 := R3
	219	[2748]	TEST     	R0 0 ; if not R0 then PC := 277
	220	[2748]	JMP      	277 ; PC := 277
	221	[2750]	TEST     	R1 0 ; if not R1 then PC := 241
	222	[2750]	JMP      	241 ; PC := 241
	223	[2750]	GETUPVAL 	R3 U0 ; R3 := U0
	224	[2750]	SELF     	R3 R3 K30 ; R4 := R3; R3 := R3[0x529b110d]
	225	[2750]	CALL     	R3 2 2 ; R3 := R3(R4)
	226	[2750]	EQ       	1 R3 K31 ; if R3 == 5.000000 then PC := 233
	227	[2750]	JMP      	233 ; PC := 233
	228	[2750]	GETUPVAL 	R3 U0 ; R3 := U0
	229	[2750]	SELF     	R3 R3 K30 ; R4 := R3; R3 := R3[0x529b110d]
	230	[2750]	CALL     	R3 2 2 ; R3 := R3(R4)
	231	[2750]	EQ       	0 R3 K32 ; if R3 ~= 2.000000 then PC := 241
	232	[2750]	JMP      	241 ; PC := 241
	233	[2750]	GETGLOBAL	R3 K23 ; R3 := _T
	234	[2750]	GETTABLE 	R3 R3 K33 ; R3 := R3["gSectorWars"]
	235	[2750]	TEST     	R3 1 ; if R3 then PC := 241
	236	[2750]	JMP      	241 ; PC := 241
	237	[2751]	GETUPVAL 	R3 U0 ; R3 := U0
	238	[2751]	SELF     	R3 R3 K35 ; R4 := R3; R3 := R3[0x6033d6be]
	239	[2751]	OP_LOADBOOL	R5 0 0 ; R5 := false
	240	[2751]	CALL     	R3 3 1 ; R3(R4,R5)
	241	[2753]	GETUPVAL 	R3 U6 ; R3 := U6
	242	[2753]	SETTABLE 	R3 K20 K39 ; R3["IsSpectating"] := false
	243	[2755]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	244	[2755]	GETUPVAL 	R4 U8 ; R4 := U8
	245	[2755]	CALL     	R3 2 2 ; R3 := R3(R4)
	246	[2755]	TEST     	R3 1 ; if R3 then PC := 277
	247	[2755]	JMP      	277 ; PC := 277
	248	[2756]	GETUPVAL 	R3 U8 ; R3 := U8
	249	[2756]	SELF     	R3 R3 K36 ; R4 := R3; R3 := R3[0x5cee792a]
	250	[2756]	OP_LOADBOOL	R5 1 0 ; R5 := true
	251	[2756]	CALL     	R3 3 1 ; R3(R4,R5)
	252	[2758]	JMP      	277 ; PC := 277
	253	[2760]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	254	[2760]	GETGLOBAL	R4 K23 ; R4 := _T
	255	[2760]	GETTABLE 	R4 R4 K24 ; R4 := R4["CommanderMap"]
	256	[2760]	CALL     	R3 2 2 ; R3 := R3(R4)
	257	[2760]	TEST     	R3 0 ; if not R3 then PC := 270
	258	[2760]	JMP      	270 ; PC := 270
	259	[2760]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	260	[2760]	GETUPVAL 	R4 U7 ; R4 := U7
	261	[2760]	CALL     	R3 2 2 ; R3 := R3(R4)
	262	[2760]	TEST     	R3 1 ; if R3 then PC := 270
	263	[2760]	JMP      	270 ; PC := 270
	264	[2761]	GETUPVAL 	R3 U7 ; R3 := U7
	265	[2761]	SELF     	R3 R3 K28 ; R4 := R3; R3 := R3[0x7102164f]
	266	[2761]	OP_LOADBOOL	R5 1 0 ; R5 := true
	267	[2761]	CALL     	R3 3 1 ; R3(R4,R5)
	268	[2762]	LOADNIL  	R3 R3 ; R3 := nil
	269	[2762]	SETUPVAL 	R3 U7 ; U7 := R3
	270	[2764]	GETUPVAL 	R3 U10 ; R3 := U10
	271	[2764]	GETTABLE 	R3 R3 K40 ; R3 := R3[0xe3a0bbca]
	272	[2764]	GETUPVAL 	R4 U2 ; R4 := U2
	273	[2764]	GETUPVAL 	R5 U9 ; R5 := U9
	274	[2764]	OP_LOADBOOL	R6 1 0 ; R6 := true
	275	[2764]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	276	[2764]	MOVE     	R0 R3 ; R0 := R3
	277	[2767]	GETUPVAL 	R3 U6 ; R3 := U6
	278	[2767]	GETTABLE 	R3 R3 K20 ; R3 := R3["IsSpectating"]
	279	[2767]	TEST     	R3 0 ; if not R3 then PC := 302
	280	[2767]	JMP      	302 ; PC := 302
	281	[2767]	GETUPVAL 	R3 U6 ; R3 := U6
	282	[2767]	GETTABLE 	R3 R3 K19 ; R3 := R3["mWasSpectating"]
	283	[2767]	TEST     	R3 1 ; if R3 then PC := 302
	284	[2767]	JMP      	302 ; PC := 302
	285	[2768]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	286	[2768]	GETUPVAL 	R4 U8 ; R4 := U8
	287	[2768]	CALL     	R3 2 2 ; R3 := R3(R4)
	288	[2768]	TEST     	R3 1 ; if R3 then PC := 302
	289	[2768]	JMP      	302 ; PC := 302
	290	[2769]	GETUPVAL 	R3 U8 ; R3 := U8
	291	[2769]	SELF     	R3 R3 K41 ; R4 := R3; R3 := R3[0x603d617e]
	292	[2769]	CALL     	R3 2 2 ; R3 := R3(R4)
	293	[2770]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	294	[2770]	MOVE     	R5 R3 ; R5 := R3
	295	[2770]	CALL     	R4 2 2 ; R4 := R4(R5)
	296	[2770]	TEST     	R4 1 ; if R4 then PC := 302
	297	[2770]	JMP      	302 ; PC := 302
	298	[2771]	SELF     	R4 R3 K42 ; R5 := R3; R4 := R3[0xe4162eed]
	299	[2771]	LOADK    	R6 K43 ; R6 := "SetAiming"
	300	[2771]	LOADK    	R7 K44 ; R7 := "false"
	301	[2771]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	302	[2776]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	303	[2776]	GETUPVAL 	R5 U9 ; R5 := U9
	304	[2776]	CALL     	R4 2 2 ; R4 := R4(R5)
	305	[2776]	TEST     	R4 1 ; if R4 then PC := 382
	306	[2776]	JMP      	382 ; PC := 382
	307	[2776]	GETUPVAL 	R4 U9 ; R4 := U9
	308	[2776]	SELF     	R4 R4 K45 ; R5 := R4; R4 := R4[0x2047cfe7]
	309	[2776]	CALL     	R4 2 2 ; R4 := R4(R5)
	310	[2776]	TEST     	R4 0 ; if not R4 then PC := 382
	311	[2776]	JMP      	382 ; PC := 382
	312	[2776]	GETUPVAL 	R4 U11 ; R4 := U11
	313	[2776]	GETTABLE 	R4 R4 K46 ; R4 := R4["Cached"]
	314	[2776]	TEST     	R4 1 ; if R4 then PC := 382
	315	[2776]	JMP      	382 ; PC := 382
	316	[2778]	GETUPVAL 	R4 U9 ; R4 := U9
	317	[2778]	SELF     	R4 R4 K47 ; R5 := R4; R4 := R4[0x1f7e8969]
	318	[2778]	CALL     	R4 2 2 ; R4 := R4(R5)
	319	[2779]	LOADK    	R5 := 1.000000
	320	[2779]	LEN      	R6 R4 ; R6 := # R4
	321	[2779]	LOADK    	R7 := 1.000000
	322	[2779]	FORPREP  	R5 379 ; R5 -= R7; PC := 379
	323	[2780]	GETTABLE 	R9 R4 R8 ; R9 := R4[R8]
	324	[2781]	GETTABLE 	R10 R9 K48 ; R10 := R9["instigator"]
	325	[2781]	GETUPVAL 	R11 U9 ; R11 := U9
	326	[2781]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 379
	327	[2781]	JMP      	379 ; PC := 379
	328	[2782]	GETGLOBAL	R10 K9 ; R10 := 0x6c97a788
	329	[2782]	GETTABLE 	R10 R10 K49 ; R10 := R10[0x608bc054]
	330	[2782]	CALL     	R10 1 2 ; R10 := R10()
	331	[2783]	NEWTABLE 	R11 0 0 ; R11 := {}
	332	[2784]	GETUPVAL 	R12 U9 ; R12 := U9
	333	[2784]	SETTABLE 	R10 K48 R12 ; R10["instigator"] := R12
	334	[2785]	GETTABLE 	R12 R9 K50 ; R12 := R9["buffType"]
	335	[2785]	SETTABLE 	R10 K50 R12 ; R10["buffType"] := R12
	336	[2786]	GETTABLE 	R12 R9 K51 ; R12 := R9["isDebuff"]
	337	[2786]	SETTABLE 	R10 K51 R12 ; R10["isDebuff"] := R12
	338	[2787]	GETTABLE 	R12 R9 K52 ; R12 := R9["stackData"]
	339	[2787]	SETTABLE 	R10 K52 R12 ; R10["stackData"] := R12
	340	[2788]	GETTABLE 	R12 R9 K53 ; R12 := R9["abilityType"]
	341	[2788]	SETTABLE 	R10 K53 R12 ; R10["abilityType"] := R12
	342	[2789]	GETTABLE 	R12 R9 K54 ; R12 := R9["augmentType"]
	343	[2789]	SETTABLE 	R10 K54 R12 ; R10["augmentType"] := R12
	344	[2790]	GETTABLE 	R12 R9 K55 ; R12 := R9["buffData"]
	345	[2790]	SETTABLE 	R10 K55 R12 ; R10["buffData"] := R12
	346	[2791]	GETTABLE 	R12 R9 K56 ; R12 := R9["buffDataExtra"]
	347	[2791]	SETTABLE 	R10 K56 R12 ; R10["buffDataExtra"] := R12
	348	[2793]	LOADK    	R12 := 1.000000
	349	[2793]	GETTABLE 	R13 R9 K57 ; R13 := R9["affected"]
	350	[2793]	LEN      	R13 R13 ; R13 := # R13
	351	[2793]	LOADK    	R14 := 1.000000
	352	[2793]	FORPREP  	R12 368 ; R12 -= R14; PC := 368
	353	[2794]	GETTABLE 	R16 R9 K57 ; R16 := R9["affected"]
	354	[2794]	GETTABLE 	R16 R16 R15 ; R16 := R16[R15]
	355	[2795]	GETGLOBAL	R17 K0 ; R17 := 0x7b998233
	356	[2795]	MOVE     	R18 R16 ; R18 := R16
	357	[2795]	CALL     	R17 2 2 ; R17 := R17(R18)
	358	[2795]	TEST     	R17 1 ; if R17 then PC := 368
	359	[2795]	JMP      	368 ; PC := 368
	360	[2795]	GETUPVAL 	R17 U9 ; R17 := U9
	361	[2795]	EQ       	1 R16 R17 ; if R16 == R17 then PC := 368
	362	[2795]	JMP      	368 ; PC := 368
	363	[2796]	GETGLOBAL	R17 K58 ; R17 := 0x33bdd652
	364	[2796]	GETTABLE 	R17 R17 K59 ; R17 := R17[0x23d5322f]
	365	[2796]	MOVE     	R18 R11 ; R18 := R11
	366	[2796]	MOVE     	R19 R16 ; R19 := R16
	367	[2796]	CALL     	R17 3 1 ; R17(R18,R19)
	368	[2793]	FORLOOP  	R12 353 ; R12 += R14; if R12 <= R13 then begin PC := 353; R15 := R12 end
	369	[2800]	LEN      	R17 R11 ; R17 := # R11
	370	[2800]	LT       	0 K10 R17 ; if 0.000000 >= R17 then PC := 379
	371	[2800]	JMP      	379 ; PC := 379
	372	[2801]	SETTABLE 	R10 K57 R11 ; R10["affected"] := R11
	373	[2802]	GETGLOBAL	R17 K58 ; R17 := 0x33bdd652
	374	[2802]	GETTABLE 	R17 R17 K59 ; R17 := R17[0x23d5322f]
	375	[2802]	GETUPVAL 	R18 U11 ; R18 := U11
	376	[2802]	GETTABLE 	R18 R18 K60 ; R18 := R18["Buffs"]
	377	[2802]	MOVE     	R19 R10 ; R19 := R10
	378	[2802]	CALL     	R17 3 1 ; R17(R18,R19)
	379	[2779]	FORLOOP  	R5 323 ; R5 += R7; if R5 <= R6 then begin PC := 323; R8 := R5 end
	380	[2807]	GETUPVAL 	R17 U11 ; R17 := U11
	381	[2807]	SETTABLE 	R17 K46 K37 ; R17["Cached"] := true
	382	[2810]	GETGLOBAL	R17 K0 ; R17 := 0x7b998233
	383	[2810]	MOVE     	R18 R0 ; R18 := R0
	384	[2810]	CALL     	R17 2 2 ; R17 := R17(R18)
	385	[2810]	TEST     	R17 0 ; if not R17 then PC := 389
	386	[2810]	JMP      	389 ; PC := 389
	387	[2811]	OP_LOADBOOL	R17 0 0 ; R17 := false
	388	[2811]	RETURN   	R17 2 ; return R17 
	389	[2814]	GETGLOBAL	R17 K0 ; R17 := 0x7b998233
	390	[2814]	GETUPVAL 	R18 U9 ; R18 := U9
	391	[2814]	CALL     	R17 2 2 ; R17 := R17(R18)
	392	[2814]	TEST     	R17 1 ; if R17 then PC := 403
	393	[2814]	JMP      	403 ; PC := 403
	394	[2814]	GETUPVAL 	R17 U9 ; R17 := U9
	395	[2814]	EQ       	0 R17 R0 ; if R17 ~= R0 then PC := 403
	396	[2814]	JMP      	403 ; PC := 403
	397	[2814]	GETGLOBAL	R17 K0 ; R17 := 0x7b998233
	398	[2814]	GETUPVAL 	R18 U12 ; R18 := U12
	399	[2814]	GETTABLE 	R18 R18 K61 ; R18 := R18["ActivePowerSuit"]
	400	[2814]	CALL     	R17 2 2 ; R17 := R17(R18)
	401	[2814]	TEST     	R17 0 ; if not R17 then PC := 682
	402	[2814]	JMP      	682 ; PC := 682
	403	[2815]	SELF     	R17 R0 K62 ; R18 := R0; R17 := R0[0xde321e6f]
	404	[2815]	CALL     	R17 2 2 ; R17 := R17(R18)
	405	[2816]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	406	[2816]	MOVE     	R19 R17 ; R19 := R17
	407	[2816]	CALL     	R18 2 2 ; R18 := R18(R19)
	408	[2816]	TEST     	R18 1 ; if R18 then PC := 445
	409	[2816]	JMP      	445 ; PC := 445
	410	[2816]	SELF     	R18 R17 K16 ; R19 := R17; R18 := R17[0xf2deaf69]
	411	[2816]	GETGLOBAL	R20 K63 ; R20 := gLotusInventoryControllerType
	412	[2816]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	413	[2816]	TEST     	R18 0 ; if not R18 then PC := 445
	414	[2816]	JMP      	445 ; PC := 445
	415	[2817]	GETUPVAL 	R18 U5 ; R18 := U5
	416	[2817]	SETTABLE 	R18 K64 R17 ; R18["InventoryController"] := R17
	417	[2818]	GETUPVAL 	R18 U12 ; R18 := U12
	418	[2818]	GETUPVAL 	R19 U5 ; R19 := U5
	419	[2818]	GETTABLE 	R19 R19 K64 ; R19 := R19["InventoryController"]
	420	[2818]	SELF     	R19 R19 K65 ; R20 := R19; R19 := R19[0xf7d48ee0]
	421	[2818]	CALL     	R19 2 2 ; R19 := R19(R20)
	422	[2818]	SETTABLE 	R18 K61 R19 ; R18["ActivePowerSuit"] := R19
	423	[2819]	GETUPVAL 	R18 U12 ; R18 := U12
	424	[2819]	GETUPVAL 	R19 U2 ; R19 := U2
	425	[2819]	SELF     	R19 R19 K67 ; R20 := R19; R19 := R19[0xa534c3ac]
	426	[2819]	CALL     	R19 2 2 ; R19 := R19(R20)
	427	[2819]	SETTABLE 	R18 K66 R19 ; R18["OwnedPowerSuitAvatar"] := R19
	428	[2820]	GETUPVAL 	R18 U13 ; R18 := U13
	429	[2820]	SETTABLE 	R18 K68 K69 ; R18["CustomAbilities"] := nil
	430	[2821]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	431	[2821]	GETUPVAL 	R19 U12 ; R19 := U12
	432	[2821]	GETTABLE 	R19 R19 K66 ; R19 := R19["OwnedPowerSuitAvatar"]
	433	[2821]	CALL     	R18 2 2 ; R18 := R18(R19)
	434	[2821]	TEST     	R18 1 ; if R18 then PC := 443
	435	[2821]	JMP      	443 ; PC := 443
	436	[2822]	GETUPVAL 	R18 U5 ; R18 := U5
	437	[2822]	GETUPVAL 	R19 U12 ; R19 := U12
	438	[2822]	GETTABLE 	R19 R19 K66 ; R19 := R19["OwnedPowerSuitAvatar"]
	439	[2822]	SELF     	R19 R19 K62 ; R20 := R19; R19 := R19[0xde321e6f]
	440	[2822]	CALL     	R19 2 2 ; R19 := R19(R20)
	441	[2822]	SETTABLE 	R18 K70 R19 ; R18["OwnedPowerSuitInventoryController"] := R19
	442	[2822]	JMP      	445 ; PC := 445
	443	[2824]	GETUPVAL 	R18 U5 ; R18 := U5
	444	[2824]	SETTABLE 	R18 K70 K69 ; R18["OwnedPowerSuitInventoryController"] := nil
	445	[2828]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	446	[2828]	GETUPVAL 	R19 U5 ; R19 := U5
	447	[2828]	GETTABLE 	R19 R19 K64 ; R19 := R19["InventoryController"]
	448	[2828]	CALL     	R18 2 2 ; R18 := R18(R19)
	449	[2828]	TEST     	R18 0 ; if not R18 then PC := 453
	450	[2828]	JMP      	453 ; PC := 453
	451	[2829]	OP_LOADBOOL	R18 0 0 ; R18 := false
	452	[2829]	RETURN   	R18 2 ; return R18 
	453	[2832]	GETUPVAL 	R18 U5 ; R18 := U5
	454	[2832]	SELF     	R19 R0 K72 ; R20 := R0; R19 := R0[0x1ac1655c]
	455	[2832]	CALL     	R19 2 2 ; R19 := R19(R20)
	456	[2832]	SETTABLE 	R18 K71 R19 ; R18["DamageController"] := R19
	457	[2833]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	458	[2833]	GETUPVAL 	R19 U5 ; R19 := U5
	459	[2833]	GETTABLE 	R19 R19 K71 ; R19 := R19["DamageController"]
	460	[2833]	CALL     	R18 2 2 ; R18 := R18(R19)
	461	[2833]	TEST     	R18 0 ; if not R18 then PC := 465
	462	[2833]	JMP      	465 ; PC := 465
	463	[2834]	OP_LOADBOOL	R18 0 0 ; R18 := false
	464	[2834]	RETURN   	R18 2 ; return R18 
	465	[2837]	GETUPVAL 	R18 U5 ; R18 := U5
	466	[2837]	SELF     	R19 R0 K74 ; R20 := R0; R19 := R0[0xd3a01177]
	467	[2837]	CALL     	R19 2 2 ; R19 := R19(R20)
	468	[2837]	SETTABLE 	R18 K73 R19 ; R18["InputController"] := R19
	469	[2838]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	470	[2838]	GETUPVAL 	R19 U5 ; R19 := U5
	471	[2838]	GETTABLE 	R19 R19 K73 ; R19 := R19["InputController"]
	472	[2838]	CALL     	R18 2 2 ; R18 := R18(R19)
	473	[2838]	TEST     	R18 0 ; if not R18 then PC := 477
	474	[2838]	JMP      	477 ; PC := 477
	475	[2839]	OP_LOADBOOL	R18 0 0 ; R18 := false
	476	[2839]	RETURN   	R18 2 ; return R18 
	477	[2842]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	478	[2842]	GETUPVAL 	R19 U14 ; R19 := U14
	479	[2842]	CALL     	R18 2 2 ; R18 := R18(R19)
	480	[2842]	TEST     	R18 0 ; if not R18 then PC := 504
	481	[2842]	JMP      	504 ; PC := 504
	482	[2843]	GETUPVAL 	R18 U2 ; R18 := U2
	483	[2843]	SELF     	R18 R18 K75 ; R19 := R18; R18 := R18[0x6d7bfacb]
	484	[2843]	CALL     	R18 2 2 ; R18 := R18(R19)
	485	[2843]	SETUPVAL 	R18 U14 ; U14 := R18
	486	[2845]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	487	[2845]	GETUPVAL 	R19 U14 ; R19 := U14
	488	[2845]	CALL     	R18 2 2 ; R18 := R18(R19)
	489	[2845]	TEST     	R18 0 ; if not R18 then PC := 493
	490	[2845]	JMP      	493 ; PC := 493
	491	[2846]	OP_LOADBOOL	R18 0 0 ; R18 := false
	492	[2846]	RETURN   	R18 2 ; return R18 
	493	[2849]	GETGLOBAL	R18 K8 ; R18 := 0xe72d2edb
	494	[2849]	EQ       	1 R18 K10 ; if R18 == 0.000000 then PC := 500
	495	[2849]	JMP      	500 ; PC := 500
	496	[2850]	GETUPVAL 	R18 U14 ; R18 := U14
	497	[2850]	SELF     	R18 R18 K76 ; R19 := R18; R18 := R18[0xeaef69de]
	498	[2850]	GETGLOBAL	R20 K8 ; R20 := 0xe72d2edb
	499	[2850]	CALL     	R18 3 1 ; R18(R19,R20)
	500	[2853]	GETUPVAL 	R18 U14 ; R18 := U14
	501	[2853]	SELF     	R18 R18 K77 ; R19 := R18; R18 := R18[0x1e9695e9]
	502	[2853]	GETUPVAL 	R20 U2 ; R20 := U2
	503	[2853]	CALL     	R18 3 1 ; R18(R19,R20)
	504	[2856]	GETUPVAL 	R18 U6 ; R18 := U6
	505	[2856]	GETTABLE 	R18 R18 K78 ; R18 := R18["StalkerMode"]
	506	[2856]	GETGLOBAL	R19 K79 ; R19 := 0x0032441c
	507	[2856]	GETTABLE 	R19 R19 K78 ; R19 := R19["StalkerMode"]
	508	[2856]	EQ       	0 R19 K69 ; if R19 ~= nil then PC := 511
	509	[2856]	JMP      	511 ; PC := 511
	510	[2856]	OP_LOADBOOL	R19 0 1 ; R19 := false; PC := 511
	511	[2856]	OP_LOADBOOL	R19 1 0 ; R19 := true
	512	[2856]	EQ       	1 R18 R19 ; if R18 == R19 then PC := 527
	513	[2856]	JMP      	527 ; PC := 527
	514	[2857]	GETUPVAL 	R18 U6 ; R18 := U6
	515	[2857]	GETGLOBAL	R19 K79 ; R19 := 0x0032441c
	516	[2857]	GETTABLE 	R19 R19 K78 ; R19 := R19["StalkerMode"]
	517	[2857]	EQ       	0 R19 K69 ; if R19 ~= nil then PC := 520
	518	[2857]	JMP      	520 ; PC := 520
	519	[2857]	OP_LOADBOOL	R19 0 1 ; R19 := false; PC := 520
	520	[2857]	OP_LOADBOOL	R19 1 0 ; R19 := true
	521	[2857]	SETTABLE 	R18 K78 R19 ; R18["StalkerMode"] := R19
	522	[2858]	GETUPVAL 	R18 U14 ; R18 := U14
	523	[2858]	SELF     	R18 R18 K80 ; R19 := R18; R18 := R18[0x9b069215]
	524	[2858]	GETUPVAL 	R20 U6 ; R20 := U6
	525	[2858]	GETTABLE 	R20 R20 K78 ; R20 := R20["StalkerMode"]
	526	[2858]	CALL     	R18 3 1 ; R18(R19,R20)
	527	[2861]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	528	[2861]	GETUPVAL 	R19 U8 ; R19 := U8
	529	[2861]	CALL     	R18 2 2 ; R18 := R18(R19)
	530	[2861]	TEST     	R18 0 ; if not R18 then PC := 554
	531	[2861]	JMP      	554 ; PC := 554
	532	[2862]	GETUPVAL 	R18 U2 ; R18 := U2
	533	[2862]	SELF     	R18 R18 K81 ; R19 := R18; R18 := R18[0x0803eee1]
	534	[2862]	CALL     	R18 2 2 ; R18 := R18(R19)
	535	[2862]	SETUPVAL 	R18 U8 ; U8 := R18
	536	[2864]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	537	[2864]	GETUPVAL 	R19 U8 ; R19 := U8
	538	[2864]	CALL     	R18 2 2 ; R18 := R18(R19)
	539	[2864]	TEST     	R18 0 ; if not R18 then PC := 543
	540	[2864]	JMP      	543 ; PC := 543
	541	[2865]	OP_LOADBOOL	R18 0 0 ; R18 := false
	542	[2865]	RETURN   	R18 2 ; return R18 
	543	[2868]	GETGLOBAL	R18 K8 ; R18 := 0xe72d2edb
	544	[2868]	EQ       	1 R18 K10 ; if R18 == 0.000000 then PC := 550
	545	[2868]	JMP      	550 ; PC := 550
	546	[2869]	GETUPVAL 	R18 U8 ; R18 := U8
	547	[2869]	SELF     	R18 R18 K76 ; R19 := R18; R18 := R18[0xeaef69de]
	548	[2869]	GETGLOBAL	R20 K8 ; R20 := 0xe72d2edb
	549	[2869]	CALL     	R18 3 1 ; R18(R19,R20)
	550	[2872]	GETUPVAL 	R18 U8 ; R18 := U8
	551	[2872]	SELF     	R18 R18 K77 ; R19 := R18; R18 := R18[0x1e9695e9]
	552	[2872]	GETUPVAL 	R20 U2 ; R20 := U2
	553	[2872]	CALL     	R18 3 1 ; R18(R19,R20)
	554	[2876]	SETUPVAL 	R0 U9 ; U9 := R0
	555	[2879]	GETUPVAL 	R18 U14 ; R18 := U14
	556	[2879]	SELF     	R18 R18 K82 ; R19 := R18; R18 := R18[0x6010b1fa]
	557	[2879]	CALL     	R18 2 1 ; R18(R19)
	558	[2880]	GETGLOBAL	R18 K23 ; R18 := _T
	559	[2880]	GETUPVAL 	R19 U9 ; R19 := U9
	560	[2880]	SETTABLE 	R18 K83 R19 ; R18["CurrentHudAvatar"] := R19
	561	[2882]	GETUPVAL 	R18 U8 ; R18 := U8
	562	[2882]	SELF     	R18 R18 K84 ; R19 := R18; R18 := R18[0x484bc106]
	563	[2882]	CALL     	R18 2 1 ; R18(R19)
	564	[2883]	GETUPVAL 	R18 U8 ; R18 := U8
	565	[2883]	SELF     	R18 R18 K36 ; R19 := R18; R18 := R18[0x5cee792a]
	566	[2883]	GETUPVAL 	R20 U6 ; R20 := U6
	567	[2883]	GETTABLE 	R20 R20 K20 ; R20 := R20["IsSpectating"]
	568	[2883]	NOT      	R20 R20 ; R20 := not R20
	569	[2883]	CALL     	R18 3 1 ; R18(R19,R20)
	570	[2885]	GETUPVAL 	R18 U15 ; R18 := U15
	571	[2885]	SELF     	R18 R18 K85 ; R19 := R18; R18 := R18[0x7c09c373]
	572	[2885]	CALL     	R18 2 1 ; R18(R19)
	573	[2886]	GETUPVAL 	R18 U16 ; R18 := U16
	574	[2886]	EQ       	1 R18 K69 ; if R18 == nil then PC := 579
	575	[2886]	JMP      	579 ; PC := 579
	576	[2887]	GETUPVAL 	R18 U16 ; R18 := U16
	577	[2887]	SELF     	R18 R18 K86 ; R19 := R18; R18 := R18[0xe81208f9]
	578	[2887]	CALL     	R18 2 1 ; R18(R19)
	579	[2890]	GETUPVAL 	R18 U6 ; R18 := U6
	580	[2890]	GETTABLE 	R18 R18 K20 ; R18 := R18["IsSpectating"]
	581	[2890]	TEST     	R18 1 ; if R18 then PC := 651
	582	[2890]	JMP      	651 ; PC := 651
	583	[2891]	GETUPVAL 	R18 U11 ; R18 := U11
	584	[2891]	GETTABLE 	R18 R18 K46 ; R18 := R18["Cached"]
	585	[2891]	TEST     	R18 0 ; if not R18 then PC := 605
	586	[2891]	JMP      	605 ; PC := 605
	587	[2892]	LOADK    	R18 := 1.000000
	588	[2892]	GETUPVAL 	R19 U11 ; R19 := U11
	589	[2892]	GETTABLE 	R19 R19 K60 ; R19 := R19["Buffs"]
	590	[2892]	LEN      	R19 R19 ; R19 := # R19
	591	[2892]	LOADK    	R20 := 1.000000
	592	[2892]	FORPREP  	R18 604 ; R18 -= R20; PC := 604
	593	[2893]	GETUPVAL 	R22 U11 ; R22 := U11
	594	[2893]	GETTABLE 	R22 R22 K60 ; R22 := R22["Buffs"]
	595	[2893]	GETTABLE 	R22 R22 R21 ; R22 := R22[R21]
	596	[2894]	SETTABLE 	R22 K48 R0 ; R22["instigator"] := R0
	597	[2896]	SELF     	R23 R0 K87 ; R24 := R0; R23 := R0[0x37e45fb5]
	598	[2896]	GETUPVAL 	R25 U11 ; R25 := U11
	599	[2896]	GETTABLE 	R25 R25 K60 ; R25 := R25["Buffs"]
	600	[2896]	GETTABLE 	R25 R25 R21 ; R25 := R25[R21]
	601	[2896]	OP_LOADBOOL	R26 1 0 ; R26 := true
	602	[2896]	OP_LOADBOOL	R27 0 0 ; R27 := false
	603	[2896]	CALL     	R23 5 1 ; R23(R24,R25,R26,R27)
	604	[2892]	FORLOOP  	R18 593 ; R18 += R20; if R18 <= R19 then begin PC := 593; R21 := R18 end
	605	[2900]	GETUPVAL 	R23 U11 ; R23 := U11
	606	[2900]	SETTABLE 	R23 K46 K39 ; R23["Cached"] := false
	607	[2901]	GETUPVAL 	R23 U11 ; R23 := U11
	608	[2901]	NEWTABLE 	R24 0 0 ; R24 := {}
	609	[2901]	SETTABLE 	R23 K60 R24 ; R23["Buffs"] := R24
	610	[2903]	SELF     	R23 R0 K47 ; R24 := R0; R23 := R0[0x1f7e8969]
	611	[2903]	CALL     	R23 2 2 ; R23 := R23(R24)
	612	[2904]	LOADK    	R24 := 1.000000
	613	[2904]	LEN      	R25 R23 ; R25 := # R23
	614	[2904]	LOADK    	R26 := 1.000000
	615	[2904]	FORPREP  	R24 619 ; R24 -= R26; PC := 619
	616	[2905]	GETUPVAL 	R28 U17 ; R28 := U17
	617	[2905]	GETTABLE 	R29 R23 R27 ; R29 := R23[R27]
	618	[2905]	CALL     	R28 2 1 ; R28(R29)
	619	[2904]	FORLOOP  	R24 616 ; R24 += R26; if R24 <= R25 then begin PC := 616; R27 := R24 end
	620	[2907]	GETGLOBAL	R28 K88 ; R28 := 0x7ed0a956
	621	[2907]	LOADK    	R29 K89 ; R29 := "/Lotus/Types/Enemies/Orokin/Entrati/EntratiTech/EntratiTechAvatar"
	622	[2907]	CALL     	R28 2 2 ; R28 := R28(R29)
	623	[2908]	SELF     	R29 R0 K16 ; R30 := R0; R29 := R0[0xf2deaf69]
	624	[2908]	GETGLOBAL	R31 K90 ; R31 := gLotusVehicleAvatarType
	625	[2908]	CALL     	R29 3 2 ; R29 := R29(R30,R31)
	626	[2908]	TEST     	R29 0 ; if not R29 then PC := 651
	627	[2908]	JMP      	651 ; PC := 651
	628	[2908]	SELF     	R29 R0 K16 ; R30 := R0; R29 := R0[0xf2deaf69]
	629	[2908]	MOVE     	R31 R28 ; R31 := R28
	630	[2908]	CALL     	R29 3 2 ; R29 := R29(R30,R31)
	631	[2908]	TEST     	R29 1 ; if R29 then PC := 651
	632	[2908]	JMP      	651 ; PC := 651
	633	[2909]	SELF     	R29 R0 K91 ; R30 := R0; R29 := R0[0xff005826]
	634	[2909]	CALL     	R29 2 2 ; R29 := R29(R30)
	635	[2911]	GETGLOBAL	R30 K0 ; R30 := 0x7b998233
	636	[2911]	MOVE     	R31 R29 ; R31 := R29
	637	[2911]	CALL     	R30 2 2 ; R30 := R30(R31)
	638	[2911]	TEST     	R30 1 ; if R30 then PC := 651
	639	[2911]	JMP      	651 ; PC := 651
	640	[2912]	SELF     	R30 R29 K47 ; R31 := R29; R30 := R29[0x1f7e8969]
	641	[2912]	CALL     	R30 2 2 ; R30 := R30(R31)
	642	[2912]	MOVE     	R23 R30 ; R23 := R30
	643	[2913]	LOADK    	R30 := 1.000000
	644	[2913]	LEN      	R31 R23 ; R31 := # R23
	645	[2913]	LOADK    	R32 := 1.000000
	646	[2913]	FORPREP  	R30 650 ; R30 -= R32; PC := 650
	647	[2914]	GETUPVAL 	R34 U17 ; R34 := U17
	648	[2914]	GETTABLE 	R35 R23 R33 ; R35 := R23[R33]
	649	[2914]	CALL     	R34 2 1 ; R34(R35)
	650	[2913]	FORLOOP  	R30 647 ; R30 += R32; if R30 <= R31 then begin PC := 647; R33 := R30 end
	651	[2920]	GETUPVAL 	R34 U5 ; R34 := U5
	652	[2920]	GETTABLE 	R34 R34 K64 ; R34 := R34["InventoryController"]
	653	[2920]	SELF     	R34 R34 K92 ; R35 := R34; R34 := R34[0xac03381f]
	654	[2920]	CALL     	R34 2 2 ; R34 := R34(R35)
	655	[2922]	GETUPVAL 	R35 U6 ; R35 := U6
	656	[2922]	GETTABLE 	R35 R35 K20 ; R35 := R35["IsSpectating"]
	657	[2922]	TEST     	R35 1 ; if R35 then PC := 706
	658	[2922]	JMP      	706 ; PC := 706
	659	[2922]	TEST     	R34 1 ; if R34 then PC := 706
	660	[2922]	JMP      	706 ; PC := 706
	661	[2923]	GETUPVAL 	R35 U2 ; R35 := U2
	662	[2923]	SELF     	R35 R35 K67 ; R36 := R35; R35 := R35[0xa534c3ac]
	663	[2923]	CALL     	R35 2 2 ; R35 := R35(R36)
	664	[2924]	GETGLOBAL	R36 K0 ; R36 := 0x7b998233
	665	[2924]	MOVE     	R37 R35 ; R37 := R35
	666	[2924]	CALL     	R36 2 2 ; R36 := R36(R37)
	667	[2924]	TEST     	R36 1 ; if R36 then PC := 679
	668	[2924]	JMP      	679 ; PC := 679
	669	[2925]	SELF     	R36 R35 K62 ; R37 := R35; R36 := R35[0xde321e6f]
	670	[2925]	CALL     	R36 2 2 ; R36 := R36(R37)
	671	[2926]	GETGLOBAL	R37 K0 ; R37 := 0x7b998233
	672	[2926]	MOVE     	R38 R36 ; R38 := R36
	673	[2926]	CALL     	R37 2 2 ; R37 := R37(R38)
	674	[2926]	TEST     	R37 1 ; if R37 then PC := 679
	675	[2926]	JMP      	679 ; PC := 679
	676	[2927]	SELF     	R37 R36 K93 ; R38 := R36; R37 := R36[0x2676deee]
	677	[2927]	CALL     	R37 2 2 ; R37 := R37(R38)
	678	[2927]	SETUPVAL 	R37 U18 ; U18 := R37
	679	[2930]	GETUPVAL 	R37 U19 ; R37 := U19
	680	[2930]	CALL     	R37 1 1 ; R37()
	681	[2931]	JMP      	706 ; PC := 706
	682	[2932]	GETGLOBAL	R37 K0 ; R37 := 0x7b998233
	683	[2932]	GETUPVAL 	R38 U5 ; R38 := U5
	684	[2932]	GETTABLE 	R38 R38 K64 ; R38 := R38["InventoryController"]
	685	[2932]	CALL     	R37 2 2 ; R37 := R37(R38)
	686	[2932]	TEST     	R37 1 ; if R37 then PC := 706
	687	[2932]	JMP      	706 ; PC := 706
	688	[2933]	GETUPVAL 	R37 U5 ; R37 := U5
	689	[2933]	GETTABLE 	R37 R37 K64 ; R37 := R37["InventoryController"]
	690	[2933]	SELF     	R37 R37 K92 ; R38 := R37; R37 := R37[0xac03381f]
	691	[2933]	CALL     	R37 2 2 ; R37 := R37(R38)
	692	[2934]	GETUPVAL 	R38 U12 ; R38 := U12
	693	[2934]	GETTABLE 	R38 R38 K94 ; R38 := R38["SpaceMode"]
	694	[2934]	EQ       	1 R38 R37 ; if R38 == R37 then PC := 706
	695	[2934]	JMP      	706 ; PC := 706
	696	[2935]	GETUPVAL 	R38 U12 ; R38 := U12
	697	[2935]	SETTABLE 	R38 K94 R37 ; R38["SpaceMode"] := R37
	698	[2936]	GETUPVAL 	R38 U12 ; R38 := U12
	699	[2936]	GETUPVAL 	R39 U5 ; R39 := U5
	700	[2936]	GETTABLE 	R39 R39 K64 ; R39 := R39["InventoryController"]
	701	[2936]	SELF     	R39 R39 K65 ; R40 := R39; R39 := R39[0xf7d48ee0]
	702	[2936]	CALL     	R39 2 2 ; R39 := R39(R40)
	703	[2936]	SETTABLE 	R38 K61 R39 ; R38["ActivePowerSuit"] := R39
	704	[2937]	GETUPVAL 	R38 U13 ; R38 := U13
	705	[2937]	SETTABLE 	R38 K68 K69 ; R38["CustomAbilities"] := nil
	706	[2941]	GETGLOBAL	R38 K0 ; R38 := 0x7b998233
	707	[2941]	GETUPVAL 	R39 U18 ; R39 := U18
	708	[2941]	CALL     	R38 2 2 ; R38 := R38(R39)
	709	[2941]	TEST     	R38 0 ; if not R38 then PC := 742
	710	[2941]	JMP      	742 ; PC := 742
	711	[2941]	GETGLOBAL	R38 K0 ; R38 := 0x7b998233
	712	[2941]	GETUPVAL 	R39 U5 ; R39 := U5
	713	[2941]	GETTABLE 	R39 R39 K64 ; R39 := R39["InventoryController"]
	714	[2941]	CALL     	R38 2 2 ; R38 := R38(R39)
	715	[2941]	TEST     	R38 1 ; if R38 then PC := 742
	716	[2941]	JMP      	742 ; PC := 742
	717	[2941]	GETUPVAL 	R38 U5 ; R38 := U5
	718	[2941]	GETTABLE 	R38 R38 K64 ; R38 := R38["InventoryController"]
	719	[2941]	SELF     	R38 R38 K92 ; R39 := R38; R38 := R38[0xac03381f]
	720	[2941]	CALL     	R38 2 2 ; R38 := R38(R39)
	721	[2941]	TEST     	R38 1 ; if R38 then PC := 742
	722	[2941]	JMP      	742 ; PC := 742
	723	[2941]	GETUPVAL 	R38 U6 ; R38 := U6
	724	[2941]	GETTABLE 	R38 R38 K20 ; R38 := R38["IsSpectating"]
	725	[2941]	TEST     	R38 1 ; if R38 then PC := 742
	726	[2941]	JMP      	742 ; PC := 742
	727	[2941]	GETGLOBAL	R38 K0 ; R38 := 0x7b998233
	728	[2941]	GETUPVAL 	R39 U5 ; R39 := U5
	729	[2941]	GETTABLE 	R39 R39 K64 ; R39 := R39["InventoryController"]
	730	[2941]	SELF     	R39 R39 K93 ; R40 := R39; R39 := R39[0x2676deee]
	731	[2941]	CALL     	R39 2 0 ; R39,... := R39(R40)
	732	[2941]	CALL     	R38 0 2 ; R38 := R38(R39,...)
	733	[2941]	TEST     	R38 1 ; if R38 then PC := 742
	734	[2941]	JMP      	742 ; PC := 742
	735	[2942]	GETUPVAL 	R38 U5 ; R38 := U5
	736	[2942]	GETTABLE 	R38 R38 K64 ; R38 := R38["InventoryController"]
	737	[2942]	SELF     	R38 R38 K93 ; R39 := R38; R38 := R38[0x2676deee]
	738	[2942]	CALL     	R38 2 2 ; R38 := R38(R39)
	739	[2942]	SETUPVAL 	R38 U18 ; U18 := R38
	740	[2943]	GETUPVAL 	R38 U19 ; R38 := U19
	741	[2943]	CALL     	R38 1 1 ; R38()
	742	[2946]	GETGLOBAL	R38 K0 ; R38 := 0x7b998233
	743	[2946]	GETUPVAL 	R39 U5 ; R39 := U5
	744	[2946]	GETTABLE 	R39 R39 K64 ; R39 := R39["InventoryController"]
	745	[2946]	CALL     	R38 2 2 ; R38 := R38(R39)
	746	[2946]	TEST     	R38 0 ; if not R38 then PC := 750
	747	[2946]	JMP      	750 ; PC := 750
	748	[2947]	OP_LOADBOOL	R38 0 0 ; R38 := false
	749	[2947]	RETURN   	R38 2 ; return R38 
	750	[2950]	GETUPVAL 	R38 U5 ; R38 := U5
	751	[2950]	GETTABLE 	R38 R38 K64 ; R38 := R38["InventoryController"]
	752	[2950]	SELF     	R38 R38 K92 ; R39 := R38; R38 := R38[0xac03381f]
	753	[2950]	CALL     	R38 2 2 ; R38 := R38(R39)
	754	[2951]	LOADK    	R39 := 45.000000
	755	[2952]	LOADK    	R40 := 10.000000
	756	[2953]	GETUPVAL 	R41 U3 ; R41 := U3
	757	[2953]	SELF     	R41 R41 K95 ; R42 := R41; R41 := R41[0xec943d0f]
	758	[2953]	CALL     	R41 2 2 ; R41 := R41(R42)
	759	[2954]	GETUPVAL 	R42 U6 ; R42 := U6
	760	[2954]	GETTABLE 	R42 R42 K96 ; R42 := R42["mSpaceMode"]
	761	[2954]	EQ       	1 R42 R38 ; if R42 == R38 then PC := 866
	762	[2954]	JMP      	866 ; PC := 866
	763	[2954]	GETGLOBAL	R42 K0 ; R42 := 0x7b998233
	764	[2954]	GETGLOBAL	R43 K23 ; R43 := _T
	765	[2954]	GETTABLE 	R43 R43 K24 ; R43 := R43["CommanderMap"]
	766	[2954]	CALL     	R42 2 2 ; R42 := R42(R43)
	767	[2954]	TEST     	R42 0 ; if not R42 then PC := 866
	768	[2954]	JMP      	866 ; PC := 866
	769	[2955]	GETUPVAL 	R42 U6 ; R42 := U6
	770	[2955]	SETTABLE 	R42 K96 R38 ; R42["mSpaceMode"] := R38
	771	[2956]	GETUPVAL 	R42 U6 ; R42 := U6
	772	[2956]	GETTABLE 	R42 R42 K96 ; R42 := R42["mSpaceMode"]
	773	[2956]	TEST     	R42 0 ; if not R42 then PC := 809
	774	[2956]	JMP      	809 ; PC := 809
	775	[2957]	LOADNIL  	R42 R42 ; R42 := nil
	776	[2957]	SETUPVAL 	R42 U18 ; U18 := R42
	777	[2959]	GETUPVAL 	R42 U5 ; R42 := U5
	778	[2959]	GETTABLE 	R42 R42 K64 ; R42 := R42["InventoryController"]
	779	[2959]	SELF     	R42 R42 K97 ; R43 := R42; R42 := R42[0x14027b7e]
	780	[2959]	CALL     	R42 2 2 ; R42 := R42(R43)
	781	[2959]	TEST     	R42 1 ; if R42 then PC := 828
	782	[2959]	JMP      	828 ; PC := 828
	783	[2960]	TEST     	R41 1 ; if R41 then PC := 803
	784	[2960]	JMP      	803 ; PC := 803
	785	[2961]	GETUPVAL 	R42 U3 ; R42 := U3
	786	[2961]	SELF     	R42 R42 K98 ; R43 := R42; R42 := R42[0xeadda4ed]
	787	[2961]	LOADK    	R44 := 150.000000
	788	[2961]	GETUPVAL 	R45 U20 ; R45 := U20
	789	[2961]	GETTABLE 	R45 R45 K99 ; R45 := R45[0x06d055f9]
	790	[2961]	GETUPVAL 	R46 U6 ; R46 := U6
	791	[2961]	GETTABLE 	R46 R46 K96 ; R46 := R46["mSpaceMode"]
	792	[2961]	LOADK    	R47 := 300.000000
	793	[2961]	MOVE     	R48 R40 ; R48 := R40
	794	[2961]	CALL     	R45 4 0 ; R45,... := R45(R46,R47,R48)
	795	[2961]	CALL     	R42 0 1 ; R42(R43,...)
	796	[2962]	LOADK    	R39 := 150.000000
	797	[2963]	GETUPVAL 	R42 U6 ; R42 := U6
	798	[2963]	GETTABLE 	R42 R42 K96 ; R42 := R42["mSpaceMode"]
	799	[2963]	TEST     	R42 0 ; if not R42 then PC := 828
	800	[2963]	JMP      	828 ; PC := 828
	801	[2964]	LOADK    	R40 := 300.000000
	802	[2965]	JMP      	828 ; PC := 828
	803	[2967]	GETUPVAL 	R42 U3 ; R42 := U3
	804	[2967]	SELF     	R42 R42 K98 ; R43 := R42; R42 := R42[0xeadda4ed]
	805	[2967]	MOVE     	R44 R39 ; R44 := R39
	806	[2967]	MOVE     	R45 R40 ; R45 := R40
	807	[2967]	CALL     	R42 4 1 ; R42(R43,R44,R45)
	808	[2969]	JMP      	828 ; PC := 828
	809	[2971]	TEST     	R41 1 ; if R41 then PC := 823
	810	[2971]	JMP      	823 ; PC := 823
	811	[2972]	GETUPVAL 	R42 U3 ; R42 := U3
	812	[2972]	SELF     	R42 R42 K98 ; R43 := R42; R42 := R42[0xeadda4ed]
	813	[2972]	LOADK    	R44 := 150.000000
	814	[2972]	GETUPVAL 	R45 U20 ; R45 := U20
	815	[2972]	GETTABLE 	R45 R45 K99 ; R45 := R45[0x06d055f9]
	816	[2972]	GETUPVAL 	R46 U6 ; R46 := U6
	817	[2972]	GETTABLE 	R46 R46 K96 ; R46 := R46["mSpaceMode"]
	818	[2972]	LOADK    	R47 := 300.000000
	819	[2972]	MOVE     	R48 R40 ; R48 := R40
	820	[2972]	CALL     	R45 4 0 ; R45,... := R45(R46,R47,R48)
	821	[2972]	CALL     	R42 0 1 ; R42(R43,...)
	822	[2972]	JMP      	828 ; PC := 828
	823	[2974]	GETUPVAL 	R42 U3 ; R42 := U3
	824	[2974]	SELF     	R42 R42 K98 ; R43 := R42; R42 := R42[0xeadda4ed]
	825	[2974]	MOVE     	R44 R39 ; R44 := R39
	826	[2974]	MOVE     	R45 R40 ; R45 := R40
	827	[2974]	CALL     	R42 4 1 ; R42(R43,R44,R45)
	828	[2977]	GETGLOBAL	R42 K0 ; R42 := 0x7b998233
	829	[2977]	GETGLOBAL	R43 K79 ; R43 := 0x0032441c
	830	[2977]	GETTABLE 	R43 R43 K100 ; R43 := R43["UIMovie_ArcWingHudMovie"]
	831	[2977]	CALL     	R42 2 2 ; R42 := R42(R43)
	832	[2977]	TEST     	R42 1 ; if R42 then PC := 866
	833	[2977]	JMP      	866 ; PC := 866
	834	[2978]	GETGLOBAL	R42 K101 ; R42 := 0x9ba7909f
	835	[2978]	SELF     	R42 R42 K102 ; R43 := R42; R42 := R42[0xbcfb64ab]
	836	[2978]	GETGLOBAL	R44 K79 ; R44 := 0x0032441c
	837	[2978]	GETTABLE 	R44 R44 K100 ; R44 := R44["UIMovie_ArcWingHudMovie"]
	838	[2978]	CALL     	R42 3 2 ; R42 := R42(R43,R44)
	839	[2979]	GETUPVAL 	R43 U6 ; R43 := U6
	840	[2979]	GETTABLE 	R43 R43 K96 ; R43 := R43["mSpaceMode"]
	841	[2979]	TEST     	R43 0 ; if not R43 then PC := 854
	842	[2979]	JMP      	854 ; PC := 854
	843	[2980]	GETGLOBAL	R43 K0 ; R43 := 0x7b998233
	844	[2980]	MOVE     	R44 R42 ; R44 := R42
	845	[2980]	CALL     	R43 2 2 ; R43 := R43(R44)
	846	[2980]	TEST     	R43 0 ; if not R43 then PC := 866
	847	[2980]	JMP      	866 ; PC := 866
	848	[2981]	GETGLOBAL	R43 K101 ; R43 := 0x9ba7909f
	849	[2981]	SELF     	R43 R43 K103 ; R44 := R43; R43 := R43[0x6dd7aa66]
	850	[2981]	GETGLOBAL	R45 K79 ; R45 := 0x0032441c
	851	[2981]	GETTABLE 	R45 R45 K100 ; R45 := R45["UIMovie_ArcWingHudMovie"]
	852	[2981]	CALL     	R43 3 1 ; R43(R44,R45)
	853	[2982]	JMP      	866 ; PC := 866
	854	[2983]	GETGLOBAL	R43 K0 ; R43 := 0x7b998233
	855	[2983]	MOVE     	R44 R42 ; R44 := R42
	856	[2983]	CALL     	R43 2 2 ; R43 := R43(R44)
	857	[2983]	TEST     	R43 1 ; if R43 then PC := 866
	858	[2983]	JMP      	866 ; PC := 866
	859	[2984]	SELF     	R43 R42 K104 ; R44 := R42; R43 := R42[0x32302b4a]
	860	[2984]	CALL     	R43 2 1 ; R43(R44)
	861	[2986]	GETGLOBAL	R43 K5 ; R43 := 0x3d106989
	862	[2986]	LOADK    	R44 K105 ; R44 := "ScopeDebug: Show from HudRedux"
	863	[2986]	CALL     	R43 2 1 ; R43(R44)
	864	[2987]	GETUPVAL 	R43 U21 ; R43 := U21
	865	[2987]	CALL     	R43 1 1 ; R43()
	866	[2992]	GETUPVAL 	R43 U6 ; R43 := U6
	867	[2992]	GETTABLE 	R43 R43 K106 ; R43 := R43["mDistanceFieldMiniMap"]
	868	[2992]	EQ       	1 R41 R43 ; if R41 == R43 then PC := 893
	869	[2992]	JMP      	893 ; PC := 893
	870	[2993]	GETUPVAL 	R43 U6 ; R43 := U6
	871	[2993]	SETTABLE 	R43 K106 R41 ; R43["mDistanceFieldMiniMap"] := R41
	872	[2994]	GETUPVAL 	R43 U6 ; R43 := U6
	873	[2994]	GETTABLE 	R43 R43 K106 ; R43 := R43["mDistanceFieldMiniMap"]
	874	[2994]	TEST     	R43 1 ; if R43 then PC := 888
	875	[2994]	JMP      	888 ; PC := 888
	876	[2995]	GETUPVAL 	R43 U3 ; R43 := U3
	877	[2995]	SELF     	R43 R43 K98 ; R44 := R43; R43 := R43[0xeadda4ed]
	878	[2995]	LOADK    	R45 := 150.000000
	879	[2995]	GETUPVAL 	R46 U20 ; R46 := U20
	880	[2995]	GETTABLE 	R46 R46 K99 ; R46 := R46[0x06d055f9]
	881	[2995]	GETUPVAL 	R47 U6 ; R47 := U6
	882	[2995]	GETTABLE 	R47 R47 K96 ; R47 := R47["mSpaceMode"]
	883	[2995]	LOADK    	R48 := 300.000000
	884	[2995]	MOVE     	R49 R40 ; R49 := R40
	885	[2995]	CALL     	R46 4 0 ; R46,... := R46(R47,R48,R49)
	886	[2995]	CALL     	R43 0 1 ; R43(R44,...)
	887	[2995]	JMP      	893 ; PC := 893
	888	[2997]	GETUPVAL 	R43 U3 ; R43 := U3
	889	[2997]	SELF     	R43 R43 K98 ; R44 := R43; R43 := R43[0xeadda4ed]
	890	[2997]	MOVE     	R45 R39 ; R45 := R39
	891	[2997]	MOVE     	R46 R40 ; R46 := R40
	892	[2997]	CALL     	R43 4 1 ; R43(R44,R45,R46)
	893	[3001]	GETUPVAL 	R43 U22 ; R43 := U22
	894	[3001]	LEN      	R43 R43 ; R43 := # R43
	895	[3001]	EQ       	0 R43 K10 ; if R43 ~= 0.000000 then PC := 912
	896	[3001]	JMP      	912 ; PC := 912
	897	[3002]	GETGLOBAL	R43 K25 ; R43 := 0x89326c93
	898	[3002]	SELF     	R43 R43 K107 ; R44 := R43; R43 := R43[0x7d108ddb]
	899	[3002]	CALL     	R43 2 2 ; R43 := R43(R44)
	900	[3002]	SETUPVAL 	R43 U22 ; U22 := R43
	901	[3003]	GETUPVAL 	R43 U12 ; R43 := U12
	902	[3003]	NEWTABLE 	R44 0 0 ; R44 := {}
	903	[3003]	SETTABLE 	R43 K108 R44 ; R43["PlayerAvatars"] := R44
	904	[3005]	GETUPVAL 	R43 U22 ; R43 := U22
	905	[3005]	LEN      	R43 R43 ; R43 := # R43
	906	[3005]	EQ       	1 R43 K10 ; if R43 == 0.000000 then PC := 912
	907	[3005]	JMP      	912 ; PC := 912
	908	[3006]	GETGLOBAL	R43 K25 ; R43 := 0x89326c93
	909	[3006]	SELF     	R43 R43 K109 ; R44 := R43; R43 := R43[0xb7d33840]
	910	[3006]	LOADK    	R45 K110 ; R45 := "OnPlayersChanged"
	911	[3006]	CALL     	R43 3 1 ; R43(R44,R45)
	912	[3010]	GETUPVAL 	R43 U23 ; R43 := U23
	913	[3010]	TEST     	R43 1 ; if R43 then PC := 921
	914	[3010]	JMP      	921 ; PC := 921
	915	[3011]	GETGLOBAL	R43 K111 ; R43 := 0xe7f2b02f
	916	[3011]	SELF     	R43 R43 K112 ; R44 := R43; R43 := R43[0xe045a641]
	917	[3011]	LOADK    	R45 K113 ; R45 := "HUD_ExternalGameReady"
	918	[3011]	CALL     	R43 3 1 ; R43(R44,R45)
	919	[3012]	OP_LOADBOOL	R43 1 0 ; R43 := true
	920	[3012]	SETUPVAL 	R43 U23 ; U23 := R43
	921	[3015]	OP_LOADBOOL	R43 1 0 ; R43 := true
	922	[3015]	RETURN   	R43 2 ; return R43 
	923	[3016]	RETURN   	R0 1 ; return 

function #105 <?:3018,3033> (66 instructions, 264 bytes at 0000021132F9A2E0)
0 params, 12 slots, 0 upvalues, 0 locals, 17 constants, 0 functions
	1	[3019]	GETGLOBAL	R0 K0 ; R0 := 0x9ba7909f
	2	[3019]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x0ea73276]
	3	[3019]	LOADK    	R2 K2 ; R2 := "VIEW_RAILJACK_SYSTEMS_MENU"
	4	[3019]	OP_LOADBOOL	R3 0 0 ; R3 := false
	5	[3019]	LOADNIL  	R4 R4 ; R4 := nil
	6	[3019]	OP_LOADBOOL	R5 1 0 ; R5 := true
	7	[3019]	OP_LOADBOOL	R6 0 0 ; R6 := false
	8	[3019]	CALL     	R0 7 2 ; R0 := R0(R1,R2,R3,R4,R5,R6)
	9	[3020]	LOADK    	R1 K3 ; R1 := ""
	10	[3021]	LEN      	R2 R0 ; R2 := # R0
	11	[3021]	LT       	0 K4 R2 ; if 0.000000 >= R2 then PC := 30
	12	[3021]	JMP      	30 ; PC := 30
	13	[3022]	GETGLOBAL	R2 K5 ; R2 := 0xae91e43b
	14	[3022]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0x42b04007]
	15	[3022]	LOADK    	R4 K7 ; R4 := "<"
	16	[3022]	GETTABLE 	R5 R0 K8 ; R5 := R0[1.000000]
	17	[3022]	LOADK    	R6 K9 ; R6 := ">"
	18	[3022]	CONCAT   	R4 R4 R6 ; R4 := R4 .. R5 .. R6
	19	[3022]	OP_LOADBOOL	R5 1 0 ; R5 := true
	20	[3022]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	21	[3022]	LOADK    	R3 K10 ; R3 := " "
	22	[3022]	GETGLOBAL	R4 K11 ; R4 := 0x5f0788c4
	23	[3022]	GETGLOBAL	R5 K5 ; R5 := 0xae91e43b
	24	[3022]	SELF     	R5 R5 K6 ; R6 := R5; R5 := R5[0x42b04007]
	25	[3022]	LOADK    	R7 K12 ; R7 := "/Lotus/Language/CrewShip/CommandConsole_Tactical"
	26	[3022]	OP_LOADBOOL	R8 0 0 ; R8 := false
	27	[3022]	CALL     	R5 4 0 ; R5,... := R5(R6,R7,R8)
	28	[3022]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	29	[3022]	CONCAT   	R1 R2 R4 ; R1 := R2 .. R3 .. R4
	30	[3025]	GETGLOBAL	R2 K13 ; R2 := 0xbe190284
	31	[3025]	SELF     	R2 R2 K14 ; R3 := R2; R2 := R2[0xbcb03142]
	32	[3025]	CALL     	R2 2 2 ; R2 := R2(R3)
	33	[3025]	TEST     	R2 1 ; if R2 then PC := 65
	34	[3025]	JMP      	65 ; PC := 65
	35	[3026]	GETGLOBAL	R2 K0 ; R2 := 0x9ba7909f
	36	[3026]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0x0ea73276]
	37	[3026]	LOADK    	R4 K15 ; R4 := "EQUIP_RAILJACK_REPAIR_TOOL_MENU"
	38	[3026]	OP_LOADBOOL	R5 0 0 ; R5 := false
	39	[3026]	LOADNIL  	R6 R6 ; R6 := nil
	40	[3026]	OP_LOADBOOL	R7 1 0 ; R7 := true
	41	[3026]	OP_LOADBOOL	R8 0 0 ; R8 := false
	42	[3026]	CALL     	R2 7 2 ; R2 := R2(R3,R4,R5,R6,R7,R8)
	43	[3027]	LEN      	R3 R2 ; R3 := # R2
	44	[3027]	LT       	0 K4 R3 ; if 0.000000 >= R3 then PC := 65
	45	[3027]	JMP      	65 ; PC := 65
	46	[3028]	MOVE     	R3 R1 ; R3 := R1
	47	[3028]	LOADK    	R4 K10 ; R4 := " "
	48	[3028]	GETGLOBAL	R5 K5 ; R5 := 0xae91e43b
	49	[3028]	SELF     	R5 R5 K6 ; R6 := R5; R5 := R5[0x42b04007]
	50	[3028]	LOADK    	R7 K7 ; R7 := "<"
	51	[3028]	GETTABLE 	R8 R2 K8 ; R8 := R2[1.000000]
	52	[3028]	LOADK    	R9 K9 ; R9 := ">"
	53	[3028]	CONCAT   	R7 R7 R9 ; R7 := R7 .. R8 .. R9
	54	[3028]	OP_LOADBOOL	R8 1 0 ; R8 := true
	55	[3028]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	56	[3028]	LOADK    	R6 K10 ; R6 := " "
	57	[3028]	GETGLOBAL	R7 K11 ; R7 := 0x5f0788c4
	58	[3028]	GETGLOBAL	R8 K5 ; R8 := 0xae91e43b
	59	[3028]	SELF     	R8 R8 K6 ; R9 := R8; R8 := R8[0x42b04007]
	60	[3028]	LOADK    	R10 K16 ; R10 := "/Lotus/Language/Railjack/RepairToolName"
	61	[3028]	OP_LOADBOOL	R11 0 0 ; R11 := false
	62	[3028]	CALL     	R8 4 0 ; R8,... := R8(R9,R10,R11)
	63	[3028]	CALL     	R7 0 2 ; R7 := R7(R8,...)
	64	[3028]	CONCAT   	R1 R3 R7 ; R1 := R3 .. R4 .. R5 .. R6 .. R7
	65	[3032]	RETURN   	R1 2 ; return R1 
	66	[3033]	RETURN   	R0 1 ; return 

function #106 <?:3035,3048> (46 instructions, 184 bytes at 0000021132CDAF30)
1 param, 7 slots, 0 upvalues, 0 locals, 10 constants, 0 functions
	1	[3036]	GETGLOBAL	R1 K0 ; R1 := 0x7f5022cf
	2	[3036]	GETTABLE 	R1 R1 K1 ; R1 := R1[0xa5c556b9]
	3	[3036]	MOVE     	R2 R0 ; R2 := R0
	4	[3036]	LOADK    	R3 K2 ; R3 := "_KBM"
	5	[3036]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	6	[3036]	TEST     	R1 0 ; if not R1 then PC := 45
	7	[3036]	JMP      	45 ; PC := 45
	8	[3037]	GETGLOBAL	R1 K3 ; R1 := 0x34291f5c
	9	[3037]	GETTABLE 	R1 R1 K4 ; R1 := R1[0x1467d5f4]
	10	[3037]	CALL     	R1 1 2 ; R1 := R1()
	11	[3038]	GETGLOBAL	R2 K3 ; R2 := 0x34291f5c
	12	[3038]	GETTABLE 	R2 R2 K5 ; R2 := R2[0x9ad21ae9]
	13	[3038]	CALL     	R2 1 2 ; R2 := R2()
	14	[3038]	TEST     	R2 1 ; if R2 then PC := 24
	15	[3038]	JMP      	24 ; PC := 24
	16	[3038]	GETGLOBAL	R2 K3 ; R2 := 0x34291f5c
	17	[3038]	GETTABLE 	R2 R2 K6 ; R2 := R2[0x86647daf]
	18	[3038]	CALL     	R2 1 2 ; R2 := R2()
	19	[3038]	TEST     	R2 1 ; if R2 then PC := 24
	20	[3038]	JMP      	24 ; PC := 24
	21	[3038]	GETGLOBAL	R2 K3 ; R2 := 0x34291f5c
	22	[3038]	GETTABLE 	R2 R2 K7 ; R2 := R2[0xc84fa15a]
	23	[3038]	CALL     	R2 1 2 ; R2 := R2()
	24	[3039]	TEST     	R2 0 ; if not R2 then PC := 36
	25	[3039]	JMP      	36 ; PC := 36
	26	[3040]	TEST     	R1 0 ; if not R1 then PC := 45
	27	[3040]	JMP      	45 ; PC := 45
	28	[3041]	GETGLOBAL	R3 K0 ; R3 := 0x7f5022cf
	29	[3041]	GETTABLE 	R3 R3 K8 ; R3 := R3[0x66edf04f]
	30	[3041]	MOVE     	R4 R0 ; R4 := R0
	31	[3041]	LOADK    	R5 K2 ; R5 := "_KBM"
	32	[3041]	LOADK    	R6 K9 ; R6 := "_Controller"
	33	[3041]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	34	[3041]	MOVE     	R0 R3 ; R0 := R3
	35	[3042]	JMP      	45 ; PC := 45
	36	[3043]	TEST     	R1 0 ; if not R1 then PC := 45
	37	[3043]	JMP      	45 ; PC := 45
	38	[3044]	GETGLOBAL	R3 K0 ; R3 := 0x7f5022cf
	39	[3044]	GETTABLE 	R3 R3 K8 ; R3 := R3[0x66edf04f]
	40	[3044]	MOVE     	R4 R0 ; R4 := R0
	41	[3044]	LOADK    	R5 K2 ; R5 := "_KBM"
	42	[3044]	LOADK    	R6 K9 ; R6 := "_Controller"
	43	[3044]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	44	[3044]	MOVE     	R0 R3 ; R0 := R3
	45	[3047]	RETURN   	R0 2 ; return R0 
	46	[3048]	RETURN   	R0 1 ; return 

function #107 <?:3050,3116> (228 instructions, 912 bytes at 000002112AD797E0)
0 params, 20 slots, 6 upvalues, 0 locals, 61 constants, 0 functions
	1	[3051]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[3051]	GETTABLE 	R0 R0 K0 ; R0 := R0["B"]
	3	[3051]	SETTABLE 	R0 K1 K2 ; R0["Ability"] := "ACTIVATE_ABILITY_MENU_2"
	4	[3052]	GETUPVAL 	R0 U0 ; R0 := U0
	5	[3052]	GETTABLE 	R0 R0 K3 ; R0 := R0["A"]
	6	[3052]	SETTABLE 	R0 K1 K4 ; R0["Ability"] := "ACTIVATE_ABILITY_MENU_0"
	7	[3053]	GETUPVAL 	R0 U0 ; R0 := U0
	8	[3053]	GETTABLE 	R0 R0 K5 ; R0 := R0["X"]
	9	[3053]	SETTABLE 	R0 K1 K6 ; R0["Ability"] := "ACTIVATE_ABILITY_MENU_1"
	10	[3054]	GETUPVAL 	R0 U0 ; R0 := U0
	11	[3054]	GETTABLE 	R0 R0 K7 ; R0 := R0["Y"]
	12	[3054]	SETTABLE 	R0 K1 K8 ; R0["Ability"] := "ACTIVATE_ABILITY_MENU_3"
	13	[3056]	NEWTABLE 	R0 4 0 ; R0 := {}
	14	[3056]	LOADK    	R1 K4 ; R1 := "ACTIVATE_ABILITY_MENU_0"
	15	[3056]	LOADK    	R2 K6 ; R2 := "ACTIVATE_ABILITY_MENU_1"
	16	[3056]	LOADK    	R3 K2 ; R3 := "ACTIVATE_ABILITY_MENU_2"
	17	[3056]	LOADK    	R4 K8 ; R4 := "ACTIVATE_ABILITY_MENU_3"
	18	[3056]	SETLIST  	R0 4 1 ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 4
	19	[3058]	GETGLOBAL	R1 K9 ; R1 := 0x76ea806b
	20	[3058]	SELF     	R1 R1 K10 ; R2 := R1; R1 := R1[0x8792aaab]
	21	[3058]	CALL     	R1 2 2 ; R1 := R1(R2)
	22	[3058]	TEST     	R1 0 ; if not R1 then PC := 79
	23	[3058]	JMP      	79 ; PC := 79
	24	[3059]	GETGLOBAL	R1 K11 ; R1 := 0xc8802016
	25	[3059]	MOVE     	R2 R0 ; R2 := R0
	26	[3059]	CALL     	R1 2 4 ; R1,R2,R3 := R1(R2)
	27	[3059]	JMP      	77 ; PC := 77
	28	[3060]	GETUPVAL 	R6 U1 ; R6 := U1
	29	[3060]	SELF     	R6 R6 K12 ; R7 := R6; R6 := R6[0x8fa32637]
	30	[3060]	MOVE     	R8 R5 ; R8 := R5
	31	[3060]	OP_LOADBOOL	R9 0 0 ; R9 := false
	32	[3060]	GETGLOBAL	R10 K13 ; R10 := 0xa94df70b
	33	[3060]	SELF     	R10 R10 K14 ; R11 := R10; R10 := R10[0xaa3c124f]
	34	[3060]	CALL     	R10 2 2 ; R10 := R10(R11)
	35	[3060]	GETGLOBAL	R11 K15 ; R11 := 0xd2d76b4d
	36	[3060]	CALL     	R6 6 2 ; R6 := R6(R7,R8,R9,R10,R11)
	37	[3061]	EQ       	0 R6 K16 ; if R6 ~= "" then PC := 54
	38	[3061]	JMP      	54 ; PC := 54
	39	[3062]	GETGLOBAL	R7 K17 ; R7 := 0x9ba7909f
	40	[3062]	SELF     	R7 R7 K18 ; R8 := R7; R7 := R7[0xa50d1a6a]
	41	[3062]	MOVE     	R9 R5 ; R9 := R5
	42	[3062]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	43	[3063]	GETUPVAL 	R8 U1 ; R8 := U1
	44	[3063]	SELF     	R8 R8 K19 ; R9 := R8; R8 := R8[0x4ab77446]
	45	[3063]	MOVE     	R10 R7 ; R10 := R7
	46	[3063]	GETGLOBAL	R11 K13 ; R11 := 0xa94df70b
	47	[3063]	SELF     	R11 R11 K14 ; R12 := R11; R11 := R11[0xaa3c124f]
	48	[3063]	CALL     	R11 2 2 ; R11 := R11(R12)
	49	[3063]	GETGLOBAL	R12 K15 ; R12 := 0xd2d76b4d
	50	[3063]	CALL     	R8 5 2 ; R8 := R8(R9,R10,R11,R12)
	51	[3063]	TEST     	R8 1 ; if R8 then PC := 54
	52	[3063]	JMP      	54 ; PC := 54
	53	[3064]	MOVE     	R6 R7 ; R6 := R7
	54	[3068]	EQ       	0 R6 K20 ; if R6 ~= "GAMEPAD_X" then PC := 60
	55	[3068]	JMP      	60 ; PC := 60
	56	[3069]	GETUPVAL 	R8 U0 ; R8 := U0
	57	[3069]	GETTABLE 	R8 R8 K3 ; R8 := R8["A"]
	58	[3069]	SETTABLE 	R8 K1 R5 ; R8["Ability"] := R5
	59	[3069]	JMP      	77 ; PC := 77
	60	[3070]	EQ       	0 R6 K21 ; if R6 ~= "GAMEPAD_CIRCLE" then PC := 66
	61	[3070]	JMP      	66 ; PC := 66
	62	[3071]	GETUPVAL 	R8 U0 ; R8 := U0
	63	[3071]	GETTABLE 	R8 R8 K0 ; R8 := R8["B"]
	64	[3071]	SETTABLE 	R8 K1 R5 ; R8["Ability"] := R5
	65	[3071]	JMP      	77 ; PC := 77
	66	[3072]	EQ       	0 R6 K22 ; if R6 ~= "GAMEPAD_TRIANGLE" then PC := 72
	67	[3072]	JMP      	72 ; PC := 72
	68	[3073]	GETUPVAL 	R8 U0 ; R8 := U0
	69	[3073]	GETTABLE 	R8 R8 K7 ; R8 := R8["Y"]
	70	[3073]	SETTABLE 	R8 K1 R5 ; R8["Ability"] := R5
	71	[3073]	JMP      	77 ; PC := 77
	72	[3074]	EQ       	0 R6 K23 ; if R6 ~= "GAMEPAD_SQUARE" then PC := 77
	73	[3074]	JMP      	77 ; PC := 77
	74	[3075]	GETUPVAL 	R8 U0 ; R8 := U0
	75	[3075]	GETTABLE 	R8 R8 K5 ; R8 := R8["X"]
	76	[3075]	SETTABLE 	R8 K1 R5 ; R8["Ability"] := R5
	77	[3059]	TFORLOOP 	R1 2 ; R4,R5 := R1(R2,R3); if R4 ~= nil then begin PC = 28; R3 := R4 end
	78	[3076]	JMP      	28 ; PC := 28
	79	[3080]	GETGLOBAL	R8 K24 ; R8 := 0xae91e43b
	80	[3080]	SELF     	R8 R8 K25 ; R9 := R8; R8 := R8[0x20b98db3]
	81	[3080]	LOADK    	R10 K26 ; R10 := "AbilityPanel.ControllerCastingButtons.AButton.text"
	82	[3080]	LOADK    	R11 K27 ; R11 := "<GAMEPAD_X>"
	83	[3080]	CALL     	R8 4 1 ; R8(R9,R10,R11)
	84	[3081]	GETGLOBAL	R8 K24 ; R8 := 0xae91e43b
	85	[3081]	SELF     	R8 R8 K25 ; R9 := R8; R8 := R8[0x20b98db3]
	86	[3081]	LOADK    	R10 K28 ; R10 := "AbilityPanel.ControllerCastingButtons.BButton.text"
	87	[3081]	LOADK    	R11 K29 ; R11 := "<GAMEPAD_CIRCLE>"
	88	[3081]	CALL     	R8 4 1 ; R8(R9,R10,R11)
	89	[3082]	GETGLOBAL	R8 K24 ; R8 := 0xae91e43b
	90	[3082]	SELF     	R8 R8 K25 ; R9 := R8; R8 := R8[0x20b98db3]
	91	[3082]	LOADK    	R10 K30 ; R10 := "AbilityPanel.ControllerCastingButtons.XButton.text"
	92	[3082]	LOADK    	R11 K31 ; R11 := "<GAMEPAD_SQUARE>"
	93	[3082]	CALL     	R8 4 1 ; R8(R9,R10,R11)
	94	[3083]	GETGLOBAL	R8 K24 ; R8 := 0xae91e43b
	95	[3083]	SELF     	R8 R8 K25 ; R9 := R8; R8 := R8[0x20b98db3]
	96	[3083]	LOADK    	R10 K32 ; R10 := "AbilityPanel.ControllerCastingButtons.YButton.text"
	97	[3083]	LOADK    	R11 K33 ; R11 := "<GAMEPAD_TRIANGLE>"
	98	[3083]	CALL     	R8 4 1 ; R8(R9,R10,R11)
	99	[3084]	GETGLOBAL	R8 K24 ; R8 := 0xae91e43b
	100	[3084]	SELF     	R8 R8 K25 ; R9 := R8; R8 := R8[0x20b98db3]
	101	[3084]	LOADK    	R10 K34 ; R10 := "AbilityPanel.FocusButton.text"
	102	[3084]	LOADK    	R11 K35 ; R11 := "<ACTIVATE_ABILITY_MENU_4>"
	103	[3084]	CALL     	R8 4 1 ; R8(R9,R10,R11)
	104	[3086]	GETUPVAL 	R8 U2 ; R8 := U2
	105	[3086]	CALL     	R8 1 2 ; R8 := R8()
	106	[3087]	GETGLOBAL	R9 K24 ; R9 := 0xae91e43b
	107	[3087]	SELF     	R9 R9 K36 ; R10 := R9; R9 := R9[0x5f56eeab]
	108	[3087]	LOADK    	R11 K37 ; R11 := "AbilityPanel.TacticalCallout"
	109	[3087]	LOADK    	R12 := 29.000000
	110	[3087]	MOVE     	R13 R8 ; R13 := R8
	111	[3087]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	112	[3089]	GETGLOBAL	R9 K24 ; R9 := 0xae91e43b
	113	[3089]	SELF     	R9 R9 K38 ; R10 := R9; R9 := R9[0x67bc869f]
	114	[3089]	LOADK    	R11 K39 ; R11 := "AbilityPanel.ControllerCastingButtons"
	115	[3089]	LOADK    	R12 := 10.000000
	116	[3089]	LOADK    	R13 := 0.000000
	117	[3089]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	118	[3090]	GETGLOBAL	R9 K24 ; R9 := 0xae91e43b
	119	[3090]	SELF     	R9 R9 K38 ; R10 := R9; R9 := R9[0x67bc869f]
	120	[3090]	LOADK    	R11 K40 ; R11 := "AbilityPanel.ControllerCastingImage"
	121	[3090]	LOADK    	R12 := 10.000000
	122	[3090]	LOADK    	R13 := 0.000000
	123	[3090]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	124	[3091]	GETGLOBAL	R9 K24 ; R9 := 0xae91e43b
	125	[3091]	SELF     	R9 R9 K38 ; R10 := R9; R9 := R9[0x67bc869f]
	126	[3091]	LOADK    	R11 K37 ; R11 := "AbilityPanel.TacticalCallout"
	127	[3091]	LOADK    	R12 := 10.000000
	128	[3091]	LOADK    	R13 := 0.000000
	129	[3091]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	130	[3092]	GETGLOBAL	R9 K24 ; R9 := 0xae91e43b
	131	[3092]	SELF     	R9 R9 K38 ; R10 := R9; R9 := R9[0x67bc869f]
	132	[3092]	LOADK    	R11 K41 ; R11 := "AbilityPanel.FocusButton"
	133	[3092]	LOADK    	R12 := 10.000000
	134	[3092]	LOADK    	R13 := 0.000000
	135	[3092]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	136	[3094]	GETUPVAL 	R9 U3 ; R9 := U3
	137	[3094]	EQ       	1 R9 K42 ; if R9 == nil then PC := 228
	138	[3094]	JMP      	228 ; PC := 228
	139	[3095]	LOADK    	R9 K16 ; R9 := ""
	140	[3096]	GETUPVAL 	R10 U3 ; R10 := U3
	141	[3096]	GETTABLE 	R10 R10 K43 ; R10 := R10["Message"]
	142	[3097]	GETGLOBAL	R11 K44 ; R11 := 0x0b96777e
	143	[3097]	MOVE     	R12 R10 ; R12 := R10
	144	[3097]	CALL     	R11 2 2 ; R11 := R11(R12)
	145	[3097]	EQ       	0 R11 K45 ; if R11 ~= "function" then PC := 150
	146	[3097]	JMP      	150 ; PC := 150
	147	[3098]	MOVE     	R11 R10 ; R11 := R10
	148	[3098]	CALL     	R11 1 2 ; R11 := R11()
	149	[3098]	MOVE     	R10 R11 ; R10 := R11
	150	[3100]	GETUPVAL 	R11 U4 ; R11 := U4
	151	[3100]	MOVE     	R12 R10 ; R12 := R10
	152	[3100]	CALL     	R11 2 2 ; R11 := R11(R12)
	153	[3100]	MOVE     	R10 R11 ; R10 := R11
	154	[3101]	GETUPVAL 	R11 U3 ; R11 := U3
	155	[3101]	GETTABLE 	R11 R11 K46 ; R11 := R11["InputFilter"]
	156	[3102]	GETGLOBAL	R12 K47 ; R12 := 0x7b998233
	157	[3102]	MOVE     	R13 R11 ; R13 := R11
	158	[3102]	CALL     	R12 2 2 ; R12 := R12(R13)
	159	[3102]	TEST     	R12 1 ; if R12 then PC := 185
	160	[3102]	JMP      	185 ; PC := 185
	161	[3103]	GETGLOBAL	R12 K24 ; R12 := 0xae91e43b
	162	[3103]	SELF     	R12 R12 K48 ; R13 := R12; R12 := R12[0x54f5d6ad]
	163	[3103]	MOVE     	R14 R10 ; R14 := R10
	164	[3103]	MOVE     	R15 R11 ; R15 := R11
	165	[3103]	GETUPVAL 	R16 U3 ; R16 := U3
	166	[3103]	GETTABLE 	R16 R16 K49 ; R16 := R16["Params"]
	167	[3103]	CALL     	R12 5 2 ; R12 := R12(R13,R14,R15,R16)
	168	[3103]	MOVE     	R9 R12 ; R9 := R12
	169	[3104]	GETGLOBAL	R12 K50 ; R12 := 0x7f5022cf
	170	[3104]	GETTABLE 	R12 R12 K51 ; R12 := R12[0xa5c556b9]
	171	[3104]	MOVE     	R13 R9 ; R13 := R9
	172	[3104]	LOADK    	R14 K52 ; R14 := "<[%u%d_]+>"
	173	[3104]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	174	[3104]	TEST     	R12 0 ; if not R12 then PC := 193
	175	[3104]	JMP      	193 ; PC := 193
	176	[3105]	GETGLOBAL	R12 K24 ; R12 := 0xae91e43b
	177	[3105]	SELF     	R12 R12 K53 ; R13 := R12; R12 := R12[0x42b04007]
	178	[3105]	MOVE     	R14 R10 ; R14 := R10
	179	[3105]	OP_LOADBOOL	R15 1 0 ; R15 := true
	180	[3105]	GETUPVAL 	R16 U3 ; R16 := U3
	181	[3105]	GETTABLE 	R16 R16 K49 ; R16 := R16["Params"]
	182	[3105]	CALL     	R12 5 2 ; R12 := R12(R13,R14,R15,R16)
	183	[3105]	MOVE     	R9 R12 ; R9 := R12
	184	[3106]	JMP      	193 ; PC := 193
	185	[3108]	GETGLOBAL	R12 K24 ; R12 := 0xae91e43b
	186	[3108]	SELF     	R12 R12 K53 ; R13 := R12; R12 := R12[0x42b04007]
	187	[3108]	MOVE     	R14 R10 ; R14 := R10
	188	[3108]	OP_LOADBOOL	R15 1 0 ; R15 := true
	189	[3108]	GETUPVAL 	R16 U3 ; R16 := U3
	190	[3108]	GETTABLE 	R16 R16 K49 ; R16 := R16["Params"]
	191	[3108]	CALL     	R12 5 2 ; R12 := R12(R13,R14,R15,R16)
	192	[3108]	MOVE     	R9 R12 ; R9 := R12
	193	[3110]	GETGLOBAL	R12 K24 ; R12 := 0xae91e43b
	194	[3110]	SELF     	R12 R12 K36 ; R13 := R12; R12 := R12[0x5f56eeab]
	195	[3110]	LOADK    	R14 K54 ; R14 := "ImpactMessage.Label"
	196	[3110]	LOADK    	R15 := 29.000000
	197	[3110]	MOVE     	R16 R9 ; R16 := R9
	198	[3110]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	199	[3111]	GETUPVAL 	R12 U5 ; R12 := U5
	200	[3111]	EQ       	1 R12 K42 ; if R12 == nil then PC := 206
	201	[3111]	JMP      	206 ; PC := 206
	202	[3111]	GETUPVAL 	R12 U5 ; R12 := U5
	203	[3111]	GETTABLE 	R12 R12 K55 ; R12 := R12["mImpactMessageFrame"]
	204	[3111]	EQ       	1 R12 K56 ; if R12 == 4.000000 then PC := 228
	205	[3111]	JMP      	228 ; PC := 228
	206	[3112]	GETGLOBAL	R12 K24 ; R12 := 0xae91e43b
	207	[3112]	SELF     	R12 R12 K38 ; R13 := R12; R12 := R12[0x67bc869f]
	208	[3112]	LOADK    	R14 K57 ; R14 := "ImpactMessage.Bg"
	209	[3112]	LOADK    	R15 := 12.000000
	210	[3112]	GETGLOBAL	R16 K24 ; R16 := 0xae91e43b
	211	[3112]	SELF     	R16 R16 K58 ; R17 := R16; R16 := R16[0x91a24e4b]
	212	[3112]	LOADK    	R18 K54 ; R18 := "ImpactMessage.Label"
	213	[3112]	LOADK    	R19 := 33.000000
	214	[3112]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	215	[3112]	ADD      	R16 R16 K59 ; R16 := R16 + 20.000000
	216	[3112]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	217	[3113]	GETGLOBAL	R12 K24 ; R12 := 0xae91e43b
	218	[3113]	SELF     	R12 R12 K38 ; R13 := R12; R12 := R12[0x67bc869f]
	219	[3113]	LOADK    	R14 K57 ; R14 := "ImpactMessage.Bg"
	220	[3113]	LOADK    	R15 := 13.000000
	221	[3113]	GETGLOBAL	R16 K24 ; R16 := 0xae91e43b
	222	[3113]	SELF     	R16 R16 K58 ; R17 := R16; R16 := R16[0x91a24e4b]
	223	[3113]	LOADK    	R18 K54 ; R18 := "ImpactMessage.Label"
	224	[3113]	LOADK    	R19 := 34.000000
	225	[3113]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	226	[3113]	ADD      	R16 R16 K60 ; R16 := R16 + 8.000000
	227	[3113]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	228	[3116]	RETURN   	R0 1 ; return 

function #108 <?:3118,3249> (430 instructions, 1720 bytes at 000002111C7994D0)
0 params, 22 slots, 10 upvalues, 0 locals, 72 constants, 0 functions
	1	[3119]	LOADK    	R0 := 0.000000
	2	[3120]	GETGLOBAL	R1 K0 ; R1 := 0x67652851
	3	[3120]	CALL     	R1 1 2 ; R1 := R1()
	4	[3122]	GETUPVAL 	R2 U0 ; R2 := U0
	5	[3122]	GETTABLE 	R2 R2 K1 ; R2 := R2["mScreenDuck"]
	6	[3122]	LT       	0 K2 R2 ; if 0.000000 >= R2 then PC := 33
	7	[3122]	JMP      	33 ; PC := 33
	8	[3123]	GETUPVAL 	R2 U0 ; R2 := U0
	9	[3123]	GETGLOBAL	R3 K3 ; R3 := 0x5bced4c4
	10	[3123]	GETTABLE 	R3 R3 K4 ; R3 := R3[0xb62ecfe0]
	11	[3123]	LOADK    	R4 := 0.000000
	12	[3123]	GETUPVAL 	R5 U0 ; R5 := U0
	13	[3123]	GETTABLE 	R5 R5 K1 ; R5 := R5["mScreenDuck"]
	14	[3123]	MUL      	R6 R1 K5 ; R6 := R1 * 0.500000
	15	[3123]	SUB      	R5 R5 R6 ; R5 := R5 - R6
	16	[3123]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	17	[3123]	SETTABLE 	R2 K1 R3 ; R2["mScreenDuck"] := R3
	18	[3124]	LOADK    	R0 := 0.000000
	19	[3125]	GETGLOBAL	R2 K6 ; R2 := 0xae91e43b
	20	[3125]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0xc6a10ab1]
	21	[3125]	LOADK    	R4 := 0.000000
	22	[3125]	CALL     	R2 3 1 ; R2(R3,R4)
	23	[3126]	GETGLOBAL	R2 K6 ; R2 := 0xae91e43b
	24	[3126]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0x58bec6d6]
	25	[3126]	GETGLOBAL	R4 K3 ; R4 := 0x5bced4c4
	26	[3126]	GETTABLE 	R4 R4 K9 ; R4 := R4[0xac1b386a]
	27	[3126]	LOADK    	R5 := 1.000000
	28	[3126]	GETUPVAL 	R6 U0 ; R6 := U0
	29	[3126]	GETTABLE 	R6 R6 K1 ; R6 := R6["mScreenDuck"]
	30	[3126]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	31	[3126]	MUL      	R4 R4 K10 ; R4 := R4 * 0.800000
	32	[3126]	CALL     	R2 3 1 ; R2(R3,R4)
	33	[3129]	GETGLOBAL	R2 K11 ; R2 := _T
	34	[3129]	GETTABLE 	R2 R2 K12 ; R2 := R2["TopMenuOpen"]
	35	[3129]	TEST     	R2 0 ; if not R2 then PC := 41
	36	[3129]	JMP      	41 ; PC := 41
	37	[3131]	LOADK    	R0 := 1.000000
	38	[3132]	GETUPVAL 	R2 U1 ; R2 := U1
	39	[3132]	SETTABLE 	R2 K12 K13 ; R2["TopMenuOpen"] := true
	40	[3132]	JMP      	49 ; PC := 49
	41	[3133]	GETUPVAL 	R2 U1 ; R2 := U1
	42	[3133]	GETTABLE 	R2 R2 K12 ; R2 := R2["TopMenuOpen"]
	43	[3133]	TEST     	R2 0 ; if not R2 then PC := 49
	44	[3133]	JMP      	49 ; PC := 49
	45	[3135]	GETUPVAL 	R2 U2 ; R2 := U2
	46	[3135]	CALL     	R2 1 1 ; R2()
	47	[3136]	GETUPVAL 	R2 U1 ; R2 := U1
	48	[3136]	SETTABLE 	R2 K12 K14 ; R2["TopMenuOpen"] := false
	49	[3139]	GETUPVAL 	R2 U3 ; R2 := U3
	50	[3139]	GETTABLE 	R2 R2 K15 ; R2 := R2["PhotoBooth"]
	51	[3139]	TEST     	R2 0 ; if not R2 then PC := 54
	52	[3139]	JMP      	54 ; PC := 54
	53	[3140]	LOADK    	R0 := 1.000000
	54	[3143]	GETGLOBAL	R2 K11 ; R2 := _T
	55	[3143]	GETTABLE 	R2 R2 K16 ; R2 := R2["SettingsVisible"]
	56	[3143]	TEST     	R2 0 ; if not R2 then PC := 59
	57	[3143]	JMP      	59 ; PC := 59
	58	[3144]	LOADK    	R0 := 1.000000
	59	[3146]	GETGLOBAL	R2 K11 ; R2 := _T
	60	[3146]	GETTABLE 	R2 R2 K17 ; R2 := R2["HideHud"]
	61	[3146]	EQ       	1 R2 K18 ; if R2 == nil then PC := 68
	62	[3146]	JMP      	68 ; PC := 68
	63	[3146]	GETGLOBAL	R2 K11 ; R2 := _T
	64	[3146]	GETTABLE 	R2 R2 K17 ; R2 := R2["HideHud"]
	65	[3146]	LT       	0 K2 R2 ; if 0.000000 >= R2 then PC := 68
	66	[3146]	JMP      	68 ; PC := 68
	67	[3147]	LOADK    	R0 := 1.000000
	68	[3150]	GETGLOBAL	R2 K19 ; R2 := 0x89326c93
	69	[3150]	SELF     	R2 R2 K20 ; R3 := R2; R2 := R2[0xdd25e9d1]
	70	[3150]	CALL     	R2 2 2 ; R2 := R2(R3)
	71	[3150]	TEST     	R2 0 ; if not R2 then PC := 81
	72	[3150]	JMP      	81 ; PC := 81
	73	[3150]	GETGLOBAL	R2 K19 ; R2 := 0x89326c93
	74	[3150]	SELF     	R2 R2 K20 ; R3 := R2; R2 := R2[0xdd25e9d1]
	75	[3150]	CALL     	R2 2 2 ; R2 := R2(R3)
	76	[3150]	SELF     	R2 R2 K21 ; R3 := R2; R2 := R2[0x45fce6aa]
	77	[3150]	GETUPVAL 	R4 U4 ; R4 := U4
	78	[3150]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	79	[3150]	TEST     	R2 0 ; if not R2 then PC := 91
	80	[3150]	JMP      	91 ; PC := 91
	81	[3150]	GETGLOBAL	R2 K22 ; R2 := 0x7b998233
	82	[3150]	GETUPVAL 	R3 U5 ; R3 := U5
	83	[3150]	CALL     	R2 2 2 ; R2 := R2(R3)
	84	[3150]	TEST     	R2 1 ; if R2 then PC := 92
	85	[3150]	JMP      	92 ; PC := 92
	86	[3150]	GETUPVAL 	R2 U5 ; R2 := U5
	87	[3150]	SELF     	R2 R2 K23 ; R3 := R2; R2 := R2[0x0ffec0b9]
	88	[3150]	CALL     	R2 2 2 ; R2 := R2(R3)
	89	[3150]	TEST     	R2 0 ; if not R2 then PC := 92
	90	[3150]	JMP      	92 ; PC := 92
	91	[3151]	LOADK    	R0 := 1.000000
	92	[3155]	GETUPVAL 	R2 U1 ; R2 := U1
	93	[3155]	GETTABLE 	R2 R2 K24 ; R2 := R2["WaitingForProgressMovie"]
	94	[3155]	TEST     	R2 0 ; if not R2 then PC := 107
	95	[3155]	JMP      	107 ; PC := 107
	96	[3156]	GETGLOBAL	R2 K25 ; R2 := 0x9ba7909f
	97	[3156]	SELF     	R2 R2 K26 ; R3 := R2; R2 := R2[0x5374b92e]
	98	[3156]	GETGLOBAL	R4 K27 ; R4 := 0x82fd6cc3
	99	[3156]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	100	[3156]	TEST     	R2 1 ; if R2 then PC := 105
	101	[3156]	JMP      	105 ; PC := 105
	102	[3157]	GETUPVAL 	R2 U1 ; R2 := U1
	103	[3157]	SETTABLE 	R2 K24 K14 ; R2["WaitingForProgressMovie"] := false
	104	[3157]	JMP      	116 ; PC := 116
	105	[3159]	LOADK    	R0 := 1.000000
	106	[3160]	JMP      	116 ; PC := 116
	107	[3161]	GETGLOBAL	R2 K11 ; R2 := _T
	108	[3161]	GETTABLE 	R2 R2 K28 ; R2 := R2["SpectatorHudOpen"]
	109	[3161]	TEST     	R2 1 ; if R2 then PC := 115
	110	[3161]	JMP      	115 ; PC := 115
	111	[3161]	GETGLOBAL	R2 K11 ; R2 := _T
	112	[3161]	GETTABLE 	R2 R2 K29 ; R2 := R2["PVPScoreBoardOpen"]
	113	[3161]	TEST     	R2 0 ; if not R2 then PC := 116
	114	[3161]	JMP      	116 ; PC := 116
	115	[3162]	LOADK    	R0 := 1.000000
	116	[3165]	GETUPVAL 	R2 U0 ; R2 := U0
	117	[3165]	GETTABLE 	R2 R2 K30 ; R2 := R2["IsAlternateHud"]
	118	[3165]	TEST     	R2 0 ; if not R2 then PC := 121
	119	[3165]	JMP      	121 ; PC := 121
	120	[3166]	LOADK    	R0 := 1.000000
	121	[3169]	GETGLOBAL	R2 K11 ; R2 := _T
	122	[3169]	GETTABLE 	R2 R2 K31 ; R2 := R2["MinimalHud"]
	123	[3169]	TEST     	R2 0 ; if not R2 then PC := 126
	124	[3169]	JMP      	126 ; PC := 126
	125	[3170]	LOADK    	R0 := 1.000000
	126	[3173]	GETUPVAL 	R2 U1 ; R2 := U1
	127	[3173]	GETTABLE 	R2 R2 K32 ; R2 := R2["Fade"]
	128	[3173]	EQ       	0 R2 R0 ; if R2 ~= R0 then PC := 153
	129	[3173]	JMP      	153 ; PC := 153
	130	[3173]	GETGLOBAL	R2 K11 ; R2 := _T
	131	[3173]	GETTABLE 	R2 R2 K33 ; R2 := R2["UpdateHudFadeValue"]
	132	[3173]	EQ       	0 R2 K18 ; if R2 ~= nil then PC := 153
	133	[3173]	JMP      	153 ; PC := 153
	134	[3174]	GETGLOBAL	R2 K34 ; R2 := 0xcfc01047
	135	[3174]	GETUPVAL 	R3 U6 ; R3 := U6
	136	[3174]	GETTABLE 	R3 R3 K35 ; R3 := R3["Interpolating"]
	137	[3174]	CALL     	R2 2 4 ; R2,R3,R4 := R2(R3)
	138	[3174]	JMP      	150 ; PC := 150
	139	[3175]	GETGLOBAL	R7 K6 ; R7 := 0xae91e43b
	140	[3175]	SELF     	R7 R7 K36 ; R8 := R7; R7 := R7[0xbf8f0712]
	141	[3175]	MOVE     	R9 R5 ; R9 := R5
	142	[3175]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	143	[3175]	TEST     	R7 1 ; if R7 then PC := 150
	144	[3175]	JMP      	150 ; PC := 150
	145	[3176]	GETUPVAL 	R7 U6 ; R7 := U6
	146	[3176]	GETTABLE 	R7 R7 K35 ; R7 := R7["Interpolating"]
	147	[3176]	SETTABLE 	R7 R5 K18 ; R7[R5] := nil
	148	[3177]	GETGLOBAL	R7 K11 ; R7 := _T
	149	[3177]	SETTABLE 	R7 K33 K13 ; R7["UpdateHudFadeValue"] := true
	150	[3174]	TFORLOOP 	R2 2 ; R5,R6 := R2(R3,R4); if R5 ~= nil then begin PC = 139; R4 := R5 end
	151	[3178]	JMP      	139 ; PC := 139
	152	[3179]	JMP      	156 ; PC := 156
	153	[3181]	GETUPVAL 	R7 U6 ; R7 := U6
	154	[3181]	NEWTABLE 	R8 0 0 ; R8 := {}
	155	[3181]	SETTABLE 	R7 K35 R8 ; R7["Interpolating"] := R8
	156	[3184]	GETUPVAL 	R7 U1 ; R7 := U1
	157	[3184]	GETTABLE 	R7 R7 K32 ; R7 := R7["Fade"]
	158	[3184]	EQ       	0 R7 R0 ; if R7 ~= R0 then PC := 164
	159	[3184]	JMP      	164 ; PC := 164
	160	[3184]	GETGLOBAL	R7 K11 ; R7 := _T
	161	[3184]	GETTABLE 	R7 R7 K33 ; R7 := R7["UpdateHudFadeValue"]
	162	[3184]	TEST     	R7 0 ; if not R7 then PC := 430
	163	[3184]	JMP      	430 ; PC := 430
	164	[3185]	GETUPVAL 	R7 U1 ; R7 := U1
	165	[3185]	SETTABLE 	R7 K32 R0 ; R7["Fade"] := R0
	166	[3186]	GETGLOBAL	R7 K11 ; R7 := _T
	167	[3186]	SETTABLE 	R7 K33 K18 ; R7["UpdateHudFadeValue"] := nil
	168	[3187]	GETGLOBAL	R7 K37 ; R7 := 0x7fa0b32a
	169	[3187]	MOVE     	R8 R0 ; R8 := R0
	170	[3187]	CALL     	R7 2 2 ; R7 := R7(R8)
	171	[3187]	SUB      	R7 K38 R7 ; R7 := 1.000000 - R7
	172	[3187]	MUL      	R7 R7 K39 ; R7 := R7 * 100.000000
	173	[3188]	GETGLOBAL	R8 K40 ; R8 := 0x4ec73e73
	174	[3188]	GETUPVAL 	R9 U6 ; R9 := U6
	175	[3188]	GETTABLE 	R9 R9 K41 ; R9 := R9["Faded"]
	176	[3188]	CALL     	R8 2 2 ; R8 := R8(R9)
	177	[3188]	EQ       	1 R8 K18 ; if R8 == nil then PC := 180
	178	[3188]	JMP      	180 ; PC := 180
	179	[3188]	OP_LOADBOOL	R8 0 1 ; R8 := false; PC := 180
	180	[3188]	OP_LOADBOOL	R8 1 0 ; R8 := true
	181	[3189]	GETUPVAL 	R9 U6 ; R9 := U6
	182	[3189]	GETTABLE 	R9 R9 K42 ; R9 := R9["Enabled"]
	183	[3189]	TEST     	R9 1 ; if R9 then PC := 223
	184	[3189]	JMP      	223 ; PC := 223
	185	[3189]	TEST     	R8 0 ; if not R8 then PC := 223
	186	[3189]	JMP      	223 ; PC := 223
	187	[3189]	GETGLOBAL	R9 K11 ; R9 := _T
	188	[3189]	GETTABLE 	R9 R9 K31 ; R9 := R9["MinimalHud"]
	189	[3189]	TEST     	R9 1 ; if R9 then PC := 223
	190	[3189]	JMP      	223 ; PC := 223
	191	[3189]	GETUPVAL 	R9 U0 ; R9 := U0
	192	[3189]	GETTABLE 	R9 R9 K30 ; R9 := R9["IsAlternateHud"]
	193	[3189]	TEST     	R9 1 ; if R9 then PC := 223
	194	[3189]	JMP      	223 ; PC := 223
	195	[3189]	GETGLOBAL	R9 K11 ; R9 := _T
	196	[3189]	GETTABLE 	R9 R9 K28 ; R9 := R9["SpectatorHudOpen"]
	197	[3189]	TEST     	R9 1 ; if R9 then PC := 223
	198	[3189]	JMP      	223 ; PC := 223
	199	[3190]	GETGLOBAL	R9 K6 ; R9 := 0xae91e43b
	200	[3190]	SELF     	R9 R9 K43 ; R10 := R9; R9 := R9[0x67bc869f]
	201	[3190]	LOADK    	R11 K44 ; R11 := "_root"
	202	[3190]	LOADK    	R12 := 10.000000
	203	[3190]	MOVE     	R13 R7 ; R13 := R7
	204	[3190]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	205	[3191]	GETUPVAL 	R9 U0 ; R9 := U0
	206	[3191]	GETTABLE 	R9 R9 K45 ; R9 := R9["UIMode"]
	207	[3191]	GETUPVAL 	R10 U7 ; R10 := U7
	208	[3191]	GETTABLE 	R10 R10 K46 ; R10 := R10["UI_MODE_IN_DOJO"]
	209	[3191]	EQ       	0 R9 R10 ; if R9 ~= R10 then PC := 426
	210	[3191]	JMP      	426 ; PC := 426
	211	[3192]	GETGLOBAL	R9 K25 ; R9 := 0x9ba7909f
	212	[3192]	SELF     	R9 R9 K47 ; R10 := R9; R9 := R9[0xbcfb64ab]
	213	[3192]	GETGLOBAL	R11 K48 ; R11 := 0xe35e5527
	214	[3192]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	215	[3193]	TEST     	R9 0 ; if not R9 then PC := 426
	216	[3193]	JMP      	426 ; PC := 426
	217	[3194]	SELF     	R10 R9 K43 ; R11 := R9; R10 := R9[0x67bc869f]
	218	[3194]	LOADK    	R12 K44 ; R12 := "_root"
	219	[3194]	LOADK    	R13 := 10.000000
	220	[3194]	MOVE     	R14 R7 ; R14 := R7
	221	[3194]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	222	[3196]	JMP      	426 ; PC := 426
	223	[3198]	TEST     	R8 0 ; if not R8 then PC := 231
	224	[3198]	JMP      	231 ; PC := 231
	225	[3200]	GETGLOBAL	R10 K6 ; R10 := 0xae91e43b
	226	[3200]	SELF     	R10 R10 K43 ; R11 := R10; R10 := R10[0x67bc869f]
	227	[3200]	LOADK    	R12 K44 ; R12 := "_root"
	228	[3200]	LOADK    	R13 := 10.000000
	229	[3200]	LOADK    	R14 := 100.000000
	230	[3200]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	231	[3202]	GETGLOBAL	R10 K49 ; R10 := 0xc8802016
	232	[3202]	GETUPVAL 	R11 U6 ; R11 := U6
	233	[3202]	GETTABLE 	R11 R11 K50 ; R11 := R11["Clips"]
	234	[3202]	CALL     	R10 2 4 ; R10,R11,R12 := R10(R11)
	235	[3202]	JMP      	424 ; PC := 424
	236	[3203]	GETUPVAL 	R15 U0 ; R15 := U0
	237	[3203]	GETTABLE 	R15 R15 K30 ; R15 := R15["IsAlternateHud"]
	238	[3203]	TEST     	R15 1 ; if R15 then PC := 244
	239	[3203]	JMP      	244 ; PC := 244
	240	[3203]	GETGLOBAL	R15 K11 ; R15 := _T
	241	[3203]	GETTABLE 	R15 R15 K51 ; R15 := R15["ForceShowHudTrackers"]
	242	[3203]	TEST     	R15 0 ; if not R15 then PC := 246
	243	[3203]	JMP      	246 ; PC := 246
	244	[3203]	EQ       	1 R14 K52 ; if R14 == "HudTracker" then PC := 381
	245	[3203]	JMP      	381 ; PC := 381
	246	[3205]	GETUPVAL 	R15 U0 ; R15 := U0
	247	[3205]	GETTABLE 	R15 R15 K30 ; R15 := R15["IsAlternateHud"]
	248	[3205]	TEST     	R15 1 ; if R15 then PC := 254
	249	[3205]	JMP      	254 ; PC := 254
	250	[3205]	GETGLOBAL	R15 K11 ; R15 := _T
	251	[3205]	GETTABLE 	R15 R15 K53 ; R15 := R15["ForceShowMiniMap"]
	252	[3205]	TEST     	R15 0 ; if not R15 then PC := 258
	253	[3205]	JMP      	258 ; PC := 258
	254	[3205]	EQ       	1 R14 K54 ; if R14 == "MiniMapContainer" then PC := 381
	255	[3205]	JMP      	381 ; PC := 381
	256	[3205]	EQ       	1 R14 K55 ; if R14 == "MiniMapOverlayMsg" then PC := 381
	257	[3205]	JMP      	381 ; PC := 381
	258	[3206]	GETGLOBAL	R15 K11 ; R15 := _T
	259	[3206]	GETTABLE 	R15 R15 K31 ; R15 := R15["MinimalHud"]
	260	[3206]	TEST     	R15 0 ; if not R15 then PC := 282
	261	[3206]	JMP      	282 ; PC := 282
	262	[3206]	EQ       	1 R14 K56 ; if R14 == "Reticle" then PC := 381
	263	[3206]	JMP      	381 ; PC := 381
	264	[3206]	EQ       	1 R14 K57 ; if R14 == "ReticleCustom" then PC := 381
	265	[3206]	JMP      	381 ; PC := 381
	266	[3206]	EQ       	1 R14 K58 ; if R14 == "PvPHeldFlagTimer" then PC := 381
	267	[3206]	JMP      	381 ; PC := 381
	268	[3207]	GETGLOBAL	R15 K11 ; R15 := _T
	269	[3207]	GETTABLE 	R15 R15 K59 ; R15 := R15["ForceShowHealthShield"]
	270	[3207]	TEST     	R15 0 ; if not R15 then PC := 276
	271	[3207]	JMP      	276 ; PC := 276
	272	[3207]	EQ       	1 R14 K60 ; if R14 == "HealthAndShield" then PC := 381
	273	[3207]	JMP      	381 ; PC := 381
	274	[3207]	EQ       	1 R14 K61 ; if R14 == "Card" then PC := 381
	275	[3207]	JMP      	381 ; PC := 381
	276	[3207]	GETGLOBAL	R15 K11 ; R15 := _T
	277	[3207]	GETTABLE 	R15 R15 K62 ; R15 := R15["ForceShowImpactMessages"]
	278	[3207]	TEST     	R15 0 ; if not R15 then PC := 282
	279	[3207]	JMP      	282 ; PC := 282
	280	[3207]	EQ       	1 R14 K63 ; if R14 == "ImpactMessage" then PC := 381
	281	[3207]	JMP      	381 ; PC := 381
	282	[3209]	GETGLOBAL	R15 K6 ; R15 := 0xae91e43b
	283	[3209]	SELF     	R15 R15 K36 ; R16 := R15; R15 := R15[0xbf8f0712]
	284	[3209]	MOVE     	R17 R14 ; R17 := R14
	285	[3209]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	286	[3209]	TEST     	R15 0 ; if not R15 then PC := 292
	287	[3209]	JMP      	292 ; PC := 292
	288	[3210]	GETUPVAL 	R15 U6 ; R15 := U6
	289	[3210]	GETTABLE 	R15 R15 K35 ; R15 := R15["Interpolating"]
	290	[3210]	SETTABLE 	R15 R14 K13 ; R15[R14] := true
	291	[3210]	JMP      	424 ; PC := 424
	292	[3212]	GETUPVAL 	R15 U6 ; R15 := U6
	293	[3212]	GETTABLE 	R15 R15 K41 ; R15 := R15["Faded"]
	294	[3212]	GETTABLE 	R15 R15 R14 ; R15 := R15[R14]
	295	[3212]	TEST     	R15 1 ; if R15 then PC := 313
	296	[3212]	JMP      	313 ; PC := 313
	297	[3213]	GETUPVAL 	R15 U6 ; R15 := U6
	298	[3213]	GETTABLE 	R15 R15 K41 ; R15 := R15["Faded"]
	299	[3213]	NEWTABLE 	R16 0 2 ; R16 := {}
	300	[3213]	GETGLOBAL	R17 K6 ; R17 := 0xae91e43b
	301	[3213]	SELF     	R17 R17 K65 ; R18 := R17; R17 := R17[0x5b0290d2]
	302	[3213]	MOVE     	R19 R14 ; R19 := R14
	303	[3213]	LOADK    	R20 := 11.000000
	304	[3213]	CALL     	R17 4 2 ; R17 := R17(R18,R19,R20)
	305	[3213]	SETTABLE 	R16 K64 R17 ; R16["Visible"] := R17
	306	[3213]	GETGLOBAL	R17 K6 ; R17 := 0xae91e43b
	307	[3213]	SELF     	R17 R17 K67 ; R18 := R17; R17 := R17[0x91a24e4b]
	308	[3213]	MOVE     	R19 R14 ; R19 := R14
	309	[3213]	LOADK    	R20 := 10.000000
	310	[3213]	CALL     	R17 4 2 ; R17 := R17(R18,R19,R20)
	311	[3213]	SETTABLE 	R16 K66 R17 ; R16["Alpha"] := R17
	312	[3213]	SETTABLE 	R15 R14 R16 ; R15[R14] := R16
	313	[3215]	GETGLOBAL	R15 K6 ; R15 := 0xae91e43b
	314	[3215]	SELF     	R15 R15 K68 ; R16 := R15; R15 := R15[0xaade900e]
	315	[3215]	MOVE     	R17 R14 ; R17 := R14
	316	[3215]	LOADK    	R18 := 11.000000
	317	[3215]	EQ       	0 R0 K2 ; if R0 ~= 0.000000 then PC := 324
	318	[3215]	JMP      	324 ; PC := 324
	319	[3215]	GETUPVAL 	R19 U6 ; R19 := U6
	320	[3215]	GETTABLE 	R19 R19 K41 ; R19 := R19["Faded"]
	321	[3215]	GETTABLE 	R19 R19 R14 ; R19 := R19[R14]
	322	[3215]	GETTABLE 	R19 R19 K64 ; R19 := R19["Visible"]
	323	[3215]	JMP      	326 ; PC := 326
	324	[3215]	OP_LOADBOOL	R19 0 1 ; R19 := false; PC := 325
	325	[3215]	OP_LOADBOOL	R19 1 0 ; R19 := true
	326	[3215]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	327	[3216]	GETUPVAL 	R15 U6 ; R15 := U6
	328	[3216]	GETTABLE 	R15 R15 K69 ; R15 := R15["AutoClips"]
	329	[3216]	GETTABLE 	R15 R15 R14 ; R15 := R15[R14]
	330	[3216]	TEST     	R15 1 ; if R15 then PC := 346
	331	[3216]	JMP      	346 ; PC := 346
	332	[3217]	GETGLOBAL	R15 K6 ; R15 := 0xae91e43b
	333	[3217]	SELF     	R15 R15 K43 ; R16 := R15; R15 := R15[0x67bc869f]
	334	[3217]	MOVE     	R17 R14 ; R17 := R14
	335	[3217]	LOADK    	R18 := 10.000000
	336	[3217]	GETGLOBAL	R19 K37 ; R19 := 0x7fa0b32a
	337	[3217]	MOVE     	R20 R0 ; R20 := R0
	338	[3217]	CALL     	R19 2 2 ; R19 := R19(R20)
	339	[3217]	SUB      	R19 K38 R19 ; R19 := 1.000000 - R19
	340	[3217]	GETUPVAL 	R20 U6 ; R20 := U6
	341	[3217]	GETTABLE 	R20 R20 K41 ; R20 := R20["Faded"]
	342	[3217]	GETTABLE 	R20 R20 R14 ; R20 := R20[R14]
	343	[3217]	GETTABLE 	R20 R20 K66 ; R20 := R20["Alpha"]
	344	[3217]	MUL      	R19 R19 R20 ; R19 := R19 * R20
	345	[3217]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	346	[3219]	EQ       	0 R0 K2 ; if R0 ~= 0.000000 then PC := 351
	347	[3219]	JMP      	351 ; PC := 351
	348	[3220]	GETUPVAL 	R15 U6 ; R15 := U6
	349	[3220]	GETTABLE 	R15 R15 K41 ; R15 := R15["Faded"]
	350	[3220]	SETTABLE 	R15 R14 K18 ; R15[R14] := nil
	351	[3223]	GETGLOBAL	R15 K22 ; R15 := 0x7b998233
	352	[3223]	GETUPVAL 	R16 U8 ; R16 := U8
	353	[3223]	CALL     	R15 2 2 ; R15 := R15(R16)
	354	[3223]	TEST     	R15 1 ; if R15 then PC := 424
	355	[3223]	JMP      	424 ; PC := 424
	356	[3224]	GETUPVAL 	R15 U8 ; R15 := U8
	357	[3224]	SELF     	R15 R15 K70 ; R16 := R15; R15 := R15[0x603d617e]
	358	[3224]	CALL     	R15 2 2 ; R15 := R15(R16)
	359	[3225]	GETGLOBAL	R16 K22 ; R16 := 0x7b998233
	360	[3225]	MOVE     	R17 R15 ; R17 := R15
	361	[3225]	CALL     	R16 2 2 ; R16 := R16(R17)
	362	[3225]	TEST     	R16 1 ; if R16 then PC := 424
	363	[3225]	JMP      	424 ; PC := 424
	364	[3226]	SELF     	R16 R15 K68 ; R17 := R15; R16 := R15[0xaade900e]
	365	[3226]	LOADK    	R18 K44 ; R18 := "_root"
	366	[3226]	LOADK    	R19 := 11.000000
	367	[3226]	EQ       	1 R0 K2 ; if R0 == 0.000000 then PC := 370
	368	[3226]	JMP      	370 ; PC := 370
	369	[3226]	OP_LOADBOOL	R20 0 1 ; R20 := false; PC := 370
	370	[3226]	OP_LOADBOOL	R20 1 0 ; R20 := true
	371	[3226]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	372	[3227]	SELF     	R16 R15 K43 ; R17 := R15; R16 := R15[0x67bc869f]
	373	[3227]	LOADK    	R18 K44 ; R18 := "_root"
	374	[3227]	LOADK    	R19 := 10.000000
	375	[3227]	GETGLOBAL	R20 K37 ; R20 := 0x7fa0b32a
	376	[3227]	MOVE     	R21 R0 ; R21 := R0
	377	[3227]	CALL     	R20 2 2 ; R20 := R20(R21)
	378	[3227]	SUB      	R20 K38 R20 ; R20 := 1.000000 - R20
	379	[3227]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	380	[3230]	JMP      	424 ; PC := 424
	381	[3231]	GETUPVAL 	R16 U6 ; R16 := U6
	382	[3231]	GETTABLE 	R16 R16 K41 ; R16 := R16["Faded"]
	383	[3231]	GETTABLE 	R16 R16 R14 ; R16 := R16[R14]
	384	[3231]	TEST     	R16 0 ; if not R16 then PC := 424
	385	[3231]	JMP      	424 ; PC := 424
	386	[3232]	GETGLOBAL	R16 K6 ; R16 := 0xae91e43b
	387	[3232]	SELF     	R16 R16 K68 ; R17 := R16; R16 := R16[0xaade900e]
	388	[3232]	MOVE     	R18 R14 ; R18 := R14
	389	[3232]	LOADK    	R19 := 11.000000
	390	[3232]	OP_LOADBOOL	R20 1 0 ; R20 := true
	391	[3232]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	392	[3233]	GETGLOBAL	R16 K6 ; R16 := 0xae91e43b
	393	[3233]	SELF     	R16 R16 K43 ; R17 := R16; R16 := R16[0x67bc869f]
	394	[3233]	MOVE     	R18 R14 ; R18 := R14
	395	[3233]	LOADK    	R19 := 10.000000
	396	[3233]	LOADK    	R20 := 100.000000
	397	[3233]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	398	[3234]	GETUPVAL 	R16 U6 ; R16 := U6
	399	[3234]	GETTABLE 	R16 R16 K41 ; R16 := R16["Faded"]
	400	[3234]	SETTABLE 	R16 R14 K18 ; R16[R14] := nil
	401	[3236]	GETGLOBAL	R16 K22 ; R16 := 0x7b998233
	402	[3236]	GETUPVAL 	R17 U8 ; R17 := U8
	403	[3236]	CALL     	R16 2 2 ; R16 := R16(R17)
	404	[3236]	TEST     	R16 1 ; if R16 then PC := 424
	405	[3236]	JMP      	424 ; PC := 424
	406	[3237]	GETUPVAL 	R16 U8 ; R16 := U8
	407	[3237]	SELF     	R16 R16 K70 ; R17 := R16; R16 := R16[0x603d617e]
	408	[3237]	CALL     	R16 2 2 ; R16 := R16(R17)
	409	[3238]	GETGLOBAL	R17 K22 ; R17 := 0x7b998233
	410	[3238]	MOVE     	R18 R16 ; R18 := R16
	411	[3238]	CALL     	R17 2 2 ; R17 := R17(R18)
	412	[3238]	TEST     	R17 1 ; if R17 then PC := 424
	413	[3238]	JMP      	424 ; PC := 424
	414	[3239]	SELF     	R17 R16 K68 ; R18 := R16; R17 := R16[0xaade900e]
	415	[3239]	LOADK    	R19 K44 ; R19 := "_root"
	416	[3239]	LOADK    	R20 := 11.000000
	417	[3239]	OP_LOADBOOL	R21 1 0 ; R21 := true
	418	[3239]	CALL     	R17 5 1 ; R17(R18,R19,R20,R21)
	419	[3240]	SELF     	R17 R16 K43 ; R18 := R16; R17 := R16[0x67bc869f]
	420	[3240]	LOADK    	R19 K44 ; R19 := "_root"
	421	[3240]	LOADK    	R20 := 10.000000
	422	[3240]	LOADK    	R21 := 100.000000
	423	[3240]	CALL     	R17 5 1 ; R17(R18,R19,R20,R21)
	424	[3202]	TFORLOOP 	R10 2 ; R13,R14 := R10(R11,R12); if R13 ~= nil then begin PC = 236; R12 := R13 end
	425	[3243]	JMP      	236 ; PC := 236
	426	[3247]	GETUPVAL 	R17 U9 ; R17 := U9
	427	[3247]	SELF     	R17 R17 K71 ; R18 := R17; R17 := R17[0x2ce7535d]
	428	[3247]	MOVE     	R19 R7 ; R19 := R7
	429	[3247]	CALL     	R17 3 1 ; R17(R18,R19)
	430	[3249]	RETURN   	R0 1 ; return 

function #109 <?:3251,3253> (3 instructions, 12 bytes at 000002111C799700)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3252]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[3252]	CALL     	R0 1 1 ; R0()
	3	[3253]	RETURN   	R0 1 ; return 

function #110 <?:3255,3650> (1092 instructions, 4368 bytes at 000002111BD4A7A0)
0 params, 58 slots, 40 upvalues, 0 locals, 193 constants, 0 functions
	1	[3256]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[3256]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	3	[3256]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[3256]	TEST     	R0 1 ; if R0 then PC := 10
	5	[3256]	JMP      	10 ; PC := 10
	6	[3256]	GETUPVAL 	R0 U0 ; R0 := U0
	7	[3256]	GETTABLE 	R0 R0 K2 ; R0 := R0["Initialized"]
	8	[3256]	TEST     	R0 1 ; if R0 then PC := 11
	9	[3256]	JMP      	11 ; PC := 11
	10	[3257]	RETURN   	R0 1 ; return 
	11	[3260]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	12	[3260]	GETGLOBAL	R1 K3 ; R1 := 0xbe190284
	13	[3260]	CALL     	R0 2 2 ; R0 := R0(R1)
	14	[3260]	TEST     	R0 1 ; if R0 then PC := 22
	15	[3260]	JMP      	22 ; PC := 22
	16	[3260]	GETGLOBAL	R0 K3 ; R0 := 0xbe190284
	17	[3260]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0xf2deaf69]
	18	[3260]	GETGLOBAL	R2 K5 ; R2 := gLotusAttractModeGameRulesType
	19	[3260]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	20	[3260]	TEST     	R0 0 ; if not R0 then PC := 23
	21	[3260]	JMP      	23 ; PC := 23
	22	[3261]	RETURN   	R0 1 ; return 
	23	[3264]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	24	[3264]	GETGLOBAL	R1 K6 ; R1 := _T
	25	[3264]	GETTABLE 	R1 R1 K7 ; R1 := R1["RailjackHud_Movie"]
	26	[3264]	CALL     	R0 2 2 ; R0 := R0(R1)
	27	[3264]	NOT      	R0 R0 ; R0 := not R0
	28	[3268]	GETGLOBAL	R1 K8 ; R1 := 0x67652851
	29	[3268]	CALL     	R1 1 2 ; R1 := R1()
	30	[3271]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	31	[3271]	SELF     	R2 R2 K9 ; R3 := R2; R2 := R2[0x8a8c8d5a]
	32	[3271]	MOVE     	R4 R1 ; R4 := R1
	33	[3271]	CALL     	R2 3 1 ; R2(R3,R4)
	34	[3275]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	35	[3275]	GETUPVAL 	R3 U1 ; R3 := U1
	36	[3275]	CALL     	R2 2 2 ; R2 := R2(R3)
	37	[3275]	TEST     	R2 1 ; if R2 then PC := 43
	38	[3275]	JMP      	43 ; PC := 43
	39	[3276]	GETUPVAL 	R2 U1 ; R2 := U1
	40	[3276]	SELF     	R2 R2 K10 ; R3 := R2; R2 := R2[0xfaa69527]
	41	[3276]	MOVE     	R4 R1 ; R4 := R1
	42	[3276]	CALL     	R2 3 1 ; R2(R3,R4)
	43	[3280]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	44	[3280]	GETUPVAL 	R3 U2 ; R3 := U2
	45	[3280]	CALL     	R2 2 2 ; R2 := R2(R3)
	46	[3280]	TEST     	R2 1 ; if R2 then PC := 51
	47	[3280]	JMP      	51 ; PC := 51
	48	[3281]	GETUPVAL 	R2 U2 ; R2 := U2
	49	[3281]	SELF     	R2 R2 K10 ; R3 := R2; R2 := R2[0xfaa69527]
	50	[3281]	CALL     	R2 2 1 ; R2(R3)
	51	[3285]	GETGLOBAL	R2 K6 ; R2 := _T
	52	[3285]	GETUPVAL 	R3 U3 ; R3 := U3
	53	[3285]	CALL     	R3 1 2 ; R3 := R3()
	54	[3285]	SETTABLE 	R2 K11 R3 ; R2["HudInitState"] := R3
	55	[3288]	GETGLOBAL	R2 K6 ; R2 := _T
	56	[3288]	GETTABLE 	R2 R2 K11 ; R2 := R2["HudInitState"]
	57	[3288]	TEST     	R2 1 ; if R2 then PC := 60
	58	[3288]	JMP      	60 ; PC := 60
	59	[3290]	RETURN   	R0 1 ; return 
	60	[3294]	GETUPVAL 	R2 U0 ; R2 := U0
	61	[3294]	SETTABLE 	R2 K12 K13 ; R2["mDispatchingQueuedFuncs"] := true
	62	[3295]	GETUPVAL 	R2 U4 ; R2 := U4
	63	[3295]	LEN      	R2 R2 ; R2 := # R2
	64	[3295]	LT       	0 K14 R2 ; if 0.000000 >= R2 then PC := 114
	65	[3295]	JMP      	114 ; PC := 114
	66	[3296]	LOADK    	R2 := 1.000000
	67	[3296]	GETUPVAL 	R3 U4 ; R3 := U4
	68	[3296]	LEN      	R3 R3 ; R3 := # R3
	69	[3296]	LOADK    	R4 := 1.000000
	70	[3296]	FORPREP  	R2 111 ; R2 -= R4; PC := 111
	71	[3297]	GETUPVAL 	R6 U4 ; R6 := U4
	72	[3297]	GETTABLE 	R6 R6 R5 ; R6 := R6[R5]
	73	[3297]	GETTABLE 	R6 R6 K15 ; R6 := R6[1.000000]
	74	[3297]	GETUPVAL 	R7 U4 ; R7 := U4
	75	[3297]	GETTABLE 	R7 R7 R5 ; R7 := R7[R5]
	76	[3297]	GETTABLE 	R7 R7 K16 ; R7 := R7[2.000000]
	77	[3297]	GETUPVAL 	R8 U4 ; R8 := U4
	78	[3297]	GETTABLE 	R8 R8 R5 ; R8 := R8[R5]
	79	[3297]	GETTABLE 	R8 R8 K17 ; R8 := R8[3.000000]
	80	[3297]	GETUPVAL 	R9 U4 ; R9 := U4
	81	[3297]	GETTABLE 	R9 R9 R5 ; R9 := R9[R5]
	82	[3297]	GETTABLE 	R9 R9 K18 ; R9 := R9[4.000000]
	83	[3297]	GETUPVAL 	R10 U4 ; R10 := U4
	84	[3297]	GETTABLE 	R10 R10 R5 ; R10 := R10[R5]
	85	[3297]	GETTABLE 	R10 R10 K19 ; R10 := R10[5.000000]
	86	[3297]	GETUPVAL 	R11 U4 ; R11 := U4
	87	[3297]	GETTABLE 	R11 R11 R5 ; R11 := R11[R5]
	88	[3297]	GETTABLE 	R11 R11 K20 ; R11 := R11[6.000000]
	89	[3297]	GETUPVAL 	R12 U4 ; R12 := U4
	90	[3297]	GETTABLE 	R12 R12 R5 ; R12 := R12[R5]
	91	[3297]	GETTABLE 	R12 R12 K21 ; R12 := R12[7.000000]
	92	[3297]	GETUPVAL 	R13 U4 ; R13 := U4
	93	[3297]	GETTABLE 	R13 R13 R5 ; R13 := R13[R5]
	94	[3297]	GETTABLE 	R13 R13 K22 ; R13 := R13[8.000000]
	95	[3297]	GETUPVAL 	R14 U4 ; R14 := U4
	96	[3297]	GETTABLE 	R14 R14 R5 ; R14 := R14[R5]
	97	[3297]	GETTABLE 	R14 R14 K23 ; R14 := R14[9.000000]
	98	[3297]	GETUPVAL 	R15 U4 ; R15 := U4
	99	[3297]	GETTABLE 	R15 R15 R5 ; R15 := R15[R5]
	100	[3297]	GETTABLE 	R15 R15 K24 ; R15 := R15[10.000000]
	101	[3297]	GETUPVAL 	R16 U4 ; R16 := U4
	102	[3297]	GETTABLE 	R16 R16 R5 ; R16 := R16[R5]
	103	[3297]	GETTABLE 	R16 R16 K25 ; R16 := R16[11.000000]
	104	[3297]	GETUPVAL 	R17 U4 ; R17 := U4
	105	[3297]	GETTABLE 	R17 R17 R5 ; R17 := R17[R5]
	106	[3297]	GETTABLE 	R17 R17 K26 ; R17 := R17[12.000000]
	107	[3297]	GETUPVAL 	R18 U4 ; R18 := U4
	108	[3297]	GETTABLE 	R18 R18 R5 ; R18 := R18[R5]
	109	[3297]	GETTABLE 	R18 R18 K27 ; R18 := R18[13.000000]
	110	[3297]	CALL     	R6 13 1 ; R6(R7,R8,R9,R10,R11,R12,R13,R14,R15,R16,R17,R18)
	111	[3296]	FORLOOP  	R2 71 ; R2 += R4; if R2 <= R3 then begin PC := 71; R5 := R2 end
	112	[3299]	NEWTABLE 	R6 0 0 ; R6 := {}
	113	[3299]	SETUPVAL 	R6 U4 ; U4 := R6
	114	[3301]	GETUPVAL 	R6 U0 ; R6 := U0
	115	[3301]	SETTABLE 	R6 K12 K28 ; R6["mDispatchingQueuedFuncs"] := false
	116	[3303]	GETUPVAL 	R6 U0 ; R6 := U0
	117	[3303]	GETTABLE 	R6 R6 K29 ; R6 := R6["PlayerListHasChanged"]
	118	[3303]	TEST     	R6 0 ; if not R6 then PC := 122
	119	[3303]	JMP      	122 ; PC := 122
	120	[3304]	GETUPVAL 	R6 U5 ; R6 := U5
	121	[3304]	CALL     	R6 1 1 ; R6()
	122	[3307]	GETUPVAL 	R6 U0 ; R6 := U0
	123	[3307]	GETTABLE 	R6 R6 K30 ; R6 := R6["UIMode"]
	124	[3307]	GETUPVAL 	R7 U6 ; R7 := U6
	125	[3307]	GETTABLE 	R7 R7 K31 ; R7 := R7["UI_MODE_IN_GAME"]
	126	[3307]	EQ       	0 R6 R7 ; if R6 ~= R7 then PC := 141
	127	[3307]	JMP      	141 ; PC := 141
	128	[3307]	GETUPVAL 	R6 U0 ; R6 := U0
	129	[3307]	GETTABLE 	R6 R6 K32 ; R6 := R6["IsInConclave"]
	130	[3307]	TEST     	R6 1 ; if R6 then PC := 141
	131	[3307]	JMP      	141 ; PC := 141
	132	[3307]	GETUPVAL 	R6 U0 ; R6 := U0
	133	[3307]	GETTABLE 	R6 R6 K33 ; R6 := R6["MissionType"]
	134	[3307]	EQ       	0 R6 K34 ; if R6 ~= -1.000000 then PC := 141
	135	[3307]	JMP      	141 ; PC := 141
	136	[3308]	GETUPVAL 	R6 U0 ; R6 := U0
	137	[3308]	GETUPVAL 	R7 U7 ; R7 := U7
	138	[3308]	SELF     	R7 R7 K35 ; R8 := R7; R7 := R7[0x5c390f04]
	139	[3308]	CALL     	R7 2 2 ; R7 := R7(R8)
	140	[3308]	SETTABLE 	R6 K33 R7 ; R6["MissionType"] := R7
	141	[3313]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	142	[3313]	GETUPVAL 	R7 U8 ; R7 := U8
	143	[3313]	CALL     	R6 2 2 ; R6 := R6(R7)
	144	[3313]	TEST     	R6 1 ; if R6 then PC := 149
	145	[3313]	JMP      	149 ; PC := 149
	146	[3314]	GETUPVAL 	R6 U8 ; R6 := U8
	147	[3314]	SELF     	R6 R6 K10 ; R7 := R6; R6 := R6[0xfaa69527]
	148	[3314]	CALL     	R6 2 1 ; R6(R7)
	149	[3319]	GETUPVAL 	R6 U0 ; R6 := U0
	150	[3319]	GETGLOBAL	R7 K37 ; R7 := 0x34291f5c
	151	[3319]	GETTABLE 	R7 R7 K38 ; R7 := R7[0x1467d5f4]
	152	[3319]	CALL     	R7 1 2 ; R7 := R7()
	153	[3319]	SETTABLE 	R6 K36 R7 ; R6["mPlayingWithController"] := R7
	154	[3322]	GETUPVAL 	R6 U9 ; R6 := U9
	155	[3322]	SELF     	R6 R6 K10 ; R7 := R6; R6 := R6[0xfaa69527]
	156	[3322]	GETUPVAL 	R8 U10 ; R8 := U10
	157	[3322]	MOVE     	R9 R1 ; R9 := R1
	158	[3322]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	159	[3323]	GETGLOBAL	R6 K6 ; R6 := _T
	160	[3323]	GETTABLE 	R6 R6 K39 ; R6 := R6["OverrideDamageIndicatorColor"]
	161	[3323]	EQ       	1 R6 K40 ; if R6 == nil then PC := 170
	162	[3323]	JMP      	170 ; PC := 170
	163	[3324]	GETGLOBAL	R6 K1 ; R6 := 0xae91e43b
	164	[3324]	SELF     	R6 R6 K41 ; R7 := R6; R6 := R6[0x67bc869f]
	165	[3324]	LOADK    	R8 K42 ; R8 := "SuccessfulHitNotification"
	166	[3324]	LOADK    	R9 := 9.000000
	167	[3324]	GETGLOBAL	R10 K6 ; R10 := _T
	168	[3324]	GETTABLE 	R10 R10 K39 ; R10 := R10["OverrideDamageIndicatorColor"]
	169	[3324]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	170	[3327]	GETUPVAL 	R6 U11 ; R6 := U11
	171	[3327]	GETTABLE 	R6 R6 K43 ; R6 := R6["SecretMiniGameActive"]
	172	[3327]	GETGLOBAL	R7 K6 ; R7 := _T
	173	[3327]	GETTABLE 	R7 R7 K43 ; R7 := R7["SecretMiniGameActive"]
	174	[3327]	EQ       	1 R6 R7 ; if R6 == R7 then PC := 198
	175	[3327]	JMP      	198 ; PC := 198
	176	[3328]	GETUPVAL 	R6 U11 ; R6 := U11
	177	[3328]	GETGLOBAL	R7 K6 ; R7 := _T
	178	[3328]	GETTABLE 	R7 R7 K43 ; R7 := R7["SecretMiniGameActive"]
	179	[3328]	SETTABLE 	R6 K43 R7 ; R6["SecretMiniGameActive"] := R7
	180	[3329]	GETUPVAL 	R6 U9 ; R6 := U9
	181	[3329]	SELF     	R6 R6 K44 ; R7 := R6; R6 := R6[0x7442ac7d]
	182	[3329]	GETGLOBAL	R8 K6 ; R8 := _T
	183	[3329]	GETTABLE 	R8 R8 K43 ; R8 := R8["SecretMiniGameActive"]
	184	[3329]	EQ       	1 R8 K13 ; if R8 == true then PC := 187
	185	[3329]	JMP      	187 ; PC := 187
	186	[3329]	OP_LOADBOOL	R8 0 1 ; R8 := false; PC := 187
	187	[3329]	OP_LOADBOOL	R8 1 0 ; R8 := true
	188	[3329]	CALL     	R6 3 1 ; R6(R7,R8)
	189	[3330]	GETUPVAL 	R6 U9 ; R6 := U9
	190	[3330]	SELF     	R6 R6 K45 ; R7 := R6; R6 := R6[0x50a1c9ed]
	191	[3330]	GETGLOBAL	R8 K6 ; R8 := _T
	192	[3330]	GETTABLE 	R8 R8 K46 ; R8 := R8["SecretMiniGameAllowsPause"]
	193	[3330]	EQ       	1 R8 K13 ; if R8 == true then PC := 196
	194	[3330]	JMP      	196 ; PC := 196
	195	[3330]	OP_LOADBOOL	R8 0 1 ; R8 := false; PC := 196
	196	[3330]	OP_LOADBOOL	R8 1 0 ; R8 := true
	197	[3330]	CALL     	R6 3 1 ; R6(R7,R8)
	198	[3333]	GETUPVAL 	R6 U0 ; R6 := U0
	199	[3333]	GETTABLE 	R6 R6 K30 ; R6 := R6["UIMode"]
	200	[3333]	GETUPVAL 	R7 U6 ; R7 := U6
	201	[3333]	GETTABLE 	R7 R7 K47 ; R7 := R7["UI_MODE_IN_SPACE_HUB"]
	202	[3333]	EQ       	1 R6 R7 ; if R6 == R7 then PC := 307
	203	[3333]	JMP      	307 ; PC := 307
	204	[3335]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	205	[3335]	GETUPVAL 	R7 U12 ; R7 := U12
	206	[3335]	CALL     	R6 2 2 ; R6 := R6(R7)
	207	[3335]	TEST     	R6 1 ; if R6 then PC := 309
	208	[3335]	JMP      	309 ; PC := 309
	209	[3335]	GETUPVAL 	R6 U12 ; R6 := U12
	210	[3335]	SELF     	R6 R6 K48 ; R7 := R6; R6 := R6[0xa5e492d4]
	211	[3335]	CALL     	R6 2 2 ; R6 := R6(R7)
	212	[3335]	TEST     	R6 0 ; if not R6 then PC := 309
	213	[3335]	JMP      	309 ; PC := 309
	214	[3336]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	215	[3336]	GETUPVAL 	R7 U11 ; R7 := U11
	216	[3336]	GETTABLE 	R7 R7 K49 ; R7 := R7["ActivePowerSuit"]
	217	[3336]	CALL     	R6 2 2 ; R6 := R6(R7)
	218	[3336]	TEST     	R6 0 ; if not R6 then PC := 228
	219	[3336]	JMP      	228 ; PC := 228
	220	[3337]	GETUPVAL 	R6 U11 ; R6 := U11
	221	[3337]	GETUPVAL 	R7 U13 ; R7 := U13
	222	[3337]	GETTABLE 	R7 R7 K50 ; R7 := R7["InventoryController"]
	223	[3337]	SELF     	R7 R7 K51 ; R8 := R7; R7 := R7[0xf7d48ee0]
	224	[3337]	CALL     	R7 2 2 ; R7 := R7(R8)
	225	[3337]	SETTABLE 	R6 K49 R7 ; R6["ActivePowerSuit"] := R7
	226	[3338]	GETUPVAL 	R6 U14 ; R6 := U14
	227	[3338]	SETTABLE 	R6 K52 K40 ; R6["CustomAbilities"] := nil
	228	[3341]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	229	[3341]	GETUPVAL 	R7 U11 ; R7 := U11
	230	[3341]	GETTABLE 	R7 R7 K49 ; R7 := R7["ActivePowerSuit"]
	231	[3341]	CALL     	R6 2 2 ; R6 := R6(R7)
	232	[3341]	TEST     	R6 1 ; if R6 then PC := 239
	233	[3341]	JMP      	239 ; PC := 239
	234	[3341]	GETUPVAL 	R6 U11 ; R6 := U11
	235	[3341]	GETTABLE 	R6 R6 K49 ; R6 := R6["ActivePowerSuit"]
	236	[3341]	SELF     	R6 R6 K53 ; R7 := R6; R6 := R6[0x1c3517ec]
	237	[3341]	CALL     	R6 2 2 ; R6 := R6(R7)
	238	[3341]	JMP      	241 ; PC := 241
	239	[3341]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 240
	240	[3341]	OP_LOADBOOL	R6 1 0 ; R6 := true
	241	[3342]	TEST     	R6 0 ; if not R6 then PC := 251
	242	[3342]	JMP      	251 ; PC := 251
	243	[3343]	GETUPVAL 	R7 U11 ; R7 := U11
	244	[3343]	GETUPVAL 	R8 U13 ; R8 := U13
	245	[3343]	GETTABLE 	R8 R8 K50 ; R8 := R8["InventoryController"]
	246	[3343]	SELF     	R8 R8 K54 ; R9 := R8; R8 := R8[0x2303a280]
	247	[3343]	CALL     	R8 2 2 ; R8 := R8(R9)
	248	[3343]	SETTABLE 	R7 K49 R8 ; R7["ActivePowerSuit"] := R8
	249	[3344]	GETUPVAL 	R7 U14 ; R7 := U14
	250	[3344]	SETTABLE 	R7 K52 K40 ; R7["CustomAbilities"] := nil
	251	[3347]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	252	[3347]	GETUPVAL 	R8 U15 ; R8 := U15
	253	[3347]	CALL     	R7 2 2 ; R7 := R7(R8)
	254	[3347]	TEST     	R7 1 ; if R7 then PC := 261
	255	[3347]	JMP      	261 ; PC := 261
	256	[3347]	GETUPVAL 	R7 U11 ; R7 := U11
	257	[3347]	GETTABLE 	R7 R7 K49 ; R7 := R7["ActivePowerSuit"]
	258	[3347]	GETUPVAL 	R8 U15 ; R8 := U15
	259	[3347]	EQ       	1 R7 R8 ; if R7 == R8 then PC := 309
	260	[3347]	JMP      	309 ; PC := 309
	261	[3348]	GETUPVAL 	R7 U11 ; R7 := U11
	262	[3348]	GETTABLE 	R7 R7 K49 ; R7 := R7["ActivePowerSuit"]
	263	[3348]	SETUPVAL 	R7 U15 ; U15 := R7
	264	[3349]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	265	[3349]	GETUPVAL 	R8 U15 ; R8 := U15
	266	[3349]	CALL     	R7 2 2 ; R7 := R7(R8)
	267	[3349]	TEST     	R7 1 ; if R7 then PC := 309
	268	[3349]	JMP      	309 ; PC := 309
	269	[3350]	GETUPVAL 	R7 U16 ; R7 := U16
	270	[3350]	SETTABLE 	R7 K55 K28 ; R7["hasCheckedForStatusEffects"] := false
	271	[3351]	GETUPVAL 	R7 U0 ; R7 := U0
	272	[3351]	GETUPVAL 	R8 U15 ; R8 := U15
	273	[3351]	SELF     	R8 R8 K4 ; R9 := R8; R8 := R8[0xf2deaf69]
	274	[3351]	GETGLOBAL	R10 K57 ; R10 := 0x8e6056be
	275	[3351]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	276	[3351]	SETTABLE 	R7 K56 R8 ; R7["IsOperator"] := R8
	277	[3352]	GETUPVAL 	R7 U15 ; R7 := U15
	278	[3352]	SELF     	R7 R7 K58 ; R8 := R7; R7 := R7[0x68d708a7]
	279	[3352]	CALL     	R7 2 2 ; R7 := R7(R8)
	280	[3353]	SELF     	R8 R7 K59 ; R9 := R7; R8 := R7[0x8e62760a]
	281	[3353]	LOADK    	R10 := 0.000000
	282	[3353]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	283	[3354]	SELF     	R9 R8 K61 ; R10 := R8; R9 := R8[0x697019d0]
	284	[3354]	LOADK    	R11 := 6.000000
	285	[3354]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	286	[3354]	TEST     	R9 0 ; if not R9 then PC := 309
	287	[3354]	JMP      	309 ; PC := 309
	288	[3355]	GETGLOBAL	R9 K62 ; R9 := 0x60130201
	289	[3355]	SELF     	R10 R8 K63 ; R11 := R8; R10 := R8[0x5d10207d]
	290	[3355]	LOADK    	R12 := 6.000000
	291	[3355]	CALL     	R10 3 0 ; R10,... := R10(R11,R12)
	292	[3355]	CALL     	R9 0 2 ; R9 := R9(R10,...)
	293	[3356]	GETGLOBAL	R10 K0 ; R10 := 0x7b998233
	294	[3356]	MOVE     	R11 R9 ; R11 := R9
	295	[3356]	CALL     	R10 2 2 ; R10 := R10(R11)
	296	[3356]	TEST     	R10 1 ; if R10 then PC := 309
	297	[3356]	JMP      	309 ; PC := 309
	298	[3357]	SELF     	R10 R9 K64 ; R11 := R9; R10 := R9[0xa5d5c8f6]
	299	[3357]	CALL     	R10 2 2 ; R10 := R10(R11)
	300	[3358]	GETGLOBAL	R11 K1 ; R11 := 0xae91e43b
	301	[3358]	SELF     	R11 R11 K41 ; R12 := R11; R11 := R11[0x67bc869f]
	302	[3358]	LOADK    	R13 K65 ; R13 := "AbilityChargeProgress"
	303	[3358]	LOADK    	R14 := 9.000000
	304	[3358]	MOVE     	R15 R10 ; R15 := R10
	305	[3358]	CALL     	R11 5 1 ; R11(R12,R13,R14,R15)
	306	[3363]	JMP      	309 ; PC := 309
	307	[3366]	GETUPVAL 	R11 U17 ; R11 := U17
	308	[3366]	CALL     	R11 1 1 ; R11()
	309	[3370]	GETUPVAL 	R11 U18 ; R11 := U18
	310	[3370]	CALL     	R11 1 1 ; R11()
	311	[3373]	GETUPVAL 	R11 U12 ; R11 := U12
	312	[3376]	GETGLOBAL	R12 K0 ; R12 := 0x7b998233
	313	[3376]	GETGLOBAL	R13 K66 ; R13 := 0x25d99d89
	314	[3376]	CALL     	R12 2 2 ; R12 := R12(R13)
	315	[3376]	TEST     	R12 1 ; if R12 then PC := 474
	316	[3376]	JMP      	474 ; PC := 474
	317	[3377]	GETGLOBAL	R12 K66 ; R12 := 0x25d99d89
	318	[3377]	SELF     	R12 R12 K67 ; R13 := R12; R12 := R12[0x5963daba]
	319	[3377]	CALL     	R12 2 2 ; R12 := R12(R13)
	320	[3378]	LE       	1 K16 R12 ; if 2.000000 <= R12 then PC := 323
	321	[3378]	JMP      	323 ; PC := 323
	322	[3378]	OP_LOADBOOL	R13 0 1 ; R13 := false; PC := 323
	323	[3378]	OP_LOADBOOL	R13 1 0 ; R13 := true
	324	[3379]	SELF     	R14 R11 K4 ; R15 := R11; R14 := R11[0xf2deaf69]
	325	[3379]	GETGLOBAL	R16 K68 ; R16 := gLotusOperatorAvatarType
	326	[3379]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	327	[3379]	TEST     	R14 0 ; if not R14 then PC := 331
	328	[3379]	JMP      	331 ; PC := 331
	329	[3379]	SELF     	R14 R11 K69 ; R15 := R11; R14 := R11[0x9d09462e]
	330	[3379]	CALL     	R14 2 2 ; R14 := R14(R15)
	331	[3380]	GETUPVAL 	R15 U13 ; R15 := U13
	332	[3380]	GETTABLE 	R15 R15 K50 ; R15 := R15["InventoryController"]
	333	[3380]	SELF     	R15 R15 K70 ; R16 := R15; R15 := R15[0xa340c0e2]
	334	[3380]	CALL     	R15 2 2 ; R15 := R15(R16)
	335	[3382]	GETUPVAL 	R16 U0 ; R16 := U0
	336	[3382]	GETTABLE 	R16 R16 K56 ; R16 := R16["IsOperator"]
	337	[3382]	TEST     	R16 0 ; if not R16 then PC := 365
	338	[3382]	JMP      	365 ; PC := 365
	339	[3383]	GETGLOBAL	R16 K1 ; R16 := 0xae91e43b
	340	[3383]	SELF     	R16 R16 K71 ; R17 := R16; R16 := R16[0xaade900e]
	341	[3383]	LOADK    	R18 K72 ; R18 := "AbilityPanel.EnergyBar"
	342	[3383]	LOADK    	R19 := 11.000000
	343	[3383]	MOVE     	R20 R14 ; R20 := R14
	344	[3383]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	345	[3384]	GETGLOBAL	R16 K1 ; R16 := 0xae91e43b
	346	[3384]	SELF     	R16 R16 K71 ; R17 := R16; R16 := R16[0xaade900e]
	347	[3384]	LOADK    	R18 K73 ; R18 := "AbilityPanel.EnergyAmount"
	348	[3384]	LOADK    	R19 := 11.000000
	349	[3384]	MOVE     	R20 R14 ; R20 := R14
	350	[3384]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	351	[3385]	GETGLOBAL	R16 K1 ; R16 := 0xae91e43b
	352	[3385]	SELF     	R16 R16 K71 ; R17 := R16; R16 := R16[0xaade900e]
	353	[3385]	LOADK    	R18 K74 ; R18 := "AbilityPanel.Focus"
	354	[3385]	LOADK    	R19 := 11.000000
	355	[3385]	GETGLOBAL	R20 K0 ; R20 := 0x7b998233
	356	[3385]	MOVE     	R21 R15 ; R21 := R15
	357	[3385]	CALL     	R20 2 2 ; R20 := R20(R21)
	358	[3385]	TEST     	R20 0 ; if not R20 then PC := 363
	359	[3385]	JMP      	363 ; PC := 363
	360	[3385]	MOVE     	R20 R13 ; R20 := R13
	361	[3385]	JMP      	364 ; PC := 364
	362	[3385]	OP_LOADBOOL	R20 0 1 ; R20 := false; PC := 363
	363	[3385]	OP_LOADBOOL	R20 1 0 ; R20 := true
	364	[3385]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	365	[3388]	TEST     	R13 0 ; if not R13 then PC := 474
	366	[3388]	JMP      	474 ; PC := 474
	367	[3389]	GETUPVAL 	R16 U10 ; R16 := U10
	368	[3389]	SELF     	R16 R16 K75 ; R17 := R16; R16 := R16[0x5578d98b]
	369	[3389]	CALL     	R16 2 2 ; R16 := R16(R17)
	370	[3390]	GETGLOBAL	R17 K0 ; R17 := 0x7b998233
	371	[3390]	MOVE     	R18 R16 ; R18 := R16
	372	[3390]	CALL     	R17 2 2 ; R17 := R17(R18)
	373	[3390]	TEST     	R17 1 ; if R17 then PC := 430
	374	[3390]	JMP      	430 ; PC := 430
	375	[3391]	SELF     	R17 R16 K76 ; R18 := R16; R17 := R16[0xde321e6f]
	376	[3391]	CALL     	R17 2 2 ; R17 := R17(R18)
	377	[3392]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	378	[3392]	MOVE     	R19 R17 ; R19 := R17
	379	[3392]	CALL     	R18 2 2 ; R18 := R18(R19)
	380	[3392]	TEST     	R18 1 ; if R18 then PC := 430
	381	[3392]	JMP      	430 ; PC := 430
	382	[3393]	SELF     	R18 R17 K51 ; R19 := R17; R18 := R17[0xf7d48ee0]
	383	[3393]	CALL     	R18 2 2 ; R18 := R18(R19)
	384	[3394]	GETGLOBAL	R19 K0 ; R19 := 0x7b998233
	385	[3394]	MOVE     	R20 R18 ; R20 := R18
	386	[3394]	CALL     	R19 2 2 ; R19 := R19(R20)
	387	[3394]	TEST     	R19 1 ; if R19 then PC := 430
	388	[3394]	JMP      	430 ; PC := 430
	389	[3395]	SELF     	R19 R18 K77 ; R20 := R18; R19 := R18[0x58a4d5ac]
	390	[3395]	CALL     	R19 2 2 ; R19 := R19(R20)
	391	[3396]	SELF     	R20 R18 K78 ; R21 := R18; R20 := R18[0xded54c60]
	392	[3396]	CALL     	R20 2 2 ; R20 := R20(R21)
	393	[3397]	DIV      	R21 R19 R20 ; R21 := R19 / R20
	394	[3398]	GETGLOBAL	R22 K1 ; R22 := 0xae91e43b
	395	[3398]	SELF     	R22 R22 K79 ; R23 := R22; R22 := R22[0x91e13703]
	396	[3398]	LOADK    	R24 K80 ; R24 := "AbilityPanel.Focus.FocusFx"
	397	[3398]	LOADK    	R25 K81 ; R25 := "FocusFill"
	398	[3398]	MOVE     	R26 R21 ; R26 := R21
	399	[3398]	LOADK    	R27 := 0.000000
	400	[3398]	LOADK    	R28 := 0.000000
	401	[3398]	LOADK    	R29 := 0.000000
	402	[3398]	CALL     	R22 8 1 ; R22(R23,R24,R25,R26,R27,R28,R29)
	403	[3399]	GETGLOBAL	R22 K1 ; R22 := 0xae91e43b
	404	[3399]	SELF     	R22 R22 K71 ; R23 := R22; R22 := R22[0xaade900e]
	405	[3399]	LOADK    	R24 K82 ; R24 := "AbilityPanel.Focus.FocusIconActive"
	406	[3399]	LOADK    	R25 := 11.000000
	407	[3399]	LE       	1 K15 R21 ; if 1.000000 <= R21 then PC := 410
	408	[3399]	JMP      	410 ; PC := 410
	409	[3399]	OP_LOADBOOL	R26 0 1 ; R26 := false; PC := 410
	410	[3399]	OP_LOADBOOL	R26 1 0 ; R26 := true
	411	[3399]	CALL     	R22 5 1 ; R22(R23,R24,R25,R26)
	412	[3400]	GETGLOBAL	R22 K1 ; R22 := 0xae91e43b
	413	[3400]	SELF     	R22 R22 K71 ; R23 := R22; R22 := R22[0xaade900e]
	414	[3400]	LOADK    	R24 K83 ; R24 := "AbilityPanel.Focus.FocusGlow"
	415	[3400]	LOADK    	R25 := 11.000000
	416	[3400]	LE       	1 K15 R21 ; if 1.000000 <= R21 then PC := 419
	417	[3400]	JMP      	419 ; PC := 419
	418	[3400]	OP_LOADBOOL	R26 0 1 ; R26 := false; PC := 419
	419	[3400]	OP_LOADBOOL	R26 1 0 ; R26 := true
	420	[3400]	CALL     	R22 5 1 ; R22(R23,R24,R25,R26)
	421	[3401]	GETGLOBAL	R22 K1 ; R22 := 0xae91e43b
	422	[3401]	SELF     	R22 R22 K71 ; R23 := R22; R22 := R22[0xaade900e]
	423	[3401]	LOADK    	R24 K84 ; R24 := "AbilityPanel.Focus.FocusIconInactive"
	424	[3401]	LOADK    	R25 := 11.000000
	425	[3401]	LT       	1 R21 K15 ; if R21 < 1.000000 then PC := 428
	426	[3401]	JMP      	428 ; PC := 428
	427	[3401]	OP_LOADBOOL	R26 0 1 ; R26 := false; PC := 428
	428	[3401]	OP_LOADBOOL	R26 1 0 ; R26 := true
	429	[3401]	CALL     	R22 5 1 ; R22(R23,R24,R25,R26)
	430	[3406]	GETUPVAL 	R22 U0 ; R22 := U0
	431	[3406]	GETTABLE 	R22 R22 K56 ; R22 := R22["IsOperator"]
	432	[3406]	TEST     	R22 0 ; if not R22 then PC := 474
	433	[3406]	JMP      	474 ; PC := 474
	434	[3406]	GETGLOBAL	R22 K0 ; R22 := 0x7b998233
	435	[3406]	MOVE     	R23 R11 ; R23 := R11
	436	[3406]	CALL     	R22 2 2 ; R22 := R22(R23)
	437	[3406]	TEST     	R22 1 ; if R22 then PC := 474
	438	[3406]	JMP      	474 ; PC := 474
	439	[3406]	SELF     	R22 R11 K4 ; R23 := R11; R22 := R11[0xf2deaf69]
	440	[3406]	GETGLOBAL	R24 K68 ; R24 := gLotusOperatorAvatarType
	441	[3406]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	442	[3406]	TEST     	R22 0 ; if not R22 then PC := 474
	443	[3406]	JMP      	474 ; PC := 474
	444	[3407]	SELF     	R22 R11 K85 ; R23 := R11; R22 := R11[0x47363d30]
	445	[3407]	CALL     	R22 2 2 ; R22 := R22(R23)
	446	[3408]	SELF     	R23 R11 K86 ; R24 := R11; R23 := R11[0x5548f414]
	447	[3408]	CALL     	R23 2 2 ; R23 := R23(R24)
	448	[3409]	GETGLOBAL	R24 K87 ; R24 := 0x5bced4c4
	449	[3409]	GETTABLE 	R24 R24 K88 ; R24 := R24[0xac1b386a]
	450	[3409]	GETUPVAL 	R25 U19 ; R25 := U19
	451	[3409]	GETTABLE 	R25 R25 K89 ; R25 := R25[0x74a11ec6]
	452	[3409]	DIV      	R26 R22 R23 ; R26 := R22 / R23
	453	[3409]	MUL      	R26 R26 K90 ; R26 := R26 * 100.000000
	454	[3409]	LOADK    	R27 := 0.000000
	455	[3409]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	456	[3409]	ADD      	R25 R25 K15 ; R25 := R25 + 1.000000
	457	[3409]	LOADK    	R26 := 100.000000
	458	[3409]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	459	[3410]	GETGLOBAL	R25 K91 ; R25 := 0x38f10e85
	460	[3410]	GETGLOBAL	R26 K1 ; R26 := 0xae91e43b
	461	[3410]	LOADK    	R27 K92 ; R27 := "AbilityPanel.EnergyBar.gotoAndStop"
	462	[3410]	MOVE     	R28 R24 ; R28 := R24
	463	[3410]	CALL     	R25 4 1 ; R25(R26,R27,R28)
	464	[3412]	GETGLOBAL	R25 K1 ; R25 := 0xae91e43b
	465	[3412]	SELF     	R25 R25 K93 ; R26 := R25; R25 := R25[0x5f56eeab]
	466	[3412]	LOADK    	R27 K73 ; R27 := "AbilityPanel.EnergyAmount"
	467	[3412]	LOADK    	R28 := 29.000000
	468	[3412]	GETUPVAL 	R29 U19 ; R29 := U19
	469	[3412]	GETTABLE 	R29 R29 K89 ; R29 := R29[0x74a11ec6]
	470	[3412]	MOVE     	R30 R22 ; R30 := R22
	471	[3412]	LOADK    	R31 := 0.000000
	472	[3412]	CALL     	R29 3 0 ; R29,... := R29(R30,R31)
	473	[3412]	CALL     	R25 0 1 ; R25(R26,...)
	474	[3418]	GETUPVAL 	R25 U0 ; R25 := U0
	475	[3418]	GETTABLE 	R25 R25 K94 ; R25 := R25["IsSpectating"]
	476	[3418]	TEST     	R25 1 ; if R25 then PC := 485
	477	[3418]	JMP      	485 ; PC := 485
	478	[3419]	GETUPVAL 	R25 U9 ; R25 := U9
	479	[3419]	SELF     	R25 R25 K95 ; R26 := R25; R25 := R25[0xed924c7f]
	480	[3419]	MOVE     	R27 R11 ; R27 := R11
	481	[3419]	MOVE     	R28 R1 ; R28 := R1
	482	[3419]	GETGLOBAL	R29 K6 ; R29 := _T
	483	[3419]	GETTABLE 	R29 R29 K96 ; R29 := R29["velocityCoords"]
	484	[3419]	CALL     	R25 5 1 ; R25(R26,R27,R28,R29)
	485	[3423]	GETGLOBAL	R25 K97 ; R25 := 0x9ba7909f
	486	[3423]	SELF     	R25 R25 K98 ; R26 := R25; R25 := R25[0x5374b92e]
	487	[3423]	GETGLOBAL	R27 K99 ; R27 := 0xd991a286
	488	[3423]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	489	[3423]	TEST     	R25 1 ; if R25 then PC := 499
	490	[3423]	JMP      	499 ; PC := 499
	491	[3424]	GETGLOBAL	R25 K100 ; R25 := 0x3d106989
	492	[3424]	LOADK    	R26 K101 ; R26 := "HUD REDUX: Pushing background movie from Update"
	493	[3424]	CALL     	R25 2 1 ; R25(R26)
	494	[3425]	GETGLOBAL	R25 K97 ; R25 := 0x9ba7909f
	495	[3425]	SELF     	R25 R25 K102 ; R26 := R25; R25 := R25[0x6dd7aa66]
	496	[3425]	GETGLOBAL	R27 K99 ; R27 := 0xd991a286
	497	[3425]	CALL     	R25 3 1 ; R25(R26,R27)
	498	[3425]	JMP      	518 ; PC := 518
	499	[3426]	GETGLOBAL	R25 K0 ; R25 := 0x7b998233
	500	[3426]	GETGLOBAL	R26 K6 ; R26 := _T
	501	[3426]	GETTABLE 	R26 R26 K103 ; R26 := R26["BackgroundInitialized"]
	502	[3426]	CALL     	R25 2 2 ; R25 := R25(R26)
	503	[3426]	TEST     	R25 0 ; if not R25 then PC := 518
	504	[3426]	JMP      	518 ; PC := 518
	505	[3427]	GETGLOBAL	R25 K100 ; R25 := 0x3d106989
	506	[3427]	LOADK    	R26 K104 ; R26 := "HUD REDUX: Closing background and reinitializing due to the fact that the BackgroundInitialized is nil"
	507	[3427]	CALL     	R25 2 1 ; R25(R26)
	508	[3428]	GETGLOBAL	R25 K97 ; R25 := 0x9ba7909f
	509	[3428]	SELF     	R25 R25 K105 ; R26 := R25; R25 := R25[0xbcfb64ab]
	510	[3428]	GETGLOBAL	R27 K99 ; R27 := 0xd991a286
	511	[3428]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	512	[3429]	SELF     	R26 R25 K106 ; R27 := R25; R26 := R25[0x32302b4a]
	513	[3429]	CALL     	R26 2 1 ; R26(R27)
	514	[3430]	GETGLOBAL	R26 K97 ; R26 := 0x9ba7909f
	515	[3430]	SELF     	R26 R26 K102 ; R27 := R26; R26 := R26[0x6dd7aa66]
	516	[3430]	GETGLOBAL	R28 K99 ; R28 := 0xd991a286
	517	[3430]	CALL     	R26 3 1 ; R26(R27,R28)
	518	[3433]	GETGLOBAL	R26 K0 ; R26 := 0x7b998233
	519	[3433]	GETUPVAL 	R27 U0 ; R27 := U0
	520	[3433]	GETTABLE 	R27 R27 K107 ; R27 := R27["mHudMarkersMovie"]
	521	[3433]	CALL     	R26 2 2 ; R26 := R26(R27)
	522	[3433]	TEST     	R26 0 ; if not R26 then PC := 543
	523	[3433]	JMP      	543 ; PC := 543
	524	[3434]	GETUPVAL 	R26 U0 ; R26 := U0
	525	[3434]	GETGLOBAL	R27 K1 ; R27 := 0xae91e43b
	526	[3434]	SELF     	R27 R27 K108 ; R28 := R27; R27 := R27[0x1fd6abd0]
	527	[3434]	GETGLOBAL	R29 K109 ; R29 := 0x13d86d46
	528	[3434]	CALL     	R27 3 2 ; R27 := R27(R28,R29)
	529	[3434]	SETTABLE 	R26 K107 R27 ; R26["mHudMarkersMovie"] := R27
	530	[3435]	GETGLOBAL	R26 K0 ; R26 := 0x7b998233
	531	[3435]	GETUPVAL 	R27 U0 ; R27 := U0
	532	[3435]	GETTABLE 	R27 R27 K107 ; R27 := R27["mHudMarkersMovie"]
	533	[3435]	CALL     	R26 2 2 ; R26 := R26(R27)
	534	[3435]	TEST     	R26 1 ; if R26 then PC := 543
	535	[3435]	JMP      	543 ; PC := 543
	536	[3436]	GETUPVAL 	R26 U0 ; R26 := U0
	537	[3436]	GETTABLE 	R26 R26 K107 ; R26 := R26["mHudMarkersMovie"]
	538	[3436]	SELF     	R26 R26 K110 ; R27 := R26; R26 := R26[0x263a3cc2]
	539	[3436]	GETGLOBAL	R28 K1 ; R28 := 0xae91e43b
	540	[3436]	SELF     	R28 R28 K111 ; R29 := R28; R28 := R28[0xcd73323e]
	541	[3436]	CALL     	R28 2 0 ; R28,... := R28(R29)
	542	[3436]	CALL     	R26 0 1 ; R26(R27,...)
	543	[3440]	GETGLOBAL	R26 K0 ; R26 := 0x7b998233
	544	[3440]	GETUPVAL 	R27 U20 ; R27 := U20
	545	[3440]	CALL     	R26 2 2 ; R26 := R26(R27)
	546	[3440]	TEST     	R26 0 ; if not R26 then PC := 565
	547	[3440]	JMP      	565 ; PC := 565
	548	[3441]	GETUPVAL 	R26 U10 ; R26 := U10
	549	[3441]	SELF     	R26 R26 K112 ; R27 := R26; R26 := R26[0x0803eee1]
	550	[3441]	CALL     	R26 2 2 ; R26 := R26(R27)
	551	[3441]	SETUPVAL 	R26 U20 ; U20 := R26
	552	[3442]	GETGLOBAL	R26 K0 ; R26 := 0x7b998233
	553	[3442]	GETUPVAL 	R27 U20 ; R27 := U20
	554	[3442]	CALL     	R26 2 2 ; R26 := R26(R27)
	555	[3442]	TEST     	R26 0 ; if not R26 then PC := 558
	556	[3442]	JMP      	558 ; PC := 558
	557	[3443]	RETURN   	R0 1 ; return 
	558	[3446]	GETGLOBAL	R26 K113 ; R26 := 0xe72d2edb
	559	[3446]	EQ       	1 R26 K14 ; if R26 == 0.000000 then PC := 565
	560	[3446]	JMP      	565 ; PC := 565
	561	[3447]	GETUPVAL 	R26 U20 ; R26 := U20
	562	[3447]	SELF     	R26 R26 K114 ; R27 := R26; R26 := R26[0xeaef69de]
	563	[3447]	GETGLOBAL	R28 K113 ; R28 := 0xe72d2edb
	564	[3447]	CALL     	R26 3 1 ; R26(R27,R28)
	565	[3452]	GETUPVAL 	R26 U0 ; R26 := U0
	566	[3452]	GETTABLE 	R26 R26 K94 ; R26 := R26["IsSpectating"]
	567	[3452]	TEST     	R26 1 ; if R26 then PC := 575
	568	[3452]	JMP      	575 ; PC := 575
	569	[3452]	TEST     	R0 1 ; if R0 then PC := 575
	570	[3452]	JMP      	575 ; PC := 575
	571	[3453]	GETUPVAL 	R26 U21 ; R26 := U21
	572	[3453]	MOVE     	R27 R11 ; R27 := R11
	573	[3453]	MOVE     	R28 R1 ; R28 := R1
	574	[3453]	CALL     	R26 3 1 ; R26(R27,R28)
	575	[3457]	GETGLOBAL	R26 K6 ; R26 := _T
	576	[3457]	GETTABLE 	R26 R26 K115 ; R26 := R26["isStreamingLevel"]
	577	[3457]	TEST     	R26 1 ; if R26 then PC := 728
	578	[3457]	JMP      	728 ; PC := 728
	579	[3457]	GETUPVAL 	R26 U22 ; R26 := U22
	580	[3457]	GETTABLE 	R26 R26 K116 ; R26 := R26["Active"]
	581	[3457]	TEST     	R26 0 ; if not R26 then PC := 728
	582	[3457]	JMP      	728 ; PC := 728
	583	[3458]	GETUPVAL 	R26 U23 ; R26 := U23
	584	[3458]	GETTABLE 	R26 R26 K117 ; R26 := R26[0xf0090084]
	585	[3458]	CALL     	R26 1 2 ; R26 := R26()
	586	[3459]	EQ       	1 R26 K40 ; if R26 == nil then PC := 728
	587	[3459]	JMP      	728 ; PC := 728
	588	[3459]	GETUPVAL 	R27 U22 ; R27 := U22
	589	[3459]	GETTABLE 	R27 R27 K118 ; R27 := R27["IsNight"]
	590	[3459]	EQ       	1 R26 R27 ; if R26 == R27 then PC := 728
	591	[3459]	JMP      	728 ; PC := 728
	592	[3460]	GETUPVAL 	R27 U22 ; R27 := U22
	593	[3460]	GETTABLE 	R27 R27 K118 ; R27 := R27["IsNight"]
	594	[3460]	EQ       	1 R27 K40 ; if R27 == nil then PC := 597
	595	[3460]	JMP      	597 ; PC := 597
	596	[3460]	OP_LOADBOOL	R27 0 1 ; R27 := false; PC := 597
	597	[3460]	OP_LOADBOOL	R27 1 0 ; R27 := true
	598	[3461]	GETUPVAL 	R28 U22 ; R28 := U22
	599	[3461]	SETTABLE 	R28 K118 R26 ; R28["IsNight"] := R26
	600	[3463]	TEST     	R27 1 ; if R27 then PC := 672
	601	[3463]	JMP      	672 ; PC := 672
	602	[3463]	GETUPVAL 	R28 U22 ; R28 := U22
	603	[3463]	GETTABLE 	R28 R28 K119 ; R28 := R28["Landscape"]
	604	[3463]	TEST     	R28 0 ; if not R28 then PC := 672
	605	[3463]	JMP      	672 ; PC := 672
	606	[3464]	GETUPVAL 	R28 U22 ; R28 := U22
	607	[3464]	GETTABLE 	R28 R28 K118 ; R28 := R28["IsNight"]
	608	[3464]	TEST     	R28 0 ; if not R28 then PC := 621
	609	[3464]	JMP      	621 ; PC := 621
	610	[3466]	GETUPVAL 	R28 U22 ; R28 := U22
	611	[3466]	GETUPVAL 	R29 U22 ; R29 := U22
	612	[3466]	GETTABLE 	R29 R29 K120 ; R29 := R29["DayCount"]
	613	[3466]	ADD      	R29 R29 K15 ; R29 := R29 + 1.000000
	614	[3466]	SETTABLE 	R28 K120 R29 ; R28[0x00000001] := R29
	615	[3467]	GETUPVAL 	R28 U22 ; R28 := U22
	616	[3467]	GETUPVAL 	R29 U7 ; R29 := U7
	617	[3467]	SELF     	R29 R29 K122 ; R30 := R29; R29 := R29[0xae962fa0]
	618	[3467]	CALL     	R29 2 2 ; R29 := R29(R30)
	619	[3467]	SETTABLE 	R28 K121 R29 ; R28["GameTimeAtDusk"] := R29
	620	[3467]	JMP      	672 ; PC := 672
	621	[3470]	GETGLOBAL	R28 K0 ; R28 := 0x7b998233
	622	[3470]	GETUPVAL 	R29 U7 ; R29 := U7
	623	[3470]	CALL     	R28 2 2 ; R28 := R28(R29)
	624	[3470]	TEST     	R28 1 ; if R28 then PC := 636
	625	[3470]	JMP      	636 ; PC := 636
	626	[3470]	GETUPVAL 	R28 U7 ; R28 := U7
	627	[3470]	SELF     	R28 R28 K122 ; R29 := R28; R28 := R28[0xae962fa0]
	628	[3470]	CALL     	R28 2 2 ; R28 := R28(R29)
	629	[3470]	GETUPVAL 	R29 U22 ; R29 := U22
	630	[3470]	GETTABLE 	R29 R29 K121 ; R29 := R29["GameTimeAtDusk"]
	631	[3470]	SUB      	R28 R28 R29 ; R28 := R28 - R29
	632	[3470]	LT       	0 R28 K123 ; if R28 >= 2940.000000 then PC := 636
	633	[3470]	JMP      	636 ; PC := 636
	634	[3472]	GETUPVAL 	R28 U22 ; R28 := U22
	635	[3472]	SETTABLE 	R28 K120 K14 ; R28["DayCount"] := 0.000000
	636	[3474]	GETUPVAL 	R28 U22 ; R28 := U22
	637	[3474]	GETTABLE 	R28 R28 K120 ; R28 := R28["DayCount"]
	638	[3474]	LT       	0 K14 R28 ; if 0.000000 >= R28 then PC := 672
	639	[3474]	JMP      	672 ; PC := 672
	640	[3474]	GETUPVAL 	R28 U22 ; R28 := U22
	641	[3474]	GETTABLE 	R28 R28 K119 ; R28 := R28["Landscape"]
	642	[3474]	TEST     	R28 0 ; if not R28 then PC := 672
	643	[3474]	JMP      	672 ; PC := 672
	644	[3475]	GETGLOBAL	R28 K124 ; R28 := 0x89326c93
	645	[3475]	SELF     	R28 R28 K125 ; R29 := R28; R28 := R28[0xfb64e76c]
	646	[3475]	CALL     	R28 2 2 ; R28 := R28(R29)
	647	[3476]	GETUPVAL 	R29 U7 ; R29 := U7
	648	[3476]	SELF     	R29 R29 K126 ; R30 := R29; R29 := R29[0xef893aec]
	649	[3476]	CALL     	R29 2 2 ; R29 := R29(R30)
	650	[3477]	GETGLOBAL	R30 K0 ; R30 := 0x7b998233
	651	[3477]	MOVE     	R31 R28 ; R31 := R28
	652	[3477]	CALL     	R30 2 2 ; R30 := R30(R31)
	653	[3477]	TEST     	R30 1 ; if R30 then PC := 672
	654	[3477]	JMP      	672 ; PC := 672
	655	[3477]	GETGLOBAL	R30 K0 ; R30 := 0x7b998233
	656	[3477]	MOVE     	R31 R29 ; R31 := R29
	657	[3477]	CALL     	R30 2 2 ; R30 := R30(R31)
	658	[3477]	TEST     	R30 1 ; if R30 then PC := 672
	659	[3477]	JMP      	672 ; PC := 672
	660	[3477]	GETTABLE 	R30 R29 K127 ; R30 := R29["location"]
	661	[3477]	GETUPVAL 	R31 U6 ; R31 := U6
	662	[3477]	GETTABLE 	R31 R31 K128 ; R31 := R31["PLAINS_NODE_TAG"]
	663	[3477]	EQ       	0 R30 R31 ; if R30 ~= R31 then PC := 672
	664	[3477]	JMP      	672 ; PC := 672
	665	[3478]	GETGLOBAL	R30 K129 ; R30 := 0xba7dfcd2
	666	[3478]	SELF     	R30 R30 K130 ; R31 := R30; R30 := R30[0xf056b179]
	667	[3478]	MOVE     	R32 R28 ; R32 := R28
	668	[3478]	GETGLOBAL	R33 K131 ; R33 := 0x0469f296
	669	[3478]	LOADK    	R34 K132 ; R34 := "SURVIVED_EIDOLON_NIGHT"
	670	[3478]	CALL     	R33 2 0 ; R33,... := R33(R34)
	671	[3478]	CALL     	R30 0 1 ; R30(R31,...)
	672	[3484]	GETUPVAL 	R30 U22 ; R30 := U22
	673	[3484]	GETTABLE 	R30 R30 K133 ; R30 := R30["Visible"]
	674	[3484]	TEST     	R30 0 ; if not R30 then PC := 728
	675	[3484]	JMP      	728 ; PC := 728
	676	[3485]	TEST     	R27 0 ; if not R27 then PC := 691
	677	[3485]	JMP      	691 ; PC := 691
	678	[3486]	GETGLOBAL	R30 K1 ; R30 := 0xae91e43b
	679	[3486]	SELF     	R30 R30 K41 ; R31 := R30; R30 := R30[0x67bc869f]
	680	[3486]	LOADK    	R32 K134 ; R32 := "MiniMapContainer.Clock.Spinner"
	681	[3486]	LOADK    	R33 := 14.000000
	682	[3486]	GETUPVAL 	R34 U19 ; R34 := U19
	683	[3486]	GETTABLE 	R34 R34 K135 ; R34 := R34[0x06d055f9]
	684	[3486]	GETUPVAL 	R35 U22 ; R35 := U22
	685	[3486]	GETTABLE 	R35 R35 K118 ; R35 := R35["IsNight"]
	686	[3486]	LOADK    	R36 := 180.000000
	687	[3486]	LOADK    	R37 := 0.000000
	688	[3486]	CALL     	R34 4 0 ; R34,... := R34(R35,R36,R37)
	689	[3486]	CALL     	R30 0 1 ; R30(R31,...)
	690	[3486]	JMP      	709 ; PC := 709
	691	[3488]	GETGLOBAL	R30 K136 ; R30 := 0x25312c9b
	692	[3488]	GETGLOBAL	R31 K1 ; R31 := 0xae91e43b
	693	[3488]	LOADK    	R32 K134 ; R32 := "MiniMapContainer.Clock.Spinner"
	694	[3488]	LOADK    	R33 := 6.000000
	695	[3488]	NEWTABLE 	R34 1 0 ; R34 := {}
	696	[3488]	LOADK    	R35 := 14.000000
	697	[3488]	SETLIST  	R34 1 1 ; R34[(1-1)*FPF+i] := R(34+i), 1 <= i <= 1
	698	[3488]	NEWTABLE 	R35 0 0 ; R35 := {}
	699	[3488]	GETUPVAL 	R36 U19 ; R36 := U19
	700	[3488]	GETTABLE 	R36 R36 K135 ; R36 := R36[0x06d055f9]
	701	[3488]	GETUPVAL 	R37 U22 ; R37 := U22
	702	[3488]	GETTABLE 	R37 R37 K118 ; R37 := R37["IsNight"]
	703	[3488]	LOADK    	R38 := 180.000000
	704	[3488]	LOADK    	R39 := 0.000000
	705	[3488]	CALL     	R36 4 0 ; R36,... := R36(R37,R38,R39)
	706	[3488]	SETLIST  	R35 0 1 ; R35[(1-1)*FPF+i] := R(35+i), 1 <= i <= 0
	707	[3488]	LOADK    	R36 := 0.500000
	708	[3488]	CALL     	R30 7 1 ; R30(R31,R32,R33,R34,R35,R36)
	709	[3491]	GETGLOBAL	R30 K6 ; R30 := _T
	710	[3491]	GETTABLE 	R30 R30 K138 ; R30 := R30["ShowNotification"]
	711	[3491]	EQ       	1 R30 K40 ; if R30 == nil then PC := 728
	712	[3491]	JMP      	728 ; PC := 728
	713	[3491]	TEST     	R27 1 ; if R27 then PC := 728
	714	[3491]	JMP      	728 ; PC := 728
	715	[3492]	LOADK    	R30 K139 ; R30 := "/Lotus/Language/Menu/"
	716	[3492]	GETUPVAL 	R31 U19 ; R31 := U19
	717	[3492]	GETTABLE 	R31 R31 K135 ; R31 := R31[0x06d055f9]
	718	[3492]	GETUPVAL 	R32 U22 ; R32 := U22
	719	[3492]	GETTABLE 	R32 R32 K118 ; R32 := R32["IsNight"]
	720	[3492]	LOADK    	R33 K140 ; R33 := "HUD_Nightfall"
	721	[3492]	LOADK    	R34 K141 ; R34 := "HUD_Daybreak"
	722	[3492]	CALL     	R31 4 2 ; R31 := R31(R32,R33,R34)
	723	[3492]	CONCAT   	R30 R30 R31 ; R30 := R30 .. R31
	724	[3493]	GETGLOBAL	R31 K6 ; R31 := _T
	725	[3493]	GETTABLE 	R31 R31 K142 ; R31 := R31[0x7dce37bc]
	726	[3493]	MOVE     	R32 R30 ; R32 := R30
	727	[3493]	CALL     	R31 2 1 ; R31(R32)
	728	[3499]	GETUPVAL 	R31 U2 ; R31 := U2
	729	[3499]	SELF     	R31 R31 K143 ; R32 := R31; R31 := R31[0x46610c50]
	730	[3499]	GETGLOBAL	R33 K6 ; R33 := _T
	731	[3499]	GETTABLE 	R33 R33 K115 ; R33 := R33["isStreamingLevel"]
	732	[3499]	EQ       	0 R33 K13 ; if R33 ~= true then PC := 738
	733	[3499]	JMP      	738 ; PC := 738
	734	[3499]	GETUPVAL 	R33 U0 ; R33 := U0
	735	[3499]	GETTABLE 	R33 R33 K144 ; R33 := R33["IsAlternateHud"]
	736	[3499]	NOT      	R33 R33 ; R33 := not R33
	737	[3499]	JMP      	740 ; PC := 740
	738	[3499]	OP_LOADBOOL	R33 0 1 ; R33 := false; PC := 739
	739	[3499]	OP_LOADBOOL	R33 1 0 ; R33 := true
	740	[3499]	CALL     	R31 3 1 ; R31(R32,R33)
	741	[3501]	GETUPVAL 	R31 U0 ; R31 := U0
	742	[3501]	GETTABLE 	R31 R31 K30 ; R31 := R31["UIMode"]
	743	[3501]	GETUPVAL 	R32 U6 ; R32 := U6
	744	[3501]	GETTABLE 	R32 R32 K47 ; R32 := R32["UI_MODE_IN_SPACE_HUB"]
	745	[3501]	EQ       	1 R31 R32 ; if R31 == R32 then PC := 821
	746	[3501]	JMP      	821 ; PC := 821
	747	[3504]	GETGLOBAL	R31 K0 ; R31 := 0x7b998233
	748	[3504]	MOVE     	R32 R11 ; R32 := R11
	749	[3504]	CALL     	R31 2 2 ; R31 := R31(R32)
	750	[3504]	TEST     	R31 1 ; if R31 then PC := 755
	751	[3504]	JMP      	755 ; PC := 755
	752	[3505]	GETUPVAL 	R31 U24 ; R31 := U24
	753	[3505]	MOVE     	R32 R11 ; R32 := R11
	754	[3505]	CALL     	R31 2 1 ; R31(R32)
	755	[3509]	GETGLOBAL	R31 K0 ; R31 := 0x7b998233
	756	[3509]	MOVE     	R32 R11 ; R32 := R11
	757	[3509]	CALL     	R31 2 2 ; R31 := R31(R32)
	758	[3509]	TEST     	R31 1 ; if R31 then PC := 773
	759	[3509]	JMP      	773 ; PC := 773
	760	[3510]	GETGLOBAL	R31 K6 ; R31 := _T
	761	[3510]	GETTABLE 	R31 R31 K145 ; R31 := R31["PetNameNeedsUpdate"]
	762	[3510]	TEST     	R31 0 ; if not R31 then PC := 770
	763	[3510]	JMP      	770 ; PC := 770
	764	[3511]	GETGLOBAL	R31 K6 ; R31 := _T
	765	[3511]	SETTABLE 	R31 K145 K40 ; R31["PetNameNeedsUpdate"] := nil
	766	[3512]	GETUPVAL 	R31 U9 ; R31 := U9
	767	[3512]	SELF     	R31 R31 K146 ; R32 := R31; R31 := R31[0xe1fb4b07]
	768	[3512]	MOVE     	R33 R11 ; R33 := R11
	769	[3512]	CALL     	R31 3 1 ; R31(R32,R33)
	770	[3515]	GETUPVAL 	R31 U25 ; R31 := U25
	771	[3515]	MOVE     	R32 R1 ; R32 := R1
	772	[3515]	CALL     	R31 2 1 ; R31(R32)
	773	[3518]	GETGLOBAL	R31 K113 ; R31 := 0xe72d2edb
	774	[3518]	EQ       	1 R31 K14 ; if R31 == 0.000000 then PC := 778
	775	[3518]	JMP      	778 ; PC := 778
	776	[3519]	GETUPVAL 	R31 U26 ; R31 := U26
	777	[3519]	CALL     	R31 1 1 ; R31()
	778	[3523]	GETUPVAL 	R31 U27 ; R31 := U27
	779	[3523]	SELF     	R31 R31 K10 ; R32 := R31; R31 := R31[0xfaa69527]
	780	[3523]	CALL     	R31 2 1 ; R31(R32)
	781	[3526]	GETUPVAL 	R31 U28 ; R31 := U28
	782	[3526]	GETTABLE 	R31 R31 K147 ; R31 := R31["mCanControlPlayerPanel"]
	783	[3526]	TEST     	R31 0 ; if not R31 then PC := 815
	784	[3526]	JMP      	815 ; PC := 815
	785	[3526]	GETGLOBAL	R31 K6 ; R31 := _T
	786	[3526]	GETTABLE 	R31 R31 K148 ; R31 := R31["HidePlayerPanel"]
	787	[3526]	GETUPVAL 	R32 U28 ; R32 := U28
	788	[3526]	GETTABLE 	R32 R32 K148 ; R32 := R32["HidePlayerPanel"]
	789	[3526]	EQ       	1 R31 R32 ; if R31 == R32 then PC := 815
	790	[3526]	JMP      	815 ; PC := 815
	791	[3526]	GETGLOBAL	R31 K0 ; R31 := 0x7b998233
	792	[3526]	GETUPVAL 	R32 U29 ; R32 := U29
	793	[3526]	CALL     	R31 2 2 ; R31 := R31(R32)
	794	[3526]	TEST     	R31 1 ; if R31 then PC := 815
	795	[3526]	JMP      	815 ; PC := 815
	796	[3527]	GETUPVAL 	R31 U28 ; R31 := U28
	797	[3527]	GETGLOBAL	R32 K6 ; R32 := _T
	798	[3527]	GETTABLE 	R32 R32 K148 ; R32 := R32["HidePlayerPanel"]
	799	[3527]	SETTABLE 	R31 K148 R32 ; R31["HidePlayerPanel"] := R32
	800	[3528]	GETUPVAL 	R31 U28 ; R31 := U28
	801	[3528]	GETTABLE 	R31 R31 K148 ; R31 := R31["HidePlayerPanel"]
	802	[3528]	EQ       	1 R31 K40 ; if R31 == nil then PC := 808
	803	[3528]	JMP      	808 ; PC := 808
	804	[3528]	GETUPVAL 	R31 U28 ; R31 := U28
	805	[3528]	GETTABLE 	R31 R31 K148 ; R31 := R31["HidePlayerPanel"]
	806	[3528]	EQ       	0 R31 K14 ; if R31 ~= 0.000000 then PC := 812
	807	[3528]	JMP      	812 ; PC := 812
	808	[3529]	GETUPVAL 	R31 U29 ; R31 := U29
	809	[3529]	SELF     	R31 R31 K149 ; R32 := R31; R31 := R31[0x587aa683]
	810	[3529]	CALL     	R31 2 1 ; R31(R32)
	811	[3529]	JMP      	815 ; PC := 815
	812	[3531]	GETUPVAL 	R31 U29 ; R31 := U29
	813	[3531]	SELF     	R31 R31 K150 ; R32 := R31; R31 := R31[0xe0f7ce9e]
	814	[3531]	CALL     	R31 2 1 ; R31(R32)
	815	[3536]	GETUPVAL 	R31 U29 ; R31 := U29
	816	[3536]	SELF     	R31 R31 K10 ; R32 := R31; R31 := R31[0xfaa69527]
	817	[3536]	CALL     	R31 2 1 ; R31(R32)
	818	[3540]	GETUPVAL 	R31 U30 ; R31 := U30
	819	[3540]	MOVE     	R32 R1 ; R32 := R1
	820	[3540]	CALL     	R31 2 1 ; R31(R32)
	821	[3545]	TEST     	R0 1 ; if R0 then PC := 911
	822	[3545]	JMP      	911 ; PC := 911
	823	[3546]	GETUPVAL 	R31 U9 ; R31 := U9
	824	[3546]	SELF     	R31 R31 K151 ; R32 := R31; R31 := R31[0x2660b67b]
	825	[3546]	MOVE     	R33 R11 ; R33 := R11
	826	[3546]	MOVE     	R34 R1 ; R34 := R1
	827	[3546]	GETGLOBAL	R35 K6 ; R35 := _T
	828	[3546]	GETTABLE 	R35 R35 K152 ; R35 := R35["keyBindsSaved"]
	829	[3546]	EQ       	1 R35 K13 ; if R35 == true then PC := 832
	830	[3546]	JMP      	832 ; PC := 832
	831	[3546]	OP_LOADBOOL	R35 0 1 ; R35 := false; PC := 832
	832	[3546]	OP_LOADBOOL	R35 1 0 ; R35 := true
	833	[3546]	CALL     	R31 5 1 ; R31(R32,R33,R34,R35)
	834	[3547]	GETUPVAL 	R31 U0 ; R31 := U0
	835	[3547]	GETTABLE 	R31 R31 K36 ; R31 := R31["mPlayingWithController"]
	836	[3547]	TEST     	R31 0 ; if not R31 then PC := 844
	837	[3547]	JMP      	844 ; PC := 844
	838	[3547]	GETGLOBAL	R31 K6 ; R31 := _T
	839	[3547]	GETTABLE 	R31 R31 K152 ; R31 := R31["keyBindsSaved"]
	840	[3547]	TEST     	R31 0 ; if not R31 then PC := 844
	841	[3547]	JMP      	844 ; PC := 844
	842	[3548]	GETGLOBAL	R31 K6 ; R31 := _T
	843	[3548]	SETTABLE 	R31 K152 K40 ; R31["keyBindsSaved"] := nil
	844	[3551]	GETGLOBAL	R31 K153 ; R31 := 0xcfc01047
	845	[3551]	GETUPVAL 	R32 U31 ; R32 := U31
	846	[3551]	CALL     	R31 2 4 ; R31,R32,R33 := R31(R32)
	847	[3551]	JMP      	909 ; PC := 909
	848	[3552]	GETGLOBAL	R36 K0 ; R36 := 0x7b998233
	849	[3552]	MOVE     	R37 R35 ; R37 := R35
	850	[3552]	CALL     	R36 2 2 ; R36 := R36(R37)
	851	[3552]	TEST     	R36 0 ; if not R36 then PC := 856
	852	[3552]	JMP      	856 ; PC := 856
	853	[3553]	GETUPVAL 	R36 U31 ; R36 := U31
	854	[3553]	SETTABLE 	R36 R34 K40 ; R36[R34] := nil
	855	[3553]	JMP      	909 ; PC := 909
	856	[3556]	LOADK    	R36 K154 ; R36 := "AbilityPanel.Ability"
	857	[3557]	GETGLOBAL	R37 K113 ; R37 := 0xe72d2edb
	858	[3557]	EQ       	0 R37 K17 ; if R37 ~= 3.000000 then PC := 861
	859	[3557]	JMP      	861 ; PC := 861
	860	[3559]	LOADK    	R36 K155 ; R36 := "StancePanel.StanceComponent.Stance"
	861	[3561]	GETGLOBAL	R37 K1 ; R37 := 0xae91e43b
	862	[3561]	SELF     	R37 R37 K156 ; R38 := R37; R37 := R37[0x91a24e4b]
	863	[3561]	MOVE     	R39 R36 ; R39 := R36
	864	[3561]	MOVE     	R40 R34 ; R40 := R34
	865	[3561]	CONCAT   	R39 R39 R40 ; R39 := R39 .. R40
	866	[3561]	LOADK    	R40 := 0.000000
	867	[3561]	CALL     	R37 4 2 ; R37 := R37(R38,R39,R40)
	868	[3562]	GETGLOBAL	R38 K87 ; R38 := 0x5bced4c4
	869	[3562]	GETTABLE 	R38 R38 K157 ; R38 := R38[0xd4c1d800]
	870	[3562]	GETUPVAL 	R39 U19 ; R39 := U19
	871	[3562]	GETTABLE 	R39 R39 K158 ; R39 := R39[0x15ba5fe6]
	872	[3562]	LOADK    	R40 := 4.000000
	873	[3562]	CALL     	R39 2 0 ; R39,... := R39(R40)
	874	[3562]	CALL     	R38 0 2 ; R38 := R38(R39,...)
	875	[3562]	MUL      	R38 R37 R38 ; R38 := R37 * R38
	876	[3563]	GETUPVAL 	R39 U19 ; R39 := U19
	877	[3563]	GETTABLE 	R39 R39 K159 ; R39 := R39[0x49f30025]
	878	[3563]	GETGLOBAL	R40 K1 ; R40 := 0xae91e43b
	879	[3563]	CALL     	R39 2 3 ; R39,R40 := R39(R40)
	880	[3564]	DIV      	R41 R39 K23 ; R41 := R39 / 9.000000
	881	[3564]	DIV      	R37 R37 R41 ; R37 := R37 / R41
	882	[3565]	GETUPVAL 	R41 U19 ; R41 := U19
	883	[3565]	GETTABLE 	R41 R41 K160 ; R41 := R41[0xb5be5d4a]
	884	[3565]	GETGLOBAL	R42 K1 ; R42 := 0xae91e43b
	885	[3565]	MOVE     	R43 R36 ; R43 := R36
	886	[3565]	MOVE     	R44 R34 ; R44 := R34
	887	[3565]	LOADK    	R45 K161 ; R45 := ".Icon"
	888	[3565]	CONCAT   	R43 R43 R45 ; R43 := R43 .. R44 .. R45
	889	[3565]	OP_LOADBOOL	R44 1 0 ; R44 := true
	890	[3565]	CALL     	R41 4 3 ; R41,R42 := R41(R42,R43,R44)
	891	[3566]	GETGLOBAL	R43 K124 ; R43 := 0x89326c93
	892	[3566]	SELF     	R43 R43 K162 ; R44 := R43; R43 := R43[0xb4364067]
	893	[3566]	CALL     	R43 2 2 ; R43 := R43(R44)
	894	[3567]	GETUPVAL 	R44 U19 ; R44 := U19
	895	[3567]	GETTABLE 	R44 R44 K163 ; R44 := R44[0x3e145a1a]
	896	[3567]	GETGLOBAL	R45 K1 ; R45 := 0xae91e43b
	897	[3567]	ADD      	R46 R41 R37 ; R46 := R41 + R37
	898	[3567]	ADD      	R47 R42 R38 ; R47 := R42 + R38
	899	[3567]	MOVE     	R48 R43 ; R48 := R43
	900	[3567]	CALL     	R44 5 3 ; R44,R45 := R44(R45,R46,R47,R48)
	901	[3568]	SELF     	R46 R35 K164 ; R47 := R35; R46 := R35[0xe28aa928]
	902	[3568]	GETGLOBAL	R48 K165 ; R48 := 0xa421af95
	903	[3568]	MOVE     	R49 R44 ; R49 := R44
	904	[3568]	MOVE     	R50 R45 ; R50 := R45
	905	[3568]	LOADK    	R51 := 1.000000
	906	[3568]	CALL     	R48 4 2 ; R48 := R48(R49,R50,R51)
	907	[3568]	GETGLOBAL	R49 K166 ; R49 := ZERO_ROTATION
	908	[3568]	CALL     	R46 4 1 ; R46(R47,R48,R49)
	909	[3551]	TFORLOOP 	R31 2 ; R34,R35 := R31(R32,R33); if R34 ~= nil then begin PC = 848; R33 := R34 end
	910	[3569]	JMP      	848 ; PC := 848
	911	[3575]	GETUPVAL 	R46 U9 ; R46 := U9
	912	[3575]	SELF     	R46 R46 K167 ; R47 := R46; R46 := R46[0x2855a0e4]
	913	[3575]	MOVE     	R48 R11 ; R48 := R11
	914	[3575]	GETGLOBAL	R49 K6 ; R49 := _T
	915	[3575]	GETTABLE 	R49 R49 K168 ; R49 := R49["SubtitleVisible"]
	916	[3575]	EQ       	1 R49 K13 ; if R49 == true then PC := 919
	917	[3575]	JMP      	919 ; PC := 919
	918	[3575]	OP_LOADBOOL	R49 0 1 ; R49 := false; PC := 919
	919	[3575]	OP_LOADBOOL	R49 1 0 ; R49 := true
	920	[3575]	MOVE     	R50 R1 ; R50 := R1
	921	[3575]	CALL     	R46 5 1 ; R46(R47,R48,R49,R50)
	922	[3579]	GETUPVAL 	R46 U32 ; R46 := U32
	923	[3579]	MOVE     	R47 R1 ; R47 := R1
	924	[3579]	CALL     	R46 2 1 ; R46(R47)
	925	[3583]	GETUPVAL 	R46 U33 ; R46 := U33
	926	[3583]	MOVE     	R47 R11 ; R47 := R11
	927	[3583]	MOVE     	R48 R1 ; R48 := R1
	928	[3583]	CALL     	R46 3 1 ; R46(R47,R48)
	929	[3587]	GETUPVAL 	R46 U9 ; R46 := U9
	930	[3587]	SELF     	R46 R46 K169 ; R47 := R46; R46 := R46[0x840ecf2e]
	931	[3587]	MOVE     	R48 R11 ; R48 := R11
	932	[3587]	GETGLOBAL	R49 K6 ; R49 := _T
	933	[3587]	GETTABLE 	R49 R49 K170 ; R49 := R49["DisableMiniMap"]
	934	[3587]	EQ       	1 R49 K13 ; if R49 == true then PC := 937
	935	[3587]	JMP      	937 ; PC := 937
	936	[3587]	OP_LOADBOOL	R49 0 1 ; R49 := false; PC := 937
	937	[3587]	OP_LOADBOOL	R49 1 0 ; R49 := true
	938	[3587]	GETGLOBAL	R50 K6 ; R50 := _T
	939	[3587]	GETTABLE 	R50 R50 K170 ; R50 := R50["DisableMiniMap"]
	940	[3587]	EQ       	0 R50 K13 ; if R50 ~= true then PC := 943
	941	[3587]	JMP      	943 ; PC := 943
	942	[3587]	OP_LOADBOOL	R50 0 1 ; R50 := false; PC := 943
	943	[3587]	OP_LOADBOOL	R50 1 0 ; R50 := true
	944	[3587]	GETGLOBAL	R51 K6 ; R51 := _T
	945	[3587]	GETTABLE 	R51 R51 K171 ; R51 := R51["OverlayMapVisible"]
	946	[3587]	EQ       	1 R51 K13 ; if R51 == true then PC := 949
	947	[3587]	JMP      	949 ; PC := 949
	948	[3587]	OP_LOADBOOL	R51 0 1 ; R51 := false; PC := 949
	949	[3587]	OP_LOADBOOL	R51 1 0 ; R51 := true
	950	[3587]	CALL     	R46 6 1 ; R46(R47,R48,R49,R50,R51)
	951	[3590]	GETUPVAL 	R46 U9 ; R46 := U9
	952	[3590]	SELF     	R46 R46 K172 ; R47 := R46; R46 := R46[0xb8366c40]
	953	[3590]	CALL     	R46 2 2 ; R46 := R46(R47)
	954	[3590]	TEST     	R46 0 ; if not R46 then PC := 959
	955	[3590]	JMP      	959 ; PC := 959
	956	[3592]	GETUPVAL 	R46 U34 ; R46 := U34
	957	[3592]	GETTABLE 	R46 R46 K173 ; R46 := R46[0x6f72d56e]
	958	[3592]	CALL     	R46 1 1 ; R46()
	959	[3597]	GETUPVAL 	R46 U35 ; R46 := U35
	960	[3597]	GETTABLE 	R46 R46 K174 ; R46 := R46["PhotoBooth"]
	961	[3597]	TEST     	R46 1 ; if R46 then PC := 975
	962	[3597]	JMP      	975 ; PC := 975
	963	[3597]	GETGLOBAL	R46 K0 ; R46 := 0x7b998233
	964	[3597]	MOVE     	R47 R11 ; R47 := R11
	965	[3597]	CALL     	R46 2 2 ; R46 := R46(R47)
	966	[3597]	TEST     	R46 1 ; if R46 then PC := 975
	967	[3597]	JMP      	975 ; PC := 975
	968	[3598]	GETUPVAL 	R46 U9 ; R46 := U9
	969	[3598]	SELF     	R46 R46 K175 ; R47 := R46; R46 := R46[0x0b8ec6da]
	970	[3598]	MOVE     	R48 R11 ; R48 := R11
	971	[3598]	GETUPVAL 	R49 U36 ; R49 := U36
	972	[3598]	GETGLOBAL	R50 K6 ; R50 := _T
	973	[3598]	GETTABLE 	R50 R50 K176 ; R50 := R50["StalkerPlayerAvatar"]
	974	[3598]	CALL     	R46 5 1 ; R46(R47,R48,R49,R50)
	975	[3603]	GETUPVAL 	R46 U37 ; R46 := U37
	976	[3603]	CALL     	R46 1 1 ; R46()
	977	[3610]	GETUPVAL 	R46 U38 ; R46 := U38
	978	[3610]	MOVE     	R47 R11 ; R47 := R11
	979	[3610]	MOVE     	R48 R1 ; R48 := R1
	980	[3610]	CALL     	R46 3 1 ; R46(R47,R48)
	981	[3614]	GETUPVAL 	R46 U34 ; R46 := U34
	982	[3614]	GETTABLE 	R46 R46 K177 ; R46 := R46[0x477ee521]
	983	[3614]	MOVE     	R47 R1 ; R47 := R1
	984	[3614]	CALL     	R46 2 1 ; R46(R47)
	985	[3618]	GETGLOBAL	R46 K0 ; R46 := 0x7b998233
	986	[3618]	GETUPVAL 	R47 U20 ; R47 := U20
	987	[3618]	CALL     	R46 2 2 ; R46 := R46(R47)
	988	[3618]	TEST     	R46 1 ; if R46 then PC := 1013
	989	[3618]	JMP      	1013 ; PC := 1013
	990	[3618]	GETUPVAL 	R46 U27 ; R46 := U27
	991	[3618]	GETTABLE 	R46 R46 K178 ; R46 := R46["isEnabled"]
	992	[3618]	GETTABLE 	R46 R46 K179 ; R46 := R46["mValue"]
	993	[3618]	TEST     	R46 1 ; if R46 then PC := 1013
	994	[3618]	JMP      	1013 ; PC := 1013
	995	[3619]	GETUPVAL 	R46 U20 ; R46 := U20
	996	[3619]	SELF     	R46 R46 K180 ; R47 := R46; R46 := R46[0xf017005a]
	997	[3619]	CALL     	R46 2 2 ; R46 := R46(R47)
	998	[3620]	GETUPVAL 	R47 U39 ; R47 := U39
	999	[3620]	GETTABLE 	R47 R47 K179 ; R47 := R47["mValue"]
	1000	[3620]	EQ       	1 R47 R46 ; if R47 == R46 then PC := 1013
	1001	[3620]	JMP      	1013 ; PC := 1013
	1002	[3621]	GETUPVAL 	R47 U20 ; R47 := U20
	1003	[3621]	SELF     	R47 R47 K181 ; R48 := R47; R47 := R47[0x85f8fedb]
	1004	[3621]	CALL     	R47 2 2 ; R47 := R47(R48)
	1005	[3621]	TEST     	R47 0 ; if not R47 then PC := 1009
	1006	[3621]	JMP      	1009 ; PC := 1009
	1007	[3622]	GETGLOBAL	R47 K6 ; R47 := _T
	1008	[3622]	SETTABLE 	R47 K182 K13 ; R47["GenericMessageNoAnimateTyping"] := true
	1009	[3624]	GETUPVAL 	R47 U39 ; R47 := U39
	1010	[3624]	SELF     	R47 R47 K183 ; R48 := R47; R47 := R47[0xc63157a6]
	1011	[3624]	MOVE     	R49 R46 ; R49 := R46
	1012	[3624]	CALL     	R47 3 1 ; R47(R48,R49)
	1013	[3629]	GETGLOBAL	R47 K113 ; R47 := 0xe72d2edb
	1014	[3629]	EQ       	0 R47 K15 ; if R47 ~= 1.000000 then PC := 1074
	1015	[3629]	JMP      	1074 ; PC := 1074
	1016	[3631]	GETGLOBAL	R47 K0 ; R47 := 0x7b998233
	1017	[3631]	GETUPVAL 	R48 U12 ; R48 := U12
	1018	[3631]	CALL     	R47 2 2 ; R47 := R47(R48)
	1019	[3631]	TEST     	R47 1 ; if R47 then PC := 1074
	1020	[3631]	JMP      	1074 ; PC := 1074
	1021	[3631]	GETGLOBAL	R47 K0 ; R47 := 0x7b998233
	1022	[3631]	GETUPVAL 	R48 U20 ; R48 := U20
	1023	[3631]	CALL     	R47 2 2 ; R47 := R47(R48)
	1024	[3631]	TEST     	R47 1 ; if R47 then PC := 1074
	1025	[3631]	JMP      	1074 ; PC := 1074
	1026	[3632]	GETUPVAL 	R47 U20 ; R47 := U20
	1027	[3632]	SELF     	R47 R47 K184 ; R48 := R47; R47 := R47[0x9239435d]
	1028	[3632]	CALL     	R47 2 2 ; R47 := R47(R48)
	1029	[3633]	GETUPVAL 	R48 U14 ; R48 := U14
	1030	[3633]	GETGLOBAL	R49 K186 ; R49 := 0x42dcc9f5
	1031	[3633]	GETUPVAL 	R50 U14 ; R50 := U14
	1032	[3633]	GETTABLE 	R50 R50 K185 ; R50 := R50["HeartRateFactor"]
	1033	[3633]	MUL      	R51 R1 K187 ; R51 := R1 * 1.400000
	1034	[3633]	MUL      	R51 R47 R51 ; R51 := R47 * R51
	1035	[3633]	ADD      	R50 R50 R51 ; R50 := R50 + R51
	1036	[3633]	DIV      	R51 R1 K17 ; R51 := R1 / 3.000000
	1037	[3633]	SUB      	R50 R50 R51 ; R50 := R50 - R51
	1038	[3633]	LOADK    	R51 := 1.000000
	1039	[3633]	LOADK    	R52 := 4.000000
	1040	[3633]	CALL     	R49 4 2 ; R49 := R49(R50,R51,R52)
	1041	[3633]	SETTABLE 	R48 K185 R49 ; R48["HeartRateFactor"] := R49
	1042	[3634]	GETGLOBAL	R48 K87 ; R48 := 0x5bced4c4
	1043	[3634]	GETTABLE 	R48 R48 K88 ; R48 := R48[0xac1b386a]
	1044	[3634]	GETUPVAL 	R49 U14 ; R49 := U14
	1045	[3634]	GETTABLE 	R49 R49 K188 ; R49 := R49["HeartRateCurrFrame"]
	1046	[3634]	GETUPVAL 	R50 U14 ; R50 := U14
	1047	[3634]	GETTABLE 	R50 R50 K185 ; R50 := R50["HeartRateFactor"]
	1048	[3634]	DIV      	R50 R50 K19 ; R50 := R50 / 5.000000
	1049	[3634]	ADD      	R49 R49 R50 ; R49 := R49 + R50
	1050	[3634]	GETUPVAL 	R50 U14 ; R50 := U14
	1051	[3634]	GETTABLE 	R50 R50 K189 ; R50 := R50["HeartRateMaxFrame"]
	1052	[3634]	CALL     	R48 3 2 ; R48 := R48(R49,R50)
	1053	[3635]	GETGLOBAL	R49 K91 ; R49 := 0x38f10e85
	1054	[3635]	GETGLOBAL	R50 K1 ; R50 := 0xae91e43b
	1055	[3635]	LOADK    	R51 K190 ; R51 := "HealthAndShield.HeartRateBacker.gotoAndStop"
	1056	[3635]	GETGLOBAL	R52 K87 ; R52 := 0x5bced4c4
	1057	[3635]	GETTABLE 	R52 R52 K191 ; R52 := R52[0x99675e23]
	1058	[3635]	MOVE     	R53 R48 ; R53 := R48
	1059	[3635]	CALL     	R52 2 0 ; R52,... := R52(R53)
	1060	[3635]	CALL     	R49 0 1 ; R49(R50,...)
	1061	[3636]	GETGLOBAL	R49 K87 ; R49 := 0x5bced4c4
	1062	[3636]	GETTABLE 	R49 R49 K191 ; R49 := R49[0x99675e23]
	1063	[3636]	MOVE     	R50 R48 ; R50 := R48
	1064	[3636]	CALL     	R49 2 2 ; R49 := R49(R50)
	1065	[3636]	GETUPVAL 	R50 U14 ; R50 := U14
	1066	[3636]	GETTABLE 	R50 R50 K189 ; R50 := R50["HeartRateMaxFrame"]
	1067	[3636]	EQ       	0 R49 R50 ; if R49 ~= R50 then PC := 1072
	1068	[3636]	JMP      	1072 ; PC := 1072
	1069	[3637]	GETUPVAL 	R49 U14 ; R49 := U14
	1070	[3637]	SETTABLE 	R49 K188 K15 ; R49["HeartRateCurrFrame"] := 1.000000
	1071	[3637]	JMP      	1074 ; PC := 1074
	1072	[3639]	GETUPVAL 	R49 U14 ; R49 := U14
	1073	[3639]	SETTABLE 	R49 K188 R48 ; R49["HeartRateCurrFrame"] := R48
	1074	[3644]	GETGLOBAL	R49 K37 ; R49 := 0x34291f5c
	1075	[3644]	GETTABLE 	R49 R49 K192 ; R49 := R49[0x781669d7]
	1076	[3644]	CALL     	R49 1 2 ; R49 := R49()
	1077	[3644]	TEST     	R49 0 ; if not R49 then PC := 1092
	1078	[3644]	JMP      	1092 ; PC := 1092
	1079	[3645]	LOADK    	R49 := 1.000000
	1080	[3645]	LOADK    	R50 := 4.000000
	1081	[3645]	LOADK    	R51 := 1.000000
	1082	[3645]	FORPREP  	R49 1091 ; R49 -= R51; PC := 1091
	1083	[3646]	GETGLOBAL	R53 K1 ; R53 := 0xae91e43b
	1084	[3646]	SELF     	R53 R53 K71 ; R54 := R53; R53 := R53[0xaade900e]
	1085	[3646]	LOADK    	R55 K154 ; R55 := "AbilityPanel.Ability"
	1086	[3646]	MOVE     	R56 R52 ; R56 := R52
	1087	[3646]	CONCAT   	R55 R55 R56 ; R55 := R55 .. R56
	1088	[3646]	LOADK    	R56 := 11.000000
	1089	[3646]	OP_LOADBOOL	R57 0 0 ; R57 := false
	1090	[3646]	CALL     	R53 5 1 ; R53(R54,R55,R56,R57)
	1091	[3645]	FORLOOP  	R49 1083 ; R49 += R51; if R49 <= R50 then begin PC := 1083; R52 := R49 end
	1092	[3650]	RETURN   	R0 1 ; return 

function #111 <?:3653,3688> (22 instructions, 88 bytes at 00000211256E5C20)
0 params, 4 slots, 6 upvalues, 0 locals, 6 constants, 2 functions
	1	[3655]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[3655]	SETTABLE 	R0 K1 K2 ; R0["SpectatorHudOpen"] := false
	3	[3657]	NEWTABLE 	R0 0 0 ; R0 := {}
	4	[3657]	SETUPVAL 	R0 U0 ; U0 := R0
	5	[3658]	GETUPVAL 	R0 U0 ; R0 := U0
	6	[3665]	CLOSURE  	R1 0 ; R1 := closure(Function #1)
	7	[3665]	GETUPVAL 	R0 U0 ; R0 := U0
	8	[3665]	GETUPVAL 	R0 U1 ; R0 := U1
	9	[3665]	GETUPVAL 	R0 U2 ; R0 := U2
	10	[3665]	GETUPVAL 	R0 U3 ; R0 := U3
	11	[3665]	SETTABLE 	R0 K3 R1 ; R0["Update"] := R1
	12	[3666]	GETUPVAL 	R0 U0 ; R0 := U0
	13	[3666]	GETUPVAL 	R1 U4 ; R1 := U4
	14	[3666]	GETTABLE 	R1 R1 K5 ; R1 := R1[0x4c3dfdb3]
	15	[3666]	OP_LOADBOOL	R2 0 0 ; R2 := false
	16	[3687]	CLOSURE  	R3 1 ; R3 := closure(Function #2)
	17	[3687]	GETUPVAL 	R0 U2 ; R0 := U2
	18	[3687]	GETUPVAL 	R0 U3 ; R0 := U3
	19	[3687]	GETUPVAL 	R0 U5 ; R0 := U5
	20	[3666]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	21	[3687]	SETTABLE 	R0 K4 R1 ; R0["isEnabled"] := R1
	22	[3688]	RETURN   	R0 1 ; return 

function #112 <?:3691,3731> (111 instructions, 444 bytes at 0000021127C04180)
0 params, 9 slots, 7 upvalues, 0 locals, 41 constants, 2 functions
	1	[3692]	NEWTABLE 	R0 0 0 ; R0 := {}
	2	[3692]	SETUPVAL 	R0 U0 ; U0 := R0
	3	[3693]	GETUPVAL 	R0 U0 ; R0 := U0
	4	[3693]	CLOSURE  	R1 0 ; R1 := closure(Function #1)
	5	[3693]	SETTABLE 	R0 K0 R1 ; R0["Update"] := R1
	6	[3696]	GETGLOBAL	R0 K1 ; R0 := 0xae91e43b
	7	[3696]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x67bc869f]
	8	[3696]	LOADK    	R2 K3 ; R2 := "MinimapContainer.DefenseTarget"
	9	[3696]	LOADK    	R3 := 10.000000
	10	[3696]	LOADK    	R4 := 0.000000
	11	[3696]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	12	[3698]	GETUPVAL 	R0 U1 ; R0 := U1
	13	[3698]	EQ       	0 R0 K4 ; if R0 ~= nil then PC := 42
	14	[3698]	JMP      	42 ; PC := 42
	15	[3700]	GETGLOBAL	R0 K5 ; R0 := 0x2d0fad09
	16	[3700]	LOADK    	R1 K6 ; R1 := "Lotus.Interface.Components.PlayerPanelRedux"
	17	[3700]	CALL     	R0 2 2 ; R0 := R0(R1)
	18	[3701]	GETTABLE 	R1 R0 K7 ; R1 := R0[0xae6791ba]
	19	[3701]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	20	[3701]	LOADK    	R3 K8 ; R3 := "HealthAndShield.Squad"
	21	[3701]	GETGLOBAL	R4 K9 ; R4 := 0xca561df9
	22	[3701]	GETUPVAL 	R5 U2 ; R5 := U2
	23	[3701]	GETTABLE 	R5 R5 K10 ; R5 := R5[0x06d055f9]
	24	[3701]	GETUPVAL 	R6 U3 ; R6 := U3
	25	[3701]	GETTABLE 	R6 R6 K11 ; R6 := R6["MissionType"]
	26	[3701]	EQ       	1 R6 K13 ; if R6 == 18.000000 then PC := 29
	27	[3701]	JMP      	29 ; PC := 29
	28	[3701]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 29
	29	[3701]	OP_LOADBOOL	R6 1 0 ; R6 := true
	30	[3701]	GETGLOBAL	R7 K14 ; R7 := 0x5694100c
	31	[3701]	LOADNIL  	R8 R8 ; R8 := nil
	32	[3701]	CALL     	R5 4 0 ; R5,... := R5(R6,R7,R8)
	33	[3701]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	34	[3701]	SETUPVAL 	R1 U1 ; U1 := R1
	35	[3702]	GETUPVAL 	R1 U1 ; R1 := U1
	36	[3702]	SETTABLE 	R1 K15 K16 ; R1["mHideVoipWhenInactive"] := true
	37	[3703]	GETUPVAL 	R1 U1 ; R1 := U1
	38	[3703]	SETTABLE 	R1 K17 K18 ; R1["mShowYourself"] := false
	39	[3704]	GETUPVAL 	R1 U1 ; R1 := U1
	40	[3704]	GETGLOBAL	R2 K20 ; R2 := 0xd8f49b1c
	41	[3704]	SETTABLE 	R1 K19 R2 ; R1["mVoipTextures"] := R2
	42	[3707]	GETUPVAL 	R1 U1 ; R1 := U1
	43	[3707]	GETGLOBAL	R2 K22 ; R2 := 0x8b491a77
	44	[3707]	SETTABLE 	R1 K21 R2 ; R1["mStatusIconList"] := R2
	45	[3708]	GETGLOBAL	R1 K23 ; R1 := 0xbe190284
	46	[3708]	SELF     	R1 R1 K24 ; R2 := R1; R1 := R1[0xef893aec]
	47	[3708]	CALL     	R1 2 2 ; R1 := R1(R2)
	48	[3709]	GETUPVAL 	R2 U1 ; R2 := U1
	49	[3709]	SELF     	R2 R2 K25 ; R3 := R2; R2 := R2[0x1589e6dc]
	50	[3709]	GETTABLE 	R4 R1 K26 ; R4 := R1["missionType"]
	51	[3709]	EQ       	1 R4 K27 ; if R4 == 31.000000 then PC := 54
	52	[3709]	JMP      	54 ; PC := 54
	53	[3709]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 54
	54	[3709]	OP_LOADBOOL	R4 1 0 ; R4 := true
	55	[3709]	CALL     	R2 3 1 ; R2(R3,R4)
	56	[3710]	GETTABLE 	R2 R1 K28 ; R2 := R1["periodicMissionTag"]
	57	[3710]	GETUPVAL 	R3 U5 ; R3 := U5
	58	[3710]	GETTABLE 	R3 R3 K29 ; R3 := R3["ELITE_ALERT_PERIODIC_MISSION_TAG"]
	59	[3710]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 67
	60	[3710]	JMP      	67 ; PC := 67
	61	[3710]	GETTABLE 	R2 R1 K28 ; R2 := R1["periodicMissionTag"]
	62	[3710]	GETUPVAL 	R3 U5 ; R3 := U5
	63	[3710]	GETTABLE 	R3 R3 K30 ; R3 := R3["ELITE_ALERT_PERIODIC_MISSION_TAG_ALT"]
	64	[3710]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 67
	65	[3710]	JMP      	67 ; PC := 67
	66	[3710]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 67
	67	[3710]	OP_LOADBOOL	R2 1 0 ; R2 := true
	68	[3710]	SETUPVAL 	R2 U4 ; U4 := R2
	69	[3713]	GETGLOBAL	R2 K31 ; R2 := 0x89326c93
	70	[3713]	SELF     	R2 R2 K32 ; R3 := R2; R2 := R2[0xded7d5cd]
	71	[3713]	CALL     	R2 2 2 ; R2 := R2(R3)
	72	[3714]	GETGLOBAL	R3 K33 ; R3 := 0x7b998233
	73	[3714]	MOVE     	R4 R2 ; R4 := R2
	74	[3714]	CALL     	R3 2 2 ; R3 := R3(R4)
	75	[3714]	TEST     	R3 1 ; if R3 then PC := 89
	76	[3714]	JMP      	89 ; PC := 89
	77	[3714]	GETGLOBAL	R3 K33 ; R3 := 0x7b998233
	78	[3714]	GETTABLE 	R4 R2 K34 ; R4 := R2[1.000000]
	79	[3714]	CALL     	R3 2 2 ; R3 := R3(R4)
	80	[3714]	TEST     	R3 1 ; if R3 then PC := 89
	81	[3714]	JMP      	89 ; PC := 89
	82	[3714]	GETGLOBAL	R3 K33 ; R3 := 0x7b998233
	83	[3714]	GETTABLE 	R4 R2 K34 ; R4 := R2[1.000000]
	84	[3714]	SELF     	R4 R4 K35 ; R5 := R4; R4 := R4[0xbb610e5b]
	85	[3714]	CALL     	R4 2 0 ; R4,... := R4(R5)
	86	[3714]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	87	[3714]	TEST     	R3 0 ; if not R3 then PC := 94
	88	[3714]	JMP      	94 ; PC := 94
	89	[3717]	GETUPVAL 	R3 U0 ; R3 := U0
	90	[3720]	CLOSURE  	R4 1 ; R4 := closure(Function #2)
	91	[3720]	GETUPVAL 	R0 U6 ; R0 := U6
	92	[3720]	SETTABLE 	R3 K0 R4 ; R3["Update"] := R4
	93	[3721]	RETURN   	R0 1 ; return 
	94	[3724]	GETGLOBAL	R3 K36 ; R3 := 0x76ea806b
	95	[3724]	SELF     	R3 R3 K37 ; R4 := R3; R3 := R3[0x3f3ae64c]
	96	[3724]	LOADK    	R5 := 0.000000
	97	[3724]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	98	[3725]	TEST     	R3 0 ; if not R3 then PC := 111
	99	[3725]	JMP      	111 ; PC := 111
	100	[3726]	SELF     	R4 R3 K38 ; R5 := R3; R4 := R3[0x40e9c32b]
	101	[3726]	CALL     	R4 2 2 ; R4 := R4(R5)
	102	[3727]	TEST     	R4 0 ; if not R4 then PC := 111
	103	[3727]	JMP      	111 ; PC := 111
	104	[3727]	SELF     	R5 R4 K39 ; R6 := R4; R5 := R4[0x2cba1ca6]
	105	[3727]	CALL     	R5 2 2 ; R5 := R5(R6)
	106	[3727]	TEST     	R5 0 ; if not R5 then PC := 111
	107	[3727]	JMP      	111 ; PC := 111
	108	[3728]	GETUPVAL 	R5 U1 ; R5 := U1
	109	[3728]	SELF     	R5 R5 K40 ; R6 := R5; R5 := R5[0x587aa683]
	110	[3728]	CALL     	R5 2 1 ; R5(R6)
	111	[3731]	RETURN   	R0 1 ; return 

function #113 <?:3733,3738> (33 instructions, 132 bytes at 0000021118F8A650)
0 params, 9 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[3734]	GETGLOBAL	R0 K0 ; R0 := 0x25312c9b
	2	[3734]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	3	[3734]	LOADK    	R2 K2 ; R2 := "MinimapContainer.DefenseTarget"
	4	[3734]	LOADK    	R3 := 8.000000
	5	[3734]	NEWTABLE 	R4 1 0 ; R4 := {}
	6	[3734]	LOADK    	R5 := 10.000000
	7	[3734]	SETLIST  	R4 1 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
	8	[3734]	NEWTABLE 	R5 1 0 ; R5 := {}
	9	[3734]	LOADK    	R6 := 100.000000
	10	[3734]	SETLIST  	R5 1 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
	11	[3734]	LOADK    	R6 := 0.500000
	12	[3734]	LOADK    	R7 := 0.000000
	13	[3734]	LOADNIL  	R8 R8 ; R8 := nil
	14	[3734]	CALL     	R0 9 1 ; R0(R1,R2,R3,R4,R5,R6,R7,R8)
	15	[3735]	GETGLOBAL	R0 K1 ; R0 := 0xae91e43b
	16	[3735]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0x67bc869f]
	17	[3735]	LOADK    	R2 K5 ; R2 := "MinimapContainer.DefenseTarget.Health"
	18	[3735]	LOADK    	R3 := 10.000000
	19	[3735]	LOADK    	R4 := 50.000000
	20	[3735]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	21	[3736]	GETGLOBAL	R0 K1 ; R0 := 0xae91e43b
	22	[3736]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0x67bc869f]
	23	[3736]	LOADK    	R2 K6 ; R2 := "MinimapContainer.DefenseTarget.Health.Mover"
	24	[3736]	LOADK    	R3 := 9.000000
	25	[3736]	LOADK    	R4 := 16711680.000000
	26	[3736]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	27	[3737]	GETGLOBAL	R0 K1 ; R0 := 0xae91e43b
	28	[3737]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0x67bc869f]
	29	[3737]	LOADK    	R2 K7 ; R2 := "MinimapContainer.DefenseTarget.Health.Background"
	30	[3737]	LOADK    	R3 := 9.000000
	31	[3737]	LOADK    	R4 := 0.000000
	32	[3737]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	33	[3738]	RETURN   	R0 1 ; return 

function #114 <?:3740,3742> (15 instructions, 60 bytes at 0000021132CD7940)
0 params, 9 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[3741]	GETGLOBAL	R0 K0 ; R0 := 0x25312c9b
	2	[3741]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	3	[3741]	LOADK    	R2 K2 ; R2 := "MinimapContainer.DefenseTarget"
	4	[3741]	LOADK    	R3 := 8.000000
	5	[3741]	NEWTABLE 	R4 1 0 ; R4 := {}
	6	[3741]	LOADK    	R5 := 10.000000
	7	[3741]	SETLIST  	R4 1 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
	8	[3741]	NEWTABLE 	R5 1 0 ; R5 := {}
	9	[3741]	LOADK    	R6 := 0.000000
	10	[3741]	SETLIST  	R5 1 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
	11	[3741]	LOADK    	R6 := 0.500000
	12	[3741]	LOADK    	R7 := 0.000000
	13	[3741]	LOADNIL  	R8 R8 ; R8 := nil
	14	[3741]	CALL     	R0 9 1 ; R0(R1,R2,R3,R4,R5,R6,R7,R8)
	15	[3742]	RETURN   	R0 1 ; return 

function #115 <?:3744,3746> (7 instructions, 28 bytes at 0000021132CD8BF0)
1 param, 6 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[3745]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	2	[3745]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x5f56eeab]
	3	[3745]	LOADK    	R3 K2 ; R3 := "MinimapContainer.DefenseTarget.Name"
	4	[3745]	LOADK    	R4 := 29.000000
	5	[3745]	MOVE     	R5 R0 ; R5 := R0
	6	[3745]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	7	[3746]	RETURN   	R0 1 ; return 

function #116 <?:3749,3763> (52 instructions, 208 bytes at 0000021132CD9270)
1 param, 8 slots, 2 upvalues, 0 locals, 19 constants, 4 functions
	1	[3750]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[3750]	MOVE     	R2 R0 ; R2 := R0
	3	[3750]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[3750]	MOVE     	R0 R1 ; R0 := R1
	5	[3751]	GETGLOBAL	R1 K1 ; R1 := 0x42dcc9f5
	6	[3751]	GETGLOBAL	R2 K2 ; R2 := 0x5bced4c4
	7	[3751]	GETTABLE 	R2 R2 K3 ; R2 := R2[0x55f27c30]
	8	[3751]	MUL      	R3 R0 K4 ; R3 := R0 * 100.000000
	9	[3751]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[3751]	LOADK    	R3 := 0.000000
	11	[3751]	LOADK    	R4 := 100.000000
	12	[3751]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	13	[3752]	GETGLOBAL	R2 K5 ; R2 := 0xae91e43b
	14	[3752]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0x5f56eeab]
	15	[3752]	LOADK    	R4 K7 ; R4 := "MinimapContainer.DefenseTarget.Value"
	16	[3752]	LOADK    	R5 := 29.000000
	17	[3752]	MOVE     	R6 R1 ; R6 := R1
	18	[3752]	LOADK    	R7 K8 ; R7 := "%"
	19	[3752]	CONCAT   	R6 R6 R7 ; R6 := R6 .. R7
	20	[3752]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	21	[3753]	GETUPVAL 	R2 U0 ; R2 := U0
	22	[3753]	EQ       	0 R2 K9 ; if R2 ~= nil then PC := 47
	23	[3753]	JMP      	47 ; PC := 47
	24	[3754]	GETUPVAL 	R2 U1 ; R2 := U1
	25	[3754]	GETTABLE 	R2 R2 K10 ; R2 := R2[0xae6791ba]
	26	[3754]	GETGLOBAL	R3 K5 ; R3 := 0xae91e43b
	27	[3754]	LOADNIL  	R4 R4 ; R4 := nil
	28	[3754]	LOADK    	R5 := 100.000000
	29	[3754]	LOADK    	R6 K11 ; R6 := "MinimapContainer.DefenseTarget.Target"
	30	[3754]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	31	[3754]	SETUPVAL 	R2 U0 ; U0 := R2
	32	[3755]	GETUPVAL 	R2 U0 ; R2 := U0
	33	[3755]	CLOSURE  	R3 0 ; R3 := closure(Function #1)
	34	[3755]	SETTABLE 	R2 K12 R3 ; R2["mOverrideGetHealth"] := R3
	35	[3756]	GETUPVAL 	R2 U0 ; R2 := U0
	36	[3756]	CLOSURE  	R3 1 ; R3 := closure(Function #2)
	37	[3756]	SETTABLE 	R2 K13 R3 ; R2["mOverrideGetMaxHealth"] := R3
	38	[3757]	GETUPVAL 	R2 U0 ; R2 := U0
	39	[3757]	CLOSURE  	R3 2 ; R3 := closure(Function #3)
	40	[3757]	SETTABLE 	R2 K14 R3 ; R2["mOverrideGetShield"] := R3
	41	[3758]	GETUPVAL 	R2 U0 ; R2 := U0
	42	[3758]	CLOSURE  	R3 3 ; R3 := closure(Function #4)
	43	[3758]	SETTABLE 	R2 K15 R3 ; R2["mOverrideGetMaxShield"] := R3
	44	[3759]	GETUPVAL 	R2 U0 ; R2 := U0
	45	[3759]	SELF     	R2 R2 K16 ; R3 := R2; R2 := R2[0x687ae094]
	46	[3759]	CALL     	R2 2 1 ; R2(R3)
	47	[3761]	GETUPVAL 	R2 U0 ; R2 := U0
	48	[3761]	SETTABLE 	R2 K17 R1 ; R2["mProgress"] := R1
	49	[3762]	GETUPVAL 	R2 U0 ; R2 := U0
	50	[3762]	SELF     	R2 R2 K18 ; R3 := R2; R2 := R2[0xfaa69527]
	51	[3762]	CALL     	R2 2 1 ; R2(R3)
	52	[3763]	RETURN   	R0 1 ; return 

function #117 <?:3765,3771> (30 instructions, 120 bytes at 0000021121353CF0)
0 params, 9 slots, 2 upvalues, 0 locals, 7 constants, 0 functions
	1	[3766]	GETGLOBAL	R0 K0 ; R0 := 0x25312c9b
	2	[3766]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	3	[3766]	LOADK    	R2 K2 ; R2 := "ImpactMessage"
	4	[3766]	LOADK    	R3 := 0.000000
	5	[3766]	NEWTABLE 	R4 3 0 ; R4 := {}
	6	[3766]	LOADK    	R5 := 10.000000
	7	[3766]	LOADK    	R6 := 5.000000
	8	[3766]	LOADK    	R7 := 6.000000
	9	[3766]	SETLIST  	R4 3 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 3
	10	[3766]	NEWTABLE 	R5 3 0 ; R5 := {}
	11	[3766]	LOADK    	R6 := 0.000000
	12	[3766]	GETUPVAL 	R7 U0 ; R7 := U0
	13	[3766]	GETTABLE 	R7 R7 K4 ; R7 := R7["mImpactMessageTransitionScale"]
	14	[3766]	GETUPVAL 	R8 U0 ; R8 := U0
	15	[3766]	GETTABLE 	R8 R8 K4 ; R8 := R8["mImpactMessageTransitionScale"]
	16	[3766]	SETLIST  	R5 3 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 3
	17	[3766]	LOADK    	R6 := 0.250000
	18	[3766]	CALL     	R0 7 1 ; R0(R1,R2,R3,R4,R5,R6)
	19	[3767]	GETGLOBAL	R0 K5 ; R0 := 0x7b998233
	20	[3767]	GETUPVAL 	R1 U1 ; R1 := U1
	21	[3767]	CALL     	R0 2 2 ; R0 := R0(R1)
	22	[3767]	TEST     	R0 1 ; if R0 then PC := 30
	23	[3767]	JMP      	30 ; PC := 30
	24	[3768]	GETGLOBAL	R0 K1 ; R0 := 0xae91e43b
	25	[3768]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0x9275da44]
	26	[3768]	GETUPVAL 	R2 U1 ; R2 := U1
	27	[3768]	CALL     	R0 3 1 ; R0(R1,R2)
	28	[3769]	LOADNIL  	R0 R0 ; R0 := nil
	29	[3769]	SETUPVAL 	R0 U1 ; U1 := R0
	30	[3771]	RETURN   	R0 1 ; return 

function #118 <?:3773,4021> (840 instructions, 3360 bytes at 00000211249949E0)
12 params, 52 slots, 11 upvalues, 0 locals, 120 constants, 1 function
	1	[3774]	GETGLOBAL	R12 K0 ; R12 := 0x7b998233
	2	[3774]	GETGLOBAL	R13 K1 ; R13 := 0xae91e43b
	3	[3774]	CALL     	R12 2 2 ; R12 := R12(R13)
	4	[3774]	TEST     	R12 1 ; if R12 then PC := 11
	5	[3774]	JMP      	11 ; PC := 11
	6	[3774]	GETGLOBAL	R12 K0 ; R12 := 0x7b998233
	7	[3774]	GETUPVAL 	R13 U0 ; R13 := U0
	8	[3774]	CALL     	R12 2 2 ; R12 := R12(R13)
	9	[3774]	TEST     	R12 0 ; if not R12 then PC := 12
	10	[3774]	JMP      	12 ; PC := 12
	11	[3775]	RETURN   	R0 1 ; return 
	12	[3778]	NEWTABLE 	R12 0 3 ; R12 := {}
	13	[3778]	SETTABLE 	R12 K2 R0 ; R12["Message"] := R0
	14	[3778]	TESTSET  	R13 R5 1 ; if R5 then PC := 17 else R13 := R5 
	15	[3778]	JMP      	17 ; PC := 17
	16	[3778]	NEWTABLE 	R13 0 0 ; R13 := {}
	17	[3778]	SETTABLE 	R12 K3 R13 ; R12["Params"] := R13
	18	[3778]	SETTABLE 	R12 K4 R10 ; R12["InputFilter"] := R10
	19	[3778]	SETUPVAL 	R12 U1 ; U1 := R12
	20	[3779]	GETGLOBAL	R12 K5 ; R12 := 0x0b96777e
	21	[3779]	MOVE     	R13 R0 ; R13 := R0
	22	[3779]	CALL     	R12 2 2 ; R12 := R12(R13)
	23	[3779]	EQ       	0 R12 K6 ; if R12 ~= "function" then PC := 28
	24	[3779]	JMP      	28 ; PC := 28
	25	[3780]	MOVE     	R12 R0 ; R12 := R0
	26	[3780]	CALL     	R12 1 2 ; R12 := R12()
	27	[3780]	MOVE     	R0 R12 ; R0 := R12
	28	[3782]	GETUPVAL 	R12 U2 ; R12 := U2
	29	[3782]	MOVE     	R13 R0 ; R13 := R0
	30	[3782]	CALL     	R12 2 2 ; R12 := R12(R13)
	31	[3782]	MOVE     	R0 R12 ; R0 := R12
	32	[3784]	GETUPVAL 	R12 U0 ; R12 := U0
	33	[3784]	SELF     	R12 R12 K7 ; R13 := R12; R12 := R12[0xf2deaf69]
	34	[3784]	GETGLOBAL	R14 K8 ; R14 := gLotusBasePvpGameRulesType
	35	[3784]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	36	[3786]	LE       	0 K9 R1 ; if 0.000000 > R1 then PC := 44
	37	[3786]	JMP      	44 ; PC := 44
	38	[3788]	GETGLOBAL	R13 K10 ; R13 := 0x5bced4c4
	39	[3788]	GETTABLE 	R13 R13 K11 ; R13 := R13[0xb62ecfe0]
	40	[3788]	MOVE     	R14 R1 ; R14 := R1
	41	[3788]	LOADK    	R15 := 0.500000
	42	[3788]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	43	[3788]	MOVE     	R1 R13 ; R1 := R13
	44	[3790]	GETGLOBAL	R13 K0 ; R13 := 0x7b998233
	45	[3790]	MOVE     	R14 R2 ; R14 := R2
	46	[3790]	CALL     	R13 2 2 ; R13 := R13(R14)
	47	[3790]	TEST     	R13 0 ; if not R13 then PC := 50
	48	[3790]	JMP      	50 ; PC := 50
	49	[3791]	OP_LOADBOOL	R2 1 0 ; R2 := true
	50	[3793]	GETGLOBAL	R13 K0 ; R13 := 0x7b998233
	51	[3793]	MOVE     	R14 R3 ; R14 := R3
	52	[3793]	CALL     	R13 2 2 ; R13 := R13(R14)
	53	[3793]	TEST     	R13 0 ; if not R13 then PC := 56
	54	[3793]	JMP      	56 ; PC := 56
	55	[3794]	GETGLOBAL	R3 K12 ; R3 := 0xd84b5282
	56	[3796]	GETGLOBAL	R13 K0 ; R13 := 0x7b998233
	57	[3796]	MOVE     	R14 R4 ; R14 := R4
	58	[3796]	CALL     	R13 2 2 ; R13 := R13(R14)
	59	[3796]	TEST     	R13 0 ; if not R13 then PC := 62
	60	[3796]	JMP      	62 ; PC := 62
	61	[3797]	OP_LOADBOOL	R4 1 0 ; R4 := true
	62	[3799]	GETGLOBAL	R13 K0 ; R13 := 0x7b998233
	63	[3799]	MOVE     	R14 R6 ; R14 := R6
	64	[3799]	CALL     	R13 2 2 ; R13 := R13(R14)
	65	[3799]	TEST     	R13 0 ; if not R13 then PC := 77
	66	[3799]	JMP      	77 ; PC := 77
	67	[3800]	GETUPVAL 	R13 U3 ; R13 := U3
	68	[3800]	GETTABLE 	R13 R13 K13 ; R13 := R13[0x06d055f9]
	69	[3800]	GETUPVAL 	R14 U0 ; R14 := U0
	70	[3800]	SELF     	R14 R14 K7 ; R15 := R14; R14 := R14[0xf2deaf69]
	71	[3800]	GETGLOBAL	R16 K8 ; R16 := gLotusBasePvpGameRulesType
	72	[3800]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	73	[3800]	LOADK    	R15 := 2.000000
	74	[3800]	LOADK    	R16 := 1.000000
	75	[3800]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	76	[3800]	MOVE     	R6 R13 ; R6 := R13
	77	[3802]	EQ       	0 R6 K14 ; if R6 ~= 4.000000 then PC := 93
	78	[3802]	JMP      	93 ; PC := 93
	79	[3802]	GETGLOBAL	R13 K0 ; R13 := 0x7b998233
	80	[3802]	MOVE     	R14 R11 ; R14 := R11
	81	[3802]	CALL     	R13 2 2 ; R13 := R13(R14)
	82	[3802]	TEST     	R13 1 ; if R13 then PC := 89
	83	[3802]	JMP      	89 ; PC := 89
	84	[3802]	GETGLOBAL	R13 K15 ; R13 := _T
	85	[3802]	GETTABLE 	R13 R13 K16 ; R13 := R13["ImpactMessageTexturePacks"]
	86	[3802]	GETTABLE 	R13 R13 R11 ; R13 := R13[R11]
	87	[3802]	EQ       	0 R13 K17 ; if R13 ~= nil then PC := 93
	88	[3802]	JMP      	93 ; PC := 93
	89	[3803]	GETGLOBAL	R13 K18 ; R13 := 0x3d106989
	90	[3803]	LOADK    	R14 K19 ; R14 := "No texture pack for impact message"
	91	[3803]	CALL     	R13 2 1 ; R13(R14)
	92	[3804]	RETURN   	R0 1 ; return 
	93	[3807]	LE       	0 K9 R1 ; if 0.000000 > R1 then PC := 99
	94	[3807]	JMP      	99 ; PC := 99
	95	[3808]	GETUPVAL 	R13 U3 ; R13 := U3
	96	[3808]	GETTABLE 	R13 R13 K20 ; R13 := R13[0x659d451f]
	97	[3808]	MOVE     	R14 R3 ; R14 := R3
	98	[3808]	CALL     	R13 2 1 ; R13(R14)
	99	[3811]	TEST     	R4 0 ; if not R4 then PC := 118
	100	[3811]	JMP      	118 ; PC := 118
	101	[3811]	GETGLOBAL	R13 K0 ; R13 := 0x7b998233
	102	[3811]	GETGLOBAL	R14 K21 ; R14 := 0xdb09d9fb
	103	[3811]	CALL     	R13 2 2 ; R13 := R13(R14)
	104	[3811]	TEST     	R13 1 ; if R13 then PC := 118
	105	[3811]	JMP      	118 ; PC := 118
	106	[3812]	GETUPVAL 	R13 U4 ; R13 := U4
	107	[3812]	GETTABLE 	R13 R13 K22 ; R13 := R13[0xb5be5d4a]
	108	[3812]	GETGLOBAL	R14 K1 ; R14 := 0xae91e43b
	109	[3812]	LOADK    	R15 K23 ; R15 := "ImpactMessage"
	110	[3812]	CALL     	R13 3 3 ; R13,R14 := R13(R14,R15)
	111	[3813]	GETUPVAL 	R15 U4 ; R15 := U4
	112	[3813]	GETTABLE 	R15 R15 K24 ; R15 := R15[0x5a22d251]
	113	[3813]	GETGLOBAL	R16 K1 ; R16 := 0xae91e43b
	114	[3813]	GETGLOBAL	R17 K21 ; R17 := 0xdb09d9fb
	115	[3813]	MOVE     	R18 R13 ; R18 := R13
	116	[3813]	MOVE     	R19 R14 ; R19 := R14
	117	[3813]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	118	[3816]	GETUPVAL 	R15 U5 ; R15 := U5
	119	[3816]	GETTABLE 	R15 R15 K25 ; R15 := R15["mImpactMessageFrame"]
	120	[3816]	EQ       	1 R15 R6 ; if R15 == R6 then PC := 288
	121	[3816]	JMP      	288 ; PC := 288
	122	[3817]	GETUPVAL 	R15 U5 ; R15 := U5
	123	[3817]	SETTABLE 	R15 K25 R6 ; R15["mImpactMessageFrame"] := R6
	124	[3818]	GETGLOBAL	R15 K26 ; R15 := 0x38f10e85
	125	[3818]	GETGLOBAL	R16 K1 ; R16 := 0xae91e43b
	126	[3818]	LOADK    	R17 K27 ; R17 := "ImpactMessage.gotoAndStop"
	127	[3818]	MOVE     	R18 R6 ; R18 := R6
	128	[3818]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	129	[3819]	EQ       	0 R6 K14 ; if R6 ~= 4.000000 then PC := 206
	130	[3819]	JMP      	206 ; PC := 206
	131	[3820]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	132	[3820]	SELF     	R15 R15 K28 ; R16 := R15; R15 := R15[0x5f56eeab]
	133	[3820]	LOADK    	R17 K29 ; R17 := "ImpactMessage.Label"
	134	[3820]	LOADK    	R18 := 38.000000
	135	[3820]	LOADK    	R19 K30 ; R19 := "bottom"
	136	[3820]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	137	[3821]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	138	[3821]	SELF     	R15 R15 K31 ; R16 := R15; R15 := R15[0x67bc869f]
	139	[3821]	LOADK    	R17 K32 ; R17 := "ImpactMessage.Underlay"
	140	[3821]	LOADK    	R18 := 9.000000
	141	[3821]	LOADK    	R19 K33 ; R19 := 1315613.000000
	142	[3821]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	143	[3822]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	144	[3822]	SELF     	R15 R15 K31 ; R16 := R15; R15 := R15[0x67bc869f]
	145	[3822]	LOADK    	R17 K29 ; R17 := "ImpactMessage.Label"
	146	[3822]	LOADK    	R18 := 9.000000
	147	[3822]	GETUPVAL 	R19 U6 ; R19 := U6
	148	[3822]	GETTABLE 	R19 R19 K34 ; R19 := R19["Text"]
	149	[3822]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	150	[3823]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	151	[3823]	SELF     	R15 R15 K31 ; R16 := R15; R15 := R15[0x67bc869f]
	152	[3823]	LOADK    	R17 K35 ; R17 := "ImpactMessage.BgLines"
	153	[3823]	LOADK    	R18 := 9.000000
	154	[3823]	GETUPVAL 	R19 U6 ; R19 := U6
	155	[3823]	GETTABLE 	R19 R19 K34 ; R19 := R19["Text"]
	156	[3823]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	157	[3824]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	158	[3824]	SELF     	R15 R15 K36 ; R16 := R15; R15 := R15[0xd5181643]
	159	[3824]	LOADK    	R17 K37 ; R17 := "ImpactMessage.IconTinted"
	160	[3824]	GETGLOBAL	R18 K38 ; R18 := 0x0032441c
	161	[3824]	GETTABLE 	R18 R18 K39 ; R18 := R18["UIMaterial_Plain"]
	162	[3824]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	163	[3825]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	164	[3825]	SELF     	R15 R15 K36 ; R16 := R15; R15 := R15[0xd5181643]
	165	[3825]	LOADK    	R17 K40 ; R17 := "ImpactMessage.IconWhite"
	166	[3825]	GETGLOBAL	R18 K38 ; R18 := 0x0032441c
	167	[3825]	GETTABLE 	R18 R18 K39 ; R18 := R18["UIMaterial_Plain"]
	168	[3825]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	169	[3826]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	170	[3826]	SELF     	R15 R15 K36 ; R16 := R15; R15 := R15[0xd5181643]
	171	[3826]	LOADK    	R17 K41 ; R17 := "ImpactMessage.IconBg"
	172	[3826]	GETGLOBAL	R18 K38 ; R18 := 0x0032441c
	173	[3826]	GETTABLE 	R18 R18 K39 ; R18 := R18["UIMaterial_Plain"]
	174	[3826]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	175	[3827]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	176	[3827]	SELF     	R15 R15 K36 ; R16 := R15; R15 := R15[0xd5181643]
	177	[3827]	LOADK    	R17 K35 ; R17 := "ImpactMessage.BgLines"
	178	[3827]	GETGLOBAL	R18 K38 ; R18 := 0x0032441c
	179	[3827]	GETTABLE 	R18 R18 K39 ; R18 := R18["UIMaterial_Plain"]
	180	[3827]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	181	[3828]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	182	[3828]	SELF     	R15 R15 K36 ; R16 := R15; R15 := R15[0xd5181643]
	183	[3828]	LOADK    	R17 K32 ; R17 := "ImpactMessage.Underlay"
	184	[3828]	GETGLOBAL	R18 K38 ; R18 := 0x0032441c
	185	[3828]	GETTABLE 	R18 R18 K39 ; R18 := R18["UIMaterial_Plain"]
	186	[3828]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	187	[3829]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	188	[3829]	SELF     	R15 R15 K36 ; R16 := R15; R15 := R15[0xd5181643]
	189	[3829]	LOADK    	R17 K42 ; R17 := "ImpactMessage.MessageFlare"
	190	[3829]	GETGLOBAL	R18 K38 ; R18 := 0x0032441c
	191	[3829]	GETTABLE 	R18 R18 K39 ; R18 := R18["UIMaterial_Plain"]
	192	[3829]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	193	[3830]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	194	[3830]	SELF     	R15 R15 K36 ; R16 := R15; R15 := R15[0xd5181643]
	195	[3830]	LOADK    	R17 K43 ; R17 := "ImpactMessage.Underlay.TopShadow"
	196	[3830]	GETGLOBAL	R18 K38 ; R18 := 0x0032441c
	197	[3830]	GETTABLE 	R18 R18 K39 ; R18 := R18["UIMaterial_Plain"]
	198	[3830]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	199	[3831]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	200	[3831]	SELF     	R15 R15 K36 ; R16 := R15; R15 := R15[0xd5181643]
	201	[3831]	LOADK    	R17 K44 ; R17 := "ImpactMessage.LineDeco"
	202	[3831]	GETGLOBAL	R18 K38 ; R18 := 0x0032441c
	203	[3831]	GETTABLE 	R18 R18 K39 ; R18 := R18["UIMaterial_Plain"]
	204	[3831]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	205	[3831]	JMP      	212 ; PC := 212
	206	[3833]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	207	[3833]	SELF     	R15 R15 K28 ; R16 := R15; R15 := R15[0x5f56eeab]
	208	[3833]	LOADK    	R17 K29 ; R17 := "ImpactMessage.Label"
	209	[3833]	LOADK    	R18 := 38.000000
	210	[3833]	LOADK    	R19 K45 ; R19 := "center"
	211	[3833]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	212	[3835]	GETUPVAL 	R15 U5 ; R15 := U5
	213	[3835]	GETTABLE 	R15 R15 K25 ; R15 := R15["mImpactMessageFrame"]
	214	[3835]	EQ       	0 R15 K46 ; if R15 ~= 3.000000 then PC := 234
	215	[3835]	JMP      	234 ; PC := 234
	216	[3835]	GETUPVAL 	R15 U5 ; R15 := U5
	217	[3835]	GETTABLE 	R15 R15 K47 ; R15 := R15["mImpactMessage3LabelY"]
	218	[3835]	EQ       	0 R15 K17 ; if R15 ~= nil then PC := 234
	219	[3835]	JMP      	234 ; PC := 234
	220	[3836]	GETUPVAL 	R15 U5 ; R15 := U5
	221	[3836]	GETGLOBAL	R16 K1 ; R16 := 0xae91e43b
	222	[3836]	SELF     	R16 R16 K48 ; R17 := R16; R16 := R16[0x91a24e4b]
	223	[3836]	LOADK    	R18 K29 ; R18 := "ImpactMessage.Label"
	224	[3836]	LOADK    	R19 := 1.000000
	225	[3836]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	226	[3836]	SETTABLE 	R15 K47 R16 ; R15["mImpactMessage3LabelY"] := R16
	227	[3837]	GETUPVAL 	R15 U5 ; R15 := U5
	228	[3837]	GETGLOBAL	R16 K1 ; R16 := 0xae91e43b
	229	[3837]	SELF     	R16 R16 K48 ; R17 := R16; R16 := R16[0x91a24e4b]
	230	[3837]	LOADK    	R18 K29 ; R18 := "ImpactMessage.Label"
	231	[3837]	LOADK    	R19 := 34.000000
	232	[3837]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	233	[3837]	SETTABLE 	R15 K49 R16 ; R15["mImpactMessage3LabelHeight"] := R16
	234	[3840]	GETGLOBAL	R15 K50 ; R15 := 0xe72d2edb
	235	[3840]	EQ       	0 R15 K46 ; if R15 ~= 3.000000 then PC := 275
	236	[3840]	JMP      	275 ; PC := 275
	237	[3841]	EQ       	0 R6 K52 ; if R6 ~= 1.000000 then PC := 258
	238	[3841]	JMP      	258 ; PC := 258
	239	[3842]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	240	[3842]	SELF     	R15 R15 K31 ; R16 := R15; R15 := R15[0x67bc869f]
	241	[3842]	LOADK    	R17 K53 ; R17 := "ImpactMessage.UnderGlow"
	242	[3842]	LOADK    	R18 := 9.000000
	243	[3842]	LOADK    	R19 K54 ; R19 := 1712680.000000
	244	[3842]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	245	[3843]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	246	[3843]	SELF     	R15 R15 K31 ; R16 := R15; R15 := R15[0x67bc869f]
	247	[3843]	LOADK    	R17 K55 ; R17 := "ImpactMessage.LineDivider"
	248	[3843]	LOADK    	R18 := 9.000000
	249	[3843]	LOADK    	R19 K56 ; R19 := 15785113.000000
	250	[3843]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	251	[3844]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	252	[3844]	SELF     	R15 R15 K31 ; R16 := R15; R15 := R15[0x67bc869f]
	253	[3844]	LOADK    	R17 K29 ; R17 := "ImpactMessage.Label"
	254	[3844]	LOADK    	R18 := 36.000000
	255	[3844]	LOADK    	R19 K56 ; R19 := 15785113.000000
	256	[3844]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	257	[3844]	JMP      	288 ; PC := 288
	258	[3845]	EQ       	0 R6 K46 ; if R6 ~= 3.000000 then PC := 288
	259	[3845]	JMP      	288 ; PC := 288
	260	[3846]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	261	[3846]	SELF     	R15 R15 K31 ; R16 := R15; R15 := R15[0x67bc869f]
	262	[3846]	LOADK    	R17 K29 ; R17 := "ImpactMessage.Label"
	263	[3846]	LOADK    	R18 := 36.000000
	264	[3846]	GETUPVAL 	R19 U6 ; R19 := U6
	265	[3846]	GETTABLE 	R19 R19 K34 ; R19 := R19["Text"]
	266	[3846]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	267	[3847]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	268	[3847]	SELF     	R15 R15 K31 ; R16 := R15; R15 := R15[0x67bc869f]
	269	[3847]	LOADK    	R17 K57 ; R17 := "ImpactMessage.Underline"
	270	[3847]	LOADK    	R18 := 9.000000
	271	[3847]	GETUPVAL 	R19 U6 ; R19 := U6
	272	[3847]	GETTABLE 	R19 R19 K34 ; R19 := R19["Text"]
	273	[3847]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	274	[3848]	JMP      	288 ; PC := 288
	275	[3849]	GETGLOBAL	R15 K50 ; R15 := 0xe72d2edb
	276	[3849]	EQ       	0 R15 K14 ; if R15 ~= 4.000000 then PC := 288
	277	[3849]	JMP      	288 ; PC := 288
	278	[3850]	EQ       	1 R6 K52 ; if R6 == 1.000000 then PC := 282
	279	[3850]	JMP      	282 ; PC := 282
	280	[3850]	EQ       	0 R6 K46 ; if R6 ~= 3.000000 then PC := 288
	281	[3850]	JMP      	288 ; PC := 288
	282	[3851]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	283	[3851]	SELF     	R15 R15 K31 ; R16 := R15; R15 := R15[0x67bc869f]
	284	[3851]	LOADK    	R17 K57 ; R17 := "ImpactMessage.Underline"
	285	[3851]	LOADK    	R18 := 9.000000
	286	[3851]	LOADK    	R19 K58 ; R19 := 11625827.000000
	287	[3851]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	288	[3856]	LE       	0 K9 R1 ; if 0.000000 > R1 then PC := 296
	289	[3856]	JMP      	296 ; PC := 296
	290	[3857]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	291	[3857]	SELF     	R15 R15 K31 ; R16 := R15; R15 := R15[0x67bc869f]
	292	[3857]	LOADK    	R17 K23 ; R17 := "ImpactMessage"
	293	[3857]	LOADK    	R18 := 10.000000
	294	[3857]	LOADK    	R19 := 0.000000
	295	[3857]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	296	[3860]	TEST     	R7 0 ; if not R7 then PC := 301
	297	[3860]	JMP      	301 ; PC := 301
	298	[3861]	GETUPVAL 	R15 U5 ; R15 := U5
	299	[3861]	SETTABLE 	R15 K59 R7 ; R15["mImpactMessageScale"] := R7
	300	[3861]	JMP      	302 ; PC := 302
	301	[3863]	LOADK    	R7 := 100.000000
	302	[3866]	TEST     	R8 0 ; if not R8 then PC := 307
	303	[3866]	JMP      	307 ; PC := 307
	304	[3867]	GETUPVAL 	R15 U5 ; R15 := U5
	305	[3867]	SETTABLE 	R15 K60 R8 ; R15["mImpactMessageTransitionScale"] := R8
	306	[3867]	JMP      	308 ; PC := 308
	307	[3869]	LOADK    	R8 := 100.000000
	308	[3872]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	309	[3872]	SELF     	R15 R15 K61 ; R16 := R15; R15 := R15[0xc7fa728c]
	310	[3872]	CALL     	R15 2 2 ; R15 := R15(R16)
	311	[3873]	GETGLOBAL	R16 K0 ; R16 := 0x7b998233
	312	[3873]	MOVE     	R17 R9 ; R17 := R9
	313	[3873]	CALL     	R16 2 2 ; R16 := R16(R17)
	314	[3873]	TEST     	R16 1 ; if R16 then PC := 323
	315	[3873]	JMP      	323 ; PC := 323
	316	[3873]	EQ       	1 R15 R9 ; if R15 == R9 then PC := 323
	317	[3873]	JMP      	323 ; PC := 323
	318	[3874]	SETUPVAL 	R15 U7 ; U7 := R15
	319	[3875]	GETGLOBAL	R16 K1 ; R16 := 0xae91e43b
	320	[3875]	SELF     	R16 R16 K62 ; R17 := R16; R16 := R16[0x9275da44]
	321	[3875]	MOVE     	R18 R9 ; R18 := R9
	322	[3875]	CALL     	R16 3 1 ; R16(R17,R18)
	323	[3878]	GETGLOBAL	R16 K1 ; R16 := 0xae91e43b
	324	[3878]	SELF     	R16 R16 K31 ; R17 := R16; R16 := R16[0x67bc869f]
	325	[3878]	LOADK    	R18 K23 ; R18 := "ImpactMessage"
	326	[3878]	LOADK    	R19 := 5.000000
	327	[3878]	MOVE     	R20 R8 ; R20 := R8
	328	[3878]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	329	[3879]	GETGLOBAL	R16 K1 ; R16 := 0xae91e43b
	330	[3879]	SELF     	R16 R16 K31 ; R17 := R16; R16 := R16[0x67bc869f]
	331	[3879]	LOADK    	R18 K23 ; R18 := "ImpactMessage"
	332	[3879]	LOADK    	R19 := 6.000000
	333	[3879]	MOVE     	R20 R8 ; R20 := R8
	334	[3879]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	335	[3881]	GETUPVAL 	R16 U5 ; R16 := U5
	336	[3881]	GETTABLE 	R16 R16 K25 ; R16 := R16["mImpactMessageFrame"]
	337	[3881]	EQ       	0 R16 K14 ; if R16 ~= 4.000000 then PC := 345
	338	[3881]	JMP      	345 ; PC := 345
	339	[3882]	GETGLOBAL	R16 K1 ; R16 := 0xae91e43b
	340	[3882]	SELF     	R16 R16 K31 ; R17 := R16; R16 := R16[0x67bc869f]
	341	[3882]	LOADK    	R18 K29 ; R18 := "ImpactMessage.Label"
	342	[3882]	LOADK    	R19 := 42.000000
	343	[3882]	LOADK    	R20 := 25.000000
	344	[3882]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	345	[3885]	LOADK    	R16 K63 ; R16 := ""
	346	[3886]	GETGLOBAL	R17 K0 ; R17 := 0x7b998233
	347	[3886]	MOVE     	R18 R10 ; R18 := R10
	348	[3886]	CALL     	R17 2 2 ; R17 := R17(R18)
	349	[3886]	TEST     	R17 1 ; if R17 then PC := 373
	350	[3886]	JMP      	373 ; PC := 373
	351	[3887]	GETGLOBAL	R17 K1 ; R17 := 0xae91e43b
	352	[3887]	SELF     	R17 R17 K64 ; R18 := R17; R17 := R17[0x54f5d6ad]
	353	[3887]	MOVE     	R19 R0 ; R19 := R0
	354	[3887]	MOVE     	R20 R10 ; R20 := R10
	355	[3887]	MOVE     	R21 R5 ; R21 := R5
	356	[3887]	CALL     	R17 5 2 ; R17 := R17(R18,R19,R20,R21)
	357	[3887]	MOVE     	R16 R17 ; R16 := R17
	358	[3888]	GETGLOBAL	R17 K65 ; R17 := 0x7f5022cf
	359	[3888]	GETTABLE 	R17 R17 K66 ; R17 := R17[0xa5c556b9]
	360	[3888]	MOVE     	R18 R16 ; R18 := R16
	361	[3888]	LOADK    	R19 K67 ; R19 := "<[%u%d_]+>"
	362	[3888]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	363	[3888]	TEST     	R17 0 ; if not R17 then PC := 380
	364	[3888]	JMP      	380 ; PC := 380
	365	[3889]	GETGLOBAL	R17 K1 ; R17 := 0xae91e43b
	366	[3889]	SELF     	R17 R17 K68 ; R18 := R17; R17 := R17[0x42b04007]
	367	[3889]	MOVE     	R19 R0 ; R19 := R0
	368	[3889]	OP_LOADBOOL	R20 1 0 ; R20 := true
	369	[3889]	MOVE     	R21 R5 ; R21 := R5
	370	[3889]	CALL     	R17 5 2 ; R17 := R17(R18,R19,R20,R21)
	371	[3889]	MOVE     	R16 R17 ; R16 := R17
	372	[3890]	JMP      	380 ; PC := 380
	373	[3892]	GETGLOBAL	R17 K1 ; R17 := 0xae91e43b
	374	[3892]	SELF     	R17 R17 K68 ; R18 := R17; R17 := R17[0x42b04007]
	375	[3892]	MOVE     	R19 R0 ; R19 := R0
	376	[3892]	OP_LOADBOOL	R20 1 0 ; R20 := true
	377	[3892]	MOVE     	R21 R5 ; R21 := R5
	378	[3892]	CALL     	R17 5 2 ; R17 := R17(R18,R19,R20,R21)
	379	[3892]	MOVE     	R16 R17 ; R16 := R17
	380	[3895]	GETGLOBAL	R17 K1 ; R17 := 0xae91e43b
	381	[3895]	SELF     	R17 R17 K28 ; R18 := R17; R17 := R17[0x5f56eeab]
	382	[3895]	LOADK    	R19 K29 ; R19 := "ImpactMessage.Label"
	383	[3895]	LOADK    	R20 := 29.000000
	384	[3895]	MOVE     	R21 R16 ; R21 := R16
	385	[3895]	CALL     	R17 5 1 ; R17(R18,R19,R20,R21)
	386	[3897]	GETUPVAL 	R17 U5 ; R17 := U5
	387	[3897]	GETTABLE 	R17 R17 K25 ; R17 := R17["mImpactMessageFrame"]
	388	[3897]	EQ       	0 R17 K46 ; if R17 ~= 3.000000 then PC := 422
	389	[3897]	JMP      	422 ; PC := 422
	390	[3898]	GETGLOBAL	R17 K1 ; R17 := 0xae91e43b
	391	[3898]	SELF     	R17 R17 K48 ; R18 := R17; R17 := R17[0x91a24e4b]
	392	[3898]	LOADK    	R19 K29 ; R19 := "ImpactMessage.Label"
	393	[3898]	LOADK    	R20 := 35.000000
	394	[3898]	CALL     	R17 4 2 ; R17 := R17(R18,R19,R20)
	395	[3899]	GETGLOBAL	R18 K1 ; R18 := 0xae91e43b
	396	[3899]	SELF     	R18 R18 K48 ; R19 := R18; R18 := R18[0x91a24e4b]
	397	[3899]	LOADK    	R20 K29 ; R20 := "ImpactMessage.Label"
	398	[3899]	LOADK    	R21 := 34.000000
	399	[3899]	CALL     	R18 4 2 ; R18 := R18(R19,R20,R21)
	400	[3900]	GETUPVAL 	R19 U5 ; R19 := U5
	401	[3900]	GETTABLE 	R19 R19 K47 ; R19 := R19["mImpactMessage3LabelY"]
	402	[3901]	LT       	0 K46 R17 ; if 3.000000 >= R17 then PC := 410
	403	[3901]	JMP      	410 ; PC := 410
	404	[3902]	ADD      	R20 R19 K69 ; R20 := R19 + 20.000000
	405	[3902]	GETUPVAL 	R21 U5 ; R21 := U5
	406	[3902]	GETTABLE 	R21 R21 K49 ; R21 := R21["mImpactMessage3LabelHeight"]
	407	[3902]	SUB      	R21 R18 R21 ; R21 := R18 - R21
	408	[3902]	SUB      	R19 R20 R21 ; R19 := R20 - R21
	409	[3902]	JMP      	415 ; PC := 415
	410	[3904]	GETUPVAL 	R20 U5 ; R20 := U5
	411	[3904]	GETTABLE 	R20 R20 K49 ; R20 := R20["mImpactMessage3LabelHeight"]
	412	[3904]	SUB      	R20 R18 R20 ; R20 := R18 - R20
	413	[3904]	MUL      	R20 R20 K70 ; R20 := R20 * 0.500000
	414	[3904]	SUB      	R19 R19 R20 ; R19 := R19 - R20
	415	[3906]	GETGLOBAL	R20 K1 ; R20 := 0xae91e43b
	416	[3906]	SELF     	R20 R20 K31 ; R21 := R20; R20 := R20[0x67bc869f]
	417	[3906]	LOADK    	R22 K29 ; R22 := "ImpactMessage.Label"
	418	[3906]	LOADK    	R23 := 1.000000
	419	[3906]	MOVE     	R24 R19 ; R24 := R19
	420	[3906]	CALL     	R20 5 1 ; R20(R21,R22,R23,R24)
	421	[3906]	JMP      	749 ; PC := 749
	422	[3907]	GETUPVAL 	R20 U5 ; R20 := U5
	423	[3907]	GETTABLE 	R20 R20 K25 ; R20 := R20["mImpactMessageFrame"]
	424	[3907]	EQ       	0 R20 K14 ; if R20 ~= 4.000000 then PC := 749
	425	[3907]	JMP      	749 ; PC := 749
	426	[3908]	GETGLOBAL	R20 K15 ; R20 := _T
	427	[3908]	GETTABLE 	R20 R20 K16 ; R20 := R20["ImpactMessageTexturePacks"]
	428	[3908]	GETTABLE 	R20 R20 R11 ; R20 := R20[R11]
	429	[3909]	NEWTABLE 	R21 6 0 ; R21 := {}
	430	[3909]	LOADK    	R22 K71 ; R22 := "LineDeco"
	431	[3909]	LOADK    	R23 K72 ; R23 := "IconWhite"
	432	[3909]	LOADK    	R24 K73 ; R24 := "IconTinted"
	433	[3909]	LOADK    	R25 K74 ; R25 := "IconBg"
	434	[3909]	LOADK    	R26 K75 ; R26 := "IconBgLeft"
	435	[3909]	LOADK    	R27 K76 ; R27 := "IconBgRight"
	436	[3909]	SETLIST  	R21 6 1 ; R21[(1-1)*FPF+i] := R(21+i), 1 <= i <= 6
	437	[3910]	NEWTABLE 	R22 6 0 ; R22 := {}
	438	[3910]	LOADK    	R23 K71 ; R23 := "LineDeco"
	439	[3910]	LOADK    	R24 K77 ; R24 := "Icon.IconWhite"
	440	[3910]	LOADK    	R25 K78 ; R25 := "Icon.IconTinted"
	441	[3910]	LOADK    	R26 K79 ; R26 := "Icon.IconBg"
	442	[3910]	LOADK    	R27 K80 ; R27 := "Icon.IconBgLeft"
	443	[3910]	LOADK    	R28 K81 ; R28 := "Icon.IconBgRight"
	444	[3910]	SETLIST  	R22 6 1 ; R22[(1-1)*FPF+i] := R(22+i), 1 <= i <= 6
	445	[3911]	NEWTABLE 	R23 6 0 ; R23 := {}
	446	[3911]	LOADK    	R24 := 128.000000
	447	[3911]	LOADK    	R25 := 256.000000
	448	[3911]	LOADK    	R26 := 256.000000
	449	[3911]	LOADK    	R27 := 256.000000
	450	[3911]	LOADK    	R28 := 256.000000
	451	[3911]	LOADK    	R29 := 256.000000
	452	[3911]	SETLIST  	R23 6 1 ; R23[(1-1)*FPF+i] := R(23+i), 1 <= i <= 6
	453	[3912]	NEWTABLE 	R24 6 0 ; R24 := {}
	454	[3912]	LOADK    	R25 := 32.000000
	455	[3912]	LOADK    	R26 := 256.000000
	456	[3912]	LOADK    	R27 := 256.000000
	457	[3912]	LOADK    	R28 := 256.000000
	458	[3912]	LOADK    	R29 := 256.000000
	459	[3912]	LOADK    	R30 := 256.000000
	460	[3912]	SETLIST  	R24 6 1 ; R24[(1-1)*FPF+i] := R(24+i), 1 <= i <= 6
	461	[3913]	NEWTABLE 	R25 6 0 ; R25 := {}
	462	[3913]	LOADK    	R26 := 0.000000
	463	[3913]	LOADK    	R27 := 0.000000
	464	[3913]	LOADK    	R28 := 0.000000
	465	[3913]	LOADK    	R29 := 0.000000
	466	[3913]	LOADK    	R30 := -128.000000
	467	[3913]	LOADK    	R31 := 128.000000
	468	[3913]	SETLIST  	R25 6 1 ; R25[(1-1)*FPF+i] := R(25+i), 1 <= i <= 6
	469	[3914]	NEWTABLE 	R26 6 0 ; R26 := {}
	470	[3914]	LOADK    	R27 := 97.000000
	471	[3914]	LOADK    	R28 := 0.000000
	472	[3914]	LOADK    	R29 := 0.000000
	473	[3914]	LOADK    	R30 := 0.000000
	474	[3914]	LOADK    	R31 := 0.000000
	475	[3914]	LOADK    	R32 := 0.000000
	476	[3914]	SETLIST  	R26 6 1 ; R26[(1-1)*FPF+i] := R(26+i), 1 <= i <= 6
	477	[3915]	GETGLOBAL	R27 K1 ; R27 := 0xae91e43b
	478	[3915]	SELF     	R27 R27 K36 ; R28 := R27; R27 := R27[0xd5181643]
	479	[3915]	LOADK    	R29 K82 ; R29 := "ImpactMessage.Icon.IconBgLeft"
	480	[3915]	GETGLOBAL	R30 K38 ; R30 := 0x0032441c
	481	[3915]	GETTABLE 	R30 R30 K39 ; R30 := R30["UIMaterial_Plain"]
	482	[3915]	CALL     	R27 4 1 ; R27(R28,R29,R30)
	483	[3916]	GETGLOBAL	R27 K1 ; R27 := 0xae91e43b
	484	[3916]	SELF     	R27 R27 K36 ; R28 := R27; R27 := R27[0xd5181643]
	485	[3916]	LOADK    	R29 K83 ; R29 := "ImpactMessage.Icon.IconBgRight"
	486	[3916]	GETGLOBAL	R30 K38 ; R30 := 0x0032441c
	487	[3916]	GETTABLE 	R30 R30 K39 ; R30 := R30["UIMaterial_Plain"]
	488	[3916]	CALL     	R27 4 1 ; R27(R28,R29,R30)
	489	[3917]	GETGLOBAL	R27 K84 ; R27 := 0xc8802016
	490	[3917]	MOVE     	R28 R21 ; R28 := R21
	491	[3917]	CALL     	R27 2 4 ; R27,R28,R29 := R27(R28)
	492	[3917]	JMP      	609 ; PC := 609
	493	[3918]	GETGLOBAL	R32 K1 ; R32 := 0xae91e43b
	494	[3918]	SELF     	R32 R32 K85 ; R33 := R32; R32 := R32[0xc0a3774b]
	495	[3918]	LOADK    	R34 K23 ; R34 := "ImpactMessage"
	496	[3918]	GETTABLE 	R35 R22 R30 ; R35 := R22[R30]
	497	[3918]	LOADK    	R36 := 11.000000
	498	[3918]	GETGLOBAL	R37 K0 ; R37 := 0x7b998233
	499	[3918]	GETTABLE 	R38 R20 R31 ; R38 := R20[R31]
	500	[3918]	CALL     	R37 2 2 ; R37 := R37(R38)
	501	[3918]	NOT      	R37 R37 ; R37 := not R37
	502	[3918]	CALL     	R32 6 1 ; R32(R33,R34,R35,R36,R37)
	503	[3919]	GETGLOBAL	R32 K0 ; R32 := 0x7b998233
	504	[3919]	GETTABLE 	R33 R20 R31 ; R33 := R20[R31]
	505	[3919]	CALL     	R32 2 2 ; R32 := R32(R33)
	506	[3919]	TEST     	R32 1 ; if R32 then PC := 515
	507	[3919]	JMP      	515 ; PC := 515
	508	[3920]	GETGLOBAL	R32 K1 ; R32 := 0xae91e43b
	509	[3920]	SELF     	R32 R32 K86 ; R33 := R32; R32 := R32[0x1cb415c1]
	510	[3920]	LOADK    	R34 K87 ; R34 := "ImpactMessage."
	511	[3920]	GETTABLE 	R35 R22 R30 ; R35 := R22[R30]
	512	[3920]	CONCAT   	R34 R34 R35 ; R34 := R34 .. R35
	513	[3920]	GETTABLE 	R35 R20 R31 ; R35 := R20[R31]
	514	[3920]	CALL     	R32 4 1 ; R32(R33,R34,R35)
	515	[3923]	GETGLOBAL	R32 K0 ; R32 := 0x7b998233
	516	[3923]	MOVE     	R33 R31 ; R33 := R31
	517	[3923]	LOADK    	R34 K88 ; R34 := "Material"
	518	[3923]	CONCAT   	R33 R33 R34 ; R33 := R33 .. R34
	519	[3923]	GETTABLE 	R33 R20 R33 ; R33 := R20[R33]
	520	[3923]	CALL     	R32 2 2 ; R32 := R32(R33)
	521	[3923]	TEST     	R32 1 ; if R32 then PC := 533
	522	[3923]	JMP      	533 ; PC := 533
	523	[3924]	GETGLOBAL	R32 K1 ; R32 := 0xae91e43b
	524	[3924]	SELF     	R32 R32 K36 ; R33 := R32; R32 := R32[0xd5181643]
	525	[3924]	LOADK    	R34 K87 ; R34 := "ImpactMessage."
	526	[3924]	GETTABLE 	R35 R22 R30 ; R35 := R22[R30]
	527	[3924]	CONCAT   	R34 R34 R35 ; R34 := R34 .. R35
	528	[3924]	MOVE     	R35 R31 ; R35 := R31
	529	[3924]	LOADK    	R36 K88 ; R36 := "Material"
	530	[3924]	CONCAT   	R35 R35 R36 ; R35 := R35 .. R36
	531	[3924]	GETTABLE 	R35 R20 R35 ; R35 := R20[R35]
	532	[3924]	CALL     	R32 4 1 ; R32(R33,R34,R35)
	533	[3927]	GETTABLE 	R32 R25 R30 ; R32 := R25[R30]
	534	[3928]	GETTABLE 	R33 R26 R30 ; R33 := R26[R30]
	535	[3929]	GETTABLE 	R34 R23 R30 ; R34 := R23[R30]
	536	[3930]	GETTABLE 	R35 R24 R30 ; R35 := R24[R30]
	537	[3931]	MOVE     	R36 R31 ; R36 := R31
	538	[3931]	LOADK    	R37 K89 ; R37 := "Adjust"
	539	[3931]	CONCAT   	R36 R36 R37 ; R36 := R36 .. R37
	540	[3931]	GETTABLE 	R36 R20 R36 ; R36 := R20[R36]
	541	[3931]	EQ       	1 R36 K17 ; if R36 == nil then PC := 563
	542	[3931]	JMP      	563 ; PC := 563
	543	[3932]	MOVE     	R36 R31 ; R36 := R31
	544	[3932]	LOADK    	R37 K89 ; R37 := "Adjust"
	545	[3932]	CONCAT   	R36 R36 R37 ; R36 := R36 .. R37
	546	[3932]	GETTABLE 	R36 R20 R36 ; R36 := R20[R36]
	547	[3933]	GETTABLE 	R37 R36 K90 ; R37 := R36["Width"]
	548	[3933]	EQ       	1 R37 K17 ; if R37 == nil then PC := 551
	549	[3933]	JMP      	551 ; PC := 551
	550	[3934]	GETTABLE 	R34 R36 K90 ; R34 := R36["Width"]
	551	[3936]	GETTABLE 	R37 R36 K91 ; R37 := R36["Height"]
	552	[3936]	EQ       	1 R37 K17 ; if R37 == nil then PC := 555
	553	[3936]	JMP      	555 ; PC := 555
	554	[3937]	GETTABLE 	R35 R36 K91 ; R35 := R36["Height"]
	555	[3939]	GETTABLE 	R37 R36 K92 ; R37 := R36["X"]
	556	[3939]	EQ       	1 R37 K17 ; if R37 == nil then PC := 559
	557	[3939]	JMP      	559 ; PC := 559
	558	[3940]	GETTABLE 	R32 R36 K92 ; R32 := R36["X"]
	559	[3942]	GETTABLE 	R37 R36 K93 ; R37 := R36["Y"]
	560	[3942]	EQ       	1 R37 K17 ; if R37 == nil then PC := 563
	561	[3942]	JMP      	563 ; PC := 563
	562	[3943]	GETTABLE 	R33 R36 K93 ; R33 := R36["Y"]
	563	[3947]	GETGLOBAL	R37 K0 ; R37 := 0x7b998233
	564	[3947]	GETTABLE 	R38 R20 K94 ; R38 := R20["LetterSpacing"]
	565	[3947]	CALL     	R37 2 2 ; R37 := R37(R38)
	566	[3947]	TEST     	R37 1 ; if R37 then PC := 575
	567	[3947]	JMP      	575 ; PC := 575
	568	[3948]	GETGLOBAL	R37 K1 ; R37 := 0xae91e43b
	569	[3948]	SELF     	R37 R37 K31 ; R38 := R37; R37 := R37[0x67bc869f]
	570	[3948]	LOADK    	R39 K95 ; R39 := "Impactmessage.Label"
	571	[3948]	LOADK    	R40 := 65.000000
	572	[3948]	GETTABLE 	R41 R20 K94 ; R41 := R20["LetterSpacing"]
	573	[3948]	CALL     	R37 5 1 ; R37(R38,R39,R40,R41)
	574	[3948]	JMP      	581 ; PC := 581
	575	[3950]	GETGLOBAL	R37 K1 ; R37 := 0xae91e43b
	576	[3950]	SELF     	R37 R37 K31 ; R38 := R37; R37 := R37[0x67bc869f]
	577	[3950]	LOADK    	R39 K95 ; R39 := "Impactmessage.Label"
	578	[3950]	LOADK    	R40 := 65.000000
	579	[3950]	LOADK    	R41 := 0.000000
	580	[3950]	CALL     	R37 5 1 ; R37(R38,R39,R40,R41)
	581	[3953]	GETGLOBAL	R37 K1 ; R37 := 0xae91e43b
	582	[3953]	SELF     	R37 R37 K96 ; R38 := R37; R37 := R37[0xf64b7262]
	583	[3953]	LOADK    	R39 K97 ; R39 := "Impactmessage"
	584	[3953]	GETTABLE 	R40 R22 R30 ; R40 := R22[R30]
	585	[3953]	LOADK    	R41 := 12.000000
	586	[3953]	MOVE     	R42 R34 ; R42 := R34
	587	[3953]	CALL     	R37 6 1 ; R37(R38,R39,R40,R41,R42)
	588	[3954]	GETGLOBAL	R37 K1 ; R37 := 0xae91e43b
	589	[3954]	SELF     	R37 R37 K96 ; R38 := R37; R37 := R37[0xf64b7262]
	590	[3954]	LOADK    	R39 K97 ; R39 := "Impactmessage"
	591	[3954]	GETTABLE 	R40 R22 R30 ; R40 := R22[R30]
	592	[3954]	LOADK    	R41 := 13.000000
	593	[3954]	MOVE     	R42 R35 ; R42 := R35
	594	[3954]	CALL     	R37 6 1 ; R37(R38,R39,R40,R41,R42)
	595	[3955]	GETGLOBAL	R37 K1 ; R37 := 0xae91e43b
	596	[3955]	SELF     	R37 R37 K96 ; R38 := R37; R37 := R37[0xf64b7262]
	597	[3955]	LOADK    	R39 K97 ; R39 := "Impactmessage"
	598	[3955]	GETTABLE 	R40 R22 R30 ; R40 := R22[R30]
	599	[3955]	LOADK    	R41 := 0.000000
	600	[3955]	MOVE     	R42 R32 ; R42 := R32
	601	[3955]	CALL     	R37 6 1 ; R37(R38,R39,R40,R41,R42)
	602	[3956]	GETGLOBAL	R37 K1 ; R37 := 0xae91e43b
	603	[3956]	SELF     	R37 R37 K96 ; R38 := R37; R37 := R37[0xf64b7262]
	604	[3956]	LOADK    	R39 K97 ; R39 := "Impactmessage"
	605	[3956]	GETTABLE 	R40 R22 R30 ; R40 := R22[R30]
	606	[3956]	LOADK    	R41 := 1.000000
	607	[3956]	MOVE     	R42 R33 ; R42 := R33
	608	[3956]	CALL     	R37 6 1 ; R37(R38,R39,R40,R41,R42)
	609	[3917]	TFORLOOP 	R27 2 ; R30,R31 := R27(R28,R29); if R30 ~= nil then begin PC = 493; R29 := R30 end
	610	[3956]	JMP      	493 ; PC := 493
	611	[3958]	GETGLOBAL	R37 K0 ; R37 := 0x7b998233
	612	[3958]	GETTABLE 	R38 R20 K98 ; R38 := R20["Color"]
	613	[3958]	CALL     	R37 2 2 ; R37 := R37(R38)
	614	[3958]	TEST     	R37 1 ; if R37 then PC := 673
	615	[3958]	JMP      	673 ; PC := 673
	616	[3959]	GETGLOBAL	R37 K99 ; R37 := 0x76ea806b
	617	[3959]	SELF     	R37 R37 K100 ; R38 := R37; R37 := R37[0x3f3ae64c]
	618	[3959]	LOADK    	R39 := 0.000000
	619	[3959]	CALL     	R37 3 2 ; R37 := R37(R38,R39)
	620	[3960]	GETGLOBAL	R38 K0 ; R38 := 0x7b998233
	621	[3960]	MOVE     	R39 R37 ; R39 := R37
	622	[3960]	CALL     	R38 2 2 ; R38 := R38(R39)
	623	[3960]	TEST     	R38 1 ; if R38 then PC := 694
	624	[3960]	JMP      	694 ; PC := 694
	625	[3961]	SELF     	R38 R37 K101 ; R39 := R37; R38 := R37[0x40e9c32b]
	626	[3961]	CALL     	R38 2 2 ; R38 := R38(R39)
	627	[3962]	GETTABLE 	R39 R20 K98 ; R39 := R20["Color"]
	628	[3963]	GETTABLE 	R40 R20 K102 ; R40 := R20["IsColorHex"]
	629	[3963]	TEST     	R40 1 ; if R40 then PC := 635
	630	[3963]	JMP      	635 ; PC := 635
	631	[3964]	SELF     	R40 R38 K103 ; R41 := R38; R40 := R38[0xef9a3ee6]
	632	[3964]	MOVE     	R42 R39 ; R42 := R39
	633	[3964]	CALL     	R40 3 2 ; R40 := R40(R41,R42)
	634	[3964]	MOVE     	R39 R40 ; R39 := R40
	635	[3966]	GETGLOBAL	R40 K1 ; R40 := 0xae91e43b
	636	[3966]	SELF     	R40 R40 K31 ; R41 := R40; R40 := R40[0x67bc869f]
	637	[3966]	LOADK    	R42 K42 ; R42 := "ImpactMessage.MessageFlare"
	638	[3966]	LOADK    	R43 := 9.000000
	639	[3966]	MOVE     	R44 R39 ; R44 := R39
	640	[3966]	CALL     	R40 5 1 ; R40(R41,R42,R43,R44)
	641	[3967]	GETGLOBAL	R40 K1 ; R40 := 0xae91e43b
	642	[3967]	SELF     	R40 R40 K31 ; R41 := R40; R40 := R40[0x67bc869f]
	643	[3967]	LOADK    	R42 K44 ; R42 := "ImpactMessage.LineDeco"
	644	[3967]	LOADK    	R43 := 9.000000
	645	[3967]	MOVE     	R44 R39 ; R44 := R39
	646	[3967]	CALL     	R40 5 1 ; R40(R41,R42,R43,R44)
	647	[3968]	GETGLOBAL	R40 K1 ; R40 := 0xae91e43b
	648	[3968]	SELF     	R40 R40 K31 ; R41 := R40; R40 := R40[0x67bc869f]
	649	[3968]	LOADK    	R42 K104 ; R42 := "ImpactMessage.Icon.IconTinted"
	650	[3968]	LOADK    	R43 := 9.000000
	651	[3968]	MOVE     	R44 R39 ; R44 := R39
	652	[3968]	CALL     	R40 5 1 ; R40(R41,R42,R43,R44)
	653	[3969]	GETGLOBAL	R40 K1 ; R40 := 0xae91e43b
	654	[3969]	SELF     	R40 R40 K31 ; R41 := R40; R40 := R40[0x67bc869f]
	655	[3969]	LOADK    	R42 K105 ; R42 := "ImpactMessage.Icon"
	656	[3969]	LOADK    	R43 := 1.000000
	657	[3969]	LOADK    	R44 := 40.000000
	658	[3969]	CALL     	R40 5 1 ; R40(R41,R42,R43,R44)
	659	[3970]	GETGLOBAL	R40 K106 ; R40 := 0x25312c9b
	660	[3970]	GETGLOBAL	R41 K1 ; R41 := 0xae91e43b
	661	[3970]	LOADK    	R42 K105 ; R42 := "ImpactMessage.Icon"
	662	[3970]	LOADK    	R43 := 2.000000
	663	[3970]	NEWTABLE 	R44 1 0 ; R44 := {}
	664	[3970]	LOADK    	R45 := 1.000000
	665	[3970]	SETLIST  	R44 1 1 ; R44[(1-1)*FPF+i] := R(44+i), 1 <= i <= 1
	666	[3970]	NEWTABLE 	R45 1 0 ; R45 := {}
	667	[3970]	LOADK    	R46 := 20.000000
	668	[3970]	SETLIST  	R45 1 1 ; R45[(1-1)*FPF+i] := R(45+i), 1 <= i <= 1
	669	[3970]	LOADK    	R46 := 1.500000
	670	[3970]	LOADK    	R47 := 0.000000
	671	[3970]	CALL     	R40 8 1 ; R40(R41,R42,R43,R44,R45,R46,R47)
	672	[3971]	JMP      	694 ; PC := 694
	673	[3973]	GETGLOBAL	R40 K1 ; R40 := 0xae91e43b
	674	[3973]	SELF     	R40 R40 K31 ; R41 := R40; R40 := R40[0x67bc869f]
	675	[3973]	LOADK    	R42 K42 ; R42 := "ImpactMessage.MessageFlare"
	676	[3973]	LOADK    	R43 := 9.000000
	677	[3973]	GETGLOBAL	R44 K38 ; R44 := 0x0032441c
	678	[3973]	GETTABLE 	R44 R44 K108 ; R44 := R44["UIColor_White"]
	679	[3973]	CALL     	R40 5 1 ; R40(R41,R42,R43,R44)
	680	[3974]	GETGLOBAL	R40 K1 ; R40 := 0xae91e43b
	681	[3974]	SELF     	R40 R40 K31 ; R41 := R40; R40 := R40[0x67bc869f]
	682	[3974]	LOADK    	R42 K44 ; R42 := "ImpactMessage.LineDeco"
	683	[3974]	LOADK    	R43 := 9.000000
	684	[3974]	GETGLOBAL	R44 K38 ; R44 := 0x0032441c
	685	[3974]	GETTABLE 	R44 R44 K108 ; R44 := R44["UIColor_White"]
	686	[3974]	CALL     	R40 5 1 ; R40(R41,R42,R43,R44)
	687	[3975]	GETGLOBAL	R40 K1 ; R40 := 0xae91e43b
	688	[3975]	SELF     	R40 R40 K31 ; R41 := R40; R40 := R40[0x67bc869f]
	689	[3975]	LOADK    	R42 K104 ; R42 := "ImpactMessage.Icon.IconTinted"
	690	[3975]	LOADK    	R43 := 9.000000
	691	[3975]	GETGLOBAL	R44 K38 ; R44 := 0x0032441c
	692	[3975]	GETTABLE 	R44 R44 K108 ; R44 := R44["UIColor_White"]
	693	[3975]	CALL     	R40 5 1 ; R40(R41,R42,R43,R44)
	694	[3978]	LOADNIL  	R40 R40 ; R40 := nil
	695	[3979]	LOADK    	R41 := 25.000000
	696	[3981]	GETGLOBAL	R42 K1 ; R42 := 0xae91e43b
	697	[3981]	SELF     	R42 R42 K48 ; R43 := R42; R42 := R42[0x91a24e4b]
	698	[3981]	LOADK    	R44 K29 ; R44 := "ImpactMessage.Label"
	699	[3981]	LOADK    	R45 := 35.000000
	700	[3981]	CALL     	R42 4 2 ; R42 := R42(R43,R44,R45)
	701	[3981]	MOVE     	R40 R42 ; R40 := R42
	702	[3982]	LT       	0 K109 R40 ; if 2.000000 >= R40 then PC := 723
	703	[3982]	JMP      	723 ; PC := 723
	704	[3983]	SUB      	R41 R41 K109 ; R41 := R41 - 2.000000
	705	[3984]	GETGLOBAL	R42 K1 ; R42 := 0xae91e43b
	706	[3984]	SELF     	R42 R42 K28 ; R43 := R42; R42 := R42[0x5f56eeab]
	707	[3984]	LOADK    	R44 K29 ; R44 := "ImpactMessage.Label"
	708	[3984]	LOADK    	R45 := 29.000000
	709	[3984]	LOADK    	R46 K63 ; R46 := ""
	710	[3984]	CALL     	R42 5 1 ; R42(R43,R44,R45,R46)
	711	[3985]	GETGLOBAL	R42 K1 ; R42 := 0xae91e43b
	712	[3985]	SELF     	R42 R42 K31 ; R43 := R42; R42 := R42[0x67bc869f]
	713	[3985]	LOADK    	R44 K29 ; R44 := "ImpactMessage.Label"
	714	[3985]	LOADK    	R45 := 42.000000
	715	[3985]	MOVE     	R46 R41 ; R46 := R41
	716	[3985]	CALL     	R42 5 1 ; R42(R43,R44,R45,R46)
	717	[3986]	GETGLOBAL	R42 K1 ; R42 := 0xae91e43b
	718	[3986]	SELF     	R42 R42 K28 ; R43 := R42; R42 := R42[0x5f56eeab]
	719	[3986]	LOADK    	R44 K29 ; R44 := "ImpactMessage.Label"
	720	[3986]	LOADK    	R45 := 29.000000
	721	[3986]	MOVE     	R46 R16 ; R46 := R16
	722	[3986]	CALL     	R42 5 1 ; R42(R43,R44,R45,R46)
	723	[3988]	LE       	1 R40 K109 ; if R40 <= 2.000000 then PC := 727
	724	[3988]	JMP      	727 ; PC := 727
	725	[3988]	LE       	0 R41 K110 ; if R41 > 16.000000 then PC := 696
	726	[3988]	JMP      	696 ; PC := 696
	727	[3989]	GETTABLE 	R42 R20 K111 ; R42 := R20["ShowTextShadow"]
	728	[3989]	TEST     	R42 0 ; if not R42 then PC := 743
	729	[3989]	JMP      	743 ; PC := 743
	730	[3990]	GETGLOBAL	R42 K1 ; R42 := 0xae91e43b
	731	[3990]	SELF     	R42 R42 K48 ; R43 := R42; R42 := R42[0x91a24e4b]
	732	[3990]	LOADK    	R44 K29 ; R44 := "ImpactMessage.Label"
	733	[3990]	LOADK    	R45 := 34.000000
	734	[3990]	CALL     	R42 4 2 ; R42 := R42(R43,R44,R45)
	735	[3991]	GETGLOBAL	R43 K1 ; R43 := 0xae91e43b
	736	[3991]	SELF     	R43 R43 K31 ; R44 := R43; R43 := R43[0x67bc869f]
	737	[3991]	LOADK    	R45 K43 ; R45 := "ImpactMessage.Underlay.TopShadow"
	738	[3991]	LOADK    	R46 := 13.000000
	739	[3991]	MUL      	R47 R42 K109 ; R47 := R42 * 2.000000
	740	[3991]	ADD      	R47 K112 R47 ; R47 := 32.000000 + R47
	741	[3991]	CALL     	R43 5 1 ; R43(R44,R45,R46,R47)
	742	[3991]	JMP      	749 ; PC := 749
	743	[3993]	GETGLOBAL	R43 K1 ; R43 := 0xae91e43b
	744	[3993]	SELF     	R43 R43 K31 ; R44 := R43; R43 := R43[0x67bc869f]
	745	[3993]	LOADK    	R45 K43 ; R45 := "ImpactMessage.Underlay.TopShadow"
	746	[3993]	LOADK    	R46 := 13.000000
	747	[3993]	LOADK    	R47 := 32.000000
	748	[3993]	CALL     	R43 5 1 ; R43(R44,R45,R46,R47)
	749	[3997]	GETGLOBAL	R43 K50 ; R43 := 0xe72d2edb
	750	[3997]	EQ       	1 R43 K46 ; if R43 == 3.000000 then PC := 783
	751	[3997]	JMP      	783 ; PC := 783
	752	[3997]	EQ       	1 R6 K14 ; if R6 == 4.000000 then PC := 783
	753	[3997]	JMP      	783 ; PC := 783
	754	[3998]	TEST     	R12 0 ; if not R12 then PC := 770
	755	[3998]	JMP      	770 ; PC := 770
	756	[3999]	GETGLOBAL	R43 K1 ; R43 := 0xae91e43b
	757	[3999]	SELF     	R43 R43 K31 ; R44 := R43; R43 := R43[0x67bc869f]
	758	[3999]	LOADK    	R45 K32 ; R45 := "ImpactMessage.Underlay"
	759	[3999]	LOADK    	R46 := 9.000000
	760	[3999]	GETUPVAL 	R47 U3 ; R47 := U3
	761	[3999]	GETTABLE 	R47 R47 K13 ; R47 := R47[0x06d055f9]
	762	[3999]	MOVE     	R48 R2 ; R48 := R2
	763	[3999]	GETGLOBAL	R49 K38 ; R49 := 0x0032441c
	764	[3999]	GETTABLE 	R49 R49 K113 ; R49 := R49["UIColor_Shield"]
	765	[3999]	GETGLOBAL	R50 K38 ; R50 := 0x0032441c
	766	[3999]	GETTABLE 	R50 R50 K114 ; R50 := R50["UIColor_Health"]
	767	[3999]	CALL     	R47 4 0 ; R47,... := R47(R48,R49,R50)
	768	[3999]	CALL     	R43 0 1 ; R43(R44,...)
	769	[3999]	JMP      	783 ; PC := 783
	770	[4001]	GETGLOBAL	R43 K1 ; R43 := 0xae91e43b
	771	[4001]	SELF     	R43 R43 K31 ; R44 := R43; R43 := R43[0x67bc869f]
	772	[4001]	LOADK    	R45 K23 ; R45 := "ImpactMessage"
	773	[4001]	LOADK    	R46 := 9.000000
	774	[4001]	GETUPVAL 	R47 U3 ; R47 := U3
	775	[4001]	GETTABLE 	R47 R47 K13 ; R47 := R47[0x06d055f9]
	776	[4001]	MOVE     	R48 R2 ; R48 := R2
	777	[4001]	GETUPVAL 	R49 U6 ; R49 := U6
	778	[4001]	GETTABLE 	R49 R49 K34 ; R49 := R49["Text"]
	779	[4001]	GETUPVAL 	R50 U6 ; R50 := U6
	780	[4001]	GETTABLE 	R50 R50 K115 ; R50 := R50["NegativeText"]
	781	[4001]	CALL     	R47 4 0 ; R47,... := R47(R48,R49,R50)
	782	[4001]	CALL     	R43 0 1 ; R43(R44,...)
	783	[4005]	EQ       	1 R6 K14 ; if R6 == 4.000000 then PC := 807
	784	[4005]	JMP      	807 ; PC := 807
	785	[4006]	GETGLOBAL	R43 K1 ; R43 := 0xae91e43b
	786	[4006]	SELF     	R43 R43 K31 ; R44 := R43; R43 := R43[0x67bc869f]
	787	[4006]	LOADK    	R45 K116 ; R45 := "ImpactMessage.Bg"
	788	[4006]	LOADK    	R46 := 12.000000
	789	[4006]	GETGLOBAL	R47 K1 ; R47 := 0xae91e43b
	790	[4006]	SELF     	R47 R47 K48 ; R48 := R47; R47 := R47[0x91a24e4b]
	791	[4006]	LOADK    	R49 K29 ; R49 := "ImpactMessage.Label"
	792	[4006]	LOADK    	R50 := 33.000000
	793	[4006]	CALL     	R47 4 2 ; R47 := R47(R48,R49,R50)
	794	[4006]	ADD      	R47 R47 K69 ; R47 := R47 + 20.000000
	795	[4006]	CALL     	R43 5 1 ; R43(R44,R45,R46,R47)
	796	[4007]	GETGLOBAL	R43 K1 ; R43 := 0xae91e43b
	797	[4007]	SELF     	R43 R43 K31 ; R44 := R43; R43 := R43[0x67bc869f]
	798	[4007]	LOADK    	R45 K116 ; R45 := "ImpactMessage.Bg"
	799	[4007]	LOADK    	R46 := 13.000000
	800	[4007]	GETGLOBAL	R47 K1 ; R47 := 0xae91e43b
	801	[4007]	SELF     	R47 R47 K48 ; R48 := R47; R47 := R47[0x91a24e4b]
	802	[4007]	LOADK    	R49 K29 ; R49 := "ImpactMessage.Label"
	803	[4007]	LOADK    	R50 := 34.000000
	804	[4007]	CALL     	R47 4 2 ; R47 := R47(R48,R49,R50)
	805	[4007]	ADD      	R47 R47 K117 ; R47 := R47 + 8.000000
	806	[4007]	CALL     	R43 5 1 ; R43(R44,R45,R46,R47)
	807	[4010]	GETGLOBAL	R43 K0 ; R43 := 0x7b998233
	808	[4010]	GETUPVAL 	R44 U8 ; R44 := U8
	809	[4010]	CALL     	R43 2 2 ; R43 := R43(R44)
	810	[4010]	TEST     	R43 1 ; if R43 then PC := 818
	811	[4010]	JMP      	818 ; PC := 818
	812	[4011]	GETUPVAL 	R43 U9 ; R43 := U9
	813	[4011]	SELF     	R43 R43 K118 ; R44 := R43; R43 := R43[0x775c858b]
	814	[4011]	GETUPVAL 	R45 U8 ; R45 := U8
	815	[4011]	CALL     	R43 3 1 ; R43(R44,R45)
	816	[4012]	LOADNIL  	R43 R43 ; R43 := nil
	817	[4012]	SETUPVAL 	R43 U8 ; U8 := R43
	818	[4015]	GETGLOBAL	R43 K106 ; R43 := 0x25312c9b
	819	[4015]	GETGLOBAL	R44 K1 ; R44 := 0xae91e43b
	820	[4015]	LOADK    	R45 K23 ; R45 := "ImpactMessage"
	821	[4015]	LOADK    	R46 := 0.000000
	822	[4015]	NEWTABLE 	R47 3 0 ; R47 := {}
	823	[4015]	LOADK    	R48 := 10.000000
	824	[4015]	LOADK    	R49 := 5.000000
	825	[4015]	LOADK    	R50 := 6.000000
	826	[4015]	SETLIST  	R47 3 1 ; R47[(1-1)*FPF+i] := R(47+i), 1 <= i <= 3
	827	[4015]	NEWTABLE 	R48 3 0 ; R48 := {}
	828	[4015]	LOADK    	R49 := 100.000000
	829	[4015]	MOVE     	R50 R7 ; R50 := R7
	830	[4015]	MOVE     	R51 R7 ; R51 := R7
	831	[4015]	SETLIST  	R48 3 1 ; R48[(1-1)*FPF+i] := R(48+i), 1 <= i <= 3
	832	[4015]	LOADK    	R49 K119 ; R49 := 0.150000
	833	[4015]	LOADK    	R50 := 0.000000
	834	[4020]	CLOSURE  	R51 0 ; R51 := closure(Function #1)
	835	[4020]	MOVE     	R0 R1 ; R0 := R1
	836	[4020]	GETUPVAL 	R0 U8 ; R0 := U8
	837	[4020]	GETUPVAL 	R0 U9 ; R0 := U9
	838	[4020]	GETUPVAL 	R0 U10 ; R0 := U10
	839	[4015]	CALL     	R43 9 1 ; R43(R44,R45,R46,R47,R48,R49,R50,R51)
	840	[4021]	RETURN   	R0 1 ; return 

function #119 <?:4023,4029> (20 instructions, 80 bytes at 000002111C7B23E0)
4 params, 10 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[4024]	GETGLOBAL	R4 K0 ; R4 := 0x03f57322
	2	[4024]	MOVE     	R5 R1 ; R5 := R1
	3	[4024]	CALL     	R4 2 2 ; R4 := R4(R5)
	4	[4024]	MOVE     	R1 R4 ; R1 := R4
	5	[4025]	EQ       	1 R2 K1 ; if R2 == "true" then PC := 8
	6	[4025]	JMP      	8 ; PC := 8
	7	[4025]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 8
	8	[4025]	OP_LOADBOOL	R2 1 0 ; R2 := true
	9	[4026]	EQ       	1 R3 K1 ; if R3 == "true" then PC := 12
	10	[4026]	JMP      	12 ; PC := 12
	11	[4026]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 12
	12	[4026]	OP_LOADBOOL	R3 1 0 ; R3 := true
	13	[4028]	GETUPVAL 	R4 U0 ; R4 := U0
	14	[4028]	MOVE     	R5 R0 ; R5 := R0
	15	[4028]	MOVE     	R6 R1 ; R6 := R1
	16	[4028]	MOVE     	R7 R2 ; R7 := R2
	17	[4028]	LOADNIL  	R8 R8 ; R8 := nil
	18	[4028]	MOVE     	R9 R3 ; R9 := R3
	19	[4028]	CALL     	R4 6 1 ; R4(R5,R6,R7,R8,R9)
	20	[4029]	RETURN   	R0 1 ; return 

function #120 <?:4031,4038> (23 instructions, 92 bytes at 00000211132DF240)
1 param, 7 slots, 3 upvalues, 0 locals, 8 constants, 0 functions
	1	[4032]	EQ       	0 R0 K0 ; if R0 ~= nil then PC := 4
	2	[4032]	JMP      	4 ; PC := 4
	3	[4033]	LOADK    	R0 := 0.000000
	4	[4036]	GETUPVAL 	R1 U0 ; R1 := U0
	5	[4036]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x4bc5dc8b]
	6	[4036]	LOADK    	R3 K2 ; R3 := "ImpactMessage"
	7	[4036]	LOADNIL  	R4 R4 ; R4 := nil
	8	[4036]	GETUPVAL 	R5 U1 ; R5 := U1
	9	[4036]	ADD      	R5 R5 R0 ; R5 := R5 + R0
	10	[4036]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	11	[4037]	GETUPVAL 	R1 U0 ; R1 := U0
	12	[4037]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xfaa69527]
	13	[4037]	GETGLOBAL	R3 K4 ; R3 := 0xae91e43b
	14	[4037]	SELF     	R3 R3 K5 ; R4 := R3; R3 := R3[0x6b837788]
	15	[4037]	CALL     	R3 2 2 ; R3 := R3(R4)
	16	[4037]	GETGLOBAL	R4 K4 ; R4 := 0xae91e43b
	17	[4037]	SELF     	R4 R4 K6 ; R5 := R4; R4 := R4[0xaf9fda9f]
	18	[4037]	CALL     	R4 2 2 ; R4 := R4(R5)
	19	[4037]	OP_LOADBOOL	R5 1 0 ; R5 := true
	20	[4037]	GETUPVAL 	R6 U2 ; R6 := U2
	21	[4037]	GETTABLE 	R6 R6 K7 ; R6 := R6["HudScalePadding"]
	22	[4037]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	23	[4038]	RETURN   	R0 1 ; return 

function #121 <?:4040,4082> (104 instructions, 416 bytes at 000002111C7BAF60)
0 params, 15 slots, 2 upvalues, 0 locals, 46 constants, 0 functions
	1	[4041]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[4041]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x67bc869f]
	3	[4041]	LOADK    	R2 K2 ; R2 := "ImpactMessage"
	4	[4041]	LOADK    	R3 := 10.000000
	5	[4041]	LOADK    	R4 := 0.000000
	6	[4041]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	7	[4042]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	8	[4042]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0xd5181643]
	9	[4042]	LOADK    	R2 K2 ; R2 := "ImpactMessage"
	10	[4042]	GETGLOBAL	R3 K4 ; R3 := 0x0032441c
	11	[4042]	GETTABLE 	R3 R3 K5 ; R3 := R3["UIMaterial_Plain"]
	12	[4042]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	13	[4044]	GETUPVAL 	R0 U0 ; R0 := U0
	14	[4044]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0xf2deaf69]
	15	[4044]	GETGLOBAL	R2 K7 ; R2 := gLotusSpeedballGameRulesType
	16	[4044]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	17	[4044]	TEST     	R0 0 ; if not R0 then PC := 46
	18	[4044]	JMP      	46 ; PC := 46
	19	[4045]	LOADK    	R0 := 180.000000
	20	[4046]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	21	[4046]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x67bc869f]
	22	[4046]	LOADK    	R3 K2 ; R3 := "ImpactMessage"
	23	[4046]	LOADK    	R4 := 1.000000
	24	[4046]	MOVE     	R5 R0 ; R5 := R0
	25	[4046]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	26	[4048]	GETGLOBAL	R1 K8 ; R1 := 0x7b998233
	27	[4048]	GETUPVAL 	R2 U1 ; R2 := U1
	28	[4048]	CALL     	R1 2 2 ; R1 := R1(R2)
	29	[4048]	TEST     	R1 1 ; if R1 then PC := 46
	30	[4048]	JMP      	46 ; PC := 46
	31	[4049]	LOADK    	R1 := 1.000000
	32	[4049]	GETUPVAL 	R2 U1 ; R2 := U1
	33	[4049]	GETTABLE 	R2 R2 K9 ; R2 := R2["list"]
	34	[4049]	LEN      	R2 R2 ; R2 := # R2
	35	[4049]	LOADK    	R3 := 1.000000
	36	[4049]	FORPREP  	R1 45 ; R1 -= R3; PC := 45
	37	[4050]	GETUPVAL 	R5 U1 ; R5 := U1
	38	[4050]	GETTABLE 	R5 R5 K9 ; R5 := R5["list"]
	39	[4050]	GETTABLE 	R5 R5 R4 ; R5 := R5[R4]
	40	[4051]	GETTABLE 	R6 R5 K10 ; R6 := R5["clip"]
	41	[4051]	EQ       	0 R6 K2 ; if R6 ~= "ImpactMessage" then PC := 45
	42	[4051]	JMP      	45 ; PC := 45
	43	[4052]	SETTABLE 	R5 K11 R0 ; R5["originalY"] := R0
	44	[4053]	JMP      	46 ; PC := 46
	45	[4049]	FORLOOP  	R1 37 ; R1 += R3; if R1 <= R2 then begin PC := 37; R4 := R1 end
	46	[4059]	GETGLOBAL	R6 K8 ; R6 := 0x7b998233
	47	[4059]	GETGLOBAL	R7 K12 ; R7 := _T
	48	[4059]	GETTABLE 	R7 R7 K13 ; R7 := R7["ImpactMessageTexturePacks"]
	49	[4059]	CALL     	R6 2 2 ; R6 := R6(R7)
	50	[4059]	TEST     	R6 0 ; if not R6 then PC := 55
	51	[4059]	JMP      	55 ; PC := 55
	52	[4060]	GETGLOBAL	R6 K12 ; R6 := _T
	53	[4060]	NEWTABLE 	R7 0 0 ; R7 := {}
	54	[4060]	SETTABLE 	R6 K13 R7 ; R6["ImpactMessageTexturePacks"] := R7
	55	[4064]	GETGLOBAL	R6 K14 ; R6 := 0xc8802016
	56	[4064]	GETGLOBAL	R7 K15 ; R7 := 0x567818a9
	57	[4064]	CALL     	R6 2 4 ; R6,R7,R8 := R6(R7)
	58	[4064]	JMP      	102 ; PC := 102
	59	[4065]	GETGLOBAL	R11 K12 ; R11 := _T
	60	[4065]	GETTABLE 	R11 R11 K13 ; R11 := R11["ImpactMessageTexturePacks"]
	61	[4065]	LOADK    	R12 K16 ; R12 := "PowerRift"
	62	[4065]	MOVE     	R13 R9 ; R13 := R9
	63	[4065]	CONCAT   	R12 R12 R13 ; R12 := R12 .. R13
	64	[4065]	NEWTABLE 	R13 0 13 ; R13 := {}
	65	[4067]	SETTABLE 	R13 K17 R10 ; R13["IconWhite"] := R10
	66	[4068]	NEWTABLE 	R14 0 2 ; R14 := {}
	67	[4068]	SETTABLE 	R14 K19 K20 ; R14["Width"] := 110.000000
	68	[4068]	SETTABLE 	R14 K21 K20 ; R14["Height"] := 110.000000
	69	[4068]	SETTABLE 	R13 K18 R14 ; R13["IconWhiteAdjust"] := R14
	70	[4069]	GETGLOBAL	R14 K23 ; R14 := 0x7d082bc8
	71	[4069]	GETTABLE 	R14 R14 K24 ; R14 := R14[2.000000]
	72	[4069]	SETTABLE 	R13 K22 R14 ; R13["IconBgLeft"] := R14
	73	[4070]	GETGLOBAL	R14 K26 ; R14 := 0x1343588e
	74	[4070]	GETTABLE 	R14 R14 K27 ; R14 := R14[1.000000]
	75	[4070]	SETTABLE 	R13 K25 R14 ; R13["IconBgLeftMaterial"] := R14
	76	[4071]	NEWTABLE 	R14 0 3 ; R14 := {}
	77	[4071]	SETTABLE 	R14 K19 K29 ; R14["Width"] := 256.000000
	78	[4071]	SETTABLE 	R14 K21 K30 ; R14["Height"] := 128.000000
	79	[4071]	SETTABLE 	R14 K31 K32 ; R14["X"] := -162.000000
	80	[4071]	SETTABLE 	R13 K28 R14 ; R13["IconBgLeftAdjust"] := R14
	81	[4072]	GETGLOBAL	R14 K23 ; R14 := 0x7d082bc8
	82	[4072]	GETTABLE 	R14 R14 K24 ; R14 := R14[2.000000]
	83	[4072]	SETTABLE 	R13 K33 R14 ; R13["IconBgRight"] := R14
	84	[4073]	GETGLOBAL	R14 K26 ; R14 := 0x1343588e
	85	[4073]	GETTABLE 	R14 R14 K27 ; R14 := R14[1.000000]
	86	[4073]	SETTABLE 	R13 K34 R14 ; R13["IconBgRightMaterial"] := R14
	87	[4074]	NEWTABLE 	R14 0 3 ; R14 := {}
	88	[4074]	SETTABLE 	R14 K19 K29 ; R14["Width"] := 256.000000
	89	[4074]	SETTABLE 	R14 K21 K30 ; R14["Height"] := 128.000000
	90	[4074]	SETTABLE 	R14 K31 K36 ; R14["X"] := 162.000000
	91	[4074]	SETTABLE 	R13 K35 R14 ; R13["IconBgRightAdjust"] := R14
	92	[4075]	GETGLOBAL	R14 K23 ; R14 := 0x7d082bc8
	93	[4075]	GETTABLE 	R14 R14 K27 ; R14 := R14[1.000000]
	94	[4075]	SETTABLE 	R13 K37 R14 ; R13["LineDeco"] := R14
	95	[4076]	NEWTABLE 	R14 0 1 ; R14 := {}
	96	[4076]	SETTABLE 	R14 K39 K40 ; R14["Y"] := 93.000000
	97	[4076]	SETTABLE 	R13 K38 R14 ; R13["LineDecoAdjust"] := R14
	98	[4077]	SETTABLE 	R13 K41 K42 ; R13["ShowTextShadow"] := true
	99	[4078]	SETTABLE 	R13 K43 K44 ; R13["Color"] := 16646000.000000
	100	[4079]	SETTABLE 	R13 K45 K42 ; R13["IsColorHex"] := true
	101	[4080]	SETTABLE 	R11 R12 R13 ; R11[R12] := R13
	102	[4064]	TFORLOOP 	R6 2 ; R9,R10 := R6(R7,R8); if R9 ~= nil then begin PC = 59; R8 := R9 end
	103	[4080]	JMP      	59 ; PC := 59
	104	[4082]	RETURN   	R0 1 ; return 

function #122 <?:4084,4092> (20 instructions, 80 bytes at 0000021132F8BC90)
0 params, 4 slots, 2 upvalues, 0 locals, 4 constants, 0 functions
	1	[4085]	GETGLOBAL	R0 K0 ; R0 := 0x76ea806b
	2	[4085]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x3f3ae64c]
	3	[4085]	LOADK    	R2 := 0.000000
	4	[4085]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	5	[4087]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	6	[4087]	MOVE     	R2 R0 ; R2 := R0
	7	[4087]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[4087]	TEST     	R1 1 ; if R1 then PC := 15
	9	[4087]	JMP      	15 ; PC := 15
	10	[4087]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	11	[4087]	GETUPVAL 	R2 U0 ; R2 := U0
	12	[4087]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[4087]	TEST     	R1 0 ; if not R1 then PC := 16
	14	[4087]	JMP      	16 ; PC := 16
	15	[4088]	RETURN   	R0 1 ; return 
	16	[4091]	GETUPVAL 	R1 U0 ; R1 := U0
	17	[4091]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x1e9695e9]
	18	[4091]	GETUPVAL 	R3 U1 ; R3 := U1
	19	[4091]	CALL     	R1 3 1 ; R1(R2,R3)
	20	[4092]	RETURN   	R0 1 ; return 

function #123 <?:4094,4152> (144 instructions, 576 bytes at 0000021118BC6480)
0 params, 6 slots, 13 upvalues, 0 locals, 37 constants, 0 functions
	1	[4095]	GETGLOBAL	R0 K0 ; R0 := 0x76ea806b
	2	[4095]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x3f3ae64c]
	3	[4095]	LOADK    	R2 := 0.000000
	4	[4095]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	5	[4097]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	6	[4097]	MOVE     	R2 R0 ; R2 := R0
	7	[4097]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[4097]	TEST     	R1 0 ; if not R1 then PC := 11
	9	[4097]	JMP      	11 ; PC := 11
	10	[4098]	RETURN   	R0 1 ; return 
	11	[4101]	SELF     	R1 R0 K3 ; R2 := R0; R1 := R0[0x40e9c32b]
	12	[4101]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[4102]	TEST     	R1 0 ; if not R1 then PC := 98
	14	[4102]	JMP      	98 ; PC := 98
	15	[4103]	GETUPVAL 	R2 U0 ; R2 := U0
	16	[4103]	EQ       	1 R2 K4 ; if R2 == nil then PC := 45
	17	[4103]	JMP      	45 ; PC := 45
	18	[4104]	SELF     	R2 R1 K5 ; R3 := R1; R2 := R1[0x2cba1ca6]
	19	[4104]	CALL     	R2 2 2 ; R2 := R2(R3)
	20	[4104]	TEST     	R2 0 ; if not R2 then PC := 40
	21	[4104]	JMP      	40 ; PC := 40
	22	[4105]	GETUPVAL 	R2 U1 ; R2 := U1
	23	[4105]	SETTABLE 	R2 K6 K7 ; R2["mCanControlPlayerPanel"] := true
	24	[4106]	GETGLOBAL	R2 K8 ; R2 := _T
	25	[4106]	GETTABLE 	R2 R2 K9 ; R2 := R2["HidePlayerPanel"]
	26	[4106]	EQ       	1 R2 K4 ; if R2 == nil then PC := 32
	27	[4106]	JMP      	32 ; PC := 32
	28	[4106]	GETGLOBAL	R2 K8 ; R2 := _T
	29	[4106]	GETTABLE 	R2 R2 K9 ; R2 := R2["HidePlayerPanel"]
	30	[4106]	EQ       	0 R2 K10 ; if R2 ~= 0.000000 then PC := 36
	31	[4106]	JMP      	36 ; PC := 36
	32	[4107]	GETUPVAL 	R2 U0 ; R2 := U0
	33	[4107]	SELF     	R2 R2 K11 ; R3 := R2; R2 := R2[0x587aa683]
	34	[4107]	CALL     	R2 2 1 ; R2(R3)
	35	[4107]	JMP      	45 ; PC := 45
	36	[4109]	GETUPVAL 	R2 U0 ; R2 := U0
	37	[4109]	SELF     	R2 R2 K12 ; R3 := R2; R2 := R2[0xe0f7ce9e]
	38	[4109]	CALL     	R2 2 1 ; R2(R3)
	39	[4110]	JMP      	45 ; PC := 45
	40	[4112]	GETUPVAL 	R2 U1 ; R2 := U1
	41	[4112]	SETTABLE 	R2 K6 K13 ; R2["mCanControlPlayerPanel"] := false
	42	[4113]	GETUPVAL 	R2 U0 ; R2 := U0
	43	[4113]	SELF     	R2 R2 K12 ; R3 := R2; R2 := R2[0xe0f7ce9e]
	44	[4113]	CALL     	R2 2 1 ; R2(R3)
	45	[4116]	GETUPVAL 	R2 U2 ; R2 := U2
	46	[4116]	SELF     	R3 R1 K15 ; R4 := R1; R3 := R1[0xef9a3ee6]
	47	[4116]	LOADK    	R5 := 17.000000
	48	[4116]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	49	[4116]	SETTABLE 	R2 K14 R3 ; R2["Text"] := R3
	50	[4117]	GETUPVAL 	R2 U2 ; R2 := U2
	51	[4117]	SELF     	R3 R1 K15 ; R4 := R1; R3 := R1[0xef9a3ee6]
	52	[4117]	LOADK    	R5 := 33.000000
	53	[4117]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	54	[4117]	SETTABLE 	R2 K17 R3 ; R2["NegativeText"] := R3
	55	[4118]	GETUPVAL 	R2 U2 ; R2 := U2
	56	[4118]	SELF     	R3 R1 K15 ; R4 := R1; R3 := R1[0xef9a3ee6]
	57	[4118]	LOADK    	R5 := 3.000000
	58	[4118]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	59	[4118]	SETTABLE 	R2 K18 R3 ; R2["Buff"] := R3
	60	[4119]	GETUPVAL 	R2 U2 ; R2 := U2
	61	[4119]	SELF     	R3 R1 K15 ; R4 := R1; R3 := R1[0xef9a3ee6]
	62	[4119]	LOADK    	R5 := 8.000000
	63	[4119]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	64	[4119]	SETTABLE 	R2 K19 R3 ; R2["Debuff"] := R3
	65	[4120]	GETUPVAL 	R2 U2 ; R2 := U2
	66	[4120]	SELF     	R3 R1 K15 ; R4 := R1; R3 := R1[0xef9a3ee6]
	67	[4120]	LOADK    	R5 := 47.000000
	68	[4120]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	69	[4120]	SETTABLE 	R2 K20 R3 ; R2["Shadow"] := R3
	70	[4121]	GETUPVAL 	R2 U2 ; R2 := U2
	71	[4121]	SELF     	R3 R1 K15 ; R4 := R1; R3 := R1[0xef9a3ee6]
	72	[4121]	LOADK    	R5 := 52.000000
	73	[4121]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	74	[4121]	SETTABLE 	R2 K21 R3 ; R2["UnselectedAbility"] := R3
	75	[4122]	GETUPVAL 	R2 U2 ; R2 := U2
	76	[4122]	SELF     	R3 R1 K15 ; R4 := R1; R3 := R1[0xef9a3ee6]
	77	[4122]	LOADK    	R5 := 46.000000
	78	[4122]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	79	[4122]	SETTABLE 	R2 K22 R3 ; R2["SelectedAbility"] := R3
	80	[4125]	GETUPVAL 	R2 U2 ; R2 := U2
	81	[4125]	SELF     	R3 R1 K15 ; R4 := R1; R3 := R1[0xef9a3ee6]
	82	[4125]	LOADK    	R5 := 19.000000
	83	[4125]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	84	[4125]	SETTABLE 	R2 K23 R3 ; R2["Health"] := R3
	85	[4126]	GETUPVAL 	R2 U2 ; R2 := U2
	86	[4126]	SELF     	R3 R1 K15 ; R4 := R1; R3 := R1[0xef9a3ee6]
	87	[4126]	LOADK    	R5 := 48.000000
	88	[4126]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	89	[4126]	SETTABLE 	R2 K24 R3 ; R2["Shield"] := R3
	90	[4127]	GETUPVAL 	R2 U2 ; R2 := U2
	91	[4127]	SELF     	R3 R1 K15 ; R4 := R1; R3 := R1[0xef9a3ee6]
	92	[4127]	LOADK    	R5 := 44.000000
	93	[4127]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	94	[4127]	SETTABLE 	R2 K25 R3 ; R2["Reticle"] := R3
	95	[4129]	GETUPVAL 	R2 U3 ; R2 := U3
	96	[4129]	GETTABLE 	R2 R2 K26 ; R2 := R2[0x4c398318]
	97	[4129]	CALL     	R2 1 1 ; R2()
	98	[4132]	SELF     	R2 R0 K3 ; R3 := R0; R2 := R0[0x40e9c32b]
	99	[4132]	CALL     	R2 2 2 ; R2 := R2(R3)
	100	[4132]	SETUPVAL 	R2 U4 ; U4 := R2
	101	[4133]	GETUPVAL 	R2 U5 ; R2 := U5
	102	[4133]	GETUPVAL 	R3 U4 ; R3 := U4
	103	[4133]	SELF     	R3 R3 K28 ; R4 := R3; R3 := R3[0x21b2271b]
	104	[4133]	CALL     	R3 2 2 ; R3 := R3(R4)
	105	[4133]	SETTABLE 	R2 K27 R3 ; R2["HudScale"] := R3
	106	[4134]	GETUPVAL 	R2 U4 ; R2 := U4
	107	[4134]	SELF     	R2 R2 K29 ; R3 := R2; R2 := R2[0x963e3c9f]
	108	[4134]	CALL     	R2 2 2 ; R2 := R2(R3)
	109	[4134]	SETUPVAL 	R2 U6 ; U6 := R2
	110	[4136]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	111	[4136]	GETUPVAL 	R3 U7 ; R3 := U7
	112	[4136]	CALL     	R2 2 2 ; R2 := R2(R3)
	113	[4136]	TEST     	R2 1 ; if R2 then PC := 119
	114	[4136]	JMP      	119 ; PC := 119
	115	[4137]	GETUPVAL 	R2 U7 ; R2 := U7
	116	[4137]	SELF     	R2 R2 K30 ; R3 := R2; R2 := R2[0x1e9695e9]
	117	[4137]	GETUPVAL 	R4 U8 ; R4 := U8
	118	[4137]	CALL     	R2 3 1 ; R2(R3,R4)
	119	[4140]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	120	[4140]	GETUPVAL 	R3 U9 ; R3 := U9
	121	[4140]	CALL     	R2 2 2 ; R2 := R2(R3)
	122	[4140]	TEST     	R2 1 ; if R2 then PC := 128
	123	[4140]	JMP      	128 ; PC := 128
	124	[4141]	GETUPVAL 	R2 U9 ; R2 := U9
	125	[4141]	SELF     	R2 R2 K30 ; R3 := R2; R2 := R2[0x1e9695e9]
	126	[4141]	GETUPVAL 	R4 U8 ; R4 := U8
	127	[4141]	CALL     	R2 3 1 ; R2(R3,R4)
	128	[4144]	GETUPVAL 	R2 U10 ; R2 := U10
	129	[4144]	CALL     	R2 1 1 ; R2()
	130	[4146]	GETUPVAL 	R2 U11 ; R2 := U11
	131	[4146]	CALL     	R2 1 1 ; R2()
	132	[4148]	GETUPVAL 	R2 U12 ; R2 := U12
	133	[4148]	CALL     	R2 1 1 ; R2()
	134	[4150]	GETGLOBAL	R2 K31 ; R2 := 0xae91e43b
	135	[4150]	SELF     	R2 R2 K32 ; R3 := R2; R2 := R2[0x20b98db3]
	136	[4150]	LOADK    	R4 K33 ; R4 := "AbilityPanel.FocusButton.text"
	137	[4150]	LOADK    	R5 K34 ; R5 := "<ACTIVATE_ABILITY_MENU_4>"
	138	[4150]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	139	[4151]	GETGLOBAL	R2 K31 ; R2 := 0xae91e43b
	140	[4151]	SELF     	R2 R2 K32 ; R3 := R2; R2 := R2[0x20b98db3]
	141	[4151]	LOADK    	R4 K35 ; R4 := "RevivePanel.Callout.text"
	142	[4151]	LOADK    	R5 K36 ; R5 := "/Lotus/Language/SystemMessages/RevivePrompt"
	143	[4151]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	144	[4152]	RETURN   	R0 1 ; return 

function #124 <?:4155,4200> (197 instructions, 788 bytes at 0000021131B99F70)
1 param, 18 slots, 7 upvalues, 0 locals, 36 constants, 0 functions
	1	[4156]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	2	[4156]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x5b0290d2]
	3	[4156]	LOADK    	R3 K2 ; R3 := "AbilityPanel.ControllerCastingImage"
	4	[4156]	LOADK    	R4 := 11.000000
	5	[4156]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	6	[4156]	TEST     	R1 1 ; if R1 then PC := 9
	7	[4156]	JMP      	9 ; PC := 9
	8	[4157]	OP_LOADBOOL	R0 0 0 ; R0 := false
	9	[4159]	GETUPVAL 	R1 U0 ; R1 := U0
	10	[4159]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xf2df3db3]
	11	[4159]	MOVE     	R3 R0 ; R3 := R0
	12	[4159]	CALL     	R1 3 1 ; R1(R2,R3)
	13	[4161]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	14	[4161]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x5b0290d2]
	15	[4161]	LOADK    	R3 K4 ; R3 := "AbilityPanel"
	16	[4161]	LOADK    	R4 := 11.000000
	17	[4161]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	18	[4161]	TEST     	R1 0 ; if not R1 then PC := 44
	19	[4161]	JMP      	44 ; PC := 44
	20	[4162]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	21	[4162]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xaade900e]
	22	[4162]	LOADK    	R3 K6 ; R3 := "WeaponFrame"
	23	[4162]	LOADK    	R4 := 11.000000
	24	[4162]	TEST     	R0 1 ; if R0 then PC := 41
	25	[4162]	JMP      	41 ; PC := 41
	26	[4162]	GETUPVAL 	R5 U1 ; R5 := U1
	27	[4162]	GETTABLE 	R5 R5 K7 ; R5 := R5["IsOperator"]
	28	[4162]	TEST     	R5 0 ; if not R5 then PC := 42
	29	[4162]	JMP      	42 ; PC := 42
	30	[4162]	GETGLOBAL	R5 K8 ; R5 := 0x7b998233
	31	[4162]	GETUPVAL 	R6 U2 ; R6 := U2
	32	[4162]	GETTABLE 	R6 R6 K9 ; R6 := R6["ptr"]
	33	[4162]	CALL     	R5 2 2 ; R5 := R5(R6)
	34	[4162]	TEST     	R5 1 ; if R5 then PC := 41
	35	[4162]	JMP      	41 ; PC := 41
	36	[4162]	GETUPVAL 	R5 U2 ; R5 := U2
	37	[4162]	GETTABLE 	R5 R5 K9 ; R5 := R5["ptr"]
	38	[4162]	SELF     	R5 R5 K10 ; R6 := R5; R5 := R5[0x81f3a598]
	39	[4162]	CALL     	R5 2 2 ; R5 := R5(R6)
	40	[4162]	JMP      	43 ; PC := 43
	41	[4162]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 42
	42	[4162]	OP_LOADBOOL	R5 1 0 ; R5 := true
	43	[4162]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	44	[4165]	GETUPVAL 	R1 U3 ; R1 := U3
	45	[4165]	GETTABLE 	R1 R1 K11 ; R1 := R1[0x06d055f9]
	46	[4165]	GETUPVAL 	R2 U1 ; R2 := U1
	47	[4165]	GETTABLE 	R2 R2 K12 ; R2 := R2["MissionType"]
	48	[4165]	EQ       	1 R2 K14 ; if R2 == 31.000000 then PC := 51
	49	[4165]	JMP      	51 ; PC := 51
	50	[4165]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 51
	51	[4165]	OP_LOADBOOL	R2 1 0 ; R2 := true
	52	[4165]	LOADK    	R3 := 100.000000
	53	[4165]	LOADK    	R4 := 0.000000
	54	[4165]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	55	[4167]	TEST     	R1 0 ; if not R1 then PC := 67
	56	[4167]	JMP      	67 ; PC := 67
	57	[4167]	TEST     	R0 0 ; if not R0 then PC := 67
	58	[4167]	JMP      	67 ; PC := 67
	59	[4168]	GETUPVAL 	R2 U4 ; R2 := U4
	60	[4168]	CALL     	R2 1 2 ; R2 := R2()
	61	[4169]	GETGLOBAL	R3 K0 ; R3 := 0xae91e43b
	62	[4169]	SELF     	R3 R3 K15 ; R4 := R3; R3 := R3[0x5f56eeab]
	63	[4169]	LOADK    	R5 K16 ; R5 := "AbilityPanel.TacticalCallout"
	64	[4169]	LOADK    	R6 := 29.000000
	65	[4169]	MOVE     	R7 R2 ; R7 := R2
	66	[4169]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	67	[4172]	GETGLOBAL	R3 K17 ; R3 := 0x25312c9b
	68	[4172]	GETGLOBAL	R4 K0 ; R4 := 0xae91e43b
	69	[4172]	LOADK    	R5 K2 ; R5 := "AbilityPanel.ControllerCastingImage"
	70	[4172]	LOADK    	R6 := 8.000000
	71	[4172]	NEWTABLE 	R7 1 0 ; R7 := {}
	72	[4172]	LOADK    	R8 := 10.000000
	73	[4172]	SETLIST  	R7 1 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
	74	[4172]	NEWTABLE 	R8 0 0 ; R8 := {}
	75	[4172]	GETUPVAL 	R9 U3 ; R9 := U3
	76	[4172]	GETTABLE 	R9 R9 K11 ; R9 := R9[0x06d055f9]
	77	[4172]	MOVE     	R10 R0 ; R10 := R0
	78	[4172]	LOADK    	R11 := 100.000000
	79	[4172]	LOADK    	R12 := 0.000000
	80	[4172]	CALL     	R9 4 0 ; R9,... := R9(R10,R11,R12)
	81	[4172]	SETLIST  	R8 0 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 0
	82	[4172]	LOADK    	R9 K19 ; R9 := 0.150000
	83	[4172]	CALL     	R3 7 1 ; R3(R4,R5,R6,R7,R8,R9)
	84	[4173]	GETGLOBAL	R3 K17 ; R3 := 0x25312c9b
	85	[4173]	GETGLOBAL	R4 K0 ; R4 := 0xae91e43b
	86	[4173]	LOADK    	R5 K20 ; R5 := "AbilityPanel.ControllerCastingButtons"
	87	[4173]	LOADK    	R6 := 8.000000
	88	[4173]	NEWTABLE 	R7 1 0 ; R7 := {}
	89	[4173]	LOADK    	R8 := 10.000000
	90	[4173]	SETLIST  	R7 1 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
	91	[4173]	NEWTABLE 	R8 0 0 ; R8 := {}
	92	[4173]	GETUPVAL 	R9 U3 ; R9 := U3
	93	[4173]	GETTABLE 	R9 R9 K11 ; R9 := R9[0x06d055f9]
	94	[4173]	MOVE     	R10 R0 ; R10 := R0
	95	[4173]	LOADK    	R11 := 100.000000
	96	[4173]	LOADK    	R12 := 0.000000
	97	[4173]	CALL     	R9 4 0 ; R9,... := R9(R10,R11,R12)
	98	[4173]	SETLIST  	R8 0 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 0
	99	[4173]	LOADK    	R9 K19 ; R9 := 0.150000
	100	[4173]	CALL     	R3 7 1 ; R3(R4,R5,R6,R7,R8,R9)
	101	[4174]	GETGLOBAL	R3 K17 ; R3 := 0x25312c9b
	102	[4174]	GETGLOBAL	R4 K0 ; R4 := 0xae91e43b
	103	[4174]	LOADK    	R5 K21 ; R5 := "AbilityPanel.FocusButton"
	104	[4174]	LOADK    	R6 := 8.000000
	105	[4174]	NEWTABLE 	R7 1 0 ; R7 := {}
	106	[4174]	LOADK    	R8 := 10.000000
	107	[4174]	SETLIST  	R7 1 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
	108	[4174]	NEWTABLE 	R8 0 0 ; R8 := {}
	109	[4174]	GETUPVAL 	R9 U3 ; R9 := U3
	110	[4174]	GETTABLE 	R9 R9 K11 ; R9 := R9[0x06d055f9]
	111	[4174]	MOVE     	R10 R0 ; R10 := R0
	112	[4174]	LOADK    	R11 := 100.000000
	113	[4174]	LOADK    	R12 := 0.000000
	114	[4174]	CALL     	R9 4 0 ; R9,... := R9(R10,R11,R12)
	115	[4174]	SETLIST  	R8 0 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 0
	116	[4174]	LOADK    	R9 K19 ; R9 := 0.150000
	117	[4174]	CALL     	R3 7 1 ; R3(R4,R5,R6,R7,R8,R9)
	118	[4175]	GETGLOBAL	R3 K17 ; R3 := 0x25312c9b
	119	[4175]	GETGLOBAL	R4 K0 ; R4 := 0xae91e43b
	120	[4175]	LOADK    	R5 K16 ; R5 := "AbilityPanel.TacticalCallout"
	121	[4175]	LOADK    	R6 := 8.000000
	122	[4175]	NEWTABLE 	R7 1 0 ; R7 := {}
	123	[4175]	LOADK    	R8 := 10.000000
	124	[4175]	SETLIST  	R7 1 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
	125	[4175]	NEWTABLE 	R8 0 0 ; R8 := {}
	126	[4175]	GETUPVAL 	R9 U3 ; R9 := U3
	127	[4175]	GETTABLE 	R9 R9 K11 ; R9 := R9[0x06d055f9]
	128	[4175]	MOVE     	R10 R0 ; R10 := R0
	129	[4175]	MOVE     	R11 R1 ; R11 := R1
	130	[4175]	LOADK    	R12 := 0.000000
	131	[4175]	CALL     	R9 4 0 ; R9,... := R9(R10,R11,R12)
	132	[4175]	SETLIST  	R8 0 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 0
	133	[4175]	LOADK    	R9 K19 ; R9 := 0.150000
	134	[4175]	CALL     	R3 7 1 ; R3(R4,R5,R6,R7,R8,R9)
	135	[4177]	LOADNIL  	R3 R3 ; R3 := nil
	136	[4178]	TEST     	R0 0 ; if not R0 then PC := 140
	137	[4178]	JMP      	140 ; PC := 140
	138	[4179]	GETUPVAL 	R3 U5 ; R3 := U5
	139	[4179]	JMP      	141 ; PC := 141
	140	[4181]	GETUPVAL 	R3 U6 ; R3 := U6
	141	[4184]	GETGLOBAL	R4 K22 ; R4 := 0xcfc01047
	142	[4184]	MOVE     	R5 R3 ; R5 := R3
	143	[4184]	CALL     	R4 2 4 ; R4,R5,R6 := R4(R5)
	144	[4184]	JMP      	195 ; PC := 195
	145	[4186]	LOADNIL  	R9 R9 ; R9 := nil
	146	[4188]	GETTABLE 	R10 R8 K23 ; R10 := R8["Ability"]
	147	[4188]	EQ       	0 R10 K24 ; if R10 ~= "ACTIVATE_ABILITY_MENU_0" then PC := 155
	148	[4188]	JMP      	155 ; PC := 155
	149	[4189]	GETGLOBAL	R10 K25 ; R10 := 0x7f5022cf
	150	[4189]	GETTABLE 	R10 R10 K26 ; R10 := R10[0xe8072ded]
	151	[4189]	LOADK    	R11 K27 ; R11 := "AbilityPanel.Ability1"
	152	[4189]	CALL     	R10 2 2 ; R10 := R10(R11)
	153	[4189]	MOVE     	R9 R10 ; R9 := R10
	154	[4189]	JMP      	181 ; PC := 181
	155	[4190]	GETTABLE 	R10 R8 K23 ; R10 := R8["Ability"]
	156	[4190]	EQ       	0 R10 K28 ; if R10 ~= "ACTIVATE_ABILITY_MENU_1" then PC := 164
	157	[4190]	JMP      	164 ; PC := 164
	158	[4191]	GETGLOBAL	R10 K25 ; R10 := 0x7f5022cf
	159	[4191]	GETTABLE 	R10 R10 K26 ; R10 := R10[0xe8072ded]
	160	[4191]	LOADK    	R11 K29 ; R11 := "AbilityPanel.Ability2"
	161	[4191]	CALL     	R10 2 2 ; R10 := R10(R11)
	162	[4191]	MOVE     	R9 R10 ; R9 := R10
	163	[4191]	JMP      	181 ; PC := 181
	164	[4192]	GETTABLE 	R10 R8 K23 ; R10 := R8["Ability"]
	165	[4192]	EQ       	0 R10 K30 ; if R10 ~= "ACTIVATE_ABILITY_MENU_2" then PC := 173
	166	[4192]	JMP      	173 ; PC := 173
	167	[4193]	GETGLOBAL	R10 K25 ; R10 := 0x7f5022cf
	168	[4193]	GETTABLE 	R10 R10 K26 ; R10 := R10[0xe8072ded]
	169	[4193]	LOADK    	R11 K31 ; R11 := "AbilityPanel.Ability3"
	170	[4193]	CALL     	R10 2 2 ; R10 := R10(R11)
	171	[4193]	MOVE     	R9 R10 ; R9 := R10
	172	[4193]	JMP      	181 ; PC := 181
	173	[4194]	GETTABLE 	R10 R8 K23 ; R10 := R8["Ability"]
	174	[4194]	EQ       	0 R10 K32 ; if R10 ~= "ACTIVATE_ABILITY_MENU_3" then PC := 181
	175	[4194]	JMP      	181 ; PC := 181
	176	[4195]	GETGLOBAL	R10 K25 ; R10 := 0x7f5022cf
	177	[4195]	GETTABLE 	R10 R10 K26 ; R10 := R10[0xe8072ded]
	178	[4195]	LOADK    	R11 K33 ; R11 := "AbilityPanel.Ability4"
	179	[4195]	CALL     	R10 2 2 ; R10 := R10(R11)
	180	[4195]	MOVE     	R9 R10 ; R9 := R10
	181	[4198]	GETGLOBAL	R10 K17 ; R10 := 0x25312c9b
	182	[4198]	GETGLOBAL	R11 K0 ; R11 := 0xae91e43b
	183	[4198]	MOVE     	R12 R9 ; R12 := R9
	184	[4198]	LOADK    	R13 := 8.000000
	185	[4198]	NEWTABLE 	R14 2 0 ; R14 := {}
	186	[4198]	LOADK    	R15 := 0.000000
	187	[4198]	LOADK    	R16 := 1.000000
	188	[4198]	SETLIST  	R14 2 1 ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 2
	189	[4198]	NEWTABLE 	R15 2 0 ; R15 := {}
	190	[4198]	GETTABLE 	R16 R8 K34 ; R16 := R8["X"]
	191	[4198]	GETTABLE 	R17 R8 K35 ; R17 := R8["Y"]
	192	[4198]	SETLIST  	R15 2 1 ; R15[(1-1)*FPF+i] := R(15+i), 1 <= i <= 2
	193	[4198]	LOADK    	R16 K19 ; R16 := 0.150000
	194	[4198]	CALL     	R10 7 1 ; R10(R11,R12,R13,R14,R15,R16)
	195	[4184]	TFORLOOP 	R4 2 ; R7,R8 := R4(R5,R6); if R7 ~= nil then begin PC = 145; R6 := R7 end
	196	[4198]	JMP      	145 ; PC := 145
	197	[4200]	RETURN   	R0 1 ; return 

function #125 <?:4202,4214> (31 instructions, 124 bytes at 0000021121CCC5A0)
1 param, 6 slots, 1 upvalue, 0 locals, 7 constants, 0 functions
	1	[4203]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[4203]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[4203]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[4203]	TEST     	R1 0 ; if not R1 then PC := 7
	5	[4203]	JMP      	7 ; PC := 7
	6	[4204]	RETURN   	R0 1 ; return 
	7	[4207]	GETGLOBAL	R1 K1 ; R1 := 0x03f57322
	8	[4207]	MOVE     	R2 R0 ; R2 := R0
	9	[4207]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[4207]	EQ       	0 R1 K2 ; if R1 ~= nil then PC := 13
	11	[4207]	JMP      	13 ; PC := 13
	12	[4208]	LOADK    	R0 := 9.000000
	13	[4211]	GETUPVAL 	R1 U0 ; R1 := U0
	14	[4211]	GETGLOBAL	R2 K1 ; R2 := 0x03f57322
	15	[4211]	MOVE     	R3 R0 ; R3 := R0
	16	[4211]	CALL     	R2 2 2 ; R2 := R2(R3)
	17	[4211]	SETTABLE 	R1 K3 R2 ; R1["mColumns"] := R2
	18	[4212]	GETUPVAL 	R1 U0 ; R1 := U0
	19	[4212]	GETUPVAL 	R2 U0 ; R2 := U0
	20	[4212]	GETTABLE 	R2 R2 K3 ; R2 := R2["mColumns"]
	21	[4212]	GETUPVAL 	R3 U0 ; R3 := U0
	22	[4212]	GETTABLE 	R3 R3 K5 ; R3 := R3["mRows"]
	23	[4212]	MUL      	R2 R2 R3 ; R2 := R2 * R3
	24	[4212]	SETTABLE 	R1 K4 R2 ; R1["mVisibleElements"] := R2
	25	[4213]	GETUPVAL 	R1 U0 ; R1 := U0
	26	[4213]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x71e9ac81]
	27	[4213]	LOADNIL  	R3 R3 ; R3 := nil
	28	[4213]	OP_LOADBOOL	R4 1 0 ; R4 := true
	29	[4213]	OP_LOADBOOL	R5 1 0 ; R5 := true
	30	[4213]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	31	[4214]	RETURN   	R0 1 ; return 

function #126 <?:4216,4507> (55 instructions, 220 bytes at 000002111C7A0100)
0 params, 7 slots, 6 upvalues, 0 locals, 24 constants, 4 functions
	1	[4217]	GETGLOBAL	R0 K0 ; R0 := 0x2d0fad09
	2	[4217]	LOADK    	R1 K1 ; R1 := "EE.Interface.Components.Grid"
	3	[4217]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[4218]	GETTABLE 	R1 R0 K2 ; R1 := R0[0xda0c93a2]
	5	[4218]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	6	[4218]	LOADK    	R3 K4 ; R3 := "HealthAndShield.StatusEffectItem"
	7	[4218]	LOADNIL  	R4 R4 ; R4 := nil
	8	[4218]	LOADK    	R5 := 9.000000
	9	[4218]	LOADK    	R6 := 2.000000
	10	[4218]	CALL     	R1 6 2 ; R1 := R1(R2,R3,R4,R5,R6)
	11	[4218]	SETUPVAL 	R1 U0 ; U0 := R1
	12	[4219]	GETUPVAL 	R1 U0 ; R1 := U0
	13	[4219]	SETTABLE 	R1 K5 K6 ; R1["mColumnSeparation"] := -50.000000
	14	[4220]	GETUPVAL 	R1 U0 ; R1 := U0
	15	[4220]	SETTABLE 	R1 K7 K8 ; R1["mRowSeparation"] := 50.000000
	16	[4221]	GETUPVAL 	R1 U0 ; R1 := U0
	17	[4221]	SETTABLE 	R1 K9 K10 ; R1["mVisNameId"] := nil
	18	[4222]	GETUPVAL 	R1 U0 ; R1 := U0
	19	[4222]	SETTABLE 	R1 K11 K10 ; R1["mVisNameFadeTimer"] := nil
	20	[4223]	GETUPVAL 	R1 U0 ; R1 := U0
	21	[4223]	SETTABLE 	R1 K12 K13 ; R1["mVisNameFadeDuration"] := 1.000000
	22	[4224]	GETUPVAL 	R1 U0 ; R1 := U0
	23	[4224]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	24	[4224]	SELF     	R2 R2 K15 ; R3 := R2; R2 := R2[0x91a24e4b]
	25	[4224]	LOADK    	R4 K16 ; R4 := "HealthAndShield.StatusEffectItem.StatName.Name"
	26	[4224]	LOADK    	R5 := 0.000000
	27	[4224]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	28	[4224]	SETTABLE 	R1 K14 R2 ; R1["mOrigStatEffectNameXPos"] := R2
	29	[4225]	GETUPVAL 	R1 U0 ; R1 := U0
	30	[4225]	GETGLOBAL	R2 K18 ; R2 := 0x7ed0a956
	31	[4225]	LOADK    	R3 K19 ; R3 := "/Lotus/Types/PickUps/FocusBoostBuff"
	32	[4225]	CALL     	R2 2 2 ; R2 := R2(R3)
	33	[4225]	SETTABLE 	R1 K17 R2 ; R1["mFocusBoostAbilityType"] := R2
	34	[4226]	GETUPVAL 	R1 U0 ; R1 := U0
	35	[4259]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	36	[4259]	GETUPVAL 	R0 U0 ; R0 := U0
	37	[4259]	GETUPVAL 	R0 U1 ; R0 := U1
	38	[4259]	SETTABLE 	R1 K20 R2 ; R1["TryToShowStatName"] := R2
	39	[4260]	GETUPVAL 	R1 U0 ; R1 := U0
	40	[4274]	CLOSURE  	R2 1 ; R2 := closure(Function #2)
	41	[4274]	GETUPVAL 	R0 U1 ; R0 := U1
	42	[4274]	GETUPVAL 	R0 U0 ; R0 := U0
	43	[4274]	SETTABLE 	R1 K21 R2 ; R1["mOnRemovedCallback"] := R2
	44	[4275]	GETUPVAL 	R1 U0 ; R1 := U0
	45	[4280]	CLOSURE  	R2 2 ; R2 := closure(Function #3)
	46	[4280]	SETTABLE 	R1 K22 R2 ; R1["mClipCreatedCallback"] := R2
	47	[4281]	GETUPVAL 	R1 U0 ; R1 := U0
	48	[4506]	CLOSURE  	R2 3 ; R2 := closure(Function #4)
	49	[4506]	GETUPVAL 	R0 U2 ; R0 := U2
	50	[4506]	GETUPVAL 	R0 U3 ; R0 := U3
	51	[4506]	GETUPVAL 	R0 U0 ; R0 := U0
	52	[4506]	GETUPVAL 	R0 U4 ; R0 := U4
	53	[4506]	GETUPVAL 	R0 U5 ; R0 := U5
	54	[4506]	SETTABLE 	R1 K23 R2 ; R1["mElementDrawCallback"] := R2
	55	[4507]	RETURN   	R0 1 ; return 

function #127 <?:4509,4525> (26 instructions, 104 bytes at 000002112F3316B0)
0 params, 5 slots, 3 upvalues, 0 locals, 4 constants, 1 function
	1	[4510]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[4510]	CALL     	R0 1 1 ; R0()
	3	[4512]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	4	[4512]	GETUPVAL 	R1 U1 ; R1 := U1
	5	[4512]	CALL     	R0 2 2 ; R0 := R0(R1)
	6	[4512]	TEST     	R0 1 ; if R0 then PC := 11
	7	[4512]	JMP      	11 ; PC := 11
	8	[4513]	GETUPVAL 	R0 U1 ; R0 := U1
	9	[4513]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x008ed227]
	10	[4513]	CALL     	R0 2 1 ; R0(R1)
	11	[4516]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	12	[4516]	GETUPVAL 	R1 U2 ; R1 := U2
	13	[4516]	CALL     	R0 2 2 ; R0 := R0(R1)
	14	[4516]	TEST     	R0 1 ; if R0 then PC := 26
	15	[4516]	JMP      	26 ; PC := 26
	16	[4517]	GETUPVAL 	R0 U2 ; R0 := U2
	17	[4517]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xea061e98]
	18	[4522]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	19	[4517]	CALL     	R0 3 1 ; R0(R1,R2)
	20	[4523]	GETUPVAL 	R0 U2 ; R0 := U2
	21	[4523]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x71e9ac81]
	22	[4523]	LOADNIL  	R2 R2 ; R2 := nil
	23	[4523]	OP_LOADBOOL	R3 1 0 ; R3 := true
	24	[4523]	OP_LOADBOOL	R4 1 0 ; R4 := true
	25	[4523]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	26	[4525]	RETURN   	R0 1 ; return 

function #128 <?:4527,4533> (16 instructions, 64 bytes at 0000021132F89150)
4 params, 9 slots, 1 upvalue, 0 locals, 8 constants, 0 functions
	1	[4528]	GETUPVAL 	R4 U0 ; R4 := U0
	2	[4528]	SETTABLE 	R4 K0 R1 ; R4["Icon"] := R1
	3	[4529]	GETUPVAL 	R4 U0 ; R4 := U0
	4	[4529]	GETGLOBAL	R5 K2 ; R5 := 0xae91e43b
	5	[4529]	SELF     	R5 R5 K3 ; R6 := R5; R5 := R5[0x42b04007]
	6	[4529]	MOVE     	R7 R0 ; R7 := R0
	7	[4529]	OP_LOADBOOL	R8 1 0 ; R8 := true
	8	[4529]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	9	[4529]	SETTABLE 	R4 K1 R5 ; R4["Message"] := R5
	10	[4530]	GETUPVAL 	R4 U0 ; R4 := U0
	11	[4530]	SETTABLE 	R4 K4 R2 ; R4["IconSize"] := R2
	12	[4531]	GETUPVAL 	R4 U0 ; R4 := U0
	13	[4531]	SETTABLE 	R4 K5 R3 ; R4["Tint"] := R3
	14	[4532]	GETUPVAL 	R4 U0 ; R4 := U0
	15	[4532]	SETTABLE 	R4 K6 K7 ; R4["UpdateOverrides"] := true
	16	[4533]	RETURN   	R0 1 ; return 

function #129 <?:4535,4538> (18 instructions, 72 bytes at 0000021132F895C0)
1 param, 9 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[4536]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	2	[4536]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xaade900e]
	3	[4536]	LOADK    	R3 K2 ; R3 := "MiniMapContainer.VoidTearProgress"
	4	[4536]	LOADK    	R4 := 11.000000
	5	[4536]	MOVE     	R5 R0 ; R5 := R0
	6	[4536]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	7	[4537]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	8	[4537]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x67bc869f]
	9	[4537]	LOADK    	R3 K2 ; R3 := "MiniMapContainer.VoidTearProgress"
	10	[4537]	LOADK    	R4 := 10.000000
	11	[4537]	GETUPVAL 	R5 U0 ; R5 := U0
	12	[4537]	GETTABLE 	R5 R5 K4 ; R5 := R5[0x06d055f9]
	13	[4537]	MOVE     	R6 R0 ; R6 := R0
	14	[4537]	LOADK    	R7 := 100.000000
	15	[4537]	LOADK    	R8 := 0.000000
	16	[4537]	CALL     	R5 4 0 ; R5,... := R5(R6,R7,R8)
	17	[4537]	CALL     	R1 0 1 ; R1(R2,...)
	18	[4538]	RETURN   	R0 1 ; return 

function #130 <?:4540,4543> (17 instructions, 68 bytes at 0000021124176BF0)
2 params, 8 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[4541]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[4541]	GETTABLE 	R2 R2 K0 ; R2 := R2[0x06d055f9]
	3	[4541]	MOVE     	R3 R1 ; R3 := R1
	4	[4541]	GETGLOBAL	R4 K1 ; R4 := 0xae91e43b
	5	[4541]	SELF     	R4 R4 K2 ; R5 := R4; R4 := R4[0x91a24e4b]
	6	[4541]	LOADK    	R6 K3 ; R6 := "MiniMapContainer.MissionCountdown"
	7	[4541]	LOADK    	R7 := 1.000000
	8	[4541]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	9	[4541]	LOADK    	R5 := 0.000000
	10	[4541]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	11	[4542]	GETGLOBAL	R3 K1 ; R3 := 0xae91e43b
	12	[4542]	SELF     	R3 R3 K4 ; R4 := R3; R3 := R3[0x67bc869f]
	13	[4542]	LOADK    	R5 K3 ; R5 := "MiniMapContainer.MissionCountdown"
	14	[4542]	LOADK    	R6 := 1.000000
	15	[4542]	ADD      	R7 R2 R0 ; R7 := R2 + R0
	16	[4542]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	17	[4543]	RETURN   	R0 1 ; return 

function #131 <?:4545,4555> (21 instructions, 84 bytes at 000002111F44C860)
3 params, 8 slots, 1 upvalue, 0 locals, 9 constants, 0 functions
	1	[4546]	GETGLOBAL	R3 K0 ; R3 := 0x6c97a788
	2	[4546]	GETTABLE 	R3 R3 K1 ; R3 := R3[0x48b81819]
	3	[4546]	CALL     	R3 1 2 ; R3 := R3()
	4	[4548]	SETTABLE 	R3 K2 R0 ; R3["mTitle"] := R0
	5	[4549]	GETGLOBAL	R4 K4 ; R4 := 0xae91e43b
	6	[4549]	SELF     	R4 R4 K5 ; R5 := R4; R4 := R4[0x42b04007]
	7	[4549]	MOVE     	R6 R1 ; R6 := R1
	8	[4549]	OP_LOADBOOL	R7 1 0 ; R7 := true
	9	[4549]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	10	[4549]	SETTABLE 	R3 K3 R4 ; R3["mDescription"] := R4
	11	[4550]	SETTABLE 	R3 K6 R2 ; R3["mItem"] := R2
	12	[4552]	GETGLOBAL	R4 K7 ; R4 := 0x7b998233
	13	[4552]	GETUPVAL 	R5 U0 ; R5 := U0
	14	[4552]	CALL     	R4 2 2 ; R4 := R4(R5)
	15	[4552]	TEST     	R4 1 ; if R4 then PC := 21
	16	[4552]	JMP      	21 ; PC := 21
	17	[4553]	GETUPVAL 	R4 U0 ; R4 := U0
	18	[4553]	SELF     	R4 R4 K8 ; R5 := R4; R4 := R4[0x1a8d3500]
	19	[4553]	MOVE     	R6 R3 ; R6 := R3
	20	[4553]	CALL     	R4 3 1 ; R4(R5,R6)
	21	[4555]	RETURN   	R0 1 ; return 

function #132 <?:4557,4559> (3 instructions, 12 bytes at 0000021132F91EA0)
1 param, 2 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[4558]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[4558]	SETTABLE 	R1 K0 R0 ; R1["Enabled"] := R0
	3	[4559]	RETURN   	R0 1 ; return 

function #133 <?:4561,4563> (12 instructions, 48 bytes at 0000021132F90F80)
2 params, 8 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[4562]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	2	[4562]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0xc0a3774b]
	3	[4562]	LOADK    	R4 K2 ; R4 := "AbilityPanel.Ability"
	4	[4562]	GETGLOBAL	R5 K3 ; R5 := 0x64fb1586
	5	[4562]	ADD      	R6 R0 K4 ; R6 := R0 + 1.000000
	6	[4562]	CALL     	R5 2 2 ; R5 := R5(R6)
	7	[4562]	CONCAT   	R4 R4 R5 ; R4 := R4 .. R5
	8	[4562]	LOADK    	R5 K5 ; R5 := "ActiveAnim"
	9	[4562]	LOADK    	R6 := 11.000000
	10	[4562]	MOVE     	R7 R1 ; R7 := R1
	11	[4562]	CALL     	R2 6 1 ; R2(R3,R4,R5,R6,R7)
	12	[4563]	RETURN   	R0 1 ; return 

function #134 <?:4565,4567> (6 instructions, 24 bytes at 0000021132F91A90)
2 params, 6 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[4566]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[4566]	SELF     	R2 R2 K0 ; R3 := R2; R2 := R2[0x71ddff47]
	3	[4566]	SUB      	R4 R0 K1 ; R4 := R0 - 1.000000
	4	[4566]	MOVE     	R5 R1 ; R5 := R1
	5	[4566]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	6	[4567]	RETURN   	R0 1 ; return 

function #135 <?:4569,4571> (6 instructions, 24 bytes at 0000021132F8A420)
2 params, 6 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[4570]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[4570]	SELF     	R2 R2 K0 ; R3 := R2; R2 := R2[0x82675750]
	3	[4570]	MOVE     	R4 R0 ; R4 := R0
	4	[4570]	MOVE     	R5 R1 ; R5 := R1
	5	[4570]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	6	[4571]	RETURN   	R0 1 ; return 

function #136 <?:4573,4589> (56 instructions, 224 bytes at 0000021132F74110)
3 params, 11 slots, 3 upvalues, 0 locals, 15 constants, 0 functions
	1	[4574]	GETGLOBAL	R3 K0 ; R3 := 0xe72d2edb
	2	[4574]	EQ       	1 R3 K2 ; if R3 == 0.000000 then PC := 8
	3	[4574]	JMP      	8 ; PC := 8
	4	[4574]	GETGLOBAL	R3 K0 ; R3 := 0xe72d2edb
	5	[4574]	EQ       	1 R3 K3 ; if R3 == 4.000000 then PC := 8
	6	[4574]	JMP      	8 ; PC := 8
	7	[4576]	RETURN   	R0 1 ; return 
	8	[4578]	GETGLOBAL	R3 K4 ; R3 := 0x7b998233
	9	[4578]	MOVE     	R4 R1 ; R4 := R1
	10	[4578]	CALL     	R3 2 2 ; R3 := R3(R4)
	11	[4578]	TEST     	R3 1 ; if R3 then PC := 56
	12	[4578]	JMP      	56 ; PC := 56
	13	[4579]	GETUPVAL 	R3 U0 ; R3 := U0
	14	[4579]	GETTABLE 	R3 R3 K5 ; R3 := R3[0xb5be5d4a]
	15	[4579]	GETGLOBAL	R4 K6 ; R4 := 0xae91e43b
	16	[4579]	LOADK    	R5 K7 ; R5 := "AbilityPanel.Ability"
	17	[4579]	MOVE     	R6 R0 ; R6 := R0
	18	[4579]	LOADK    	R7 K8 ; R7 := ".Icon"
	19	[4579]	CONCAT   	R5 R5 R7 ; R5 := R5 .. R6 .. R7
	20	[4579]	OP_LOADBOOL	R6 1 0 ; R6 := true
	21	[4579]	CALL     	R3 4 3 ; R3,R4 := R3(R4,R5,R6)
	22	[4580]	GETUPVAL 	R5 U1 ; R5 := U1
	23	[4580]	GETUPVAL 	R6 U0 ; R6 := U0
	24	[4580]	GETTABLE 	R6 R6 K9 ; R6 := R6[0x5a22d251]
	25	[4580]	GETGLOBAL	R7 K6 ; R7 := 0xae91e43b
	26	[4580]	MOVE     	R8 R1 ; R8 := R1
	27	[4580]	MOVE     	R9 R3 ; R9 := R3
	28	[4580]	MOVE     	R10 R4 ; R10 := R4
	29	[4580]	CALL     	R6 5 2 ; R6 := R6(R7,R8,R9,R10)
	30	[4580]	SETTABLE 	R5 R0 R6 ; R5[R0] := R6
	31	[4582]	TEST     	R2 1 ; if R2 then PC := 56
	32	[4582]	JMP      	56 ; PC := 56
	33	[4582]	GETGLOBAL	R5 K4 ; R5 := 0x7b998233
	34	[4582]	GETUPVAL 	R6 U1 ; R6 := U1
	35	[4582]	GETTABLE 	R6 R6 R0 ; R6 := R6[R0]
	36	[4582]	CALL     	R5 2 2 ; R5 := R5(R6)
	37	[4582]	TEST     	R5 1 ; if R5 then PC := 56
	38	[4582]	JMP      	56 ; PC := 56
	39	[4583]	GETUPVAL 	R5 U1 ; R5 := U1
	40	[4583]	GETTABLE 	R5 R5 R0 ; R5 := R5[R0]
	41	[4583]	SELF     	R5 R5 K10 ; R6 := R5; R5 := R5[0xf2deaf69]
	42	[4583]	GETGLOBAL	R7 K11 ; R7 := gParticleSysType
	43	[4583]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	44	[4583]	TEST     	R5 0 ; if not R5 then PC := 56
	45	[4583]	JMP      	56 ; PC := 56
	46	[4584]	GETGLOBAL	R5 K12 ; R5 := 0x60130201
	47	[4584]	GETUPVAL 	R6 U2 ; R6 := U2
	48	[4584]	GETTABLE 	R6 R6 K13 ; R6 := R6["UnselectedAbility"]
	49	[4584]	CALL     	R5 2 2 ; R5 := R5(R6)
	50	[4585]	GETUPVAL 	R6 U1 ; R6 := U1
	51	[4585]	GETTABLE 	R6 R6 R0 ; R6 := R6[R0]
	52	[4585]	SELF     	R6 R6 K14 ; R7 := R6; R6 := R6[0x8feccd8b]
	53	[4585]	MOVE     	R8 R5 ; R8 := R5
	54	[4585]	MOVE     	R9 R5 ; R9 := R5
	55	[4585]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	56	[4589]	RETURN   	R0 1 ; return 

function #137 <?:4591,4598> (20 instructions, 80 bytes at 000002111C7B3130)
2 params, 5 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[4592]	EQ       	0 R1 K0 ; if R1 ~= "true" then PC := 20
	2	[4592]	JMP      	20 ; PC := 20
	3	[4593]	GETGLOBAL	R2 K1 ; R2 := 0x03f57322
	4	[4593]	MOVE     	R3 R0 ; R3 := R0
	5	[4593]	CALL     	R2 2 2 ; R2 := R2(R3)
	6	[4593]	MOVE     	R0 R2 ; R0 := R2
	7	[4594]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	8	[4594]	GETGLOBAL	R3 K3 ; R3 := 0x208bb2bc
	9	[4594]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[4594]	TEST     	R2 1 ; if R2 then PC := 20
	11	[4594]	JMP      	20 ; PC := 20
	12	[4594]	LE       	0 K4 R0 ; if 1.000000 > R0 then PC := 20
	13	[4594]	JMP      	20 ; PC := 20
	14	[4594]	LE       	0 R0 K5 ; if R0 > 4.000000 then PC := 20
	15	[4594]	JMP      	20 ; PC := 20
	16	[4595]	GETUPVAL 	R2 U0 ; R2 := U0
	17	[4595]	MOVE     	R3 R0 ; R3 := R0
	18	[4595]	GETGLOBAL	R4 K3 ; R4 := 0x208bb2bc
	19	[4595]	CALL     	R2 3 1 ; R2(R3,R4)
	20	[4598]	RETURN   	R0 1 ; return 

function #138 <?:4600,4608> (16 instructions, 64 bytes at 000002111C79BB40)
2 params, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[4601]	GETGLOBAL	R2 K0 ; R2 := _T
	2	[4601]	SETTABLE 	R2 R0 R1 ; R2[R0] := R1
	3	[4603]	GETGLOBAL	R2 K0 ; R2 := _T
	4	[4603]	GETTABLE 	R2 R2 K1 ; R2 := R2["HudNonQueuedFunctions"]
	5	[4603]	EQ       	0 R2 K2 ; if R2 ~= nil then PC := 10
	6	[4603]	JMP      	10 ; PC := 10
	7	[4604]	GETGLOBAL	R2 K0 ; R2 := _T
	8	[4604]	NEWTABLE 	R3 0 0 ; R3 := {}
	9	[4604]	SETTABLE 	R2 K1 R3 ; R2["HudNonQueuedFunctions"] := R3
	10	[4607]	GETGLOBAL	R2 K3 ; R2 := 0x33bdd652
	11	[4607]	GETTABLE 	R2 R2 K4 ; R2 := R2[0x23d5322f]
	12	[4607]	GETGLOBAL	R3 K0 ; R3 := _T
	13	[4607]	GETTABLE 	R3 R3 K1 ; R3 := R3["HudNonQueuedFunctions"]
	14	[4607]	MOVE     	R4 R0 ; R4 := R0
	15	[4607]	CALL     	R2 3 1 ; R2(R3,R4)
	16	[4608]	RETURN   	R0 1 ; return 

function #139 <?:4610,4653> (148 instructions, 592 bytes at 000002111C79A870)
0 params, 3 slots, 29 upvalues, 0 locals, 31 constants, 25 functions
	1	[4611]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[4611]	CLOSURE  	R1 0 ; R1 := closure(Function #1)
	3	[4611]	GETUPVAL 	R0 U0 ; R0 := U0
	4	[4611]	GETUPVAL 	R0 U1 ; R0 := U1
	5	[4611]	SETTABLE 	R0 K1 R1 ; R0["ShowWeaponPanel"] := R1
	6	[4612]	GETGLOBAL	R0 K0 ; R0 := _T
	7	[4612]	CLOSURE  	R1 1 ; R1 := closure(Function #2)
	8	[4612]	GETUPVAL 	R0 U0 ; R0 := U0
	9	[4612]	GETUPVAL 	R0 U1 ; R0 := U1
	10	[4612]	SETTABLE 	R0 K2 R1 ; R0[0x00000002] := R1
	11	[4613]	GETGLOBAL	R0 K0 ; R0 := _T
	12	[4613]	CLOSURE  	R1 2 ; R1 := closure(Function #3)
	13	[4613]	GETUPVAL 	R0 U0 ; R0 := U0
	14	[4613]	GETUPVAL 	R0 U2 ; R0 := U2
	15	[4613]	SETTABLE 	R0 K3 R1 ; R0["ShowAbilityPanel"] := R1
	16	[4614]	GETGLOBAL	R0 K0 ; R0 := _T
	17	[4614]	CLOSURE  	R1 3 ; R1 := closure(Function #4)
	18	[4614]	GETUPVAL 	R0 U0 ; R0 := U0
	19	[4614]	GETUPVAL 	R0 U2 ; R0 := U2
	20	[4614]	SETTABLE 	R0 K4 R1 ; R0["HideAbilityPanel"] := R1
	21	[4615]	GETGLOBAL	R0 K0 ; R0 := _T
	22	[4615]	CLOSURE  	R1 4 ; R1 := closure(Function #5)
	23	[4615]	GETUPVAL 	R0 U0 ; R0 := U0
	24	[4615]	GETUPVAL 	R0 U3 ; R0 := U3
	25	[4615]	SETTABLE 	R0 K5 R1 ; R0["SetEnergyVisibility"] := R1
	26	[4617]	GETGLOBAL	R0 K0 ; R0 := _T
	27	[4617]	CLOSURE  	R1 5 ; R1 := closure(Function #6)
	28	[4617]	GETUPVAL 	R0 U0 ; R0 := U0
	29	[4617]	GETUPVAL 	R0 U4 ; R0 := U4
	30	[4617]	SETTABLE 	R0 K6 R1 ; R0["SetFocusTimer"] := R1
	31	[4619]	GETGLOBAL	R0 K0 ; R0 := _T
	32	[4619]	CLOSURE  	R1 6 ; R1 := closure(Function #7)
	33	[4619]	GETUPVAL 	R0 U0 ; R0 := U0
	34	[4619]	GETUPVAL 	R0 U5 ; R0 := U5
	35	[4619]	SETTABLE 	R0 K7 R1 ; R0["AddLogMessage"] := R1
	36	[4620]	GETGLOBAL	R0 K0 ; R0 := _T
	37	[4620]	CLOSURE  	R1 7 ; R1 := closure(Function #8)
	38	[4620]	GETUPVAL 	R0 U0 ; R0 := U0
	39	[4620]	GETUPVAL 	R0 U6 ; R0 := U6
	40	[4620]	SETTABLE 	R0 K8 R1 ; R0["AddPvpKillMessage"] := R1
	41	[4622]	GETGLOBAL	R0 K0 ; R0 := _T
	42	[4622]	CLOSURE  	R1 8 ; R1 := closure(Function #9)
	43	[4622]	GETUPVAL 	R0 U0 ; R0 := U0
	44	[4622]	GETUPVAL 	R0 U7 ; R0 := U7
	45	[4622]	SETTABLE 	R0 K9 R1 ; R0["ShowImpactMessage"] := R1
	46	[4623]	GETGLOBAL	R0 K0 ; R0 := _T
	47	[4623]	CLOSURE  	R1 9 ; R1 := closure(Function #10)
	48	[4623]	GETUPVAL 	R0 U0 ; R0 := U0
	49	[4623]	GETUPVAL 	R0 U8 ; R0 := U8
	50	[4623]	SETTABLE 	R0 K10 R1 ; R0["HideImpactMessage"] := R1
	51	[4624]	GETGLOBAL	R0 K0 ; R0 := _T
	52	[4624]	CLOSURE  	R1 10 ; R1 := closure(Function #11)
	53	[4624]	GETUPVAL 	R0 U0 ; R0 := U0
	54	[4624]	GETUPVAL 	R0 U9 ; R0 := U9
	55	[4624]	SETTABLE 	R0 K11 R1 ; R0["SetImpactMessageDeltaY"] := R1
	56	[4626]	GETGLOBAL	R0 K0 ; R0 := _T
	57	[4626]	CLOSURE  	R1 11 ; R1 := closure(Function #12)
	58	[4626]	GETUPVAL 	R0 U0 ; R0 := U0
	59	[4626]	GETUPVAL 	R0 U10 ; R0 := U10
	60	[4626]	SETTABLE 	R0 K12 R1 ; R0["VoidTearOverride"] := R1
	61	[4627]	GETGLOBAL	R0 K0 ; R0 := _T
	62	[4627]	CLOSURE  	R1 12 ; R1 := closure(Function #13)
	63	[4627]	GETUPVAL 	R0 U0 ; R0 := U0
	64	[4627]	GETUPVAL 	R0 U11 ; R0 := U11
	65	[4627]	SETTABLE 	R0 K13 R1 ; R0["SetVoidTearVisible"] := R1
	66	[4629]	GETGLOBAL	R0 K0 ; R0 := _T
	67	[4629]	CLOSURE  	R1 13 ; R1 := closure(Function #14)
	68	[4629]	GETUPVAL 	R0 U0 ; R0 := U0
	69	[4629]	GETUPVAL 	R0 U12 ; R0 := U12
	70	[4629]	SETTABLE 	R0 K14 R1 ; R0["MissionCountdownApplyOffsetY"] := R1
	71	[4630]	GETGLOBAL	R0 K0 ; R0 := _T
	72	[4630]	CLOSURE  	R1 14 ; R1 := closure(Function #15)
	73	[4630]	GETUPVAL 	R0 U0 ; R0 := U0
	74	[4630]	GETUPVAL 	R0 U13 ; R0 := U13
	75	[4630]	SETTABLE 	R0 K15 R1 ; R0["AddLevelUp"] := R1
	76	[4631]	GETGLOBAL	R0 K0 ; R0 := _T
	77	[4631]	CLOSURE  	R1 15 ; R1 := closure(Function #16)
	78	[4631]	GETUPVAL 	R0 U0 ; R0 := U0
	79	[4631]	GETUPVAL 	R0 U14 ; R0 := U14
	80	[4631]	SETTABLE 	R0 K16 R1 ; R0["SetHudPartialFade"] := R1
	81	[4633]	GETGLOBAL	R0 K0 ; R0 := _T
	82	[4633]	CLOSURE  	R1 16 ; R1 := closure(Function #17)
	83	[4633]	GETUPVAL 	R0 U0 ; R0 := U0
	84	[4633]	GETUPVAL 	R0 U15 ; R0 := U15
	85	[4633]	SETTABLE 	R0 K17 R1 ; R0["SetAbilityActiveAnim"] := R1
	86	[4634]	GETGLOBAL	R0 K0 ; R0 := _T
	87	[4634]	CLOSURE  	R1 17 ; R1 := closure(Function #18)
	88	[4634]	GETUPVAL 	R0 U0 ; R0 := U0
	89	[4634]	GETUPVAL 	R0 U16 ; R0 := U16
	90	[4634]	SETTABLE 	R0 K18 R1 ; R0["SetAbilityCastable"] := R1
	91	[4636]	GETGLOBAL	R0 K0 ; R0 := _T
	92	[4636]	CLOSURE  	R1 18 ; R1 := closure(Function #19)
	93	[4636]	GETUPVAL 	R0 U0 ; R0 := U0
	94	[4636]	GETUPVAL 	R0 U17 ; R0 := U17
	95	[4636]	SETTABLE 	R0 K19 R1 ; R0["ForceHideMiniMap"] := R1
	96	[4637]	GETGLOBAL	R0 K0 ; R0 := _T
	97	[4637]	CLOSURE  	R1 19 ; R1 := closure(Function #20)
	98	[4637]	GETUPVAL 	R0 U0 ; R0 := U0
	99	[4637]	GETUPVAL 	R0 U18 ; R0 := U18
	100	[4637]	SETTABLE 	R0 K20 R1 ; R0["ForceRestoreMiniMap"] := R1
	101	[4639]	GETGLOBAL	R0 K0 ; R0 := _T
	102	[4639]	CLOSURE  	R1 20 ; R1 := closure(Function #21)
	103	[4639]	GETUPVAL 	R0 U0 ; R0 := U0
	104	[4639]	GETUPVAL 	R0 U19 ; R0 := U19
	105	[4639]	SETTABLE 	R0 K21 R1 ; R0["RemoveHudTracker"] := R1
	106	[4641]	GETGLOBAL	R0 K0 ; R0 := _T
	107	[4641]	CLOSURE  	R1 21 ; R1 := closure(Function #22)
	108	[4641]	GETUPVAL 	R0 U0 ; R0 := U0
	109	[4641]	GETUPVAL 	R0 U20 ; R0 := U20
	110	[4641]	SETTABLE 	R0 K22 R1 ; R0["SetAbilityCharge"] := R1
	111	[4643]	GETGLOBAL	R0 K0 ; R0 := _T
	112	[4643]	CLOSURE  	R1 22 ; R1 := closure(Function #23)
	113	[4643]	GETUPVAL 	R0 U0 ; R0 := U0
	114	[4643]	GETUPVAL 	R0 U21 ; R0 := U21
	115	[4643]	SETTABLE 	R0 K23 R1 ; R0[0x00000000] := R1
	116	[4646]	GETUPVAL 	R0 U22 ; R0 := U22
	117	[4646]	LOADK    	R1 K24 ; R1 := "SetAbilityTimer"
	118	[4646]	GETUPVAL 	R2 U23 ; R2 := U23
	119	[4646]	CALL     	R0 3 1 ; R0(R1,R2)
	120	[4647]	GETUPVAL 	R0 U22 ; R0 := U22
	121	[4647]	LOADK    	R1 K25 ; R1 := "AddAbilityTimer"
	122	[4647]	GETUPVAL 	R2 U24 ; R2 := U24
	123	[4647]	CALL     	R0 3 1 ; R0(R1,R2)
	124	[4648]	GETUPVAL 	R0 U22 ; R0 := U22
	125	[4648]	LOADK    	R1 K26 ; R1 := "HUD_GetAnchorMgr"
	126	[4648]	CLOSURE  	R2 23 ; R2 := closure(Function #24)
	127	[4648]	GETUPVAL 	R0 U25 ; R0 := U25
	128	[4648]	CALL     	R0 3 1 ; R0(R1,R2)
	129	[4649]	GETUPVAL 	R0 U22 ; R0 := U22
	130	[4649]	LOADK    	R1 K27 ; R1 := "GetHudCustomizationColor"
	131	[4649]	GETUPVAL 	R2 U26 ; R2 := U26
	132	[4649]	CALL     	R0 3 1 ; R0(R1,R2)
	133	[4650]	GETUPVAL 	R0 U22 ; R0 := U22
	134	[4650]	LOADK    	R1 K28 ; R1 := "AddHudTracker"
	135	[4650]	GETUPVAL 	R2 U27 ; R2 := U27
	136	[4650]	GETTABLE 	R2 R2 K28 ; R2 := R2["AddHudTracker"]
	137	[4650]	CALL     	R0 3 1 ; R0(R1,R2)
	138	[4651]	GETUPVAL 	R0 U22 ; R0 := U22
	139	[4651]	LOADK    	R1 K29 ; R1 := "GetHudTracker"
	140	[4651]	GETUPVAL 	R2 U27 ; R2 := U27
	141	[4651]	GETTABLE 	R2 R2 K29 ; R2 := R2["GetHudTracker"]
	142	[4651]	CALL     	R0 3 1 ; R0(R1,R2)
	143	[4652]	GETUPVAL 	R0 U22 ; R0 := U22
	144	[4652]	LOADK    	R1 K30 ; R1 := "GetHudScale"
	145	[4652]	CLOSURE  	R2 24 ; R2 := closure(Function #25)
	146	[4652]	GETUPVAL 	R0 U28 ; R0 := U28
	147	[4652]	CALL     	R0 3 1 ; R0(R1,R2)
	148	[4653]	RETURN   	R0 1 ; return 

function #140 <?:4655,4752> (511 instructions, 2044 bytes at 0000021132CDB710)
0 params, 6 slots, 4 upvalues, 0 locals, 93 constants, 0 functions
	1	[4656]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[4656]	GETUPVAL 	R1 U1 ; R1 := U1
	3	[4656]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x5d10207d]
	4	[4656]	LOADK    	R2 := 2.000000
	5	[4656]	OP_LOADBOOL	R3 1 0 ; R3 := true
	6	[4656]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	7	[4656]	SETTABLE 	R0 K0 R1 ; R0["Background1"] := R1
	8	[4657]	GETUPVAL 	R0 U0 ; R0 := U0
	9	[4657]	GETUPVAL 	R1 U1 ; R1 := U1
	10	[4657]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x5d10207d]
	11	[4657]	LOADK    	R2 := 9.000000
	12	[4657]	OP_LOADBOOL	R3 1 0 ; R3 := true
	13	[4657]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	14	[4657]	SETTABLE 	R0 K3 R1 ; R0["FloatingContent"] := R1
	15	[4658]	GETUPVAL 	R0 U0 ; R0 := U0
	16	[4658]	GETUPVAL 	R1 U1 ; R1 := U1
	17	[4658]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x5d10207d]
	18	[4658]	LOADK    	R2 := 10.000000
	19	[4658]	OP_LOADBOOL	R3 1 0 ; R3 := true
	20	[4658]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	21	[4658]	SETTABLE 	R0 K4 R1 ; R0["FloatingContentHighlight"] := R1
	22	[4659]	GETUPVAL 	R0 U0 ; R0 := U0
	23	[4659]	GETUPVAL 	R1 U1 ; R1 := U1
	24	[4659]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x5d10207d]
	25	[4659]	LOADK    	R2 := 12.000000
	26	[4659]	OP_LOADBOOL	R3 1 0 ; R3 := true
	27	[4659]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	28	[4659]	SETTABLE 	R0 K5 R1 ; R0["Negative"] := R1
	29	[4660]	GETUPVAL 	R0 U0 ; R0 := U0
	30	[4660]	GETUPVAL 	R1 U2 ; R1 := U2
	31	[4660]	GETTABLE 	R1 R1 K7 ; R1 := R1[0x9f57dd7d]
	32	[4660]	GETUPVAL 	R2 U0 ; R2 := U0
	33	[4660]	GETTABLE 	R2 R2 K3 ; R2 := R2["FloatingContent"]
	34	[4660]	CALL     	R1 2 2 ; R1 := R1(R2)
	35	[4660]	SETTABLE 	R0 K6 R1 ; R0["FloatingContentHex"] := R1
	36	[4661]	GETUPVAL 	R0 U0 ; R0 := U0
	37	[4661]	GETUPVAL 	R1 U2 ; R1 := U2
	38	[4661]	GETTABLE 	R1 R1 K7 ; R1 := R1[0x9f57dd7d]
	39	[4661]	GETUPVAL 	R2 U0 ; R2 := U0
	40	[4661]	GETTABLE 	R2 R2 K4 ; R2 := R2["FloatingContentHighlight"]
	41	[4661]	CALL     	R1 2 2 ; R1 := R1(R2)
	42	[4661]	SETTABLE 	R0 K8 R1 ; R0["FloatingContentHighlightHex"] := R1
	43	[4663]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	44	[4663]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	45	[4663]	LOADK    	R2 K11 ; R2 := "RevivePanel.HoldProgress.Backer"
	46	[4663]	LOADK    	R3 := 9.000000
	47	[4663]	GETUPVAL 	R4 U0 ; R4 := U0
	48	[4663]	GETTABLE 	R4 R4 K3 ; R4 := R4["FloatingContent"]
	49	[4663]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	50	[4664]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	51	[4664]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	52	[4664]	LOADK    	R2 K11 ; R2 := "RevivePanel.HoldProgress.Backer"
	53	[4664]	LOADK    	R3 := 10.000000
	54	[4664]	LOADK    	R4 := 40.000000
	55	[4664]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	56	[4665]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	57	[4665]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	58	[4665]	LOADK    	R2 K12 ; R2 := "RevivePanel.HoldProgress.Diamond"
	59	[4665]	LOADK    	R3 := 9.000000
	60	[4665]	GETUPVAL 	R4 U0 ; R4 := U0
	61	[4665]	GETTABLE 	R4 R4 K0 ; R4 := R4["Background1"]
	62	[4665]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	63	[4666]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	64	[4666]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	65	[4666]	LOADK    	R2 K12 ; R2 := "RevivePanel.HoldProgress.Diamond"
	66	[4666]	LOADK    	R3 := 10.000000
	67	[4666]	LOADK    	R4 := 80.000000
	68	[4666]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	69	[4667]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	70	[4667]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	71	[4667]	LOADK    	R2 K13 ; R2 := "RevivePanel.Shadow"
	72	[4667]	LOADK    	R3 := 9.000000
	73	[4667]	GETUPVAL 	R4 U0 ; R4 := U0
	74	[4667]	GETTABLE 	R4 R4 K0 ; R4 := R4["Background1"]
	75	[4667]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	76	[4669]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	77	[4669]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	78	[4669]	LOADK    	R2 K14 ; R2 := "RevivePanel.RevivesLeft"
	79	[4669]	LOADK    	R3 := 36.000000
	80	[4669]	GETUPVAL 	R4 U0 ; R4 := U0
	81	[4669]	GETTABLE 	R4 R4 K4 ; R4 := R4["FloatingContentHighlight"]
	82	[4669]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	83	[4670]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	84	[4670]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	85	[4670]	LOADK    	R2 K15 ; R2 := "RevivePanel.Callout"
	86	[4670]	LOADK    	R3 := 9.000000
	87	[4670]	GETUPVAL 	R4 U0 ; R4 := U0
	88	[4670]	GETTABLE 	R4 R4 K3 ; R4 := R4["FloatingContent"]
	89	[4670]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	90	[4672]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	91	[4672]	SELF     	R0 R0 K16 ; R1 := R0; R0 := R0[0xaade900e]
	92	[4672]	LOADK    	R2 K14 ; R2 := "RevivePanel.RevivesLeft"
	93	[4672]	LOADK    	R3 := 11.000000
	94	[4672]	OP_LOADBOOL	R4 1 0 ; R4 := true
	95	[4672]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	96	[4673]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	97	[4673]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	98	[4673]	LOADK    	R2 K17 ; R2 := "RevivePanel.HoldProgress.Fill"
	99	[4673]	LOADK    	R3 := 9.000000
	100	[4673]	GETUPVAL 	R4 U0 ; R4 := U0
	101	[4673]	GETTABLE 	R4 R4 K4 ; R4 := R4["FloatingContentHighlight"]
	102	[4673]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	103	[4674]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	104	[4674]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	105	[4674]	LOADK    	R2 K18 ; R2 := "RevivePanel.HoldProgress.IconContainer.Icon"
	106	[4674]	LOADK    	R3 := 9.000000
	107	[4674]	GETUPVAL 	R4 U0 ; R4 := U0
	108	[4674]	GETTABLE 	R4 R4 K4 ; R4 := R4["FloatingContentHighlight"]
	109	[4674]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	110	[4675]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	111	[4675]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	112	[4675]	LOADK    	R2 K19 ; R2 := "RevivePanel.HoldProgress.IconContainer.Blur"
	113	[4675]	LOADK    	R3 := 9.000000
	114	[4675]	GETUPVAL 	R4 U0 ; R4 := U0
	115	[4675]	GETTABLE 	R4 R4 K4 ; R4 := R4["FloatingContentHighlight"]
	116	[4675]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	117	[4676]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	118	[4676]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	119	[4676]	LOADK    	R2 K20 ; R2 := "RevivePanel.HoldProgress.IconContainer.IconShadow"
	120	[4676]	LOADK    	R3 := 9.000000
	121	[4676]	GETUPVAL 	R4 U0 ; R4 := U0
	122	[4676]	GETTABLE 	R4 R4 K0 ; R4 := R4["Background1"]
	123	[4676]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	124	[4677]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	125	[4677]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	126	[4677]	LOADK    	R2 K20 ; R2 := "RevivePanel.HoldProgress.IconContainer.IconShadow"
	127	[4677]	LOADK    	R3 := 10.000000
	128	[4677]	LOADK    	R4 := 80.000000
	129	[4677]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	130	[4679]	GETGLOBAL	R0 K21 ; R0 := 0xe72d2edb
	131	[4679]	EQ       	0 R0 K22 ; if R0 ~= 1.000000 then PC := 260
	132	[4679]	JMP      	260 ; PC := 260
	133	[4680]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	134	[4680]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	135	[4680]	LOADK    	R2 K23 ; R2 := "GrineerDeco"
	136	[4680]	LOADK    	R3 := 9.000000
	137	[4680]	LOADK    	R4 K24 ; R4 := 15954454.000000
	138	[4680]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	139	[4681]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	140	[4681]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	141	[4681]	LOADK    	R2 K25 ; R2 := "MiniMapContainer.MapBorders"
	142	[4681]	LOADK    	R3 := 9.000000
	143	[4681]	LOADK    	R4 K24 ; R4 := 15954454.000000
	144	[4681]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	145	[4682]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	146	[4682]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	147	[4682]	LOADK    	R2 K26 ; R2 := "ImpactMessage.DetailRight"
	148	[4682]	LOADK    	R3 := 9.000000
	149	[4682]	LOADK    	R4 K24 ; R4 := 15954454.000000
	150	[4682]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	151	[4683]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	152	[4683]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	153	[4683]	LOADK    	R2 K27 ; R2 := "ImpactMessage.DetailLeft"
	154	[4683]	LOADK    	R3 := 9.000000
	155	[4683]	LOADK    	R4 K24 ; R4 := 15954454.000000
	156	[4683]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	157	[4684]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	158	[4684]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	159	[4684]	LOADK    	R2 K28 ; R2 := "HealthAndShield.HeartRateBacker"
	160	[4684]	LOADK    	R3 := 9.000000
	161	[4684]	LOADK    	R4 K29 ; R4 := 11025182.000000
	162	[4684]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	163	[4685]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	164	[4685]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	165	[4685]	LOADK    	R2 K30 ; R2 := "HealthAndShield.HealthBacker"
	166	[4685]	LOADK    	R3 := 9.000000
	167	[4685]	LOADK    	R4 K24 ; R4 := 15954454.000000
	168	[4685]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	169	[4686]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	170	[4686]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	171	[4686]	LOADK    	R2 K31 ; R2 := "HealthAndShield.HealthFrame"
	172	[4686]	LOADK    	R3 := 9.000000
	173	[4686]	LOADK    	R4 K24 ; R4 := 15954454.000000
	174	[4686]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	175	[4687]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	176	[4687]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	177	[4687]	LOADK    	R2 K32 ; R2 := "HealthAndShield.PlayerHealth"
	178	[4687]	LOADK    	R3 := 9.000000
	179	[4687]	LOADK    	R4 K33 ; R4 := 15844670.000000
	180	[4687]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	181	[4688]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	182	[4688]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	183	[4688]	LOADK    	R2 K34 ; R2 := "WeaponFrame.WeaponFrame"
	184	[4688]	LOADK    	R3 := 9.000000
	185	[4688]	LOADK    	R4 K24 ; R4 := 15954454.000000
	186	[4688]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	187	[4689]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	188	[4689]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	189	[4689]	LOADK    	R2 K35 ; R2 := "WeaponFrame.WeaponBacker"
	190	[4689]	LOADK    	R3 := 9.000000
	191	[4689]	LOADK    	R4 K24 ; R4 := 15954454.000000
	192	[4689]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	193	[4690]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	194	[4690]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	195	[4690]	LOADK    	R2 K36 ; R2 := "WeaponFrame.AmmoBar.Fill"
	196	[4690]	LOADK    	R3 := 9.000000
	197	[4690]	LOADK    	R4 K24 ; R4 := 15954454.000000
	198	[4690]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	199	[4691]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	200	[4691]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	201	[4691]	LOADK    	R2 K37 ; R2 := "WeaponFrame.AmmoBar.Bg"
	202	[4691]	LOADK    	R3 := 9.000000
	203	[4691]	LOADK    	R4 K38 ; R4 := 10197915.000000
	204	[4691]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	205	[4692]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	206	[4692]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	207	[4692]	LOADK    	R2 K39 ; R2 := "WeaponFrame.AmmoAvailable"
	208	[4692]	LOADK    	R3 := 9.000000
	209	[4692]	LOADK    	R4 K24 ; R4 := 15954454.000000
	210	[4692]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	211	[4693]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	212	[4693]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	213	[4693]	LOADK    	R2 K40 ; R2 := "WeaponFrame.AmmoRemaining"
	214	[4693]	LOADK    	R3 := 9.000000
	215	[4693]	LOADK    	R4 K33 ; R4 := 15844670.000000
	216	[4693]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	217	[4694]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	218	[4694]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	219	[4694]	LOADK    	R2 K41 ; R2 := "GrenadeComponent.Grenade"
	220	[4694]	LOADK    	R3 := 9.000000
	221	[4694]	LOADK    	R4 K33 ; R4 := 15844670.000000
	222	[4694]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	223	[4695]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	224	[4695]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	225	[4695]	LOADK    	R2 K42 ; R2 := "GrenadeComponent.Grenade1.Fill"
	226	[4695]	LOADK    	R3 := 9.000000
	227	[4695]	LOADK    	R4 K33 ; R4 := 15844670.000000
	228	[4695]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	229	[4696]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	230	[4696]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	231	[4696]	LOADK    	R2 K43 ; R2 := "GrenadeComponent.Grenade2.Fill"
	232	[4696]	LOADK    	R3 := 9.000000
	233	[4696]	LOADK    	R4 K33 ; R4 := 15844670.000000
	234	[4696]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	235	[4697]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	236	[4697]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	237	[4697]	LOADK    	R2 K44 ; R2 := "GrenadeComponent.Grenade3.Fill"
	238	[4697]	LOADK    	R3 := 9.000000
	239	[4697]	LOADK    	R4 K33 ; R4 := 15844670.000000
	240	[4697]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	241	[4698]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	242	[4698]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	243	[4698]	LOADK    	R2 K45 ; R2 := "GrenadeComponent.Grenade4.Fill"
	244	[4698]	LOADK    	R3 := 9.000000
	245	[4698]	LOADK    	R4 K33 ; R4 := 15844670.000000
	246	[4698]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	247	[4699]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	248	[4699]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	249	[4699]	LOADK    	R2 K46 ; R2 := "CoverPanel.Divider"
	250	[4699]	LOADK    	R3 := 9.000000
	251	[4699]	LOADK    	R4 K24 ; R4 := 15954454.000000
	252	[4699]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	253	[4700]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	254	[4700]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	255	[4700]	LOADK    	R2 K47 ; R2 := "CoverPanel.Cover"
	256	[4700]	LOADK    	R3 := 9.000000
	257	[4700]	LOADK    	R4 K33 ; R4 := 15844670.000000
	258	[4700]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	259	[4700]	JMP      	511 ; PC := 511
	260	[4701]	GETGLOBAL	R0 K21 ; R0 := 0xe72d2edb
	261	[4701]	EQ       	0 R0 K48 ; if R0 ~= 3.000000 then PC := 339
	262	[4701]	JMP      	339 ; PC := 339
	263	[4702]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	264	[4702]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	265	[4702]	LOADK    	R2 K49 ; R2 := "TeshinDeco"
	266	[4702]	LOADK    	R3 := 9.000000
	267	[4702]	LOADK    	R4 K50 ; R4 := 8942416.000000
	268	[4702]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	269	[4703]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	270	[4703]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	271	[4703]	LOADK    	R2 K25 ; R2 := "MiniMapContainer.MapBorders"
	272	[4703]	LOADK    	R3 := 9.000000
	273	[4703]	LOADK    	R4 K50 ; R4 := 8942416.000000
	274	[4703]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	275	[4704]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	276	[4704]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	277	[4704]	LOADK    	R2 K31 ; R2 := "HealthAndShield.HealthFrame"
	278	[4704]	LOADK    	R3 := 9.000000
	279	[4704]	LOADK    	R4 K50 ; R4 := 8942416.000000
	280	[4704]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	281	[4705]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	282	[4705]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	283	[4705]	LOADK    	R2 K32 ; R2 := "HealthAndShield.PlayerHealth"
	284	[4705]	LOADK    	R3 := 9.000000
	285	[4705]	LOADK    	R4 K51 ; R4 := 9150127.000000
	286	[4705]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	287	[4706]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	288	[4706]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	289	[4706]	LOADK    	R2 K52 ; R2 := "HealthAndShield.PlayerShield"
	290	[4706]	LOADK    	R3 := 9.000000
	291	[4706]	LOADK    	R4 K53 ; R4 := 16769169.000000
	292	[4706]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	293	[4707]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	294	[4707]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	295	[4707]	LOADK    	R2 K54 ; R2 := "HealthAndShield.HealthLeafDeco"
	296	[4707]	LOADK    	R3 := 9.000000
	297	[4707]	LOADK    	R4 K51 ; R4 := 9150127.000000
	298	[4707]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	299	[4708]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	300	[4708]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	301	[4708]	LOADK    	R2 K55 ; R2 := "HealthAndShield.ShieldLeafDeco"
	302	[4708]	LOADK    	R3 := 9.000000
	303	[4708]	LOADK    	R4 K53 ; R4 := 16769169.000000
	304	[4708]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	305	[4717]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	306	[4717]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	307	[4717]	LOADK    	R2 K56 ; R2 := "StancePanel.Details"
	308	[4717]	LOADK    	R3 := 9.000000
	309	[4717]	LOADK    	R4 K50 ; R4 := 8942416.000000
	310	[4717]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	311	[4718]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	312	[4718]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	313	[4718]	LOADK    	R2 K57 ; R2 := "ReloadTimer.ReloadRing"
	314	[4718]	LOADK    	R3 := 10.000000
	315	[4718]	LOADK    	R4 := 70.000000
	316	[4718]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	317	[4719]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	318	[4719]	SELF     	R0 R0 K58 ; R1 := R0; R0 := R0[0xf64b7262]
	319	[4719]	LOADK    	R2 K59 ; R2 := "StancePanel.StanceComponent.Stance1"
	320	[4719]	LOADK    	R3 K60 ; R3 := "IconGlow"
	321	[4719]	LOADK    	R4 := 9.000000
	322	[4719]	LOADK    	R5 K61 ; R5 := 15299384.000000
	323	[4719]	CALL     	R0 6 1 ; R0(R1,R2,R3,R4,R5)
	324	[4720]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	325	[4720]	SELF     	R0 R0 K58 ; R1 := R0; R0 := R0[0xf64b7262]
	326	[4720]	LOADK    	R2 K62 ; R2 := "StancePanel.StanceComponent.Stance2"
	327	[4720]	LOADK    	R3 K60 ; R3 := "IconGlow"
	328	[4720]	LOADK    	R4 := 9.000000
	329	[4720]	LOADK    	R5 K63 ; R5 := 10081506.000000
	330	[4720]	CALL     	R0 6 1 ; R0(R1,R2,R3,R4,R5)
	331	[4721]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	332	[4721]	SELF     	R0 R0 K58 ; R1 := R0; R0 := R0[0xf64b7262]
	333	[4721]	LOADK    	R2 K64 ; R2 := "StancePanel.StanceComponent.Stance3"
	334	[4721]	LOADK    	R3 K60 ; R3 := "IconGlow"
	335	[4721]	LOADK    	R4 := 9.000000
	336	[4721]	LOADK    	R5 K65 ; R5 := 12032498.000000
	337	[4721]	CALL     	R0 6 1 ; R0(R1,R2,R3,R4,R5)
	338	[4721]	JMP      	511 ; PC := 511
	339	[4722]	GETGLOBAL	R0 K21 ; R0 := 0xe72d2edb
	340	[4722]	EQ       	0 R0 K66 ; if R0 ~= 2.000000 then PC := 476
	341	[4722]	JMP      	476 ; PC := 476
	342	[4723]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	343	[4723]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	344	[4723]	LOADK    	R2 K67 ; R2 := "CorpusDeco"
	345	[4723]	LOADK    	R3 := 9.000000
	346	[4723]	LOADK    	R4 K68 ; R4 := 2779007.000000
	347	[4723]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	348	[4724]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	349	[4724]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	350	[4724]	LOADK    	R2 K69 ; R2 := "Reticle"
	351	[4724]	LOADK    	R3 := 9.000000
	352	[4724]	GETUPVAL 	R4 U3 ; R4 := U3
	353	[4724]	GETTABLE 	R4 R4 K69 ; R4 := R4["Reticle"]
	354	[4724]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	355	[4725]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	356	[4725]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	357	[4725]	LOADK    	R2 K25 ; R2 := "MiniMapContainer.MapBorders"
	358	[4725]	LOADK    	R3 := 9.000000
	359	[4725]	LOADK    	R4 K68 ; R4 := 2779007.000000
	360	[4725]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	361	[4726]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	362	[4726]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	363	[4726]	LOADK    	R2 K32 ; R2 := "HealthAndShield.PlayerHealth"
	364	[4726]	LOADK    	R3 := 9.000000
	365	[4726]	LOADK    	R4 K70 ; R4 := 12284689.000000
	366	[4726]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	367	[4727]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	368	[4727]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	369	[4727]	LOADK    	R2 K52 ; R2 := "HealthAndShield.PlayerShield"
	370	[4727]	LOADK    	R3 := 9.000000
	371	[4727]	LOADK    	R4 K71 ; R4 := 65535.000000
	372	[4727]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	373	[4728]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	374	[4728]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	375	[4728]	LOADK    	R2 K31 ; R2 := "HealthAndShield.HealthFrame"
	376	[4728]	LOADK    	R3 := 9.000000
	377	[4728]	LOADK    	R4 K68 ; R4 := 2779007.000000
	378	[4728]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	379	[4729]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	380	[4729]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	381	[4729]	LOADK    	R2 K72 ; R2 := "HealthAndShield.HealthEquals"
	382	[4729]	LOADK    	R3 := 9.000000
	383	[4729]	LOADK    	R4 K71 ; R4 := 65535.000000
	384	[4729]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	385	[4730]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	386	[4730]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	387	[4730]	LOADK    	R2 K35 ; R2 := "WeaponFrame.WeaponBacker"
	388	[4730]	LOADK    	R3 := 9.000000
	389	[4730]	LOADK    	R4 K68 ; R4 := 2779007.000000
	390	[4730]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	391	[4731]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	392	[4731]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	393	[4731]	LOADK    	R2 K36 ; R2 := "WeaponFrame.AmmoBar.Fill"
	394	[4731]	LOADK    	R3 := 9.000000
	395	[4731]	LOADK    	R4 K70 ; R4 := 12284689.000000
	396	[4731]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	397	[4732]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	398	[4732]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	399	[4732]	LOADK    	R2 K37 ; R2 := "WeaponFrame.AmmoBar.Bg"
	400	[4732]	LOADK    	R3 := 9.000000
	401	[4732]	LOADK    	R4 K71 ; R4 := 65535.000000
	402	[4732]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	403	[4733]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	404	[4733]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	405	[4733]	LOADK    	R2 K39 ; R2 := "WeaponFrame.AmmoAvailable"
	406	[4733]	LOADK    	R3 := 9.000000
	407	[4733]	LOADK    	R4 K71 ; R4 := 65535.000000
	408	[4733]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	409	[4734]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	410	[4734]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	411	[4734]	LOADK    	R2 K40 ; R2 := "WeaponFrame.AmmoRemaining"
	412	[4734]	LOADK    	R3 := 9.000000
	413	[4734]	LOADK    	R4 K70 ; R4 := 12284689.000000
	414	[4734]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	415	[4735]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	416	[4735]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	417	[4735]	LOADK    	R2 K73 ; R2 := "StockTicker.Numbers"
	418	[4735]	LOADK    	R3 := 9.000000
	419	[4735]	LOADK    	R4 K71 ; R4 := 65535.000000
	420	[4735]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	421	[4736]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	422	[4736]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	423	[4736]	LOADK    	R2 K74 ; R2 := "StockTicker.Backer"
	424	[4736]	LOADK    	R3 := 9.000000
	425	[4736]	LOADK    	R4 K75 ; R4 := 5277377.000000
	426	[4736]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	427	[4737]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	428	[4737]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	429	[4737]	LOADK    	R2 K76 ; R2 := "MoaComponent.MoaCompContainer"
	430	[4737]	LOADK    	R3 := 9.000000
	431	[4737]	LOADK    	R4 K77 ; R4 := 4287645.000000
	432	[4737]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	433	[4738]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	434	[4738]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	435	[4738]	LOADK    	R2 K78 ; R2 := "MoaComponent.MoaCompDetails"
	436	[4738]	LOADK    	R3 := 9.000000
	437	[4738]	LOADK    	R4 K79 ; R4 := 6147545.000000
	438	[4738]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	439	[4739]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	440	[4739]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	441	[4739]	LOADK    	R2 K80 ; R2 := "MoaComponent.SummonMoa1.Icon"
	442	[4739]	LOADK    	R3 := 9.000000
	443	[4739]	LOADK    	R4 K79 ; R4 := 6147545.000000
	444	[4739]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	445	[4740]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	446	[4740]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	447	[4740]	LOADK    	R2 K81 ; R2 := "MoaComponent.SummonMoa2.Icon"
	448	[4740]	LOADK    	R3 := 9.000000
	449	[4740]	LOADK    	R4 K79 ; R4 := 6147545.000000
	450	[4740]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	451	[4741]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	452	[4741]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	453	[4741]	LOADK    	R2 K82 ; R2 := "MoaComponent.SummonMoa3.Icon"
	454	[4741]	LOADK    	R3 := 9.000000
	455	[4741]	LOADK    	R4 K79 ; R4 := 6147545.000000
	456	[4741]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	457	[4742]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	458	[4742]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	459	[4742]	LOADK    	R2 K83 ; R2 := "MoaComponent.SummonMoa1.IconGlow"
	460	[4742]	LOADK    	R3 := 9.000000
	461	[4742]	LOADK    	R4 K77 ; R4 := 4287645.000000
	462	[4742]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	463	[4743]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	464	[4743]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	465	[4743]	LOADK    	R2 K84 ; R2 := "MoaComponent.SummonMoa2.IconGlow"
	466	[4743]	LOADK    	R3 := 9.000000
	467	[4743]	LOADK    	R4 K77 ; R4 := 4287645.000000
	468	[4743]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	469	[4744]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	470	[4744]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	471	[4744]	LOADK    	R2 K85 ; R2 := "MoaComponent.SummonMoa3.IconGlow"
	472	[4744]	LOADK    	R3 := 9.000000
	473	[4744]	LOADK    	R4 K77 ; R4 := 4287645.000000
	474	[4744]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	475	[4744]	JMP      	511 ; PC := 511
	476	[4745]	GETGLOBAL	R0 K21 ; R0 := 0xe72d2edb
	477	[4745]	EQ       	0 R0 K86 ; if R0 ~= 4.000000 then PC := 511
	478	[4745]	JMP      	511 ; PC := 511
	479	[4746]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	480	[4746]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	481	[4746]	LOADK    	R2 K25 ; R2 := "MiniMapContainer.MapBorders"
	482	[4746]	LOADK    	R3 := 9.000000
	483	[4746]	LOADK    	R4 K87 ; R4 := 6377812.000000
	484	[4746]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	485	[4747]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	486	[4747]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	487	[4747]	LOADK    	R2 K31 ; R2 := "HealthAndShield.HealthFrame"
	488	[4747]	LOADK    	R3 := 9.000000
	489	[4747]	LOADK    	R4 K87 ; R4 := 6377812.000000
	490	[4747]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	491	[4748]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	492	[4748]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	493	[4748]	LOADK    	R2 K88 ; R2 := "AbilityPanel.Details"
	494	[4748]	LOADK    	R3 := 9.000000
	495	[4748]	LOADK    	R4 K87 ; R4 := 6377812.000000
	496	[4748]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	497	[4749]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	498	[4749]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	499	[4749]	LOADK    	R2 K89 ; R2 := "HealthAndShield.PlayerShield.Container"
	500	[4749]	LOADK    	R3 := 9.000000
	501	[4749]	GETUPVAL 	R4 U3 ; R4 := U3
	502	[4749]	GETTABLE 	R4 R4 K90 ; R4 := R4["Shield"]
	503	[4749]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	504	[4750]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	505	[4750]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	506	[4750]	LOADK    	R2 K91 ; R2 := "HealthAndShield.PlayerHealth.Container"
	507	[4750]	LOADK    	R3 := 9.000000
	508	[4750]	GETUPVAL 	R4 U3 ; R4 := U3
	509	[4750]	GETTABLE 	R4 R4 K92 ; R4 := R4["Health"]
	510	[4750]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	511	[4752]	RETURN   	R0 1 ; return 

function #141 <?:4755,4792> (166 instructions, 664 bytes at 000002111A8B22A0)
4 params, 14 slots, 4 upvalues, 0 locals, 38 constants, 0 functions
	1	[4756]	GETGLOBAL	R4 K0 ; R4 := 0x03f57322
	2	[4756]	MOVE     	R5 R2 ; R5 := R2
	3	[4756]	CALL     	R4 2 2 ; R4 := R4(R5)
	4	[4756]	LT       	1 K1 R4 ; if 0.000000 < R4 then PC := 7
	5	[4756]	JMP      	7 ; PC := 7
	6	[4756]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 7
	7	[4756]	OP_LOADBOOL	R4 1 0 ; R4 := true
	8	[4757]	OP_LOADBOOL	R5 1 0 ; R5 := true
	9	[4758]	GETGLOBAL	R6 K2 ; R6 := 0x7b998233
	10	[4758]	GETUPVAL 	R7 U0 ; R7 := U0
	11	[4758]	GETTABLE 	R7 R7 K3 ; R7 := R7["ptr"]
	12	[4758]	CALL     	R6 2 2 ; R6 := R6(R7)
	13	[4758]	TEST     	R6 0 ; if not R6 then PC := 17
	14	[4758]	JMP      	17 ; PC := 17
	15	[4759]	GETUPVAL 	R6 U1 ; R6 := U1
	16	[4759]	CALL     	R6 1 1 ; R6()
	17	[4763]	GETGLOBAL	R6 K2 ; R6 := 0x7b998233
	18	[4763]	GETUPVAL 	R7 U0 ; R7 := U0
	19	[4763]	GETTABLE 	R7 R7 K3 ; R7 := R7["ptr"]
	20	[4763]	CALL     	R6 2 2 ; R6 := R6(R7)
	21	[4763]	TEST     	R6 1 ; if R6 then PC := 40
	22	[4763]	JMP      	40 ; PC := 40
	23	[4764]	GETUPVAL 	R6 U0 ; R6 := U0
	24	[4764]	GETTABLE 	R6 R6 K3 ; R6 := R6["ptr"]
	25	[4764]	SELF     	R6 R6 K4 ; R7 := R6; R6 := R6[0x870e163a]
	26	[4764]	CALL     	R6 2 2 ; R6 := R6(R7)
	27	[4765]	SELF     	R7 R6 K5 ; R8 := R6; R7 := R6[0x9f4a6b68]
	28	[4765]	CALL     	R7 2 2 ; R7 := R7(R8)
	29	[4765]	TEST     	R7 0 ; if not R7 then PC := 39
	30	[4765]	JMP      	39 ; PC := 39
	31	[4765]	SELF     	R7 R6 K6 ; R8 := R6; R7 := R6[0x25932e14]
	32	[4765]	CALL     	R7 2 2 ; R7 := R7(R8)
	33	[4765]	EQ       	0 R7 K7 ; if R7 ~= nil then PC := 40
	34	[4765]	JMP      	40 ; PC := 40
	35	[4765]	SELF     	R7 R6 K8 ; R8 := R6; R7 := R6[0x92df6357]
	36	[4765]	CALL     	R7 2 2 ; R7 := R7(R8)
	37	[4765]	EQ       	0 R7 K1 ; if R7 ~= 0.000000 then PC := 40
	38	[4765]	JMP      	40 ; PC := 40
	39	[4766]	OP_LOADBOOL	R5 0 0 ; R5 := false
	40	[4770]	GETGLOBAL	R7 K9 ; R7 := 0xae91e43b
	41	[4770]	SELF     	R7 R7 K10 ; R8 := R7; R7 := R7[0xaade900e]
	42	[4770]	LOADK    	R9 K11 ; R9 := "WeaponFrame.AmmoAvailable"
	43	[4770]	LOADK    	R10 := 11.000000
	44	[4770]	TESTSET  	R11 R4 0 ; if not R4 then PC := 47 else R11 := R4 
	45	[4770]	JMP      	47 ; PC := 47
	46	[4770]	MOVE     	R11 R5 ; R11 := R5
	47	[4770]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	48	[4771]	GETGLOBAL	R7 K12 ; R7 := 0xe72d2edb
	49	[4771]	EQ       	0 R7 K14 ; if R7 ~= 4.000000 then PC := 86
	50	[4771]	JMP      	86 ; PC := 86
	51	[4772]	GETUPVAL 	R7 U2 ; R7 := U2
	52	[4772]	LOADK    	R8 K15 ; R8 := "AmmoRemaining"
	53	[4772]	LOADK    	R9 K16 ; R9 := "WeaponFrame.AmmoRemaining"
	54	[4772]	GETUPVAL 	R10 U3 ; R10 := U3
	55	[4772]	GETTABLE 	R10 R10 K17 ; R10 := R10[0x06d055f9]
	56	[4772]	MOVE     	R11 R4 ; R11 := R4
	57	[4772]	MOVE     	R12 R0 ; R12 := R0
	58	[4772]	MOVE     	R13 R1 ; R13 := R1
	59	[4772]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	60	[4772]	LOADNIL  	R11 R12 ; R11 := R12 := nil
	61	[4772]	TEST     	R5 1 ; if R5 then PC := 65
	62	[4772]	JMP      	65 ; PC := 65
	63	[4772]	NOT      	R13 R4 ; R13 := not R4
	64	[4772]	JMP      	67 ; PC := 67
	65	[4772]	OP_LOADBOOL	R13 0 1 ; R13 := false; PC := 66
	66	[4772]	OP_LOADBOOL	R13 1 0 ; R13 := true
	67	[4772]	CALL     	R7 7 1 ; R7(R8,R9,R10,R11,R12,R13)
	68	[4773]	GETUPVAL 	R7 U2 ; R7 := U2
	69	[4773]	LOADK    	R8 K18 ; R8 := "AmmoRemainingBlur"
	70	[4773]	LOADK    	R9 K19 ; R9 := "WeaponFrame.AmmoRemainingBlur"
	71	[4773]	GETUPVAL 	R10 U3 ; R10 := U3
	72	[4773]	GETTABLE 	R10 R10 K17 ; R10 := R10[0x06d055f9]
	73	[4773]	MOVE     	R11 R4 ; R11 := R4
	74	[4773]	MOVE     	R12 R0 ; R12 := R0
	75	[4773]	MOVE     	R13 R1 ; R13 := R1
	76	[4773]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	77	[4773]	LOADNIL  	R11 R12 ; R11 := R12 := nil
	78	[4773]	TEST     	R5 1 ; if R5 then PC := 82
	79	[4773]	JMP      	82 ; PC := 82
	80	[4773]	NOT      	R13 R4 ; R13 := not R4
	81	[4773]	JMP      	84 ; PC := 84
	82	[4773]	OP_LOADBOOL	R13 0 1 ; R13 := false; PC := 83
	83	[4773]	OP_LOADBOOL	R13 1 0 ; R13 := true
	84	[4773]	CALL     	R7 7 1 ; R7(R8,R9,R10,R11,R12,R13)
	85	[4773]	JMP      	104 ; PC := 104
	86	[4775]	GETGLOBAL	R7 K9 ; R7 := 0xae91e43b
	87	[4775]	SELF     	R7 R7 K10 ; R8 := R7; R7 := R7[0xaade900e]
	88	[4775]	LOADK    	R9 K16 ; R9 := "WeaponFrame.AmmoRemaining"
	89	[4775]	LOADK    	R10 := 11.000000
	90	[4775]	TESTSET  	R11 R4 0 ; if not R4 then PC := 93 else R11 := R4 
	91	[4775]	JMP      	93 ; PC := 93
	92	[4775]	MOVE     	R11 R5 ; R11 := R5
	93	[4775]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	94	[4776]	GETUPVAL 	R7 U2 ; R7 := U2
	95	[4776]	LOADK    	R8 K15 ; R8 := "AmmoRemaining"
	96	[4776]	LOADK    	R9 K16 ; R9 := "WeaponFrame.AmmoRemaining"
	97	[4776]	GETUPVAL 	R10 U3 ; R10 := U3
	98	[4776]	GETTABLE 	R10 R10 K17 ; R10 := R10[0x06d055f9]
	99	[4776]	MOVE     	R11 R4 ; R11 := R4
	100	[4776]	MOVE     	R12 R0 ; R12 := R0
	101	[4776]	MOVE     	R13 R1 ; R13 := R1
	102	[4776]	CALL     	R10 4 0 ; R10,... := R10(R11,R12,R13)
	103	[4776]	CALL     	R7 0 1 ; R7(R8,...)
	104	[4778]	GETUPVAL 	R7 U2 ; R7 := U2
	105	[4778]	LOADK    	R8 K20 ; R8 := "AmmoAvailable"
	106	[4778]	LOADK    	R9 K11 ; R9 := "WeaponFrame.AmmoAvailable"
	107	[4778]	MOVE     	R10 R1 ; R10 := R1
	108	[4778]	LOADNIL  	R11 R12 ; R11 := R12 := nil
	109	[4778]	MOVE     	R13 R3 ; R13 := R3
	110	[4778]	CALL     	R7 7 1 ; R7(R8,R9,R10,R11,R12,R13)
	111	[4779]	DIV      	R7 R0 R2 ; R7 := R0 / R2
	112	[4780]	GETGLOBAL	R8 K21 ; R8 := 0x5bced4c4
	113	[4780]	GETTABLE 	R8 R8 K22 ; R8 := R8[0x55f27c30]
	114	[4780]	MUL      	R9 K23 R7 ; R9 := 59.000000 * R7
	115	[4780]	CALL     	R8 2 2 ; R8 := R8(R9)
	116	[4780]	SUB      	R8 K24 R8 ; R8 := 60.000000 - R8
	117	[4781]	GETGLOBAL	R9 K25 ; R9 := 0x38f10e85
	118	[4781]	GETGLOBAL	R10 K9 ; R10 := 0xae91e43b
	119	[4781]	LOADK    	R11 K26 ; R11 := "WeaponFrame.AmmoBar.gotoAndStop"
	120	[4781]	MOVE     	R12 R8 ; R12 := R8
	121	[4781]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	122	[4782]	GETGLOBAL	R9 K12 ; R9 := 0xe72d2edb
	123	[4782]	EQ       	0 R9 K27 ; if R9 ~= 3.000000 then PC := 138
	124	[4782]	JMP      	138 ; PC := 138
	125	[4783]	GETGLOBAL	R9 K9 ; R9 := 0xae91e43b
	126	[4783]	SELF     	R9 R9 K28 ; R10 := R9; R9 := R9[0x67bc869f]
	127	[4783]	LOADK    	R11 K29 ; R11 := "WeaponFrame.AmmoBar.Fill"
	128	[4783]	LOADK    	R12 := 9.000000
	129	[4783]	LOADK    	R13 K30 ; R13 := 9150127.000000
	130	[4783]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	131	[4784]	GETGLOBAL	R9 K9 ; R9 := 0xae91e43b
	132	[4784]	SELF     	R9 R9 K28 ; R10 := R9; R9 := R9[0x67bc869f]
	133	[4784]	LOADK    	R11 K31 ; R11 := "WeaponFrame.AmmoBar.Bg"
	134	[4784]	LOADK    	R12 := 9.000000
	135	[4784]	LOADK    	R13 K32 ; R13 := 6970169.000000
	136	[4784]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	137	[4784]	JMP      	166 ; PC := 166
	138	[4785]	GETGLOBAL	R9 K12 ; R9 := 0xe72d2edb
	139	[4785]	EQ       	0 R9 K33 ; if R9 ~= 2.000000 then PC := 154
	140	[4785]	JMP      	154 ; PC := 154
	141	[4786]	GETGLOBAL	R9 K9 ; R9 := 0xae91e43b
	142	[4786]	SELF     	R9 R9 K28 ; R10 := R9; R9 := R9[0x67bc869f]
	143	[4786]	LOADK    	R11 K29 ; R11 := "WeaponFrame.AmmoBar.Fill"
	144	[4786]	LOADK    	R12 := 9.000000
	145	[4786]	LOADK    	R13 K34 ; R13 := 12284689.000000
	146	[4786]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	147	[4787]	GETGLOBAL	R9 K9 ; R9 := 0xae91e43b
	148	[4787]	SELF     	R9 R9 K28 ; R10 := R9; R9 := R9[0x67bc869f]
	149	[4787]	LOADK    	R11 K31 ; R11 := "WeaponFrame.AmmoBar.Bg"
	150	[4787]	LOADK    	R12 := 9.000000
	151	[4787]	LOADK    	R13 K35 ; R13 := 65535.000000
	152	[4787]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	153	[4787]	JMP      	166 ; PC := 166
	154	[4789]	GETGLOBAL	R9 K9 ; R9 := 0xae91e43b
	155	[4789]	SELF     	R9 R9 K28 ; R10 := R9; R9 := R9[0x67bc869f]
	156	[4789]	LOADK    	R11 K29 ; R11 := "WeaponFrame.AmmoBar.Fill"
	157	[4789]	LOADK    	R12 := 9.000000
	158	[4789]	LOADK    	R13 K36 ; R13 := 15954454.000000
	159	[4789]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	160	[4790]	GETGLOBAL	R9 K9 ; R9 := 0xae91e43b
	161	[4790]	SELF     	R9 R9 K28 ; R10 := R9; R9 := R9[0x67bc869f]
	162	[4790]	LOADK    	R11 K31 ; R11 := "WeaponFrame.AmmoBar.Bg"
	163	[4790]	LOADK    	R12 := 9.000000
	164	[4790]	LOADK    	R13 K37 ; R13 := 10197915.000000
	165	[4790]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	166	[4792]	RETURN   	R0 1 ; return 

function #142 <?:4794,4797> (11 instructions, 44 bytes at 0000021132CDA8A0)
4 params, 9 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[4795]	EQ       	1 R3 K0 ; if R3 == "true" then PC := 4
	2	[4795]	JMP      	4 ; PC := 4
	3	[4795]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 4
	4	[4795]	OP_LOADBOOL	R3 1 0 ; R3 := true
	5	[4796]	GETUPVAL 	R4 U0 ; R4 := U0
	6	[4796]	MOVE     	R5 R0 ; R5 := R0
	7	[4796]	MOVE     	R6 R1 ; R6 := R1
	8	[4796]	MOVE     	R7 R2 ; R7 := R2
	9	[4796]	MOVE     	R8 R3 ; R8 := R3
	10	[4796]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	11	[4797]	RETURN   	R0 1 ; return 

function #143 <?:4799,4857> (352 instructions, 1408 bytes at 000002111C155180)
0 params, 26 slots, 5 upvalues, 0 locals, 74 constants, 0 functions
	1	[4800]	GETGLOBAL	R0 K0 ; R0 := 0xe72d2edb
	2	[4800]	EQ       	0 R0 K2 ; if R0 ~= 1.000000 then PC := 110
	3	[4800]	JMP      	110 ; PC := 110
	4	[4801]	GETUPVAL 	R0 U0 ; R0 := U0
	5	[4801]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x20ff29f7]
	6	[4801]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	7	[4801]	LOADK    	R3 K5 ; R3 := "GrenadeComponent"
	8	[4801]	NEWTABLE 	R4 2 0 ; R4 := {}
	9	[4801]	GETUPVAL 	R5 U0 ; R5 := U0
	10	[4801]	GETTABLE 	R5 R5 K6 ; R5 := R5["ANCHOR_V_BOTTOM"]
	11	[4801]	GETUPVAL 	R6 U0 ; R6 := U0
	12	[4801]	GETTABLE 	R6 R6 K7 ; R6 := R6["ANCHOR_H_RIGHT"]
	13	[4801]	SETLIST  	R4 2 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
	14	[4801]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	15	[4802]	GETUPVAL 	R0 U0 ; R0 := U0
	16	[4802]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x20ff29f7]
	17	[4802]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	18	[4802]	LOADK    	R3 K8 ; R3 := "CoverPanel"
	19	[4802]	NEWTABLE 	R4 2 0 ; R4 := {}
	20	[4802]	GETUPVAL 	R5 U0 ; R5 := U0
	21	[4802]	GETTABLE 	R5 R5 K6 ; R5 := R5["ANCHOR_V_BOTTOM"]
	22	[4802]	GETUPVAL 	R6 U0 ; R6 := U0
	23	[4802]	GETTABLE 	R6 R6 K7 ; R6 := R6["ANCHOR_H_RIGHT"]
	24	[4802]	SETLIST  	R4 2 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
	25	[4802]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	26	[4803]	GETUPVAL 	R0 U0 ; R0 := U0
	27	[4803]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x20ff29f7]
	28	[4803]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	29	[4803]	LOADK    	R3 K9 ; R3 := "GrineerDeco.BottomLeftCorner"
	30	[4803]	NEWTABLE 	R4 2 0 ; R4 := {}
	31	[4803]	GETUPVAL 	R5 U0 ; R5 := U0
	32	[4803]	GETTABLE 	R5 R5 K6 ; R5 := R5["ANCHOR_V_BOTTOM"]
	33	[4803]	GETUPVAL 	R6 U0 ; R6 := U0
	34	[4803]	GETTABLE 	R6 R6 K10 ; R6 := R6["ANCHOR_H_LEFT"]
	35	[4803]	SETLIST  	R4 2 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
	36	[4803]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	37	[4804]	GETUPVAL 	R0 U0 ; R0 := U0
	38	[4804]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x20ff29f7]
	39	[4804]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	40	[4804]	LOADK    	R3 K11 ; R3 := "GrineerDeco.BottomRightCorner"
	41	[4804]	NEWTABLE 	R4 2 0 ; R4 := {}
	42	[4804]	GETUPVAL 	R5 U0 ; R5 := U0
	43	[4804]	GETTABLE 	R5 R5 K6 ; R5 := R5["ANCHOR_V_BOTTOM"]
	44	[4804]	GETUPVAL 	R6 U0 ; R6 := U0
	45	[4804]	GETTABLE 	R6 R6 K7 ; R6 := R6["ANCHOR_H_RIGHT"]
	46	[4804]	SETLIST  	R4 2 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
	47	[4804]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	48	[4805]	GETUPVAL 	R0 U0 ; R0 := U0
	49	[4805]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x20ff29f7]
	50	[4805]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	51	[4805]	LOADK    	R3 K12 ; R3 := "GrineerDeco.TopFlourish"
	52	[4805]	NEWTABLE 	R4 2 0 ; R4 := {}
	53	[4805]	GETUPVAL 	R5 U0 ; R5 := U0
	54	[4805]	GETTABLE 	R5 R5 K13 ; R5 := R5["ANCHOR_V_TOP"]
	55	[4805]	GETUPVAL 	R6 U0 ; R6 := U0
	56	[4805]	GETTABLE 	R6 R6 K14 ; R6 := R6["ANCHOR_H_CENTRE"]
	57	[4805]	SETLIST  	R4 2 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
	58	[4805]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	59	[4806]	GETUPVAL 	R0 U0 ; R0 := U0
	60	[4806]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x20ff29f7]
	61	[4806]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	62	[4806]	LOADK    	R3 K15 ; R3 := "WeaponReticuleDot"
	63	[4806]	NEWTABLE 	R4 2 0 ; R4 := {}
	64	[4806]	GETUPVAL 	R5 U0 ; R5 := U0
	65	[4806]	GETTABLE 	R5 R5 K16 ; R5 := R5["ANCHOR_V_CENTRE"]
	66	[4806]	GETUPVAL 	R6 U0 ; R6 := U0
	67	[4806]	GETTABLE 	R6 R6 K14 ; R6 := R6["ANCHOR_H_CENTRE"]
	68	[4806]	SETLIST  	R4 2 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
	69	[4806]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	70	[4807]	GETUPVAL 	R0 U0 ; R0 := U0
	71	[4807]	SELF     	R0 R0 K17 ; R1 := R0; R0 := R0[0xfaa69527]
	72	[4807]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	73	[4807]	SELF     	R2 R2 K18 ; R3 := R2; R2 := R2[0x6b837788]
	74	[4807]	CALL     	R2 2 2 ; R2 := R2(R3)
	75	[4807]	GETGLOBAL	R3 K4 ; R3 := 0xae91e43b
	76	[4807]	SELF     	R3 R3 K19 ; R4 := R3; R3 := R3[0xaf9fda9f]
	77	[4807]	CALL     	R3 2 2 ; R3 := R3(R4)
	78	[4807]	OP_LOADBOOL	R4 1 0 ; R4 := true
	79	[4807]	GETUPVAL 	R5 U1 ; R5 := U1
	80	[4807]	GETTABLE 	R5 R5 K20 ; R5 := R5["HudScalePadding"]
	81	[4807]	CALL     	R0 6 1 ; R0(R1,R2,R3,R4,R5)
	82	[4809]	NEWTABLE 	R0 2 0 ; R0 := {}
	83	[4809]	LOADK    	R1 K5 ; R1 := "GrenadeComponent"
	84	[4809]	LOADK    	R2 K8 ; R2 := "CoverPanel"
	85	[4809]	SETLIST  	R0 2 1 ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 2
	86	[4810]	GETGLOBAL	R1 K21 ; R1 := 0xc8802016
	87	[4810]	MOVE     	R2 R0 ; R2 := R0
	88	[4810]	CALL     	R1 2 4 ; R1,R2,R3 := R1(R2)
	89	[4810]	JMP      	101 ; PC := 101
	90	[4811]	GETGLOBAL	R6 K4 ; R6 := 0xae91e43b
	91	[4811]	SELF     	R6 R6 K22 ; R7 := R6; R6 := R6[0x67bc869f]
	92	[4811]	MOVE     	R8 R5 ; R8 := R5
	93	[4811]	LOADK    	R9 := 15.000000
	94	[4811]	LOADK    	R10 := 25.000000
	95	[4811]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	96	[4812]	GETGLOBAL	R6 K23 ; R6 := _T
	97	[4812]	GETTABLE 	R6 R6 K24 ; R6 := R6[0x6b23d28b]
	98	[4812]	GETGLOBAL	R7 K4 ; R7 := 0xae91e43b
	99	[4812]	MOVE     	R8 R5 ; R8 := R5
	100	[4812]	CALL     	R6 3 1 ; R6(R7,R8)
	101	[4810]	TFORLOOP 	R1 2 ; R4,R5 := R1(R2,R3); if R4 ~= nil then begin PC = 90; R3 := R4 end
	102	[4812]	JMP      	90 ; PC := 90
	103	[4815]	GETUPVAL 	R6 U2 ; R6 := U2
	104	[4815]	SETTABLE 	R6 K25 K2 ; R6["HeartRateFactor"] := 1.000000
	105	[4816]	GETUPVAL 	R6 U2 ; R6 := U2
	106	[4816]	SETTABLE 	R6 K26 K2 ; R6["HeartRateCurrFrame"] := 1.000000
	107	[4817]	GETUPVAL 	R6 U2 ; R6 := U2
	108	[4817]	SETTABLE 	R6 K27 K28 ; R6["HeartRateMaxFrame"] := 35.000000
	109	[4817]	JMP      	317 ; PC := 317
	110	[4818]	GETGLOBAL	R6 K0 ; R6 := 0xe72d2edb
	111	[4818]	EQ       	0 R6 K29 ; if R6 ~= 3.000000 then PC := 176
	112	[4818]	JMP      	176 ; PC := 176
	113	[4819]	GETUPVAL 	R6 U0 ; R6 := U0
	114	[4819]	SELF     	R6 R6 K3 ; R7 := R6; R6 := R6[0x20ff29f7]
	115	[4819]	GETGLOBAL	R8 K4 ; R8 := 0xae91e43b
	116	[4819]	LOADK    	R9 K30 ; R9 := "TeshinDeco"
	117	[4819]	NEWTABLE 	R10 2 0 ; R10 := {}
	118	[4819]	GETUPVAL 	R11 U0 ; R11 := U0
	119	[4819]	GETTABLE 	R11 R11 K13 ; R11 := R11["ANCHOR_V_TOP"]
	120	[4819]	GETUPVAL 	R12 U0 ; R12 := U0
	121	[4819]	GETTABLE 	R12 R12 K14 ; R12 := R12["ANCHOR_H_CENTRE"]
	122	[4819]	SETLIST  	R10 2 1 ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 2
	123	[4819]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	124	[4820]	GETUPVAL 	R6 U0 ; R6 := U0
	125	[4820]	SELF     	R6 R6 K3 ; R7 := R6; R6 := R6[0x20ff29f7]
	126	[4820]	GETGLOBAL	R8 K4 ; R8 := 0xae91e43b
	127	[4820]	LOADK    	R9 K31 ; R9 := "StancePanel"
	128	[4820]	NEWTABLE 	R10 2 0 ; R10 := {}
	129	[4820]	GETUPVAL 	R11 U0 ; R11 := U0
	130	[4820]	GETTABLE 	R11 R11 K6 ; R11 := R11["ANCHOR_V_BOTTOM"]
	131	[4820]	GETUPVAL 	R12 U0 ; R12 := U0
	132	[4820]	GETTABLE 	R12 R12 K7 ; R12 := R12["ANCHOR_H_RIGHT"]
	133	[4820]	SETLIST  	R10 2 1 ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 2
	134	[4820]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	135	[4821]	GETUPVAL 	R6 U0 ; R6 := U0
	136	[4821]	SELF     	R6 R6 K17 ; R7 := R6; R6 := R6[0xfaa69527]
	137	[4821]	GETGLOBAL	R8 K4 ; R8 := 0xae91e43b
	138	[4821]	SELF     	R8 R8 K18 ; R9 := R8; R8 := R8[0x6b837788]
	139	[4821]	CALL     	R8 2 2 ; R8 := R8(R9)
	140	[4821]	GETGLOBAL	R9 K4 ; R9 := 0xae91e43b
	141	[4821]	SELF     	R9 R9 K19 ; R10 := R9; R9 := R9[0xaf9fda9f]
	142	[4821]	CALL     	R9 2 2 ; R9 := R9(R10)
	143	[4821]	OP_LOADBOOL	R10 1 0 ; R10 := true
	144	[4821]	GETUPVAL 	R11 U1 ; R11 := U1
	145	[4821]	GETTABLE 	R11 R11 K20 ; R11 := R11["HudScalePadding"]
	146	[4821]	CALL     	R6 6 1 ; R6(R7,R8,R9,R10,R11)
	147	[4823]	NEWTABLE 	R6 1 0 ; R6 := {}
	148	[4823]	LOADK    	R7 K31 ; R7 := "StancePanel"
	149	[4823]	SETLIST  	R6 1 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
	150	[4824]	GETGLOBAL	R7 K21 ; R7 := 0xc8802016
	151	[4824]	MOVE     	R8 R6 ; R8 := R6
	152	[4824]	CALL     	R7 2 4 ; R7,R8,R9 := R7(R8)
	153	[4824]	JMP      	159 ; PC := 159
	154	[4825]	GETGLOBAL	R12 K23 ; R12 := _T
	155	[4825]	GETTABLE 	R12 R12 K24 ; R12 := R12[0x6b23d28b]
	156	[4825]	GETGLOBAL	R13 K4 ; R13 := 0xae91e43b
	157	[4825]	MOVE     	R14 R11 ; R14 := R11
	158	[4825]	CALL     	R12 3 1 ; R12(R13,R14)
	159	[4824]	TFORLOOP 	R7 2 ; R10,R11 := R7(R8,R9); if R10 ~= nil then begin PC = 154; R9 := R10 end
	160	[4825]	JMP      	154 ; PC := 154
	161	[4828]	GETUPVAL 	R12 U2 ; R12 := U2
	162	[4828]	NEWTABLE 	R13 3 0 ; R13 := {}
	163	[4828]	LOADK    	R14 K33 ; R14 := 15299384.000000
	164	[4828]	LOADK    	R15 K34 ; R15 := 10081506.000000
	165	[4828]	LOADK    	R16 K35 ; R16 := 12032498.000000
	166	[4828]	SETLIST  	R13 3 1 ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 3
	167	[4828]	SETTABLE 	R12 K32 R13 ; R12["TeshinStanceActiveColors"] := R13
	168	[4829]	GETUPVAL 	R12 U2 ; R12 := U2
	169	[4829]	NEWTABLE 	R13 3 0 ; R13 := {}
	170	[4829]	LOADK    	R14 K37 ; R14 := 8031129.000000
	171	[4829]	LOADK    	R15 K37 ; R15 := 8031129.000000
	172	[4829]	LOADK    	R16 K37 ; R16 := 8031129.000000
	173	[4829]	SETLIST  	R13 3 1 ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 3
	174	[4829]	SETTABLE 	R12 K36 R13 ; R12["TeshinStanceInactiveColors"] := R13
	175	[4829]	JMP      	317 ; PC := 317
	176	[4830]	GETGLOBAL	R12 K0 ; R12 := 0xe72d2edb
	177	[4830]	EQ       	0 R12 K38 ; if R12 ~= 2.000000 then PC := 295
	178	[4830]	JMP      	295 ; PC := 295
	179	[4831]	GETUPVAL 	R12 U0 ; R12 := U0
	180	[4831]	SELF     	R12 R12 K3 ; R13 := R12; R12 := R12[0x20ff29f7]
	181	[4831]	GETGLOBAL	R14 K4 ; R14 := 0xae91e43b
	182	[4831]	LOADK    	R15 K39 ; R15 := "CorpusDeco.BottomLeftCorner"
	183	[4831]	NEWTABLE 	R16 2 0 ; R16 := {}
	184	[4831]	GETUPVAL 	R17 U0 ; R17 := U0
	185	[4831]	GETTABLE 	R17 R17 K6 ; R17 := R17["ANCHOR_V_BOTTOM"]
	186	[4831]	GETUPVAL 	R18 U0 ; R18 := U0
	187	[4831]	GETTABLE 	R18 R18 K10 ; R18 := R18["ANCHOR_H_LEFT"]
	188	[4831]	SETLIST  	R16 2 1 ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 2
	189	[4831]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	190	[4832]	GETUPVAL 	R12 U0 ; R12 := U0
	191	[4832]	SELF     	R12 R12 K3 ; R13 := R12; R12 := R12[0x20ff29f7]
	192	[4832]	GETGLOBAL	R14 K4 ; R14 := 0xae91e43b
	193	[4832]	LOADK    	R15 K40 ; R15 := "CorpusDeco.BottomRightCorner"
	194	[4832]	NEWTABLE 	R16 2 0 ; R16 := {}
	195	[4832]	GETUPVAL 	R17 U0 ; R17 := U0
	196	[4832]	GETTABLE 	R17 R17 K6 ; R17 := R17["ANCHOR_V_BOTTOM"]
	197	[4832]	GETUPVAL 	R18 U0 ; R18 := U0
	198	[4832]	GETTABLE 	R18 R18 K7 ; R18 := R18["ANCHOR_H_RIGHT"]
	199	[4832]	SETLIST  	R16 2 1 ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 2
	200	[4832]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	201	[4833]	GETUPVAL 	R12 U0 ; R12 := U0
	202	[4833]	SELF     	R12 R12 K3 ; R13 := R12; R12 := R12[0x20ff29f7]
	203	[4833]	GETGLOBAL	R14 K4 ; R14 := 0xae91e43b
	204	[4833]	LOADK    	R15 K41 ; R15 := "CorpusDeco.TopFlourish"
	205	[4833]	NEWTABLE 	R16 2 0 ; R16 := {}
	206	[4833]	GETUPVAL 	R17 U0 ; R17 := U0
	207	[4833]	GETTABLE 	R17 R17 K13 ; R17 := R17["ANCHOR_V_TOP"]
	208	[4833]	GETUPVAL 	R18 U0 ; R18 := U0
	209	[4833]	GETTABLE 	R18 R18 K14 ; R18 := R18["ANCHOR_H_CENTRE"]
	210	[4833]	SETLIST  	R16 2 1 ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 2
	211	[4833]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	212	[4834]	GETUPVAL 	R12 U0 ; R12 := U0
	213	[4834]	SELF     	R12 R12 K3 ; R13 := R12; R12 := R12[0x20ff29f7]
	214	[4834]	GETGLOBAL	R14 K4 ; R14 := 0xae91e43b
	215	[4834]	LOADK    	R15 K42 ; R15 := "CorpusDeco.BottomFlourish"
	216	[4834]	NEWTABLE 	R16 2 0 ; R16 := {}
	217	[4834]	GETUPVAL 	R17 U0 ; R17 := U0
	218	[4834]	GETTABLE 	R17 R17 K6 ; R17 := R17["ANCHOR_V_BOTTOM"]
	219	[4834]	GETUPVAL 	R18 U0 ; R18 := U0
	220	[4834]	GETTABLE 	R18 R18 K14 ; R18 := R18["ANCHOR_H_CENTRE"]
	221	[4834]	SETLIST  	R16 2 1 ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 2
	222	[4834]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	223	[4835]	GETUPVAL 	R12 U0 ; R12 := U0
	224	[4835]	SELF     	R12 R12 K3 ; R13 := R12; R12 := R12[0x20ff29f7]
	225	[4835]	GETGLOBAL	R14 K4 ; R14 := 0xae91e43b
	226	[4835]	LOADK    	R15 K43 ; R15 := "CorpusDeco.LeftFlourish"
	227	[4835]	NEWTABLE 	R16 2 0 ; R16 := {}
	228	[4835]	GETUPVAL 	R17 U0 ; R17 := U0
	229	[4835]	GETTABLE 	R17 R17 K16 ; R17 := R17["ANCHOR_V_CENTRE"]
	230	[4835]	GETUPVAL 	R18 U0 ; R18 := U0
	231	[4835]	GETTABLE 	R18 R18 K10 ; R18 := R18["ANCHOR_H_LEFT"]
	232	[4835]	SETLIST  	R16 2 1 ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 2
	233	[4835]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	234	[4836]	GETUPVAL 	R12 U0 ; R12 := U0
	235	[4836]	SELF     	R12 R12 K3 ; R13 := R12; R12 := R12[0x20ff29f7]
	236	[4836]	GETGLOBAL	R14 K4 ; R14 := 0xae91e43b
	237	[4836]	LOADK    	R15 K44 ; R15 := "CorpusDeco.RightFlourish"
	238	[4836]	NEWTABLE 	R16 2 0 ; R16 := {}
	239	[4836]	GETUPVAL 	R17 U0 ; R17 := U0
	240	[4836]	GETTABLE 	R17 R17 K16 ; R17 := R17["ANCHOR_V_CENTRE"]
	241	[4836]	GETUPVAL 	R18 U0 ; R18 := U0
	242	[4836]	GETTABLE 	R18 R18 K7 ; R18 := R18["ANCHOR_H_RIGHT"]
	243	[4836]	SETLIST  	R16 2 1 ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 2
	244	[4836]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	245	[4837]	GETUPVAL 	R12 U0 ; R12 := U0
	246	[4837]	SELF     	R12 R12 K3 ; R13 := R12; R12 := R12[0x20ff29f7]
	247	[4837]	GETGLOBAL	R14 K4 ; R14 := 0xae91e43b
	248	[4837]	LOADK    	R15 K45 ; R15 := "MoaComponent"
	249	[4837]	NEWTABLE 	R16 2 0 ; R16 := {}
	250	[4837]	GETUPVAL 	R17 U0 ; R17 := U0
	251	[4837]	GETTABLE 	R17 R17 K6 ; R17 := R17["ANCHOR_V_BOTTOM"]
	252	[4837]	GETUPVAL 	R18 U0 ; R18 := U0
	253	[4837]	GETTABLE 	R18 R18 K7 ; R18 := R18["ANCHOR_H_RIGHT"]
	254	[4837]	SETLIST  	R16 2 1 ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 2
	255	[4837]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	256	[4838]	GETUPVAL 	R12 U0 ; R12 := U0
	257	[4838]	SELF     	R12 R12 K3 ; R13 := R12; R12 := R12[0x20ff29f7]
	258	[4838]	GETGLOBAL	R14 K4 ; R14 := 0xae91e43b
	259	[4838]	LOADK    	R15 K46 ; R15 := "StockTicker"
	260	[4838]	NEWTABLE 	R16 2 0 ; R16 := {}
	261	[4838]	GETUPVAL 	R17 U0 ; R17 := U0
	262	[4838]	GETTABLE 	R17 R17 K13 ; R17 := R17["ANCHOR_V_TOP"]
	263	[4838]	GETUPVAL 	R18 U0 ; R18 := U0
	264	[4838]	GETTABLE 	R18 R18 K7 ; R18 := R18["ANCHOR_H_RIGHT"]
	265	[4838]	SETLIST  	R16 2 1 ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 2
	266	[4838]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	267	[4839]	GETUPVAL 	R12 U0 ; R12 := U0
	268	[4839]	SELF     	R12 R12 K17 ; R13 := R12; R12 := R12[0xfaa69527]
	269	[4839]	GETGLOBAL	R14 K4 ; R14 := 0xae91e43b
	270	[4839]	SELF     	R14 R14 K18 ; R15 := R14; R14 := R14[0x6b837788]
	271	[4839]	CALL     	R14 2 2 ; R14 := R14(R15)
	272	[4839]	GETGLOBAL	R15 K4 ; R15 := 0xae91e43b
	273	[4839]	SELF     	R15 R15 K19 ; R16 := R15; R15 := R15[0xaf9fda9f]
	274	[4839]	CALL     	R15 2 2 ; R15 := R15(R16)
	275	[4839]	OP_LOADBOOL	R16 1 0 ; R16 := true
	276	[4839]	GETUPVAL 	R17 U1 ; R17 := U1
	277	[4839]	GETTABLE 	R17 R17 K20 ; R17 := R17["HudScalePadding"]
	278	[4839]	CALL     	R12 6 1 ; R12(R13,R14,R15,R16,R17)
	279	[4841]	NEWTABLE 	R12 2 0 ; R12 := {}
	280	[4841]	LOADK    	R13 K45 ; R13 := "MoaComponent"
	281	[4841]	LOADK    	R14 K46 ; R14 := "StockTicker"
	282	[4841]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	283	[4842]	GETGLOBAL	R13 K21 ; R13 := 0xc8802016
	284	[4842]	MOVE     	R14 R12 ; R14 := R12
	285	[4842]	CALL     	R13 2 4 ; R13,R14,R15 := R13(R14)
	286	[4842]	JMP      	292 ; PC := 292
	287	[4843]	GETGLOBAL	R18 K23 ; R18 := _T
	288	[4843]	GETTABLE 	R18 R18 K24 ; R18 := R18[0x6b23d28b]
	289	[4843]	GETGLOBAL	R19 K4 ; R19 := 0xae91e43b
	290	[4843]	MOVE     	R20 R17 ; R20 := R17
	291	[4843]	CALL     	R18 3 1 ; R18(R19,R20)
	292	[4842]	TFORLOOP 	R13 2 ; R16,R17 := R13(R14,R15); if R16 ~= nil then begin PC = 287; R15 := R16 end
	293	[4843]	JMP      	287 ; PC := 287
	294	[4844]	JMP      	317 ; PC := 317
	295	[4845]	GETGLOBAL	R18 K0 ; R18 := 0xe72d2edb
	296	[4845]	EQ       	0 R18 K47 ; if R18 ~= 4.000000 then PC := 317
	297	[4845]	JMP      	317 ; PC := 317
	298	[4846]	NEWTABLE 	R18 4 0 ; R18 := {}
	299	[4846]	NEWTABLE 	R19 0 3 ; R19 := {}
	300	[4846]	SETTABLE 	R19 K48 K49 ; R19["X"] := -154.300003
	301	[4846]	SETTABLE 	R19 K50 K51 ; R19["Y"] := 18.000000
	302	[4846]	SETTABLE 	R19 K52 K53 ; R19["Ability"] := "ACTIVATE_ABILITY_MENU_0"
	303	[4846]	NEWTABLE 	R20 0 3 ; R20 := {}
	304	[4846]	SETTABLE 	R20 K48 K54 ; R20["X"] := -98.900002
	305	[4846]	SETTABLE 	R20 K50 K51 ; R20["Y"] := 18.000000
	306	[4846]	SETTABLE 	R20 K52 K55 ; R20["Ability"] := "ACTIVATE_ABILITY_MENU_1"
	307	[4846]	NEWTABLE 	R21 0 3 ; R21 := {}
	308	[4846]	SETTABLE 	R21 K48 K56 ; R21["X"] := -42.750000
	309	[4846]	SETTABLE 	R21 K50 K51 ; R21["Y"] := 18.000000
	310	[4846]	SETTABLE 	R21 K52 K57 ; R21["Ability"] := "ACTIVATE_ABILITY_MENU_2"
	311	[4846]	NEWTABLE 	R22 0 3 ; R22 := {}
	312	[4846]	SETTABLE 	R22 K48 K58 ; R22["X"] := 12.250000
	313	[4846]	SETTABLE 	R22 K50 K51 ; R22["Y"] := 18.000000
	314	[4846]	SETTABLE 	R22 K52 K59 ; R22["Ability"] := "ACTIVATE_ABILITY_MENU_3"
	315	[4846]	SETLIST  	R18 4 1 ; R18[(1-1)*FPF+i] := R(18+i), 1 <= i <= 4
	316	[4846]	SETUPVAL 	R18 U3 ; U3 := R18
	317	[4849]	GETGLOBAL	R18 K60 ; R18 := 0x89326c93
	318	[4849]	SELF     	R18 R18 K61 ; R19 := R18; R18 := R18[0x78298275]
	319	[4849]	CALL     	R18 2 2 ; R18 := R18(R19)
	320	[4850]	GETGLOBAL	R19 K62 ; R19 := 0x7b998233
	321	[4850]	MOVE     	R20 R18 ; R20 := R18
	322	[4850]	CALL     	R19 2 2 ; R19 := R19(R20)
	323	[4850]	TEST     	R19 1 ; if R19 then PC := 352
	324	[4850]	JMP      	352 ; PC := 352
	325	[4851]	SELF     	R19 R18 K63 ; R20 := R18; R19 := R18[0xde321e6f]
	326	[4851]	CALL     	R19 2 2 ; R19 := R19(R20)
	327	[4851]	SELF     	R19 R19 K64 ; R20 := R19; R19 := R19[0x881b6b90]
	328	[4851]	LOADK    	R21 := 0.000000
	329	[4851]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	330	[4852]	GETGLOBAL	R20 K62 ; R20 := 0x7b998233
	331	[4852]	MOVE     	R21 R19 ; R21 := R19
	332	[4852]	CALL     	R20 2 2 ; R20 := R20(R21)
	333	[4852]	TEST     	R20 1 ; if R20 then PC := 352
	334	[4852]	JMP      	352 ; PC := 352
	335	[4853]	SELF     	R20 R19 K66 ; R21 := R19; R20 := R19[0x3279baa3]
	336	[4853]	OP_LOADBOOL	R22 1 0 ; R22 := true
	337	[4853]	CALL     	R20 3 1 ; R20(R21,R22)
	338	[4854]	GETUPVAL 	R20 U4 ; R20 := U4
	339	[4854]	SELF     	R21 R19 K67 ; R22 := R19; R21 := R19[0x7a7373f5]
	340	[4854]	CALL     	R21 2 2 ; R21 := R21(R22)
	341	[4854]	GETGLOBAL	R22 K68 ; R22 := 0x5bced4c4
	342	[4854]	GETTABLE 	R22 R22 K69 ; R22 := R22[0xac1b386a]
	343	[4854]	LOADK    	R23 K70 ; R23 := 9999.000000
	344	[4854]	SELF     	R24 R19 K71 ; R25 := R19; R24 := R19[0x094b3a83]
	345	[4854]	CALL     	R24 2 0 ; R24,... := R24(R25)
	346	[4854]	CALL     	R22 0 2 ; R22 := R22(R23,...)
	347	[4854]	SELF     	R23 R19 K72 ; R24 := R19; R23 := R19[0xd6bd1155]
	348	[4854]	CALL     	R23 2 2 ; R23 := R23(R24)
	349	[4854]	SELF     	R24 R19 K73 ; R25 := R19; R24 := R19[0xa63336e7]
	350	[4854]	CALL     	R24 2 0 ; R24,... := R24(R25)
	351	[4854]	CALL     	R20 0 1 ; R20(R21,...)
	352	[4857]	RETURN   	R0 1 ; return 

function #144 <?:4859,5325> (1776 instructions, 7104 bytes at 0000021123A078B0)
0 params, 56 slots, 40 upvalues, 0 locals, 313 constants, 4 functions
	1	[4860]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[4860]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x67bc869f]
	3	[4860]	LOADK    	R2 K2 ; R2 := "_root"
	4	[4860]	LOADK    	R3 := 10.000000
	5	[4860]	LOADK    	R4 := 0.000000
	6	[4860]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	7	[4861]	GETUPVAL 	R0 U0 ; R0 := U0
	8	[4861]	SETTABLE 	R0 K3 K4 ; R0["Fade"] := 1.000000
	9	[4862]	GETUPVAL 	R0 U0 ; R0 := U0
	10	[4862]	SETTABLE 	R0 K5 K6 ; R0["WaitingForProgressMovie"] := true
	11	[4864]	GETGLOBAL	R0 K7 ; R0 := 0x38f10e85
	12	[4864]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	13	[4864]	LOADK    	R2 K8 ; R2 := "MiniMapContainer.MiniMap.setMask"
	14	[4864]	LOADK    	R3 K9 ; R3 := "MiniMapContainer.Mask"
	15	[4864]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	16	[4865]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	17	[4865]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0xaade900e]
	18	[4865]	LOADK    	R2 K11 ; R2 := "TargetStatus.Name"
	19	[4865]	LOADK    	R3 := 11.000000
	20	[4865]	OP_LOADBOOL	R4 0 0 ; R4 := false
	21	[4865]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	22	[4866]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	23	[4866]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0xaade900e]
	24	[4866]	LOADK    	R2 K12 ; R2 := "TargetStatus.Desc"
	25	[4866]	LOADK    	R3 := 11.000000
	26	[4866]	OP_LOADBOOL	R4 0 0 ; R4 := false
	27	[4866]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	28	[4868]	GETGLOBAL	R0 K13 ; R0 := _T
	29	[4868]	GETGLOBAL	R1 K15 ; R1 := 0xe72d2edb
	30	[4868]	SETTABLE 	R0 K14 R1 ; R0[0xa94df70b] := R1
	31	[4870]	GETGLOBAL	R0 K16 ; R0 := 0x7b998233
	32	[4870]	GETGLOBAL	R1 K17 ; R1 := 0x9d6c77be
	33	[4870]	CALL     	R0 2 2 ; R0 := R0(R1)
	34	[4870]	TEST     	R0 1 ; if R0 then PC := 39
	35	[4870]	JMP      	39 ; PC := 39
	36	[4871]	GETUPVAL 	R0 U1 ; R0 := U1
	37	[4871]	GETGLOBAL	R1 K17 ; R1 := 0x9d6c77be
	38	[4871]	CALL     	R0 2 1 ; R0(R1)
	39	[4874]	GETGLOBAL	R0 K16 ; R0 := 0x7b998233
	40	[4874]	GETGLOBAL	R1 K18 ; R1 := 0x4c5fdf9c
	41	[4874]	CALL     	R0 2 2 ; R0 := R0(R1)
	42	[4874]	TEST     	R0 1 ; if R0 then PC := 48
	43	[4874]	JMP      	48 ; PC := 48
	44	[4875]	GETGLOBAL	R0 K19 ; R0 := 0x9ba7909f
	45	[4875]	SELF     	R0 R0 K20 ; R1 := R0; R0 := R0[0x6dd7aa66]
	46	[4875]	GETGLOBAL	R2 K18 ; R2 := 0x4c5fdf9c
	47	[4875]	CALL     	R0 3 1 ; R0(R1,R2)
	48	[4878]	GETGLOBAL	R0 K16 ; R0 := 0x7b998233
	49	[4878]	GETGLOBAL	R1 K21 ; R1 := 0x13d86d46
	50	[4878]	CALL     	R0 2 2 ; R0 := R0(R1)
	51	[4878]	TEST     	R0 1 ; if R0 then PC := 84
	52	[4878]	JMP      	84 ; PC := 84
	53	[4879]	GETUPVAL 	R0 U2 ; R0 := U2
	54	[4879]	GETGLOBAL	R1 K19 ; R1 := 0x9ba7909f
	55	[4879]	SELF     	R1 R1 K23 ; R2 := R1; R1 := R1[0xbcfb64ab]
	56	[4879]	GETGLOBAL	R3 K21 ; R3 := 0x13d86d46
	57	[4879]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	58	[4879]	SETTABLE 	R0 K22 R1 ; R0["mHudMarkersMovie"] := R1
	59	[4880]	GETGLOBAL	R0 K16 ; R0 := 0x7b998233
	60	[4880]	GETUPVAL 	R1 U2 ; R1 := U2
	61	[4880]	GETTABLE 	R1 R1 K22 ; R1 := R1["mHudMarkersMovie"]
	62	[4880]	CALL     	R0 2 2 ; R0 := R0(R1)
	63	[4880]	TEST     	R0 0 ; if not R0 then PC := 84
	64	[4880]	JMP      	84 ; PC := 84
	65	[4881]	GETUPVAL 	R0 U2 ; R0 := U2
	66	[4881]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	67	[4881]	SELF     	R1 R1 K24 ; R2 := R1; R1 := R1[0x1fd6abd0]
	68	[4881]	GETGLOBAL	R3 K21 ; R3 := 0x13d86d46
	69	[4881]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	70	[4881]	SETTABLE 	R0 K22 R1 ; R0["mHudMarkersMovie"] := R1
	71	[4882]	GETGLOBAL	R0 K16 ; R0 := 0x7b998233
	72	[4882]	GETUPVAL 	R1 U2 ; R1 := U2
	73	[4882]	GETTABLE 	R1 R1 K22 ; R1 := R1["mHudMarkersMovie"]
	74	[4882]	CALL     	R0 2 2 ; R0 := R0(R1)
	75	[4882]	TEST     	R0 1 ; if R0 then PC := 84
	76	[4882]	JMP      	84 ; PC := 84
	77	[4883]	GETUPVAL 	R0 U2 ; R0 := U2
	78	[4883]	GETTABLE 	R0 R0 K22 ; R0 := R0["mHudMarkersMovie"]
	79	[4883]	SELF     	R0 R0 K25 ; R1 := R0; R0 := R0[0x263a3cc2]
	80	[4883]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	81	[4883]	SELF     	R2 R2 K26 ; R3 := R2; R2 := R2[0xcd73323e]
	82	[4883]	CALL     	R2 2 0 ; R2,... := R2(R3)
	83	[4883]	CALL     	R0 0 1 ; R0(R1,...)
	84	[4888]	GETUPVAL 	R0 U2 ; R0 := U2
	85	[4888]	GETGLOBAL	R1 K19 ; R1 := 0x9ba7909f
	86	[4888]	SELF     	R1 R1 K28 ; R2 := R1; R1 := R1[0xbf9494fc]
	87	[4888]	LOADK    	R3 K29 ; R3 := "HUD.UseAlternateHud"
	88	[4888]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	89	[4888]	SETTABLE 	R0 K27 R1 ; R0["IsAlternateHud"] := R1
	90	[4889]	GETUPVAL 	R0 U2 ; R0 := U2
	91	[4889]	GETTABLE 	R0 R0 K27 ; R0 := R0["IsAlternateHud"]
	92	[4889]	TEST     	R0 0 ; if not R0 then PC := 106
	93	[4889]	JMP      	106 ; PC := 106
	94	[4890]	GETGLOBAL	R0 K19 ; R0 := 0x9ba7909f
	95	[4890]	SELF     	R0 R0 K20 ; R1 := R0; R0 := R0[0x6dd7aa66]
	96	[4890]	GETGLOBAL	R2 K30 ; R2 := 0x4e5d03d3
	97	[4890]	CALL     	R0 3 1 ; R0(R1,R2)
	98	[4892]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	99	[4892]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x67bc869f]
	100	[4892]	LOADK    	R2 K2 ; R2 := "_root"
	101	[4892]	LOADK    	R3 := 10.000000
	102	[4892]	LOADK    	R4 := 100.000000
	103	[4892]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	104	[4893]	GETUPVAL 	R0 U0 ; R0 := U0
	105	[4893]	SETTABLE 	R0 K3 K31 ; R0["Fade"] := 0.000000
	106	[4896]	LOADK    	R0 := 25.000000
	107	[4898]	GETUPVAL 	R1 U3 ; R1 := U3
	108	[4898]	OP_LOADBOOL	R2 1 0 ; R2 := true
	109	[4898]	CALL     	R1 2 1 ; R1(R2)
	110	[4899]	GETUPVAL 	R1 U2 ; R1 := U2
	111	[4899]	GETUPVAL 	R2 U4 ; R2 := U4
	112	[4899]	SELF     	R2 R2 K33 ; R3 := R2; R2 := R2[0x1a8ce866]
	113	[4899]	CALL     	R2 2 2 ; R2 := R2(R3)
	114	[4899]	SETTABLE 	R1 K32 R2 ; R1["IsInConclave"] := R2
	115	[4901]	GETUPVAL 	R1 U5 ; R1 := U5
	116	[4901]	CALL     	R1 1 1 ; R1()
	117	[4903]	GETUPVAL 	R1 U6 ; R1 := U6
	118	[4903]	GETTABLE 	R1 R1 K34 ; R1 := R1[0xca6539f4]
	119	[4903]	CALL     	R1 1 1 ; R1()
	120	[4905]	GETGLOBAL	R1 K35 ; R1 := 0x76ea806b
	121	[4905]	SELF     	R1 R1 K36 ; R2 := R1; R1 := R1[0x8792aaab]
	122	[4905]	CALL     	R1 2 2 ; R1 := R1(R2)
	123	[4905]	TEST     	R1 0 ; if not R1 then PC := 134
	124	[4905]	JMP      	134 ; PC := 134
	125	[4907]	GETGLOBAL	R1 K37 ; R1 := 0x11a19c5e
	126	[4907]	GETGLOBAL	R2 K35 ; R2 := 0x76ea806b
	127	[4907]	SELF     	R2 R2 K38 ; R3 := R2; R2 := R2[0x3f3ae64c]
	128	[4907]	LOADK    	R4 := 0.000000
	129	[4907]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	130	[4907]	SELF     	R2 R2 K39 ; R3 := R2; R2 := R2[0x80563238]
	131	[4907]	CALL     	R2 2 2 ; R2 := R2(R3)
	132	[4907]	LOADK    	R3 K40 ; R3 := "OnProfileSaved"
	133	[4907]	CALL     	R1 3 1 ; R1(R2,R3)
	134	[4911]	NEWTABLE 	R1 9 0 ; R1 := {}
	135	[4911]	LOADK    	R2 K41 ; R2 := "ProgressBar"
	136	[4911]	LOADK    	R3 K42 ; R3 := "Timer"
	137	[4911]	LOADK    	R4 K43 ; R4 := "HealthTracker"
	138	[4911]	LOADK    	R5 K44 ; R5 := "OpponentBar"
	139	[4911]	LOADK    	R6 K45 ; R6 := "Label"
	140	[4911]	LOADK    	R7 K46 ; R7 := "IconBar"
	141	[4911]	LOADK    	R8 K47 ; R8 := "TemperatureBar"
	142	[4911]	LOADK    	R9 K48 ; R9 := "CorruptionMeter"
	143	[4911]	LOADK    	R10 K49 ; R10 := "NodeConflictBar"
	144	[4911]	SETLIST  	R1 9 1 ; R1[(1-1)*FPF+i] := R(1+i), 1 <= i <= 9
	145	[4912]	GETGLOBAL	R2 K50 ; R2 := 0xc8802016
	146	[4912]	MOVE     	R3 R1 ; R3 := R1
	147	[4912]	CALL     	R2 2 4 ; R2,R3,R4 := R2(R3)
	148	[4912]	JMP      	156 ; PC := 156
	149	[4913]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	150	[4913]	SELF     	R7 R7 K51 ; R8 := R7; R7 := R7[0xc0a3774b]
	151	[4913]	LOADK    	R9 K52 ; R9 := "HudTracker.Trackers"
	152	[4913]	MOVE     	R10 R6 ; R10 := R6
	153	[4913]	LOADK    	R11 := 11.000000
	154	[4913]	OP_LOADBOOL	R12 0 0 ; R12 := false
	155	[4913]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	156	[4912]	TFORLOOP 	R2 2 ; R5,R6 := R2(R3,R4); if R5 ~= nil then begin PC = 149; R4 := R5 end
	157	[4913]	JMP      	149 ; PC := 149
	158	[4915]	GETGLOBAL	R7 K53 ; R7 := 0x34291f5c
	159	[4915]	GETTABLE 	R7 R7 K54 ; R7 := R7[0xa7a2e381]
	160	[4915]	CALL     	R7 1 2 ; R7 := R7()
	161	[4915]	TEST     	R7 0 ; if not R7 then PC := 177
	162	[4915]	JMP      	177 ; PC := 177
	163	[4917]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	164	[4917]	SELF     	R7 R7 K55 ; R8 := R7; R7 := R7[0xe261aa96]
	165	[4917]	LOADK    	R9 K52 ; R9 := "HudTracker.Trackers"
	166	[4917]	LOADK    	R10 K45 ; R10 := "Label"
	167	[4917]	LOADK    	R11 := 41.000000
	168	[4917]	LOADK    	R12 K56 ; R12 := "Arial Unicode MS"
	169	[4917]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	170	[4919]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	171	[4919]	SELF     	R7 R7 K55 ; R8 := R7; R7 := R7[0xe261aa96]
	172	[4919]	LOADK    	R9 K57 ; R9 := "HudTracker.Trackers.HealthTracker"
	173	[4919]	LOADK    	R10 K58 ; R10 := "Name"
	174	[4919]	LOADK    	R11 := 41.000000
	175	[4919]	LOADK    	R12 K56 ; R12 := "Arial Unicode MS"
	176	[4919]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	177	[4922]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	178	[4922]	SELF     	R7 R7 K10 ; R8 := R7; R7 := R7[0xaade900e]
	179	[4922]	LOADK    	R9 K59 ; R9 := "MiniMapContainer.BroadcastMessage"
	180	[4922]	LOADK    	R10 := 11.000000
	181	[4922]	OP_LOADBOOL	R11 0 0 ; R11 := false
	182	[4922]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	183	[4924]	GETUPVAL 	R7 U4 ; R7 := U4
	184	[4924]	SELF     	R7 R7 K60 ; R8 := R7; R7 := R7[0xf2deaf69]
	185	[4924]	GETGLOBAL	R9 K61 ; R9 := gLotusBaseGameRulesType
	186	[4924]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	187	[4924]	TEST     	R7 0 ; if not R7 then PC := 217
	188	[4924]	JMP      	217 ; PC := 217
	189	[4925]	GETUPVAL 	R7 U4 ; R7 := U4
	190	[4925]	SELF     	R7 R7 K62 ; R8 := R7; R7 := R7[0xef893aec]
	191	[4925]	CALL     	R7 2 2 ; R7 := R7(R8)
	192	[4926]	GETUPVAL 	R8 U7 ; R8 := U7
	193	[4926]	GETTABLE 	R9 R7 K64 ; R9 := R7["location"]
	194	[4926]	GETUPVAL 	R10 U6 ; R10 := U6
	195	[4926]	GETTABLE 	R10 R10 K65 ; R10 := R10["CETUS_NODE_TAG"]
	196	[4926]	EQ       	1 R9 R10 ; if R9 == R10 then PC := 202
	197	[4926]	JMP      	202 ; PC := 202
	198	[4926]	GETTABLE 	R9 R7 K66 ; R9 := R7["missionType"]
	199	[4926]	EQ       	1 R9 K68 ; if R9 == 28.000000 then PC := 202
	200	[4926]	JMP      	202 ; PC := 202
	201	[4926]	OP_LOADBOOL	R9 0 1 ; R9 := false; PC := 202
	202	[4926]	OP_LOADBOOL	R9 1 0 ; R9 := true
	203	[4926]	SETTABLE 	R8 K63 R9 ; R8["Active"] := R9
	204	[4927]	GETUPVAL 	R8 U7 ; R8 := U7
	205	[4927]	GETTABLE 	R9 R7 K66 ; R9 := R7["missionType"]
	206	[4927]	EQ       	1 R9 K68 ; if R9 == 28.000000 then PC := 209
	207	[4927]	JMP      	209 ; PC := 209
	208	[4927]	OP_LOADBOOL	R9 0 1 ; R9 := false; PC := 209
	209	[4927]	OP_LOADBOOL	R9 1 0 ; R9 := true
	210	[4927]	SETTABLE 	R8 K69 R9 ; R8["Landscape"] := R9
	211	[4928]	GETUPVAL 	R8 U7 ; R8 := U7
	212	[4928]	SETTABLE 	R8 K70 K71 ; R8["Visible"] := false
	213	[4929]	GETUPVAL 	R8 U7 ; R8 := U7
	214	[4929]	SETTABLE 	R8 K72 K31 ; R8["DayCount"] := 0.000000
	215	[4930]	GETUPVAL 	R8 U7 ; R8 := U7
	216	[4930]	SETTABLE 	R8 K73 K31 ; R8["GameTimeAtDusk"] := 0.000000
	217	[4932]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	218	[4932]	SELF     	R8 R8 K10 ; R9 := R8; R8 := R8[0xaade900e]
	219	[4932]	LOADK    	R10 K74 ; R10 := "MiniMapContainer.Clock"
	220	[4932]	LOADK    	R11 := 11.000000
	221	[4932]	GETUPVAL 	R12 U7 ; R12 := U7
	222	[4932]	GETTABLE 	R12 R12 K70 ; R12 := R12["Visible"]
	223	[4932]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	224	[4933]	GETUPVAL 	R8 U7 ; R8 := U7
	225	[4933]	GETTABLE 	R8 R8 K70 ; R8 := R8["Visible"]
	226	[4933]	TEST     	R8 0 ; if not R8 then PC := 258
	227	[4933]	JMP      	258 ; PC := 258
	228	[4934]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	229	[4934]	SELF     	R8 R8 K75 ; R9 := R8; R8 := R8[0xef99134f]
	230	[4934]	LOADK    	R10 K76 ; R10 := "MiniMapContainer.Clock.Spinner.Day"
	231	[4934]	GETGLOBAL	R11 K77 ; R11 := 0x3d08cdc8
	232	[4934]	GETTABLE 	R11 R11 K4 ; R11 := R11[1.000000]
	233	[4934]	GETGLOBAL	R12 K78 ; R12 := 0x0032441c
	234	[4934]	GETTABLE 	R12 R12 K79 ; R12 := R12["UIMaterial_Plain"]
	235	[4934]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	236	[4935]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	237	[4935]	SELF     	R8 R8 K1 ; R9 := R8; R8 := R8[0x67bc869f]
	238	[4935]	LOADK    	R10 K76 ; R10 := "MiniMapContainer.Clock.Spinner.Day"
	239	[4935]	LOADK    	R11 := 9.000000
	240	[4935]	GETGLOBAL	R12 K78 ; R12 := 0x0032441c
	241	[4935]	GETTABLE 	R12 R12 K80 ; R12 := R12["UIColor_PvpTeamOne"]
	242	[4935]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	243	[4936]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	244	[4936]	SELF     	R8 R8 K75 ; R9 := R8; R8 := R8[0xef99134f]
	245	[4936]	LOADK    	R10 K81 ; R10 := "MiniMapContainer.Clock.Spinner.Night"
	246	[4936]	GETGLOBAL	R11 K77 ; R11 := 0x3d08cdc8
	247	[4936]	GETTABLE 	R11 R11 K82 ; R11 := R11[2.000000]
	248	[4936]	GETGLOBAL	R12 K78 ; R12 := 0x0032441c
	249	[4936]	GETTABLE 	R12 R12 K79 ; R12 := R12["UIMaterial_Plain"]
	250	[4936]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	251	[4937]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	252	[4937]	SELF     	R8 R8 K1 ; R9 := R8; R8 := R8[0x67bc869f]
	253	[4937]	LOADK    	R10 K81 ; R10 := "MiniMapContainer.Clock.Spinner.Night"
	254	[4937]	LOADK    	R11 := 9.000000
	255	[4937]	GETGLOBAL	R12 K78 ; R12 := 0x0032441c
	256	[4937]	GETTABLE 	R12 R12 K83 ; R12 := R12["UIColor_PvpTeamTwo"]
	257	[4937]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	258	[4941]	GETUPVAL 	R8 U8 ; R8 := U8
	259	[4941]	GETGLOBAL	R9 K0 ; R9 := 0xae91e43b
	260	[4941]	SELF     	R9 R9 K85 ; R10 := R9; R9 := R9[0x42b04007]
	261	[4941]	LOADK    	R11 K86 ; R11 := "/Lotus/Language/Menu/VoidTearProgressTitle"
	262	[4941]	OP_LOADBOOL	R12 1 0 ; R12 := true
	263	[4941]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	264	[4941]	SETTABLE 	R8 K84 R9 ; R8["Message"] := R9
	265	[4942]	GETUPVAL 	R8 U8 ; R8 := U8
	266	[4942]	GETGLOBAL	R9 K88 ; R9 := 0xb2f21425
	267	[4942]	SETTABLE 	R8 K87 R9 ; R8["Icon"] := R9
	268	[4943]	GETUPVAL 	R8 U8 ; R8 := U8
	269	[4943]	SETTABLE 	R8 K89 K6 ; R8["UpdateOverrides"] := true
	270	[4944]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	271	[4944]	SELF     	R8 R8 K1 ; R9 := R8; R8 := R8[0x67bc869f]
	272	[4944]	LOADK    	R10 K90 ; R10 := "MiniMapContainer.VoidTearProgress"
	273	[4944]	LOADK    	R11 := 10.000000
	274	[4944]	LOADK    	R12 := 0.000000
	275	[4944]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	276	[4946]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	277	[4946]	SELF     	R8 R8 K1 ; R9 := R8; R8 := R8[0x67bc869f]
	278	[4946]	LOADK    	R10 K91 ; R10 := "Card"
	279	[4946]	LOADK    	R11 := 1.000000
	280	[4946]	LOADK    	R12 := 360.000000
	281	[4946]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	282	[4948]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	283	[4948]	SELF     	R8 R8 K10 ; R9 := R8; R8 := R8[0xaade900e]
	284	[4948]	LOADK    	R10 K92 ; R10 := "MiniMapContainer.VoidTearProgress.List"
	285	[4948]	LOADK    	R11 := 11.000000
	286	[4948]	OP_LOADBOOL	R12 0 0 ; R12 := false
	287	[4948]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	288	[4950]	GETUPVAL 	R8 U9 ; R8 := U9
	289	[4950]	CALL     	R8 1 1 ; R8()
	290	[4952]	GETUPVAL 	R8 U10 ; R8 := U10
	291	[4952]	CALL     	R8 1 1 ; R8()
	292	[4953]	GETUPVAL 	R8 U12 ; R8 := U12
	293	[4953]	GETTABLE 	R8 R8 K93 ; R8 := R8[0xae6791ba]
	294	[4953]	GETGLOBAL	R9 K0 ; R9 := 0xae91e43b
	295	[4953]	CALL     	R8 2 2 ; R8 := R8(R9)
	296	[4953]	SETUPVAL 	R8 U11 ; U11 := R8
	297	[4954]	GETUPVAL 	R8 U11 ; R8 := U11
	298	[4954]	GETUPVAL 	R9 U13 ; R9 := U13
	299	[4954]	GETTABLE 	R9 R9 K95 ; R9 := R9["HudScalePadding"]
	300	[4954]	SETTABLE 	R8 K94 R9 ; R8["mHudScalePadding"] := R9
	301	[4955]	GETUPVAL 	R8 U11 ; R8 := U11
	302	[4955]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	303	[4955]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	304	[4955]	LOADK    	R11 K97 ; R11 := "LogMessageContainer"
	305	[4955]	NEWTABLE 	R12 2 0 ; R12 := {}
	306	[4955]	GETUPVAL 	R13 U11 ; R13 := U11
	307	[4955]	GETTABLE 	R13 R13 K98 ; R13 := R13["ANCHOR_V_BOTTOM"]
	308	[4955]	GETUPVAL 	R14 U11 ; R14 := U11
	309	[4955]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	310	[4955]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	311	[4955]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	312	[4956]	GETUPVAL 	R8 U11 ; R8 := U11
	313	[4956]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	314	[4956]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	315	[4956]	LOADK    	R11 K91 ; R11 := "Card"
	316	[4956]	NEWTABLE 	R12 2 0 ; R12 := {}
	317	[4956]	GETUPVAL 	R13 U11 ; R13 := U11
	318	[4956]	GETTABLE 	R13 R13 K100 ; R13 := R13["ANCHOR_V_CENTRE"]
	319	[4956]	GETUPVAL 	R14 U11 ; R14 := U11
	320	[4956]	GETTABLE 	R14 R14 K101 ; R14 := R14["ANCHOR_H_RIGHT"]
	321	[4956]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	322	[4956]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	323	[4957]	GETUPVAL 	R8 U11 ; R8 := U11
	324	[4957]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	325	[4957]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	326	[4957]	LOADK    	R11 K102 ; R11 := "HealthAndShield"
	327	[4957]	NEWTABLE 	R12 2 0 ; R12 := {}
	328	[4957]	GETUPVAL 	R13 U11 ; R13 := U11
	329	[4957]	GETTABLE 	R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
	330	[4957]	GETUPVAL 	R14 U11 ; R14 := U11
	331	[4957]	GETTABLE 	R14 R14 K101 ; R14 := R14["ANCHOR_H_RIGHT"]
	332	[4957]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	333	[4957]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	334	[4958]	GETUPVAL 	R8 U11 ; R8 := U11
	335	[4958]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	336	[4958]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	337	[4958]	LOADK    	R11 K104 ; R11 := "WeaponFrame"
	338	[4958]	NEWTABLE 	R12 2 0 ; R12 := {}
	339	[4958]	GETUPVAL 	R13 U11 ; R13 := U11
	340	[4958]	GETTABLE 	R13 R13 K98 ; R13 := R13["ANCHOR_V_BOTTOM"]
	341	[4958]	GETUPVAL 	R14 U11 ; R14 := U11
	342	[4958]	GETTABLE 	R14 R14 K101 ; R14 := R14["ANCHOR_H_RIGHT"]
	343	[4958]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	344	[4958]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	345	[4959]	GETUPVAL 	R8 U11 ; R8 := U11
	346	[4959]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	347	[4959]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	348	[4959]	LOADK    	R11 K105 ; R11 := "QuestMessage"
	349	[4959]	NEWTABLE 	R12 2 0 ; R12 := {}
	350	[4959]	GETUPVAL 	R13 U11 ; R13 := U11
	351	[4959]	GETTABLE 	R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
	352	[4959]	GETUPVAL 	R14 U11 ; R14 := U11
	353	[4959]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	354	[4959]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	355	[4959]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	356	[4960]	GETUPVAL 	R8 U11 ; R8 := U11
	357	[4960]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	358	[4960]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	359	[4960]	LOADK    	R11 K106 ; R11 := "AbilityPanel"
	360	[4960]	NEWTABLE 	R12 2 0 ; R12 := {}
	361	[4960]	GETUPVAL 	R13 U11 ; R13 := U11
	362	[4960]	GETTABLE 	R13 R13 K98 ; R13 := R13["ANCHOR_V_BOTTOM"]
	363	[4960]	GETUPVAL 	R14 U11 ; R14 := U11
	364	[4960]	GETTABLE 	R14 R14 K101 ; R14 := R14["ANCHOR_H_RIGHT"]
	365	[4960]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	366	[4960]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	367	[4961]	GETUPVAL 	R8 U11 ; R8 := U11
	368	[4961]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	369	[4961]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	370	[4961]	LOADK    	R11 K107 ; R11 := "MiniMapContainer"
	371	[4961]	NEWTABLE 	R12 2 0 ; R12 := {}
	372	[4961]	GETUPVAL 	R13 U11 ; R13 := U11
	373	[4961]	GETTABLE 	R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
	374	[4961]	GETUPVAL 	R14 U11 ; R14 := U11
	375	[4961]	GETTABLE 	R14 R14 K108 ; R14 := R14["ANCHOR_H_LEFT"]
	376	[4961]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	377	[4961]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	378	[4962]	GETUPVAL 	R8 U11 ; R8 := U11
	379	[4962]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	380	[4962]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	381	[4962]	LOADK    	R11 K109 ; R11 := "MiniMapOverlayMsg"
	382	[4962]	NEWTABLE 	R12 2 0 ; R12 := {}
	383	[4962]	GETUPVAL 	R13 U11 ; R13 := U11
	384	[4962]	GETTABLE 	R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
	385	[4962]	GETUPVAL 	R14 U11 ; R14 := U11
	386	[4962]	GETTABLE 	R14 R14 K108 ; R14 := R14["ANCHOR_H_LEFT"]
	387	[4962]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	388	[4962]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	389	[4963]	GETUPVAL 	R8 U11 ; R8 := U11
	390	[4963]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	391	[4963]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	392	[4963]	LOADK    	R11 K110 ; R11 := "HudTracker"
	393	[4963]	NEWTABLE 	R12 2 0 ; R12 := {}
	394	[4963]	GETUPVAL 	R13 U11 ; R13 := U11
	395	[4963]	GETTABLE 	R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
	396	[4963]	GETUPVAL 	R14 U11 ; R14 := U11
	397	[4963]	GETTABLE 	R14 R14 K108 ; R14 := R14["ANCHOR_H_LEFT"]
	398	[4963]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	399	[4963]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	400	[4964]	GETUPVAL 	R8 U11 ; R8 := U11
	401	[4964]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	402	[4964]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	403	[4964]	LOADK    	R11 K111 ; R11 := "Reticle"
	404	[4964]	NEWTABLE 	R12 2 0 ; R12 := {}
	405	[4964]	GETUPVAL 	R13 U11 ; R13 := U11
	406	[4964]	GETTABLE 	R13 R13 K100 ; R13 := R13["ANCHOR_V_CENTRE"]
	407	[4964]	GETUPVAL 	R14 U11 ; R14 := U11
	408	[4964]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	409	[4964]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	410	[4964]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	411	[4965]	GETUPVAL 	R8 U11 ; R8 := U11
	412	[4965]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	413	[4965]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	414	[4965]	LOADK    	R11 K112 ; R11 := "ReticleCustom"
	415	[4965]	NEWTABLE 	R12 2 0 ; R12 := {}
	416	[4965]	GETUPVAL 	R13 U11 ; R13 := U11
	417	[4965]	GETTABLE 	R13 R13 K100 ; R13 := R13["ANCHOR_V_CENTRE"]
	418	[4965]	GETUPVAL 	R14 U11 ; R14 := U11
	419	[4965]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	420	[4965]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	421	[4965]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	422	[4966]	GETUPVAL 	R8 U11 ; R8 := U11
	423	[4966]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	424	[4966]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	425	[4966]	LOADK    	R11 K113 ; R11 := "AbilityDots"
	426	[4966]	NEWTABLE 	R12 2 0 ; R12 := {}
	427	[4966]	GETUPVAL 	R13 U11 ; R13 := U11
	428	[4966]	GETTABLE 	R13 R13 K100 ; R13 := R13["ANCHOR_V_CENTRE"]
	429	[4966]	GETUPVAL 	R14 U11 ; R14 := U11
	430	[4966]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	431	[4966]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	432	[4966]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	433	[4967]	GETUPVAL 	R8 U11 ; R8 := U11
	434	[4967]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	435	[4967]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	436	[4967]	LOADK    	R11 K114 ; R11 := "Stamina"
	437	[4967]	NEWTABLE 	R12 2 0 ; R12 := {}
	438	[4967]	GETUPVAL 	R13 U11 ; R13 := U11
	439	[4967]	GETTABLE 	R13 R13 K100 ; R13 := R13["ANCHOR_V_CENTRE"]
	440	[4967]	GETUPVAL 	R14 U11 ; R14 := U11
	441	[4967]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	442	[4967]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	443	[4967]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	444	[4968]	GETUPVAL 	R8 U11 ; R8 := U11
	445	[4968]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	446	[4968]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	447	[4968]	LOADK    	R11 K115 ; R11 := "SuccessfulHitNotification"
	448	[4968]	NEWTABLE 	R12 2 0 ; R12 := {}
	449	[4968]	GETUPVAL 	R13 U11 ; R13 := U11
	450	[4968]	GETTABLE 	R13 R13 K100 ; R13 := R13["ANCHOR_V_CENTRE"]
	451	[4968]	GETUPVAL 	R14 U11 ; R14 := U11
	452	[4968]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	453	[4968]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	454	[4968]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	455	[4969]	GETUPVAL 	R8 U11 ; R8 := U11
	456	[4969]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	457	[4969]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	458	[4969]	LOADK    	R11 K116 ; R11 := "Notification"
	459	[4969]	NEWTABLE 	R12 2 0 ; R12 := {}
	460	[4969]	GETUPVAL 	R13 U11 ; R13 := U11
	461	[4969]	GETTABLE 	R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
	462	[4969]	GETUPVAL 	R14 U11 ; R14 := U11
	463	[4969]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	464	[4969]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	465	[4969]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	466	[4970]	GETUPVAL 	R8 U11 ; R8 := U11
	467	[4970]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	468	[4970]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	469	[4970]	LOADK    	R11 K117 ; R11 := "SlamIndicator"
	470	[4970]	NEWTABLE 	R12 2 0 ; R12 := {}
	471	[4970]	GETUPVAL 	R13 U11 ; R13 := U11
	472	[4970]	GETTABLE 	R13 R13 K100 ; R13 := R13["ANCHOR_V_CENTRE"]
	473	[4970]	GETUPVAL 	R14 U11 ; R14 := U11
	474	[4970]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	475	[4970]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	476	[4970]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	477	[4971]	GETUPVAL 	R8 U11 ; R8 := U11
	478	[4971]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	479	[4971]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	480	[4971]	LOADK    	R11 K118 ; R11 := "SyndicatePower"
	481	[4971]	NEWTABLE 	R12 2 0 ; R12 := {}
	482	[4971]	GETUPVAL 	R13 U11 ; R13 := U11
	483	[4971]	GETTABLE 	R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
	484	[4971]	GETUPVAL 	R14 U11 ; R14 := U11
	485	[4971]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	486	[4971]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	487	[4971]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	488	[4972]	GETUPVAL 	R8 U11 ; R8 := U11
	489	[4972]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	490	[4972]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	491	[4972]	LOADK    	R11 K119 ; R11 := "reloadTimer"
	492	[4972]	NEWTABLE 	R12 2 0 ; R12 := {}
	493	[4972]	GETUPVAL 	R13 U11 ; R13 := U11
	494	[4972]	GETTABLE 	R13 R13 K100 ; R13 := R13["ANCHOR_V_CENTRE"]
	495	[4972]	GETUPVAL 	R14 U11 ; R14 := U11
	496	[4972]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	497	[4972]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	498	[4972]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	499	[4973]	GETUPVAL 	R8 U11 ; R8 := U11
	500	[4973]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	501	[4973]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	502	[4973]	LOADK    	R11 K120 ; R11 := "AbilityChargeProgress"
	503	[4973]	NEWTABLE 	R12 2 0 ; R12 := {}
	504	[4973]	GETUPVAL 	R13 U11 ; R13 := U11
	505	[4973]	GETTABLE 	R13 R13 K100 ; R13 := R13["ANCHOR_V_CENTRE"]
	506	[4973]	GETUPVAL 	R14 U11 ; R14 := U11
	507	[4973]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	508	[4973]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	509	[4973]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	510	[4974]	GETUPVAL 	R8 U11 ; R8 := U11
	511	[4974]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	512	[4974]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	513	[4974]	LOADK    	R11 K121 ; R11 := "DamageIndicator"
	514	[4974]	NEWTABLE 	R12 2 0 ; R12 := {}
	515	[4974]	GETUPVAL 	R13 U11 ; R13 := U11
	516	[4974]	GETTABLE 	R13 R13 K100 ; R13 := R13["ANCHOR_V_CENTRE"]
	517	[4974]	GETUPVAL 	R14 U11 ; R14 := U11
	518	[4974]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	519	[4974]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	520	[4974]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	521	[4975]	GETUPVAL 	R8 U11 ; R8 := U11
	522	[4975]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	523	[4975]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	524	[4975]	LOADK    	R11 K122 ; R11 := "Prompt"
	525	[4975]	NEWTABLE 	R12 2 0 ; R12 := {}
	526	[4975]	GETUPVAL 	R13 U11 ; R13 := U11
	527	[4975]	GETTABLE 	R13 R13 K98 ; R13 := R13["ANCHOR_V_BOTTOM"]
	528	[4975]	GETUPVAL 	R14 U11 ; R14 := U11
	529	[4975]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	530	[4975]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	531	[4975]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	532	[4976]	GETUPVAL 	R8 U11 ; R8 := U11
	533	[4976]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	534	[4976]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	535	[4976]	LOADK    	R11 K123 ; R11 := "BorderBox"
	536	[4976]	NEWTABLE 	R12 2 0 ; R12 := {}
	537	[4976]	GETUPVAL 	R13 U11 ; R13 := U11
	538	[4976]	GETTABLE 	R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
	539	[4976]	GETUPVAL 	R14 U11 ; R14 := U11
	540	[4976]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	541	[4976]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	542	[4976]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	543	[4977]	GETUPVAL 	R8 U11 ; R8 := U11
	544	[4977]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	545	[4977]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	546	[4977]	LOADK    	R11 K124 ; R11 := "GenericMessage"
	547	[4977]	NEWTABLE 	R12 2 0 ; R12 := {}
	548	[4977]	GETUPVAL 	R13 U11 ; R13 := U11
	549	[4977]	GETTABLE 	R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
	550	[4977]	GETUPVAL 	R14 U11 ; R14 := U11
	551	[4977]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	552	[4977]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	553	[4977]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	554	[4978]	GETUPVAL 	R8 U11 ; R8 := U11
	555	[4978]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	556	[4978]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	557	[4978]	LOADK    	R11 K125 ; R11 := "ImpactMessage"
	558	[4978]	NEWTABLE 	R12 2 0 ; R12 := {}
	559	[4978]	GETUPVAL 	R13 U11 ; R13 := U11
	560	[4978]	GETTABLE 	R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
	561	[4978]	GETUPVAL 	R14 U11 ; R14 := U11
	562	[4978]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	563	[4978]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	564	[4978]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	565	[4979]	GETUPVAL 	R8 U11 ; R8 := U11
	566	[4979]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	567	[4979]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	568	[4979]	LOADK    	R11 K126 ; R11 := "GameplayMessage"
	569	[4979]	NEWTABLE 	R12 2 0 ; R12 := {}
	570	[4979]	GETUPVAL 	R13 U11 ; R13 := U11
	571	[4979]	GETTABLE 	R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
	572	[4979]	GETUPVAL 	R14 U11 ; R14 := U11
	573	[4979]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	574	[4979]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	575	[4979]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	576	[4980]	GETUPVAL 	R8 U11 ; R8 := U11
	577	[4980]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	578	[4980]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	579	[4980]	LOADK    	R11 K127 ; R11 := "MiniGameScore"
	580	[4980]	NEWTABLE 	R12 2 0 ; R12 := {}
	581	[4980]	GETUPVAL 	R13 U11 ; R13 := U11
	582	[4980]	GETTABLE 	R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
	583	[4980]	GETUPVAL 	R14 U11 ; R14 := U11
	584	[4980]	GETTABLE 	R14 R14 K108 ; R14 := R14["ANCHOR_H_LEFT"]
	585	[4980]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	586	[4980]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	587	[4981]	GETUPVAL 	R8 U11 ; R8 := U11
	588	[4981]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	589	[4981]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	590	[4981]	LOADK    	R11 K128 ; R11 := "StandingGain"
	591	[4981]	NEWTABLE 	R12 2 0 ; R12 := {}
	592	[4981]	GETUPVAL 	R13 U11 ; R13 := U11
	593	[4981]	GETTABLE 	R13 R13 K100 ; R13 := R13["ANCHOR_V_CENTRE"]
	594	[4981]	GETUPVAL 	R14 U11 ; R14 := U11
	595	[4981]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	596	[4981]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	597	[4981]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	598	[4982]	GETUPVAL 	R8 U11 ; R8 := U11
	599	[4982]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	600	[4982]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	601	[4982]	LOADK    	R11 K129 ; R11 := "PvPHeldFlagTimer"
	602	[4982]	NEWTABLE 	R12 2 0 ; R12 := {}
	603	[4982]	GETUPVAL 	R13 U11 ; R13 := U11
	604	[4982]	GETTABLE 	R13 R13 K100 ; R13 := R13["ANCHOR_V_CENTRE"]
	605	[4982]	GETUPVAL 	R14 U11 ; R14 := U11
	606	[4982]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	607	[4982]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	608	[4982]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	609	[4983]	GETUPVAL 	R8 U11 ; R8 := U11
	610	[4983]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	611	[4983]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	612	[4983]	LOADK    	R11 K130 ; R11 := "RevivePanel"
	613	[4983]	NEWTABLE 	R12 2 0 ; R12 := {}
	614	[4983]	GETUPVAL 	R13 U11 ; R13 := U11
	615	[4983]	GETTABLE 	R13 R13 K98 ; R13 := R13["ANCHOR_V_BOTTOM"]
	616	[4983]	GETUPVAL 	R14 U11 ; R14 := U11
	617	[4983]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	618	[4983]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	619	[4983]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	620	[4984]	GETUPVAL 	R8 U11 ; R8 := U11
	621	[4984]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	622	[4984]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	623	[4984]	LOADK    	R11 K131 ; R11 := "Spinner"
	624	[4984]	NEWTABLE 	R12 2 0 ; R12 := {}
	625	[4984]	GETUPVAL 	R13 U11 ; R13 := U11
	626	[4984]	GETTABLE 	R13 R13 K108 ; R13 := R13["ANCHOR_H_LEFT"]
	627	[4984]	GETUPVAL 	R14 U11 ; R14 := U11
	628	[4984]	GETTABLE 	R14 R14 K98 ; R14 := R14["ANCHOR_V_BOTTOM"]
	629	[4984]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	630	[4984]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	631	[4985]	GETUPVAL 	R8 U11 ; R8 := U11
	632	[4985]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	633	[4985]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	634	[4985]	LOADK    	R11 K132 ; R11 := "TargetStatus"
	635	[4985]	NEWTABLE 	R12 2 0 ; R12 := {}
	636	[4985]	GETUPVAL 	R13 U11 ; R13 := U11
	637	[4985]	GETTABLE 	R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
	638	[4985]	GETUPVAL 	R14 U11 ; R14 := U11
	639	[4985]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	640	[4985]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	641	[4985]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	642	[4987]	GETGLOBAL	R8 K133 ; R8 := 0x2d0fad09
	643	[4987]	LOADK    	R9 K134 ; R9 := "Lotus.Interface.Components.ThemedSpinner"
	644	[4987]	CALL     	R8 2 2 ; R8 := R8(R9)
	645	[4988]	GETTABLE 	R9 R8 K93 ; R9 := R8[0xae6791ba]
	646	[4988]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	647	[4988]	LOADK    	R11 K131 ; R11 := "Spinner"
	648	[4988]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	649	[4988]	SETUPVAL 	R9 U14 ; U14 := R9
	650	[4989]	GETUPVAL 	R9 U14 ; R9 := U14
	651	[4989]	SETTABLE 	R9 K135 K6 ; R9["mApplyThemes"] := true
	652	[4991]	GETGLOBAL	R9 K16 ; R9 := 0x7b998233
	653	[4991]	GETUPVAL 	R10 U4 ; R10 := U4
	654	[4991]	CALL     	R9 2 2 ; R9 := R9(R10)
	655	[4991]	TEST     	R9 1 ; if R9 then PC := 689
	656	[4991]	JMP      	689 ; PC := 689
	657	[4991]	GETUPVAL 	R9 U4 ; R9 := U4
	658	[4991]	SELF     	R9 R9 K60 ; R10 := R9; R9 := R9[0xf2deaf69]
	659	[4991]	GETGLOBAL	R11 K136 ; R11 := gLotusBasePvpGameRulesType
	660	[4991]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	661	[4991]	TEST     	R9 1 ; if R9 then PC := 689
	662	[4991]	JMP      	689 ; PC := 689
	663	[4992]	LOADK    	R9 K129 ; R9 := "PvPHeldFlagTimer"
	664	[4993]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	665	[4993]	SELF     	R10 R10 K1 ; R11 := R10; R10 := R10[0x67bc869f]
	666	[4993]	MOVE     	R12 R9 ; R12 := R9
	667	[4993]	LOADK    	R13 := 5.000000
	668	[4993]	LOADK    	R14 := 50.000000
	669	[4993]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	670	[4994]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	671	[4994]	SELF     	R10 R10 K1 ; R11 := R10; R10 := R10[0x67bc869f]
	672	[4994]	MOVE     	R12 R9 ; R12 := R9
	673	[4994]	LOADK    	R13 := 6.000000
	674	[4994]	LOADK    	R14 := 50.000000
	675	[4994]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	676	[4995]	GETUPVAL 	R10 U11 ; R10 := U11
	677	[4995]	SELF     	R10 R10 K137 ; R11 := R10; R10 := R10[0x4bc5dc8b]
	678	[4995]	MOVE     	R12 R9 ; R12 := R9
	679	[4995]	LOADK    	R13 := 612.000000
	680	[4995]	LOADK    	R14 := 562.000000
	681	[4995]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	682	[4996]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	683	[4996]	SELF     	R10 R10 K1 ; R11 := R10; R10 := R10[0x67bc869f]
	684	[4996]	MOVE     	R12 R9 ; R12 := R9
	685	[4996]	LOADK    	R13 := 36.000000
	686	[4996]	GETGLOBAL	R14 K78 ; R14 := 0x0032441c
	687	[4996]	GETTABLE 	R14 R14 K138 ; R14 := R14["UIColor_White"]
	688	[4996]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	689	[4999]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	690	[4999]	SELF     	R10 R10 K139 ; R11 := R10; R10 := R10[0x91a24e4b]
	691	[4999]	LOADK    	R12 K125 ; R12 := "ImpactMessage"
	692	[4999]	LOADK    	R13 := 1.000000
	693	[4999]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	694	[4999]	SETUPVAL 	R10 U15 ; U15 := R10
	695	[5001]	GETUPVAL 	R10 U11 ; R10 := U11
	696	[5001]	SELF     	R10 R10 K140 ; R11 := R10; R10 := R10[0xfaa69527]
	697	[5001]	GETGLOBAL	R12 K0 ; R12 := 0xae91e43b
	698	[5001]	SELF     	R12 R12 K141 ; R13 := R12; R12 := R12[0x6b837788]
	699	[5001]	CALL     	R12 2 2 ; R12 := R12(R13)
	700	[5001]	GETGLOBAL	R13 K0 ; R13 := 0xae91e43b
	701	[5001]	SELF     	R13 R13 K142 ; R14 := R13; R13 := R13[0xaf9fda9f]
	702	[5001]	CALL     	R13 2 2 ; R13 := R13(R14)
	703	[5001]	OP_LOADBOOL	R14 1 0 ; R14 := true
	704	[5001]	GETUPVAL 	R15 U13 ; R15 := U13
	705	[5001]	GETTABLE 	R15 R15 K95 ; R15 := R15["HudScalePadding"]
	706	[5001]	CALL     	R10 6 1 ; R10(R11,R12,R13,R14,R15)
	707	[5003]	GETUPVAL 	R10 U16 ; R10 := U16
	708	[5003]	CALL     	R10 1 1 ; R10()
	709	[5005]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	710	[5005]	SELF     	R10 R10 K10 ; R11 := R10; R10 := R10[0xaade900e]
	711	[5005]	LOADK    	R12 K118 ; R12 := "SyndicatePower"
	712	[5005]	LOADK    	R13 := 11.000000
	713	[5005]	OP_LOADBOOL	R14 0 0 ; R14 := false
	714	[5005]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	715	[5006]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	716	[5006]	SELF     	R10 R10 K10 ; R11 := R10; R10 := R10[0xaade900e]
	717	[5006]	LOADK    	R12 K114 ; R12 := "Stamina"
	718	[5006]	LOADK    	R13 := 11.000000
	719	[5006]	OP_LOADBOOL	R14 0 0 ; R14 := false
	720	[5006]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	721	[5008]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	722	[5008]	SELF     	R10 R10 K143 ; R11 := R10; R10 := R10[0x52943844]
	723	[5008]	GETGLOBAL	R12 K0 ; R12 := 0xae91e43b
	724	[5008]	SELF     	R12 R12 K144 ; R13 := R12; R12 := R12[0x09839320]
	725	[5008]	LOADK    	R14 K145 ; R14 := "TargetHit1"
	726	[5008]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	727	[5008]	LOADK    	R13 := 11.000000
	728	[5008]	OP_LOADBOOL	R14 0 0 ; R14 := false
	729	[5008]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	730	[5010]	GETGLOBAL	R10 K16 ; R10 := 0x7b998233
	731	[5010]	GETGLOBAL	R11 K146 ; R11 := 0x2c15a601
	732	[5010]	CALL     	R10 2 2 ; R10 := R10(R11)
	733	[5010]	TEST     	R10 1 ; if R10 then PC := 755
	734	[5010]	JMP      	755 ; PC := 755
	735	[5010]	GETGLOBAL	R10 K19 ; R10 := 0x9ba7909f
	736	[5010]	SELF     	R10 R10 K28 ; R11 := R10; R10 := R10[0xbf9494fc]
	737	[5010]	LOADK    	R12 K147 ; R12 := "HUD.ShowInWorldContextActions"
	738	[5010]	OP_LOADBOOL	R13 1 0 ; R13 := true
	739	[5010]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	740	[5010]	TEST     	R10 0 ; if not R10 then PC := 755
	741	[5010]	JMP      	755 ; PC := 755
	742	[5011]	GETGLOBAL	R10 K19 ; R10 := 0x9ba7909f
	743	[5011]	SELF     	R10 R10 K23 ; R11 := R10; R10 := R10[0xbcfb64ab]
	744	[5011]	GETGLOBAL	R12 K146 ; R12 := 0x2c15a601
	745	[5011]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	746	[5012]	GETGLOBAL	R11 K16 ; R11 := 0x7b998233
	747	[5012]	MOVE     	R12 R10 ; R12 := R10
	748	[5012]	CALL     	R11 2 2 ; R11 := R11(R12)
	749	[5012]	TEST     	R11 0 ; if not R11 then PC := 755
	750	[5012]	JMP      	755 ; PC := 755
	751	[5013]	GETGLOBAL	R11 K0 ; R11 := 0xae91e43b
	752	[5013]	SELF     	R11 R11 K24 ; R12 := R11; R11 := R11[0x1fd6abd0]
	753	[5013]	GETGLOBAL	R13 K146 ; R13 := 0x2c15a601
	754	[5013]	CALL     	R11 3 1 ; R11(R12,R13)
	755	[5018]	GETUPVAL 	R11 U17 ; R11 := U17
	756	[5018]	CALL     	R11 1 1 ; R11()
	757	[5019]	GETUPVAL 	R11 U18 ; R11 := U18
	758	[5019]	CALL     	R11 1 1 ; R11()
	759	[5021]	GETGLOBAL	R11 K0 ; R11 := 0xae91e43b
	760	[5021]	SELF     	R11 R11 K148 ; R12 := R11; R11 := R11[0x5ee2cc30]
	761	[5021]	LOADK    	R13 K126 ; R13 := "GameplayMessage"
	762	[5021]	LOADK    	R14 K149 ; R14 := "OnFrameEnter"
	763	[5021]	CALL     	R11 4 1 ; R11(R12,R13,R14)
	764	[5022]	GETGLOBAL	R11 K0 ; R11 := 0xae91e43b
	765	[5022]	SELF     	R11 R11 K148 ; R12 := R11; R11 := R11[0x5ee2cc30]
	766	[5022]	LOADK    	R13 K150 ; R13 := "Reticle.Arm1"
	767	[5022]	LOADK    	R14 K149 ; R14 := "OnFrameEnter"
	768	[5022]	CALL     	R11 4 1 ; R11(R12,R13,R14)
	769	[5024]	LOADK    	R11 := 1.000000
	770	[5024]	LOADK    	R12 := 4.000000
	771	[5024]	LOADK    	R13 := 1.000000
	772	[5024]	FORPREP  	R11 790 ; R11 -= R13; PC := 790
	773	[5025]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	774	[5025]	SELF     	R15 R15 K51 ; R16 := R15; R15 := R15[0xc0a3774b]
	775	[5025]	LOADK    	R17 K151 ; R17 := "AbilityPanel.Ability"
	776	[5025]	MOVE     	R18 R14 ; R18 := R14
	777	[5025]	CONCAT   	R17 R17 R18 ; R17 := R17 .. R18
	778	[5025]	LOADK    	R18 K152 ; R18 := "ActiveAnim"
	779	[5025]	LOADK    	R19 := 11.000000
	780	[5025]	OP_LOADBOOL	R20 0 0 ; R20 := false
	781	[5025]	CALL     	R15 6 1 ; R15(R16,R17,R18,R19,R20)
	782	[5026]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	783	[5026]	SELF     	R15 R15 K148 ; R16 := R15; R15 := R15[0x5ee2cc30]
	784	[5026]	LOADK    	R17 K151 ; R17 := "AbilityPanel.Ability"
	785	[5026]	MOVE     	R18 R14 ; R18 := R14
	786	[5026]	LOADK    	R19 K153 ; R19 := ".Blocked"
	787	[5026]	CONCAT   	R17 R17 R19 ; R17 := R17 .. R18 .. R19
	788	[5026]	LOADK    	R18 K149 ; R18 := "OnFrameEnter"
	789	[5026]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	790	[5024]	FORLOOP  	R11 773 ; R11 += R13; if R11 <= R12 then begin PC := 773; R14 := R11 end
	791	[5028]	GETUPVAL 	R15 U20 ; R15 := U20
	792	[5028]	GETTABLE 	R15 R15 K154 ; R15 := R15[0x4c3dfdb3]
	793	[5028]	LOADNIL  	R16 R16 ; R16 := nil
	794	[5036]	CLOSURE  	R17 0 ; R17 := closure(Function #1)
	795	[5028]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	796	[5036]	SETUPVAL 	R15 U19 ; U19 := R15
	797	[5038]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	798	[5038]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	799	[5038]	LOADK    	R17 K111 ; R17 := "Reticle"
	800	[5038]	LOADK    	R18 := 10.000000
	801	[5038]	LOADK    	R19 := 0.000000
	802	[5038]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	803	[5039]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	804	[5039]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	805	[5039]	LOADK    	R17 K112 ; R17 := "ReticleCustom"
	806	[5039]	LOADK    	R18 := 10.000000
	807	[5039]	LOADK    	R19 := 0.000000
	808	[5039]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	809	[5041]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	810	[5041]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	811	[5041]	LOADK    	R17 K117 ; R17 := "SlamIndicator"
	812	[5041]	LOADK    	R18 := 10.000000
	813	[5041]	LOADK    	R19 := 0.000000
	814	[5041]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	815	[5043]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	816	[5043]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	817	[5043]	LOADK    	R17 K119 ; R17 := "reloadTimer"
	818	[5043]	LOADK    	R18 := 10.000000
	819	[5043]	LOADK    	R19 := 0.000000
	820	[5043]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	821	[5044]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	822	[5044]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	823	[5044]	LOADK    	R17 K155 ; R17 := "reloadTimer.RangeBrackets"
	824	[5044]	LOADK    	R18 := 10.000000
	825	[5044]	LOADK    	R19 := 0.000000
	826	[5044]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	827	[5045]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	828	[5045]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	829	[5045]	LOADK    	R17 K156 ; R17 := "reloadTimer.RangeGradients"
	830	[5045]	LOADK    	R18 := 10.000000
	831	[5045]	LOADK    	R19 := 0.000000
	832	[5045]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	833	[5046]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	834	[5046]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	835	[5046]	LOADK    	R17 K157 ; R17 := "reloadTimer.ChargeCap"
	836	[5046]	LOADK    	R18 := 10.000000
	837	[5046]	LOADK    	R19 := 0.000000
	838	[5046]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	839	[5047]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	840	[5047]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	841	[5047]	LOADK    	R17 K120 ; R17 := "AbilityChargeProgress"
	842	[5047]	LOADK    	R18 := 10.000000
	843	[5047]	LOADK    	R19 := 0.000000
	844	[5047]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	845	[5049]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	846	[5049]	SELF     	R15 R15 K10 ; R16 := R15; R15 := R15[0xaade900e]
	847	[5049]	LOADK    	R17 K121 ; R17 := "DamageIndicator"
	848	[5049]	LOADK    	R18 := 11.000000
	849	[5049]	OP_LOADBOOL	R19 0 0 ; R19 := false
	850	[5049]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	851	[5050]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	852	[5050]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	853	[5050]	LOADK    	R17 K158 ; R17 := "MiniMapContainer.StatusEffect"
	854	[5050]	LOADK    	R18 := 10.000000
	855	[5050]	LOADK    	R19 := 0.000000
	856	[5050]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	857	[5052]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	858	[5052]	SELF     	R15 R15 K10 ; R16 := R15; R15 := R15[0xaade900e]
	859	[5052]	LOADK    	R17 K159 ; R17 := "MiniMapContainer.FlareLoader"
	860	[5052]	LOADK    	R18 := 11.000000
	861	[5052]	OP_LOADBOOL	R19 0 0 ; R19 := false
	862	[5052]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	863	[5055]	GETGLOBAL	R15 K16 ; R15 := 0x7b998233
	864	[5055]	GETGLOBAL	R16 K160 ; R16 := 0x6ad62b02
	865	[5055]	CALL     	R15 2 2 ; R15 := R15(R16)
	866	[5055]	TEST     	R15 1 ; if R15 then PC := 878
	867	[5055]	JMP      	878 ; PC := 878
	868	[5056]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	869	[5056]	SELF     	R15 R15 K161 ; R16 := R15; R15 := R15[0xd5181643]
	870	[5056]	LOADK    	R17 K107 ; R17 := "MiniMapContainer"
	871	[5056]	GETGLOBAL	R18 K160 ; R18 := 0x6ad62b02
	872	[5056]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	873	[5057]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	874	[5057]	SELF     	R15 R15 K161 ; R16 := R15; R15 := R15[0xd5181643]
	875	[5057]	LOADK    	R17 K110 ; R17 := "HudTracker"
	876	[5057]	GETGLOBAL	R18 K160 ; R18 := 0x6ad62b02
	877	[5057]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	878	[5059]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	879	[5059]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	880	[5059]	LOADK    	R17 K162 ; R17 := "MiniMapContainer.MiniMap"
	881	[5059]	LOADK    	R18 := 10.000000
	882	[5059]	LOADK    	R19 := 0.000000
	883	[5059]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	884	[5060]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	885	[5060]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	886	[5060]	LOADK    	R17 K109 ; R17 := "MiniMapOverlayMsg"
	887	[5060]	LOADK    	R18 := 10.000000
	888	[5060]	LOADK    	R19 := 0.000000
	889	[5060]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	890	[5061]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	891	[5061]	SELF     	R15 R15 K161 ; R16 := R15; R15 := R15[0xd5181643]
	892	[5061]	LOADK    	R17 K163 ; R17 := "MiniMapOverlayMsg.Bg"
	893	[5061]	GETGLOBAL	R18 K78 ; R18 := 0x0032441c
	894	[5061]	GETTABLE 	R18 R18 K164 ; R18 := R18["UIMaterial_RectangleNoDepth"]
	895	[5061]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	896	[5062]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	897	[5062]	SELF     	R15 R15 K165 ; R16 := R15; R15 := R15[0x91e13703]
	898	[5062]	LOADK    	R17 K163 ; R17 := "MiniMapOverlayMsg.Bg"
	899	[5062]	LOADK    	R18 K166 ; R18 := "RectInnerColor"
	900	[5062]	GETGLOBAL	R19 K78 ; R19 := 0x0032441c
	901	[5062]	GETTABLE 	R19 R19 K167 ; R19 := R19["UIColorObject_Black"]
	902	[5062]	GETTABLE 	R19 R19 K168 ; R19 := R19["r"]
	903	[5062]	GETGLOBAL	R20 K78 ; R20 := 0x0032441c
	904	[5062]	GETTABLE 	R20 R20 K167 ; R20 := R20["UIColorObject_Black"]
	905	[5062]	GETTABLE 	R20 R20 K169 ; R20 := R20["g"]
	906	[5062]	GETGLOBAL	R21 K78 ; R21 := 0x0032441c
	907	[5062]	GETTABLE 	R21 R21 K167 ; R21 := R21["UIColorObject_Black"]
	908	[5062]	GETTABLE 	R21 R21 K170 ; R21 := R21["b"]
	909	[5062]	LOADK    	R22 K171 ; R22 := 0.400000
	910	[5062]	CALL     	R15 8 1 ; R15(R16,R17,R18,R19,R20,R21,R22)
	911	[5063]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	912	[5063]	SELF     	R15 R15 K165 ; R16 := R15; R15 := R15[0x91e13703]
	913	[5063]	LOADK    	R17 K163 ; R17 := "MiniMapOverlayMsg.Bg"
	914	[5063]	LOADK    	R18 K172 ; R18 := "RectEdgeColor"
	915	[5063]	GETGLOBAL	R19 K78 ; R19 := 0x0032441c
	916	[5063]	GETTABLE 	R19 R19 K167 ; R19 := R19["UIColorObject_Black"]
	917	[5063]	GETTABLE 	R19 R19 K168 ; R19 := R19["r"]
	918	[5063]	GETGLOBAL	R20 K78 ; R20 := 0x0032441c
	919	[5063]	GETTABLE 	R20 R20 K167 ; R20 := R20["UIColorObject_Black"]
	920	[5063]	GETTABLE 	R20 R20 K169 ; R20 := R20["g"]
	921	[5063]	GETGLOBAL	R21 K78 ; R21 := 0x0032441c
	922	[5063]	GETTABLE 	R21 R21 K167 ; R21 := R21["UIColorObject_Black"]
	923	[5063]	GETTABLE 	R21 R21 K170 ; R21 := R21["b"]
	924	[5063]	LOADK    	R22 K171 ; R22 := 0.400000
	925	[5063]	CALL     	R15 8 1 ; R15(R16,R17,R18,R19,R20,R21,R22)
	926	[5064]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	927	[5064]	SELF     	R15 R15 K173 ; R16 := R15; R15 := R15[0x20b98db3]
	928	[5064]	LOADK    	R17 K174 ; R17 := "MiniMapOverlayMsg.Label.text"
	929	[5064]	LOADK    	R18 K175 ; R18 := "/Lotus/Language/SystemMessages/MapJammed"
	930	[5064]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	931	[5065]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	932	[5065]	SELF     	R15 R15 K10 ; R16 := R15; R15 := R15[0xaade900e]
	933	[5065]	LOADK    	R17 K176 ; R17 := "MiniMapContainer.MiniMapMarkers.Marker1"
	934	[5065]	LOADK    	R18 := 11.000000
	935	[5065]	OP_LOADBOOL	R19 0 0 ; R19 := false
	936	[5065]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	937	[5066]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	938	[5066]	SELF     	R15 R15 K10 ; R16 := R15; R15 := R15[0xaade900e]
	939	[5066]	LOADK    	R17 K177 ; R17 := "MiniMapContainer.Map"
	940	[5066]	LOADK    	R18 := 11.000000
	941	[5066]	OP_LOADBOOL	R19 0 0 ; R19 := false
	942	[5066]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	943	[5067]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	944	[5067]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	945	[5067]	LOADK    	R17 K116 ; R17 := "Notification"
	946	[5067]	LOADK    	R18 := 10.000000
	947	[5067]	LOADK    	R19 := 0.000000
	948	[5067]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	949	[5069]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	950	[5069]	SELF     	R15 R15 K10 ; R16 := R15; R15 := R15[0xaade900e]
	951	[5069]	LOADK    	R17 K178 ; R17 := "WeaponFrame.Rage"
	952	[5069]	LOADK    	R18 := 11.000000
	953	[5069]	OP_LOADBOOL	R19 0 0 ; R19 := false
	954	[5069]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	955	[5070]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	956	[5070]	SELF     	R15 R15 K10 ; R16 := R15; R15 := R15[0xaade900e]
	957	[5070]	LOADK    	R17 K179 ; R17 := "WeaponFrame.Rage.ComboLabelA"
	958	[5070]	LOADK    	R18 := 11.000000
	959	[5070]	OP_LOADBOOL	R19 0 0 ; R19 := false
	960	[5070]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	961	[5071]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	962	[5071]	SELF     	R15 R15 K10 ; R16 := R15; R15 := R15[0xaade900e]
	963	[5071]	LOADK    	R17 K180 ; R17 := "WeaponFrame.Rage.ComboLabelB"
	964	[5071]	LOADK    	R18 := 11.000000
	965	[5071]	OP_LOADBOOL	R19 0 0 ; R19 := false
	966	[5071]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	967	[5072]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	968	[5072]	SELF     	R15 R15 K10 ; R16 := R15; R15 := R15[0xaade900e]
	969	[5072]	LOADK    	R17 K181 ; R17 := "WeaponFrame.Rage.ComboLabelMiddle"
	970	[5072]	LOADK    	R18 := 11.000000
	971	[5072]	OP_LOADBOOL	R19 0 0 ; R19 := false
	972	[5072]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	973	[5073]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	974	[5073]	SELF     	R15 R15 K161 ; R16 := R15; R15 := R15[0xd5181643]
	975	[5073]	LOADK    	R17 K181 ; R17 := "WeaponFrame.Rage.ComboLabelMiddle"
	976	[5073]	GETGLOBAL	R18 K78 ; R18 := 0x0032441c
	977	[5073]	GETTABLE 	R18 R18 K182 ; R18 := R18["UIMaterial_SmoothEdgeNoDepthTest"]
	978	[5073]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	979	[5074]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	980	[5074]	SELF     	R15 R15 K10 ; R16 := R15; R15 := R15[0xaade900e]
	981	[5074]	LOADK    	R17 K183 ; R17 := "WeaponFrame.ComboLabelA"
	982	[5074]	LOADK    	R18 := 11.000000
	983	[5074]	OP_LOADBOOL	R19 0 0 ; R19 := false
	984	[5074]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	985	[5075]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	986	[5075]	SELF     	R15 R15 K10 ; R16 := R15; R15 := R15[0xaade900e]
	987	[5075]	LOADK    	R17 K184 ; R17 := "WeaponFrame.ComboLabelB"
	988	[5075]	LOADK    	R18 := 11.000000
	989	[5075]	OP_LOADBOOL	R19 0 0 ; R19 := false
	990	[5075]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	991	[5076]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	992	[5076]	SELF     	R15 R15 K10 ; R16 := R15; R15 := R15[0xaade900e]
	993	[5076]	LOADK    	R17 K185 ; R17 := "WeaponFrame.ComboLabelMiddle"
	994	[5076]	LOADK    	R18 := 11.000000
	995	[5076]	OP_LOADBOOL	R19 0 0 ; R19 := false
	996	[5076]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	997	[5077]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	998	[5077]	SELF     	R15 R15 K10 ; R16 := R15; R15 := R15[0xaade900e]
	999	[5077]	LOADK    	R17 K186 ; R17 := "WeaponFrame.ComboLabelTimer"
	1000	[5077]	LOADK    	R18 := 11.000000
	1001	[5077]	OP_LOADBOOL	R19 0 0 ; R19 := false
	1002	[5077]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	1003	[5078]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1004	[5078]	SELF     	R15 R15 K10 ; R16 := R15; R15 := R15[0xaade900e]
	1005	[5078]	LOADK    	R17 K187 ; R17 := "WeaponFrame.ComboTitle"
	1006	[5078]	LOADK    	R18 := 11.000000
	1007	[5078]	OP_LOADBOOL	R19 0 0 ; R19 := false
	1008	[5078]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	1009	[5079]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1010	[5079]	SELF     	R15 R15 K173 ; R16 := R15; R15 := R15[0x20b98db3]
	1011	[5079]	LOADK    	R17 K188 ; R17 := "WeaponFrame.ComboTitle.text"
	1012	[5079]	LOADK    	R18 K189 ; R18 := "/Lotus/Language/Menu/Combo"
	1013	[5079]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	1014	[5081]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1015	[5081]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	1016	[5081]	LOADK    	R17 K190 ; R17 := "WeaponFrame.ComboLabelTimer.Fill"
	1017	[5081]	LOADK    	R18 := 10.000000
	1018	[5081]	LOADK    	R19 := 50.000000
	1019	[5081]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	1020	[5082]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1021	[5082]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	1022	[5082]	LOADK    	R17 K191 ; R17 := "WeaponFrame.LabelTimer.Fill"
	1023	[5082]	LOADK    	R18 := 10.000000
	1024	[5082]	LOADK    	R19 := 50.000000
	1025	[5082]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	1026	[5083]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1027	[5083]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	1028	[5083]	LOADK    	R17 K192 ; R17 := "WeaponFrame.ComboLabelTimer.Bg"
	1029	[5083]	LOADK    	R18 := 10.000000
	1030	[5083]	LOADK    	R19 := 30.000000
	1031	[5083]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	1032	[5084]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1033	[5084]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	1034	[5084]	LOADK    	R17 K193 ; R17 := "WeaponFrame.LabelTimer.Bg"
	1035	[5084]	LOADK    	R18 := 10.000000
	1036	[5084]	LOADK    	R19 := 30.000000
	1037	[5084]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	1038	[5085]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1039	[5085]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	1040	[5085]	LOADK    	R17 K192 ; R17 := "WeaponFrame.ComboLabelTimer.Bg"
	1041	[5085]	LOADK    	R18 := 9.000000
	1042	[5085]	LOADK    	R19 := 0.000000
	1043	[5085]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	1044	[5086]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1045	[5086]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	1046	[5086]	LOADK    	R17 K193 ; R17 := "WeaponFrame.LabelTimer.Bg"
	1047	[5086]	LOADK    	R18 := 9.000000
	1048	[5086]	LOADK    	R19 := 0.000000
	1049	[5086]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	1050	[5088]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1051	[5088]	SELF     	R15 R15 K194 ; R16 := R15; R15 := R15[0x5f56eeab]
	1052	[5088]	LOADK    	R17 K195 ; R17 := "WeaponFrame.Name"
	1053	[5088]	LOADK    	R18 := 29.000000
	1054	[5088]	LOADK    	R19 K196 ; R19 := ""
	1055	[5088]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	1056	[5090]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1057	[5090]	SELF     	R15 R15 K173 ; R16 := R15; R15 := R15[0x20b98db3]
	1058	[5090]	LOADK    	R17 K197 ; R17 := "Notification.Message.text"
	1059	[5090]	LOADK    	R18 K198 ; R18 := "/Lotus/Language/Menu/LevelUp"
	1060	[5090]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	1061	[5092]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1062	[5092]	SELF     	R15 R15 K199 ; R16 := R15; R15 := R15[0x1cb415c1]
	1063	[5092]	LOADK    	R17 K115 ; R17 := "SuccessfulHitNotification"
	1064	[5092]	GETGLOBAL	R18 K200 ; R18 := 0x90e76fe1
	1065	[5092]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	1066	[5093]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1067	[5093]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	1068	[5093]	LOADK    	R17 K115 ; R17 := "SuccessfulHitNotification"
	1069	[5093]	LOADK    	R18 := 10.000000
	1070	[5093]	LOADK    	R19 := 0.000000
	1071	[5093]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	1072	[5095]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1073	[5095]	SELF     	R15 R15 K161 ; R16 := R15; R15 := R15[0xd5181643]
	1074	[5095]	LOADK    	R17 K201 ; R17 := "reloadTimer.Fill"
	1075	[5095]	GETGLOBAL	R18 K202 ; R18 := 0x2545668b
	1076	[5095]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	1077	[5096]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1078	[5096]	SELF     	R15 R15 K161 ; R16 := R15; R15 := R15[0xd5181643]
	1079	[5096]	LOADK    	R17 K203 ; R17 := "AbilityChargeProgress.Progress"
	1080	[5096]	GETGLOBAL	R18 K202 ; R18 := 0x2545668b
	1081	[5096]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	1082	[5098]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1083	[5098]	SELF     	R15 R15 K161 ; R16 := R15; R15 := R15[0xd5181643]
	1084	[5098]	LOADK    	R17 K204 ; R17 := "RevivePanel.HoldProgress.Backer"
	1085	[5098]	GETGLOBAL	R18 K205 ; R18 := 0x1211e3e3
	1086	[5098]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	1087	[5099]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1088	[5099]	SELF     	R15 R15 K161 ; R16 := R15; R15 := R15[0xd5181643]
	1089	[5099]	LOADK    	R17 K206 ; R17 := "RevivePanel.HoldProgress.Fill"
	1090	[5099]	GETGLOBAL	R18 K207 ; R18 := 0xeebb769c
	1091	[5099]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	1092	[5100]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1093	[5100]	SELF     	R15 R15 K161 ; R16 := R15; R15 := R15[0xd5181643]
	1094	[5100]	LOADK    	R17 K208 ; R17 := "RevivePanel.HoldProgress.IconContainer.Icon"
	1095	[5100]	GETGLOBAL	R18 K209 ; R18 := 0xb2028b83
	1096	[5100]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	1097	[5101]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1098	[5101]	SELF     	R15 R15 K161 ; R16 := R15; R15 := R15[0xd5181643]
	1099	[5101]	LOADK    	R17 K210 ; R17 := "RevivePanel.HoldProgress.Diamond"
	1100	[5101]	GETGLOBAL	R18 K78 ; R18 := 0x0032441c
	1101	[5101]	GETTABLE 	R18 R18 K79 ; R18 := R18["UIMaterial_Plain"]
	1102	[5101]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	1103	[5102]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1104	[5102]	SELF     	R15 R15 K161 ; R16 := R15; R15 := R15[0xd5181643]
	1105	[5102]	LOADK    	R17 K211 ; R17 := "RevivePanel.HoldProgress.IconContainer.IconShadow"
	1106	[5102]	GETGLOBAL	R18 K78 ; R18 := 0x0032441c
	1107	[5102]	GETTABLE 	R18 R18 K79 ; R18 := R18["UIMaterial_Plain"]
	1108	[5102]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	1109	[5103]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1110	[5103]	SELF     	R15 R15 K161 ; R16 := R15; R15 := R15[0xd5181643]
	1111	[5103]	LOADK    	R17 K212 ; R17 := "RevivePanel.HoldProgress.IconContainer.Blur"
	1112	[5103]	GETGLOBAL	R18 K78 ; R18 := 0x0032441c
	1113	[5103]	GETTABLE 	R18 R18 K79 ; R18 := R18["UIMaterial_Plain"]
	1114	[5103]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	1115	[5104]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1116	[5104]	SELF     	R15 R15 K165 ; R16 := R15; R15 := R15[0x91e13703]
	1117	[5104]	LOADK    	R17 K206 ; R17 := "RevivePanel.HoldProgress.Fill"
	1118	[5104]	LOADK    	R18 K213 ; R18 := "AlphaTestThreshold"
	1119	[5104]	LOADK    	R19 := 0.000000
	1120	[5104]	LOADK    	R20 := 0.000000
	1121	[5104]	LOADK    	R21 := 0.000000
	1122	[5104]	LOADK    	R22 := 0.000000
	1123	[5104]	CALL     	R15 8 1 ; R15(R16,R17,R18,R19,R20,R21,R22)
	1124	[5105]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1125	[5105]	SELF     	R15 R15 K165 ; R16 := R15; R15 := R15[0x91e13703]
	1126	[5105]	LOADK    	R17 K204 ; R17 := "RevivePanel.HoldProgress.Backer"
	1127	[5105]	LOADK    	R18 K214 ; R18 := "CircleSettings"
	1128	[5105]	LOADK    	R19 K215 ; R19 := 0.485000
	1129	[5105]	LOADK    	R20 K216 ; R20 := 0.200000
	1130	[5105]	LOADK    	R21 K217 ; R21 := 0.650000
	1131	[5105]	LOADK    	R22 := 0.000000
	1132	[5105]	CALL     	R15 8 1 ; R15(R16,R17,R18,R19,R20,R21,R22)
	1133	[5106]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1134	[5106]	SELF     	R15 R15 K165 ; R16 := R15; R15 := R15[0x91e13703]
	1135	[5106]	LOADK    	R17 K206 ; R17 := "RevivePanel.HoldProgress.Fill"
	1136	[5106]	LOADK    	R18 K214 ; R18 := "CircleSettings"
	1137	[5106]	LOADK    	R19 K215 ; R19 := 0.485000
	1138	[5106]	LOADK    	R20 K216 ; R20 := 0.200000
	1139	[5106]	LOADK    	R21 K217 ; R21 := 0.650000
	1140	[5106]	LOADK    	R22 := 0.000000
	1141	[5106]	CALL     	R15 8 1 ; R15(R16,R17,R18,R19,R20,R21,R22)
	1142	[5107]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1143	[5107]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	1144	[5107]	LOADK    	R17 K130 ; R17 := "RevivePanel"
	1145	[5107]	LOADK    	R18 := 10.000000
	1146	[5107]	LOADK    	R19 := 0.000000
	1147	[5107]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	1148	[5109]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1149	[5109]	SELF     	R15 R15 K161 ; R16 := R15; R15 := R15[0xd5181643]
	1150	[5109]	LOADK    	R17 K218 ; R17 := "AbilityPanel.Focus.FocusFx"
	1151	[5109]	GETGLOBAL	R18 K219 ; R18 := 0x7d6d96e1
	1152	[5109]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	1153	[5111]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1154	[5111]	SELF     	R15 R15 K26 ; R16 := R15; R15 := R15[0xcd73323e]
	1155	[5111]	CALL     	R15 2 2 ; R15 := R15(R16)
	1156	[5112]	GETGLOBAL	R16 K16 ; R16 := 0x7b998233
	1157	[5112]	MOVE     	R17 R15 ; R17 := R15
	1158	[5112]	CALL     	R16 2 2 ; R16 := R16(R17)
	1159	[5112]	TEST     	R16 1 ; if R16 then PC := 1204
	1160	[5112]	JMP      	1204 ; PC := 1204
	1161	[5113]	SELF     	R16 R15 K220 ; R17 := R15; R16 := R15[0x6d7bfacb]
	1162	[5113]	CALL     	R16 2 2 ; R16 := R16(R17)
	1163	[5113]	SETUPVAL 	R16 U21 ; U21 := R16
	1164	[5114]	GETGLOBAL	R16 K16 ; R16 := 0x7b998233
	1165	[5114]	GETUPVAL 	R17 U21 ; R17 := U21
	1166	[5114]	CALL     	R16 2 2 ; R16 := R16(R17)
	1167	[5114]	TEST     	R16 1 ; if R16 then PC := 1204
	1168	[5114]	JMP      	1204 ; PC := 1204
	1169	[5115]	GETGLOBAL	R16 K15 ; R16 := 0xe72d2edb
	1170	[5115]	EQ       	1 R16 K31 ; if R16 == 0.000000 then PC := 1176
	1171	[5115]	JMP      	1176 ; PC := 1176
	1172	[5116]	GETUPVAL 	R16 U21 ; R16 := U21
	1173	[5116]	SELF     	R16 R16 K221 ; R17 := R16; R16 := R16[0xeaef69de]
	1174	[5116]	GETGLOBAL	R18 K15 ; R18 := 0xe72d2edb
	1175	[5116]	CALL     	R16 3 1 ; R16(R17,R18)
	1176	[5118]	GETUPVAL 	R16 U21 ; R16 := U21
	1177	[5118]	SELF     	R16 R16 K222 ; R17 := R16; R16 := R16[0x1e9695e9]
	1178	[5118]	MOVE     	R18 R15 ; R18 := R15
	1179	[5118]	CALL     	R16 3 1 ; R16(R17,R18)
	1180	[5119]	GETUPVAL 	R16 U21 ; R16 := U21
	1181	[5119]	SELF     	R16 R16 K223 ; R17 := R16; R16 := R16[0xe9aecb88]
	1182	[5119]	CALL     	R16 2 1 ; R16(R17)
	1183	[5120]	GETUPVAL 	R16 U21 ; R16 := U21
	1184	[5120]	SELF     	R16 R16 K224 ; R17 := R16; R16 := R16[0xdae5251c]
	1185	[5120]	GETUPVAL 	R18 U11 ; R18 := U11
	1186	[5120]	SELF     	R18 R18 K225 ; R19 := R18; R18 := R18[0x2de3d774]
	1187	[5120]	LOADK    	R20 K116 ; R20 := "Notification"
	1188	[5120]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	1189	[5120]	GETTABLE 	R18 R18 K226 ; R18 := R18["y"]
	1190	[5120]	CALL     	R16 3 1 ; R16(R17,R18)
	1191	[5121]	GETUPVAL 	R16 U2 ; R16 := U2
	1192	[5121]	GETGLOBAL	R17 K78 ; R17 := 0x0032441c
	1193	[5121]	GETTABLE 	R17 R17 K227 ; R17 := R17["StalkerMode"]
	1194	[5121]	EQ       	0 R17 K228 ; if R17 ~= nil then PC := 1197
	1195	[5121]	JMP      	1197 ; PC := 1197
	1196	[5121]	OP_LOADBOOL	R17 0 1 ; R17 := false; PC := 1197
	1197	[5121]	OP_LOADBOOL	R17 1 0 ; R17 := true
	1198	[5121]	SETTABLE 	R16 K227 R17 ; R16["StalkerMode"] := R17
	1199	[5122]	GETUPVAL 	R16 U21 ; R16 := U21
	1200	[5122]	SELF     	R16 R16 K229 ; R17 := R16; R16 := R16[0x9b069215]
	1201	[5122]	GETUPVAL 	R18 U2 ; R18 := U2
	1202	[5122]	GETTABLE 	R18 R18 K227 ; R18 := R18["StalkerMode"]
	1203	[5122]	CALL     	R16 3 1 ; R16(R17,R18)
	1204	[5126]	GETGLOBAL	R16 K13 ; R16 := _T
	1205	[5126]	GETGLOBAL	R17 K231 ; R17 := 0xa421af95
	1206	[5126]	CALL     	R17 1 2 ; R17 := R17()
	1207	[5126]	SETTABLE 	R16 K230 R17 ; R16["velocityCoords"] := R17
	1208	[5146]	CLOSURE  	R16 1 ; R16 := closure(Function #2)
	1209	[5146]	GETUPVAL 	R0 U11 ; R0 := U11
	1210	[5146]	GETUPVAL 	R0 U22 ; R0 := U22
	1211	[5146]	GETUPVAL 	R0 U21 ; R0 := U21
	1212	[5146]	GETUPVAL 	R0 U23 ; R0 := U23
	1213	[5146]	GETUPVAL 	R0 U13 ; R0 := U13
	1214	[5146]	GETUPVAL 	R0 U24 ; R0 := U24
	1215	[5146]	GETUPVAL 	R0 U25 ; R0 := U25
	1216	[5155]	CLOSURE  	R17 2 ; R17 := closure(Function #3)
	1217	[5155]	GETUPVAL 	R0 U11 ; R0 := U11
	1218	[5155]	GETUPVAL 	R0 U21 ; R0 := U21
	1219	[5167]	CLOSURE  	R18 3 ; R18 := closure(Function #4)
	1220	[5167]	GETUPVAL 	R0 U21 ; R0 := U21
	1221	[5167]	GETUPVAL 	R0 U22 ; R0 := U22
	1222	[5169]	GETGLOBAL	R19 K13 ; R19 := _T
	1223	[5169]	SETTABLE 	R19 K232 R16 ; R19["HUD_AddMotionClip"] := R16
	1224	[5170]	GETGLOBAL	R19 K13 ; R19 := _T
	1225	[5170]	SETTABLE 	R19 K233 R17 ; R19["HUD_UpdateMotionClip"] := R17
	1226	[5171]	GETGLOBAL	R19 K13 ; R19 := _T
	1227	[5171]	SETTABLE 	R19 K234 R18 ; R19["HUD_RemoveMotionClip"] := R18
	1228	[5173]	LOADNIL  	R19 R19 ; R19 := nil
	1229	[5174]	GETGLOBAL	R20 K53 ; R20 := 0x34291f5c
	1230	[5174]	GETTABLE 	R20 R20 K235 ; R20 := R20[0xe6b41adb]
	1231	[5174]	CALL     	R20 1 2 ; R20 := R20()
	1232	[5174]	TEST     	R20 0 ; if not R20 then PC := 1237
	1233	[5174]	JMP      	1237 ; PC := 1237
	1234	[5175]	NEWTABLE 	R20 0 0 ; R20 := {}
	1235	[5175]	MOVE     	R19 R20 ; R19 := R20
	1236	[5175]	JMP      	1243 ; PC := 1243
	1237	[5177]	NEWTABLE 	R20 3 0 ; R20 := {}
	1238	[5177]	LOADK    	R21 K102 ; R21 := "HealthAndShield"
	1239	[5177]	LOADK    	R22 K104 ; R22 := "WeaponFrame"
	1240	[5177]	LOADK    	R23 K106 ; R23 := "AbilityPanel"
	1241	[5177]	SETLIST  	R20 3 1 ; R20[(1-1)*FPF+i] := R(20+i), 1 <= i <= 3
	1242	[5177]	MOVE     	R19 R20 ; R19 := R20
	1243	[5180]	GETGLOBAL	R20 K50 ; R20 := 0xc8802016
	1244	[5180]	MOVE     	R21 R19 ; R21 := R19
	1245	[5180]	CALL     	R20 2 4 ; R20,R21,R22 := R20(R21)
	1246	[5180]	JMP      	1260 ; PC := 1260
	1247	[5181]	GETGLOBAL	R25 K15 ; R25 := 0xe72d2edb
	1248	[5181]	EQ       	1 R25 K82 ; if R25 == 2.000000 then PC := 1256
	1249	[5181]	JMP      	1256 ; PC := 1256
	1250	[5182]	GETGLOBAL	R25 K0 ; R25 := 0xae91e43b
	1251	[5182]	SELF     	R25 R25 K1 ; R26 := R25; R25 := R25[0x67bc869f]
	1252	[5182]	MOVE     	R27 R24 ; R27 := R24
	1253	[5182]	LOADK    	R28 := 15.000000
	1254	[5182]	MOVE     	R29 R0 ; R29 := R0
	1255	[5182]	CALL     	R25 5 1 ; R25(R26,R27,R28,R29)
	1256	[5184]	MOVE     	R25 R16 ; R25 := R16
	1257	[5184]	GETGLOBAL	R26 K0 ; R26 := 0xae91e43b
	1258	[5184]	MOVE     	R27 R24 ; R27 := R24
	1259	[5184]	CALL     	R25 3 1 ; R25(R26,R27)
	1260	[5180]	TFORLOOP 	R20 2 ; R23,R24 := R20(R21,R22); if R23 ~= nil then begin PC = 1247; R22 := R23 end
	1261	[5184]	JMP      	1247 ; PC := 1247
	1262	[5187]	LOADNIL  	R25 R25 ; R25 := nil
	1263	[5188]	GETGLOBAL	R26 K53 ; R26 := 0x34291f5c
	1264	[5188]	GETTABLE 	R26 R26 K235 ; R26 := R26[0xe6b41adb]
	1265	[5188]	CALL     	R26 1 2 ; R26 := R26()
	1266	[5188]	TEST     	R26 0 ; if not R26 then PC := 1271
	1267	[5188]	JMP      	1271 ; PC := 1271
	1268	[5189]	NEWTABLE 	R26 0 0 ; R26 := {}
	1269	[5189]	MOVE     	R25 R26 ; R25 := R26
	1270	[5189]	JMP      	1277 ; PC := 1277
	1271	[5191]	NEWTABLE 	R26 3 0 ; R26 := {}
	1272	[5191]	LOADK    	R27 K107 ; R27 := "MiniMapContainer"
	1273	[5191]	LOADK    	R28 K110 ; R28 := "HudTracker"
	1274	[5191]	LOADK    	R29 K109 ; R29 := "MiniMapOverlayMsg"
	1275	[5191]	SETLIST  	R26 3 1 ; R26[(1-1)*FPF+i] := R(26+i), 1 <= i <= 3
	1276	[5191]	MOVE     	R25 R26 ; R25 := R26
	1277	[5193]	GETGLOBAL	R26 K50 ; R26 := 0xc8802016
	1278	[5193]	MOVE     	R27 R25 ; R27 := R25
	1279	[5193]	CALL     	R26 2 4 ; R26,R27,R28 := R26(R27)
	1280	[5193]	JMP      	1294 ; PC := 1294
	1281	[5194]	GETGLOBAL	R31 K15 ; R31 := 0xe72d2edb
	1282	[5194]	EQ       	1 R31 K82 ; if R31 == 2.000000 then PC := 1290
	1283	[5194]	JMP      	1290 ; PC := 1290
	1284	[5195]	GETGLOBAL	R31 K0 ; R31 := 0xae91e43b
	1285	[5195]	SELF     	R31 R31 K1 ; R32 := R31; R31 := R31[0x67bc869f]
	1286	[5195]	MOVE     	R33 R30 ; R33 := R30
	1287	[5195]	LOADK    	R34 := 15.000000
	1288	[5195]	UNM      	R35 R0 ; R35 := ^ R0
	1289	[5195]	CALL     	R31 5 1 ; R31(R32,R33,R34,R35)
	1290	[5197]	MOVE     	R31 R16 ; R31 := R16
	1291	[5197]	GETGLOBAL	R32 K0 ; R32 := 0xae91e43b
	1292	[5197]	MOVE     	R33 R30 ; R33 := R30
	1293	[5197]	CALL     	R31 3 1 ; R31(R32,R33)
	1294	[5193]	TFORLOOP 	R26 2 ; R29,R30 := R26(R27,R28); if R29 ~= nil then begin PC = 1281; R28 := R29 end
	1295	[5197]	JMP      	1281 ; PC := 1281
	1296	[5200]	GETGLOBAL	R31 K0 ; R31 := 0xae91e43b
	1297	[5200]	SELF     	R31 R31 K194 ; R32 := R31; R31 := R31[0x5f56eeab]
	1298	[5200]	LOADK    	R33 K236 ; R33 := "HealthAndShield.SentinelName"
	1299	[5200]	LOADK    	R34 := 29.000000
	1300	[5200]	LOADK    	R35 K196 ; R35 := ""
	1301	[5200]	CALL     	R31 5 1 ; R31(R32,R33,R34,R35)
	1302	[5201]	GETGLOBAL	R31 K0 ; R31 := 0xae91e43b
	1303	[5201]	SELF     	R31 R31 K1 ; R32 := R31; R31 := R31[0x67bc869f]
	1304	[5201]	LOADK    	R33 K237 ; R33 := "HealthAndShield.SentinelAffinity"
	1305	[5201]	LOADK    	R34 := 10.000000
	1306	[5201]	LOADK    	R35 := 0.000000
	1307	[5201]	CALL     	R31 5 1 ; R31(R32,R33,R34,R35)
	1308	[5202]	GETGLOBAL	R31 K0 ; R31 := 0xae91e43b
	1309	[5202]	SELF     	R31 R31 K194 ; R32 := R31; R31 := R31[0x5f56eeab]
	1310	[5202]	LOADK    	R33 K238 ; R33 := "HealthAndShield.SentinelHealth"
	1311	[5202]	LOADK    	R34 := 29.000000
	1312	[5202]	LOADK    	R35 K196 ; R35 := ""
	1313	[5202]	CALL     	R31 5 1 ; R31(R32,R33,R34,R35)
	1314	[5203]	GETGLOBAL	R31 K0 ; R31 := 0xae91e43b
	1315	[5203]	SELF     	R31 R31 K10 ; R32 := R31; R31 := R31[0xaade900e]
	1316	[5203]	LOADK    	R33 K239 ; R33 := "HealthAndShield.Sentinel"
	1317	[5203]	LOADK    	R34 := 11.000000
	1318	[5203]	OP_LOADBOOL	R35 0 0 ; R35 := false
	1319	[5203]	CALL     	R31 5 1 ; R31(R32,R33,R34,R35)
	1320	[5205]	GETGLOBAL	R31 K133 ; R31 := 0x2d0fad09
	1321	[5205]	LOADK    	R32 K240 ; R32 := "Lotus.Interface.Libs.TimerMgr"
	1322	[5205]	CALL     	R31 2 2 ; R31 := R31(R32)
	1323	[5206]	GETTABLE 	R32 R31 K241 ; R32 := R31[0xde474187]
	1324	[5206]	CALL     	R32 1 2 ; R32 := R32()
	1325	[5206]	SETUPVAL 	R32 U26 ; U26 := R32
	1326	[5208]	NEWTABLE 	R32 0 12 ; R32 := {}
	1327	[5210]	GETGLOBAL	R33 K243 ; R33 := 0x2b66e51f
	1328	[5210]	SETTABLE 	R32 K242 R33 ; R32["defaultBroadcastIcon"] := R33
	1329	[5211]	GETGLOBAL	R33 K245 ; R33 := 0x0bbd2f35
	1330	[5211]	SETTABLE 	R32 K244 R33 ; R32["healthShieldDisplayType"] := R33
	1331	[5212]	GETGLOBAL	R33 K247 ; R33 := 0x2771cec5
	1332	[5212]	SETTABLE 	R32 K246 R33 ; R32["defenseTargetNearDeath"] := R33
	1333	[5213]	GETGLOBAL	R33 K249 ; R33 := 0xcc8ae35b
	1334	[5213]	SETTABLE 	R32 K248 R33 ; R32["timeLostFx"] := R33
	1335	[5214]	GETGLOBAL	R33 K202 ; R33 := 0x2545668b
	1336	[5214]	SETTABLE 	R32 K250 R33 ; R32["radialProgressMaterial"] := R33
	1337	[5215]	GETGLOBAL	R33 K252 ; R33 := 0x64fdab78
	1338	[5215]	SETTABLE 	R32 K251 R33 ; R32["temperatureSegmentMaterial"] := R33
	1339	[5216]	GETGLOBAL	R33 K254 ; R33 := 0x5e370047
	1340	[5216]	SETTABLE 	R32 K253 R33 ; R32["corruptionFillMaterial"] := R33
	1341	[5217]	GETGLOBAL	R33 K205 ; R33 := 0x1211e3e3
	1342	[5217]	SETTABLE 	R32 K255 R33 ; R32["diamondMaterial"] := R33
	1343	[5218]	LOADK    	R33 K256 ; R33 := "diamondProgressMaterial"
	1344	[5218]	GETGLOBAL	R34 K207 ; R34 := 0xeebb769c
	1345	[5218]	SETTABLE 	R32 R33 R34 ; R32[R33] := R34
	1346	[5219]	LOADK    	R33 K257 ; R33 := "nodeConflictMaterial"
	1347	[5219]	GETGLOBAL	R34 K258 ; R34 := 0x96a390c1
	1348	[5219]	SETTABLE 	R32 R33 R34 ; R32[R33] := R34
	1349	[5220]	LOADK    	R33 K259 ; R33 := "nodeConflictFx"
	1350	[5220]	GETGLOBAL	R34 K260 ; R34 := 0x53ca0986
	1351	[5220]	SETTABLE 	R32 R33 R34 ; R32[R33] := R34
	1352	[5221]	LOADK    	R33 K261 ; R33 := "nodeConflictBgMaterial"
	1353	[5221]	GETGLOBAL	R34 K262 ; R34 := 0xf821d6b2
	1354	[5221]	SETTABLE 	R32 R33 R34 ; R32[R33] := R34
	1355	[5223]	GETUPVAL 	R33 U25 ; R33 := U25
	1356	[5223]	LOADK    	R34 K263 ; R34 := true
	1357	[5223]	GETTABLE 	R33 R33 R34 ; R33 := R33[R34]
	1358	[5223]	GETGLOBAL	R34 K0 ; R34 := 0xae91e43b
	1359	[5223]	GETUPVAL 	R35 U27 ; R35 := U27
	1360	[5223]	GETUPVAL 	R36 U26 ; R36 := U26
	1361	[5223]	MOVE     	R37 R32 ; R37 := R32
	1362	[5223]	GETUPVAL 	R38 U28 ; R38 := U28
	1363	[5223]	GETUPVAL 	R39 U28 ; R39 := U28
	1364	[5223]	GETUPVAL 	R40 U29 ; R40 := U29
	1365	[5223]	CALL     	R33 8 1 ; R33(R34,R35,R36,R37,R38,R39,R40)
	1366	[5225]	GETGLOBAL	R33 K16 ; R33 := 0x7b998233
	1367	[5225]	GETGLOBAL	R34 K13 ; R34 := _T
	1368	[5225]	LOADK    	R35 K264 ; R35 := "affinity"
	1369	[5225]	GETTABLE 	R34 R34 R35 ; R34 := R34[R35]
	1370	[5225]	CALL     	R33 2 2 ; R33 := R33(R34)
	1371	[5225]	TEST     	R33 0 ; if not R33 then PC := 1377
	1372	[5225]	JMP      	1377 ; PC := 1377
	1373	[5226]	GETGLOBAL	R33 K13 ; R33 := _T
	1374	[5226]	LOADK    	R34 K264 ; R34 := "affinity"
	1375	[5226]	LOADK    	R35 := 0.000000
	1376	[5226]	SETTABLE 	R33 R34 R35 ; R33[R34] := R35
	1377	[5229]	GETUPVAL 	R33 U30 ; R33 := U30
	1378	[5229]	CALL     	R33 1 1 ; R33()
	1379	[5231]	GETGLOBAL	R33 K0 ; R33 := 0xae91e43b
	1380	[5231]	SELF     	R33 R33 K1 ; R34 := R33; R33 := R33[0x67bc869f]
	1381	[5231]	LOADK    	R35 K265 ; R35 := "KillNumber1"
	1382	[5231]	LOADK    	R36 := 10.000000
	1383	[5231]	LOADK    	R37 := 0.000000
	1384	[5231]	CALL     	R33 5 1 ; R33(R34,R35,R36,R37)
	1385	[5233]	GETGLOBAL	R33 K0 ; R33 := 0xae91e43b
	1386	[5233]	SELF     	R33 R33 K1 ; R34 := R33; R33 := R33[0x67bc869f]
	1387	[5233]	LOADK    	R35 K105 ; R35 := "QuestMessage"
	1388	[5233]	LOADK    	R36 := 10.000000
	1389	[5233]	LOADK    	R37 := 0.000000
	1390	[5233]	CALL     	R33 5 1 ; R33(R34,R35,R36,R37)
	1391	[5234]	GETGLOBAL	R33 K0 ; R33 := 0xae91e43b
	1392	[5234]	SELF     	R33 R33 K1 ; R34 := R33; R33 := R33[0x67bc869f]
	1393	[5234]	LOADK    	R35 K266 ; R35 := "QuestMessage.Background"
	1394	[5234]	LOADK    	R36 := 10.000000
	1395	[5234]	LOADK    	R37 := 0.000000
	1396	[5234]	CALL     	R33 5 1 ; R33(R34,R35,R36,R37)
	1397	[5236]	GETGLOBAL	R33 K267 ; R33 := 0x89326c93
	1398	[5236]	LOADK    	R35 K268 ; R35 := true
	1399	[5236]	SELF     	R33 R33 R35 ; R34 := R33; R33 := R33[R35]
	1400	[5236]	CALL     	R33 2 2 ; R33 := R33(R34)
	1401	[5236]	LOADK    	R34 K269 ; R34 := "level"
	1402	[5236]	GETTABLE 	R33 R33 R34 ; R33 := R33[R34]
	1403	[5237]	GETGLOBAL	R34 K270 ; R34 := 0xa94df70b
	1404	[5237]	LOADK    	R36 K271 ; R36 := true
	1405	[5237]	SELF     	R34 R34 R36 ; R35 := R34; R34 := R34[R36]
	1406	[5237]	MOVE     	R36 R33 ; R36 := R33
	1407	[5237]	CALL     	R34 3 2 ; R34 := R34(R35,R36)
	1408	[5237]	TEST     	R34 1 ; if R34 then PC := 1430
	1409	[5237]	JMP      	1430 ; PC := 1430
	1410	[5238]	GETGLOBAL	R34 K19 ; R34 := 0x9ba7909f
	1411	[5238]	SELF     	R34 R34 K23 ; R35 := R34; R34 := R34[0xbcfb64ab]
	1412	[5238]	GETUPVAL 	R36 U20 ; R36 := U20
	1413	[5238]	LOADK    	R37 K272 ; R37 := true
	1414	[5238]	GETTABLE 	R36 R36 R37 ; R36 := R36[R37]
	1415	[5238]	CALL     	R36 1 0 ; R36,... := R36()
	1416	[5238]	CALL     	R34 0 2 ; R34 := R34(R35,...)
	1417	[5239]	GETGLOBAL	R35 K16 ; R35 := 0x7b998233
	1418	[5239]	MOVE     	R36 R34 ; R36 := R34
	1419	[5239]	CALL     	R35 2 2 ; R35 := R35(R36)
	1420	[5239]	TEST     	R35 0 ; if not R35 then PC := 1430
	1421	[5239]	JMP      	1430 ; PC := 1430
	1422	[5240]	GETGLOBAL	R35 K19 ; R35 := 0x9ba7909f
	1423	[5240]	SELF     	R35 R35 K20 ; R36 := R35; R35 := R35[0x6dd7aa66]
	1424	[5240]	GETUPVAL 	R37 U20 ; R37 := U20
	1425	[5240]	LOADK    	R38 K272 ; R38 := true
	1426	[5240]	GETTABLE 	R37 R37 R38 ; R37 := R37[R38]
	1427	[5240]	CALL     	R37 1 0 ; R37,... := R37()
	1428	[5240]	CALL     	R35 0 2 ; R35 := R35(R36,...)
	1429	[5240]	MOVE     	R34 R35 ; R34 := R35
	1430	[5244]	GETUPVAL 	R35 U31 ; R35 := U31
	1431	[5244]	CALL     	R35 1 1 ; R35()
	1432	[5246]	GETGLOBAL	R35 K0 ; R35 := 0xae91e43b
	1433	[5246]	SELF     	R35 R35 K194 ; R36 := R35; R35 := R35[0x5f56eeab]
	1434	[5246]	LOADK    	R37 K273 ; R37 := "GenericMessage.Text"
	1435	[5246]	LOADK    	R38 := 29.000000
	1436	[5246]	LOADK    	R39 K196 ; R39 := ""
	1437	[5246]	CALL     	R35 5 1 ; R35(R36,R37,R38,R39)
	1438	[5247]	GETUPVAL 	R35 U20 ; R35 := U20
	1439	[5247]	GETTABLE 	R35 R35 K154 ; R35 := R35[0x4c3dfdb3]
	1440	[5247]	LOADK    	R36 K196 ; R36 := ""
	1441	[5247]	GETUPVAL 	R37 U33 ; R37 := U33
	1442	[5247]	CALL     	R35 3 2 ; R35 := R35(R36,R37)
	1443	[5247]	SETUPVAL 	R35 U32 ; U32 := R35
	1444	[5249]	GETGLOBAL	R35 K0 ; R35 := 0xae91e43b
	1445	[5249]	SELF     	R35 R35 K161 ; R36 := R35; R35 := R35[0xd5181643]
	1446	[5249]	LOADK    	R37 K274 ; R37 := "PainTop"
	1447	[5249]	GETGLOBAL	R38 K275 ; R38 := 0x6f18e067
	1448	[5249]	CALL     	R35 4 1 ; R35(R36,R37,R38)
	1449	[5250]	GETGLOBAL	R35 K0 ; R35 := 0xae91e43b
	1450	[5250]	SELF     	R35 R35 K161 ; R36 := R35; R35 := R35[0xd5181643]
	1451	[5250]	LOADK    	R37 K276 ; R37 := "PainBottom"
	1452	[5250]	GETGLOBAL	R38 K275 ; R38 := 0x6f18e067
	1453	[5250]	CALL     	R35 4 1 ; R35(R36,R37,R38)
	1454	[5251]	GETGLOBAL	R35 K0 ; R35 := 0xae91e43b
	1455	[5251]	SELF     	R35 R35 K161 ; R36 := R35; R35 := R35[0xd5181643]
	1456	[5251]	LOADK    	R37 K277 ; R37 := "PainLeft"
	1457	[5251]	GETGLOBAL	R38 K275 ; R38 := 0x6f18e067
	1458	[5251]	CALL     	R35 4 1 ; R35(R36,R37,R38)
	1459	[5252]	GETGLOBAL	R35 K0 ; R35 := 0xae91e43b
	1460	[5252]	SELF     	R35 R35 K161 ; R36 := R35; R35 := R35[0xd5181643]
	1461	[5252]	LOADK    	R37 K278 ; R37 := "PainRight"
	1462	[5252]	GETGLOBAL	R38 K275 ; R38 := 0x6f18e067
	1463	[5252]	CALL     	R35 4 1 ; R35(R36,R37,R38)
	1464	[5253]	GETGLOBAL	R35 K0 ; R35 := 0xae91e43b
	1465	[5253]	SELF     	R35 R35 K161 ; R36 := R35; R35 := R35[0xd5181643]
	1466	[5253]	LOADK    	R37 K279 ; R37 := "ReticleSniper.bg"
	1467	[5253]	GETGLOBAL	R38 K275 ; R38 := 0x6f18e067
	1468	[5253]	CALL     	R35 4 1 ; R35(R36,R37,R38)
	1469	[5255]	GETGLOBAL	R35 K0 ; R35 := 0xae91e43b
	1470	[5255]	SELF     	R35 R35 K10 ; R36 := R35; R35 := R35[0xaade900e]
	1471	[5255]	LOADK    	R37 K91 ; R37 := "Card"
	1472	[5255]	LOADK    	R38 := 11.000000
	1473	[5255]	OP_LOADBOOL	R39 0 0 ; R39 := false
	1474	[5255]	CALL     	R35 5 1 ; R35(R36,R37,R38,R39)
	1475	[5256]	GETGLOBAL	R35 K0 ; R35 := 0xae91e43b
	1476	[5256]	SELF     	R35 R35 K1 ; R36 := R35; R35 := R35[0x67bc869f]
	1477	[5256]	LOADK    	R37 K280 ; R37 := "Card.Card"
	1478	[5256]	LOADK    	R38 := 10.000000
	1479	[5256]	LOADK    	R39 := 0.000000
	1480	[5256]	CALL     	R35 5 1 ; R35(R36,R37,R38,R39)
	1481	[5258]	GETUPVAL 	R35 U34 ; R35 := U34
	1482	[5258]	LOADK    	R36 K281 ; R36 := "LEVEL_ABBREV"
	1483	[5258]	GETGLOBAL	R37 K0 ; R37 := 0xae91e43b
	1484	[5258]	SELF     	R37 R37 K85 ; R38 := R37; R37 := R37[0x42b04007]
	1485	[5258]	LOADK    	R39 K282 ; R39 := "/Lotus/Language/Menu/LevelAbbreviation"
	1486	[5258]	OP_LOADBOOL	R40 0 0 ; R40 := false
	1487	[5258]	CALL     	R37 4 2 ; R37 := R37(R38,R39,R40)
	1488	[5258]	SETTABLE 	R35 R36 R37 ; R35[R36] := R37
	1489	[5259]	GETUPVAL 	R35 U35 ; R35 := U35
	1490	[5259]	CALL     	R35 1 1 ; R35()
	1491	[5262]	LOADK    	R35 := 1.000000
	1492	[5262]	GETUPVAL 	R36 U36 ; R36 := U36
	1493	[5262]	LEN      	R36 R36 ; R36 := # R36
	1494	[5262]	LOADK    	R37 := 1.000000
	1495	[5262]	FORPREP  	R35 1524 ; R35 -= R37; PC := 1524
	1496	[5263]	GETUPVAL 	R39 U36 ; R39 := U36
	1497	[5263]	NEWTABLE 	R40 0 3 ; R40 := {}
	1498	[5263]	LOADK    	R41 K283 ; R41 := "Tag"
	1499	[5263]	GETUPVAL 	R42 U36 ; R42 := U36
	1500	[5263]	GETTABLE 	R42 R42 R38 ; R42 := R42[R38]
	1501	[5263]	SETTABLE 	R40 R41 R42 ; R40[R41] := R42
	1502	[5263]	LOADK    	R41 K284 ; R41 := "NameTag"
	1503	[5263]	GETGLOBAL	R42 K0 ; R42 := 0xae91e43b
	1504	[5263]	SELF     	R42 R42 K85 ; R43 := R42; R42 := R42[0x42b04007]
	1505	[5263]	LOADK    	R44 K285 ; R44 := "/Lotus/Language/Game/"
	1506	[5263]	GETUPVAL 	R45 U36 ; R45 := U36
	1507	[5263]	GETTABLE 	R45 R45 R38 ; R45 := R45[R38]
	1508	[5263]	LOADK    	R46 K286 ; R46 := "_NoIcon"
	1509	[5263]	CONCAT   	R44 R44 R46 ; R44 := R44 .. R45 .. R46
	1510	[5263]	OP_LOADBOOL	R45 0 0 ; R45 := false
	1511	[5263]	CALL     	R42 4 2 ; R42 := R42(R43,R44,R45)
	1512	[5263]	SETTABLE 	R40 R41 R42 ; R40[R41] := R42
	1513	[5263]	GETGLOBAL	R41 K0 ; R41 := 0xae91e43b
	1514	[5263]	SELF     	R41 R41 K85 ; R42 := R41; R41 := R41[0x42b04007]
	1515	[5263]	LOADK    	R43 K287 ; R43 := "<"
	1516	[5263]	GETUPVAL 	R44 U36 ; R44 := U36
	1517	[5263]	GETTABLE 	R44 R44 R38 ; R44 := R44[R38]
	1518	[5263]	LOADK    	R45 K288 ; R45 := ">"
	1519	[5263]	CONCAT   	R43 R43 R45 ; R43 := R43 .. R44 .. R45
	1520	[5263]	OP_LOADBOOL	R44 1 0 ; R44 := true
	1521	[5263]	CALL     	R41 4 2 ; R41 := R41(R42,R43,R44)
	1522	[5263]	SETTABLE 	R40 K87 R41 ; R40["Icon"] := R41
	1523	[5263]	SETTABLE 	R39 R38 R40 ; R39[R38] := R40
	1524	[5262]	FORLOOP  	R35 1496 ; R35 += R37; if R35 <= R36 then begin PC := 1496; R38 := R35 end
	1525	[5266]	GETUPVAL 	R39 U37 ; R39 := U37
	1526	[5266]	CALL     	R39 1 1 ; R39()
	1527	[5268]	NEWTABLE 	R39 0 0 ; R39 := {}
	1528	[5269]	GETUPVAL 	R40 U2 ; R40 := U2
	1529	[5269]	LOADK    	R41 K289 ; R41 := "UIMode"
	1530	[5269]	GETTABLE 	R40 R40 R41 ; R40 := R40[R41]
	1531	[5269]	GETUPVAL 	R41 U6 ; R41 := U6
	1532	[5269]	LOADK    	R42 K290 ; R42 := "UI_MODE_IN_DOJO"
	1533	[5269]	GETTABLE 	R41 R41 R42 ; R41 := R41[R42]
	1534	[5269]	EQ       	1 R40 R41 ; if R40 == R41 then PC := 1541
	1535	[5269]	JMP      	1541 ; PC := 1541
	1536	[5269]	GETGLOBAL	R40 K13 ; R40 := _T
	1537	[5269]	LOADK    	R41 K291 ; R41 := "SecretMiniGameActive"
	1538	[5269]	GETTABLE 	R40 R40 R41 ; R40 := R40[R41]
	1539	[5269]	TEST     	R40 0 ; if not R40 then PC := 1546
	1540	[5269]	JMP      	1546 ; PC := 1546
	1541	[5270]	NEWTABLE 	R40 2 0 ; R40 := {}
	1542	[5270]	LOADK    	R41 K104 ; R41 := "WeaponFrame"
	1543	[5270]	LOADK    	R42 K106 ; R42 := "AbilityPanel"
	1544	[5270]	SETLIST  	R40 2 1 ; R40[(1-1)*FPF+i] := R(40+i), 1 <= i <= 2
	1545	[5270]	MOVE     	R39 R40 ; R39 := R40
	1546	[5272]	LOADK    	R40 := 1.000000
	1547	[5272]	LEN      	R41 R39 ; R41 := # R39
	1548	[5272]	LOADK    	R42 := 1.000000
	1549	[5272]	FORPREP  	R40 1556 ; R40 -= R42; PC := 1556
	1550	[5273]	GETGLOBAL	R44 K0 ; R44 := 0xae91e43b
	1551	[5273]	SELF     	R44 R44 K10 ; R45 := R44; R44 := R44[0xaade900e]
	1552	[5273]	GETTABLE 	R46 R39 R43 ; R46 := R39[R43]
	1553	[5273]	LOADK    	R47 := 11.000000
	1554	[5273]	OP_LOADBOOL	R48 0 0 ; R48 := false
	1555	[5273]	CALL     	R44 5 1 ; R44(R45,R46,R47,R48)
	1556	[5272]	FORLOOP  	R40 1550 ; R40 += R42; if R40 <= R41 then begin PC := 1550; R43 := R40 end
	1557	[5277]	GETGLOBAL	R44 K13 ; R44 := _T
	1558	[5277]	LOADK    	R45 K292 ; R45 := "ShowTerritoryProgress"
	1559	[5277]	OP_LOADBOOL	R46 1 0 ; R46 := true
	1560	[5277]	SETTABLE 	R44 R45 R46 ; R44[R45] := R46
	1561	[5278]	GETUPVAL 	R44 U38 ; R44 := U38
	1562	[5278]	CALL     	R44 1 1 ; R44()
	1563	[5280]	GETUPVAL 	R44 U2 ; R44 := U2
	1564	[5280]	LOADK    	R45 K293 ; R45 := "mTransOnRightSide"
	1565	[5280]	OP_LOADBOOL	R46 0 0 ; R46 := false
	1566	[5280]	SETTABLE 	R44 R45 R46 ; R44[R45] := R46
	1567	[5281]	GETUPVAL 	R44 U21 ; R44 := U21
	1568	[5281]	LOADK    	R46 K294 ; R46 := true
	1569	[5281]	SELF     	R44 R44 R46 ; R45 := R44; R44 := R44[R46]
	1570	[5281]	OP_LOADBOOL	R46 0 0 ; R46 := false
	1571	[5281]	CALL     	R44 3 1 ; R44(R45,R46)
	1572	[5283]	GETGLOBAL	R44 K0 ; R44 := 0xae91e43b
	1573	[5283]	SELF     	R44 R44 K10 ; R45 := R44; R44 := R44[0xaade900e]
	1574	[5283]	LOADK    	R46 K295 ; R46 := "ArialAnchor"
	1575	[5283]	LOADK    	R47 := 11.000000
	1576	[5283]	OP_LOADBOOL	R48 0 0 ; R48 := false
	1577	[5283]	CALL     	R44 5 1 ; R44(R45,R46,R47,R48)
	1578	[5285]	GETGLOBAL	R44 K0 ; R44 := 0xae91e43b
	1579	[5285]	SELF     	R44 R44 K194 ; R45 := R44; R44 := R44[0x5f56eeab]
	1580	[5285]	LOADK    	R46 K296 ; R46 := "ImpactMessage.Label"
	1581	[5285]	LOADK    	R47 := 29.000000
	1582	[5285]	LOADK    	R48 K196 ; R48 := ""
	1583	[5285]	CALL     	R44 5 1 ; R44(R45,R46,R47,R48)
	1584	[5286]	GETGLOBAL	R44 K53 ; R44 := 0x34291f5c
	1585	[5286]	GETTABLE 	R44 R44 K54 ; R44 := R44[0xa7a2e381]
	1586	[5286]	CALL     	R44 1 2 ; R44 := R44()
	1587	[5286]	TEST     	R44 0 ; if not R44 then PC := 1693
	1588	[5286]	JMP      	1693 ; PC := 1693
	1589	[5288]	GETGLOBAL	R44 K0 ; R44 := 0xae91e43b
	1590	[5288]	SELF     	R44 R44 K194 ; R45 := R44; R44 := R44[0x5f56eeab]
	1591	[5288]	LOADK    	R46 K296 ; R46 := "ImpactMessage.Label"
	1592	[5288]	LOADK    	R47 := 41.000000
	1593	[5288]	LOADK    	R48 K56 ; R48 := "Arial Unicode MS"
	1594	[5288]	CALL     	R44 5 1 ; R44(R45,R46,R47,R48)
	1595	[5289]	GETGLOBAL	R44 K0 ; R44 := 0xae91e43b
	1596	[5289]	SELF     	R44 R44 K1 ; R45 := R44; R44 := R44[0x67bc869f]
	1597	[5289]	LOADK    	R46 K296 ; R46 := "ImpactMessage.Label"
	1598	[5289]	LOADK    	R47 := 42.000000
	1599	[5289]	LOADK    	R48 := 18.000000
	1600	[5289]	CALL     	R44 5 1 ; R44(R45,R46,R47,R48)
	1601	[5291]	LOADK    	R44 := 1.500000
	1602	[5292]	GETGLOBAL	R45 K0 ; R45 := 0xae91e43b
	1603	[5292]	SELF     	R45 R45 K139 ; R46 := R45; R45 := R45[0x91a24e4b]
	1604	[5292]	LOADK    	R47 K296 ; R47 := "ImpactMessage.Label"
	1605	[5292]	LOADK    	R48 := 12.000000
	1606	[5292]	CALL     	R45 4 2 ; R45 := R45(R46,R47,R48)
	1607	[5293]	MUL      	R46 R45 R44 ; R46 := R45 * R44
	1608	[5294]	GETGLOBAL	R47 K0 ; R47 := 0xae91e43b
	1609	[5294]	SELF     	R47 R47 K139 ; R48 := R47; R47 := R47[0x91a24e4b]
	1610	[5294]	LOADK    	R49 K296 ; R49 := "ImpactMessage.Label"
	1611	[5294]	LOADK    	R50 := 0.000000
	1612	[5294]	CALL     	R47 4 2 ; R47 := R47(R48,R49,R50)
	1613	[5295]	GETGLOBAL	R48 K0 ; R48 := 0xae91e43b
	1614	[5295]	SELF     	R48 R48 K1 ; R49 := R48; R48 := R48[0x67bc869f]
	1615	[5295]	LOADK    	R50 K296 ; R50 := "ImpactMessage.Label"
	1616	[5295]	LOADK    	R51 := 5.000000
	1617	[5295]	LOADK    	R52 := 100.000000
	1618	[5295]	MUL      	R52 R44 R52 ; R52 := R44 * R52
	1619	[5295]	CALL     	R48 5 1 ; R48(R49,R50,R51,R52)
	1620	[5296]	GETGLOBAL	R48 K0 ; R48 := 0xae91e43b
	1621	[5296]	SELF     	R48 R48 K1 ; R49 := R48; R48 := R48[0x67bc869f]
	1622	[5296]	LOADK    	R50 K296 ; R50 := "ImpactMessage.Label"
	1623	[5296]	LOADK    	R51 := 6.000000
	1624	[5296]	LOADK    	R52 := 100.000000
	1625	[5296]	MUL      	R52 R44 R52 ; R52 := R44 * R52
	1626	[5296]	CALL     	R48 5 1 ; R48(R49,R50,R51,R52)
	1627	[5297]	GETGLOBAL	R48 K0 ; R48 := 0xae91e43b
	1628	[5297]	SELF     	R48 R48 K1 ; R49 := R48; R48 := R48[0x67bc869f]
	1629	[5297]	LOADK    	R50 K296 ; R50 := "ImpactMessage.Label"
	1630	[5297]	LOADK    	R51 := 0.000000
	1631	[5297]	SUB      	R52 R46 R45 ; R52 := R46 - R45
	1632	[5297]	LOADK    	R53 := 2.000000
	1633	[5297]	DIV      	R52 R52 R53 ; R52 := R52 / R53
	1634	[5297]	SUB      	R52 R47 R52 ; R52 := R47 - R52
	1635	[5297]	CALL     	R48 5 1 ; R48(R49,R50,R51,R52)
	1636	[5298]	GETGLOBAL	R48 K0 ; R48 := 0xae91e43b
	1637	[5298]	SELF     	R48 R48 K1 ; R49 := R48; R48 := R48[0x67bc869f]
	1638	[5298]	LOADK    	R50 K296 ; R50 := "ImpactMessage.Label"
	1639	[5298]	LOADK    	R51 := 1.000000
	1640	[5298]	LOADK    	R52 := -22.000000
	1641	[5298]	CALL     	R48 5 1 ; R48(R49,R50,R51,R52)
	1642	[5299]	GETGLOBAL	R48 K0 ; R48 := 0xae91e43b
	1643	[5299]	SELF     	R48 R48 K161 ; R49 := R48; R48 := R48[0xd5181643]
	1644	[5299]	LOADK    	R50 K296 ; R50 := "ImpactMessage.Label"
	1645	[5299]	GETGLOBAL	R51 K78 ; R51 := 0x0032441c
	1646	[5299]	LOADK    	R52 K297 ; R52 := "UIMaterial_FontSharpen"
	1647	[5299]	GETTABLE 	R51 R51 R52 ; R51 := R51[R52]
	1648	[5299]	CALL     	R48 4 1 ; R48(R49,R50,R51)
	1649	[5301]	GETGLOBAL	R48 K0 ; R48 := 0xae91e43b
	1650	[5301]	SELF     	R48 R48 K1 ; R49 := R48; R48 := R48[0x67bc869f]
	1651	[5301]	LOADK    	R50 K298 ; R50 := "ImpactMessage.Bg"
	1652	[5301]	LOADK    	R51 := 12.000000
	1653	[5301]	GETGLOBAL	R52 K0 ; R52 := 0xae91e43b
	1654	[5301]	SELF     	R52 R52 K139 ; R53 := R52; R52 := R52[0x91a24e4b]
	1655	[5301]	LOADK    	R54 K296 ; R54 := "ImpactMessage.Label"
	1656	[5301]	LOADK    	R55 := 33.000000
	1657	[5301]	CALL     	R52 4 2 ; R52 := R52(R53,R54,R55)
	1658	[5301]	LOADK    	R53 := 20.000000
	1659	[5301]	ADD      	R52 R52 R53 ; R52 := R52 + R53
	1660	[5301]	CALL     	R48 5 1 ; R48(R49,R50,R51,R52)
	1661	[5302]	GETGLOBAL	R48 K0 ; R48 := 0xae91e43b
	1662	[5302]	SELF     	R48 R48 K1 ; R49 := R48; R48 := R48[0x67bc869f]
	1663	[5302]	LOADK    	R50 K298 ; R50 := "ImpactMessage.Bg"
	1664	[5302]	LOADK    	R51 := 13.000000
	1665	[5302]	GETGLOBAL	R52 K0 ; R52 := 0xae91e43b
	1666	[5302]	SELF     	R52 R52 K139 ; R53 := R52; R52 := R52[0x91a24e4b]
	1667	[5302]	LOADK    	R54 K296 ; R54 := "ImpactMessage.Label"
	1668	[5302]	LOADK    	R55 := 34.000000
	1669	[5302]	CALL     	R52 4 2 ; R52 := R52(R53,R54,R55)
	1670	[5302]	LOADK    	R53 := 8.000000
	1671	[5302]	ADD      	R52 R52 R53 ; R52 := R52 + R53
	1672	[5302]	CALL     	R48 5 1 ; R48(R49,R50,R51,R52)
	1673	[5303]	GETGLOBAL	R48 K0 ; R48 := 0xae91e43b
	1674	[5303]	SELF     	R48 R48 K1 ; R49 := R48; R48 := R48[0x67bc869f]
	1675	[5303]	LOADK    	R50 K298 ; R50 := "ImpactMessage.Bg"
	1676	[5303]	LOADK    	R51 := 0.000000
	1677	[5303]	GETGLOBAL	R52 K0 ; R52 := 0xae91e43b
	1678	[5303]	SELF     	R52 R52 K139 ; R53 := R52; R52 := R52[0x91a24e4b]
	1679	[5303]	LOADK    	R54 K296 ; R54 := "ImpactMessage.Label"
	1680	[5303]	LOADK    	R55 := 0.000000
	1681	[5303]	CALL     	R52 4 0 ; R52,... := R52(R53,R54,R55)
	1682	[5303]	CALL     	R48 0 1 ; R48(R49,...)
	1683	[5304]	GETGLOBAL	R48 K0 ; R48 := 0xae91e43b
	1684	[5304]	SELF     	R48 R48 K1 ; R49 := R48; R48 := R48[0x67bc869f]
	1685	[5304]	LOADK    	R50 K298 ; R50 := "ImpactMessage.Bg"
	1686	[5304]	LOADK    	R51 := 1.000000
	1687	[5304]	GETGLOBAL	R52 K0 ; R52 := 0xae91e43b
	1688	[5304]	SELF     	R52 R52 K139 ; R53 := R52; R52 := R52[0x91a24e4b]
	1689	[5304]	LOADK    	R54 K296 ; R54 := "ImpactMessage.Label"
	1690	[5304]	LOADK    	R55 := 1.000000
	1691	[5304]	CALL     	R52 4 0 ; R52,... := R52(R53,R54,R55)
	1692	[5304]	CALL     	R48 0 1 ; R48(R49,...)
	1693	[5307]	GETGLOBAL	R48 K0 ; R48 := 0xae91e43b
	1694	[5307]	SELF     	R48 R48 K1 ; R49 := R48; R48 := R48[0x67bc869f]
	1695	[5307]	LOADK    	R50 K128 ; R50 := "StandingGain"
	1696	[5307]	LOADK    	R51 := 10.000000
	1697	[5307]	LOADK    	R52 := 0.000000
	1698	[5307]	CALL     	R48 5 1 ; R48(R49,R50,R51,R52)
	1699	[5308]	GETGLOBAL	R48 K0 ; R48 := 0xae91e43b
	1700	[5308]	SELF     	R48 R48 K10 ; R49 := R48; R48 := R48[0xaade900e]
	1701	[5308]	LOADK    	R50 K299 ; R50 := "StandingGain.Label"
	1702	[5308]	LOADK    	R51 := 75.000000
	1703	[5308]	OP_LOADBOOL	R52 1 0 ; R52 := true
	1704	[5308]	CALL     	R48 5 1 ; R48(R49,R50,R51,R52)
	1705	[5310]	GETGLOBAL	R48 K0 ; R48 := 0xae91e43b
	1706	[5310]	SELF     	R48 R48 K1 ; R49 := R48; R48 := R48[0x67bc869f]
	1707	[5310]	LOADK    	R50 K129 ; R50 := "PvPHeldFlagTimer"
	1708	[5310]	LOADK    	R51 := 10.000000
	1709	[5310]	LOADK    	R52 := 0.000000
	1710	[5310]	CALL     	R48 5 1 ; R48(R49,R50,R51,R52)
	1711	[5312]	GETUPVAL 	R48 U39 ; R48 := U39
	1712	[5312]	LOADK    	R49 K300 ; R49 := "PhotoBooth"
	1713	[5312]	GETGLOBAL	R50 K16 ; R50 := 0x7b998233
	1714	[5312]	GETUPVAL 	R51 U4 ; R51 := U4
	1715	[5312]	CALL     	R50 2 2 ; R50 := R50(R51)
	1716	[5312]	TEST     	R50 1 ; if R50 then PC := 1723
	1717	[5312]	JMP      	1723 ; PC := 1723
	1718	[5312]	GETUPVAL 	R50 U4 ; R50 := U4
	1719	[5312]	SELF     	R50 R50 K60 ; R51 := R50; R50 := R50[0xf2deaf69]
	1720	[5312]	GETGLOBAL	R52 K301 ; R52 := gLotusPhotoBoothGameRulesType
	1721	[5312]	CALL     	R50 3 2 ; R50 := R50(R51,R52)
	1722	[5312]	JMP      	1725 ; PC := 1725
	1723	[5312]	OP_LOADBOOL	R50 0 1 ; R50 := false; PC := 1724
	1724	[5312]	OP_LOADBOOL	R50 1 0 ; R50 := true
	1725	[5312]	SETTABLE 	R48 R49 R50 ; R48[R49] := R50
	1726	[5314]	GETGLOBAL	R48 K13 ; R48 := _T
	1727	[5314]	LOADK    	R49 K302 ; R49 := "LocationTrackerAddedCallbacks"
	1728	[5314]	NEWTABLE 	R50 0 0 ; R50 := {}
	1729	[5314]	SETTABLE 	R48 R49 R50 ; R48[R49] := R50
	1730	[5316]	GETUPVAL 	R48 U2 ; R48 := U2
	1731	[5316]	LOADK    	R49 K303 ; R49 := "Initialized"
	1732	[5316]	OP_LOADBOOL	R50 1 0 ; R50 := true
	1733	[5316]	SETTABLE 	R48 R49 R50 ; R48[R49] := R50
	1734	[5318]	GETGLOBAL	R48 K304 ; R48 := 0x0db48b5b
	1735	[5318]	LOADK    	R50 K305 ; R50 := true
	1736	[5318]	SELF     	R48 R48 R50 ; R49 := R48; R48 := R48[R50]
	1737	[5318]	CALL     	R48 2 2 ; R48 := R48(R49)
	1738	[5318]	TEST     	R48 1 ; if R48 then PC := 1746
	1739	[5318]	JMP      	1746 ; PC := 1746
	1740	[5318]	GETGLOBAL	R48 K304 ; R48 := 0x0db48b5b
	1741	[5318]	LOADK    	R50 K306 ; R50 := true
	1742	[5318]	SELF     	R48 R48 R50 ; R49 := R48; R48 := R48[R50]
	1743	[5318]	CALL     	R48 2 2 ; R48 := R48(R49)
	1744	[5318]	TEST     	R48 0 ; if not R48 then PC := 1772
	1745	[5318]	JMP      	1772 ; PC := 1772
	1746	[5318]	GETGLOBAL	R48 K16 ; R48 := 0x7b998233
	1747	[5318]	GETGLOBAL	R49 K307 ; R49 := 0xe7f2b02f
	1748	[5318]	LOADK    	R51 K308 ; R51 := true
	1749	[5318]	SELF     	R49 R49 R51 ; R50 := R49; R49 := R49[R51]
	1750	[5318]	CALL     	R49 2 0 ; R49,... := R49(R50)
	1751	[5318]	CALL     	R48 0 2 ; R48 := R48(R49,...)
	1752	[5318]	TEST     	R48 1 ; if R48 then PC := 1772
	1753	[5318]	JMP      	1772 ; PC := 1772
	1754	[5318]	GETGLOBAL	R48 K307 ; R48 := 0xe7f2b02f
	1755	[5318]	LOADK    	R50 K308 ; R50 := true
	1756	[5318]	SELF     	R48 R48 R50 ; R49 := R48; R48 := R48[R50]
	1757	[5318]	CALL     	R48 2 2 ; R48 := R48(R49)
	1758	[5318]	LOADK    	R50 K309 ; R50 := true
	1759	[5318]	SELF     	R48 R48 R50 ; R49 := R48; R48 := R48[R50]
	1760	[5318]	CALL     	R48 2 2 ; R48 := R48(R49)
	1761	[5318]	TEST     	R48 0 ; if not R48 then PC := 1772
	1762	[5318]	JMP      	1772 ; PC := 1772
	1763	[5319]	GETGLOBAL	R48 K13 ; R48 := _T
	1764	[5319]	LOADK    	R49 K310 ; R49 := true
	1765	[5319]	GETTABLE 	R48 R48 R49 ; R48 := R48[R49]
	1766	[5319]	LOADK    	R49 K311 ; R49 := "PROXY CONNECTION DETECTED\r\n\r\nCheck Network Config"
	1767	[5319]	LOADK    	R50 := -1.000000
	1768	[5319]	OP_LOADBOOL	R51 0 0 ; R51 := false
	1769	[5319]	LOADNIL  	R52 R52 ; R52 := nil
	1770	[5319]	OP_LOADBOOL	R53 0 0 ; R53 := false
	1771	[5319]	CALL     	R48 6 1 ; R48(R49,R50,R51,R52,R53)
	1772	[5322]	GETGLOBAL	R48 K13 ; R48 := _T
	1773	[5322]	LOADK    	R49 K312 ; R49 := "HudInitialized"
	1774	[5322]	GETGLOBAL	R50 K0 ; R50 := 0xae91e43b
	1775	[5322]	SETTABLE 	R48 R49 R50 ; R48[R49] := R50
	1776	[5325]	RETURN   	R0 1 ; return 

function #145 <?:5327,5329> (3 instructions, 12 bytes at 0000021130498460)
1 param, 2 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[5328]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[5328]	SETTABLE 	R1 K0 K1 ; R1["mScreenDuck"] := 2.000000
	3	[5329]	RETURN   	R0 1 ; return 

function #146 <?:5331,5341> (20 instructions, 80 bytes at 00000211283FD120)
1 param, 6 slots, 1 upvalue, 0 locals, 9 constants, 0 functions
	1	[5332]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[5332]	SETTABLE 	R1 K0 K1 ; R1["hasCheckedForStatusEffects"] := false
	3	[5333]	EQ       	0 R0 K2 ; if R0 ~= nil then PC := 8
	4	[5333]	JMP      	8 ; PC := 8
	5	[5334]	GETUPVAL 	R1 U0 ; R1 := U0
	6	[5334]	SETTABLE 	R1 K3 K2 ; R1["effectOverride"] := nil
	7	[5335]	RETURN   	R0 1 ; return 
	8	[5337]	NEWTABLE 	R1 4 0 ; R1 := {}
	9	[5337]	LOADK    	R2 K4 ; R2 := "ShieldDebuffKey"
	10	[5337]	LOADK    	R3 K5 ; R3 := "HealthDebuffKey"
	11	[5337]	LOADK    	R4 K6 ; R4 := "SpeedDebuffKey"
	12	[5337]	LOADK    	R5 K7 ; R5 := "DamageDebuffKey"
	13	[5337]	SETLIST  	R1 4 1 ; R1[(1-1)*FPF+i] := R(1+i), 1 <= i <= 4
	14	[5340]	GETUPVAL 	R2 U0 ; R2 := U0
	15	[5340]	GETGLOBAL	R3 K8 ; R3 := 0x03f57322
	16	[5340]	MOVE     	R4 R0 ; R4 := R0
	17	[5340]	CALL     	R3 2 2 ; R3 := R3(R4)
	18	[5340]	GETTABLE 	R3 R1 R3 ; R3 := R1[R3]
	19	[5340]	SETTABLE 	R2 K3 R3 ; R2["effectOverride"] := R3
	20	[5341]	RETURN   	R0 1 ; return 

function #147 <?:5343,5346> (3 instructions, 12 bytes at 000002111A944AB0)
0 params, 2 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[5345]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5345]	SETTABLE 	R0 K0 K1 ; R0["hasCheckedForStatusEffects"] := false
	3	[5346]	RETURN   	R0 1 ; return 

function #148 <?:5348,5363> (33 instructions, 132 bytes at 000002111C7B8040)
0 params, 3 slots, 2 upvalues, 0 locals, 9 constants, 0 functions
	1	[5349]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5349]	EQ       	1 R0 K0 ; if R0 == nil then PC := 33
	3	[5349]	JMP      	33 ; PC := 33
	4	[5350]	GETUPVAL 	R0 U1 ; R0 := U1
	5	[5350]	GETTABLE 	R0 R0 K1 ; R0 := R0["HidePlayerPanel"]
	6	[5350]	EQ       	1 R0 K0 ; if R0 == nil then PC := 12
	7	[5350]	JMP      	12 ; PC := 12
	8	[5350]	GETUPVAL 	R0 U1 ; R0 := U1
	9	[5350]	GETTABLE 	R0 R0 K1 ; R0 := R0["HidePlayerPanel"]
	10	[5350]	EQ       	0 R0 K2 ; if R0 ~= 0.000000 then PC := 13
	11	[5350]	JMP      	13 ; PC := 13
	12	[5350]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 13
	13	[5350]	OP_LOADBOOL	R0 1 0 ; R0 := true
	14	[5351]	GETUPVAL 	R1 U0 ; R1 := U0
	15	[5351]	GETTABLE 	R1 R1 K3 ; R1 := R1["mVisible"]
	16	[5351]	TEST     	R1 1 ; if R1 then PC := 26
	17	[5351]	JMP      	26 ; PC := 26
	18	[5352]	GETUPVAL 	R1 U1 ; R1 := U1
	19	[5352]	SETTABLE 	R1 K4 K5 ; R1["mCanControlPlayerPanel"] := true
	20	[5353]	TEST     	R0 1 ; if R0 then PC := 33
	21	[5353]	JMP      	33 ; PC := 33
	22	[5354]	GETUPVAL 	R1 U0 ; R1 := U0
	23	[5354]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x587aa683]
	24	[5354]	CALL     	R1 2 1 ; R1(R2)
	25	[5355]	JMP      	33 ; PC := 33
	26	[5357]	TEST     	R0 1 ; if R0 then PC := 30
	27	[5357]	JMP      	30 ; PC := 30
	28	[5358]	GETUPVAL 	R1 U1 ; R1 := U1
	29	[5358]	SETTABLE 	R1 K4 K7 ; R1["mCanControlPlayerPanel"] := false
	30	[5360]	GETUPVAL 	R1 U0 ; R1 := U0
	31	[5360]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xe0f7ce9e]
	32	[5360]	CALL     	R1 2 1 ; R1(R2)
	33	[5363]	RETURN   	R0 1 ; return 

function #149 <?:5365,5377> (50 instructions, 200 bytes at 00000211283EAE40)
0 params, 12 slots, 4 upvalues, 0 locals, 15 constants, 0 functions
	1	[5366]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[5366]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	3	[5366]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[5366]	TEST     	R0 1 ; if R0 then PC := 50
	5	[5366]	JMP      	50 ; PC := 50
	6	[5366]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	7	[5366]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[5366]	CALL     	R0 2 2 ; R0 := R0(R1)
	9	[5366]	TEST     	R0 1 ; if R0 then PC := 50
	10	[5366]	JMP      	50 ; PC := 50
	11	[5367]	GETUPVAL 	R0 U0 ; R0 := U0
	12	[5367]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xfaa69527]
	13	[5367]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	14	[5367]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0x6b837788]
	15	[5367]	CALL     	R2 2 2 ; R2 := R2(R3)
	16	[5367]	GETGLOBAL	R3 K1 ; R3 := 0xae91e43b
	17	[5367]	SELF     	R3 R3 K4 ; R4 := R3; R3 := R3[0xaf9fda9f]
	18	[5367]	CALL     	R3 2 2 ; R3 := R3(R4)
	19	[5367]	OP_LOADBOOL	R4 1 0 ; R4 := true
	20	[5367]	GETUPVAL 	R5 U1 ; R5 := U1
	21	[5367]	GETTABLE 	R5 R5 K5 ; R5 := R5["HudScalePadding"]
	22	[5367]	CALL     	R0 6 1 ; R0(R1,R2,R3,R4,R5)
	23	[5369]	LOADNIL  	R0 R0 ; R0 := nil
	24	[5370]	GETGLOBAL	R1 K6 ; R1 := 0xcfc01047
	25	[5370]	GETUPVAL 	R2 U2 ; R2 := U2
	26	[5370]	CALL     	R1 2 4 ; R1,R2,R3 := R1(R2)
	27	[5370]	JMP      	40 ; PC := 40
	28	[5371]	GETUPVAL 	R6 U0 ; R6 := U0
	29	[5371]	SELF     	R6 R6 K7 ; R7 := R6; R6 := R6[0x2de3d774]
	30	[5371]	GETTABLE 	R8 R5 K8 ; R8 := R5["Clip"]
	31	[5371]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	32	[5371]	MOVE     	R0 R6 ; R0 := R6
	33	[5372]	GETUPVAL 	R6 U3 ; R6 := U3
	34	[5372]	SELF     	R6 R6 K9 ; R7 := R6; R6 := R6[0x31669273]
	35	[5372]	GETTABLE 	R8 R5 K10 ; R8 := R5["Movie"]
	36	[5372]	GETTABLE 	R9 R5 K8 ; R9 := R5["Clip"]
	37	[5372]	GETTABLE 	R10 R0 K11 ; R10 := R0["x"]
	38	[5372]	GETTABLE 	R11 R0 K12 ; R11 := R0["y"]
	39	[5372]	CALL     	R6 6 1 ; R6(R7,R8,R9,R10,R11)
	40	[5370]	TFORLOOP 	R1 2 ; R4,R5 := R1(R2,R3); if R4 ~= nil then begin PC = 28; R3 := R4 end
	41	[5372]	JMP      	28 ; PC := 28
	42	[5375]	GETUPVAL 	R6 U3 ; R6 := U3
	43	[5375]	SELF     	R6 R6 K13 ; R7 := R6; R6 := R6[0xdae5251c]
	44	[5375]	GETUPVAL 	R8 U0 ; R8 := U0
	45	[5375]	SELF     	R8 R8 K7 ; R9 := R8; R8 := R8[0x2de3d774]
	46	[5375]	LOADK    	R10 K14 ; R10 := "Notification"
	47	[5375]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	48	[5375]	GETTABLE 	R8 R8 K12 ; R8 := R8["y"]
	49	[5375]	CALL     	R6 3 1 ; R6(R7,R8)
	50	[5377]	RETURN   	R0 1 ; return 

function #150 <?:5379,5389> (31 instructions, 124 bytes at 00000211283EB040)
0 params, 10 slots, 1 upvalue, 0 locals, 8 constants, 0 functions
	1	[5380]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[5380]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[5380]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[5380]	TEST     	R0 1 ; if R0 then PC := 31
	5	[5380]	JMP      	31 ; PC := 31
	6	[5381]	LOADK    	R0 := 1.000000
	7	[5381]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[5381]	GETTABLE 	R1 R1 K1 ; R1 := R1["list"]
	9	[5381]	LEN      	R1 R1 ; R1 := # R1
	10	[5381]	LOADK    	R2 := 1.000000
	11	[5381]	FORPREP  	R0 30 ; R0 -= R2; PC := 30
	12	[5382]	GETUPVAL 	R4 U0 ; R4 := U0
	13	[5382]	GETTABLE 	R4 R4 K1 ; R4 := R4["list"]
	14	[5382]	GETTABLE 	R4 R4 R3 ; R4 := R4[R3]
	15	[5383]	GETTABLE 	R5 R4 K2 ; R5 := R4["clip"]
	16	[5383]	EQ       	1 R5 K3 ; if R5 == "ImpactMessage" then PC := 30
	17	[5383]	JMP      	30 ; PC := 30
	18	[5384]	GETGLOBAL	R5 K4 ; R5 := 0xae91e43b
	19	[5384]	SELF     	R5 R5 K5 ; R6 := R5; R5 := R5[0xaade900e]
	20	[5384]	GETTABLE 	R7 R4 K2 ; R7 := R4["clip"]
	21	[5384]	LOADK    	R8 := 11.000000
	22	[5384]	OP_LOADBOOL	R9 0 0 ; R9 := false
	23	[5384]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	24	[5385]	GETGLOBAL	R5 K4 ; R5 := 0xae91e43b
	25	[5385]	SELF     	R5 R5 K6 ; R6 := R5; R5 := R5[0x67bc869f]
	26	[5385]	GETTABLE 	R7 R4 K2 ; R7 := R4["clip"]
	27	[5385]	LOADK    	R8 := 5.000000
	28	[5385]	LOADK    	R9 K7 ; R9 := 0.010000
	29	[5385]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	30	[5381]	FORLOOP  	R0 12 ; R0 += R2; if R0 <= R1 then begin PC := 12; R3 := R0 end
	31	[5389]	RETURN   	R0 1 ; return 

function #151 <?:5391,5401> (25 instructions, 100 bytes at 000002119181A130)
3 params, 6 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[5392]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[5392]	GETTABLE 	R3 R3 K0 ; R3 := R3["Faded"]
	3	[5392]	GETTABLE 	R3 R3 R0 ; R3 := R3[R0]
	4	[5392]	TEST     	R3 0 ; if not R3 then PC := 25
	5	[5392]	JMP      	25 ; PC := 25
	6	[5393]	TEST     	R1 0 ; if not R1 then PC := 15
	7	[5393]	JMP      	15 ; PC := 15
	8	[5394]	GETUPVAL 	R3 U0 ; R3 := U0
	9	[5394]	GETTABLE 	R3 R3 K0 ; R3 := R3["Faded"]
	10	[5394]	GETTABLE 	R3 R3 R0 ; R3 := R3[R0]
	11	[5394]	GETGLOBAL	R4 K2 ; R4 := 0x03f57322
	12	[5394]	MOVE     	R5 R1 ; R5 := R1
	13	[5394]	CALL     	R4 2 2 ; R4 := R4(R5)
	14	[5394]	SETTABLE 	R3 K1 R4 ; R3["Alpha"] := R4
	15	[5397]	TEST     	R2 0 ; if not R2 then PC := 25
	16	[5397]	JMP      	25 ; PC := 25
	17	[5398]	GETUPVAL 	R3 U0 ; R3 := U0
	18	[5398]	GETTABLE 	R3 R3 K0 ; R3 := R3["Faded"]
	19	[5398]	GETTABLE 	R3 R3 R0 ; R3 := R3[R0]
	20	[5398]	EQ       	1 R2 K4 ; if R2 == "true" then PC := 23
	21	[5398]	JMP      	23 ; PC := 23
	22	[5398]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 23
	23	[5398]	OP_LOADBOOL	R4 1 0 ; R4 := true
	24	[5398]	SETTABLE 	R3 K3 R4 ; R3["Visible"] := R4
	25	[5401]	RETURN   	R0 1 ; return 

function #152 <?:5403,5433> (96 instructions, 384 bytes at 000002111C757CC0)
3 params, 15 slots, 4 upvalues, 0 locals, 20 constants, 0 functions
	1	[5404]	GETGLOBAL	R3 K0 ; R3 := 0x85f2fca8
	2	[5405]	GETGLOBAL	R4 K1 ; R4 := 0x03f57322
	3	[5405]	MOVE     	R5 R0 ; R5 := R0
	4	[5405]	CALL     	R4 2 2 ; R4 := R4(R5)
	5	[5405]	MOVE     	R0 R4 ; R0 := R4
	6	[5406]	LT       	0 K2 R0 ; if 0.000000 >= R0 then PC := 60
	7	[5406]	JMP      	60 ; PC := 60
	8	[5407]	GETGLOBAL	R3 K3 ; R3 := 0x13eb61e9
	9	[5408]	GETGLOBAL	R4 K4 ; R4 := 0xae91e43b
	10	[5408]	SELF     	R4 R4 K5 ; R5 := R4; R4 := R4[0x67bc869f]
	11	[5408]	MOVE     	R6 R1 ; R6 := R1
	12	[5408]	LOADK    	R7 := 5.000000
	13	[5408]	LOADK    	R8 := 400.000000
	14	[5408]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	15	[5409]	GETGLOBAL	R4 K4 ; R4 := 0xae91e43b
	16	[5409]	SELF     	R4 R4 K5 ; R5 := R4; R4 := R4[0x67bc869f]
	17	[5409]	MOVE     	R6 R1 ; R6 := R1
	18	[5409]	LOADK    	R7 := 6.000000
	19	[5409]	LOADK    	R8 := 400.000000
	20	[5409]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	21	[5410]	GETGLOBAL	R4 K6 ; R4 := 0x25312c9b
	22	[5410]	GETGLOBAL	R5 K4 ; R5 := 0xae91e43b
	23	[5410]	MOVE     	R6 R1 ; R6 := R1
	24	[5410]	LOADK    	R7 := 7.000000
	25	[5410]	NEWTABLE 	R8 2 0 ; R8 := {}
	26	[5410]	LOADK    	R9 := 5.000000
	27	[5410]	LOADK    	R10 := 6.000000
	28	[5410]	SETLIST  	R8 2 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 2
	29	[5410]	NEWTABLE 	R9 2 0 ; R9 := {}
	30	[5410]	LOADK    	R10 := 100.000000
	31	[5410]	LOADK    	R11 := 100.000000
	32	[5410]	SETLIST  	R9 2 1 ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 2
	33	[5410]	LOADK    	R10 := 0.500000
	34	[5410]	LOADK    	R11 := 0.000000
	35	[5410]	CALL     	R4 8 1 ; R4(R5,R6,R7,R8,R9,R10,R11)
	36	[5412]	GETGLOBAL	R4 K8 ; R4 := 0x5bced4c4
	37	[5412]	GETTABLE 	R4 R4 K9 ; R4 := R4[0x55f27c30]
	38	[5412]	MOVE     	R5 R0 ; R5 := R0
	39	[5412]	CALL     	R4 2 2 ; R4 := R4(R5)
	40	[5413]	EQ       	0 R4 R0 ; if R4 ~= R0 then PC := 58
	41	[5413]	JMP      	58 ; PC := 58
	42	[5413]	GETUPVAL 	R5 U0 ; R5 := U0
	43	[5413]	LT       	0 R5 R4 ; if R5 >= R4 then PC := 58
	44	[5413]	JMP      	58 ; PC := 58
	45	[5414]	GETGLOBAL	R5 K8 ; R5 := 0x5bced4c4
	46	[5414]	GETTABLE 	R5 R5 K10 ; R5 := R5[0xac1b386a]
	47	[5414]	MOVE     	R6 R4 ; R6 := R4
	48	[5414]	GETGLOBAL	R7 K11 ; R7 := 0x0785e5dc
	49	[5414]	LEN      	R7 R7 ; R7 := # R7
	50	[5414]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	51	[5415]	GETGLOBAL	R6 K11 ; R6 := 0x0785e5dc
	52	[5415]	GETTABLE 	R6 R6 R5 ; R6 := R6[R5]
	53	[5416]	GETUPVAL 	R7 U2 ; R7 := U2
	54	[5416]	GETTABLE 	R7 R7 K12 ; R7 := R7[0x659d451f]
	55	[5416]	MOVE     	R8 R6 ; R8 := R6
	56	[5416]	CALL     	R7 2 2 ; R7 := R7(R8)
	57	[5416]	SETUPVAL 	R7 U1 ; U1 := R7
	58	[5418]	SETUPVAL 	R4 U0 ; U0 := R4
	59	[5418]	JMP      	78 ; PC := 78
	60	[5420]	GETGLOBAL	R7 K13 ; R7 := 0x7b998233
	61	[5420]	GETUPVAL 	R8 U1 ; R8 := U1
	62	[5420]	CALL     	R7 2 2 ; R7 := R7(R8)
	63	[5420]	TEST     	R7 1 ; if R7 then PC := 69
	64	[5420]	JMP      	69 ; PC := 69
	65	[5421]	GETUPVAL 	R7 U1 ; R7 := U1
	66	[5421]	SELF     	R7 R7 K14 ; R8 := R7; R7 := R7[0x6cf1e476]
	67	[5421]	OP_LOADBOOL	R9 1 0 ; R9 := true
	68	[5421]	CALL     	R7 3 1 ; R7(R8,R9)
	69	[5423]	GETUPVAL 	R7 U0 ; R7 := U0
	70	[5423]	LT       	0 K2 R7 ; if 0.000000 >= R7 then PC := 76
	71	[5423]	JMP      	76 ; PC := 76
	72	[5424]	GETUPVAL 	R7 U2 ; R7 := U2
	73	[5424]	GETTABLE 	R7 R7 K12 ; R7 := R7[0x659d451f]
	74	[5424]	GETGLOBAL	R8 K15 ; R8 := 0x50fa377d
	75	[5424]	CALL     	R7 2 1 ; R7(R8)
	76	[5426]	LOADK    	R7 := 0.000000
	77	[5426]	SETUPVAL 	R7 U0 ; U0 := R7
	78	[5428]	GETGLOBAL	R7 K4 ; R7 := 0xae91e43b
	79	[5428]	SELF     	R7 R7 K16 ; R8 := R7; R7 := R7[0xa7ec3e8a]
	80	[5428]	MOVE     	R9 R2 ; R9 := R2
	81	[5428]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	82	[5429]	TEST     	R7 0 ; if not R7 then PC := 96
	83	[5429]	JMP      	96 ; PC := 96
	84	[5430]	GETUPVAL 	R8 U3 ; R8 := U3
	85	[5430]	GETTABLE 	R8 R8 K17 ; R8 := R8[0xb5be5d4a]
	86	[5430]	GETGLOBAL	R9 K4 ; R9 := 0xae91e43b
	87	[5430]	MOVE     	R10 R2 ; R10 := R2
	88	[5430]	CALL     	R8 3 3 ; R8,R9 := R8(R9,R10)
	89	[5431]	GETUPVAL 	R10 U3 ; R10 := U3
	90	[5431]	GETTABLE 	R10 R10 K18 ; R10 := R10[0x5a22d251]
	91	[5431]	GETGLOBAL	R11 K4 ; R11 := 0xae91e43b
	92	[5431]	MOVE     	R12 R3 ; R12 := R3
	93	[5431]	SUB      	R13 R8 K19 ; R13 := R8 - 35.000000
	94	[5431]	MOVE     	R14 R9 ; R14 := R9
	95	[5431]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	96	[5433]	RETURN   	R0 1 ; return 

function #153 <?:5441,5443> (3 instructions, 12 bytes at 000002111C7A3DB0)
1 param, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[5442]	OP_LOADBOOL	R1 0 0 ; R1 := false
	2	[5442]	SETUPVAL 	R1 U0 ; U0 := R1
	3	[5443]	RETURN   	R0 1 ; return 

function #154 <?:5445,5450> (11 instructions, 44 bytes at 000002111C7A3FC0)
0 params, 2 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[5446]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[5446]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[5446]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[5446]	TEST     	R0 1 ; if R0 then PC := 11
	5	[5446]	JMP      	11 ; PC := 11
	6	[5447]	GETUPVAL 	R0 U0 ; R0 := U0
	7	[5447]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x32302b4a]
	8	[5447]	CALL     	R0 2 1 ; R0(R1)
	9	[5448]	LOADNIL  	R0 R0 ; R0 := nil
	10	[5448]	SETUPVAL 	R0 U0 ; U0 := R0
	11	[5450]	RETURN   	R0 1 ; return 

function #155 <?:5452,5478> (58 instructions, 232 bytes at 000002111D60ED60)
1 param, 8 slots, 4 upvalues, 0 locals, 19 constants, 0 functions
	1	[5454]	GETGLOBAL	R1 K0 ; R1 := 0x3d106989
	2	[5454]	LOADK    	R2 K1 ; R2 := "HUD_OnFindExternalSessionComplete("
	3	[5454]	GETGLOBAL	R3 K2 ; R3 := 0x64fb1586
	4	[5454]	MOVE     	R4 R0 ; R4 := R0
	5	[5454]	CALL     	R3 2 2 ; R3 := R3(R4)
	6	[5454]	LOADK    	R4 K3 ; R4 := ")"
	7	[5454]	CONCAT   	R2 R2 R4 ; R2 := R2 .. R3 .. R4
	8	[5454]	CALL     	R1 2 1 ; R1(R2)
	9	[5458]	GETUPVAL 	R1 U0 ; R1 := U0
	10	[5458]	GETTABLE 	R1 R1 K4 ; R1 := R1[0x756837f0]
	11	[5458]	MOVE     	R2 R0 ; R2 := R0
	12	[5458]	OP_LOADBOOL	R3 1 0 ; R3 := true
	13	[5458]	LOADNIL  	R4 R5 ; R4 := R5 := nil
	14	[5458]	GETGLOBAL	R6 K5 ; R6 := 0xae91e43b
	15	[5458]	LOADK    	R7 K6 ; R7 := "HUD_OnFindExternalSessionComplete"
	16	[5458]	CALL     	R1 7 3 ; R1,R2 := R1(R2,R3,R4,R5,R6,R7)
	17	[5460]	GETGLOBAL	R3 K7 ; R3 := 0x0b96777e
	18	[5460]	MOVE     	R4 R1 ; R4 := R1
	19	[5460]	CALL     	R3 2 2 ; R3 := R3(R4)
	20	[5460]	EQ       	0 R3 K8 ; if R3 ~= "string" then PC := 42
	21	[5460]	JMP      	42 ; PC := 42
	22	[5461]	GETUPVAL 	R3 U1 ; R3 := U1
	23	[5461]	CALL     	R3 1 1 ; R3()
	24	[5462]	TEST     	R2 0 ; if not R2 then PC := 35
	25	[5462]	JMP      	35 ; PC := 35
	26	[5462]	GETTABLE 	R3 R2 K9 ; R3 := R2[0x65b64ecd]
	27	[5462]	CALL     	R3 1 2 ; R3 := R3()
	28	[5462]	TEST     	R3 0 ; if not R3 then PC := 35
	29	[5462]	JMP      	35 ; PC := 35
	30	[5463]	GETTABLE 	R3 R2 K9 ; R3 := R2[0x65b64ecd]
	31	[5463]	CALL     	R3 1 1 ; R3()
	32	[5464]	OP_LOADBOOL	R3 0 0 ; R3 := false
	33	[5464]	SETUPVAL 	R3 U2 ; U2 := R3
	34	[5464]	JMP      	41 ; PC := 41
	35	[5466]	GETUPVAL 	R3 U3 ; R3 := U3
	36	[5466]	GETTABLE 	R3 R3 K10 ; R3 := R3[0xe0cba3ca]
	37	[5466]	MOVE     	R4 R1 ; R4 := R1
	38	[5466]	LOADK    	R5 K11 ; R5 := "Close_Dialog"
	39	[5466]	LOADK    	R6 := 0.000000
	40	[5466]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	41	[5468]	RETURN   	R0 1 ; return 
	42	[5471]	GETGLOBAL	R3 K13 ; R3 := 0x7b998233
	43	[5471]	GETGLOBAL	R4 K14 ; R4 := 0x89326c93
	44	[5471]	CALL     	R3 2 2 ; R3 := R3(R4)
	45	[5471]	TEST     	R3 1 ; if R3 then PC := 56
	46	[5471]	JMP      	56 ; PC := 56
	47	[5472]	GETGLOBAL	R3 K15 ; R3 := 0xbe190284
	48	[5473]	GETGLOBAL	R4 K0 ; R4 := 0x3d106989
	49	[5473]	LOADK    	R5 K16 ; R5 := "HudRedux.lua - OnFindSessionComplete, connect to lobby"
	50	[5473]	CALL     	R4 2 1 ; R4(R5)
	51	[5474]	SELF     	R4 R3 K17 ; R5 := R3; R4 := R3[0xdf0ee4f3]
	52	[5474]	SELF     	R6 R1 K18 ; R7 := R1; R6 := R1[0x7259ce13]
	53	[5474]	CALL     	R6 2 0 ; R6,... := R6(R7)
	54	[5474]	CALL     	R4 0 1 ; R4(R5,...)
	55	[5474]	JMP      	58 ; PC := 58
	56	[5476]	GETUPVAL 	R4 U1 ; R4 := U1
	57	[5476]	CALL     	R4 1 1 ; R4()
	58	[5478]	RETURN   	R0 1 ; return 

function #156 <?:5480,5494> (32 instructions, 128 bytes at 0000021131BA4B10)
0 params, 6 slots, 3 upvalues, 0 locals, 13 constants, 0 functions
	1	[5481]	GETGLOBAL	R0 K0 ; R0 := 0x3d106989
	2	[5481]	LOADK    	R1 K1 ; R1 := "HUD - External game ready"
	3	[5481]	CALL     	R0 2 1 ; R0(R1)
	4	[5483]	GETGLOBAL	R0 K2 ; R0 := 0x76ea806b
	5	[5483]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x3f3ae64c]
	6	[5483]	LOADK    	R2 := 0.000000
	7	[5483]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	8	[5484]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	9	[5484]	MOVE     	R2 R0 ; R2 := R0
	10	[5484]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[5484]	TEST     	R1 1 ; if R1 then PC := 32
	12	[5484]	JMP      	32 ; PC := 32
	13	[5484]	GETUPVAL 	R1 U0 ; R1 := U0
	14	[5484]	TEST     	R1 1 ; if R1 then PC := 32
	15	[5484]	JMP      	32 ; PC := 32
	16	[5486]	GETGLOBAL	R1 K5 ; R1 := 0x34291f5c
	17	[5486]	GETTABLE 	R1 R1 K6 ; R1 := R1[0xe27b35bb]
	18	[5486]	CALL     	R1 1 2 ; R1 := R1()
	19	[5487]	SETTABLE 	R1 K7 K8 ; R1["locString"] := "/Lotus/Language/Menu/NavBar_QuickMatchPleaseWait"
	20	[5488]	GETUPVAL 	R2 U2 ; R2 := U2
	21	[5488]	GETTABLE 	R2 R2 K9 ; R2 := R2[0xe99b84e7]
	22	[5488]	MOVE     	R3 R1 ; R3 := R1
	23	[5488]	CALL     	R2 2 2 ; R2 := R2(R3)
	24	[5488]	SETUPVAL 	R2 U1 ; U1 := R2
	25	[5490]	OP_LOADBOOL	R2 1 0 ; R2 := true
	26	[5490]	SETUPVAL 	R2 U0 ; U0 := R2
	27	[5492]	GETGLOBAL	R2 K10 ; R2 := 0xe7f2b02f
	28	[5492]	SELF     	R2 R2 K11 ; R3 := R2; R2 := R2[0x682f563c]
	29	[5492]	MOVE     	R4 R0 ; R4 := R0
	30	[5492]	LOADK    	R5 K12 ; R5 := "HUD_OnFindExternalSessionComplete"
	31	[5492]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	32	[5494]	RETURN   	R0 1 ; return 

function #157 <?:5496,5514> (46 instructions, 184 bytes at 00000211249B0850)
1 param, 11 slots, 1 upvalue, 0 locals, 9 constants, 0 functions
	1	[5497]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[5497]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[5497]	GETTABLE 	R2 R2 K1 ; R2 := R2["CameraController"]
	4	[5497]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[5497]	TEST     	R1 0 ; if not R1 then PC := 8
	6	[5497]	JMP      	8 ; PC := 8
	7	[5498]	RETURN   	R0 1 ; return 
	8	[5500]	OP_LOADBOOL	R1 0 0 ; R1 := false
	9	[5501]	GETGLOBAL	R2 K2 ; R2 := 0x89326c93
	10	[5501]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0x7d108ddb]
	11	[5501]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[5502]	LEN      	R3 R2 ; R3 := # R2
	13	[5502]	LT       	0 R3 K4 ; if R3 >= 2.000000 then PC := 16
	14	[5502]	JMP      	16 ; PC := 16
	15	[5503]	RETURN   	R0 1 ; return 
	16	[5506]	LOADK    	R3 := 1.000000
	17	[5506]	LEN      	R4 R2 ; R4 := # R2
	18	[5506]	LOADK    	R5 := 1.000000
	19	[5506]	FORPREP  	R3 45 ; R3 -= R5; PC := 45
	20	[5507]	GETUPVAL 	R7 U0 ; R7 := U0
	21	[5507]	GETTABLE 	R7 R7 K1 ; R7 := R7["CameraController"]
	22	[5507]	SELF     	R7 R7 K5 ; R8 := R7; R7 := R7[0x122ed2ac]
	23	[5507]	CALL     	R7 2 2 ; R7 := R7(R8)
	24	[5508]	TEST     	R1 1 ; if R1 then PC := 44
	25	[5508]	JMP      	44 ; PC := 44
	26	[5508]	TEST     	R7 0 ; if not R7 then PC := 44
	27	[5508]	JMP      	44 ; PC := 44
	28	[5508]	SELF     	R8 R7 K6 ; R9 := R7; R8 := R7[0x5e651723]
	29	[5508]	CALL     	R8 2 2 ; R8 := R8(R9)
	30	[5508]	TEST     	R8 0 ; if not R8 then PC := 44
	31	[5508]	JMP      	44 ; PC := 44
	32	[5508]	SELF     	R8 R7 K6 ; R9 := R7; R8 := R7[0x5e651723]
	33	[5508]	CALL     	R8 2 2 ; R8 := R8(R9)
	34	[5508]	SELF     	R8 R8 K7 ; R9 := R8; R8 := R8[0x5ca33548]
	35	[5508]	CALL     	R8 2 2 ; R8 := R8(R9)
	36	[5508]	EQ       	1 R8 R0 ; if R8 == R0 then PC := 44
	37	[5508]	JMP      	44 ; PC := 44
	38	[5509]	GETUPVAL 	R8 U0 ; R8 := U0
	39	[5509]	GETTABLE 	R8 R8 K1 ; R8 := R8["CameraController"]
	40	[5509]	SELF     	R8 R8 K8 ; R9 := R8; R8 := R8[0x431d29bf]
	41	[5509]	LOADK    	R10 := 1.000000
	42	[5509]	CALL     	R8 3 1 ; R8(R9,R10)
	43	[5509]	JMP      	45 ; PC := 45
	44	[5511]	OP_LOADBOOL	R1 1 0 ; R1 := true
	45	[5506]	FORLOOP  	R3 20 ; R3 += R5; if R3 <= R4 then begin PC := 20; R6 := R3 end
	46	[5514]	RETURN   	R0 1 ; return 

function #158 <?:5516,5518> (3 instructions, 12 bytes at 0000021129092200)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[5517]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5517]	CALL     	R0 1 1 ; R0()
	3	[5518]	RETURN   	R0 1 ; return 

function #159 <?:5520,5522> (11 instructions, 44 bytes at 0000021119A654F0)
1 param, 8 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[5521]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	2	[5521]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x20b98db3]
	3	[5521]	LOADK    	R3 K2 ; R3 := "MiniGameScore.Score.text"
	4	[5521]	LOADK    	R4 K3 ; R4 := "/Lotus/Language/Menu/MiniGameScore"
	5	[5521]	NEWTABLE 	R5 0 1 ; R5 := {}
	6	[5521]	GETGLOBAL	R6 K5 ; R6 := 0x64fb1586
	7	[5521]	MOVE     	R7 R0 ; R7 := R0
	8	[5521]	CALL     	R6 2 2 ; R6 := R6(R7)
	9	[5521]	SETTABLE 	R5 K4 R6 ; R5["SCORE"] := R6
	10	[5521]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	11	[5522]	RETURN   	R0 1 ; return 

function #160 <?:5524,5541> (79 instructions, 316 bytes at 000002111D3D0750)
1 param, 6 slots, 1 upvalue, 0 locals, 16 constants, 0 functions
	1	[5525]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	2	[5525]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xaade900e]
	3	[5525]	LOADK    	R3 K2 ; R3 := "AbilityDots"
	4	[5525]	LOADK    	R4 := 11.000000
	5	[5525]	OP_LOADBOOL	R5 0 0 ; R5 := false
	6	[5525]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	7	[5526]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	8	[5526]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xaade900e]
	9	[5526]	LOADK    	R3 K3 ; R3 := "Stamina"
	10	[5526]	LOADK    	R4 := 11.000000
	11	[5526]	OP_LOADBOOL	R5 0 0 ; R5 := false
	12	[5526]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	13	[5527]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	14	[5527]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xaade900e]
	15	[5527]	LOADK    	R3 K4 ; R3 := "HealthAndShield.SuitName"
	16	[5527]	LOADK    	R4 := 11.000000
	17	[5527]	OP_LOADBOOL	R5 0 0 ; R5 := false
	18	[5527]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	19	[5528]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	20	[5528]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xaade900e]
	21	[5528]	LOADK    	R3 K5 ; R3 := "HealthAndShield.MarkerID"
	22	[5528]	LOADK    	R4 := 11.000000
	23	[5528]	OP_LOADBOOL	R5 0 0 ; R5 := false
	24	[5528]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	25	[5529]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	26	[5529]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xaade900e]
	27	[5529]	LOADK    	R3 K6 ; R3 := "HealthAndShield.SuitAffinity"
	28	[5529]	LOADK    	R4 := 11.000000
	29	[5529]	OP_LOADBOOL	R5 0 0 ; R5 := false
	30	[5529]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	31	[5530]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	32	[5530]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xaade900e]
	33	[5530]	LOADK    	R3 K7 ; R3 := "MiniMapContainer"
	34	[5530]	LOADK    	R4 := 11.000000
	35	[5530]	OP_LOADBOOL	R5 0 0 ; R5 := false
	36	[5530]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	37	[5531]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	38	[5531]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xaade900e]
	39	[5531]	LOADK    	R3 K8 ; R3 := "MiniMapOverlayMsg"
	40	[5531]	LOADK    	R4 := 11.000000
	41	[5531]	OP_LOADBOOL	R5 0 0 ; R5 := false
	42	[5531]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	43	[5532]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	44	[5532]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xaade900e]
	45	[5532]	LOADK    	R3 K9 ; R3 := "HealthAndShield"
	46	[5532]	LOADK    	R4 := 11.000000
	47	[5532]	OP_LOADBOOL	R5 0 0 ; R5 := false
	48	[5532]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	49	[5533]	GETUPVAL 	R1 U0 ; R1 := U0
	50	[5533]	SELF     	R1 R1 K10 ; R2 := R1; R1 := R1[0xe95b7a4b]
	51	[5533]	OP_LOADBOOL	R3 0 0 ; R3 := false
	52	[5533]	CALL     	R1 3 1 ; R1(R2,R3)
	53	[5535]	EQ       	1 R0 K11 ; if R0 == "wareframe" then PC := 79
	54	[5535]	JMP      	79 ; PC := 79
	55	[5536]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	56	[5536]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xaade900e]
	57	[5536]	LOADK    	R3 K12 ; R3 := "AbilityPanel.EnergyBar.Flare"
	58	[5536]	LOADK    	R4 := 11.000000
	59	[5536]	OP_LOADBOOL	R5 0 0 ; R5 := false
	60	[5536]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	61	[5537]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	62	[5537]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xaade900e]
	63	[5537]	LOADK    	R3 K13 ; R3 := "HudTracker"
	64	[5537]	LOADK    	R4 := 11.000000
	65	[5537]	OP_LOADBOOL	R5 0 0 ; R5 := false
	66	[5537]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	67	[5538]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	68	[5538]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xaade900e]
	69	[5538]	LOADK    	R3 K14 ; R3 := "Reticle"
	70	[5538]	LOADK    	R4 := 11.000000
	71	[5538]	OP_LOADBOOL	R5 0 0 ; R5 := false
	72	[5538]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	73	[5539]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	74	[5539]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xaade900e]
	75	[5539]	LOADK    	R3 K15 ; R3 := "ReticleSniper"
	76	[5539]	LOADK    	R4 := 11.000000
	77	[5539]	OP_LOADBOOL	R5 0 0 ; R5 := false
	78	[5539]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	79	[5541]	RETURN   	R0 1 ; return 

function #161 <?:5543,5545> (5 instructions, 20 bytes at 000002111D3DBD00)
1 param, 4 slots, 2 upvalues, 0 locals, 0 constants, 0 functions
	1	[5544]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[5544]	GETUPVAL 	R2 U1 ; R2 := U1
	3	[5544]	MOVE     	R3 R0 ; R3 := R0
	4	[5544]	CALL     	R1 3 1 ; R1(R2,R3)
	5	[5545]	RETURN   	R0 1 ; return 

function #162 <?:5547,5549> (4 instructions, 16 bytes at 000002111D3DBEF0)
0 params, 2 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[5548]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5548]	GETTABLE 	R0 R0 K0 ; R0 := R0["isEnabled"]
	3	[5548]	RETURN   	R0 2 ; return R0 
	4	[5549]	RETURN   	R0 1 ; return 

function #163 <?:5551,5553> (3 instructions, 12 bytes at 000002111D3A03A0)
1 param, 2 slots, 0 upvalues, 0 locals, 2 constants, 0 functions
	1	[5552]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[5552]	SETTABLE 	R1 K1 R0 ; R1["ForceOpenScreen"] := R0
	3	[5553]	RETURN   	R0 1 ; return 

function #164 <?:5555,5575> (57 instructions, 228 bytes at 000002111D3D0940)
1 param, 6 slots, 2 upvalues, 0 locals, 12 constants, 0 functions
	1	[5556]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[5556]	GETGLOBAL	R2 K1 ; R2 := _T
	3	[5556]	GETTABLE 	R2 R2 K2 ; R2 := R2["RailjackHud_Movie"]
	4	[5556]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[5556]	TEST     	R1 1 ; if R1 then PC := 14
	6	[5556]	JMP      	14 ; PC := 14
	7	[5557]	GETGLOBAL	R1 K1 ; R1 := _T
	8	[5557]	GETTABLE 	R1 R1 K2 ; R1 := R1["RailjackHud_Movie"]
	9	[5557]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xe4162eed]
	10	[5557]	LOADK    	R3 K4 ; R3 := "OnPowerModifierHeld"
	11	[5557]	MOVE     	R4 R0 ; R4 := R0
	12	[5557]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	13	[5558]	RETURN   	R0 1 ; return 
	14	[5561]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	15	[5561]	GETGLOBAL	R2 K1 ; R2 := _T
	16	[5561]	GETTABLE 	R2 R2 K5 ; R2 := R2["MechHud_Movie"]
	17	[5561]	CALL     	R1 2 2 ; R1 := R1(R2)
	18	[5561]	TEST     	R1 1 ; if R1 then PC := 27
	19	[5561]	JMP      	27 ; PC := 27
	20	[5562]	GETGLOBAL	R1 K1 ; R1 := _T
	21	[5562]	GETTABLE 	R1 R1 K5 ; R1 := R1["MechHud_Movie"]
	22	[5562]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xe4162eed]
	23	[5562]	LOADK    	R3 K4 ; R3 := "OnPowerModifierHeld"
	24	[5562]	MOVE     	R4 R0 ; R4 := R0
	25	[5562]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	26	[5563]	RETURN   	R0 1 ; return 
	27	[5566]	GETGLOBAL	R1 K6 ; R1 := 0x9ba7909f
	28	[5566]	SELF     	R1 R1 K7 ; R2 := R1; R1 := R1[0xbcfb64ab]
	29	[5566]	GETGLOBAL	R3 K8 ; R3 := 0x96bd0a18
	30	[5566]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	31	[5567]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	32	[5567]	MOVE     	R3 R1 ; R3 := R1
	33	[5567]	CALL     	R2 2 2 ; R2 := R2(R3)
	34	[5567]	TEST     	R2 1 ; if R2 then PC := 41
	35	[5567]	JMP      	41 ; PC := 41
	36	[5568]	SELF     	R2 R1 K3 ; R3 := R1; R2 := R1[0xe4162eed]
	37	[5568]	LOADK    	R4 K4 ; R4 := "OnPowerModifierHeld"
	38	[5568]	MOVE     	R5 R0 ; R5 := R0
	39	[5568]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	40	[5568]	JMP      	57 ; PC := 57
	41	[5570]	GETUPVAL 	R2 U0 ; R2 := U0
	42	[5570]	EQ       	1 R0 K9 ; if R0 == "true" then PC := 45
	43	[5570]	JMP      	45 ; PC := 45
	44	[5570]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 45
	45	[5570]	OP_LOADBOOL	R3 1 0 ; R3 := true
	46	[5570]	CALL     	R2 2 1 ; R2(R3)
	47	[5571]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	48	[5571]	GETUPVAL 	R3 U1 ; R3 := U1
	49	[5571]	CALL     	R2 2 2 ; R2 := R2(R3)
	50	[5571]	TEST     	R2 1 ; if R2 then PC := 57
	51	[5571]	JMP      	57 ; PC := 57
	52	[5572]	GETUPVAL 	R2 U1 ; R2 := U1
	53	[5572]	SELF     	R2 R2 K10 ; R3 := R2; R2 := R2[0xc9dd135d]
	54	[5572]	LOADK    	R4 K11 ; R4 := "OnPowerModifiedHeld"
	55	[5572]	MOVE     	R5 R0 ; R5 := R0
	56	[5572]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	57	[5575]	RETURN   	R0 1 ; return 

function #165 <?:5577,5588> (28 instructions, 112 bytes at 0000021129081B60)
0 params, 6 slots, 1 upvalue, 0 locals, 10 constants, 0 functions
	1	[5578]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5578]	GETTABLE 	R0 R0 K0 ; R0 := R0[0xcf1fcba4]
	3	[5578]	CALL     	R0 1 2 ; R0 := R0()
	4	[5578]	TEST     	R0 0 ; if not R0 then PC := 28
	5	[5578]	JMP      	28 ; PC := 28
	6	[5579]	GETGLOBAL	R0 K1 ; R0 := 0x76ea806b
	7	[5579]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x3f3ae64c]
	8	[5579]	LOADK    	R2 := 0.000000
	9	[5579]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	10	[5579]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x80563238]
	11	[5579]	CALL     	R0 2 2 ; R0 := R0(R1)
	12	[5580]	GETGLOBAL	R1 K4 ; R1 := 0xbe190284
	13	[5581]	SELF     	R2 R1 K5 ; R3 := R1; R2 := R1[0xf9bfc5d9]
	14	[5581]	LOADK    	R4 := 2.000000
	15	[5581]	LOADK    	R5 := 0.000000
	16	[5581]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	17	[5582]	SELF     	R2 R1 K7 ; R3 := R1; R2 := R1[0x4414661f]
	18	[5582]	CALL     	R2 2 2 ; R2 := R2(R3)
	19	[5582]	TEST     	R2 0 ; if not R2 then PC := 25
	20	[5582]	JMP      	25 ; PC := 25
	21	[5583]	SELF     	R2 R0 K8 ; R3 := R0; R2 := R0[0xd40ba817]
	22	[5583]	LOADK    	R4 := 6.000000
	23	[5583]	CALL     	R2 3 1 ; R2(R3,R4)
	24	[5583]	JMP      	28 ; PC := 28
	25	[5585]	SELF     	R2 R0 K8 ; R3 := R0; R2 := R0[0xd40ba817]
	26	[5585]	LOADK    	R4 := 0.000000
	27	[5585]	CALL     	R2 3 1 ; R2(R3,R4)
	28	[5588]	RETURN   	R0 1 ; return 

function #166 <?:5590,5594> (8 instructions, 32 bytes at 000002111D390320)
1 param, 3 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[5591]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[5591]	MOVE     	R2 R0 ; R2 := R0
	3	[5591]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[5591]	TEST     	R1 1 ; if R1 then PC := 8
	5	[5591]	JMP      	8 ; PC := 8
	6	[5592]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[5592]	SETTABLE 	R1 K1 R0 ; R1["mProfileMovie"] := R0
	8	[5594]	RETURN   	R0 1 ; return 

function #167 <?:5596,5616> (90 instructions, 360 bytes at 00000211210214A0)
0 params, 8 slots, 8 upvalues, 0 locals, 22 constants, 0 functions
	1	[5597]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5597]	SELF     	R0 R0 K0 ; R1 := R0; R0 := R0[0x59a9b745]
	3	[5597]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[5598]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	5	[5598]	MOVE     	R2 R0 ; R2 := R0
	6	[5598]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[5598]	TEST     	R1 1 ; if R1 then PC := 90
	8	[5598]	JMP      	90 ; PC := 90
	9	[5598]	GETTABLE 	R1 R0 K2 ; R1 := R0["mActive"]
	10	[5598]	TEST     	R1 0 ; if not R1 then PC := 90
	11	[5598]	JMP      	90 ; PC := 90
	12	[5598]	GETUPVAL 	R1 U1 ; R1 := U1
	13	[5598]	GETTABLE 	R1 R1 K3 ; R1 := R1["valid"]
	14	[5598]	TEST     	R1 0 ; if not R1 then PC := 90
	15	[5598]	JMP      	90 ; PC := 90
	16	[5599]	GETTABLE 	R1 R0 K4 ; R1 := R0["mAvatar"]
	17	[5600]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	18	[5600]	MOVE     	R3 R1 ; R3 := R1
	19	[5600]	CALL     	R2 2 2 ; R2 := R2(R3)
	20	[5600]	TEST     	R2 1 ; if R2 then PC := 90
	21	[5600]	JMP      	90 ; PC := 90
	22	[5601]	LOADNIL  	R2 R2 ; R2 := nil
	23	[5602]	GETUPVAL 	R3 U2 ; R3 := U2
	24	[5602]	CALL     	R3 1 2 ; R3 := R3()
	25	[5602]	TEST     	R3 1 ; if R3 then PC := 33
	26	[5602]	JMP      	33 ; PC := 33
	27	[5602]	GETUPVAL 	R3 U3 ; R3 := U3
	28	[5602]	GETTABLE 	R3 R3 K5 ; R3 := R3["UIMode"]
	29	[5602]	GETUPVAL 	R4 U4 ; R4 := U4
	30	[5602]	GETTABLE 	R4 R4 K6 ; R4 := R4["UI_MODE_IN_DOJO"]
	31	[5602]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 47
	32	[5602]	JMP      	47 ; PC := 47
	33	[5602]	GETTABLE 	R3 R0 K7 ; R3 := R0["mName"]
	34	[5602]	EQ       	1 R3 K8 ; if R3 == "" then PC := 47
	35	[5602]	JMP      	47 ; PC := 47
	36	[5602]	GETUPVAL 	R3 U5 ; R3 := U5
	37	[5602]	MOVE     	R4 R1 ; R4 := R1
	38	[5602]	CALL     	R3 2 2 ; R3 := R3(R4)
	39	[5602]	TEST     	R3 0 ; if not R3 then PC := 47
	40	[5602]	JMP      	47 ; PC := 47
	41	[5603]	GETUPVAL 	R3 U6 ; R3 := U6
	42	[5603]	SELF     	R3 R3 K9 ; R4 := R3; R3 := R3[0x6566f2d4]
	43	[5603]	MOVE     	R5 R1 ; R5 := R1
	44	[5603]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	45	[5603]	MOVE     	R2 R3 ; R2 := R3
	46	[5603]	JMP      	58 ; PC := 58
	47	[5604]	GETGLOBAL	R3 K1 ; R3 := 0x7b998233
	48	[5604]	SELF     	R4 R1 K10 ; R5 := R1; R4 := R1[0x5e651723]
	49	[5604]	CALL     	R4 2 0 ; R4,... := R4(R5)
	50	[5604]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	51	[5604]	TEST     	R3 1 ; if R3 then PC := 58
	52	[5604]	JMP      	58 ; PC := 58
	53	[5605]	SELF     	R3 R1 K10 ; R4 := R1; R3 := R1[0x5e651723]
	54	[5605]	CALL     	R3 2 2 ; R3 := R3(R4)
	55	[5605]	SELF     	R3 R3 K11 ; R4 := R3; R3 := R3[0x1020015e]
	56	[5605]	CALL     	R3 2 2 ; R3 := R3(R4)
	57	[5605]	MOVE     	R2 R3 ; R2 := R3
	58	[5608]	GETGLOBAL	R3 K1 ; R3 := 0x7b998233
	59	[5608]	GETGLOBAL	R4 K12 ; R4 := _T
	60	[5608]	GETTABLE 	R4 R4 K13 ; R4 := R4["OpenScreen"]
	61	[5608]	CALL     	R3 2 2 ; R3 := R3(R4)
	62	[5608]	TEST     	R3 1 ; if R3 then PC := 90
	63	[5608]	JMP      	90 ; PC := 90
	64	[5608]	GETGLOBAL	R3 K1 ; R3 := 0x7b998233
	65	[5608]	MOVE     	R4 R2 ; R4 := R2
	66	[5608]	CALL     	R3 2 2 ; R3 := R3(R4)
	67	[5608]	TEST     	R3 1 ; if R3 then PC := 90
	68	[5608]	JMP      	90 ; PC := 90
	69	[5608]	EQ       	1 R2 K8 ; if R2 == "" then PC := 90
	70	[5608]	JMP      	90 ; PC := 90
	71	[5608]	GETTABLE 	R3 R0 K7 ; R3 := R0["mName"]
	72	[5608]	GETUPVAL 	R4 U4 ; R4 := U4
	73	[5608]	GETTABLE 	R4 R4 K14 ; R4 := R4["HIDDEN_PLAYER_NAME"]
	74	[5608]	EQ       	1 R3 R4 ; if R3 == R4 then PC := 90
	75	[5608]	JMP      	90 ; PC := 90
	76	[5609]	GETGLOBAL	R3 K12 ; R3 := _T
	77	[5609]	SETTABLE 	R3 K15 K16 ; R3["SelectedIsGuild"] := false
	78	[5610]	GETGLOBAL	R3 K12 ; R3 := _T
	79	[5610]	GETTABLE 	R4 R0 K7 ; R4 := R0["mName"]
	80	[5610]	SETTABLE 	R3 K17 R4 ; R3["SelectedProfileName"] := R4
	81	[5611]	GETGLOBAL	R3 K12 ; R3 := _T
	82	[5611]	SETTABLE 	R3 K18 R2 ; R3["SelectedProfileId"] := R2
	83	[5612]	GETGLOBAL	R3 K12 ; R3 := _T
	84	[5612]	GETTABLE 	R3 R3 K19 ; R3 := R3[0x32bb15a6]
	85	[5612]	LOADK    	R4 K20 ; R4 := "Profile"
	86	[5612]	GETGLOBAL	R5 K21 ; R5 := 0xae91e43b
	87	[5612]	OP_LOADBOOL	R6 0 0 ; R6 := false
	88	[5612]	GETUPVAL 	R7 U7 ; R7 := U7
	89	[5612]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	90	[5616]	RETURN   	R0 1 ; return 

function #168 <?:5618,5624> (19 instructions, 76 bytes at 00000211184CF120)
0 params, 9 slots, 0 upvalues, 0 locals, 4 constants, 1 function
	1	[5619]	GETGLOBAL	R0 K0 ; R0 := 0x25312c9b
	2	[5619]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	3	[5619]	LOADK    	R2 K2 ; R2 := "SyndicatePower"
	4	[5619]	LOADK    	R3 := 8.000000
	5	[5619]	NEWTABLE 	R4 3 0 ; R4 := {}
	6	[5619]	LOADK    	R5 := 5.000000
	7	[5619]	LOADK    	R6 := 6.000000
	8	[5619]	LOADK    	R7 := 10.000000
	9	[5619]	SETLIST  	R4 3 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 3
	10	[5619]	NEWTABLE 	R5 3 0 ; R5 := {}
	11	[5619]	LOADK    	R6 := 500.000000
	12	[5619]	LOADK    	R7 := 500.000000
	13	[5619]	LOADK    	R8 := 0.000000
	14	[5619]	SETLIST  	R5 3 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 3
	15	[5619]	LOADK    	R6 := 0.500000
	16	[5619]	LOADK    	R7 := 0.000000
	17	[5622]	CLOSURE  	R8 0 ; R8 := closure(Function #1)
	18	[5619]	CALL     	R0 9 1 ; R0(R1,R2,R3,R4,R5,R6,R7,R8)
	19	[5624]	RETURN   	R0 1 ; return 

function #169 <?:5626,5629> (13 instructions, 52 bytes at 00000211290905B0)
0 params, 7 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[5627]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5627]	GETTABLE 	R0 R0 K0 ; R0 := R0[0xb5be5d4a]
	3	[5627]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	4	[5627]	LOADK    	R2 K2 ; R2 := "WeaponFrame.SyndicatePower.Back"
	5	[5627]	CALL     	R0 3 3 ; R0,R1 := R0(R1,R2)
	6	[5628]	GETUPVAL 	R2 U0 ; R2 := U0
	7	[5628]	GETTABLE 	R2 R2 K3 ; R2 := R2[0x5a22d251]
	8	[5628]	GETGLOBAL	R3 K1 ; R3 := 0xae91e43b
	9	[5628]	GETGLOBAL	R4 K4 ; R4 := 0x0b8bd48f
	10	[5628]	ADD      	R5 R0 K5 ; R5 := R0 + 10.000000
	11	[5628]	MOVE     	R6 R1 ; R6 := R1
	12	[5628]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	13	[5629]	RETURN   	R0 1 ; return 

function #170 <?:5631,5642> (59 instructions, 236 bytes at 000002112908BFF0)
0 params, 11 slots, 3 upvalues, 0 locals, 13 constants, 0 functions
	1	[5632]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[5632]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xaade900e]
	3	[5632]	LOADK    	R2 K2 ; R2 := "SyndicatePower"
	4	[5632]	LOADK    	R3 := 11.000000
	5	[5632]	OP_LOADBOOL	R4 1 0 ; R4 := true
	6	[5632]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	7	[5634]	GETUPVAL 	R0 U0 ; R0 := U0
	8	[5634]	GETTABLE 	R0 R0 K3 ; R0 := R0[0xb5be5d4a]
	9	[5634]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	10	[5634]	LOADK    	R2 K4 ; R2 := "WeaponFrame.SyndicatePower.Back"
	11	[5634]	CALL     	R0 3 3 ; R0,R1 := R0(R1,R2)
	12	[5635]	GETUPVAL 	R2 U0 ; R2 := U0
	13	[5635]	GETTABLE 	R2 R2 K5 ; R2 := R2[0x5a22d251]
	14	[5635]	GETGLOBAL	R3 K0 ; R3 := 0xae91e43b
	15	[5635]	GETGLOBAL	R4 K6 ; R4 := 0xe130ba9a
	16	[5635]	ADD      	R5 R0 K7 ; R5 := R0 + 10.000000
	17	[5635]	MOVE     	R6 R1 ; R6 := R1
	18	[5635]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	19	[5637]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	20	[5637]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0x67bc869f]
	21	[5637]	LOADK    	R4 K2 ; R4 := "SyndicatePower"
	22	[5637]	LOADK    	R5 := 10.000000
	23	[5637]	LOADK    	R6 := 0.000000
	24	[5637]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	25	[5638]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	26	[5638]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0x67bc869f]
	27	[5638]	LOADK    	R4 K2 ; R4 := "SyndicatePower"
	28	[5638]	LOADK    	R5 := 5.000000
	29	[5638]	LOADK    	R6 := 500.000000
	30	[5638]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	31	[5639]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	32	[5639]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0x67bc869f]
	33	[5639]	LOADK    	R4 K2 ; R4 := "SyndicatePower"
	34	[5639]	LOADK    	R5 := 6.000000
	35	[5639]	LOADK    	R6 := 500.000000
	36	[5639]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	37	[5640]	GETGLOBAL	R2 K9 ; R2 := 0x25312c9b
	38	[5640]	GETGLOBAL	R3 K0 ; R3 := 0xae91e43b
	39	[5640]	LOADK    	R4 K2 ; R4 := "SyndicatePower"
	40	[5640]	LOADK    	R5 := 8.000000
	41	[5640]	NEWTABLE 	R6 3 0 ; R6 := {}
	42	[5640]	LOADK    	R7 := 5.000000
	43	[5640]	LOADK    	R8 := 6.000000
	44	[5640]	LOADK    	R9 := 10.000000
	45	[5640]	SETLIST  	R6 3 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 3
	46	[5640]	NEWTABLE 	R7 3 0 ; R7 := {}
	47	[5640]	LOADK    	R8 := 200.000000
	48	[5640]	LOADK    	R9 := 200.000000
	49	[5640]	LOADK    	R10 := 30.000000
	50	[5640]	SETLIST  	R7 3 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 3
	51	[5640]	LOADK    	R8 K11 ; R8 := 0.350000
	52	[5640]	LOADK    	R9 := 0.750000
	53	[5640]	CALL     	R2 8 1 ; R2(R3,R4,R5,R6,R7,R8,R9)
	54	[5641]	GETUPVAL 	R2 U1 ; R2 := U1
	55	[5641]	SELF     	R2 R2 K12 ; R3 := R2; R2 := R2[0xbd2e96ea]
	56	[5641]	LOADK    	R4 := 3.000000
	57	[5641]	GETUPVAL 	R5 U2 ; R5 := U2
	58	[5641]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	59	[5642]	RETURN   	R0 1 ; return 

function #171 <?:5644,5653> (39 instructions, 156 bytes at 0000021135E11650)
2 params, 11 slots, 0 upvalues, 0 locals, 5 constants, 1 function
	1	[5645]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	2	[5645]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0x67bc869f]
	3	[5645]	MOVE     	R4 R0 ; R4 := R0
	4	[5645]	LOADK    	R5 := 10.000000
	5	[5645]	LOADK    	R6 := 0.000000
	6	[5645]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	7	[5646]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	8	[5646]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0x67bc869f]
	9	[5646]	MOVE     	R4 R0 ; R4 := R0
	10	[5646]	LOADK    	R5 := 5.000000
	11	[5646]	LOADK    	R6 := 200.000000
	12	[5646]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	13	[5647]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	14	[5647]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0x67bc869f]
	15	[5647]	MOVE     	R4 R0 ; R4 := R0
	16	[5647]	LOADK    	R5 := 6.000000
	17	[5647]	LOADK    	R6 := 200.000000
	18	[5647]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	19	[5649]	GETGLOBAL	R2 K2 ; R2 := 0x25312c9b
	20	[5649]	GETGLOBAL	R3 K0 ; R3 := 0xae91e43b
	21	[5649]	MOVE     	R4 R0 ; R4 := R0
	22	[5649]	LOADK    	R5 := 2.000000
	23	[5649]	NEWTABLE 	R6 3 0 ; R6 := {}
	24	[5649]	LOADK    	R7 := 10.000000
	25	[5649]	LOADK    	R8 := 5.000000
	26	[5649]	LOADK    	R9 := 6.000000
	27	[5649]	SETLIST  	R6 3 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 3
	28	[5649]	NEWTABLE 	R7 3 0 ; R7 := {}
	29	[5649]	LOADK    	R8 := 100.000000
	30	[5649]	LOADK    	R9 := 100.000000
	31	[5649]	LOADK    	R10 := 100.000000
	32	[5649]	SETLIST  	R7 3 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 3
	33	[5649]	LOADK    	R8 K4 ; R8 := 0.150000
	34	[5649]	LOADK    	R9 := 0.000000
	35	[5652]	CLOSURE  	R10 0 ; R10 := closure(Function #1)
	36	[5652]	MOVE     	R0 R0 ; R0 := R0
	37	[5652]	MOVE     	R0 R1 ; R0 := R1
	38	[5649]	CALL     	R2 9 1 ; R2(R3,R4,R5,R6,R7,R8,R9,R10)
	39	[5653]	RETURN   	R0 1 ; return 

function #172 <?:5655,5672> (44 instructions, 176 bytes at 0000021132F94430)
0 params, 6 slots, 0 upvalues, 0 locals, 19 constants, 0 functions
	1	[5656]	LOADK    	R0 := 0.000000
	2	[5657]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	3	[5657]	GETGLOBAL	R2 K1 ; R2 := 0xbe190284
	4	[5657]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[5657]	TEST     	R1 1 ; if R1 then PC := 18
	6	[5657]	JMP      	18 ; PC := 18
	7	[5657]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	8	[5657]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xf2deaf69]
	9	[5657]	GETGLOBAL	R3 K3 ; R3 := gLotusGameRulesType
	10	[5657]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	11	[5657]	TEST     	R1 0 ; if not R1 then PC := 18
	12	[5657]	JMP      	18 ; PC := 18
	13	[5657]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	14	[5657]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xd37c53ce]
	15	[5657]	CALL     	R1 2 2 ; R1 := R1(R2)
	16	[5657]	EQ       	1 R1 K6 ; if R1 == 6.000000 then PC := 28
	17	[5657]	JMP      	28 ; PC := 28
	18	[5658]	GETGLOBAL	R1 K7 ; R1 := 0xcbd666e1
	19	[5658]	LOADK    	R2 := 0.000000
	20	[5658]	CALL     	R1 2 1 ; R1(R2)
	21	[5659]	GETGLOBAL	R1 K8 ; R1 := 0x67652851
	22	[5659]	CALL     	R1 1 2 ; R1 := R1()
	23	[5659]	ADD      	R0 R0 R1 ; R0 := R0 + R1
	24	[5660]	LT       	0 K9 R0 ; if 5.000000 >= R0 then PC := 2
	25	[5660]	JMP      	2 ; PC := 2
	26	[5661]	RETURN   	R0 1 ; return 
	27	[5662]	JMP      	2 ; PC := 2
	28	[5665]	GETGLOBAL	R1 K10 ; R1 := _T
	29	[5665]	GETTABLE 	R1 R1 K11 ; R1 := R1["SimarisScanChallengeHack"]
	30	[5665]	TEST     	R1 0 ; if not R1 then PC := 33
	31	[5665]	JMP      	33 ; PC := 33
	32	[5666]	RETURN   	R0 1 ; return 
	33	[5669]	GETGLOBAL	R1 K10 ; R1 := _T
	34	[5669]	SETTABLE 	R1 K11 K12 ; R1["SimarisScanChallengeHack"] := true
	35	[5671]	GETGLOBAL	R1 K13 ; R1 := 0xba7dfcd2
	36	[5671]	SELF     	R1 R1 K14 ; R2 := R1; R1 := R1[0xf056b179]
	37	[5671]	GETGLOBAL	R3 K15 ; R3 := 0x89326c93
	38	[5671]	SELF     	R3 R3 K16 ; R4 := R3; R3 := R3[0xfb64e76c]
	39	[5671]	CALL     	R3 2 2 ; R3 := R3(R4)
	40	[5671]	GETGLOBAL	R4 K17 ; R4 := 0x0469f296
	41	[5671]	LOADK    	R5 K18 ; R5 := "SIMARIS_TARGET_SCANNED"
	42	[5671]	CALL     	R4 2 0 ; R4,... := R4(R5)
	43	[5671]	CALL     	R1 0 1 ; R1(R2,...)
	44	[5672]	RETURN   	R0 1 ; return 

function #173 <?:5674,5714> (119 instructions, 476 bytes at 000002111D3ADCC0)
3 params, 19 slots, 2 upvalues, 0 locals, 29 constants, 0 functions
	1	[5675]	GETGLOBAL	R3 K0 ; R3 := 0x03f57322
	2	[5675]	MOVE     	R4 R0 ; R4 := R0
	3	[5675]	CALL     	R3 2 2 ; R3 := R3(R4)
	4	[5675]	MOVE     	R0 R3 ; R0 := R3
	5	[5677]	LOADK    	R3 K1 ; R3 := ""
	6	[5679]	TEST     	R2 1 ; if R2 then PC := 54
	7	[5679]	JMP      	54 ; PC := 54
	8	[5680]	GETGLOBAL	R4 K2 ; R4 := 0x76ea806b
	9	[5680]	SELF     	R4 R4 K3 ; R5 := R4; R4 := R4[0x3f3ae64c]
	10	[5680]	LOADK    	R6 := 0.000000
	11	[5680]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	12	[5681]	GETGLOBAL	R5 K4 ; R5 := 0x7b998233
	13	[5681]	MOVE     	R6 R4 ; R6 := R4
	14	[5681]	CALL     	R5 2 2 ; R5 := R5(R6)
	15	[5681]	TEST     	R5 1 ; if R5 then PC := 54
	16	[5681]	JMP      	54 ; PC := 54
	17	[5682]	SELF     	R5 R4 K5 ; R6 := R4; R5 := R4[0x80563238]
	18	[5682]	CALL     	R5 2 2 ; R5 := R5(R6)
	19	[5683]	GETGLOBAL	R6 K4 ; R6 := 0x7b998233
	20	[5683]	MOVE     	R7 R5 ; R7 := R5
	21	[5683]	CALL     	R6 2 2 ; R6 := R6(R7)
	22	[5683]	TEST     	R6 1 ; if R6 then PC := 54
	23	[5683]	JMP      	54 ; PC := 54
	24	[5684]	GETGLOBAL	R6 K6 ; R6 := 0x89326c93
	25	[5684]	SELF     	R6 R6 K7 ; R7 := R6; R6 := R6[0x78298275]
	26	[5684]	CALL     	R6 2 2 ; R6 := R6(R7)
	27	[5685]	GETGLOBAL	R7 K4 ; R7 := 0x7b998233
	28	[5685]	MOVE     	R8 R6 ; R8 := R6
	29	[5685]	CALL     	R7 2 2 ; R7 := R7(R8)
	30	[5685]	TEST     	R7 1 ; if R7 then PC := 54
	31	[5685]	JMP      	54 ; PC := 54
	32	[5686]	SELF     	R7 R5 K8 ; R8 := R5; R7 := R5[0xf5b0abc2]
	33	[5686]	LOADK    	R9 := 3.000000
	34	[5686]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	35	[5687]	SELF     	R8 R6 K10 ; R9 := R6; R8 := R6[0xde321e6f]
	36	[5687]	CALL     	R8 2 2 ; R8 := R8(R9)
	37	[5687]	SELF     	R8 R8 K11 ; R9 := R8; R8 := R8[0x74fb9ffe]
	38	[5687]	CALL     	R8 2 2 ; R8 := R8(R9)
	39	[5688]	ADD      	R9 R8 R0 ; R9 := R8 + R0
	40	[5688]	LE       	0 R7 R9 ; if R7 > R9 then PC := 54
	41	[5688]	JMP      	54 ; PC := 54
	42	[5689]	LT       	0 R8 R7 ; if R8 >= R7 then PC := 46
	43	[5689]	JMP      	46 ; PC := 46
	44	[5690]	SUB      	R0 R7 R8 ; R0 := R7 - R8
	45	[5690]	JMP      	47 ; PC := 47
	46	[5692]	LOADK    	R0 := 0.000000
	47	[5694]	LOADK    	R9 K12 ; R9 := " - "
	48	[5694]	GETGLOBAL	R10 K13 ; R10 := 0xae91e43b
	49	[5694]	SELF     	R10 R10 K14 ; R11 := R10; R10 := R10[0x42b04007]
	50	[5694]	LOADK    	R12 K15 ; R12 := "/Lotus/Language/Syndicates/DailyAffiliationReached"
	51	[5694]	OP_LOADBOOL	R13 0 0 ; R13 := false
	52	[5694]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	53	[5694]	CONCAT   	R3 R9 R10 ; R3 := R9 .. R10
	54	[5701]	GETGLOBAL	R9 K4 ; R9 := 0x7b998233
	55	[5701]	GETGLOBAL	R10 K16 ; R10 := 0xbe190284
	56	[5701]	CALL     	R9 2 2 ; R9 := R9(R10)
	57	[5701]	TEST     	R9 1 ; if R9 then PC := 85
	58	[5701]	JMP      	85 ; PC := 85
	59	[5701]	GETGLOBAL	R9 K16 ; R9 := 0xbe190284
	60	[5701]	SELF     	R9 R9 K17 ; R10 := R9; R9 := R9[0xf2deaf69]
	61	[5701]	GETGLOBAL	R11 K18 ; R11 := gLotusGameRulesType
	62	[5701]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	63	[5701]	TEST     	R9 0 ; if not R9 then PC := 85
	64	[5701]	JMP      	85 ; PC := 85
	65	[5701]	GETGLOBAL	R9 K19 ; R9 := _T
	66	[5701]	GETTABLE 	R9 R9 K20 ; R9 := R9["SimarisScanChallengeHack"]
	67	[5701]	TEST     	R9 1 ; if R9 then PC := 85
	68	[5701]	JMP      	85 ; PC := 85
	69	[5701]	GETGLOBAL	R9 K4 ; R9 := 0x7b998233
	70	[5701]	GETGLOBAL	R10 K6 ; R10 := 0x89326c93
	71	[5701]	SELF     	R10 R10 K7 ; R11 := R10; R10 := R10[0x78298275]
	72	[5701]	CALL     	R10 2 0 ; R10,... := R10(R11)
	73	[5701]	CALL     	R9 0 2 ; R9 := R9(R10,...)
	74	[5701]	TEST     	R9 1 ; if R9 then PC := 85
	75	[5701]	JMP      	85 ; PC := 85
	76	[5702]	GETGLOBAL	R9 K6 ; R9 := 0x89326c93
	77	[5702]	SELF     	R9 R9 K7 ; R10 := R9; R9 := R9[0x78298275]
	78	[5702]	CALL     	R9 2 2 ; R9 := R9(R10)
	79	[5702]	SELF     	R9 R9 K21 ; R10 := R9; R9 := R9[0xd5f7912b]
	80	[5702]	GETGLOBAL	R11 K22 ; R11 := 0x0469f296
	81	[5702]	LOADK    	R12 K20 ; R12 := "SimarisScanChallengeHack"
	82	[5702]	CALL     	R11 2 2 ; R11 := R11(R12)
	83	[5702]	OP_LOADBOOL	R12 0 0 ; R12 := false
	84	[5702]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	85	[5705]	GETGLOBAL	R9 K13 ; R9 := 0xae91e43b
	86	[5705]	SELF     	R9 R9 K14 ; R10 := R9; R9 := R9[0x42b04007]
	87	[5705]	LOADK    	R11 K23 ; R11 := "<REPUTATION>"
	88	[5705]	OP_LOADBOOL	R12 1 0 ; R12 := true
	89	[5705]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	90	[5706]	GETGLOBAL	R10 K13 ; R10 := 0xae91e43b
	91	[5706]	SELF     	R10 R10 K24 ; R11 := R10; R10 := R10[0x5f56eeab]
	92	[5706]	LOADK    	R12 K25 ; R12 := "StandingGain.Label"
	93	[5706]	LOADK    	R13 := 29.000000
	94	[5706]	LOADK    	R14 K26 ; R14 := "+"
	95	[5706]	MOVE     	R15 R9 ; R15 := R9
	96	[5706]	GETUPVAL 	R16 U0 ; R16 := U0
	97	[5706]	GETTABLE 	R16 R16 K27 ; R16 := R16[0x1142c7a8]
	98	[5706]	MOVE     	R17 R0 ; R17 := R0
	99	[5706]	LOADK    	R18 := 0.000000
	100	[5706]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	101	[5706]	MOVE     	R17 R3 ; R17 := R3
	102	[5706]	CONCAT   	R14 R14 R17 ; R14 := R14 .. R15 .. R16 .. R17
	103	[5706]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	104	[5708]	GETGLOBAL	R10 K4 ; R10 := 0x7b998233
	105	[5708]	MOVE     	R11 R1 ; R11 := R1
	106	[5708]	CALL     	R10 2 2 ; R10 := R10(R11)
	107	[5708]	TEST     	R10 0 ; if not R10 then PC := 111
	108	[5708]	JMP      	111 ; PC := 111
	109	[5709]	LOADK    	R1 := 1.000000
	110	[5709]	JMP      	115 ; PC := 115
	111	[5711]	GETGLOBAL	R10 K0 ; R10 := 0x03f57322
	112	[5711]	MOVE     	R11 R1 ; R11 := R1
	113	[5711]	CALL     	R10 2 2 ; R10 := R10(R11)
	114	[5711]	MOVE     	R1 R10 ; R1 := R10
	115	[5713]	GETUPVAL 	R10 U1 ; R10 := U1
	116	[5713]	LOADK    	R11 K28 ; R11 := "StandingGain"
	117	[5713]	MOVE     	R12 R1 ; R12 := R1
	118	[5713]	CALL     	R10 3 1 ; R10(R11,R12)
	119	[5714]	RETURN   	R0 1 ; return 

function #174 <?:5716,5732> (61 instructions, 244 bytes at 0000021129090F00)
0 params, 11 slots, 5 upvalues, 0 locals, 13 constants, 0 functions
	1	[5718]	LOADK    	R0 := 1.000000
	2	[5718]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[5718]	LEN      	R1 R1 ; R1 := # R1
	4	[5718]	LOADK    	R2 := 1.000000
	5	[5718]	FORPREP  	R0 24 ; R0 -= R2; PC := 24
	6	[5719]	GETUPVAL 	R4 U0 ; R4 := U0
	7	[5719]	GETTABLE 	R4 R4 R3 ; R4 := R4[R3]
	8	[5719]	GETTABLE 	R4 R4 K0 ; R4 := R4["Tag"]
	9	[5719]	EQ       	1 R4 K1 ; if R4 == nil then PC := 24
	10	[5719]	JMP      	24 ; PC := 24
	11	[5720]	GETUPVAL 	R4 U0 ; R4 := U0
	12	[5720]	GETTABLE 	R4 R4 R3 ; R4 := R4[R3]
	13	[5720]	GETGLOBAL	R5 K3 ; R5 := 0xae91e43b
	14	[5720]	SELF     	R5 R5 K4 ; R6 := R5; R5 := R5[0x42b04007]
	15	[5720]	LOADK    	R7 K5 ; R7 := "<"
	16	[5720]	GETUPVAL 	R8 U0 ; R8 := U0
	17	[5720]	GETTABLE 	R8 R8 R3 ; R8 := R8[R3]
	18	[5720]	GETTABLE 	R8 R8 K0 ; R8 := R8["Tag"]
	19	[5720]	LOADK    	R9 K6 ; R9 := ">"
	20	[5720]	CONCAT   	R7 R7 R9 ; R7 := R7 .. R8 .. R9
	21	[5720]	OP_LOADBOOL	R8 1 0 ; R8 := true
	22	[5720]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	23	[5720]	SETTABLE 	R4 K2 R5 ; R4["Icon"] := R5
	24	[5718]	FORLOOP  	R0 6 ; R0 += R2; if R0 <= R1 then begin PC := 6; R3 := R0 end
	25	[5724]	GETGLOBAL	R4 K3 ; R4 := 0xae91e43b
	26	[5724]	TEST     	R4 0 ; if not R4 then PC := 61
	27	[5724]	JMP      	61 ; PC := 61
	28	[5724]	GETUPVAL 	R4 U1 ; R4 := U1
	29	[5724]	GETTABLE 	R4 R4 K7 ; R4 := R4["mSpaceMode"]
	30	[5724]	TEST     	R4 0 ; if not R4 then PC := 61
	31	[5724]	JMP      	61 ; PC := 61
	32	[5725]	GETUPVAL 	R4 U2 ; R4 := U2
	33	[5725]	TEST     	R4 0 ; if not R4 then PC := 44
	34	[5725]	JMP      	44 ; PC := 44
	35	[5726]	GETGLOBAL	R4 K3 ; R4 := 0xae91e43b
	36	[5726]	SELF     	R4 R4 K8 ; R5 := R4; R4 := R4[0x5f56eeab]
	37	[5726]	LOADK    	R6 K9 ; R6 := "HealthAndShield.SuitName"
	38	[5726]	LOADK    	R7 := 29.000000
	39	[5726]	GETUPVAL 	R8 U3 ; R8 := U3
	40	[5726]	SELF     	R8 R8 K10 ; R9 := R8; R8 := R8[0x067cd84c]
	41	[5726]	GETUPVAL 	R10 U2 ; R10 := U2
	42	[5726]	CALL     	R8 3 0 ; R8,... := R8(R9,R10)
	43	[5726]	CALL     	R4 0 1 ; R4(R5,...)
	44	[5728]	GETUPVAL 	R4 U4 ; R4 := U4
	45	[5728]	TEST     	R4 0 ; if not R4 then PC := 61
	46	[5728]	JMP      	61 ; PC := 61
	47	[5728]	GETUPVAL 	R4 U4 ; R4 := U4
	48	[5728]	GETTABLE 	R4 R4 K11 ; R4 := R4["ptr"]
	49	[5728]	TEST     	R4 0 ; if not R4 then PC := 61
	50	[5728]	JMP      	61 ; PC := 61
	51	[5729]	GETGLOBAL	R4 K3 ; R4 := 0xae91e43b
	52	[5729]	SELF     	R4 R4 K8 ; R5 := R4; R4 := R4[0x5f56eeab]
	53	[5729]	LOADK    	R6 K12 ; R6 := "WeaponFrame.Name"
	54	[5729]	LOADK    	R7 := 29.000000
	55	[5729]	GETUPVAL 	R8 U3 ; R8 := U3
	56	[5729]	SELF     	R8 R8 K10 ; R9 := R8; R8 := R8[0x067cd84c]
	57	[5729]	GETUPVAL 	R10 U4 ; R10 := U4
	58	[5729]	GETTABLE 	R10 R10 K11 ; R10 := R10["ptr"]
	59	[5729]	CALL     	R8 3 0 ; R8,... := R8(R9,R10)
	60	[5729]	CALL     	R4 0 1 ; R4(R5,...)
	61	[5732]	RETURN   	R0 1 ; return 

function #175 <?:5734,5738> (27 instructions, 108 bytes at 0000021132F84930)
1 param, 8 slots, 3 upvalues, 0 locals, 7 constants, 0 functions
	1	[5735]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[5735]	GETUPVAL 	R2 U1 ; R2 := U1
	3	[5735]	LOADK    	R3 K1 ; R3 := "TreasureHuntTimer"
	4	[5735]	GETUPVAL 	R4 U2 ; R4 := U2
	5	[5735]	GETTABLE 	R4 R4 K2 ; R4 := R4["HT_TIMER"]
	6	[5735]	LOADK    	R5 := 0.250000
	7	[5735]	OP_LOADBOOL	R6 0 0 ; R6 := false
	8	[5735]	OP_LOADBOOL	R7 0 0 ; R7 := false
	9	[5735]	CALL     	R2 6 2 ; R2 := R2(R3,R4,R5,R6,R7)
	10	[5735]	SETTABLE 	R1 K0 R2 ; R1["TreasureHuntTracker"] := R2
	11	[5736]	GETUPVAL 	R1 U0 ; R1 := U0
	12	[5736]	GETTABLE 	R1 R1 K0 ; R1 := R1["TreasureHuntTracker"]
	13	[5736]	GETTABLE 	R1 R1 K3 ; R1 := R1[0xe0cba3ca]
	14	[5736]	LOADK    	R2 K4 ; R2 := "/Lotus/Language/Game/TreasureHuntTimeLimit"
	15	[5736]	LOADK    	R3 := 5.000000
	16	[5736]	CALL     	R1 3 1 ; R1(R2,R3)
	17	[5737]	GETUPVAL 	R1 U0 ; R1 := U0
	18	[5737]	GETTABLE 	R1 R1 K0 ; R1 := R1["TreasureHuntTracker"]
	19	[5737]	GETTABLE 	R1 R1 K5 ; R1 := R1[0xa9136b2f]
	20	[5737]	GETGLOBAL	R2 K6 ; R2 := 0x03f57322
	21	[5737]	MOVE     	R3 R0 ; R3 := R0
	22	[5737]	CALL     	R2 2 2 ; R2 := R2(R3)
	23	[5737]	OP_LOADBOOL	R3 0 0 ; R3 := false
	24	[5737]	OP_LOADBOOL	R4 1 0 ; R4 := true
	25	[5737]	OP_LOADBOOL	R5 0 0 ; R5 := false
	26	[5737]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	27	[5738]	RETURN   	R0 1 ; return 

function #176 <?:5740,5743> (6 instructions, 24 bytes at 000002111A8B2C80)
0 params, 2 slots, 2 upvalues, 0 locals, 3 constants, 0 functions
	1	[5741]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5741]	LOADK    	R1 K0 ; R1 := "TreasureHuntTimer"
	3	[5741]	CALL     	R0 2 1 ; R0(R1)
	4	[5742]	GETUPVAL 	R0 U1 ; R0 := U1
	5	[5742]	SETTABLE 	R0 K1 K2 ; R0["TreasureHuntTracker"] := nil
	6	[5743]	RETURN   	R0 1 ; return 

function #177 <?:5745,5778> (128 instructions, 512 bytes at 00000211290859D0)
0 params, 22 slots, 3 upvalues, 0 locals, 31 constants, 0 functions
	1	[5747]	GETGLOBAL	R0 K0 ; R0 := 0x89326c93
	2	[5747]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x78298275]
	3	[5747]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[5748]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	5	[5748]	MOVE     	R2 R0 ; R2 := R0
	6	[5748]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[5748]	TEST     	R1 1 ; if R1 then PC := 14
	8	[5748]	JMP      	14 ; PC := 14
	9	[5748]	SELF     	R1 R0 K3 ; R2 := R0; R1 := R0[0xf2deaf69]
	10	[5748]	GETGLOBAL	R3 K4 ; R3 := gLotusVehicleAvatarType
	11	[5748]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	12	[5748]	TEST     	R1 0 ; if not R1 then PC := 15
	13	[5748]	JMP      	15 ; PC := 15
	14	[5749]	RETURN   	R0 1 ; return 
	15	[5751]	SELF     	R1 R0 K5 ; R2 := R0; R1 := R0[0xde321e6f]
	16	[5751]	CALL     	R1 2 2 ; R1 := R1(R2)
	17	[5753]	SELF     	R2 R1 K6 ; R3 := R1; R2 := R1[0xb6731115]
	18	[5753]	LOADK    	R4 := 0.000000
	19	[5753]	LOADK    	R5 := 0.000000
	20	[5753]	OP_LOADBOOL	R6 0 0 ; R6 := false
	21	[5753]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	22	[5754]	SELF     	R3 R1 K6 ; R4 := R1; R3 := R1[0xb6731115]
	23	[5754]	LOADK    	R5 := 0.000000
	24	[5754]	LOADK    	R6 := 1.000000
	25	[5754]	OP_LOADBOOL	R7 0 0 ; R7 := false
	26	[5754]	CALL     	R3 5 2 ; R3 := R3(R4,R5,R6,R7)
	27	[5755]	SELF     	R4 R1 K6 ; R5 := R1; R4 := R1[0xb6731115]
	28	[5755]	LOADK    	R6 := 0.000000
	29	[5755]	LOADK    	R7 := 2.000000
	30	[5755]	OP_LOADBOOL	R8 0 0 ; R8 := false
	31	[5755]	CALL     	R4 5 2 ; R4 := R4(R5,R6,R7,R8)
	32	[5756]	SELF     	R5 R1 K6 ; R6 := R1; R5 := R1[0xb6731115]
	33	[5756]	LOADK    	R7 := 0.000000
	34	[5756]	LOADK    	R8 := 3.000000
	35	[5756]	OP_LOADBOOL	R9 0 0 ; R9 := false
	36	[5756]	CALL     	R5 5 2 ; R5 := R5(R6,R7,R8,R9)
	37	[5757]	SELF     	R6 R1 K8 ; R7 := R1; R6 := R1[0xad6e6461]
	38	[5757]	OP_LOADBOOL	R8 0 0 ; R8 := false
	39	[5757]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	40	[5758]	SELF     	R7 R1 K9 ; R8 := R1; R7 := R1[0x80a96711]
	41	[5758]	OP_LOADBOOL	R9 0 0 ; R9 := false
	42	[5758]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	43	[5760]	SELF     	R8 R1 K6 ; R9 := R1; R8 := R1[0xb6731115]
	44	[5760]	LOADK    	R10 := 2.000000
	45	[5760]	LOADK    	R11 := 0.000000
	46	[5760]	OP_LOADBOOL	R12 0 0 ; R12 := false
	47	[5760]	CALL     	R8 5 2 ; R8 := R8(R9,R10,R11,R12)
	48	[5761]	SELF     	R9 R1 K6 ; R10 := R1; R9 := R1[0xb6731115]
	49	[5761]	LOADK    	R11 := 2.000000
	50	[5761]	LOADK    	R12 := 2.000000
	51	[5761]	OP_LOADBOOL	R13 0 0 ; R13 := false
	52	[5761]	CALL     	R9 5 2 ; R9 := R9(R10,R11,R12,R13)
	53	[5762]	SELF     	R10 R1 K6 ; R11 := R1; R10 := R1[0xb6731115]
	54	[5762]	LOADK    	R12 := 2.000000
	55	[5762]	LOADK    	R13 := 3.000000
	56	[5762]	OP_LOADBOOL	R14 0 0 ; R14 := false
	57	[5762]	CALL     	R10 5 2 ; R10 := R10(R11,R12,R13,R14)
	58	[5764]	ADD      	R11 R2 R3 ; R11 := R2 + R3
	59	[5764]	ADD      	R11 R11 R4 ; R11 := R11 + R4
	60	[5764]	ADD      	R11 R11 R5 ; R11 := R11 + R5
	61	[5764]	ADD      	R11 R11 R6 ; R11 := R11 + R6
	62	[5764]	ADD      	R11 R11 R7 ; R11 := R11 + R7
	63	[5764]	ADD      	R11 R11 R8 ; R11 := R11 + R8
	64	[5764]	ADD      	R11 R11 R9 ; R11 := R11 + R9
	65	[5764]	ADD      	R11 R11 R10 ; R11 := R11 + R10
	66	[5765]	SELF     	R12 R0 K5 ; R13 := R0; R12 := R0[0xde321e6f]
	67	[5765]	CALL     	R12 2 2 ; R12 := R12(R13)
	68	[5765]	SELF     	R12 R12 K10 ; R13 := R12; R12 := R12[0xc2e869a4]
	69	[5765]	CALL     	R12 2 2 ; R12 := R12(R13)
	70	[5766]	GETGLOBAL	R13 K11 ; R13 := 0xae91e43b
	71	[5766]	SELF     	R13 R13 K12 ; R14 := R13; R13 := R13[0x42b04007]
	72	[5766]	LOADK    	R15 K13 ; R15 := "/Lotus/Language/SystemMessages/AffinityCostInfo"
	73	[5766]	OP_LOADBOOL	R16 0 0 ; R16 := false
	74	[5766]	NEWTABLE 	R17 0 4 ; R17 := {}
	75	[5767]	LOADK    	R18 K15 ; R18 := "<font color=\""
	76	[5767]	GETUPVAL 	R19 U0 ; R19 := U0
	77	[5767]	GETTABLE 	R19 R19 K16 ; R19 := R19["FloatingContentHighlightHex"]
	78	[5767]	LOADK    	R20 K17 ; R20 := "\">"
	79	[5767]	CONCAT   	R18 R18 R20 ; R18 := R18 .. R19 .. R20
	80	[5767]	SETTABLE 	R17 K14 R18 ; R17["OPEN_COLOR"] := R18
	81	[5768]	SETTABLE 	R17 K18 K19 ; R17["CLOSE_COLOR"] := "</font>"
	82	[5769]	GETUPVAL 	R18 U1 ; R18 := U1
	83	[5769]	GETTABLE 	R18 R18 K21 ; R18 := R18[0x1142c7a8]
	84	[5769]	MOVE     	R19 R12 ; R19 := R12
	85	[5769]	LOADK    	R20 := 0.000000
	86	[5769]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	87	[5769]	SETTABLE 	R17 K20 R18 ; R17["COST"] := R18
	88	[5770]	GETUPVAL 	R18 U1 ; R18 := U1
	89	[5770]	GETTABLE 	R18 R18 K21 ; R18 := R18[0x1142c7a8]
	90	[5770]	MOVE     	R19 R11 ; R19 := R11
	91	[5770]	LOADK    	R20 := 0.000000
	92	[5770]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	93	[5770]	SETTABLE 	R17 K22 R18 ; R17["TOTAL"] := R18
	94	[5766]	CALL     	R13 5 2 ; R13 := R13(R14,R15,R16,R17)
	95	[5771]	LOADK    	R14 K23 ; R14 := "<p><font color=\""
	96	[5771]	GETUPVAL 	R15 U0 ; R15 := U0
	97	[5771]	GETTABLE 	R15 R15 K24 ; R15 := R15["FloatingContentHex"]
	98	[5771]	LOADK    	R16 K17 ; R16 := "\">"
	99	[5771]	MOVE     	R17 R13 ; R17 := R13
	100	[5771]	LOADK    	R18 K19 ; R18 := "</font>"
	101	[5771]	CONCAT   	R14 R14 R18 ; R14 := R14 .. R15 .. R16 .. R17 .. R18
	102	[5772]	GETUPVAL 	R15 U2 ; R15 := U2
	103	[5772]	LEN      	R15 R15 ; R15 := # R15
	104	[5772]	LT       	0 K25 R15 ; if 1.000000 >= R15 then PC := 119
	105	[5772]	JMP      	119 ; PC := 119
	106	[5773]	GETGLOBAL	R15 K11 ; R15 := 0xae91e43b
	107	[5773]	SELF     	R15 R15 K12 ; R16 := R15; R15 := R15[0x42b04007]
	108	[5773]	LOADK    	R17 K26 ; R17 := "/Lotus/Language/SystemMessages/NoReviveHint"
	109	[5773]	OP_LOADBOOL	R18 0 0 ; R18 := false
	110	[5773]	CALL     	R15 4 2 ; R15 := R15(R16,R17,R18)
	111	[5774]	MOVE     	R16 R14 ; R16 := R14
	112	[5774]	LOADK    	R17 K15 ; R17 := "<font color=\""
	113	[5774]	GETUPVAL 	R18 U0 ; R18 := U0
	114	[5774]	GETTABLE 	R18 R18 K16 ; R18 := R18["FloatingContentHighlightHex"]
	115	[5774]	LOADK    	R19 K27 ; R19 := "\"><br>"
	116	[5774]	MOVE     	R20 R15 ; R20 := R15
	117	[5774]	LOADK    	R21 K19 ; R21 := "</font>"
	118	[5774]	CONCAT   	R14 R16 R21 ; R14 := R16 .. R17 .. R18 .. R19 .. R20 .. R21
	119	[5776]	MOVE     	R16 R14 ; R16 := R14
	120	[5776]	LOADK    	R17 K28 ; R17 := "</p>"
	121	[5776]	CONCAT   	R14 R16 R17 ; R14 := R16 .. R17
	122	[5777]	GETGLOBAL	R16 K11 ; R16 := 0xae91e43b
	123	[5777]	SELF     	R16 R16 K29 ; R17 := R16; R16 := R16[0x5f56eeab]
	124	[5777]	LOADK    	R18 K30 ; R18 := "RevivePanel.Status"
	125	[5777]	LOADK    	R19 := 29.000000
	126	[5777]	MOVE     	R20 R14 ; R20 := R14
	127	[5777]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	128	[5778]	RETURN   	R0 1 ; return 

function #178 <?:5780,5787> (21 instructions, 84 bytes at 0000021129087020)
0 params, 6 slots, 2 upvalues, 0 locals, 6 constants, 0 functions
	1	[5781]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[5781]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[5781]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[5781]	TEST     	R0 1 ; if R0 then PC := 21
	5	[5781]	JMP      	21 ; PC := 21
	6	[5782]	GETUPVAL 	R0 U0 ; R0 := U0
	7	[5782]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x603d617e]
	8	[5782]	CALL     	R0 2 2 ; R0 := R0(R1)
	9	[5783]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	10	[5783]	MOVE     	R2 R0 ; R2 := R0
	11	[5783]	CALL     	R1 2 2 ; R1 := R1(R2)
	12	[5783]	TEST     	R1 1 ; if R1 then PC := 21
	13	[5783]	JMP      	21 ; PC := 21
	14	[5784]	SELF     	R1 R0 K2 ; R2 := R0; R1 := R0[0xe4162eed]
	15	[5784]	LOADK    	R3 K3 ; R3 := "HandleHudScale"
	16	[5784]	GETGLOBAL	R4 K4 ; R4 := 0x64fb1586
	17	[5784]	GETUPVAL 	R5 U1 ; R5 := U1
	18	[5784]	GETTABLE 	R5 R5 K5 ; R5 := R5["HudScale"]
	19	[5784]	CALL     	R4 2 0 ; R4,... := R4(R5)
	20	[5784]	CALL     	R1 0 1 ; R1(R2,...)
	21	[5787]	RETURN   	R0 1 ; return 

function #179 <?:5789,5803> (64 instructions, 256 bytes at 00000211290890E0)
2 params, 8 slots, 0 upvalues, 0 locals, 17 constants, 0 functions
	1	[5790]	EQ       	0 R1 K0 ; if R1 ~= "GoToLoop" then PC := 11
	2	[5790]	JMP      	11 ; PC := 11
	3	[5791]	GETGLOBAL	R2 K1 ; R2 := 0x38f10e85
	4	[5791]	GETGLOBAL	R3 K2 ; R3 := 0xae91e43b
	5	[5791]	MOVE     	R4 R0 ; R4 := R0
	6	[5791]	LOADK    	R5 K3 ; R5 := ".gotoAndPlay"
	7	[5791]	CONCAT   	R4 R4 R5 ; R4 := R4 .. R5
	8	[5791]	LOADK    	R5 K4 ; R5 := "Loop"
	9	[5791]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	10	[5791]	JMP      	64 ; PC := 64
	11	[5792]	EQ       	0 R1 K5 ; if R1 ~= "GoToHip" then PC := 21
	12	[5792]	JMP      	21 ; PC := 21
	13	[5793]	GETGLOBAL	R2 K1 ; R2 := 0x38f10e85
	14	[5793]	GETGLOBAL	R3 K2 ; R3 := 0xae91e43b
	15	[5793]	MOVE     	R4 R0 ; R4 := R0
	16	[5793]	LOADK    	R5 K6 ; R5 := ".gotoAndStop"
	17	[5793]	CONCAT   	R4 R4 R5 ; R4 := R4 .. R5
	18	[5793]	LOADK    	R5 K7 ; R5 := "Hip"
	19	[5793]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	20	[5793]	JMP      	64 ; PC := 64
	21	[5794]	EQ       	0 R1 K8 ; if R1 ~= "ClearMsg" then PC := 31
	22	[5794]	JMP      	31 ; PC := 31
	23	[5795]	GETGLOBAL	R2 K2 ; R2 := 0xae91e43b
	24	[5795]	SELF     	R2 R2 K9 ; R3 := R2; R2 := R2[0xe261aa96]
	25	[5795]	MOVE     	R4 R0 ; R4 := R0
	26	[5795]	LOADK    	R5 K10 ; R5 := "MsgContainer.Msg"
	27	[5795]	LOADK    	R6 := 29.000000
	28	[5795]	LOADK    	R7 K11 ; R7 := ""
	29	[5795]	CALL     	R2 6 1 ; R2(R3,R4,R5,R6,R7)
	30	[5795]	JMP      	64 ; PC := 64
	31	[5796]	EQ       	0 R1 K12 ; if R1 ~= "TalkLoop" then PC := 41
	32	[5796]	JMP      	41 ; PC := 41
	33	[5797]	GETGLOBAL	R2 K1 ; R2 := 0x38f10e85
	34	[5797]	GETGLOBAL	R3 K2 ; R3 := 0xae91e43b
	35	[5797]	MOVE     	R4 R0 ; R4 := R0
	36	[5797]	LOADK    	R5 K3 ; R5 := ".gotoAndPlay"
	37	[5797]	CONCAT   	R4 R4 R5 ; R4 := R4 .. R5
	38	[5797]	LOADK    	R5 := 10.000000
	39	[5797]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	40	[5797]	JMP      	64 ; PC := 64
	41	[5798]	EQ       	0 R1 K13 ; if R1 ~= "EndAimToHip" then PC := 64
	42	[5798]	JMP      	64 ; PC := 64
	43	[5799]	GETGLOBAL	R2 K1 ; R2 := 0x38f10e85
	44	[5799]	GETGLOBAL	R3 K2 ; R3 := 0xae91e43b
	45	[5799]	MOVE     	R4 R0 ; R4 := R0
	46	[5799]	LOADK    	R5 K6 ; R5 := ".gotoAndStop"
	47	[5799]	CONCAT   	R4 R4 R5 ; R4 := R4 .. R5
	48	[5799]	LOADK    	R5 K7 ; R5 := "Hip"
	49	[5799]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	50	[5800]	GETGLOBAL	R2 K2 ; R2 := 0xae91e43b
	51	[5800]	SELF     	R2 R2 K14 ; R3 := R2; R2 := R2[0xc0a3774b]
	52	[5800]	MOVE     	R4 R0 ; R4 := R0
	53	[5800]	LOADK    	R5 K15 ; R5 := "HipMelee"
	54	[5800]	LOADK    	R6 := 11.000000
	55	[5800]	OP_LOADBOOL	R7 0 0 ; R7 := false
	56	[5800]	CALL     	R2 6 1 ; R2(R3,R4,R5,R6,R7)
	57	[5801]	GETGLOBAL	R2 K2 ; R2 := 0xae91e43b
	58	[5801]	SELF     	R2 R2 K14 ; R3 := R2; R2 := R2[0xc0a3774b]
	59	[5801]	MOVE     	R4 R0 ; R4 := R0
	60	[5801]	LOADK    	R5 K16 ; R5 := "MeleeOnly"
	61	[5801]	LOADK    	R6 := 11.000000
	62	[5801]	OP_LOADBOOL	R7 0 0 ; R7 := false
	63	[5801]	CALL     	R2 6 1 ; R2(R3,R4,R5,R6,R7)
	64	[5803]	RETURN   	R0 1 ; return 

function #180 <?:5805,5813> (43 instructions, 172 bytes at 000002112907DB70)
2 params, 12 slots, 3 upvalues, 0 locals, 13 constants, 0 functions
	1	[5806]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[5806]	GETGLOBAL	R3 K1 ; R3 := 0xb7882bac
	3	[5806]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[5806]	TEST     	R2 1 ; if R2 then PC := 43
	5	[5806]	JMP      	43 ; PC := 43
	6	[5807]	ADD      	R2 R0 R1 ; R2 := R0 + R1
	7	[5807]	DIV      	R2 R2 K2 ; R2 := R2 / 2.000000
	8	[5808]	GETUPVAL 	R3 U0 ; R3 := U0
	9	[5808]	GETTABLE 	R3 R3 K3 ; R3 := R3[0xb5be5d4a]
	10	[5808]	GETGLOBAL	R4 K4 ; R4 := 0xae91e43b
	11	[5808]	LOADK    	R5 K5 ; R5 := "reloadTimer"
	12	[5808]	OP_LOADBOOL	R6 1 0 ; R6 := true
	13	[5808]	CALL     	R3 4 3 ; R3,R4 := R3(R4,R5,R6)
	14	[5809]	GETGLOBAL	R5 K6 ; R5 := 0x5bced4c4
	15	[5809]	GETTABLE 	R5 R5 K7 ; R5 := R5[0x3eda26fc]
	16	[5809]	MUL      	R6 R2 K2 ; R6 := R2 * 2.000000
	17	[5809]	MUL      	R6 R6 K8 ; R6 := R6 * 3.141593
	18	[5809]	CALL     	R5 2 2 ; R5 := R5(R6)
	19	[5809]	GETGLOBAL	R6 K9 ; R6 := 0x1c8bfe5a
	20	[5809]	MUL      	R5 R5 R6 ; R5 := R5 * R6
	21	[5809]	GETUPVAL 	R6 U1 ; R6 := U1
	22	[5809]	GETTABLE 	R6 R6 K10 ; R6 := R6["HudScale"]
	23	[5809]	MUL      	R5 R5 R6 ; R5 := R5 * R6
	24	[5809]	ADD      	R5 R3 R5 ; R5 := R3 + R5
	25	[5810]	GETGLOBAL	R6 K6 ; R6 := 0x5bced4c4
	26	[5810]	GETTABLE 	R6 R6 K11 ; R6 := R6[0x00fa6bf1]
	27	[5810]	MUL      	R7 R2 K2 ; R7 := R2 * 2.000000
	28	[5810]	MUL      	R7 R7 K8 ; R7 := R7 * 3.141593
	29	[5810]	CALL     	R6 2 2 ; R6 := R6(R7)
	30	[5810]	GETGLOBAL	R7 K9 ; R7 := 0x1c8bfe5a
	31	[5810]	MUL      	R6 R6 R7 ; R6 := R6 * R7
	32	[5810]	GETUPVAL 	R7 U1 ; R7 := U1
	33	[5810]	GETTABLE 	R7 R7 K10 ; R7 := R7["HudScale"]
	34	[5810]	MUL      	R6 R6 R7 ; R6 := R6 * R7
	35	[5810]	SUB      	R6 R4 R6 ; R6 := R4 - R6
	36	[5811]	GETUPVAL 	R7 U2 ; R7 := U2
	37	[5811]	GETTABLE 	R7 R7 K12 ; R7 := R7[0x5a22d251]
	38	[5811]	GETGLOBAL	R8 K4 ; R8 := 0xae91e43b
	39	[5811]	GETGLOBAL	R9 K1 ; R9 := 0xb7882bac
	40	[5811]	MOVE     	R10 R5 ; R10 := R5
	41	[5811]	MOVE     	R11 R6 ; R11 := R6
	42	[5811]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	43	[5813]	RETURN   	R0 1 ; return 

function #181 <?:5815,5820> (12 instructions, 48 bytes at 0000021119AA5FA0)
1 param, 5 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[5816]	EQ       	1 R0 K0 ; if R0 == "true" then PC := 4
	2	[5816]	JMP      	4 ; PC := 4
	3	[5816]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 4
	4	[5816]	OP_LOADBOOL	R0 1 0 ; R0 := true
	5	[5818]	GETUPVAL 	R1 U0 ; R1 := U0
	6	[5818]	CALL     	R1 1 1 ; R1()
	7	[5819]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	8	[5819]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0x20b98db3]
	9	[5819]	LOADK    	R3 K3 ; R3 := "RevivePanel.Callout.text"
	10	[5819]	LOADK    	R4 K4 ; R4 := "/Lotus/Language/SystemMessages/RevivePrompt"
	11	[5819]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	12	[5820]	RETURN   	R0 1 ; return 

function #182 <?:5822,5827> (6 instructions, 24 bytes at 0000021125669880)
2 params, 4 slots, 1 upvalue, 0 locals, 0 constants, 1 function
	1	[5823]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[5826]	CLOSURE  	R3 0 ; R3 := closure(Function #1)
	3	[5826]	MOVE     	R0 R0 ; R0 := R0
	4	[5826]	MOVE     	R0 R1 ; R0 := R1
	5	[5823]	CALL     	R2 2 1 ; R2(R3)
	6	[5827]	RETURN   	R0 1 ; return 

main <?:0,0> (1122 instructions, 4488 bytes at 000002111EEE6070)
0+ params, 180 slots, 0 upvalues, 0 locals, 264 constants, 182 functions
	1	[89]	NEWTABLE 	R0 0 5 ; R0 := {}
	2	[90]	SETTABLE 	R0 K0 K1 ; R0["INVALID32"] := 4294967296.000000
	3	[91]	SETTABLE 	R0 K2 K3 ; R0["PVP_XP_PER_LEVEL"] := 150.000000
	4	[92]	SETTABLE 	R0 K4 K5 ; R0["MAX_LOG_FADE_TIME"] := 0.350000
	5	[93]	SETTABLE 	R0 K6 K7 ; R0["LEVEL_ABBREV"] := ""
	6	[94]	SETTABLE 	R0 K8 K9 ; R0["HUD_BUFF_ICON_SIZE"] := 35.000000
	7	[97]	NEWTABLE 	R1 0 4 ; R1 := {}
	8	[97]	NEWTABLE 	R2 0 3 ; R2 := {}
	9	[97]	SETTABLE 	R2 K11 K12 ; R2["X"] := -75.000000
	10	[97]	SETTABLE 	R2 K13 K14 ; R2["Y"] := 13.000000
	11	[97]	SETTABLE 	R2 K15 K16 ; R2["Ability"] := nil
	12	[97]	SETTABLE 	R1 K10 R2 ; R1["A"] := R2
	13	[97]	NEWTABLE 	R2 0 3 ; R2 := {}
	14	[97]	SETTABLE 	R2 K11 K17 ; R2["X"] := -126.000000
	15	[97]	SETTABLE 	R2 K13 K18 ; R2["Y"] := -37.000000
	16	[97]	SETTABLE 	R2 K15 K16 ; R2["Ability"] := nil
	17	[97]	SETTABLE 	R1 K11 R2 ; R1["X"] := R2
	18	[97]	NEWTABLE 	R2 0 3 ; R2 := {}
	19	[97]	SETTABLE 	R2 K11 K20 ; R2["X"] := -23.000000
	20	[97]	SETTABLE 	R2 K13 K18 ; R2["Y"] := -37.000000
	21	[97]	SETTABLE 	R2 K15 K16 ; R2["Ability"] := nil
	22	[97]	SETTABLE 	R1 K19 R2 ; R1["B"] := R2
	23	[97]	NEWTABLE 	R2 0 3 ; R2 := {}
	24	[97]	SETTABLE 	R2 K11 K12 ; R2["X"] := -75.000000
	25	[97]	SETTABLE 	R2 K13 K21 ; R2["Y"] := -91.000000
	26	[97]	SETTABLE 	R2 K15 K16 ; R2["Ability"] := nil
	27	[97]	SETTABLE 	R1 K13 R2 ; R1["Y"] := R2
	28	[98]	NEWTABLE 	R2 4 0 ; R2 := {}
	29	[98]	NEWTABLE 	R3 0 3 ; R3 := {}
	30	[98]	SETTABLE 	R3 K11 K22 ; R3["X"] := -131.000000
	31	[98]	SETTABLE 	R3 K13 K23 ; R3["Y"] := 18.000000
	32	[98]	SETTABLE 	R3 K15 K24 ; R3["Ability"] := "ACTIVATE_ABILITY_MENU_0"
	33	[98]	NEWTABLE 	R4 0 3 ; R4 := {}
	34	[98]	SETTABLE 	R4 K11 K25 ; R4["X"] := -93.750000
	35	[98]	SETTABLE 	R4 K13 K23 ; R4["Y"] := 18.000000
	36	[98]	SETTABLE 	R4 K15 K26 ; R4["Ability"] := "ACTIVATE_ABILITY_MENU_1"
	37	[98]	NEWTABLE 	R5 0 3 ; R5 := {}
	38	[98]	SETTABLE 	R5 K11 K27 ; R5["X"] := -56.000000
	39	[98]	SETTABLE 	R5 K13 K23 ; R5["Y"] := 18.000000
	40	[98]	SETTABLE 	R5 K15 K28 ; R5["Ability"] := "ACTIVATE_ABILITY_MENU_2"
	41	[98]	NEWTABLE 	R6 0 3 ; R6 := {}
	42	[98]	SETTABLE 	R6 K11 K29 ; R6["X"] := -19.000000
	43	[98]	SETTABLE 	R6 K13 K23 ; R6["Y"] := 18.000000
	44	[98]	SETTABLE 	R6 K15 K30 ; R6["Ability"] := "ACTIVATE_ABILITY_MENU_3"
	45	[98]	SETLIST  	R2 4 1 ; R2[(1-1)*FPF+i] := R(2+i), 1 <= i <= 4
	46	[99]	NEWTABLE 	R3 0 0 ; R3 := {}
	47	[102]	NEWTABLE 	R4 0 20 ; R4 := {}
	48	[103]	SETTABLE 	R4 K31 K32 ; R4["mScreenDuck"] := 0.000000
	49	[104]	SETTABLE 	R4 K33 K34 ; R4["mTransOnRightSide"] := false
	50	[105]	SETTABLE 	R4 K35 K34 ; R4["mPlayingWithController"] := false
	51	[106]	SETTABLE 	R4 K36 K34 ; R4["mDispatchingQueuedFuncs"] := false
	52	[107]	SETTABLE 	R4 K37 K34 ; R4["mWasSpectating"] := false
	53	[108]	SETTABLE 	R4 K38 K34 ; R4["mSpaceMode"] := false
	54	[109]	SETTABLE 	R4 K39 K32 ; R4["mImpactMessageFrame"] := 0.000000
	55	[110]	SETTABLE 	R4 K40 K41 ; R4["mImpactMessageScale"] := 100.000000
	56	[111]	SETTABLE 	R4 K42 K41 ; R4["mImpactMessageTransitionScale"] := 100.000000
	57	[112]	SETTABLE 	R4 K43 K34 ; R4["IsSpectating"] := false
	58	[113]	SETTABLE 	R4 K44 K34 ; R4["IsOperator"] := false
	59	[114]	SETTABLE 	R4 K45 K34 ; R4["Initialized"] := false
	60	[115]	SETTABLE 	R4 K46 K34 ; R4["UIMode"] := false
	61	[116]	SETTABLE 	R4 K47 K34 ; R4["IsInConclave"] := false
	62	[117]	SETTABLE 	R4 K48 K16 ; R4["mProfileMovie"] := nil
	63	[118]	SETTABLE 	R4 K49 K16 ; R4["mHudMarkersMovie"] := nil
	64	[119]	SETTABLE 	R4 K50 K51 ; R4["mDistanceFieldMiniMap"] := true
	65	[120]	SETTABLE 	R4 K52 K34 ; R4["PlayerListHasChanged"] := false
	66	[121]	SETTABLE 	R4 K53 K54 ; R4["MissionType"] := -1.000000
	67	[122]	SETTABLE 	R4 K55 K34 ; R4["StalkerMode"] := false
	68	[123]	SETTABLE 	R4 K56 K34 ; R4["IsAlternateHud"] := false
	69	[124]	SETTABLE 	R4 K57 K51 ; R4["mEnergyVisible"] := true
	70	[125]	SETTABLE 	R4 K58 K34 ; R4["mMiniMapHidden"] := false
	71	[126]	SETTABLE 	R4 K59 K34 ; R4["mAbilityFxPlayed"] := false
	72	[129]	GETGLOBAL	R5 K60 ; R5 := 0x2d0fad09
	73	[129]	LOADK    	R6 K61 ; R6 := "Lotus.Interface.UIUtilities"
	74	[129]	CALL     	R5 2 2 ; R5 := R5(R6)
	75	[130]	GETGLOBAL	R6 K60 ; R6 := 0x2d0fad09
	76	[130]	LOADK    	R7 K62 ; R7 := "Lotus.Interface.LotusUtilities"
	77	[130]	CALL     	R6 2 2 ; R6 := R6(R7)
	78	[131]	GETGLOBAL	R7 K60 ; R7 := 0x2d0fad09
	79	[131]	LOADK    	R8 K63 ; R8 := "Lotus.Interface.LotusNetworkUtilities"
	80	[131]	CALL     	R7 2 2 ; R7 := R7(R8)
	81	[132]	GETGLOBAL	R8 K60 ; R8 := 0x2d0fad09
	82	[132]	LOADK    	R9 K64 ; R9 := "EE.Interface.Utilities"
	83	[132]	CALL     	R8 2 2 ; R8 := R8(R9)
	84	[133]	GETGLOBAL	R9 K60 ; R9 := 0x2d0fad09
	85	[133]	LOADK    	R10 K65 ; R10 := "Lotus.Interface.UIStyleUtilities"
	86	[133]	CALL     	R9 2 2 ; R9 := R9(R10)
	87	[134]	GETGLOBAL	R10 K60 ; R10 := 0x2d0fad09
	88	[134]	LOADK    	R11 K66 ; R11 := "EE.Interface.AnchorMgr"
	89	[134]	CALL     	R10 2 2 ; R10 := R10(R11)
	90	[135]	GETGLOBAL	R11 K60 ; R11 := 0x2d0fad09
	91	[135]	LOADK    	R12 K67 ; R12 := "Lotus.Scripts.HudTrackers"
	92	[135]	CALL     	R11 2 2 ; R11 := R11(R12)
	93	[137]	GETGLOBAL	R12 K60 ; R12 := 0x2d0fad09
	94	[137]	LOADK    	R13 K68 ; R13 := "Lotus.Interface.CardUtilitiesRedux"
	95	[137]	CALL     	R12 2 2 ; R12 := R12(R13)
	96	[138]	GETGLOBAL	R13 K60 ; R13 := 0x2d0fad09
	97	[138]	LOADK    	R14 K69 ; R14 := "Lotus.Interface.Components.HealthAndShieldDisplay"
	98	[138]	CALL     	R13 2 2 ; R13 := R13(R14)
	99	[139]	GETGLOBAL	R14 K60 ; R14 := 0x2d0fad09
	100	[139]	LOADK    	R15 K70 ; R15 := "Lotus.Scripts.Libs.LandscapeLib"
	101	[139]	CALL     	R14 2 2 ; R14 := R14(R15)
	102	[141]	LOADNIL  	R15 R15 ; R15 := nil
	103	[143]	NEWTABLE 	R16 0 5 ; R16 := {}
	104	[143]	SETTABLE 	R16 K71 K16 ; R16["Fade"] := nil
	105	[143]	SETTABLE 	R16 K72 K51 ; R16["WaitingForProgressMovie"] := true
	106	[143]	SETTABLE 	R16 K73 K34 ; R16["TopMenuOpen"] := false
	107	[143]	SETTABLE 	R16 K74 K51 ; R16["mCanControlPlayerPanel"] := true
	108	[143]	SETTABLE 	R16 K75 K16 ; R16["HidePlayerPanel"] := nil
	109	[145]	NEWTABLE 	R17 0 1 ; R17 := {}
	110	[145]	SETTABLE 	R17 K76 K77 ; R17["offsetX"] := 125.000000
	111	[146]	LOADNIL  	R18 R18 ; R18 := nil
	112	[147]	NEWTABLE 	R19 0 4 ; R19 := {}
	113	[147]	SETTABLE 	R19 K78 K16 ; R19["InventoryController"] := nil
	114	[147]	SETTABLE 	R19 K79 K16 ; R19["DamageController"] := nil
	115	[147]	SETTABLE 	R19 K80 K16 ; R19["CameraController"] := nil
	116	[147]	SETTABLE 	R19 K81 K16 ; R19["InputController"] := nil
	117	[148]	LOADNIL  	R20 R21 ; R20 := R21 := nil
	118	[151]	NEWTABLE 	R22 0 0 ; R22 := {}
	119	[153]	NEWTABLE 	R23 0 3 ; R23 := {}
	120	[153]	SETTABLE 	R23 K82 K34 ; R23["mVisible"] := false
	121	[153]	SETTABLE 	R23 K83 K32 ; R23["mProgress"] := 0.000000
	122	[153]	SETTABLE 	R23 K84 K16 ; R23["mList"] := nil
	123	[155]	NEWTABLE 	R24 0 0 ; R24 := {}
	124	[157]	NEWTABLE 	R25 0 0 ; R25 := {}
	125	[159]	LOADNIL  	R26 R28 ; R26 := R27 := R28 := nil
	126	[162]	OP_LOADBOOL	R29 1 0 ; R29 := true
	127	[163]	LOADNIL  	R30 R35 ; R30 := R31 := R32 := R33 := R34 := R35 := nil
	128	[169]	NEWTABLE 	R36 0 0 ; R36 := {}
	129	[170]	OP_LOADBOOL	R37 0 0 ; R37 := false
	130	[172]	NEWTABLE 	R38 0 2 ; R38 := {}
	131	[172]	NEWTABLE 	R39 2 0 ; R39 := {}
	132	[172]	LOADK    	R40 := 0.000000
	133	[172]	LOADK    	R41 := 0.000000
	134	[172]	SETLIST  	R39 2 1 ; R39[(1-1)*FPF+i] := R(39+i), 1 <= i <= 2
	135	[172]	SETTABLE 	R38 K85 R39 ; R38["HudScalePadding"] := R39
	136	[172]	SETTABLE 	R38 K86 K87 ; R38["HudScale"] := 1.000000
	137	[173]	NEWTABLE 	R39 0 0 ; R39 := {}
	138	[174]	NEWTABLE 	R40 0 2 ; R40 := {}
	139	[174]	SETTABLE 	R40 K88 K16 ; R40["Health"] := nil
	140	[174]	SETTABLE 	R40 K89 K16 ; R40["Shield"] := nil
	141	[176]	NEWTABLE 	R41 0 2 ; R41 := {}
	142	[176]	SETTABLE 	R41 K90 K16 ; R41["ptr"] := nil
	143	[176]	SETTABLE 	R41 K91 K16 ; R41["impactBehavior"] := nil
	144	[179]	NEWTABLE 	R42 0 6 ; R42 := {}
	145	[179]	SETTABLE 	R42 K92 K34 ; R42["isEnabled"] := false
	146	[179]	SETTABLE 	R42 K93 K16 ; R42["timer"] := nil
	147	[179]	SETTABLE 	R42 K94 K32 ; R42["timerId"] := 0.000000
	148	[179]	SETTABLE 	R42 K95 K54 ; R42["prevMinute"] := -1.000000
	149	[179]	SETTABLE 	R42 K96 K32 ; R42["mTotalTime"] := 0.000000
	150	[179]	SETTABLE 	R42 K97 K7 ; R42["currentText"] := ""
	151	[181]	NEWTABLE 	R43 0 0 ; R43 := {}
	152	[184]	LOADNIL  	R44 R45 ; R44 := R45 := nil
	153	[188]	NEWTABLE 	R46 0 0 ; R46 := {}
	154	[189]	NEWTABLE 	R47 0 0 ; R47 := {}
	155	[191]	LOADNIL  	R48 R48 ; R48 := nil
	156	[193]	NEWTABLE 	R49 0 3 ; R49 := {}
	157	[193]	SETTABLE 	R49 K98 K34 ; R49["hasCheckedForStatusEffects"] := false
	158	[193]	SETTABLE 	R49 K99 K100 ; R49["effectCheckRetry"] := 5.000000
	159	[193]	SETTABLE 	R49 K101 K16 ; R49["effectOverride"] := nil
	160	[195]	NEWTABLE 	R50 0 0 ; R50 := {}
	161	[197]	LOADNIL  	R51 R51 ; R51 := nil
	162	[198]	NEWTABLE 	R52 0 0 ; R52 := {}
	163	[199]	LOADNIL  	R53 R54 ; R53 := R54 := nil
	164	[201]	NEWTABLE 	R55 0 2 ; R55 := {}
	165	[201]	NEWTABLE 	R56 0 0 ; R56 := {}
	166	[201]	SETTABLE 	R55 K102 R56 ; R55[0x00000000] := R56
	167	[201]	SETTABLE 	R55 K103 K34 ; R55["Cached"] := false
	168	[203]	NEWTABLE 	R56 0 0 ; R56 := {}
	169	[204]	LOADNIL  	R57 R57 ; R57 := nil
	170	[206]	NEWTABLE 	R58 0 0 ; R58 := {}
	171	[208]	LOADNIL  	R59 R59 ; R59 := nil
	172	[209]	LOADK    	R60 := 0.000000
	173	[211]	NEWTABLE 	R61 13 0 ; R61 := {}
	174	[212]	LOADK    	R62 K104 ; R62 := "DT_IMPACT"
	175	[213]	LOADK    	R63 K105 ; R63 := "DT_PUNCTURE"
	176	[214]	LOADK    	R64 K106 ; R64 := "DT_SLASH"
	177	[215]	LOADK    	R65 K107 ; R65 := "DT_FIRE"
	178	[216]	LOADK    	R66 K108 ; R66 := "DT_FREEZE"
	179	[217]	LOADK    	R67 K109 ; R67 := "DT_ELECTRICITY"
	180	[218]	LOADK    	R68 K110 ; R68 := "DT_POISON"
	181	[219]	LOADK    	R69 K111 ; R69 := "DT_EXPLOSION"
	182	[220]	LOADK    	R70 K112 ; R70 := "DT_RADIATION"
	183	[221]	LOADK    	R71 K113 ; R71 := "DT_GAS"
	184	[222]	LOADK    	R72 K114 ; R72 := "DT_MAGNETIC"
	185	[223]	LOADK    	R73 K115 ; R73 := "DT_VIRAL"
	186	[225]	LOADK    	R74 K116 ; R74 := "DT_CORROSIVE"
	187	[225]	SETLIST  	R61 13 1 ; R61[(1-1)*FPF+i] := R(61+i), 1 <= i <= 13
	188	[227]	OP_LOADBOOL	R62 0 0 ; R62 := false
	189	[229]	OP_LOADBOOL	R63 0 0 ; R63 := false
	190	[231]	LOADNIL  	R64 R64 ; R64 := nil
	191	[233]	NEWTABLE 	R65 0 2 ; R65 := {}
	192	[233]	SETTABLE 	R65 K117 K16 ; R65["CurrentValue"] := nil
	193	[233]	SETTABLE 	R65 K118 K34 ; R65["Draining"] := false
	194	[235]	LOADNIL  	R66 R66 ; R66 := nil
	195	[236]	LOADK    	R67 := 0.000000
	196	[237]	LOADNIL  	R68 R68 ; R68 := nil
	197	[238]	OP_LOADBOOL	R69 0 0 ; R69 := false
	198	[240]	NEWTABLE 	R70 0 5 ; R70 := {}
	199	[240]	SETTABLE 	R70 K119 K34 ; R70["Enabled"] := false
	200	[240]	NEWTABLE 	R71 0 0 ; R71 := {}
	201	[240]	SETTABLE 	R70 K120 R71 ; R70["Faded"] := R71
	202	[240]	NEWTABLE 	R71 0 0 ; R71 := {}
	203	[240]	SETTABLE 	R70 K121 R71 ; R70["Interpolating"] := R71
	204	[241]	NEWTABLE 	R71 24 0 ; R71 := {}
	205	[241]	LOADK    	R72 K123 ; R72 := "MiniMapContainer"
	206	[241]	LOADK    	R73 K124 ; R73 := "HudTracker"
	207	[241]	LOADK    	R74 K125 ; R74 := "HealthAndShield"
	208	[241]	LOADK    	R75 K126 ; R75 := "WeaponFrame"
	209	[241]	LOADK    	R76 K127 ; R76 := "AbilityPanel"
	210	[241]	LOADK    	R77 K128 ; R77 := "Card"
	211	[241]	LOADK    	R78 K129 ; R78 := "StandingGain"
	212	[241]	LOADK    	R79 K130 ; R79 := "PvPHeldFlagTimer"
	213	[242]	LOADK    	R80 K131 ; R80 := "MiniGameScore"
	214	[242]	LOADK    	R81 K132 ; R81 := "BorderBox"
	215	[242]	LOADK    	R82 K133 ; R82 := "QuestMessage"
	216	[242]	LOADK    	R83 K134 ; R83 := "GenericMessage"
	217	[242]	LOADK    	R84 K135 ; R84 := "LogMessageContainer"
	218	[242]	LOADK    	R85 K136 ; R85 := "Prompt"
	219	[242]	LOADK    	R86 K137 ; R86 := "DamageIndicator"
	220	[243]	LOADK    	R87 K138 ; R87 := "Reticle"
	221	[243]	LOADK    	R88 K139 ; R88 := "Reticle.Arm1"
	222	[243]	LOADK    	R89 K140 ; R89 := "ReticleCustom"
	223	[243]	LOADK    	R90 K141 ; R90 := "SuccessfulHitNotification"
	224	[243]	LOADK    	R91 K142 ; R91 := "reloadTimer"
	225	[243]	LOADK    	R92 K143 ; R92 := "AbilityChargeProgress"
	226	[243]	LOADK    	R93 K144 ; R93 := "AbilityDots"
	227	[243]	LOADK    	R94 K145 ; R94 := "Stamina"
	228	[243]	LOADK    	R95 K146 ; R95 := "GameplayMessage"
	229	[243]	LOADK    	R96 K147 ; R96 := "PainLeft"
	230	[244]	LOADK    	R97 K148 ; R97 := "PainRight"
	231	[244]	LOADK    	R98 K149 ; R98 := "PainTop"
	232	[244]	LOADK    	R99 K150 ; R99 := "PainBottom"
	233	[244]	LOADK    	R100 K151 ; R100 := "SlamIndicator"
	234	[244]	LOADK    	R101 K152 ; R101 := "MiniMapOverlayMsg"
	235	[244]	LOADK    	R102 K153 ; R102 := "StancePanel"
	236	[244]	SETLIST  	R71 31 1 ; R71[(1-1)*FPF+i] := R(71+i), 1 <= i <= 31
	237	[244]	SETTABLE 	R70 K122 R71 ; R70["Clips"] := R71
	238	[245]	NEWTABLE 	R71 0 4 ; R71 := {}
	239	[245]	SETTABLE 	R71 K147 K51 ; R71["PainLeft"] := true
	240	[245]	SETTABLE 	R71 K148 K51 ; R71["PainRight"] := true
	241	[245]	SETTABLE 	R71 K149 K51 ; R71["PainTop"] := true
	242	[245]	SETTABLE 	R71 K150 K51 ; R71["PainBottom"] := true
	243	[245]	SETTABLE 	R70 K154 R71 ; R70["AutoClips"] := R71
	244	[248]	NEWTABLE 	R71 0 4 ; R71 := {}
	245	[248]	SETTABLE 	R71 K155 K16 ; R71["VoidTearTracker"] := nil
	246	[248]	SETTABLE 	R71 K156 K16 ; R71["VoidTearTitleTracker"] := nil
	247	[248]	SETTABLE 	R71 K157 K16 ; R71["VoidTearListTracker"] := nil
	248	[248]	SETTABLE 	R71 K158 K16 ; R71["TimerOfInterest"] := nil
	249	[250]	NEWTABLE 	R72 0 2 ; R72 := {}
	250	[250]	SETTABLE 	R72 K159 K34 ; R72["DarkSector"] := false
	251	[250]	SETTABLE 	R72 K160 K34 ; R72["PhotoBooth"] := false
	252	[252]	LOADNIL  	R73 R73 ; R73 := nil
	253	[254]	LOADK    	R74 := 0.000000
	254	[258]	NEWTABLE 	R75 0 7 ; R75 := {}
	255	[258]	SETTABLE 	R75 K161 K34 ; R75["Active"] := false
	256	[258]	SETTABLE 	R75 K162 K16 ; R75["IsNight"] := nil
	257	[258]	SETTABLE 	R75 K163 K87 ; R75["TransitionEpsilon"] := 1.000000
	258	[258]	SETTABLE 	R75 K164 K34 ; R75["Visible"] := false
	259	[258]	SETTABLE 	R75 K165 K34 ; R75["Landscape"] := false
	260	[258]	SETTABLE 	R75 K166 K32 ; R75["DayCount"] := 0.000000
	261	[258]	SETTABLE 	R75 K167 K32 ; R75["GameTimeAtDusk"] := 0.000000
	262	[260]	NEWTABLE 	R76 0 8 ; R76 := {}
	263	[261]	SETTABLE 	R76 K168 K16 ; R76["deco"] := nil
	264	[262]	SETTABLE 	R76 K169 K16 ; R76["avatar"] := nil
	265	[263]	SETTABLE 	R76 K170 K16 ; R76["hitProxy"] := nil
	266	[264]	SETTABLE 	R76 K171 K34 ; R76["valid"] := false
	267	[265]	SETTABLE 	R76 K172 K16 ; R76["name"] := nil
	268	[266]	SETTABLE 	R76 K173 K16 ; R76["player"] := nil
	269	[267]	SETTABLE 	R76 K174 K34 ; R76["sameFaction"] := false
	270	[268]	SETTABLE 	R76 K175 K16 ; R76["desc"] := nil
	271	[271]	GETGLOBAL	R77 K176 ; R77 := 0x0469f296
	272	[271]	LOADK    	R78 K177 ; R78 := "Hostage"
	273	[271]	CALL     	R77 2 2 ; R77 := R77(R78)
	274	[273]	LOADNIL  	R78 R79 ; R78 := R79 := nil
	275	[278]	CLOSURE  	R80 0 ; R80 := closure(Function #1)
	276	[278]	MOVE     	R0 R46 ; R0 := R46
	277	[276]	SETGLOBAL	R80 K178 ; GetCards := R80
	278	[283]	CLOSURE  	R80 1 ; R80 := closure(Function #2)
	279	[281]	SETGLOBAL	R80 K179 ; GetSelectedCards := R80
	280	[287]	CLOSURE  	R80 2 ; R80 := closure(Function #3)
	281	[287]	MOVE     	R0 R11 ; R0 := R11
	282	[304]	CLOSURE  	R81 3 ; R81 := closure(Function #4)
	283	[304]	MOVE     	R0 R4 ; R0 := R4
	284	[304]	MOVE     	R0 R3 ; R0 := R3
	285	[332]	CLOSURE  	R82 4 ; R82 := closure(Function #5)
	286	[339]	CLOSURE  	R83 5 ; R83 := closure(Function #6)
	287	[339]	MOVE     	R0 R34 ; R0 := R34
	288	[383]	CLOSURE  	R84 6 ; R84 := closure(Function #7)
	289	[383]	MOVE     	R0 R33 ; R0 := R33
	290	[383]	MOVE     	R0 R74 ; R0 := R74
	291	[383]	MOVE     	R0 R25 ; R0 := R25
	292	[387]	CLOSURE  	R85 7 ; R85 := closure(Function #8)
	293	[387]	MOVE     	R0 R11 ; R0 := R11
	294	[385]	SETGLOBAL	R85 K180 ; SortHudTrackers := R85
	295	[391]	CLOSURE  	R85 8 ; R85 := closure(Function #9)
	296	[391]	MOVE     	R0 R11 ; R0 := R11
	297	[395]	CLOSURE  	R86 9 ; R86 := closure(Function #10)
	298	[395]	MOVE     	R0 R11 ; R0 := R11
	299	[417]	CLOSURE  	R87 10 ; R87 := closure(Function #11)
	300	[417]	MOVE     	R0 R8 ; R0 := R8
	301	[399]	SETGLOBAL	R87 K181 ; ShowQuestMessage := R87
	302	[423]	CLOSURE  	R87 11 ; R87 := closure(Function #12)
	303	[419]	SETGLOBAL	R87 K182 ; HideQuestMessage := R87
	304	[438]	CLOSURE  	R87 12 ; R87 := closure(Function #13)
	305	[438]	MOVE     	R0 R8 ; R0 := R8
	306	[443]	CLOSURE  	R88 13 ; R88 := closure(Function #14)
	307	[443]	MOVE     	R0 R42 ; R0 := R42
	308	[443]	MOVE     	R0 R18 ; R0 := R18
	309	[550]	CLOSURE  	R89 14 ; R89 := closure(Function #15)
	310	[550]	MOVE     	R0 R42 ; R0 := R42
	311	[550]	MOVE     	R0 R8 ; R0 := R8
	312	[550]	MOVE     	R0 R32 ; R0 := R32
	313	[550]	MOVE     	R0 R88 ; R0 := R88
	314	[550]	MOVE     	R0 R18 ; R0 := R18
	315	[550]	MOVE     	R0 R80 ; R0 := R80
	316	[558]	CLOSURE  	R90 15 ; R90 := closure(Function #16)
	317	[558]	MOVE     	R0 R8 ; R0 := R8
	318	[552]	SETGLOBAL	R90 K183 ; AnimateTyping := R90
	319	[567]	CLOSURE  	R90 16 ; R90 := closure(Function #17)
	320	[567]	MOVE     	R0 R17 ; R0 := R17
	321	[574]	CLOSURE  	R91 17 ; R91 := closure(Function #18)
	322	[574]	MOVE     	R0 R26 ; R0 := R26
	323	[569]	SETGLOBAL	R91 K184 ; HideReticle := R91
	324	[581]	CLOSURE  	R91 18 ; R91 := closure(Function #19)
	325	[581]	MOVE     	R0 R26 ; R0 := R26
	326	[581]	MOVE     	R0 R19 ; R0 := R19
	327	[589]	CLOSURE  	R92 19 ; R92 := closure(Function #20)
	328	[589]	MOVE     	R0 R91 ; R0 := R91
	329	[583]	SETGLOBAL	R92 K185 ; ShowReticle := R92
	330	[605]	CLOSURE  	R92 20 ; R92 := closure(Function #21)
	331	[605]	MOVE     	R0 R4 ; R0 := R4
	332	[605]	MOVE     	R0 R26 ; R0 := R26
	333	[591]	SETGLOBAL	R92 K186 ; SetReticleVisible := R92
	334	[611]	CLOSURE  	R92 21 ; R92 := closure(Function #22)
	335	[611]	MOVE     	R0 R27 ; R0 := R27
	336	[607]	SETGLOBAL	R92 K187 ; SuppressDamageIndicators := R92
	337	[615]	CLOSURE  	R92 22 ; R92 := closure(Function #23)
	338	[613]	SETGLOBAL	R92 K188 ; HideAffinity := R92
	339	[619]	CLOSURE  	R92 23 ; R92 := closure(Function #24)
	340	[617]	SETGLOBAL	R92 K189 ; ShowAffinity := R92
	341	[623]	CLOSURE  	R92 24 ; R92 := closure(Function #25)
	342	[623]	MOVE     	R0 R27 ; R0 := R27
	343	[621]	SETGLOBAL	R92 K190 ; HideAbilityDots := R92
	344	[627]	CLOSURE  	R92 25 ; R92 := closure(Function #26)
	345	[627]	MOVE     	R0 R27 ; R0 := R27
	346	[625]	SETGLOBAL	R92 K191 ; ShowAbilityDots := R92
	347	[647]	CLOSURE  	R92 26 ; R92 := closure(Function #27)
	348	[647]	MOVE     	R0 R38 ; R0 := R38
	349	[647]	MOVE     	R0 R5 ; R0 := R5
	350	[647]	MOVE     	R0 R15 ; R0 := R15
	351	[647]	MOVE     	R0 R27 ; R0 := R27
	352	[647]	MOVE     	R0 R25 ; R0 := R25
	353	[689]	CLOSURE  	R93 27 ; R93 := closure(Function #28)
	354	[689]	MOVE     	R0 R38 ; R0 := R38
	355	[697]	CLOSURE  	R94 28 ; R94 := closure(Function #29)
	356	[697]	MOVE     	R0 R93 ; R0 := R93
	357	[697]	MOVE     	R0 R92 ; R0 := R92
	358	[692]	SETGLOBAL	R94 K192 ; onViewportSizeChanged := R94
	359	[717]	CLOSURE  	R94 29 ; R94 := closure(Function #30)
	360	[727]	CLOSURE  	R95 30 ; R95 := closure(Function #31)
	361	[727]	MOVE     	R0 R58 ; R0 := R58
	362	[727]	MOVE     	R0 R94 ; R0 := R94
	363	[727]	SETTABLE 	R58 K193 R95 ; R58["IsBuffEqual"] := R95
	364	[831]	CLOSURE  	R95 31 ; R95 := closure(Function #32)
	365	[831]	MOVE     	R0 R53 ; R0 := R53
	366	[831]	MOVE     	R0 R30 ; R0 := R30
	367	[831]	MOVE     	R0 R28 ; R0 := R28
	368	[831]	MOVE     	R0 R58 ; R0 := R58
	369	[831]	MOVE     	R0 R37 ; R0 := R37
	370	[831]	MOVE     	R0 R51 ; R0 := R51
	371	[889]	CLOSURE  	R96 32 ; R96 := closure(Function #33)
	372	[889]	MOVE     	R0 R53 ; R0 := R53
	373	[889]	MOVE     	R0 R30 ; R0 := R30
	374	[889]	MOVE     	R0 R94 ; R0 := R94
	375	[889]	MOVE     	R0 R51 ; R0 := R51
	376	[897]	CLOSURE  	R97 33 ; R97 := closure(Function #34)
	377	[897]	MOVE     	R0 R27 ; R0 := R27
	378	[901]	CLOSURE  	R98 34 ; R98 := closure(Function #35)
	379	[901]	MOVE     	R0 R27 ; R0 := R27
	380	[908]	CLOSURE  	R99 35 ; R99 := closure(Function #36)
	381	[908]	MOVE     	R0 R6 ; R0 := R6
	382	[903]	SETGLOBAL	R99 K194 ; PlayFocusActivatedFX := R99
	383	[912]	CLOSURE  	R99 36 ; R99 := closure(Function #37)
	384	[912]	MOVE     	R0 R27 ; R0 := R27
	385	[958]	CLOSURE  	R100 37 ; R100 := closure(Function #38)
	386	[958]	MOVE     	R0 R4 ; R0 := R4
	387	[958]	MOVE     	R0 R82 ; R0 := R82
	388	[958]	MOVE     	R0 R26 ; R0 := R26
	389	[958]	MOVE     	R0 R27 ; R0 := R27
	390	[958]	MOVE     	R0 R57 ; R0 := R57
	391	[958]	MOVE     	R0 R51 ; R0 := R51
	392	[914]	SETGLOBAL	R100 K195 ; Shutdown := R100
	393	[983]	CLOSURE  	R100 38 ; R100 := closure(Function #39)
	394	[983]	MOVE     	R0 R27 ; R0 := R27
	395	[998]	CLOSURE  	R101 39 ; R101 := closure(Function #40)
	396	[998]	MOVE     	R0 R28 ; R0 := R28
	397	[998]	MOVE     	R0 R27 ; R0 := R27
	398	[998]	MOVE     	R0 R100 ; R0 := R100
	399	[1004]	CLOSURE  	R102 40 ; R102 := closure(Function #41)
	400	[1000]	SETGLOBAL	R102 K196 ; OnIconReady := R102
	401	[1011]	CLOSURE  	R102 41 ; R102 := closure(Function #42)
	402	[1006]	SETGLOBAL	R102 K197 ; ForceShowMysteryPrize := R102
	403	[1031]	CLOSURE  	R102 42 ; R102 := closure(Function #43)
	404	[1031]	MOVE     	R0 R81 ; R0 := R81
	405	[1013]	SETGLOBAL	R102 K198 ; ShowEncounterReward := R102
	406	[1051]	CLOSURE  	R102 43 ; R102 := closure(Function #44)
	407	[1051]	MOVE     	R0 R32 ; R0 := R32
	408	[1069]	CLOSURE  	R103 44 ; R103 := closure(Function #45)
	409	[1069]	MOVE     	R0 R15 ; R0 := R15
	410	[1053]	SETGLOBAL	R103 K199 ; UpdateLogMessageContainerY := R103
	411	[1076]	CLOSURE  	R103 45 ; R103 := closure(Function #46)
	412	[1076]	MOVE     	R0 R39 ; R0 := R39
	413	[1072]	SETGLOBAL	R103 K200 ; ShowGameplayMessage := R103
	414	[1078]	NEWTABLE 	R103 0 0 ; R103 := {}
	415	[1082]	CLOSURE  	R104 46 ; R104 := closure(Function #47)
	416	[1082]	MOVE     	R0 R103 ; R0 := R103
	417	[1080]	SETGLOBAL	R104 K201 ; ResetBuddyEffects := R104
	418	[1087]	CLOSURE  	R104 47 ; R104 := closure(Function #48)
	419	[1087]	MOVE     	R0 R104 ; R0 := R104
	420	[1092]	CLOSURE  	R78 48 ; R78 := closure(Function #49)
	421	[1092]	MOVE     	R0 R4 ; R0 := R4
	422	[1092]	MOVE     	R0 R6 ; R0 := R6
	423	[1117]	CLOSURE  	R105 49 ; R105 := closure(Function #50)
	424	[1117]	MOVE     	R0 R32 ; R0 := R32
	425	[1117]	MOVE     	R0 R4 ; R0 := R4
	426	[1117]	MOVE     	R0 R6 ; R0 := R6
	427	[1117]	MOVE     	R0 R78 ; R0 := R78
	428	[1117]	MOVE     	R0 R11 ; R0 := R11
	429	[1140]	CLOSURE  	R106 50 ; R106 := closure(Function #51)
	430	[1140]	MOVE     	R0 R27 ; R0 := R27
	431	[1140]	MOVE     	R0 R41 ; R0 := R41
	432	[1140]	MOVE     	R0 R4 ; R0 := R4
	433	[1180]	CLOSURE  	R107 51 ; R107 := closure(Function #52)
	434	[1180]	MOVE     	R0 R27 ; R0 := R27
	435	[1180]	MOVE     	R0 R41 ; R0 := R41
	436	[1180]	MOVE     	R0 R106 ; R0 := R106
	437	[1180]	MOVE     	R0 R79 ; R0 := R79
	438	[1180]	MOVE     	R0 R26 ; R0 := R26
	439	[1180]	MOVE     	R0 R16 ; R0 := R16
	440	[1180]	MOVE     	R0 R8 ; R0 := R8
	441	[1180]	MOVE     	R0 R6 ; R0 := R6
	442	[1180]	MOVE     	R0 R57 ; R0 := R57
	443	[1192]	CLOSURE  	R108 52 ; R108 := closure(Function #53)
	444	[1192]	MOVE     	R0 R61 ; R0 := R61
	445	[1305]	CLOSURE  	R109 53 ; R109 := closure(Function #54)
	446	[1305]	MOVE     	R0 R52 ; R0 := R52
	447	[1305]	MOVE     	R0 R8 ; R0 := R8
	448	[1305]	MOVE     	R0 R108 ; R0 := R108
	449	[1305]	MOVE     	R0 R19 ; R0 := R19
	450	[1305]	MOVE     	R0 R30 ; R0 := R30
	451	[1305]	MOVE     	R0 R53 ; R0 := R53
	452	[1305]	MOVE     	R0 R61 ; R0 := R61
	453	[1305]	MOVE     	R0 R21 ; R0 := R21
	454	[1305]	MOVE     	R0 R20 ; R0 := R20
	455	[1422]	CLOSURE  	R110 54 ; R110 := closure(Function #55)
	456	[1422]	MOVE     	R0 R55 ; R0 := R55
	457	[1422]	MOVE     	R0 R53 ; R0 := R53
	458	[1422]	MOVE     	R0 R4 ; R0 := R4
	459	[1422]	MOVE     	R0 R37 ; R0 := R37
	460	[1422]	MOVE     	R0 R26 ; R0 := R26
	461	[1422]	MOVE     	R0 R95 ; R0 := R95
	462	[1422]	MOVE     	R0 R96 ; R0 := R96
	463	[1422]	MOVE     	R0 R30 ; R0 := R30
	464	[1422]	MOVE     	R0 R8 ; R0 := R8
	465	[1422]	MOVE     	R0 R102 ; R0 := R102
	466	[1427]	CLOSURE  	R111 55 ; R111 := closure(Function #56)
	467	[1425]	SETGLOBAL	R111 K202 ; SetForceLocalRespawn := R111
	468	[1438]	CLOSURE  	R111 56 ; R111 := closure(Function #57)
	469	[1438]	MOVE     	R0 R15 ; R0 := R15
	470	[1430]	SETGLOBAL	R111 K203 ; RegisterToAnchorMgr := R111
	471	[1443]	CLOSURE  	R111 57 ; R111 := closure(Function #58)
	472	[1443]	MOVE     	R0 R15 ; R0 := R15
	473	[1441]	SETGLOBAL	R111 K204 ; UnregisterFromAnchorMgr := R111
	474	[1454]	CLOSURE  	R111 58 ; R111 := closure(Function #59)
	475	[1454]	MOVE     	R0 R52 ; R0 := R52
	476	[1463]	CLOSURE  	R112 59 ; R112 := closure(Function #60)
	477	[1463]	MOVE     	R0 R52 ; R0 := R52
	478	[1520]	CLOSURE  	R113 60 ; R113 := closure(Function #61)
	479	[1520]	MOVE     	R0 R20 ; R0 := R20
	480	[1520]	MOVE     	R0 R19 ; R0 := R19
	481	[1520]	MOVE     	R0 R49 ; R0 := R49
	482	[1520]	MOVE     	R0 R54 ; R0 := R54
	483	[1520]	MOVE     	R0 R112 ; R0 := R112
	484	[1520]	MOVE     	R0 R111 ; R0 := R111
	485	[1535]	CLOSURE  	R114 61 ; R114 := closure(Function #62)
	486	[1535]	MOVE     	R0 R111 ; R0 := R111
	487	[1535]	MOVE     	R0 R112 ; R0 := R112
	488	[1522]	SETGLOBAL	R114 K205 ; ConditionalUpgradeChanged := R114
	489	[1537]	LOADNIL  	R114 R114 ; R114 := nil
	490	[1542]	CLOSURE  	R115 62 ; R115 := closure(Function #63)
	491	[1542]	MOVE     	R0 R114 ; R0 := R114
	492	[1542]	MOVE     	R0 R27 ; R0 := R27
	493	[1568]	CLOSURE  	R116 63 ; R116 := closure(Function #64)
	494	[1568]	MOVE     	R0 R46 ; R0 := R46
	495	[1568]	MOVE     	R0 R12 ; R0 := R12
	496	[1568]	MOVE     	R0 R47 ; R0 := R47
	497	[1568]	MOVE     	R0 R8 ; R0 := R8
	498	[1568]	MOVE     	R0 R27 ; R0 := R27
	499	[1578]	CLOSURE  	R117 64 ; R117 := closure(Function #65)
	500	[1578]	MOVE     	R0 R114 ; R0 := R114
	501	[1587]	CLOSURE  	R118 65 ; R118 := closure(Function #66)
	502	[1587]	MOVE     	R0 R117 ; R0 := R117
	503	[1580]	SETGLOBAL	R118 K206 ; HandleModFound := R118
	504	[1622]	CLOSURE  	R118 66 ; R118 := closure(Function #67)
	505	[1622]	MOVE     	R0 R114 ; R0 := R114
	506	[1622]	MOVE     	R0 R4 ; R0 := R4
	507	[1622]	MOVE     	R0 R116 ; R0 := R116
	508	[1622]	MOVE     	R0 R47 ; R0 := R47
	509	[1622]	MOVE     	R0 R12 ; R0 := R12
	510	[1622]	MOVE     	R0 R115 ; R0 := R115
	511	[1630]	CLOSURE  	R119 67 ; R119 := closure(Function #68)
	512	[1630]	MOVE     	R0 R4 ; R0 := R4
	513	[1630]	MOVE     	R0 R6 ; R0 := R6
	514	[1624]	SETGLOBAL	R119 K207 ; CreateNotificationParticles := R119
	515	[1648]	CLOSURE  	R119 68 ; R119 := closure(Function #69)
	516	[1648]	MOVE     	R0 R4 ; R0 := R4
	517	[1648]	MOVE     	R0 R27 ; R0 := R27
	518	[1632]	SETGLOBAL	R119 K208 ; ShowNotification := R119
	519	[1653]	CLOSURE  	R119 69 ; R119 := closure(Function #70)
	520	[1653]	MOVE     	R0 R17 ; R0 := R17
	521	[1661]	CLOSURE  	R120 70 ; R120 := closure(Function #71)
	522	[1661]	MOVE     	R0 R17 ; R0 := R17
	523	[1661]	MOVE     	R0 R119 ; R0 := R119
	524	[1673]	CLOSURE  	R121 71 ; R121 := closure(Function #72)
	525	[1673]	MOVE     	R0 R120 ; R0 := R120
	526	[1664]	SETGLOBAL	R121 K209 ; NotifyAbilityChange := R121
	527	[1677]	CLOSURE  	R121 72 ; R121 := closure(Function #73)
	528	[1677]	MOVE     	R0 R42 ; R0 := R42
	529	[1677]	MOVE     	R0 R18 ; R0 := R18
	530	[1705]	CLOSURE  	R122 73 ; R122 := closure(Function #74)
	531	[1705]	MOVE     	R0 R120 ; R0 := R120
	532	[1705]	MOVE     	R0 R8 ; R0 := R8
	533	[1705]	MOVE     	R0 R56 ; R0 := R56
	534	[1705]	MOVE     	R0 R4 ; R0 := R4
	535	[1705]	MOVE     	R0 R29 ; R0 := R29
	536	[1705]	MOVE     	R0 R42 ; R0 := R42
	537	[1705]	MOVE     	R0 R121 ; R0 := R121
	538	[1680]	SETGLOBAL	R122 K210 ; NotifyAbilityActivate := R122
	539	[1726]	CLOSURE  	R122 74 ; R122 := closure(Function #75)
	540	[1726]	MOVE     	R0 R120 ; R0 := R120
	541	[1726]	MOVE     	R0 R27 ; R0 := R27
	542	[1726]	MOVE     	R0 R8 ; R0 := R8
	543	[1708]	SETGLOBAL	R122 K211 ; NotifyAbilityActivateError := R122
	544	[1740]	CLOSURE  	R122 75 ; R122 := closure(Function #76)
	545	[1740]	MOVE     	R0 R4 ; R0 := R4
	546	[1740]	MOVE     	R0 R8 ; R0 := R8
	547	[1740]	MOVE     	R0 R56 ; R0 := R56
	548	[1728]	SETGLOBAL	R122 K212 ; OnAbilityHighlight := R122
	549	[1757]	CLOSURE  	R122 76 ; R122 := closure(Function #77)
	550	[1757]	MOVE     	R0 R4 ; R0 := R4
	551	[1774]	CLOSURE  	R123 77 ; R123 := closure(Function #78)
	552	[1774]	MOVE     	R0 R4 ; R0 := R4
	553	[1774]	MOVE     	R0 R8 ; R0 := R8
	554	[1800]	CLOSURE  	R124 78 ; R124 := closure(Function #79)
	555	[1800]	MOVE     	R0 R4 ; R0 := R4
	556	[1800]	MOVE     	R0 R27 ; R0 := R27
	557	[1814]	CLOSURE  	R125 79 ; R125 := closure(Function #80)
	558	[1814]	MOVE     	R0 R15 ; R0 := R15
	559	[1814]	MOVE     	R0 R38 ; R0 := R38
	560	[1872]	CLOSURE  	R126 80 ; R126 := closure(Function #81)
	561	[1872]	MOVE     	R0 R15 ; R0 := R15
	562	[1872]	MOVE     	R0 R65 ; R0 := R65
	563	[1872]	MOVE     	R0 R8 ; R0 := R8
	564	[1872]	MOVE     	R0 R27 ; R0 := R27
	565	[1872]	MOVE     	R0 R125 ; R0 := R125
	566	[1872]	MOVE     	R0 R38 ; R0 := R38
	567	[1872]	MOVE     	R0 R25 ; R0 := R25
	568	[1816]	SETGLOBAL	R126 K213 ; UpdateFocusAnchor := R126
	569	[1891]	CLOSURE  	R126 81 ; R126 := closure(Function #82)
	570	[1891]	MOVE     	R0 R4 ; R0 := R4
	571	[1891]	MOVE     	R0 R33 ; R0 := R33
	572	[1891]	MOVE     	R0 R62 ; R0 := R62
	573	[1891]	MOVE     	R0 R27 ; R0 := R27
	574	[1891]	MOVE     	R0 R30 ; R0 := R30
	575	[1901]	CLOSURE  	R127 82 ; R127 := closure(Function #83)
	576	[1901]	MOVE     	R0 R4 ; R0 := R4
	577	[1901]	MOVE     	R0 R27 ; R0 := R27
	578	[1901]	MOVE     	R0 R62 ; R0 := R62
	579	[1901]	MOVE     	R0 R33 ; R0 := R33
	580	[1918]	CLOSURE  	R128 83 ; R128 := closure(Function #84)
	581	[1918]	MOVE     	R0 R51 ; R0 := R51
	582	[1918]	MOVE     	R0 R27 ; R0 := R27
	583	[1927]	CLOSURE  	R129 84 ; R129 := closure(Function #85)
	584	[1927]	MOVE     	R0 R8 ; R0 := R8
	585	[1922]	SETGLOBAL	R129 K214 ; ToggleChatWindow := R129
	586	[1935]	CLOSURE  	R129 85 ; R129 := closure(Function #86)
	587	[1940]	CLOSURE  	R130 86 ; R130 := closure(Function #87)
	588	[1940]	MOVE     	R0 R4 ; R0 := R4
	589	[1938]	SETGLOBAL	R130 K215 ; OnPlayersChanged := R130
	590	[2007]	CLOSURE  	R130 87 ; R130 := closure(Function #88)
	591	[2007]	MOVE     	R0 R4 ; R0 := R4
	592	[2007]	MOVE     	R0 R51 ; R0 := R51
	593	[2007]	MOVE     	R0 R32 ; R0 := R32
	594	[2007]	MOVE     	R0 R43 ; R0 := R43
	595	[2007]	MOVE     	R0 R27 ; R0 := R27
	596	[2007]	MOVE     	R0 R22 ; R0 := R22
	597	[2007]	MOVE     	R0 R58 ; R0 := R58
	598	[2007]	MOVE     	R0 R129 ; R0 := R129
	599	[2007]	MOVE     	R0 R6 ; R0 := R6
	600	[2007]	MOVE     	R0 R8 ; R0 := R8
	601	[2007]	MOVE     	R0 R26 ; R0 := R26
	602	[2062]	CLOSURE  	R131 88 ; R131 := closure(Function #89)
	603	[2062]	MOVE     	R0 R28 ; R0 := R28
	604	[2062]	MOVE     	R0 R71 ; R0 := R71
	605	[2062]	MOVE     	R0 R86 ; R0 := R86
	606	[2062]	MOVE     	R0 R6 ; R0 := R6
	607	[2062]	MOVE     	R0 R18 ; R0 := R18
	608	[2062]	MOVE     	R0 R80 ; R0 := R80
	609	[2062]	MOVE     	R0 R85 ; R0 := R85
	610	[2096]	CLOSURE  	R132 89 ; R132 := closure(Function #90)
	611	[2096]	MOVE     	R0 R6 ; R0 := R6
	612	[2096]	MOVE     	R0 R27 ; R0 := R27
	613	[2096]	MOVE     	R0 R4 ; R0 := R4
	614	[2066]	SETGLOBAL	R132 K216 ; ShowTransmission := R132
	615	[2100]	CLOSURE  	R132 90 ; R132 := closure(Function #91)
	616	[2158]	CLOSURE  	R133 91 ; R133 := closure(Function #92)
	617	[2158]	MOVE     	R0 R28 ; R0 := R28
	618	[2158]	MOVE     	R0 R76 ; R0 := R76
	619	[2158]	MOVE     	R0 R4 ; R0 := R4
	620	[2158]	MOVE     	R0 R6 ; R0 := R6
	621	[2158]	MOVE     	R0 R77 ; R0 := R77
	622	[2158]	MOVE     	R0 R132 ; R0 := R132
	623	[2158]	MOVE     	R0 R78 ; R0 := R78
	624	[2158]	MOVE     	R0 R32 ; R0 := R32
	625	[2158]	MOVE     	R0 R129 ; R0 := R129
	626	[2178]	CLOSURE  	R134 92 ; R134 := closure(Function #93)
	627	[2178]	MOVE     	R0 R28 ; R0 := R28
	628	[2178]	MOVE     	R0 R76 ; R0 := R76
	629	[2178]	MOVE     	R0 R6 ; R0 := R6
	630	[2178]	MOVE     	R0 R133 ; R0 := R133
	631	[2195]	CLOSURE  	R135 93 ; R135 := closure(Function #94)
	632	[2195]	MOVE     	R0 R30 ; R0 := R30
	633	[2195]	MOVE     	R0 R19 ; R0 := R19
	634	[2195]	MOVE     	R0 R41 ; R0 := R41
	635	[2195]	MOVE     	R0 R27 ; R0 := R27
	636	[2195]	MOVE     	R0 R8 ; R0 := R8
	637	[2199]	CLOSURE  	R136 94 ; R136 := closure(Function #95)
	638	[2199]	MOVE     	R0 R135 ; R0 := R135
	639	[2197]	SETGLOBAL	R136 K217 ; UpdateScanUpdateParams := R136
	640	[2228]	CLOSURE  	R136 95 ; R136 := closure(Function #96)
	641	[2228]	MOVE     	R0 R71 ; R0 := R71
	642	[2228]	MOVE     	R0 R86 ; R0 := R86
	643	[2228]	MOVE     	R0 R6 ; R0 := R6
	644	[2228]	MOVE     	R0 R8 ; R0 := R8
	645	[2254]	CLOSURE  	R137 96 ; R137 := closure(Function #97)
	646	[2254]	MOVE     	R0 R8 ; R0 := R8
	647	[2254]	MOVE     	R0 R71 ; R0 := R71
	648	[2298]	CLOSURE  	R138 97 ; R138 := closure(Function #98)
	649	[2298]	MOVE     	R0 R71 ; R0 := R71
	650	[2298]	MOVE     	R0 R85 ; R0 := R85
	651	[2298]	MOVE     	R0 R23 ; R0 := R23
	652	[2298]	MOVE     	R0 R136 ; R0 := R136
	653	[2298]	MOVE     	R0 R137 ; R0 := R137
	654	[2298]	MOVE     	R0 R86 ; R0 := R86
	655	[2298]	MOVE     	R0 R6 ; R0 := R6
	656	[2352]	CLOSURE  	R139 98 ; R139 := closure(Function #99)
	657	[2352]	MOVE     	R0 R71 ; R0 := R71
	658	[2352]	MOVE     	R0 R86 ; R0 := R86
	659	[2352]	MOVE     	R0 R6 ; R0 := R6
	660	[2352]	MOVE     	R0 R23 ; R0 := R23
	661	[2391]	CLOSURE  	R140 99 ; R140 := closure(Function #100)
	662	[2391]	MOVE     	R0 R4 ; R0 := R4
	663	[2391]	MOVE     	R0 R6 ; R0 := R6
	664	[2391]	MOVE     	R0 R48 ; R0 := R48
	665	[2391]	MOVE     	R0 R86 ; R0 := R86
	666	[2391]	MOVE     	R0 R85 ; R0 := R85
	667	[2391]	MOVE     	R0 R71 ; R0 := R71
	668	[2391]	MOVE     	R0 R138 ; R0 := R138
	669	[2391]	MOVE     	R0 R139 ; R0 := R139
	670	[2432]	CLOSURE  	R141 100 ; R141 := closure(Function #101)
	671	[2432]	MOVE     	R0 R31 ; R0 := R31
	672	[2432]	MOVE     	R0 R8 ; R0 := R8
	673	[2500]	CLOSURE  	R142 101 ; R142 := closure(Function #102)
	674	[2500]	MOVE     	R0 R50 ; R0 := R50
	675	[2672]	CLOSURE  	R143 102 ; R143 := closure(Function #103)
	676	[2672]	MOVE     	R0 R30 ; R0 := R30
	677	[2672]	MOVE     	R0 R33 ; R0 := R33
	678	[2672]	MOVE     	R0 R62 ; R0 := R62
	679	[2672]	MOVE     	R0 R69 ; R0 := R69
	680	[2672]	MOVE     	R0 R40 ; R0 := R40
	681	[2672]	MOVE     	R0 R142 ; R0 := R142
	682	[2672]	MOVE     	R0 R39 ; R0 := R39
	683	[2672]	MOVE     	R0 R58 ; R0 := R58
	684	[2672]	MOVE     	R0 R8 ; R0 := R8
	685	[3016]	CLOSURE  	R144 103 ; R144 := closure(Function #104)
	686	[3016]	MOVE     	R0 R32 ; R0 := R32
	687	[3016]	MOVE     	R0 R105 ; R0 := R105
	688	[3016]	MOVE     	R0 R28 ; R0 := R28
	689	[3016]	MOVE     	R0 R33 ; R0 := R33
	690	[3016]	MOVE     	R0 R62 ; R0 := R62
	691	[3016]	MOVE     	R0 R19 ; R0 := R19
	692	[3016]	MOVE     	R0 R4 ; R0 := R4
	693	[3016]	MOVE     	R0 R35 ; R0 := R35
	694	[3016]	MOVE     	R0 R26 ; R0 := R26
	695	[3016]	MOVE     	R0 R30 ; R0 := R30
	696	[3016]	MOVE     	R0 R6 ; R0 := R6
	697	[3016]	MOVE     	R0 R55 ; R0 := R55
	698	[3016]	MOVE     	R0 R58 ; R0 := R58
	699	[3016]	MOVE     	R0 R40 ; R0 := R40
	700	[3016]	MOVE     	R0 R27 ; R0 := R27
	701	[3016]	MOVE     	R0 R53 ; R0 := R53
	702	[3016]	MOVE     	R0 R51 ; R0 := R51
	703	[3016]	MOVE     	R0 R95 ; R0 := R95
	704	[3016]	MOVE     	R0 R31 ; R0 := R31
	705	[3016]	MOVE     	R0 R141 ; R0 := R141
	706	[3016]	MOVE     	R0 R8 ; R0 := R8
	707	[3016]	MOVE     	R0 R91 ; R0 := R91
	708	[3016]	MOVE     	R0 R22 ; R0 := R22
	709	[3016]	MOVE     	R0 R63 ; R0 := R63
	710	[3033]	CLOSURE  	R145 104 ; R145 := closure(Function #105)
	711	[3048]	CLOSURE  	R146 105 ; R146 := closure(Function #106)
	712	[3116]	CLOSURE  	R147 106 ; R147 := closure(Function #107)
	713	[3116]	MOVE     	R0 R1 ; R0 := R1
	714	[3116]	MOVE     	R0 R34 ; R0 := R34
	715	[3116]	MOVE     	R0 R145 ; R0 := R145
	716	[3116]	MOVE     	R0 R66 ; R0 := R66
	717	[3116]	MOVE     	R0 R146 ; R0 := R146
	718	[3116]	MOVE     	R0 R4 ; R0 := R4
	719	[3249]	CLOSURE  	R148 107 ; R148 := closure(Function #108)
	720	[3249]	MOVE     	R0 R4 ; R0 := R4
	721	[3249]	MOVE     	R0 R16 ; R0 := R16
	722	[3249]	MOVE     	R0 R147 ; R0 := R147
	723	[3249]	MOVE     	R0 R72 ; R0 := R72
	724	[3249]	MOVE     	R0 R30 ; R0 := R30
	725	[3249]	MOVE     	R0 R32 ; R0 := R32
	726	[3249]	MOVE     	R0 R70 ; R0 := R70
	727	[3249]	MOVE     	R0 R6 ; R0 := R6
	728	[3249]	MOVE     	R0 R26 ; R0 := R26
	729	[3249]	MOVE     	R0 R27 ; R0 := R27
	730	[3253]	CLOSURE  	R149 108 ; R149 := closure(Function #109)
	731	[3253]	MOVE     	R0 R148 ; R0 := R148
	732	[3251]	SETGLOBAL	R149 K218 ; UpdateFade := R149
	733	[3650]	CLOSURE  	R149 109 ; R149 := closure(Function #110)
	734	[3650]	MOVE     	R0 R4 ; R0 := R4
	735	[3650]	MOVE     	R0 R18 ; R0 := R18
	736	[3650]	MOVE     	R0 R73 ; R0 := R73
	737	[3650]	MOVE     	R0 R144 ; R0 := R144
	738	[3650]	MOVE     	R0 R3 ; R0 := R3
	739	[3650]	MOVE     	R0 R130 ; R0 := R130
	740	[3650]	MOVE     	R0 R6 ; R0 := R6
	741	[3650]	MOVE     	R0 R32 ; R0 := R32
	742	[3650]	MOVE     	R0 R45 ; R0 := R45
	743	[3650]	MOVE     	R0 R27 ; R0 := R27
	744	[3650]	MOVE     	R0 R28 ; R0 := R28
	745	[3650]	MOVE     	R0 R58 ; R0 := R58
	746	[3650]	MOVE     	R0 R30 ; R0 := R30
	747	[3650]	MOVE     	R0 R19 ; R0 := R19
	748	[3650]	MOVE     	R0 R40 ; R0 := R40
	749	[3650]	MOVE     	R0 R20 ; R0 := R20
	750	[3650]	MOVE     	R0 R49 ; R0 := R49
	751	[3650]	MOVE     	R0 R134 ; R0 := R134
	752	[3650]	MOVE     	R0 R148 ; R0 := R148
	753	[3650]	MOVE     	R0 R8 ; R0 := R8
	754	[3650]	MOVE     	R0 R26 ; R0 := R26
	755	[3650]	MOVE     	R0 R107 ; R0 := R107
	756	[3650]	MOVE     	R0 R75 ; R0 := R75
	757	[3650]	MOVE     	R0 R14 ; R0 := R14
	758	[3650]	MOVE     	R0 R109 ; R0 := R109
	759	[3650]	MOVE     	R0 R118 ; R0 := R118
	760	[3650]	MOVE     	R0 R143 ; R0 := R143
	761	[3650]	MOVE     	R0 R24 ; R0 := R24
	762	[3650]	MOVE     	R0 R16 ; R0 := R16
	763	[3650]	MOVE     	R0 R51 ; R0 := R51
	764	[3650]	MOVE     	R0 R128 ; R0 := R128
	765	[3650]	MOVE     	R0 R56 ; R0 := R56
	766	[3650]	MOVE     	R0 R110 ; R0 := R110
	767	[3650]	MOVE     	R0 R113 ; R0 := R113
	768	[3650]	MOVE     	R0 R11 ; R0 := R11
	769	[3650]	MOVE     	R0 R72 ; R0 := R72
	770	[3650]	MOVE     	R0 R31 ; R0 := R31
	771	[3650]	MOVE     	R0 R131 ; R0 := R131
	772	[3650]	MOVE     	R0 R140 ; R0 := R140
	773	[3650]	MOVE     	R0 R44 ; R0 := R44
	774	[3255]	SETGLOBAL	R149 K219 ; Update := R149
	775	[3688]	CLOSURE  	R149 110 ; R149 := closure(Function #111)
	776	[3688]	MOVE     	R0 R24 ; R0 := R24
	777	[3688]	MOVE     	R0 R4 ; R0 := R4
	778	[3688]	MOVE     	R0 R32 ; R0 := R32
	779	[3688]	MOVE     	R0 R28 ; R0 := R28
	780	[3688]	MOVE     	R0 R8 ; R0 := R8
	781	[3688]	MOVE     	R0 R6 ; R0 := R6
	782	[3731]	CLOSURE  	R150 111 ; R150 := closure(Function #112)
	783	[3731]	MOVE     	R0 R45 ; R0 := R45
	784	[3731]	MOVE     	R0 R51 ; R0 := R51
	785	[3731]	MOVE     	R0 R8 ; R0 := R8
	786	[3731]	MOVE     	R0 R4 ; R0 := R4
	787	[3731]	MOVE     	R0 R37 ; R0 := R37
	788	[3731]	MOVE     	R0 R6 ; R0 := R6
	789	[3731]	MOVE     	R0 R150 ; R0 := R150
	790	[3738]	CLOSURE  	R151 112 ; R151 := closure(Function #113)
	791	[3733]	SETGLOBAL	R151 K220 ; ForceShowMinimapProgressBar := R151
	792	[3742]	CLOSURE  	R151 113 ; R151 := closure(Function #114)
	793	[3740]	SETGLOBAL	R151 K221 ; ForceHideMinimapProgressBar := R151
	794	[3746]	CLOSURE  	R151 114 ; R151 := closure(Function #115)
	795	[3744]	SETGLOBAL	R151 K222 ; SetMinimapProgressText := R151
	796	[3748]	LOADNIL  	R151 R151 ; R151 := nil
	797	[3763]	CLOSURE  	R152 115 ; R152 := closure(Function #116)
	798	[3763]	MOVE     	R0 R151 ; R0 := R151
	799	[3763]	MOVE     	R0 R13 ; R0 := R13
	800	[3749]	SETGLOBAL	R152 K223 ; SetMinimapProgressValue := R152
	801	[3771]	CLOSURE  	R152 116 ; R152 := closure(Function #117)
	802	[3771]	MOVE     	R0 R4 ; R0 := R4
	803	[3771]	MOVE     	R0 R64 ; R0 := R64
	804	[4021]	CLOSURE  	R153 117 ; R153 := closure(Function #118)
	805	[4021]	MOVE     	R0 R32 ; R0 := R32
	806	[4021]	MOVE     	R0 R66 ; R0 := R66
	807	[4021]	MOVE     	R0 R146 ; R0 := R146
	808	[4021]	MOVE     	R0 R8 ; R0 := R8
	809	[4021]	MOVE     	R0 R6 ; R0 := R6
	810	[4021]	MOVE     	R0 R4 ; R0 := R4
	811	[4021]	MOVE     	R0 R39 ; R0 := R39
	812	[4021]	MOVE     	R0 R64 ; R0 := R64
	813	[4021]	MOVE     	R0 R68 ; R0 := R68
	814	[4021]	MOVE     	R0 R18 ; R0 := R18
	815	[4021]	MOVE     	R0 R152 ; R0 := R152
	816	[4029]	CLOSURE  	R154 118 ; R154 := closure(Function #119)
	817	[4029]	MOVE     	R0 R153 ; R0 := R153
	818	[4023]	SETGLOBAL	R154 K224 ; ShowBasicImpactMessage := R154
	819	[4038]	CLOSURE  	R154 119 ; R154 := closure(Function #120)
	820	[4038]	MOVE     	R0 R15 ; R0 := R15
	821	[4038]	MOVE     	R0 R67 ; R0 := R67
	822	[4038]	MOVE     	R0 R38 ; R0 := R38
	823	[4082]	CLOSURE  	R155 120 ; R155 := closure(Function #121)
	824	[4082]	MOVE     	R0 R32 ; R0 := R32
	825	[4082]	MOVE     	R0 R15 ; R0 := R15
	826	[4092]	CLOSURE  	R156 121 ; R156 := closure(Function #122)
	827	[4092]	MOVE     	R0 R27 ; R0 := R27
	828	[4092]	MOVE     	R0 R28 ; R0 := R28
	829	[4084]	SETGLOBAL	R156 K225 ; RefreshGlowEffectsEnabled := R156
	830	[4152]	CLOSURE  	R156 122 ; R156 := closure(Function #123)
	831	[4152]	MOVE     	R0 R51 ; R0 := R51
	832	[4152]	MOVE     	R0 R16 ; R0 := R16
	833	[4152]	MOVE     	R0 R39 ; R0 := R39
	834	[4152]	MOVE     	R0 R11 ; R0 := R11
	835	[4152]	MOVE     	R0 R34 ; R0 := R34
	836	[4152]	MOVE     	R0 R38 ; R0 := R38
	837	[4152]	MOVE     	R0 R29 ; R0 := R29
	838	[4152]	MOVE     	R0 R27 ; R0 := R27
	839	[4152]	MOVE     	R0 R28 ; R0 := R28
	840	[4152]	MOVE     	R0 R26 ; R0 := R26
	841	[4152]	MOVE     	R0 R92 ; R0 := R92
	842	[4152]	MOVE     	R0 R93 ; R0 := R93
	843	[4152]	MOVE     	R0 R141 ; R0 := R141
	844	[4200]	CLOSURE  	R157 123 ; R157 := closure(Function #124)
	845	[4200]	MOVE     	R0 R27 ; R0 := R27
	846	[4200]	MOVE     	R0 R4 ; R0 := R4
	847	[4200]	MOVE     	R0 R41 ; R0 := R41
	848	[4200]	MOVE     	R0 R8 ; R0 := R8
	849	[4200]	MOVE     	R0 R145 ; R0 := R145
	850	[4200]	MOVE     	R0 R1 ; R0 := R1
	851	[4200]	MOVE     	R0 R2 ; R0 := R2
	852	[4214]	CLOSURE  	R158 124 ; R158 := closure(Function #125)
	853	[4214]	MOVE     	R0 R53 ; R0 := R53
	854	[4202]	SETGLOBAL	R158 K226 ; SetStatEffectColumns := R158
	855	[4507]	CLOSURE  	R158 125 ; R158 := closure(Function #126)
	856	[4507]	MOVE     	R0 R53 ; R0 := R53
	857	[4507]	MOVE     	R0 R18 ; R0 := R18
	858	[4507]	MOVE     	R0 R8 ; R0 := R8
	859	[4507]	MOVE     	R0 R39 ; R0 := R39
	860	[4507]	MOVE     	R0 R102 ; R0 := R102
	861	[4507]	MOVE     	R0 R0 ; R0 := R0
	862	[4525]	CLOSURE  	R159 126 ; R159 := closure(Function #127)
	863	[4525]	MOVE     	R0 R156 ; R0 := R156
	864	[4525]	MOVE     	R0 R51 ; R0 := R51
	865	[4525]	MOVE     	R0 R53 ; R0 := R53
	866	[4509]	SETGLOBAL	R159 K227 ; OnProfileSaved := R159
	867	[4533]	CLOSURE  	R159 127 ; R159 := closure(Function #128)
	868	[4533]	MOVE     	R0 R23 ; R0 := R23
	869	[4538]	CLOSURE  	R160 128 ; R160 := closure(Function #129)
	870	[4538]	MOVE     	R0 R8 ; R0 := R8
	871	[4543]	CLOSURE  	R161 129 ; R161 := closure(Function #130)
	872	[4543]	MOVE     	R0 R8 ; R0 := R8
	873	[4555]	CLOSURE  	R162 130 ; R162 := closure(Function #131)
	874	[4555]	MOVE     	R0 R26 ; R0 := R26
	875	[4559]	CLOSURE  	R163 131 ; R163 := closure(Function #132)
	876	[4559]	MOVE     	R0 R70 ; R0 := R70
	877	[4563]	CLOSURE  	R164 132 ; R164 := closure(Function #133)
	878	[4567]	CLOSURE  	R165 133 ; R165 := closure(Function #134)
	879	[4567]	MOVE     	R0 R27 ; R0 := R27
	880	[4571]	CLOSURE  	R166 134 ; R166 := closure(Function #135)
	881	[4571]	MOVE     	R0 R27 ; R0 := R27
	882	[4589]	CLOSURE  	R167 135 ; R167 := closure(Function #136)
	883	[4589]	MOVE     	R0 R8 ; R0 := R8
	884	[4589]	MOVE     	R0 R56 ; R0 := R56
	885	[4589]	MOVE     	R0 R39 ; R0 := R39
	886	[4598]	CLOSURE  	R168 136 ; R168 := closure(Function #137)
	887	[4598]	MOVE     	R0 R167 ; R0 := R167
	888	[4591]	SETGLOBAL	R168 K228 ; AbilityTimerComplete := R168
	889	[4608]	CLOSURE  	R168 137 ; R168 := closure(Function #138)
	890	[4653]	CLOSURE  	R169 138 ; R169 := closure(Function #139)
	891	[4653]	MOVE     	R0 R81 ; R0 := R81
	892	[4653]	MOVE     	R0 R122 ; R0 := R122
	893	[4653]	MOVE     	R0 R124 ; R0 := R124
	894	[4653]	MOVE     	R0 R123 ; R0 := R123
	895	[4653]	MOVE     	R0 R99 ; R0 := R99
	896	[4653]	MOVE     	R0 R100 ; R0 := R100
	897	[4653]	MOVE     	R0 R101 ; R0 := R101
	898	[4653]	MOVE     	R0 R153 ; R0 := R153
	899	[4653]	MOVE     	R0 R152 ; R0 := R152
	900	[4653]	MOVE     	R0 R154 ; R0 := R154
	901	[4653]	MOVE     	R0 R159 ; R0 := R159
	902	[4653]	MOVE     	R0 R160 ; R0 := R160
	903	[4653]	MOVE     	R0 R161 ; R0 := R161
	904	[4653]	MOVE     	R0 R162 ; R0 := R162
	905	[4653]	MOVE     	R0 R163 ; R0 := R163
	906	[4653]	MOVE     	R0 R164 ; R0 := R164
	907	[4653]	MOVE     	R0 R165 ; R0 := R165
	908	[4653]	MOVE     	R0 R126 ; R0 := R126
	909	[4653]	MOVE     	R0 R127 ; R0 := R127
	910	[4653]	MOVE     	R0 R85 ; R0 := R85
	911	[4653]	MOVE     	R0 R166 ; R0 := R166
	912	[4653]	MOVE     	R0 R167 ; R0 := R167
	913	[4653]	MOVE     	R0 R168 ; R0 := R168
	914	[4653]	MOVE     	R0 R97 ; R0 := R97
	915	[4653]	MOVE     	R0 R98 ; R0 := R98
	916	[4653]	MOVE     	R0 R15 ; R0 := R15
	917	[4653]	MOVE     	R0 R83 ; R0 := R83
	918	[4653]	MOVE     	R0 R11 ; R0 := R11
	919	[4653]	MOVE     	R0 R38 ; R0 := R38
	920	[4752]	CLOSURE  	R170 139 ; R170 := closure(Function #140)
	921	[4752]	MOVE     	R0 R36 ; R0 := R36
	922	[4752]	MOVE     	R0 R9 ; R0 := R9
	923	[4752]	MOVE     	R0 R8 ; R0 := R8
	924	[4752]	MOVE     	R0 R39 ; R0 := R39
	925	[4792]	CLOSURE  	R79 140 ; R79 := closure(Function #141)
	926	[4792]	MOVE     	R0 R41 ; R0 := R41
	927	[4792]	MOVE     	R0 R106 ; R0 := R106
	928	[4792]	MOVE     	R0 R142 ; R0 := R142
	929	[4792]	MOVE     	R0 R8 ; R0 := R8
	930	[4797]	CLOSURE  	R171 141 ; R171 := closure(Function #142)
	931	[4797]	MOVE     	R0 R79 ; R0 := R79
	932	[4794]	SETGLOBAL	R171 K229 ; UpdateAmmo := R171
	933	[4857]	CLOSURE  	R171 142 ; R171 := closure(Function #143)
	934	[4857]	MOVE     	R0 R15 ; R0 := R15
	935	[4857]	MOVE     	R0 R38 ; R0 := R38
	936	[4857]	MOVE     	R0 R40 ; R0 := R40
	937	[4857]	MOVE     	R0 R2 ; R0 := R2
	938	[4857]	MOVE     	R0 R79 ; R0 := R79
	939	[5325]	CLOSURE  	R172 143 ; R172 := closure(Function #144)
	940	[5325]	MOVE     	R0 R16 ; R0 := R16
	941	[5325]	MOVE     	R0 R82 ; R0 := R82
	942	[5325]	MOVE     	R0 R4 ; R0 := R4
	943	[5325]	MOVE     	R0 R105 ; R0 := R105
	944	[5325]	MOVE     	R0 R32 ; R0 := R32
	945	[5325]	MOVE     	R0 R156 ; R0 := R156
	946	[5325]	MOVE     	R0 R6 ; R0 := R6
	947	[5325]	MOVE     	R0 R75 ; R0 := R75
	948	[5325]	MOVE     	R0 R23 ; R0 := R23
	949	[5325]	MOVE     	R0 R90 ; R0 := R90
	950	[5325]	MOVE     	R0 R89 ; R0 := R89
	951	[5325]	MOVE     	R0 R15 ; R0 := R15
	952	[5325]	MOVE     	R0 R10 ; R0 := R10
	953	[5325]	MOVE     	R0 R38 ; R0 := R38
	954	[5325]	MOVE     	R0 R73 ; R0 := R73
	955	[5325]	MOVE     	R0 R67 ; R0 := R67
	956	[5325]	MOVE     	R0 R170 ; R0 := R170
	957	[5325]	MOVE     	R0 R149 ; R0 := R149
	958	[5325]	MOVE     	R0 R150 ; R0 := R150
	959	[5325]	MOVE     	R0 R48 ; R0 := R48
	960	[5325]	MOVE     	R0 R8 ; R0 := R8
	961	[5325]	MOVE     	R0 R27 ; R0 := R27
	962	[5325]	MOVE     	R0 R25 ; R0 := R25
	963	[5325]	MOVE     	R0 R5 ; R0 := R5
	964	[5325]	MOVE     	R0 R74 ; R0 := R74
	965	[5325]	MOVE     	R0 R11 ; R0 := R11
	966	[5325]	MOVE     	R0 R18 ; R0 := R18
	967	[5325]	MOVE     	R0 R34 ; R0 := R34
	968	[5325]	MOVE     	R0 R81 ; R0 := R81
	969	[5325]	MOVE     	R0 R84 ; R0 := R84
	970	[5325]	MOVE     	R0 R171 ; R0 := R171
	971	[5325]	MOVE     	R0 R147 ; R0 := R147
	972	[5325]	MOVE     	R0 R44 ; R0 := R44
	973	[5325]	MOVE     	R0 R87 ; R0 := R87
	974	[5325]	MOVE     	R0 R0 ; R0 := R0
	975	[5325]	MOVE     	R0 R155 ; R0 := R155
	976	[5325]	MOVE     	R0 R61 ; R0 := R61
	977	[5325]	MOVE     	R0 R158 ; R0 := R158
	978	[5325]	MOVE     	R0 R169 ; R0 := R169
	979	[5325]	MOVE     	R0 R72 ; R0 := R72
	980	[4859]	SETGLOBAL	R172 K230 ; Initialize := R172
	981	[5329]	CLOSURE  	R172 144 ; R172 := closure(Function #145)
	982	[5329]	MOVE     	R0 R4 ; R0 := R4
	983	[5327]	SETGLOBAL	R172 K231 ; ScreenDuck := R172
	984	[5341]	CLOSURE  	R172 145 ; R172 := closure(Function #146)
	985	[5341]	MOVE     	R0 R49 ; R0 := R49
	986	[5331]	SETGLOBAL	R172 K232 ; StatusEffectChanged := R172
	987	[5346]	CLOSURE  	R172 146 ; R172 := closure(Function #147)
	988	[5346]	MOVE     	R0 R49 ; R0 := R49
	989	[5343]	SETGLOBAL	R172 K233 ; OnPlayerInventoryChanged := R172
	990	[5363]	CLOSURE  	R172 147 ; R172 := closure(Function #148)
	991	[5363]	MOVE     	R0 R51 ; R0 := R51
	992	[5363]	MOVE     	R0 R16 ; R0 := R16
	993	[5348]	SETGLOBAL	R172 K234 ; ToggleSquad := R172
	994	[5377]	CLOSURE  	R172 148 ; R172 := closure(Function #149)
	995	[5377]	MOVE     	R0 R15 ; R0 := R15
	996	[5377]	MOVE     	R0 R38 ; R0 := R38
	997	[5377]	MOVE     	R0 R25 ; R0 := R25
	998	[5377]	MOVE     	R0 R27 ; R0 := R27
	999	[5365]	SETGLOBAL	R172 K235 ; onHudMarginsChanged := R172
	1000	[5389]	CLOSURE  	R172 149 ; R172 := closure(Function #150)
	1001	[5389]	MOVE     	R0 R15 ; R0 := R15
	1002	[5379]	SETGLOBAL	R172 K236 ; HideAllExceptImpact := R172
	1003	[5401]	CLOSURE  	R172 150 ; R172 := closure(Function #151)
	1004	[5401]	MOVE     	R0 R70 ; R0 := R70
	1005	[5391]	SETGLOBAL	R172 K237 ; SetPartialFadeValues := R172
	1006	[5433]	CLOSURE  	R172 151 ; R172 := closure(Function #152)
	1007	[5433]	MOVE     	R0 R60 ; R0 := R60
	1008	[5433]	MOVE     	R0 R59 ; R0 := R59
	1009	[5433]	MOVE     	R0 R8 ; R0 := R8
	1010	[5433]	MOVE     	R0 R6 ; R0 := R6
	1011	[5403]	SETGLOBAL	R172 K238 ; OnComboHitMultiplier := R172
	1012	[5438]	LOADNIL  	R172 R172 ; R172 := nil
	1013	[5439]	OP_LOADBOOL	R173 0 0 ; R173 := false
	1014	[5443]	CLOSURE  	R174 152 ; R174 := closure(Function #153)
	1015	[5443]	MOVE     	R0 R173 ; R0 := R173
	1016	[5441]	SETGLOBAL	R174 K239 ; Close_Dialog := R174
	1017	[5450]	CLOSURE  	R174 153 ; R174 := closure(Function #154)
	1018	[5450]	MOVE     	R0 R172 ; R0 := R172
	1019	[5478]	CLOSURE  	R175 154 ; R175 := closure(Function #155)
	1020	[5478]	MOVE     	R0 R7 ; R0 := R7
	1021	[5478]	MOVE     	R0 R174 ; R0 := R174
	1022	[5478]	MOVE     	R0 R173 ; R0 := R173
	1023	[5478]	MOVE     	R0 R8 ; R0 := R8
	1024	[5452]	SETGLOBAL	R175 K240 ; HUD_OnFindExternalSessionComplete := R175
	1025	[5494]	CLOSURE  	R175 155 ; R175 := closure(Function #156)
	1026	[5494]	MOVE     	R0 R173 ; R0 := R173
	1027	[5494]	MOVE     	R0 R172 ; R0 := R172
	1028	[5494]	MOVE     	R0 R8 ; R0 := R8
	1029	[5480]	SETGLOBAL	R175 K241 ; HUD_ExternalGameReady := R175
	1030	[5514]	CLOSURE  	R175 156 ; R175 := closure(Function #157)
	1031	[5514]	MOVE     	R0 R19 ; R0 := R19
	1032	[5496]	SETGLOBAL	R175 K242 ; SwitchSpectator := R175
	1033	[5518]	CLOSURE  	R175 157 ; R175 := closure(Function #158)
	1034	[5518]	MOVE     	R0 R125 ; R0 := R125
	1035	[5516]	SETGLOBAL	R175 K243 ; SetiOSLayout := R175
	1036	[5522]	CLOSURE  	R175 158 ; R175 := closure(Function #159)
	1037	[5520]	SETGLOBAL	R175 K244 ; SetMiniGameScore := R175
	1038	[5541]	CLOSURE  	R175 159 ; R175 := closure(Function #160)
	1039	[5541]	MOVE     	R0 R27 ; R0 := R27
	1040	[5545]	CLOSURE  	R176 160 ; R176 := closure(Function #161)
	1041	[5545]	MOVE     	R0 R81 ; R0 := R81
	1042	[5545]	MOVE     	R0 R175 ; R0 := R175
	1043	[5543]	SETGLOBAL	R176 K245 ; InitMiniGameMode := R176
	1044	[5549]	CLOSURE  	R176 161 ; R176 := closure(Function #162)
	1045	[5549]	MOVE     	R0 R42 ; R0 := R42
	1046	[5547]	SETGLOBAL	R176 K246 ; IsMissionTimerUp := R176
	1047	[5553]	CLOSURE  	R176 162 ; R176 := closure(Function #163)
	1048	[5551]	SETGLOBAL	R176 K247 ; ForceOpenScreenFromTopMenu := R176
	1049	[5575]	CLOSURE  	R176 163 ; R176 := closure(Function #164)
	1050	[5575]	MOVE     	R0 R157 ; R0 := R157
	1051	[5575]	MOVE     	R0 R27 ; R0 := R27
	1052	[5555]	SETGLOBAL	R176 K248 ; OnPowerModifierHeld := R176
	1053	[5588]	CLOSURE  	R176 164 ; R176 := closure(Function #165)
	1054	[5588]	MOVE     	R0 R6 ; R0 := R6
	1055	[5577]	SETGLOBAL	R176 K249 ; Disconnect := R176
	1056	[5594]	CLOSURE  	R176 165 ; R176 := closure(Function #166)
	1057	[5594]	MOVE     	R0 R4 ; R0 := R4
	1058	[5616]	CLOSURE  	R177 166 ; R177 := closure(Function #167)
	1059	[5616]	MOVE     	R0 R27 ; R0 := R27
	1060	[5616]	MOVE     	R0 R76 ; R0 := R76
	1061	[5616]	MOVE     	R0 R78 ; R0 := R78
	1062	[5616]	MOVE     	R0 R4 ; R0 := R4
	1063	[5616]	MOVE     	R0 R6 ; R0 := R6
	1064	[5616]	MOVE     	R0 R132 ; R0 := R132
	1065	[5616]	MOVE     	R0 R32 ; R0 := R32
	1066	[5616]	MOVE     	R0 R176 ; R0 := R176
	1067	[5596]	SETGLOBAL	R177 K250 ; OnInspect := R177
	1068	[5624]	CLOSURE  	R177 167 ; R177 := closure(Function #168)
	1069	[5629]	CLOSURE  	R178 168 ; R178 := closure(Function #169)
	1070	[5629]	MOVE     	R0 R6 ; R0 := R6
	1071	[5626]	SETGLOBAL	R178 K251 ; SyndicatePowerUp := R178
	1072	[5642]	CLOSURE  	R178 169 ; R178 := closure(Function #170)
	1073	[5642]	MOVE     	R0 R6 ; R0 := R6
	1074	[5642]	MOVE     	R0 R18 ; R0 := R18
	1075	[5642]	MOVE     	R0 R177 ; R0 := R177
	1076	[5631]	SETGLOBAL	R178 K252 ; SyndicatePowerActivated := R178
	1077	[5653]	CLOSURE  	R178 170 ; R178 := closure(Function #171)
	1078	[5672]	CLOSURE  	R179 171 ; R179 := closure(Function #172)
	1079	[5655]	SETGLOBAL	R179 K253 ; SimarisScanChallengeHack := R179
	1080	[5714]	CLOSURE  	R179 172 ; R179 := closure(Function #173)
	1081	[5714]	MOVE     	R0 R8 ; R0 := R8
	1082	[5714]	MOVE     	R0 R178 ; R0 := R178
	1083	[5674]	SETGLOBAL	R179 K254 ; ShowStandingEarned := R179
	1084	[5732]	CLOSURE  	R179 173 ; R179 := closure(Function #174)
	1085	[5732]	MOVE     	R0 R61 ; R0 := R61
	1086	[5732]	MOVE     	R0 R4 ; R0 := R4
	1087	[5732]	MOVE     	R0 R20 ; R0 := R20
	1088	[5732]	MOVE     	R0 R27 ; R0 := R27
	1089	[5732]	MOVE     	R0 R41 ; R0 := R41
	1090	[5716]	SETGLOBAL	R179 K255 ; IconCacheFlushed := R179
	1091	[5738]	CLOSURE  	R179 174 ; R179 := closure(Function #175)
	1092	[5738]	MOVE     	R0 R58 ; R0 := R58
	1093	[5738]	MOVE     	R0 R86 ; R0 := R86
	1094	[5738]	MOVE     	R0 R6 ; R0 := R6
	1095	[5734]	SETGLOBAL	R179 K256 ; CreateTreasureHuntFailTimer := R179
	1096	[5743]	CLOSURE  	R179 175 ; R179 := closure(Function #176)
	1097	[5743]	MOVE     	R0 R85 ; R0 := R85
	1098	[5743]	MOVE     	R0 R58 ; R0 := R58
	1099	[5740]	SETGLOBAL	R179 K257 ; DestroyTreasureHuntFailTimer := R179
	1100	[5778]	CLOSURE  	R179 176 ; R179 := closure(Function #177)
	1101	[5778]	MOVE     	R0 R36 ; R0 := R36
	1102	[5778]	MOVE     	R0 R8 ; R0 := R8
	1103	[5778]	MOVE     	R0 R22 ; R0 := R22
	1104	[5745]	SETGLOBAL	R179 K258 ; OnPreDeath := R179
	1105	[5787]	CLOSURE  	R179 177 ; R179 := closure(Function #178)
	1106	[5787]	MOVE     	R0 R26 ; R0 := R26
	1107	[5787]	MOVE     	R0 R38 ; R0 := R38
	1108	[5780]	SETGLOBAL	R179 K259 ; OnNewReticleMovie := R179
	1109	[5803]	CLOSURE  	R179 178 ; R179 := closure(Function #179)
	1110	[5789]	SETGLOBAL	R179 K260 ; OnFrameEnter := R179
	1111	[5813]	CLOSURE  	R179 179 ; R179 := closure(Function #180)
	1112	[5813]	MOVE     	R0 R8 ; R0 := R8
	1113	[5813]	MOVE     	R0 R38 ; R0 := R38
	1114	[5813]	MOVE     	R0 R6 ; R0 := R6
	1115	[5805]	SETGLOBAL	R179 K261 ; OnPerfectReload := R179
	1116	[5820]	CLOSURE  	R179 180 ; R179 := closure(Function #181)
	1117	[5820]	MOVE     	R0 R147 ; R0 := R147
	1118	[5815]	SETGLOBAL	R179 K262 ; OnGamepadTransition := R179
	1119	[5827]	CLOSURE  	R179 181 ; R179 := closure(Function #182)
	1120	[5827]	MOVE     	R0 R81 ; R0 := R81
	1121	[5822]	SETGLOBAL	R179 K263 ; SetGenericMessageScale := R179
	1122	[5827]	RETURN   	R0 1 ; return 


function #1 <?:276,278> (3 instructions, 12 bytes at 000002111EEE6150)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[277]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[277]	RETURN   	R0 2 ; return R0 
	3	[278]	RETURN   	R0 1 ; return 

function #2 <?:281,283> (2 instructions, 8 bytes at 000002111EEE61E0)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[282]	RETURN   	R0 2 ; return R0 
	2	[283]	RETURN   	R0 1 ; return 

function #3 <?:285,287> (4 instructions, 16 bytes at 00000211294989F0)
0 params, 2 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[286]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[286]	GETTABLE 	R0 R0 K0 ; R0 := R0[0x4fccd182]
	3	[286]	CALL     	R0 1 1 ; R0()
	4	[287]	RETURN   	R0 1 ; return 

function #4 <?:289,304> (35 instructions, 140 bytes at 0000021129498A80)
1+ param, 7 slots, 2 upvalues, 0 locals, 11 constants, 0 functions
	1	[290]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[290]	GETTABLE 	R2 R2 K0 ; R2 := R2["Initialized"]
	3	[290]	TEST     	R2 1 ; if R2 then PC := 6
	4	[290]	JMP      	6 ; PC := 6
	5	[291]	RETURN   	R0 1 ; return 
	6	[294]	GETUPVAL 	R2 U0 ; R2 := U0
	7	[294]	GETTABLE 	R2 R2 K1 ; R2 := R2["mDispatchingQueuedFuncs"]
	8	[294]	TEST     	R2 0 ; if not R2 then PC := 14
	9	[294]	JMP      	14 ; PC := 14
	10	[295]	MOVE     	R2 R0 ; R2 := R0
	11	[295]	VARARG   	R3 0 ; R3 := ...
	12	[295]	CALL     	R2 0 1 ; R2(R3,...)
	13	[295]	JMP      	35 ; PC := 35
	14	[297]	GETGLOBAL	R2 K2 ; R2 := 0x33bdd652
	15	[297]	GETTABLE 	R2 R2 K3 ; R2 := R2[0x23d5322f]
	16	[297]	GETUPVAL 	R3 U1 ; R3 := U1
	17	[297]	NEWTABLE 	R4 1 0 ; R4 := {}
	18	[297]	MOVE     	R5 R0 ; R5 := R0
	19	[297]	VARARG   	R6 0 ; R6 := ...
	20	[297]	SETLIST  	R4 0 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 0
	21	[297]	CALL     	R2 3 1 ; R2(R3,R4)
	22	[299]	GETUPVAL 	R2 U1 ; R2 := U1
	23	[299]	LEN      	R2 R2 ; R2 := # R2
	24	[299]	LT       	0 K4 R2 ; if 400.000000 >= R2 then PC := 35
	25	[299]	JMP      	35 ; PC := 35
	26	[299]	GETGLOBAL	R2 K5 ; R2 := 0x0032441c
	27	[299]	GETTABLE 	R2 R2 K6 ; R2 := R2["functionQueueOverflow"]
	28	[299]	EQ       	0 R2 K7 ; if R2 ~= nil then PC := 35
	29	[299]	JMP      	35 ; PC := 35
	30	[300]	GETGLOBAL	R2 K8 ; R2 := 0x484742b6
	31	[300]	LOADK    	R3 K9 ; R3 := "HudRedux queue overflow"
	32	[300]	CALL     	R2 2 1 ; R2(R3)
	33	[301]	GETGLOBAL	R2 K5 ; R2 := 0x0032441c
	34	[301]	SETTABLE 	R2 K6 K10 ; R2["functionQueueOverflow"] := true
	35	[304]	RETURN   	R0 1 ; return 

function #5 <?:306,332> (55 instructions, 220 bytes at 000002112C88B3E0)
1 param, 14 slots, 0 upvalues, 0 locals, 17 constants, 0 functions
	1	[307]	GETGLOBAL	R1 K0 ; R1 := 0x76ea806b
	2	[307]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x3f3ae64c]
	3	[307]	LOADK    	R3 := 0.000000
	4	[307]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	5	[308]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	6	[308]	MOVE     	R3 R1 ; R3 := R1
	7	[308]	CALL     	R2 2 2 ; R2 := R2(R3)
	8	[308]	TEST     	R2 1 ; if R2 then PC := 51
	9	[308]	JMP      	51 ; PC := 51
	10	[309]	SELF     	R2 R1 K3 ; R3 := R1; R2 := R1[0x40e9c32b]
	11	[309]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[310]	SELF     	R3 R2 K4 ; R4 := R2; R3 := R2[0x957b8ee0]
	13	[310]	MOVE     	R5 R0 ; R5 := R0
	14	[310]	CALL     	R3 3 1 ; R3(R4,R5)
	15	[312]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	16	[312]	GETGLOBAL	R4 K5 ; R4 := 0x89326c93
	17	[312]	CALL     	R3 2 2 ; R3 := R3(R4)
	18	[312]	TEST     	R3 1 ; if R3 then PC := 51
	19	[312]	JMP      	51 ; PC := 51
	20	[314]	GETGLOBAL	R3 K5 ; R3 := 0x89326c93
	21	[314]	SELF     	R3 R3 K6 ; R4 := R3; R3 := R3[0x7f8e810c]
	22	[314]	GETGLOBAL	R5 K7 ; R5 := gHealthShieldDisplayType
	23	[314]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	24	[315]	GETGLOBAL	R4 K8 ; R4 := 0xc8802016
	25	[315]	MOVE     	R5 R3 ; R5 := R3
	26	[315]	CALL     	R4 2 4 ; R4,R5,R6 := R4(R5)
	27	[315]	JMP      	30 ; PC := 30
	28	[316]	SELF     	R9 R8 K9 ; R10 := R8; R9 := R8[0x087cbd3f]
	29	[316]	CALL     	R9 2 1 ; R9(R10)
	30	[315]	TFORLOOP 	R4 2 ; R7,R8 := R4(R5,R6); if R7 ~= nil then begin PC = 28; R6 := R7 end
	31	[316]	JMP      	28 ; PC := 28
	32	[319]	GETGLOBAL	R9 K5 ; R9 := 0x89326c93
	33	[319]	SELF     	R9 R9 K10 ; R10 := R9; R9 := R9[0xfb64e76c]
	34	[319]	CALL     	R9 2 2 ; R9 := R9(R10)
	35	[320]	GETGLOBAL	R10 K2 ; R10 := 0x7b998233
	36	[320]	MOVE     	R11 R9 ; R11 := R9
	37	[320]	CALL     	R10 2 2 ; R10 := R10(R11)
	38	[320]	TEST     	R10 1 ; if R10 then PC := 51
	39	[320]	JMP      	51 ; PC := 51
	40	[321]	SELF     	R10 R9 K11 ; R11 := R9; R10 := R9[0x474501e1]
	41	[321]	CALL     	R10 2 2 ; R10 := R10(R11)
	42	[322]	GETGLOBAL	R11 K2 ; R11 := 0x7b998233
	43	[322]	MOVE     	R12 R10 ; R12 := R10
	44	[322]	CALL     	R11 2 2 ; R11 := R11(R12)
	45	[322]	TEST     	R11 1 ; if R11 then PC := 51
	46	[322]	JMP      	51 ; PC := 51
	47	[323]	SELF     	R11 R10 K12 ; R12 := R10; R11 := R10[0xacf046ff]
	48	[323]	CALL     	R11 2 1 ; R11(R12)
	49	[324]	SELF     	R11 R10 K13 ; R12 := R10; R11 := R10[0x3b6bd6b1]
	50	[324]	CALL     	R11 2 1 ; R11(R12)
	51	[331]	GETGLOBAL	R11 K14 ; R11 := 0x53a48847
	52	[331]	GETGLOBAL	R12 K15 ; R12 := 0x25d99d89
	53	[331]	LOADK    	R13 K16 ; R13 := "OnProfileSaved"
	54	[331]	CALL     	R11 3 1 ; R11(R12,R13)
	55	[332]	RETURN   	R0 1 ; return 

function #6 <?:334,339> (14 instructions, 56 bytes at 0000021130800760)
1 param, 4 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[335]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[335]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[335]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[335]	TEST     	R1 1 ; if R1 then PC := 11
	5	[335]	JMP      	11 ; PC := 11
	6	[336]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[336]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xef9a3ee6]
	8	[336]	MOVE     	R3 R0 ; R3 := R0
	9	[336]	TAILCALL 	R1 3 0 ; R1,... := R1(R2,R3)
	10	[336]	RETURN   	R1 0 ; return R1,... 
	11	[338]	GETGLOBAL	R1 K2 ; R1 := 0x0032441c
	12	[338]	GETTABLE 	R1 R1 K3 ; R1 := R1["UIColor_White"]
	13	[338]	RETURN   	R1 2 ; return R1 
	14	[339]	RETURN   	R0 1 ; return 

function #7 <?:341,383> (114 instructions, 456 bytes at 000002111DEC67B0)
1 param, 18 slots, 3 upvalues, 0 locals, 28 constants, 1 function
	1	[342]	LOADK    	R1 := 0.000000
	2	[343]	GETGLOBAL	R2 K0 ; R2 := 0x33bdd652
	3	[343]	GETTABLE 	R2 R2 K1 ; R2 := R2[0xf21b1d8e]
	4	[343]	GETTABLE 	R3 R0 K2 ; R3 := R0["List"]
	5	[350]	CLOSURE  	R4 0 ; R4 := closure(Function #1)
	6	[343]	CALL     	R2 3 1 ; R2(R3,R4)
	7	[351]	GETGLOBAL	R2 K3 ; R2 := 0xc8802016
	8	[351]	GETTABLE 	R3 R0 K2 ; R3 := R0["List"]
	9	[351]	CALL     	R2 2 4 ; R2,R3,R4 := R2(R3)
	10	[351]	JMP      	89 ; PC := 89
	11	[352]	GETTABLE 	R7 R6 K4 ; R7 := R6["NeedsInit"]
	12	[352]	TEST     	R7 1 ; if R7 then PC := 89
	13	[352]	JMP      	89 ; PC := 89
	14	[352]	GETTABLE 	R7 R6 K5 ; R7 := R6["Removing"]
	15	[352]	TEST     	R7 1 ; if R7 then PC := 89
	16	[352]	JMP      	89 ; PC := 89
	17	[353]	GETTABLE 	R7 R6 K6 ; R7 := R6["Data"]
	18	[353]	GETTABLE 	R7 R7 K7 ; R7 := R7["IgnoreStacking"]
	19	[353]	TEST     	R7 1 ; if R7 then PC := 25
	20	[353]	JMP      	25 ; PC := 25
	21	[353]	GETTABLE 	R7 R6 K6 ; R7 := R6["Data"]
	22	[353]	GETTABLE 	R7 R7 K8 ; R7 := R7["Visible"]
	23	[353]	EQ       	0 R7 K9 ; if R7 ~= false then PC := 47
	24	[353]	JMP      	47 ; PC := 47
	25	[354]	GETTABLE 	R7 R6 K6 ; R7 := R6["Data"]
	26	[354]	GETTABLE 	R7 R7 K10 ; R7 := R7["OffsetY"]
	27	[355]	GETTABLE 	R8 R6 K6 ; R8 := R6["Data"]
	28	[355]	GETTABLE 	R8 R8 K11 ; R8 := R8["Static"]
	29	[355]	TEST     	R8 0 ; if not R8 then PC := 40
	30	[355]	JMP      	40 ; PC := 40
	31	[355]	GETUPVAL 	R8 U0 ; R8 := U0
	32	[355]	SELF     	R8 R8 K12 ; R9 := R8; R8 := R8[0xf4ed1581]
	33	[355]	CALL     	R8 2 2 ; R8 := R8(R9)
	34	[355]	TEST     	R8 0 ; if not R8 then PC := 40
	35	[355]	JMP      	40 ; PC := 40
	36	[356]	GETUPVAL 	R8 U0 ; R8 := U0
	37	[356]	SELF     	R8 R8 K13 ; R9 := R8; R8 := R8[0x14959e23]
	38	[356]	CALL     	R8 2 2 ; R8 := R8(R9)
	39	[356]	ADD      	R7 R7 R8 ; R7 := R7 + R8
	40	[358]	GETGLOBAL	R8 K14 ; R8 := 0xae91e43b
	41	[358]	SELF     	R8 R8 K15 ; R9 := R8; R8 := R8[0x67bc869f]
	42	[358]	GETTABLE 	R10 R6 K16 ; R10 := R6["ClipName"]
	43	[358]	LOADK    	R11 := 1.000000
	44	[358]	MOVE     	R12 R7 ; R12 := R7
	45	[358]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	46	[358]	JMP      	76 ; PC := 76
	47	[360]	GETTABLE 	R8 R6 K6 ; R8 := R6["Data"]
	48	[360]	GETTABLE 	R8 R8 K10 ; R8 := R8["OffsetY"]
	49	[360]	ADD      	R8 R1 R8 ; R8 := R1 + R8
	50	[361]	GETGLOBAL	R9 K14 ; R9 := 0xae91e43b
	51	[361]	SELF     	R9 R9 K15 ; R10 := R9; R9 := R9[0x67bc869f]
	52	[361]	GETTABLE 	R11 R6 K16 ; R11 := R6["ClipName"]
	53	[361]	LOADK    	R12 := 1.000000
	54	[361]	MOVE     	R13 R8 ; R13 := R8
	55	[361]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	56	[362]	GETTABLE 	R9 R6 K6 ; R9 := R6["Data"]
	57	[362]	GETTABLE 	R9 R9 K17 ; R9 := R9["Height"]
	58	[362]	GETTABLE 	R10 R6 K6 ; R10 := R6["Data"]
	59	[362]	GETTABLE 	R10 R10 K10 ; R10 := R10["OffsetY"]
	60	[362]	ADD      	R9 R9 R10 ; R9 := R9 + R10
	61	[362]	LE       	0 K18 R9 ; if 0.000000 > R9 then PC := 69
	62	[362]	JMP      	69 ; PC := 69
	63	[363]	GETTABLE 	R9 R6 K6 ; R9 := R6["Data"]
	64	[363]	GETTABLE 	R9 R9 K17 ; R9 := R9["Height"]
	65	[363]	ADD      	R9 R1 R9 ; R9 := R1 + R9
	66	[363]	GETTABLE 	R10 R6 K6 ; R10 := R6["Data"]
	67	[363]	GETTABLE 	R10 R10 K10 ; R10 := R10["OffsetY"]
	68	[363]	ADD      	R1 R9 R10 ; R1 := R9 + R10
	69	[365]	GETTABLE 	R9 R6 K6 ; R9 := R6["Data"]
	70	[365]	GETTABLE 	R9 R9 K19 ; R9 := R9["Padding"]
	71	[365]	EQ       	1 R9 K20 ; if R9 == nil then PC := 76
	72	[365]	JMP      	76 ; PC := 76
	73	[366]	GETTABLE 	R9 R6 K6 ; R9 := R6["Data"]
	74	[366]	GETTABLE 	R9 R9 K19 ; R9 := R9["Padding"]
	75	[366]	ADD      	R1 R1 R9 ; R1 := R1 + R9
	76	[369]	GETTABLE 	R9 R6 K6 ; R9 := R6["Data"]
	77	[369]	GETTABLE 	R9 R9 K21 ; R9 := R9["OffsetX"]
	78	[369]	EQ       	1 R9 K18 ; if R9 == 0.000000 then PC := 89
	79	[369]	JMP      	89 ; PC := 89
	80	[370]	GETGLOBAL	R9 K14 ; R9 := 0xae91e43b
	81	[370]	SELF     	R9 R9 K15 ; R10 := R9; R9 := R9[0x67bc869f]
	82	[370]	GETTABLE 	R11 R6 K16 ; R11 := R6["ClipName"]
	83	[370]	LOADK    	R12 := 0.000000
	84	[370]	GETTABLE 	R13 R6 K22 ; R13 := R6["BaseX"]
	85	[370]	GETTABLE 	R14 R6 K6 ; R14 := R6["Data"]
	86	[370]	GETTABLE 	R14 R14 K21 ; R14 := R14["OffsetX"]
	87	[370]	ADD      	R13 R13 R14 ; R13 := R13 + R14
	88	[370]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	89	[351]	TFORLOOP 	R2 2 ; R5,R6 := R2(R3,R4); if R5 ~= nil then begin PC = 11; R4 := R5 end
	90	[372]	JMP      	11 ; PC := 11
	91	[375]	GETUPVAL 	R9 U1 ; R9 := U1
	92	[375]	EQ       	1 R9 R1 ; if R9 == R1 then PC := 114
	93	[375]	JMP      	114 ; PC := 114
	94	[376]	SETUPVAL 	R1 U1 ; U1 := R1
	95	[377]	GETGLOBAL	R9 K23 ; R9 := 0xcfc01047
	96	[377]	GETUPVAL 	R10 U2 ; R10 := U2
	97	[377]	CALL     	R9 2 4 ; R9,R10,R11 := R9(R10)
	98	[377]	JMP      	112 ; PC := 112
	99	[378]	GETTABLE 	R14 R13 K24 ; R14 := R13["ApplyTrackerOffset"]
	100	[378]	TEST     	R14 0 ; if not R14 then PC := 112
	101	[378]	JMP      	112 ; PC := 112
	102	[378]	GETGLOBAL	R14 K25 ; R14 := 0x7b998233
	103	[378]	GETTABLE 	R15 R13 K26 ; R15 := R13["Movie"]
	104	[378]	CALL     	R14 2 2 ; R14 := R14(R15)
	105	[378]	TEST     	R14 1 ; if R14 then PC := 112
	106	[378]	JMP      	112 ; PC := 112
	107	[379]	GETTABLE 	R14 R13 K26 ; R14 := R13["Movie"]
	108	[379]	SELF     	R14 R14 K27 ; R15 := R14; R14 := R14[0xe4162eed]
	109	[379]	LOADK    	R16 K24 ; R16 := "ApplyTrackerOffset"
	110	[379]	MOVE     	R17 R1 ; R17 := R1
	111	[379]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	112	[377]	TFORLOOP 	R9 2 ; R12,R13 := R9(R10,R11); if R12 ~= nil then begin PC = 99; R11 := R12 end
	113	[380]	JMP      	99 ; PC := 99
	114	[383]	RETURN   	R0 1 ; return 

function #8 <?:385,387> (4 instructions, 16 bytes at 000002111DEC68D0)
0 params, 2 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[386]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[386]	GETTABLE 	R0 R0 K0 ; R0 := R0[0x6f72d56e]
	3	[386]	CALL     	R0 1 1 ; R0()
	4	[387]	RETURN   	R0 1 ; return 

function #9 <?:389,391> (6 instructions, 24 bytes at 0000021174F63550)
2 params, 5 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[390]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[390]	GETTABLE 	R2 R2 K0 ; R2 := R2[0x1a41a3c1]
	3	[390]	MOVE     	R3 R0 ; R3 := R0
	4	[390]	MOVE     	R4 R1 ; R4 := R1
	5	[390]	CALL     	R2 3 1 ; R2(R3,R4)
	6	[391]	RETURN   	R0 1 ; return 

function #10 <?:393,395> (12 instructions, 48 bytes at 0000021174F635E0)
7 params, 15 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[394]	GETUPVAL 	R7 U0 ; R7 := U0
	2	[394]	GETTABLE 	R7 R7 K0 ; R7 := R7[0x8ee923fe]
	3	[394]	MOVE     	R8 R0 ; R8 := R0
	4	[394]	MOVE     	R9 R1 ; R9 := R1
	5	[394]	MOVE     	R10 R2 ; R10 := R2
	6	[394]	MOVE     	R11 R3 ; R11 := R3
	7	[394]	MOVE     	R12 R4 ; R12 := R4
	8	[394]	MOVE     	R13 R5 ; R13 := R5
	9	[394]	MOVE     	R14 R6 ; R14 := R6
	10	[394]	TAILCALL 	R7 8 0 ; R7,... := R7(R8,R9,R10,R11,R12,R13,R14)
	11	[394]	RETURN   	R7 0 ; return R7,... 
	12	[395]	RETURN   	R0 1 ; return 

function #11 <?:399,417> (77 instructions, 308 bytes at 0000021174F636B0)
1 param, 12 slots, 1 upvalue, 0 locals, 16 constants, 0 functions
	1	[401]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	2	[401]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x42b04007]
	3	[401]	MOVE     	R3 R0 ; R3 := R0
	4	[401]	OP_LOADBOOL	R4 1 0 ; R4 := true
	5	[401]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	6	[401]	MOVE     	R0 R1 ; R0 := R1
	7	[402]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	8	[402]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0x20b98db3]
	9	[402]	LOADK    	R3 K3 ; R3 := "QuestMessage.Text.text"
	10	[402]	MOVE     	R4 R0 ; R4 := R0
	11	[402]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	12	[403]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	13	[403]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x91a24e4b]
	14	[403]	LOADK    	R3 K5 ; R3 := "QuestMessage.Text"
	15	[403]	LOADK    	R4 := 33.000000
	16	[403]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	17	[405]	MUL      	R2 R1 K6 ; R2 := R1 * 1.450000
	18	[406]	GETGLOBAL	R3 K0 ; R3 := 0xae91e43b
	19	[406]	SELF     	R3 R3 K7 ; R4 := R3; R3 := R3[0x5f56eeab]
	20	[406]	LOADK    	R5 K5 ; R5 := "QuestMessage.Text"
	21	[406]	LOADK    	R6 := 29.000000
	22	[406]	LOADK    	R7 K8 ; R7 := ""
	23	[406]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	24	[407]	GETGLOBAL	R3 K0 ; R3 := 0xae91e43b
	25	[407]	SELF     	R3 R3 K9 ; R4 := R3; R3 := R3[0x67bc869f]
	26	[407]	LOADK    	R5 K10 ; R5 := "QuestMessage"
	27	[407]	LOADK    	R6 := 5.000000
	28	[407]	LOADK    	R7 := 100.000000
	29	[407]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	30	[408]	GETGLOBAL	R3 K0 ; R3 := 0xae91e43b
	31	[408]	SELF     	R3 R3 K9 ; R4 := R3; R3 := R3[0x67bc869f]
	32	[408]	LOADK    	R5 K10 ; R5 := "QuestMessage"
	33	[408]	LOADK    	R6 := 6.000000
	34	[408]	LOADK    	R7 := 100.000000
	35	[408]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	36	[411]	GETGLOBAL	R3 K0 ; R3 := 0xae91e43b
	37	[411]	SELF     	R3 R3 K9 ; R4 := R3; R3 := R3[0x67bc869f]
	38	[411]	LOADK    	R5 K11 ; R5 := "QuestMessage.Line"
	39	[411]	LOADK    	R6 := 12.000000
	40	[411]	LOADK    	R7 := 1.000000
	41	[411]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	42	[413]	GETUPVAL 	R3 U0 ; R3 := U0
	43	[413]	GETTABLE 	R3 R3 K12 ; R3 := R3[0xf6e70fb6]
	44	[413]	GETGLOBAL	R4 K0 ; R4 := 0xae91e43b
	45	[413]	LOADNIL  	R5 R5 ; R5 := nil
	46	[413]	LOADK    	R6 K5 ; R6 := "QuestMessage.Text"
	47	[413]	MOVE     	R7 R0 ; R7 := R0
	48	[413]	LOADNIL  	R8 R8 ; R8 := nil
	49	[413]	CALL     	R3 6 1 ; R3(R4,R5,R6,R7,R8)
	50	[414]	GETGLOBAL	R3 K13 ; R3 := 0x25312c9b
	51	[414]	GETGLOBAL	R4 K0 ; R4 := 0xae91e43b
	52	[414]	LOADK    	R5 K10 ; R5 := "QuestMessage"
	53	[414]	LOADK    	R6 := 8.000000
	54	[414]	NEWTABLE 	R7 1 0 ; R7 := {}
	55	[414]	LOADK    	R8 := 10.000000
	56	[414]	SETLIST  	R7 1 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
	57	[414]	NEWTABLE 	R8 1 0 ; R8 := {}
	58	[414]	LOADK    	R9 := 100.000000
	59	[414]	SETLIST  	R8 1 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
	60	[414]	LOADK    	R9 K15 ; R9 := 0.350000
	61	[414]	LOADK    	R10 := 0.000000
	62	[414]	LOADNIL  	R11 R11 ; R11 := nil
	63	[414]	CALL     	R3 9 1 ; R3(R4,R5,R6,R7,R8,R9,R10,R11)
	64	[415]	GETGLOBAL	R3 K13 ; R3 := 0x25312c9b
	65	[415]	GETGLOBAL	R4 K0 ; R4 := 0xae91e43b
	66	[415]	LOADK    	R5 K11 ; R5 := "QuestMessage.Line"
	67	[415]	LOADK    	R6 := 8.000000
	68	[415]	NEWTABLE 	R7 1 0 ; R7 := {}
	69	[415]	LOADK    	R8 := 12.000000
	70	[415]	SETLIST  	R7 1 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
	71	[415]	NEWTABLE 	R8 1 0 ; R8 := {}
	72	[415]	MOVE     	R9 R2 ; R9 := R2
	73	[415]	SETLIST  	R8 1 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
	74	[415]	LOADK    	R9 K15 ; R9 := 0.350000
	75	[415]	LOADK    	R10 := 0.000000
	76	[415]	CALL     	R3 8 1 ; R3(R4,R5,R6,R7,R8,R9,R10)
	77	[417]	RETURN   	R0 1 ; return 

function #12 <?:419,423> (19 instructions, 76 bytes at 000002111F925CF0)
0 params, 9 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[420]	GETGLOBAL	R0 K0 ; R0 := 0x25312c9b
	2	[420]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	3	[420]	LOADK    	R2 K2 ; R2 := "QuestMessage"
	4	[420]	LOADK    	R3 := 8.000000
	5	[420]	NEWTABLE 	R4 3 0 ; R4 := {}
	6	[420]	LOADK    	R5 := 10.000000
	7	[420]	LOADK    	R6 := 5.000000
	8	[420]	LOADK    	R7 := 6.000000
	9	[420]	SETLIST  	R4 3 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 3
	10	[420]	NEWTABLE 	R5 3 0 ; R5 := {}
	11	[420]	LOADK    	R6 := 0.000000
	12	[420]	LOADK    	R7 := 140.000000
	13	[420]	LOADK    	R8 := 140.000000
	14	[420]	SETLIST  	R5 3 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 3
	15	[420]	LOADK    	R6 K4 ; R6 := 0.350000
	16	[420]	LOADK    	R7 := 0.000000
	17	[420]	LOADNIL  	R8 R8 ; R8 := nil
	18	[420]	CALL     	R0 9 1 ; R0(R1,R2,R3,R4,R5,R6,R7,R8)
	19	[423]	RETURN   	R0 1 ; return 

function #13 <?:426,438> (38 instructions, 152 bytes at 0000021134FECF50)
1 param, 8 slots, 1 upvalue, 0 locals, 10 constants, 0 functions
	1	[427]	EQ       	1 R0 K0 ; if R0 == "" then PC := 32
	2	[427]	JMP      	32 ; PC := 32
	3	[427]	GETGLOBAL	R1 K1 ; R1 := 0x0032441c
	4	[427]	GETTABLE 	R1 R1 K2 ; R1 := R1["StalkerMode"]
	5	[427]	TEST     	R1 1 ; if R1 then PC := 32
	6	[427]	JMP      	32 ; PC := 32
	7	[428]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	8	[428]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x42b04007]
	9	[428]	MOVE     	R3 R0 ; R3 := R0
	10	[428]	OP_LOADBOOL	R4 1 0 ; R4 := true
	11	[428]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	12	[430]	GETGLOBAL	R2 K5 ; R2 := _T
	13	[430]	GETTABLE 	R2 R2 K6 ; R2 := R2["GenericMessageNoAnimateTyping"]
	14	[430]	TEST     	R2 0 ; if not R2 then PC := 23
	15	[430]	JMP      	23 ; PC := 23
	16	[431]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	17	[431]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0x5f56eeab]
	18	[431]	LOADK    	R4 K8 ; R4 := "GenericMessage.Text"
	19	[431]	LOADK    	R5 := 29.000000
	20	[431]	MOVE     	R6 R1 ; R6 := R1
	21	[431]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	22	[431]	JMP      	38 ; PC := 38
	23	[433]	GETUPVAL 	R2 U0 ; R2 := U0
	24	[433]	GETTABLE 	R2 R2 K9 ; R2 := R2[0xf6e70fb6]
	25	[433]	GETGLOBAL	R3 K3 ; R3 := 0xae91e43b
	26	[433]	LOADNIL  	R4 R4 ; R4 := nil
	27	[433]	LOADK    	R5 K8 ; R5 := "GenericMessage.Text"
	28	[433]	MOVE     	R6 R1 ; R6 := R1
	29	[433]	LOADNIL  	R7 R7 ; R7 := nil
	30	[433]	CALL     	R2 6 1 ; R2(R3,R4,R5,R6,R7)
	31	[434]	JMP      	38 ; PC := 38
	32	[436]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	33	[436]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0x5f56eeab]
	34	[436]	LOADK    	R4 K8 ; R4 := "GenericMessage.Text"
	35	[436]	LOADK    	R5 := 29.000000
	36	[436]	LOADK    	R6 K0 ; R6 := ""
	37	[436]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	38	[438]	RETURN   	R0 1 ; return 

function #14 <?:441,443> (9 instructions, 36 bytes at 000002112EAFDA00)
0 params, 5 slots, 2 upvalues, 0 locals, 3 constants, 0 functions
	1	[442]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[442]	GETUPVAL 	R1 U1 ; R1 := U1
	3	[442]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xbd2e96ea]
	4	[442]	LOADK    	R3 := 5.000000
	5	[442]	GETUPVAL 	R4 U0 ; R4 := U0
	6	[442]	GETTABLE 	R4 R4 K2 ; R4 := R4["Hide"]
	7	[442]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	8	[442]	SETTABLE 	R0 K0 R1 ; R0["timerId"] := R1
	9	[443]	RETURN   	R0 1 ; return 

function #15 <?:447,550> (64 instructions, 256 bytes at 000002112EAFDB10)
0 params, 5 slots, 6 upvalues, 0 locals, 22 constants, 4 functions
	1	[448]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[448]	GETGLOBAL	R1 K1 ; R1 := 0x0469f296
	3	[448]	CALL     	R1 1 2 ; R1 := R1()
	4	[448]	SETTABLE 	R0 K0 R1 ; R0["mTimerName"] := R1
	5	[449]	GETUPVAL 	R0 U0 ; R0 := U0
	6	[455]	CLOSURE  	R1 0 ; R1 := closure(Function #1)
	7	[455]	GETUPVAL 	R0 U1 ; R0 := U1
	8	[455]	SETTABLE 	R0 K2 R1 ; R0["Show"] := R1
	9	[457]	GETUPVAL 	R0 U0 ; R0 := U0
	10	[530]	CLOSURE  	R1 1 ; R1 := closure(Function #2)
	11	[530]	GETUPVAL 	R0 U0 ; R0 := U0
	12	[530]	GETUPVAL 	R0 U2 ; R0 := U2
	13	[530]	GETUPVAL 	R0 U3 ; R0 := U3
	14	[530]	GETUPVAL 	R0 U4 ; R0 := U4
	15	[530]	GETUPVAL 	R0 U5 ; R0 := U5
	16	[530]	SETTABLE 	R0 K3 R1 ; R0["Update"] := R1
	17	[532]	GETUPVAL 	R0 U0 ; R0 := U0
	18	[541]	CLOSURE  	R1 2 ; R1 := closure(Function #3)
	19	[541]	GETUPVAL 	R0 U2 ; R0 := U2
	20	[541]	GETUPVAL 	R0 U0 ; R0 := U0
	21	[541]	GETUPVAL 	R0 U4 ; R0 := U4
	22	[541]	SETTABLE 	R0 K4 R1 ; R0["Hide"] := R1
	23	[542]	GETUPVAL 	R0 U0 ; R0 := U0
	24	[542]	GETUPVAL 	R1 U1 ; R1 := U1
	25	[542]	GETTABLE 	R1 R1 K6 ; R1 := R1[0x4c3dfdb3]
	26	[542]	NEWTABLE 	R2 0 2 ; R2 := {}
	27	[542]	SETTABLE 	R2 K7 K8 ; R2["time"] := -1.000000
	28	[542]	SETTABLE 	R2 K9 K10 ; R2["timerStopped"] := true
	29	[542]	GETUPVAL 	R3 U0 ; R3 := U0
	30	[542]	GETTABLE 	R3 R3 K3 ; R3 := R3["Update"]
	31	[542]	CLOSURE  	R4 3 ; R4 := closure(Function #4)
	32	[542]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	33	[542]	SETTABLE 	R0 K5 R1 ; R0["timer"] := R1
	34	[544]	GETGLOBAL	R0 K11 ; R0 := 0xae91e43b
	35	[544]	SELF     	R0 R0 K12 ; R1 := R0; R0 := R0[0x67bc869f]
	36	[544]	LOADK    	R2 K13 ; R2 := "MiniMapContainer.MissionCountdown"
	37	[544]	LOADK    	R3 := 10.000000
	38	[544]	LOADK    	R4 := 0.000000
	39	[544]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	40	[545]	GETGLOBAL	R0 K11 ; R0 := 0xae91e43b
	41	[545]	SELF     	R0 R0 K14 ; R1 := R0; R0 := R0[0x20b98db3]
	42	[545]	LOADK    	R2 K15 ; R2 := "MiniMapContainer.MissionCountdown.Title.text"
	43	[545]	LOADK    	R3 K16 ; R3 := "/Lotus/Language/Menu/AlertPopup_Time"
	44	[545]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	45	[546]	GETGLOBAL	R0 K11 ; R0 := 0xae91e43b
	46	[546]	SELF     	R0 R0 K12 ; R1 := R0; R0 := R0[0x67bc869f]
	47	[546]	LOADK    	R2 K17 ; R2 := "MiniMapContainer.DefenseTarget.LostHealth"
	48	[546]	LOADK    	R3 := 10.000000
	49	[546]	LOADK    	R4 := 0.000000
	50	[546]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	51	[547]	GETGLOBAL	R0 K11 ; R0 := 0xae91e43b
	52	[547]	SELF     	R0 R0 K12 ; R1 := R0; R0 := R0[0x67bc869f]
	53	[547]	LOADK    	R2 K18 ; R2 := "MiniMapContainer.DefenseTarget.LostHealth.Label"
	54	[547]	LOADK    	R3 := 36.000000
	55	[547]	GETGLOBAL	R4 K19 ; R4 := 0x0032441c
	56	[547]	GETTABLE 	R4 R4 K20 ; R4 := R4["UIColor_Red"]
	57	[547]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	58	[549]	GETGLOBAL	R0 K11 ; R0 := 0xae91e43b
	59	[549]	SELF     	R0 R0 K12 ; R1 := R0; R0 := R0[0x67bc869f]
	60	[549]	LOADK    	R2 K21 ; R2 := "BorderBox"
	61	[549]	LOADK    	R3 := 10.000000
	62	[549]	LOADK    	R4 := 0.000000
	63	[549]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	64	[550]	RETURN   	R0 1 ; return 

function #16 <?:552,558> (24 instructions, 96 bytes at 000002112F757110)
3 params, 9 slots, 1 upvalue, 0 locals, 7 constants, 0 functions
	1	[553]	TEST     	R1 1 ; if R1 then PC := 4
	2	[553]	JMP      	4 ; PC := 4
	3	[553]	LOADK    	R1 K0 ; R1 := ""
	4	[554]	GETGLOBAL	R3 K1 ; R3 := 0x7f5022cf
	5	[554]	GETTABLE 	R3 R3 K2 ; R3 := R3[0xa5c556b9]
	6	[554]	MOVE     	R4 R1 ; R4 := R1
	7	[554]	LOADK    	R5 K3 ; R5 := "<p>"
	8	[554]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	9	[554]	TEST     	R3 1 ; if R3 then PC := 16
	10	[554]	JMP      	16 ; PC := 16
	11	[555]	GETGLOBAL	R3 K1 ; R3 := 0x7f5022cf
	12	[555]	GETTABLE 	R3 R3 K4 ; R3 := R3[0x3f3e4d12]
	13	[555]	MOVE     	R4 R1 ; R4 := R1
	14	[555]	CALL     	R3 2 2 ; R3 := R3(R4)
	15	[555]	MOVE     	R1 R3 ; R1 := R3
	16	[557]	GETUPVAL 	R3 U0 ; R3 := U0
	17	[557]	GETTABLE 	R3 R3 K5 ; R3 := R3[0xf6e70fb6]
	18	[557]	GETGLOBAL	R4 K6 ; R4 := 0xae91e43b
	19	[557]	LOADNIL  	R5 R5 ; R5 := nil
	20	[557]	MOVE     	R6 R0 ; R6 := R0
	21	[557]	MOVE     	R7 R1 ; R7 := R1
	22	[557]	MOVE     	R8 R2 ; R8 := R2
	23	[557]	CALL     	R3 6 1 ; R3(R4,R5,R6,R7,R8)
	24	[558]	RETURN   	R0 1 ; return 

function #17 <?:561,567> (11 instructions, 44 bytes at 000002112120FB10)
0 params, 5 slots, 1 upvalue, 0 locals, 4 constants, 1 function
	1	[562]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[565]	CLOSURE  	R1 0 ; R1 := closure(Function #1)
	3	[565]	GETUPVAL 	R0 U0 ; R0 := U0
	4	[565]	SETTABLE 	R0 K0 R1 ; R0["CalculatePosition"] := R1
	5	[566]	GETGLOBAL	R0 K1 ; R0 := 0xae91e43b
	6	[566]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x67bc869f]
	7	[566]	LOADK    	R2 K3 ; R2 := "AbilityPanel.AbilityMessage"
	8	[566]	LOADK    	R3 := 10.000000
	9	[566]	LOADK    	R4 := 0.000000
	10	[566]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	11	[567]	RETURN   	R0 1 ; return 

function #18 <?:569,574> (15 instructions, 60 bytes at 000002112F1F54B0)
1 param, 4 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[570]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[570]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[570]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[570]	TEST     	R1 1 ; if R1 then PC := 15
	5	[570]	JMP      	15 ; PC := 15
	6	[571]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[571]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x2ec867ea]
	8	[571]	EQ       	0 R0 K2 ; if R0 ~= "false" then PC := 11
	9	[571]	JMP      	11 ; PC := 11
	10	[571]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 11
	11	[571]	OP_LOADBOOL	R3 1 0 ; R3 := true
	12	[571]	CALL     	R1 3 1 ; R1(R2,R3)
	13	[572]	GETGLOBAL	R1 K3 ; R1 := _T
	14	[572]	SETTABLE 	R1 K4 K5 ; R1["reticleState"] := false
	15	[574]	RETURN   	R0 1 ; return 

function #19 <?:576,581> (43 instructions, 172 bytes at 000002117F837CC0)
1 param, 4 slots, 2 upvalues, 0 locals, 11 constants, 0 functions
	1	[577]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[577]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[577]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[577]	TEST     	R1 1 ; if R1 then PC := 43
	5	[577]	JMP      	43 ; PC := 43
	6	[577]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	7	[577]	GETUPVAL 	R2 U1 ; R2 := U1
	8	[577]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[577]	TEST     	R1 1 ; if R1 then PC := 23
	10	[577]	JMP      	23 ; PC := 23
	11	[577]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	12	[577]	GETUPVAL 	R2 U1 ; R2 := U1
	13	[577]	GETTABLE 	R2 R2 K1 ; R2 := R2["InventoryController"]
	14	[577]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[577]	TEST     	R1 1 ; if R1 then PC := 23
	16	[577]	JMP      	23 ; PC := 23
	17	[577]	GETUPVAL 	R1 U1 ; R1 := U1
	18	[577]	GETTABLE 	R1 R1 K1 ; R1 := R1["InventoryController"]
	19	[577]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xac03381f]
	20	[577]	CALL     	R1 2 2 ; R1 := R1(R2)
	21	[577]	TEST     	R1 1 ; if R1 then PC := 43
	22	[577]	JMP      	43 ; PC := 43
	23	[577]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	24	[577]	GETGLOBAL	R2 K3 ; R2 := 0xbe190284
	25	[577]	CALL     	R1 2 2 ; R1 := R1(R2)
	26	[577]	TEST     	R1 1 ; if R1 then PC := 34
	27	[577]	JMP      	34 ; PC := 34
	28	[577]	GETGLOBAL	R1 K3 ; R1 := 0xbe190284
	29	[577]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xf2deaf69]
	30	[577]	GETGLOBAL	R3 K5 ; R3 := gLotusSpeedballGameRulesType
	31	[577]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	32	[577]	TEST     	R1 1 ; if R1 then PC := 43
	33	[577]	JMP      	43 ; PC := 43
	34	[578]	GETUPVAL 	R1 U0 ; R1 := U0
	35	[578]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0xe1bb46c1]
	36	[578]	EQ       	0 R0 K7 ; if R0 ~= false then PC := 39
	37	[578]	JMP      	39 ; PC := 39
	38	[578]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 39
	39	[578]	OP_LOADBOOL	R3 1 0 ; R3 := true
	40	[578]	CALL     	R1 3 1 ; R1(R2,R3)
	41	[579]	GETGLOBAL	R1 K8 ; R1 := _T
	42	[579]	SETTABLE 	R1 K9 K10 ; R1["reticleState"] := true
	43	[581]	RETURN   	R0 1 ; return 

function #20 <?:583,589> (10 instructions, 40 bytes at 0000021191C90400)
1 param, 3 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[584]	EQ       	0 R0 K0 ; if R0 ~= "false" then PC := 7
	2	[584]	JMP      	7 ; PC := 7
	3	[585]	GETUPVAL 	R1 U0 ; R1 := U0
	4	[585]	OP_LOADBOOL	R2 0 0 ; R2 := false
	5	[585]	CALL     	R1 2 1 ; R1(R2)
	6	[585]	JMP      	10 ; PC := 10
	7	[587]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[587]	OP_LOADBOOL	R2 1 0 ; R2 := true
	9	[587]	CALL     	R1 2 1 ; R1(R2)
	10	[589]	RETURN   	R0 1 ; return 

function #21 <?:591,605> (38 instructions, 152 bytes at 0000021191C904D0)
1 param, 7 slots, 2 upvalues, 0 locals, 9 constants, 0 functions
	1	[592]	EQ       	1 R0 K0 ; if R0 == "true" then PC := 4
	2	[592]	JMP      	4 ; PC := 4
	3	[592]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 4
	4	[592]	OP_LOADBOOL	R0 1 0 ; R0 := true
	5	[594]	GETUPVAL 	R1 U0 ; R1 := U0
	6	[594]	GETTABLE 	R1 R1 K1 ; R1 := R1["IsAlternateHud"]
	7	[594]	TEST     	R1 1 ; if R1 then PC := 38
	8	[594]	JMP      	38 ; PC := 38
	9	[595]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	10	[595]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xaade900e]
	11	[595]	LOADK    	R3 K4 ; R3 := "Reticle"
	12	[595]	LOADK    	R4 := 11.000000
	13	[595]	MOVE     	R5 R0 ; R5 := R0
	14	[595]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	15	[597]	GETGLOBAL	R1 K5 ; R1 := 0x7b998233
	16	[597]	GETUPVAL 	R2 U1 ; R2 := U1
	17	[597]	CALL     	R1 2 2 ; R1 := R1(R2)
	18	[597]	TEST     	R1 1 ; if R1 then PC := 38
	19	[597]	JMP      	38 ; PC := 38
	20	[598]	GETUPVAL 	R1 U1 ; R1 := U1
	21	[598]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x603d617e]
	22	[598]	CALL     	R1 2 2 ; R1 := R1(R2)
	23	[599]	GETGLOBAL	R2 K5 ; R2 := 0x7b998233
	24	[599]	MOVE     	R3 R1 ; R3 := R1
	25	[599]	CALL     	R2 2 2 ; R2 := R2(R3)
	26	[599]	TEST     	R2 1 ; if R2 then PC := 38
	27	[599]	JMP      	38 ; PC := 38
	28	[600]	SELF     	R2 R1 K3 ; R3 := R1; R2 := R1[0xaade900e]
	29	[600]	LOADK    	R4 K7 ; R4 := "_root"
	30	[600]	LOADK    	R5 := 11.000000
	31	[600]	OP_LOADBOOL	R6 1 0 ; R6 := true
	32	[600]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	33	[601]	SELF     	R2 R1 K8 ; R3 := R1; R2 := R1[0x67bc869f]
	34	[601]	LOADK    	R4 K7 ; R4 := "_root"
	35	[601]	LOADK    	R5 := 10.000000
	36	[601]	LOADK    	R6 := 100.000000
	37	[601]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	38	[605]	RETURN   	R0 1 ; return 

function #22 <?:607,611> (13 instructions, 52 bytes at 0000021117CAB530)
1 param, 4 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[608]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[608]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[608]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[608]	TEST     	R1 1 ; if R1 then PC := 13
	5	[608]	JMP      	13 ; PC := 13
	6	[609]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[609]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x5e7f1652]
	8	[609]	EQ       	0 R0 K2 ; if R0 ~= "false" then PC := 11
	9	[609]	JMP      	11 ; PC := 11
	10	[609]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 11
	11	[609]	OP_LOADBOOL	R3 1 0 ; R3 := true
	12	[609]	CALL     	R1 3 1 ; R1(R2,R3)
	13	[611]	RETURN   	R0 1 ; return 

function #23 <?:613,615> (7 instructions, 28 bytes at 0000021117CAB6A0)
0 params, 5 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[614]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[614]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xaade900e]
	3	[614]	LOADK    	R2 K2 ; R2 := "HealthAndShield.SuitAffinity"
	4	[614]	LOADK    	R3 := 11.000000
	5	[614]	OP_LOADBOOL	R4 0 0 ; R4 := false
	6	[614]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	7	[615]	RETURN   	R0 1 ; return 

function #24 <?:617,619> (7 instructions, 28 bytes at 000002111B600D60)
0 params, 5 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[618]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[618]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xaade900e]
	3	[618]	LOADK    	R2 K2 ; R2 := "HealthAndShield.SuitAffinity"
	4	[618]	LOADK    	R3 := 11.000000
	5	[618]	OP_LOADBOOL	R4 1 0 ; R4 := true
	6	[618]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	7	[619]	RETURN   	R0 1 ; return 

function #25 <?:621,623> (5 instructions, 20 bytes at 000002111B600E30)
0 params, 3 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[622]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[622]	SELF     	R0 R0 K0 ; R1 := R0; R0 := R0[0xe95b7a4b]
	3	[622]	OP_LOADBOOL	R2 0 0 ; R2 := false
	4	[622]	CALL     	R0 3 1 ; R0(R1,R2)
	5	[623]	RETURN   	R0 1 ; return 

function #26 <?:625,627> (5 instructions, 20 bytes at 00000211306DACF0)
0 params, 3 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[626]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[626]	SELF     	R0 R0 K0 ; R1 := R0; R0 := R0[0xe95b7a4b]
	3	[626]	OP_LOADBOOL	R2 1 0 ; R2 := true
	4	[626]	CALL     	R0 3 1 ; R0(R1,R2)
	5	[627]	RETURN   	R0 1 ; return 

function #27 <?:629,647> (56 instructions, 224 bytes at 00000211306DAD80)
0 params, 12 slots, 5 upvalues, 0 locals, 13 constants, 0 functions
	1	[630]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[630]	GETUPVAL 	R1 U1 ; R1 := U1
	3	[630]	GETTABLE 	R1 R1 K1 ; R1 := R1[0xfa221145]
	4	[630]	GETGLOBAL	R2 K2 ; R2 := 0xae91e43b
	5	[630]	GETUPVAL 	R3 U0 ; R3 := U0
	6	[630]	GETTABLE 	R3 R3 K3 ; R3 := R3["HudScale"]
	7	[630]	GETUPVAL 	R4 U2 ; R4 := U2
	8	[630]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	9	[630]	SETTABLE 	R0 K0 R1 ; R0["HudScalePadding"] := R1
	10	[632]	GETGLOBAL	R0 K4 ; R0 := 0x7b998233
	11	[632]	GETUPVAL 	R1 U3 ; R1 := U3
	12	[632]	CALL     	R0 2 2 ; R0 := R0(R1)
	13	[632]	TEST     	R0 1 ; if R0 then PC := 18
	14	[632]	JMP      	18 ; PC := 18
	15	[633]	GETUPVAL 	R0 U3 ; R0 := U3
	16	[633]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xfa221145]
	17	[633]	CALL     	R0 2 1 ; R0(R1)
	18	[636]	GETGLOBAL	R0 K4 ; R0 := 0x7b998233
	19	[636]	GETUPVAL 	R1 U2 ; R1 := U2
	20	[636]	CALL     	R0 2 2 ; R0 := R0(R1)
	21	[636]	TEST     	R0 1 ; if R0 then PC := 56
	22	[636]	JMP      	56 ; PC := 56
	23	[637]	LOADNIL  	R0 R0 ; R0 := nil
	24	[638]	GETGLOBAL	R1 K5 ; R1 := 0xcfc01047
	25	[638]	GETUPVAL 	R2 U4 ; R2 := U4
	26	[638]	CALL     	R1 2 4 ; R1,R2,R3 := R1(R2)
	27	[638]	JMP      	54 ; PC := 54
	28	[639]	GETUPVAL 	R6 U2 ; R6 := U2
	29	[639]	SELF     	R6 R6 K6 ; R7 := R6; R6 := R6[0x2de3d774]
	30	[639]	GETTABLE 	R8 R5 K7 ; R8 := R5["Clip"]
	31	[639]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	32	[639]	MOVE     	R0 R6 ; R0 := R6
	33	[640]	GETUPVAL 	R6 U3 ; R6 := U3
	34	[640]	SELF     	R6 R6 K8 ; R7 := R6; R6 := R6[0x31669273]
	35	[640]	GETTABLE 	R8 R5 K9 ; R8 := R5["Movie"]
	36	[640]	GETTABLE 	R9 R5 K7 ; R9 := R5["Clip"]
	37	[640]	GETTABLE 	R10 R0 K10 ; R10 := R0["x"]
	38	[640]	GETTABLE 	R11 R0 K11 ; R11 := R0["y"]
	39	[640]	CALL     	R6 6 1 ; R6(R7,R8,R9,R10,R11)
	40	[642]	GETTABLE 	R6 R5 K12 ; R6 := R5["HandleHudScale"]
	41	[642]	TEST     	R6 0 ; if not R6 then PC := 54
	42	[642]	JMP      	54 ; PC := 54
	43	[642]	GETGLOBAL	R6 K4 ; R6 := 0x7b998233
	44	[642]	GETTABLE 	R7 R5 K9 ; R7 := R5["Movie"]
	45	[642]	CALL     	R6 2 2 ; R6 := R6(R7)
	46	[642]	TEST     	R6 1 ; if R6 then PC := 54
	47	[642]	JMP      	54 ; PC := 54
	48	[643]	GETUPVAL 	R6 U1 ; R6 := U1
	49	[643]	GETTABLE 	R6 R6 K1 ; R6 := R6[0xfa221145]
	50	[643]	GETTABLE 	R7 R5 K9 ; R7 := R5["Movie"]
	51	[643]	GETUPVAL 	R8 U0 ; R8 := U0
	52	[643]	GETTABLE 	R8 R8 K3 ; R8 := R8["HudScale"]
	53	[643]	CALL     	R6 3 1 ; R6(R7,R8)
	54	[638]	TFORLOOP 	R1 2 ; R4,R5 := R1(R2,R3); if R4 ~= nil then begin PC = 28; R3 := R4 end
	55	[644]	JMP      	28 ; PC := 28
	56	[647]	RETURN   	R0 1 ; return 

function #28 <?:649,689> (150 instructions, 600 bytes at 000002113908A490)
0 params, 12 slots, 1 upvalue, 0 locals, 14 constants, 0 functions
	1	[650]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[650]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x6b837788]
	3	[650]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[651]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	5	[651]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xaf9fda9f]
	6	[651]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[652]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	8	[652]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0x091c120e]
	9	[652]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[652]	LT       	1 R0 R2 ; if R0 < R2 then PC := 17
	11	[652]	JMP      	17 ; PC := 17
	12	[652]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	13	[652]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0x2cc9d281]
	14	[652]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[652]	LT       	0 R1 R2 ; if R1 >= R2 then PC := 30
	16	[652]	JMP      	30 ; PC := 30
	17	[652]	GETGLOBAL	R2 K5 ; R2 := 0x34291f5c
	18	[652]	GETTABLE 	R2 R2 K6 ; R2 := R2[0x056bfe8b]
	19	[652]	CALL     	R2 1 2 ; R2 := R2()
	20	[652]	TEST     	R2 1 ; if R2 then PC := 30
	21	[652]	JMP      	30 ; PC := 30
	22	[653]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	23	[653]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0x091c120e]
	24	[653]	CALL     	R2 2 2 ; R2 := R2(R3)
	25	[653]	MOVE     	R0 R2 ; R0 := R2
	26	[654]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	27	[654]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0x2cc9d281]
	28	[654]	CALL     	R2 2 2 ; R2 := R2(R3)
	29	[654]	MOVE     	R1 R2 ; R1 := R2
	30	[657]	GETGLOBAL	R2 K5 ; R2 := 0x34291f5c
	31	[657]	GETTABLE 	R2 R2 K6 ; R2 := R2[0x056bfe8b]
	32	[657]	CALL     	R2 1 2 ; R2 := R2()
	33	[657]	TEST     	R2 0 ; if not R2 then PC := 43
	34	[657]	JMP      	43 ; PC := 43
	35	[658]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	36	[658]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0x091c120e]
	37	[658]	CALL     	R2 2 2 ; R2 := R2(R3)
	38	[658]	MOVE     	R0 R2 ; R0 := R2
	39	[659]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	40	[659]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0x2cc9d281]
	41	[659]	CALL     	R2 2 2 ; R2 := R2(R3)
	42	[659]	MOVE     	R1 R2 ; R1 := R2
	43	[662]	LOADK    	R2 := 70.000000
	44	[664]	GETUPVAL 	R3 U0 ; R3 := U0
	45	[664]	GETTABLE 	R3 R3 K7 ; R3 := R3["HudScale"]
	46	[664]	DIV      	R3 R0 R3 ; R3 := R0 / R3
	47	[665]	SUB      	R4 R0 R3 ; R4 := R0 - R3
	48	[666]	GETUPVAL 	R5 U0 ; R5 := U0
	49	[666]	GETTABLE 	R5 R5 K7 ; R5 := R5["HudScale"]
	50	[666]	DIV      	R5 R1 R5 ; R5 := R1 / R5
	51	[667]	SUB      	R6 R1 R5 ; R6 := R1 - R5
	52	[669]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	53	[669]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x67bc869f]
	54	[669]	LOADK    	R9 K9 ; R9 := "PainTop"
	55	[669]	LOADK    	R10 := 0.000000
	56	[669]	DIV      	R11 R0 K10 ; R11 := R0 / 2.000000
	57	[669]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	58	[670]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	59	[670]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x67bc869f]
	60	[670]	LOADK    	R9 K9 ; R9 := "PainTop"
	61	[670]	LOADK    	R10 := 1.000000
	62	[670]	DIV      	R11 R6 K10 ; R11 := R6 / 2.000000
	63	[670]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	64	[671]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	65	[671]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x67bc869f]
	66	[671]	LOADK    	R9 K9 ; R9 := "PainTop"
	67	[671]	LOADK    	R10 := 12.000000
	68	[671]	MOVE     	R11 R3 ; R11 := R3
	69	[671]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	70	[672]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	71	[672]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x67bc869f]
	72	[672]	LOADK    	R9 K9 ; R9 := "PainTop"
	73	[672]	LOADK    	R10 := 13.000000
	74	[672]	MOVE     	R11 R2 ; R11 := R2
	75	[672]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	76	[674]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	77	[674]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x67bc869f]
	78	[674]	LOADK    	R9 K11 ; R9 := "PainBottom"
	79	[674]	LOADK    	R10 := 0.000000
	80	[674]	DIV      	R11 R0 K10 ; R11 := R0 / 2.000000
	81	[674]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	82	[675]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	83	[675]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x67bc869f]
	84	[675]	LOADK    	R9 K11 ; R9 := "PainBottom"
	85	[675]	LOADK    	R10 := 1.000000
	86	[675]	DIV      	R11 R6 K10 ; R11 := R6 / 2.000000
	87	[675]	ADD      	R11 R5 R11 ; R11 := R5 + R11
	88	[675]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	89	[676]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	90	[676]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x67bc869f]
	91	[676]	LOADK    	R9 K11 ; R9 := "PainBottom"
	92	[676]	LOADK    	R10 := 12.000000
	93	[676]	MOVE     	R11 R3 ; R11 := R3
	94	[676]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	95	[677]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	96	[677]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x67bc869f]
	97	[677]	LOADK    	R9 K11 ; R9 := "PainBottom"
	98	[677]	LOADK    	R10 := 13.000000
	99	[677]	MOVE     	R11 R2 ; R11 := R2
	100	[677]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	101	[679]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	102	[679]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x67bc869f]
	103	[679]	LOADK    	R9 K12 ; R9 := "PainLeft"
	104	[679]	LOADK    	R10 := 0.000000
	105	[679]	DIV      	R11 R4 K10 ; R11 := R4 / 2.000000
	106	[679]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	107	[680]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	108	[680]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x67bc869f]
	109	[680]	LOADK    	R9 K12 ; R9 := "PainLeft"
	110	[680]	LOADK    	R10 := 1.000000
	111	[680]	DIV      	R11 R1 K10 ; R11 := R1 / 2.000000
	112	[680]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	113	[681]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	114	[681]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x67bc869f]
	115	[681]	LOADK    	R9 K12 ; R9 := "PainLeft"
	116	[681]	LOADK    	R10 := 12.000000
	117	[681]	MOVE     	R11 R2 ; R11 := R2
	118	[681]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	119	[682]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	120	[682]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x67bc869f]
	121	[682]	LOADK    	R9 K12 ; R9 := "PainLeft"
	122	[682]	LOADK    	R10 := 13.000000
	123	[682]	MOVE     	R11 R5 ; R11 := R5
	124	[682]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	125	[685]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	126	[685]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x67bc869f]
	127	[685]	LOADK    	R9 K13 ; R9 := "PainRight"
	128	[685]	LOADK    	R10 := 0.000000
	129	[685]	DIV      	R11 R4 K10 ; R11 := R4 / 2.000000
	130	[685]	ADD      	R11 R3 R11 ; R11 := R3 + R11
	131	[685]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	132	[686]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	133	[686]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x67bc869f]
	134	[686]	LOADK    	R9 K13 ; R9 := "PainRight"
	135	[686]	LOADK    	R10 := 1.000000
	136	[686]	DIV      	R11 R1 K10 ; R11 := R1 / 2.000000
	137	[686]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	138	[687]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	139	[687]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x67bc869f]
	140	[687]	LOADK    	R9 K13 ; R9 := "PainRight"
	141	[687]	LOADK    	R10 := 12.000000
	142	[687]	MOVE     	R11 R2 ; R11 := R2
	143	[687]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	144	[688]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	145	[688]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x67bc869f]
	146	[688]	LOADK    	R9 K13 ; R9 := "PainRight"
	147	[688]	LOADK    	R10 := 13.000000
	148	[688]	MOVE     	R11 R5 ; R11 := R5
	149	[688]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	150	[689]	RETURN   	R0 1 ; return 

function #29 <?:692,697> (5 instructions, 20 bytes at 000002113908A610)
4 params, 5 slots, 2 upvalues, 0 locals, 0 constants, 0 functions
	1	[693]	GETUPVAL 	R4 U0 ; R4 := U0
	2	[693]	CALL     	R4 1 1 ; R4()
	3	[696]	GETUPVAL 	R4 U1 ; R4 := U1
	4	[696]	CALL     	R4 1 1 ; R4()
	5	[697]	RETURN   	R0 1 ; return 

function #30 <?:700,717> (66 instructions, 264 bytes at 000002111A6FF540)
2 params, 7 slots, 0 upvalues, 0 locals, 11 constants, 0 functions
	1	[701]	OP_LOADBOOL	R2 0 0 ; R2 := false
	2	[703]	EQ       	1 R0 K0 ; if R0 == nil then PC := 9
	3	[703]	JMP      	9 ; PC := 9
	4	[703]	EQ       	1 R1 K0 ; if R1 == nil then PC := 9
	5	[703]	JMP      	9 ; PC := 9
	6	[703]	GETTABLE 	R3 R0 K1 ; R3 := R0["mInstigator"]
	7	[703]	EQ       	0 R3 K0 ; if R3 ~= nil then PC := 10
	8	[703]	JMP      	10 ; PC := 10
	9	[704]	RETURN   	R2 2 ; return R2 
	10	[707]	GETTABLE 	R3 R0 K1 ; R3 := R0["mInstigator"]
	11	[707]	GETTABLE 	R3 R3 K2 ; R3 := R3["avatar"]
	12	[707]	GETTABLE 	R4 R1 K3 ; R4 := R1["Instigator"]
	13	[707]	EQ       	1 R3 R4 ; if R3 == R4 then PC := 16
	14	[707]	JMP      	16 ; PC := 16
	15	[707]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 16
	16	[707]	OP_LOADBOOL	R3 1 0 ; R3 := true
	17	[708]	GETGLOBAL	R4 K4 ; R4 := 0x7b998233
	18	[708]	GETTABLE 	R5 R0 K1 ; R5 := R0["mInstigator"]
	19	[708]	GETTABLE 	R5 R5 K5 ; R5 := R5["player"]
	20	[708]	CALL     	R4 2 2 ; R4 := R4(R5)
	21	[708]	TEST     	R4 1 ; if R4 then PC := 38
	22	[708]	JMP      	38 ; PC := 38
	23	[708]	GETGLOBAL	R4 K4 ; R4 := 0x7b998233
	24	[708]	GETTABLE 	R5 R1 K3 ; R5 := R1["Instigator"]
	25	[708]	CALL     	R4 2 2 ; R4 := R4(R5)
	26	[708]	TEST     	R4 1 ; if R4 then PC := 38
	27	[708]	JMP      	38 ; PC := 38
	28	[709]	GETTABLE 	R4 R0 K1 ; R4 := R0["mInstigator"]
	29	[709]	GETTABLE 	R4 R4 K5 ; R4 := R4["player"]
	30	[709]	GETTABLE 	R5 R1 K3 ; R5 := R1["Instigator"]
	31	[709]	SELF     	R5 R5 K6 ; R6 := R5; R5 := R5[0x5b89142c]
	32	[709]	CALL     	R5 2 2 ; R5 := R5(R6)
	33	[709]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 36
	34	[709]	JMP      	36 ; PC := 36
	35	[709]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 36
	36	[709]	OP_LOADBOOL	R3 1 0 ; R3 := true
	37	[709]	JMP      	50 ; PC := 50
	38	[710]	GETGLOBAL	R4 K4 ; R4 := 0x7b998233
	39	[710]	GETTABLE 	R5 R0 K1 ; R5 := R0["mInstigator"]
	40	[710]	GETTABLE 	R5 R5 K2 ; R5 := R5["avatar"]
	41	[710]	CALL     	R4 2 2 ; R4 := R4(R5)
	42	[710]	TEST     	R4 0 ; if not R4 then PC := 50
	43	[710]	JMP      	50 ; PC := 50
	44	[710]	GETGLOBAL	R4 K4 ; R4 := 0x7b998233
	45	[710]	GETTABLE 	R5 R1 K3 ; R5 := R1["Instigator"]
	46	[710]	CALL     	R4 2 2 ; R4 := R4(R5)
	47	[710]	TEST     	R4 0 ; if not R4 then PC := 50
	48	[710]	JMP      	50 ; PC := 50
	49	[711]	OP_LOADBOOL	R3 1 0 ; R3 := true
	50	[714]	TESTSET  	R2 R3 0 ; if not R3 then PC := 65 else R2 := R3 
	51	[714]	JMP      	65 ; PC := 65
	52	[714]	GETTABLE 	R4 R0 K7 ; R4 := R0["mAbilityType"]
	53	[714]	EQ       	1 R4 K0 ; if R4 == nil then PC := 63
	54	[714]	JMP      	63 ; PC := 63
	55	[714]	GETTABLE 	R4 R0 K7 ; R4 := R0["mAbilityType"]
	56	[714]	GETTABLE 	R5 R1 K8 ; R5 := R1["AbilityType"]
	57	[714]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 63
	58	[714]	JMP      	63 ; PC := 63
	59	[714]	GETTABLE 	R4 R0 K9 ; R4 := R0["mAugmentType"]
	60	[714]	GETTABLE 	R5 R1 K10 ; R5 := R1["AugmentType"]
	61	[714]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 64
	62	[714]	JMP      	64 ; PC := 64
	63	[714]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 64
	64	[714]	OP_LOADBOOL	R2 1 0 ; R2 := true
	65	[716]	RETURN   	R2 2 ; return R2 
	66	[717]	RETURN   	R0 1 ; return 

function #31 <?:719,727> (22 instructions, 88 bytes at 0000021137B06F40)
1 param, 4 slots, 2 upvalues, 0 locals, 5 constants, 0 functions
	1	[720]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[720]	GETTABLE 	R1 R1 K0 ; R1 := R1["Status"]
	3	[720]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 12
	4	[720]	JMP      	12 ; PC := 12
	5	[720]	EQ       	1 R0 K1 ; if R0 == nil then PC := 12
	6	[720]	JMP      	12 ; PC := 12
	7	[720]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	8	[720]	GETTABLE 	R2 R0 K3 ; R2 := R0["mAbilityType"]
	9	[720]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[720]	TEST     	R1 0 ; if not R1 then PC := 13
	11	[720]	JMP      	13 ; PC := 13
	12	[721]	RETURN   	R0 1 ; return 
	13	[724]	GETUPVAL 	R1 U1 ; R1 := U1
	14	[724]	MOVE     	R2 R0 ; R2 := R0
	15	[724]	GETUPVAL 	R3 U0 ; R3 := U0
	16	[724]	GETTABLE 	R3 R3 K4 ; R3 := R3["Stat"]
	17	[724]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	18	[724]	TEST     	R1 0 ; if not R1 then PC := 22
	19	[724]	JMP      	22 ; PC := 22
	20	[725]	GETUPVAL 	R1 U0 ; R1 := U0
	21	[725]	SETTABLE 	R1 K0 R0 ; R1["Status"] := R0
	22	[727]	RETURN   	R0 1 ; return 

function #32 <?:738,831> (266 instructions, 1064 bytes at 0000021137B070A0)
1 param, 19 slots, 6 upvalues, 0 locals, 47 constants, 0 functions
	1	[739]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[739]	EQ       	1 R1 K0 ; if R1 == nil then PC := 11
	3	[739]	JMP      	11 ; PC := 11
	4	[739]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	5	[739]	GETUPVAL 	R2 U1 ; R2 := U1
	6	[739]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[739]	TEST     	R1 1 ; if R1 then PC := 11
	8	[739]	JMP      	11 ; PC := 11
	9	[739]	EQ       	0 R0 K0 ; if R0 ~= nil then PC := 12
	10	[739]	JMP      	12 ; PC := 12
	11	[740]	RETURN   	R0 1 ; return 
	12	[743]	GETGLOBAL	R1 K2 ; R1 := 0xe72d2edb
	13	[743]	EQ       	0 R1 K4 ; if R1 ~= 4.000000 then PC := 27
	14	[743]	JMP      	27 ; PC := 27
	15	[744]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	16	[744]	GETTABLE 	R2 R0 K5 ; R2 := R0["abilityType"]
	17	[744]	CALL     	R1 2 2 ; R1 := R1(R2)
	18	[744]	TEST     	R1 1 ; if R1 then PC := 27
	19	[744]	JMP      	27 ; PC := 27
	20	[744]	GETTABLE 	R1 R0 K5 ; R1 := R0["abilityType"]
	21	[744]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0xf2deaf69]
	22	[744]	GETGLOBAL	R3 K7 ; R3 := gLotusInventoryControllerType
	23	[744]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	24	[744]	TEST     	R1 0 ; if not R1 then PC := 27
	25	[744]	JMP      	27 ; PC := 27
	26	[746]	RETURN   	R0 1 ; return 
	27	[750]	LOADNIL  	R1 R1 ; R1 := nil
	28	[751]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	29	[751]	GETUPVAL 	R3 U2 ; R3 := U2
	30	[751]	CALL     	R2 2 2 ; R2 := R2(R3)
	31	[751]	TEST     	R2 1 ; if R2 then PC := 38
	32	[751]	JMP      	38 ; PC := 38
	33	[752]	GETUPVAL 	R2 U2 ; R2 := U2
	34	[752]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0xbb610e5b]
	35	[752]	CALL     	R2 2 2 ; R2 := R2(R3)
	36	[752]	MOVE     	R1 R2 ; R1 := R2
	37	[752]	JMP      	39 ; PC := 39
	38	[754]	GETUPVAL 	R1 U1 ; R1 := U1
	39	[756]	LOADNIL  	R2 R2 ; R2 := nil
	40	[758]	GETGLOBAL	R3 K1 ; R3 := 0x7b998233
	41	[758]	MOVE     	R4 R1 ; R4 := R1
	42	[758]	CALL     	R3 2 2 ; R3 := R3(R4)
	43	[758]	TEST     	R3 1 ; if R3 then PC := 53
	44	[758]	JMP      	53 ; PC := 53
	45	[758]	SELF     	R3 R1 K6 ; R4 := R1; R3 := R1[0xf2deaf69]
	46	[758]	GETGLOBAL	R5 K9 ; R5 := gLotusVehicleAvatarType
	47	[758]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	48	[758]	TEST     	R3 0 ; if not R3 then PC := 53
	49	[758]	JMP      	53 ; PC := 53
	50	[759]	SELF     	R3 R1 K10 ; R4 := R1; R3 := R1[0xff005826]
	51	[759]	CALL     	R3 2 2 ; R3 := R3(R4)
	52	[759]	MOVE     	R2 R3 ; R2 := R3
	53	[762]	GETUPVAL 	R3 U3 ; R3 := U3
	54	[762]	NEWTABLE 	R4 0 4 ; R4 := {}
	55	[762]	GETTABLE 	R5 R0 K13 ; R5 := R0["instigator"]
	56	[762]	SETTABLE 	R4 K12 R5 ; R4["Instigator"] := R5
	57	[762]	GETTABLE 	R5 R0 K5 ; R5 := R0["abilityType"]
	58	[762]	SETTABLE 	R4 K14 R5 ; R4["AbilityType"] := R5
	59	[762]	GETTABLE 	R5 R0 K16 ; R5 := R0["augmentType"]
	60	[762]	SETTABLE 	R4 K15 R5 ; R4["AugmentType"] := R5
	61	[762]	GETTABLE 	R5 R0 K18 ; R5 := R0["affected"]
	62	[762]	SETTABLE 	R4 K17 R5 ; R4["Affected"] := R5
	63	[762]	SETTABLE 	R3 K11 R4 ; R3["Stat"] := R4
	64	[764]	GETUPVAL 	R3 U3 ; R3 := U3
	65	[764]	GETTABLE 	R3 R3 K11 ; R3 := R3["Stat"]
	66	[764]	GETTABLE 	R3 R3 K12 ; R3 := R3["Instigator"]
	67	[764]	EQ       	1 R3 R1 ; if R3 == R1 then PC := 86
	68	[764]	JMP      	86 ; PC := 86
	69	[765]	GETUPVAL 	R3 U3 ; R3 := U3
	70	[765]	GETTABLE 	R3 R3 K11 ; R3 := R3["Stat"]
	71	[765]	GETTABLE 	R3 R3 K12 ; R3 := R3["Instigator"]
	72	[765]	EQ       	1 R3 R2 ; if R3 == R2 then PC := 86
	73	[765]	JMP      	86 ; PC := 86
	74	[766]	GETTABLE 	R3 R0 K19 ; R3 := R0["forceSquadPanel"]
	75	[766]	TEST     	R3 1 ; if R3 then PC := 87
	76	[766]	JMP      	87 ; PC := 87
	77	[767]	GETUPVAL 	R3 U4 ; R3 := U4
	78	[767]	TEST     	R3 0 ; if not R3 then PC := 87
	79	[767]	JMP      	87 ; PC := 87
	80	[767]	GETTABLE 	R3 R0 K5 ; R3 := R0["abilityType"]
	81	[767]	SELF     	R3 R3 K6 ; R4 := R3; R3 := R3[0xf2deaf69]
	82	[767]	GETGLOBAL	R5 K20 ; R5 := 0xbaec173b
	83	[767]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	84	[767]	JMP      	87 ; PC := 87
	85	[767]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 86
	86	[767]	OP_LOADBOOL	R3 1 0 ; R3 := true
	87	[769]	LOADK    	R4 := 1.000000
	88	[769]	GETUPVAL 	R5 U3 ; R5 := U3
	89	[769]	GETTABLE 	R5 R5 K11 ; R5 := R5["Stat"]
	90	[769]	GETTABLE 	R5 R5 K17 ; R5 := R5["Affected"]
	91	[769]	LEN      	R5 R5 ; R5 := # R5
	92	[769]	LOADK    	R6 := 1.000000
	93	[769]	FORPREP  	R4 250 ; R4 -= R6; PC := 250
	94	[770]	GETUPVAL 	R8 U3 ; R8 := U3
	95	[770]	GETTABLE 	R8 R8 K11 ; R8 := R8["Stat"]
	96	[770]	GETTABLE 	R8 R8 K17 ; R8 := R8["Affected"]
	97	[770]	GETTABLE 	R8 R8 R7 ; R8 := R8[R7]
	98	[772]	EQ       	1 R8 R1 ; if R8 == R1 then PC := 102
	99	[772]	JMP      	102 ; PC := 102
	100	[772]	EQ       	0 R8 R2 ; if R8 ~= R2 then PC := 250
	101	[772]	JMP      	250 ; PC := 250
	102	[773]	GETUPVAL 	R9 U3 ; R9 := U3
	103	[773]	SETTABLE 	R9 K21 K0 ; R9["Status"] := nil
	104	[774]	GETUPVAL 	R9 U0 ; R9 := U0
	105	[774]	SELF     	R9 R9 K22 ; R10 := R9; R9 := R9[0xea061e98]
	106	[774]	GETUPVAL 	R11 U3 ; R11 := U3
	107	[774]	GETTABLE 	R11 R11 K23 ; R11 := R11["IsBuffEqual"]
	108	[774]	CALL     	R9 3 1 ; R9(R10,R11)
	109	[776]	GETUPVAL 	R9 U3 ; R9 := U3
	110	[776]	GETTABLE 	R9 R9 K21 ; R9 := R9["Status"]
	111	[776]	EQ       	1 R9 K0 ; if R9 == nil then PC := 181
	112	[776]	JMP      	181 ; PC := 181
	113	[777]	OP_LOADBOOL	R9 0 0 ; R9 := false
	114	[779]	GETTABLE 	R10 R0 K24 ; R10 := R0["stackData"]
	115	[779]	TEST     	R10 0 ; if not R10 then PC := 137
	116	[779]	JMP      	137 ; PC := 137
	117	[779]	GETTABLE 	R10 R0 K25 ; R10 := R0["buffType"]
	118	[779]	GETUPVAL 	R11 U3 ; R11 := U3
	119	[779]	GETTABLE 	R11 R11 K21 ; R11 := R11["Status"]
	120	[779]	GETTABLE 	R11 R11 K26 ; R11 := R11["mBuffType"]
	121	[779]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 137
	122	[779]	JMP      	137 ; PC := 137
	123	[780]	GETTABLE 	R10 R0 K27 ; R10 := R0["buffData"]
	124	[780]	EQ       	0 R10 K28 ; if R10 ~= 0.000000 then PC := 127
	125	[780]	JMP      	127 ; PC := 127
	126	[780]	OP_LOADBOOL	R9 0 1 ; R9 := false; PC := 127
	127	[780]	OP_LOADBOOL	R9 1 0 ; R9 := true
	128	[781]	GETUPVAL 	R10 U3 ; R10 := U3
	129	[781]	GETTABLE 	R10 R10 K21 ; R10 := R10["Status"]
	130	[781]	GETUPVAL 	R11 U3 ; R11 := U3
	131	[781]	GETTABLE 	R11 R11 K21 ; R11 := R11["Status"]
	132	[781]	GETTABLE 	R11 R11 K29 ; R11 := R11["mBuffData"]
	133	[781]	GETTABLE 	R12 R0 K27 ; R12 := R0["buffData"]
	134	[781]	ADD      	R11 R11 R12 ; R11 := R11 + R12
	135	[781]	SETTABLE 	R10 K29 R11 ; R10["mBuffData"] := R11
	136	[781]	JMP      	149 ; PC := 149
	137	[783]	GETUPVAL 	R10 U3 ; R10 := U3
	138	[783]	GETTABLE 	R10 R10 K21 ; R10 := R10["Status"]
	139	[783]	GETTABLE 	R10 R10 K29 ; R10 := R10["mBuffData"]
	140	[783]	GETTABLE 	R11 R0 K27 ; R11 := R0["buffData"]
	141	[783]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 144
	142	[783]	JMP      	144 ; PC := 144
	143	[783]	OP_LOADBOOL	R9 0 1 ; R9 := false; PC := 144
	144	[783]	OP_LOADBOOL	R9 1 0 ; R9 := true
	145	[784]	GETUPVAL 	R10 U3 ; R10 := U3
	146	[784]	GETTABLE 	R10 R10 K21 ; R10 := R10["Status"]
	147	[784]	GETTABLE 	R11 R0 K27 ; R11 := R0["buffData"]
	148	[784]	SETTABLE 	R10 K29 R11 ; R10["mBuffData"] := R11
	149	[787]	TEST     	R9 1 ; if R9 then PC := 165
	150	[787]	JMP      	165 ; PC := 165
	151	[787]	GETUPVAL 	R10 U3 ; R10 := U3
	152	[787]	GETTABLE 	R10 R10 K21 ; R10 := R10["Status"]
	153	[787]	GETTABLE 	R10 R10 K26 ; R10 := R10["mBuffType"]
	154	[787]	GETTABLE 	R11 R0 K25 ; R11 := R0["buffType"]
	155	[787]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 164
	156	[787]	JMP      	164 ; PC := 164
	157	[787]	GETUPVAL 	R10 U3 ; R10 := U3
	158	[787]	GETTABLE 	R10 R10 K21 ; R10 := R10["Status"]
	159	[787]	GETTABLE 	R10 R10 K30 ; R10 := R10["mBuffDataExtra"]
	160	[787]	GETTABLE 	R11 R0 K31 ; R11 := R0["buffDataExtra"]
	161	[787]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 164
	162	[787]	JMP      	164 ; PC := 164
	163	[787]	OP_LOADBOOL	R9 0 1 ; R9 := false; PC := 164
	164	[787]	OP_LOADBOOL	R9 1 0 ; R9 := true
	165	[788]	GETUPVAL 	R10 U3 ; R10 := U3
	166	[788]	GETTABLE 	R10 R10 K21 ; R10 := R10["Status"]
	167	[788]	GETTABLE 	R11 R0 K25 ; R11 := R0["buffType"]
	168	[788]	SETTABLE 	R10 K26 R11 ; R10["mBuffType"] := R11
	169	[789]	GETUPVAL 	R10 U3 ; R10 := U3
	170	[789]	GETTABLE 	R10 R10 K21 ; R10 := R10["Status"]
	171	[789]	GETTABLE 	R11 R0 K31 ; R11 := R0["buffDataExtra"]
	172	[789]	SETTABLE 	R10 K30 R11 ; R10["mBuffDataExtra"] := R11
	173	[791]	TEST     	R9 0 ; if not R9 then PC := 251
	174	[791]	JMP      	251 ; PC := 251
	175	[792]	GETUPVAL 	R10 U0 ; R10 := U0
	176	[792]	GETTABLE 	R10 R10 K32 ; R10 := R10[0xb15e6aca]
	177	[792]	GETUPVAL 	R11 U3 ; R11 := U3
	178	[792]	GETTABLE 	R11 R11 K21 ; R11 := R11["Status"]
	179	[792]	CALL     	R10 2 1 ; R10(R11)
	180	[793]	JMP      	251 ; PC := 251
	181	[796]	LOADNIL  	R10 R10 ; R10 := nil
	182	[797]	GETGLOBAL	R11 K1 ; R11 := 0x7b998233
	183	[797]	GETUPVAL 	R12 U3 ; R12 := U3
	184	[797]	GETTABLE 	R12 R12 K11 ; R12 := R12["Stat"]
	185	[797]	GETTABLE 	R12 R12 K12 ; R12 := R12["Instigator"]
	186	[797]	CALL     	R11 2 2 ; R11 := R11(R12)
	187	[797]	TEST     	R11 1 ; if R11 then PC := 195
	188	[797]	JMP      	195 ; PC := 195
	189	[801]	GETUPVAL 	R11 U3 ; R11 := U3
	190	[801]	GETTABLE 	R11 R11 K11 ; R11 := R11["Stat"]
	191	[801]	GETTABLE 	R11 R11 K12 ; R11 := R11["Instigator"]
	192	[801]	SELF     	R11 R11 K33 ; R12 := R11; R11 := R11[0x5b89142c]
	193	[801]	CALL     	R11 2 2 ; R11 := R11(R12)
	194	[801]	MOVE     	R10 R11 ; R10 := R11
	195	[804]	GETUPVAL 	R11 U0 ; R11 := U0
	196	[804]	SELF     	R11 R11 K34 ; R12 := R11; R11 := R11[0x5fbddc1a]
	197	[804]	CALL     	R11 2 2 ; R11 := R11(R12)
	198	[804]	ADD      	R11 R11 K35 ; R11 := R11 + 1.000000
	199	[805]	GETTABLE 	R12 R0 K36 ; R12 := R0["isDebuff"]
	200	[805]	TEST     	R12 0 ; if not R12 then PC := 219
	201	[805]	JMP      	219 ; PC := 219
	202	[806]	LT       	0 K35 R11 ; if 1.000000 >= R11 then PC := 219
	203	[806]	JMP      	219 ; PC := 219
	204	[807]	GETUPVAL 	R12 U0 ; R12 := U0
	205	[807]	SELF     	R12 R12 K37 ; R13 := R12; R12 := R12[0x5465f8f3]
	206	[807]	SUB      	R14 R11 K35 ; R14 := R11 - 1.000000
	207	[807]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	208	[809]	GETGLOBAL	R13 K1 ; R13 := 0x7b998233
	209	[809]	MOVE     	R14 R12 ; R14 := R12
	210	[809]	CALL     	R13 2 2 ; R13 := R13(R14)
	211	[809]	TEST     	R13 1 ; if R13 then PC := 219
	212	[809]	JMP      	219 ; PC := 219
	213	[809]	GETTABLE 	R13 R12 K38 ; R13 := R12["mIsDebuff"]
	214	[809]	TEST     	R13 0 ; if not R13 then PC := 217
	215	[809]	JMP      	217 ; PC := 217
	216	[811]	JMP      	219 ; PC := 219
	217	[814]	SUB      	R11 R11 K35 ; R11 := R11 - 1.000000
	218	[814]	JMP      	202 ; PC := 202
	219	[818]	GETUPVAL 	R13 U0 ; R13 := U0
	220	[818]	SELF     	R13 R13 K39 ; R14 := R13; R13 := R13[0x45082a31]
	221	[818]	MOVE     	R15 R11 ; R15 := R11
	222	[818]	NEWTABLE 	R16 0 8 ; R16 := {}
	223	[818]	NEWTABLE 	R17 0 2 ; R17 := {}
	224	[818]	GETUPVAL 	R18 U3 ; R18 := U3
	225	[818]	GETTABLE 	R18 R18 K11 ; R18 := R18["Stat"]
	226	[818]	GETTABLE 	R18 R18 K12 ; R18 := R18["Instigator"]
	227	[818]	SETTABLE 	R17 K41 R18 ; R17["avatar"] := R18
	228	[818]	SETTABLE 	R17 K42 R10 ; R17["player"] := R10
	229	[818]	SETTABLE 	R16 K40 R17 ; R16["mInstigator"] := R17
	230	[818]	GETUPVAL 	R17 U3 ; R17 := U3
	231	[818]	GETTABLE 	R17 R17 K11 ; R17 := R17["Stat"]
	232	[818]	GETTABLE 	R17 R17 K14 ; R17 := R17["AbilityType"]
	233	[818]	SETTABLE 	R16 K43 R17 ; R16["mAbilityType"] := R17
	234	[818]	GETUPVAL 	R17 U3 ; R17 := U3
	235	[818]	GETTABLE 	R17 R17 K11 ; R17 := R17["Stat"]
	236	[818]	GETTABLE 	R17 R17 K15 ; R17 := R17["AugmentType"]
	237	[818]	SETTABLE 	R16 K44 R17 ; R16["mAugmentType"] := R17
	238	[818]	GETTABLE 	R17 R0 K25 ; R17 := R0["buffType"]
	239	[818]	SETTABLE 	R16 K26 R17 ; R16["mBuffType"] := R17
	240	[818]	GETTABLE 	R17 R0 K27 ; R17 := R0["buffData"]
	241	[818]	SETTABLE 	R16 K29 R17 ; R16["mBuffData"] := R17
	242	[818]	GETTABLE 	R17 R0 K31 ; R17 := R0["buffDataExtra"]
	243	[818]	SETTABLE 	R16 K30 R17 ; R16["mBuffDataExtra"] := R17
	244	[818]	GETTABLE 	R17 R0 K27 ; R17 := R0["buffData"]
	245	[818]	SETTABLE 	R16 K45 R17 ; R16["mInitialBuffData"] := R17
	246	[818]	GETTABLE 	R17 R0 K36 ; R17 := R0["isDebuff"]
	247	[818]	SETTABLE 	R16 K38 R17 ; R16["mIsDebuff"] := R17
	248	[818]	CALL     	R13 4 1 ; R13(R14,R15,R16)
	249	[821]	JMP      	251 ; PC := 251
	250	[769]	FORLOOP  	R4 94 ; R4 += R6; if R4 <= R5 then begin PC := 94; R7 := R4 end
	251	[825]	TEST     	R3 0 ; if not R3 then PC := 262
	252	[825]	JMP      	262 ; PC := 262
	253	[825]	GETUPVAL 	R13 U5 ; R13 := U5
	254	[825]	EQ       	1 R13 K0 ; if R13 == nil then PC := 262
	255	[825]	JMP      	262 ; PC := 262
	256	[826]	GETUPVAL 	R13 U5 ; R13 := U5
	257	[826]	SELF     	R13 R13 K46 ; R14 := R13; R13 := R13[0xb03ae482]
	258	[826]	MOVE     	R15 R0 ; R15 := R0
	259	[826]	GETUPVAL 	R16 U3 ; R16 := U3
	260	[826]	GETTABLE 	R16 R16 K11 ; R16 := R16["Stat"]
	261	[826]	CALL     	R13 4 1 ; R13(R14,R15,R16)
	262	[829]	GETUPVAL 	R13 U3 ; R13 := U3
	263	[829]	SETTABLE 	R13 K11 K0 ; R13["Stat"] := nil
	264	[830]	GETUPVAL 	R13 U3 ; R13 := U3
	265	[830]	SETTABLE 	R13 K21 K0 ; R13["Status"] := nil
	266	[831]	RETURN   	R0 1 ; return 

function #33 <?:838,889> (140 instructions, 560 bytes at 000002113286C9D0)
1 param, 18 slots, 4 upvalues, 0 locals, 26 constants, 0 functions
	1	[839]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[839]	EQ       	1 R1 K0 ; if R1 == nil then PC := 9
	3	[839]	JMP      	9 ; PC := 9
	4	[839]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	5	[839]	GETUPVAL 	R2 U1 ; R2 := U1
	6	[839]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[839]	TEST     	R1 0 ; if not R1 then PC := 10
	8	[839]	JMP      	10 ; PC := 10
	9	[840]	RETURN   	R0 1 ; return 
	10	[843]	LOADNIL  	R1 R1 ; R1 := nil
	11	[844]	GETUPVAL 	R2 U1 ; R2 := U1
	12	[844]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0xf2deaf69]
	13	[844]	GETGLOBAL	R4 K3 ; R4 := gLotusVehicleAvatarType
	14	[844]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	15	[844]	TEST     	R2 0 ; if not R2 then PC := 21
	16	[844]	JMP      	21 ; PC := 21
	17	[845]	GETUPVAL 	R2 U1 ; R2 := U1
	18	[845]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0xff005826]
	19	[845]	CALL     	R2 2 2 ; R2 := R2(R3)
	20	[845]	MOVE     	R1 R2 ; R1 := R2
	21	[848]	NEWTABLE 	R2 0 3 ; R2 := {}
	22	[848]	GETTABLE 	R3 R0 K6 ; R3 := R0["instigator"]
	23	[848]	SETTABLE 	R2 K5 R3 ; R2["Instigator"] := R3
	24	[848]	GETTABLE 	R3 R0 K8 ; R3 := R0["abilityType"]
	25	[848]	SETTABLE 	R2 K7 R3 ; R2["AbilityType"] := R3
	26	[848]	GETTABLE 	R3 R0 K10 ; R3 := R0["augmentType"]
	27	[848]	SETTABLE 	R2 K9 R3 ; R2["AugmentType"] := R3
	28	[850]	LOADK    	R3 := 1.000000
	29	[850]	GETUPVAL 	R4 U0 ; R4 := U0
	30	[850]	SELF     	R4 R4 K11 ; R5 := R4; R4 := R4[0x5fbddc1a]
	31	[850]	CALL     	R4 2 2 ; R4 := R4(R5)
	32	[850]	LOADK    	R5 := 1.000000
	33	[850]	FORPREP  	R3 119 ; R3 -= R5; PC := 119
	34	[851]	GETUPVAL 	R7 U0 ; R7 := U0
	35	[851]	GETTABLE 	R7 R7 K12 ; R7 := R7["mElements"]
	36	[851]	GETTABLE 	R7 R7 R6 ; R7 := R7[R6]
	37	[853]	GETUPVAL 	R8 U2 ; R8 := U2
	38	[853]	MOVE     	R9 R7 ; R9 := R7
	39	[853]	MOVE     	R10 R2 ; R10 := R2
	40	[853]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	41	[853]	TEST     	R8 0 ; if not R8 then PC := 119
	42	[853]	JMP      	119 ; PC := 119
	43	[854]	GETGLOBAL	R8 K1 ; R8 := 0x7b998233
	44	[854]	GETUPVAL 	R9 U1 ; R9 := U1
	45	[854]	CALL     	R8 2 2 ; R8 := R8(R9)
	46	[854]	TEST     	R8 1 ; if R8 then PC := 120
	47	[854]	JMP      	120 ; PC := 120
	48	[855]	GETGLOBAL	R8 K13 ; R8 := 0xcfc01047
	49	[855]	GETTABLE 	R9 R0 K14 ; R9 := R0["affected"]
	50	[855]	CALL     	R8 2 4 ; R8,R9,R10 := R8(R9)
	51	[855]	JMP      	116 ; PC := 116
	52	[856]	GETGLOBAL	R13 K1 ; R13 := 0x7b998233
	53	[856]	MOVE     	R14 R12 ; R14 := R12
	54	[856]	CALL     	R13 2 2 ; R13 := R13(R14)
	55	[856]	TEST     	R13 1 ; if R13 then PC := 116
	56	[856]	JMP      	116 ; PC := 116
	57	[858]	GETUPVAL 	R13 U1 ; R13 := U1
	58	[858]	EQ       	1 R12 R13 ; if R12 == R13 then PC := 62
	59	[858]	JMP      	62 ; PC := 62
	60	[858]	EQ       	0 R12 R1 ; if R12 ~= R1 then PC := 116
	61	[858]	JMP      	116 ; PC := 116
	62	[860]	GETGLOBAL	R13 K1 ; R13 := 0x7b998233
	63	[860]	SELF     	R14 R12 K15 ; R15 := R12; R14 := R12[0x5e651723]
	64	[860]	CALL     	R14 2 0 ; R14,... := R14(R15)
	65	[860]	CALL     	R13 0 2 ; R13 := R13(R14,...)
	66	[860]	TEST     	R13 1 ; if R13 then PC := 82
	67	[860]	JMP      	82 ; PC := 82
	68	[861]	GETGLOBAL	R13 K1 ; R13 := 0x7b998233
	69	[861]	GETUPVAL 	R14 U1 ; R14 := U1
	70	[861]	SELF     	R14 R14 K15 ; R15 := R14; R14 := R14[0x5e651723]
	71	[861]	CALL     	R14 2 0 ; R14,... := R14(R15)
	72	[861]	CALL     	R13 0 2 ; R13 := R13(R14,...)
	73	[861]	TEST     	R13 1 ; if R13 then PC := 82
	74	[861]	JMP      	82 ; PC := 82
	75	[862]	SELF     	R13 R12 K15 ; R14 := R12; R13 := R12[0x5e651723]
	76	[862]	CALL     	R13 2 2 ; R13 := R13(R14)
	77	[862]	GETUPVAL 	R14 U1 ; R14 := U1
	78	[862]	SELF     	R14 R14 K15 ; R15 := R14; R14 := R14[0x5e651723]
	79	[862]	CALL     	R14 2 2 ; R14 := R14(R15)
	80	[862]	EQ       	0 R13 R14 ; if R13 ~= R14 then PC := 116
	81	[862]	JMP      	116 ; PC := 116
	82	[865]	GETTABLE 	R13 R0 K16 ; R13 := R0["stackData"]
	83	[865]	TEST     	R13 0 ; if not R13 then PC := 103
	84	[865]	JMP      	103 ; PC := 103
	85	[865]	GETTABLE 	R13 R0 K17 ; R13 := R0["buffType"]
	86	[865]	GETTABLE 	R14 R7 K18 ; R14 := R7["mBuffType"]
	87	[865]	EQ       	0 R13 R14 ; if R13 ~= R14 then PC := 103
	88	[865]	JMP      	103 ; PC := 103
	89	[866]	GETTABLE 	R13 R7 K19 ; R13 := R7["mBuffData"]
	90	[866]	GETTABLE 	R14 R0 K20 ; R14 := R0["buffData"]
	91	[866]	SUB      	R13 R13 R14 ; R13 := R13 - R14
	92	[866]	SETTABLE 	R7 K19 R13 ; R7["mBuffData"] := R13
	93	[867]	GETTABLE 	R13 R7 K19 ; R13 := R7["mBuffData"]
	94	[867]	LT       	0 K21 R13 ; if 0.000010 >= R13 then PC := 103
	95	[867]	JMP      	103 ; PC := 103
	96	[868]	GETUPVAL 	R13 U0 ; R13 := U0
	97	[868]	SELF     	R13 R13 K22 ; R14 := R13; R13 := R13[0x71e9ac81]
	98	[868]	LOADNIL  	R15 R15 ; R15 := nil
	99	[868]	OP_LOADBOOL	R16 1 0 ; R16 := true
	100	[868]	OP_LOADBOOL	R17 1 0 ; R17 := true
	101	[868]	CALL     	R13 5 1 ; R13(R14,R15,R16,R17)
	102	[869]	JMP      	120 ; PC := 120
	103	[873]	GETUPVAL 	R13 U0 ; R13 := U0
	104	[873]	SELF     	R13 R13 K23 ; R14 := R13; R13 := R13[0x9ae7e2d2]
	105	[873]	MOVE     	R15 R6 ; R15 := R6
	106	[873]	OP_LOADBOOL	R16 1 0 ; R16 := true
	107	[873]	OP_LOADBOOL	R17 1 0 ; R17 := true
	108	[873]	CALL     	R13 5 1 ; R13(R14,R15,R16,R17)
	109	[874]	GETUPVAL 	R13 U0 ; R13 := U0
	110	[874]	SELF     	R13 R13 K22 ; R14 := R13; R13 := R13[0x71e9ac81]
	111	[874]	LOADNIL  	R15 R15 ; R15 := nil
	112	[874]	OP_LOADBOOL	R16 1 0 ; R16 := true
	113	[874]	OP_LOADBOOL	R17 1 0 ; R17 := true
	114	[874]	CALL     	R13 5 1 ; R13(R14,R15,R16,R17)
	115	[875]	JMP      	120 ; PC := 120
	116	[855]	TFORLOOP 	R8 2 ; R11,R12 := R8(R9,R10); if R11 ~= nil then begin PC = 52; R10 := R11 end
	117	[877]	JMP      	52 ; PC := 52
	118	[881]	JMP      	120 ; PC := 120
	119	[850]	FORLOOP  	R3 34 ; R3 += R5; if R3 <= R4 then begin PC := 34; R6 := R3 end
	120	[885]	GETTABLE 	R13 R2 K5 ; R13 := R2["Instigator"]
	121	[885]	GETUPVAL 	R14 U1 ; R14 := U1
	122	[885]	EQ       	1 R13 R14 ; if R13 == R14 then PC := 130
	123	[885]	JMP      	130 ; PC := 130
	124	[885]	GETTABLE 	R13 R2 K5 ; R13 := R2["Instigator"]
	125	[885]	EQ       	1 R13 R1 ; if R13 == R1 then PC := 130
	126	[885]	JMP      	130 ; PC := 130
	127	[885]	GETTABLE 	R13 R0 K24 ; R13 := R0["forceSquadPanel"]
	128	[885]	JMP      	131 ; PC := 131
	129	[885]	OP_LOADBOOL	R13 0 1 ; R13 := false; PC := 130
	130	[885]	OP_LOADBOOL	R13 1 0 ; R13 := true
	131	[886]	TEST     	R13 0 ; if not R13 then PC := 140
	132	[886]	JMP      	140 ; PC := 140
	133	[886]	GETUPVAL 	R14 U3 ; R14 := U3
	134	[886]	EQ       	1 R14 K0 ; if R14 == nil then PC := 140
	135	[886]	JMP      	140 ; PC := 140
	136	[887]	GETUPVAL 	R14 U3 ; R14 := U3
	137	[887]	SELF     	R14 R14 K25 ; R15 := R14; R14 := R14[0xc2a148ad]
	138	[887]	MOVE     	R16 R0 ; R16 := R0
	139	[887]	CALL     	R14 3 1 ; R14(R15,R16)
	140	[889]	RETURN   	R0 1 ; return 

function #34 <?:891,897> (23 instructions, 92 bytes at 000002113286CA60)
4 params, 10 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[892]	GETGLOBAL	R4 K0 ; R4 := 0x0b96777e
	2	[892]	MOVE     	R5 R2 ; R5 := R2
	3	[892]	CALL     	R4 2 2 ; R4 := R4(R5)
	4	[892]	EQ       	0 R4 K1 ; if R4 ~= "string" then PC := 13
	5	[892]	JMP      	13 ; PC := 13
	6	[893]	GETUPVAL 	R4 U0 ; R4 := U0
	7	[893]	SELF     	R4 R4 K2 ; R5 := R4; R4 := R4[0x23c0e8e8]
	8	[893]	MOVE     	R6 R0 ; R6 := R0
	9	[893]	MOVE     	R7 R1 ; R7 := R1
	10	[893]	MOVE     	R8 R2 ; R8 := R2
	11	[893]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	12	[893]	JMP      	23 ; PC := 23
	13	[895]	GETUPVAL 	R4 U0 ; R4 := U0
	14	[895]	SELF     	R4 R4 K3 ; R5 := R4; R4 := R4[0xe6d078f5]
	15	[895]	MOVE     	R6 R0 ; R6 := R0
	16	[895]	MOVE     	R7 R1 ; R7 := R1
	17	[895]	MOVE     	R8 R2 ; R8 := R2
	18	[895]	EQ       	1 R3 K4 ; if R3 == true then PC := 21
	19	[895]	JMP      	21 ; PC := 21
	20	[895]	OP_LOADBOOL	R9 0 1 ; R9 := false; PC := 21
	21	[895]	OP_LOADBOOL	R9 1 0 ; R9 := true
	22	[895]	CALL     	R4 6 1 ; R4(R5,R6,R7,R8,R9)
	23	[897]	RETURN   	R0 1 ; return 

function #35 <?:899,901> (12 instructions, 48 bytes at 0000021116E97570)
5 params, 12 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[900]	GETUPVAL 	R5 U0 ; R5 := U0
	2	[900]	SELF     	R5 R5 K0 ; R6 := R5; R5 := R5[0xcc4ac7a6]
	3	[900]	MOVE     	R7 R0 ; R7 := R0
	4	[900]	MOVE     	R8 R1 ; R8 := R1
	5	[900]	MOVE     	R9 R2 ; R9 := R2
	6	[900]	MOVE     	R10 R3 ; R10 := R3
	7	[900]	EQ       	1 R4 K1 ; if R4 == true then PC := 10
	8	[900]	JMP      	10 ; PC := 10
	9	[900]	OP_LOADBOOL	R11 0 1 ; R11 := false; PC := 10
	10	[900]	OP_LOADBOOL	R11 1 0 ; R11 := true
	11	[900]	CALL     	R5 7 1 ; R5(R6,R7,R8,R9,R10,R11)
	12	[901]	RETURN   	R0 1 ; return 

function #36 <?:903,908> (18 instructions, 72 bytes at 0000021116E97640)
0 params, 7 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[904]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[904]	GETGLOBAL	R1 K1 ; R1 := 0x988ffae3
	3	[904]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[904]	TEST     	R0 1 ; if R0 then PC := 18
	5	[904]	JMP      	18 ; PC := 18
	6	[905]	GETUPVAL 	R0 U0 ; R0 := U0
	7	[905]	GETTABLE 	R0 R0 K2 ; R0 := R0[0xb5be5d4a]
	8	[905]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	9	[905]	LOADK    	R2 K4 ; R2 := "AbilityPanel.Focus"
	10	[905]	CALL     	R0 3 3 ; R0,R1 := R0(R1,R2)
	11	[906]	GETUPVAL 	R2 U0 ; R2 := U0
	12	[906]	GETTABLE 	R2 R2 K5 ; R2 := R2[0x5a22d251]
	13	[906]	GETGLOBAL	R3 K3 ; R3 := 0xae91e43b
	14	[906]	GETGLOBAL	R4 K1 ; R4 := 0x988ffae3
	15	[906]	MOVE     	R5 R0 ; R5 := R0
	16	[906]	MOVE     	R6 R1 ; R6 := R1
	17	[906]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	18	[908]	RETURN   	R0 1 ; return 

function #37 <?:910,912> (6 instructions, 24 bytes at 000002111BB4B0B0)
2 params, 6 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[911]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[911]	SELF     	R2 R2 K0 ; R3 := R2; R2 := R2[0x052b9d3b]
	3	[911]	MOVE     	R4 R0 ; R4 := R0
	4	[911]	MOVE     	R5 R1 ; R5 := R1
	5	[911]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	6	[912]	RETURN   	R0 1 ; return 

function #38 <?:914,958> (125 instructions, 500 bytes at 000002111BB4B140)
0 params, 7 slots, 6 upvalues, 0 locals, 30 constants, 3 functions
	1	[915]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[915]	SETTABLE 	R0 K0 K1 ; R0["Initialized"] := false
	3	[916]	GETGLOBAL	R0 K2 ; R0 := _T
	4	[916]	GETTABLE 	R0 R0 K3 ; R0 := R0["HudInitialized"]
	5	[916]	TEST     	R0 0 ; if not R0 then PC := 14
	6	[916]	JMP      	14 ; PC := 14
	7	[916]	GETGLOBAL	R0 K2 ; R0 := _T
	8	[916]	GETTABLE 	R0 R0 K3 ; R0 := R0["HudInitialized"]
	9	[916]	GETGLOBAL	R1 K4 ; R1 := 0xae91e43b
	10	[916]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 14
	11	[916]	JMP      	14 ; PC := 14
	12	[917]	GETGLOBAL	R0 K2 ; R0 := _T
	13	[917]	SETTABLE 	R0 K3 K5 ; R0["HudInitialized"] := nil
	14	[919]	GETGLOBAL	R0 K6 ; R0 := 0x7b998233
	15	[919]	GETGLOBAL	R1 K7 ; R1 := 0x9d6c77be
	16	[919]	CALL     	R0 2 2 ; R0 := R0(R1)
	17	[919]	TEST     	R0 1 ; if R0 then PC := 22
	18	[919]	JMP      	22 ; PC := 22
	19	[920]	GETUPVAL 	R0 U1 ; R0 := U1
	20	[920]	LOADNIL  	R1 R1 ; R1 := nil
	21	[920]	CALL     	R0 2 1 ; R0(R1)
	22	[922]	GETGLOBAL	R0 K6 ; R0 := 0x7b998233
	23	[922]	GETUPVAL 	R1 U2 ; R1 := U2
	24	[922]	CALL     	R0 2 2 ; R0 := R0(R1)
	25	[922]	TEST     	R0 1 ; if R0 then PC := 34
	26	[922]	JMP      	34 ; PC := 34
	27	[923]	GETGLOBAL	R0 K8 ; R0 := 0xe72d2edb
	28	[923]	EQ       	1 R0 K10 ; if R0 == 0.000000 then PC := 34
	29	[923]	JMP      	34 ; PC := 34
	30	[924]	GETUPVAL 	R0 U2 ; R0 := U2
	31	[924]	SELF     	R0 R0 K11 ; R1 := R0; R0 := R0[0xeaef69de]
	32	[924]	LOADK    	R2 := 0.000000
	33	[924]	CALL     	R0 3 1 ; R0(R1,R2)
	34	[927]	GETGLOBAL	R0 K6 ; R0 := 0x7b998233
	35	[927]	GETUPVAL 	R1 U3 ; R1 := U3
	36	[927]	CALL     	R0 2 2 ; R0 := R0(R1)
	37	[927]	TEST     	R0 1 ; if R0 then PC := 46
	38	[927]	JMP      	46 ; PC := 46
	39	[928]	GETGLOBAL	R0 K8 ; R0 := 0xe72d2edb
	40	[928]	EQ       	1 R0 K10 ; if R0 == 0.000000 then PC := 46
	41	[928]	JMP      	46 ; PC := 46
	42	[929]	GETUPVAL 	R0 U3 ; R0 := U3
	43	[929]	SELF     	R0 R0 K11 ; R1 := R0; R0 := R0[0xeaef69de]
	44	[929]	LOADK    	R2 := 0.000000
	45	[929]	CALL     	R0 3 1 ; R0(R1,R2)
	46	[932]	GETGLOBAL	R0 K6 ; R0 := 0x7b998233
	47	[932]	GETUPVAL 	R1 U4 ; R1 := U4
	48	[932]	CALL     	R0 2 2 ; R0 := R0(R1)
	49	[932]	TEST     	R0 1 ; if R0 then PC := 54
	50	[932]	JMP      	54 ; PC := 54
	51	[933]	GETUPVAL 	R0 U4 ; R0 := U4
	52	[933]	SELF     	R0 R0 K12 ; R1 := R0; R0 := R0[0xa2880940]
	53	[933]	CALL     	R0 2 1 ; R0(R1)
	54	[936]	GETGLOBAL	R0 K13 ; R0 := 0x9ba7909f
	55	[936]	SELF     	R0 R0 K14 ; R1 := R0; R0 := R0[0xbcfb64ab]
	56	[936]	GETGLOBAL	R2 K15 ; R2 := 0xd991a286
	57	[936]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	58	[937]	GETGLOBAL	R1 K6 ; R1 := 0x7b998233
	59	[937]	MOVE     	R2 R0 ; R2 := R0
	60	[937]	CALL     	R1 2 2 ; R1 := R1(R2)
	61	[937]	TEST     	R1 1 ; if R1 then PC := 74
	62	[937]	JMP      	74 ; PC := 74
	63	[937]	GETGLOBAL	R1 K16 ; R1 := 0xbe190284
	64	[937]	SELF     	R1 R1 K17 ; R2 := R1; R1 := R1[0xf2deaf69]
	65	[937]	GETGLOBAL	R3 K18 ; R3 := gLotusAttractModeGameRulesType
	66	[937]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	67	[937]	TEST     	R1 1 ; if R1 then PC := 74
	68	[937]	JMP      	74 ; PC := 74
	69	[938]	GETGLOBAL	R1 K19 ; R1 := 0x3d106989
	70	[938]	LOADK    	R2 K20 ; R2 := "HUD Redux: Closing background movie"
	71	[938]	CALL     	R1 2 1 ; R1(R2)
	72	[939]	SELF     	R1 R0 K21 ; R2 := R0; R1 := R0[0x32302b4a]
	73	[939]	CALL     	R1 2 1 ; R1(R2)
	74	[941]	GETGLOBAL	R1 K6 ; R1 := 0x7b998233
	75	[941]	GETUPVAL 	R2 U0 ; R2 := U0
	76	[941]	GETTABLE 	R2 R2 K22 ; R2 := R2["mProfileMovie"]
	77	[941]	CALL     	R1 2 2 ; R1 := R1(R2)
	78	[941]	TEST     	R1 1 ; if R1 then PC := 84
	79	[941]	JMP      	84 ; PC := 84
	80	[942]	GETUPVAL 	R1 U0 ; R1 := U0
	81	[942]	GETTABLE 	R1 R1 K22 ; R1 := R1["mProfileMovie"]
	82	[942]	SELF     	R1 R1 K21 ; R2 := R1; R1 := R1[0x32302b4a]
	83	[942]	CALL     	R1 2 1 ; R1(R2)
	84	[944]	GETGLOBAL	R1 K6 ; R1 := 0x7b998233
	85	[944]	GETUPVAL 	R2 U0 ; R2 := U0
	86	[944]	GETTABLE 	R2 R2 K23 ; R2 := R2["mHudMarkersMovie"]
	87	[944]	CALL     	R1 2 2 ; R1 := R1(R2)
	88	[944]	TEST     	R1 1 ; if R1 then PC := 94
	89	[944]	JMP      	94 ; PC := 94
	90	[945]	GETUPVAL 	R1 U0 ; R1 := U0
	91	[945]	GETTABLE 	R1 R1 K23 ; R1 := R1["mHudMarkersMovie"]
	92	[945]	SELF     	R1 R1 K21 ; R2 := R1; R1 := R1[0x32302b4a]
	93	[945]	CALL     	R1 2 1 ; R1(R2)
	94	[947]	GETGLOBAL	R1 K6 ; R1 := 0x7b998233
	95	[947]	GETUPVAL 	R2 U5 ; R2 := U5
	96	[947]	CALL     	R1 2 2 ; R1 := R1(R2)
	97	[947]	TEST     	R1 1 ; if R1 then PC := 102
	98	[947]	JMP      	102 ; PC := 102
	99	[948]	GETUPVAL 	R1 U5 ; R1 := U5
	100	[948]	SELF     	R1 R1 K24 ; R2 := R1; R1 := R1[0xdb371820]
	101	[948]	CALL     	R1 2 1 ; R1(R2)
	102	[950]	GETGLOBAL	R1 K2 ; R1 := _T
	103	[950]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	104	[950]	SETTABLE 	R1 K25 R2 ; R1[0x73901acf] := R2
	105	[951]	GETGLOBAL	R1 K2 ; R1 := _T
	106	[951]	CLOSURE  	R2 1 ; R2 := closure(Function #2)
	107	[951]	SETTABLE 	R1 K26 R2 ; R1[0x89326c93] := R2
	108	[952]	GETGLOBAL	R1 K2 ; R1 := _T
	109	[952]	CLOSURE  	R2 2 ; R2 := closure(Function #3)
	110	[952]	SETTABLE 	R1 K27 R2 ; R1[0x18d05d30] := R2
	111	[953]	GETGLOBAL	R1 K2 ; R1 := _T
	112	[953]	SETTABLE 	R1 K28 K5 ; R1["HudType"] := nil
	113	[955]	LOADK    	R1 := 1.000000
	114	[955]	GETGLOBAL	R2 K2 ; R2 := _T
	115	[955]	GETTABLE 	R2 R2 K29 ; R2 := R2["HudNonQueuedFunctions"]
	116	[955]	LEN      	R2 R2 ; R2 := # R2
	117	[955]	LOADK    	R3 := 1.000000
	118	[955]	FORPREP  	R1 124 ; R1 -= R3; PC := 124
	119	[956]	GETGLOBAL	R5 K2 ; R5 := _T
	120	[956]	GETGLOBAL	R6 K2 ; R6 := _T
	121	[956]	GETTABLE 	R6 R6 K29 ; R6 := R6["HudNonQueuedFunctions"]
	122	[956]	GETTABLE 	R6 R6 R4 ; R6 := R6[R4]
	123	[956]	SETTABLE 	R5 R6 K5 ; R5[R6] := nil
	124	[955]	FORLOOP  	R1 119 ; R1 += R3; if R1 <= R2 then begin PC := 119; R4 := R1 end
	125	[958]	RETURN   	R0 1 ; return 

function #39 <?:962,983> (52 instructions, 208 bytes at 000002112F3D8660)
2 params, 14 slots, 1 upvalue, 0 locals, 13 constants, 0 functions
	1	[963]	GETGLOBAL	R2 K0 ; R2 := 0x0032441c
	2	[963]	GETTABLE 	R2 R2 K1 ; R2 := R2["StalkerMode"]
	3	[963]	TEST     	R2 0 ; if not R2 then PC := 7
	4	[963]	JMP      	7 ; PC := 7
	5	[964]	LOADNIL  	R2 R2 ; R2 := nil
	6	[964]	RETURN   	R2 2 ; return R2 
	7	[967]	LOADK    	R2 K2 ; R2 := ""
	8	[968]	TEST     	R1 0 ; if not R1 then PC := 47
	9	[968]	JMP      	47 ; PC := 47
	10	[969]	NEWTABLE 	R3 0 1 ; R3 := {}
	11	[969]	SETTABLE 	R3 K3 K4 ; R3["Icon"] := true
	12	[970]	NEWTABLE 	R4 0 0 ; R4 := {}
	13	[971]	GETGLOBAL	R5 K5 ; R5 := 0xcfc01047
	14	[971]	MOVE     	R6 R1 ; R6 := R1
	15	[971]	CALL     	R5 2 4 ; R5,R6,R7 := R5(R6)
	16	[971]	JMP      	40 ; PC := 40
	17	[972]	GETGLOBAL	R10 K6 ; R10 := 0x0b96777e
	18	[972]	MOVE     	R11 R9 ; R11 := R9
	19	[972]	CALL     	R10 2 2 ; R10 := R10(R11)
	20	[972]	EQ       	0 R10 K7 ; if R10 ~= "userdata" then PC := 29
	21	[972]	JMP      	29 ; PC := 29
	22	[972]	GETTABLE 	R10 R3 R8 ; R10 := R3[R8]
	23	[972]	TEST     	R10 0 ; if not R10 then PC := 29
	24	[972]	JMP      	29 ; PC := 29
	25	[973]	SELF     	R10 R9 K8 ; R11 := R9; R10 := R9[0xed4e0128]
	26	[973]	CALL     	R10 2 2 ; R10 := R10(R11)
	27	[973]	SETTABLE 	R4 R8 R10 ; R4[R8] := R10
	28	[973]	JMP      	40 ; PC := 40
	29	[974]	GETGLOBAL	R10 K6 ; R10 := 0x0b96777e
	30	[974]	MOVE     	R11 R9 ; R11 := R9
	31	[974]	CALL     	R10 2 2 ; R10 := R10(R11)
	32	[974]	EQ       	1 R10 K9 ; if R10 == "function" then PC := 40
	33	[974]	JMP      	40 ; PC := 40
	34	[974]	GETGLOBAL	R10 K6 ; R10 := 0x0b96777e
	35	[974]	MOVE     	R11 R9 ; R11 := R9
	36	[974]	CALL     	R10 2 2 ; R10 := R10(R11)
	37	[974]	EQ       	1 R10 K7 ; if R10 == "userdata" then PC := 40
	38	[974]	JMP      	40 ; PC := 40
	39	[975]	SETTABLE 	R4 R8 R9 ; R4[R8] := R9
	40	[971]	TFORLOOP 	R5 2 ; R8,R9 := R5(R6,R7); if R8 ~= nil then begin PC = 17; R7 := R8 end
	41	[976]	JMP      	17 ; PC := 17
	42	[979]	GETGLOBAL	R10 K10 ; R10 := cjson
	43	[979]	GETTABLE 	R10 R10 K11 ; R10 := R10[0xb139d7bc]
	44	[979]	MOVE     	R11 R4 ; R11 := R4
	45	[979]	CALL     	R10 2 2 ; R10 := R10(R11)
	46	[979]	MOVE     	R2 R10 ; R2 := R10
	47	[982]	GETUPVAL 	R10 U0 ; R10 := U0
	48	[982]	SELF     	R10 R10 K12 ; R11 := R10; R10 := R10[0x80b8b450]
	49	[982]	MOVE     	R12 R0 ; R12 := R0
	50	[982]	MOVE     	R13 R2 ; R13 := R2
	51	[982]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	52	[983]	RETURN   	R0 1 ; return 

function #40 <?:985,998> (39 instructions, 156 bytes at 000002111DE39DA0)
3 params, 10 slots, 3 upvalues, 0 locals, 4 constants, 0 functions
	1	[986]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	2	[986]	GETUPVAL 	R4 U0 ; R4 := U0
	3	[986]	CALL     	R3 2 2 ; R3 := R3(R4)
	4	[986]	TEST     	R3 1 ; if R3 then PC := 39
	5	[986]	JMP      	39 ; PC := 39
	6	[986]	EQ       	1 R0 K1 ; if R0 == "" then PC := 39
	7	[986]	JMP      	39 ; PC := 39
	8	[986]	EQ       	1 R1 K1 ; if R1 == "" then PC := 39
	9	[986]	JMP      	39 ; PC := 39
	10	[987]	GETUPVAL 	R3 U0 ; R3 := U0
	11	[987]	SELF     	R3 R3 K2 ; R4 := R3; R3 := R3[0x5ca33548]
	12	[987]	CALL     	R3 2 2 ; R3 := R3(R4)
	13	[988]	EQ       	1 R3 R0 ; if R3 == R0 then PC := 19
	14	[988]	JMP      	19 ; PC := 19
	15	[988]	EQ       	0 R3 R1 ; if R3 ~= R1 then PC := 29
	16	[988]	JMP      	29 ; PC := 29
	17	[988]	EQ       	1 R1 R0 ; if R1 == R0 then PC := 29
	18	[988]	JMP      	29 ; PC := 29
	19	[990]	EQ       	1 R1 R3 ; if R1 == R3 then PC := 22
	20	[990]	JMP      	22 ; PC := 22
	21	[990]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 22
	22	[990]	OP_LOADBOOL	R4 1 0 ; R4 := true
	23	[991]	GETUPVAL 	R5 U1 ; R5 := U1
	24	[991]	SELF     	R5 R5 K3 ; R6 := R5; R5 := R5[0x7fbe731e]
	25	[991]	MOVE     	R7 R4 ; R7 := R4
	26	[991]	MOVE     	R8 R0 ; R8 := R0
	27	[991]	MOVE     	R9 R1 ; R9 := R1
	28	[991]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	29	[994]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	30	[994]	MOVE     	R6 R2 ; R6 := R2
	31	[994]	CALL     	R5 2 2 ; R5 := R5(R6)
	32	[994]	TEST     	R5 1 ; if R5 then PC := 39
	33	[994]	JMP      	39 ; PC := 39
	34	[994]	EQ       	1 R2 K1 ; if R2 == "" then PC := 39
	35	[994]	JMP      	39 ; PC := 39
	36	[995]	GETUPVAL 	R5 U2 ; R5 := U2
	37	[995]	MOVE     	R6 R2 ; R6 := R2
	38	[995]	CALL     	R5 2 1 ; R5(R6)
	39	[998]	RETURN   	R0 1 ; return 

function #41 <?:1000,1004> (6 instructions, 24 bytes at 0000021130FE7160)
2 params, 3 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[1001]	TEST     	R0 0 ; if not R0 then PC := 6
	2	[1001]	JMP      	6 ; PC := 6
	3	[1002]	GETGLOBAL	R2 K0 ; R2 := _T
	4	[1002]	GETTABLE 	R2 R2 K1 ; R2 := R2["gLoadedIcons"]
	5	[1002]	SETTABLE 	R2 R1 K2 ; R2[R1] := true
	6	[1004]	RETURN   	R0 1 ; return 

function #42 <?:1006,1011> (17 instructions, 68 bytes at 0000021130FE7230)
0 params, 3 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[1007]	GETGLOBAL	R0 K0 ; R0 := 0x9ba7909f
	2	[1007]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x6dd7aa66]
	3	[1007]	GETGLOBAL	R2 K2 ; R2 := 0x63879a7c
	4	[1007]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	5	[1008]	GETGLOBAL	R1 K3 ; R1 := 0x7b998233
	6	[1008]	MOVE     	R2 R0 ; R2 := R0
	7	[1008]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[1008]	TEST     	R1 1 ; if R1 then PC := 17
	9	[1008]	JMP      	17 ; PC := 17
	10	[1008]	GETGLOBAL	R1 K4 ; R1 := _T
	11	[1008]	GETTABLE 	R1 R1 K5 ; R1 := R1["DisplayMysteryPrize"]
	12	[1008]	TEST     	R1 0 ; if not R1 then PC := 17
	13	[1008]	JMP      	17 ; PC := 17
	14	[1009]	GETGLOBAL	R1 K4 ; R1 := _T
	15	[1009]	GETTABLE 	R1 R1 K6 ; R1 := R1[0x83fce65b]
	16	[1009]	CALL     	R1 1 1 ; R1()
	17	[1011]	RETURN   	R0 1 ; return 

function #43 <?:1013,1031> (5 instructions, 20 bytes at 00000211282C0170)
1 param, 3 slots, 1 upvalue, 0 locals, 0 constants, 1 function
	1	[1014]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1030]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	3	[1030]	MOVE     	R0 R0 ; R0 := R0
	4	[1014]	CALL     	R1 2 1 ; R1(R2)
	5	[1031]	RETURN   	R0 1 ; return 

function #44 <?:1034,1051> (43 instructions, 172 bytes at 000002112AF885B0)
1 param, 6 slots, 1 upvalue, 0 locals, 8 constants, 0 functions
	1	[1035]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[1035]	GETTABLE 	R1 R1 K1 ; R1 := R1["gLoadedIcons"]
	3	[1035]	EQ       	0 R1 K2 ; if R1 ~= nil then PC := 8
	4	[1035]	JMP      	8 ; PC := 8
	5	[1036]	GETGLOBAL	R1 K0 ; R1 := _T
	6	[1036]	NEWTABLE 	R2 0 0 ; R2 := {}
	7	[1036]	SETTABLE 	R1 K1 R2 ; R1["gLoadedIcons"] := R2
	8	[1039]	OP_LOADBOOL	R1 0 0 ; R1 := false
	9	[1040]	GETGLOBAL	R2 K3 ; R2 := 0x7b998233
	10	[1040]	MOVE     	R3 R0 ; R3 := R0
	11	[1040]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[1040]	TEST     	R2 1 ; if R2 then PC := 42
	13	[1040]	JMP      	42 ; PC := 42
	14	[1041]	GETGLOBAL	R2 K0 ; R2 := _T
	15	[1041]	GETTABLE 	R2 R2 K1 ; R2 := R2["gLoadedIcons"]
	16	[1041]	SELF     	R3 R0 K4 ; R4 := R0; R3 := R0[0xed4e0128]
	17	[1041]	CALL     	R3 2 2 ; R3 := R3(R4)
	18	[1041]	GETTABLE 	R2 R2 R3 ; R2 := R2[R3]
	19	[1041]	EQ       	0 R2 K2 ; if R2 ~= nil then PC := 34
	20	[1041]	JMP      	34 ; PC := 34
	21	[1042]	GETGLOBAL	R2 K0 ; R2 := _T
	22	[1042]	GETTABLE 	R2 R2 K1 ; R2 := R2["gLoadedIcons"]
	23	[1042]	SELF     	R3 R0 K4 ; R4 := R0; R3 := R0[0xed4e0128]
	24	[1042]	CALL     	R3 2 2 ; R3 := R3(R4)
	25	[1042]	SETTABLE 	R2 R3 K5 ; R2[R3] := false
	26	[1043]	GETUPVAL 	R2 U0 ; R2 := U0
	27	[1043]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0x8e07e77f]
	28	[1043]	SELF     	R4 R0 K4 ; R5 := R0; R4 := R0[0xed4e0128]
	29	[1043]	CALL     	R4 2 2 ; R4 := R4(R5)
	30	[1043]	LOADK    	R5 K7 ; R5 := "OnIconReady"
	31	[1043]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	32	[1044]	OP_LOADBOOL	R1 1 0 ; R1 := true
	33	[1044]	JMP      	42 ; PC := 42
	34	[1045]	GETGLOBAL	R2 K0 ; R2 := _T
	35	[1045]	GETTABLE 	R2 R2 K1 ; R2 := R2["gLoadedIcons"]
	36	[1045]	SELF     	R3 R0 K4 ; R4 := R0; R3 := R0[0xed4e0128]
	37	[1045]	CALL     	R3 2 2 ; R3 := R3(R4)
	38	[1045]	GETTABLE 	R2 R2 R3 ; R2 := R2[R3]
	39	[1045]	EQ       	0 R2 K5 ; if R2 ~= false then PC := 42
	40	[1045]	JMP      	42 ; PC := 42
	41	[1046]	OP_LOADBOOL	R1 1 0 ; R1 := true
	42	[1050]	RETURN   	R1 2 ; return R1 
	43	[1051]	RETURN   	R0 1 ; return 

function #45 <?:1053,1069> (32 instructions, 128 bytes at 000002111FE16AC0)
1 param, 12 slots, 1 upvalue, 0 locals, 9 constants, 0 functions
	1	[1054]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[1054]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[1054]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[1054]	TEST     	R1 1 ; if R1 then PC := 32
	5	[1054]	JMP      	32 ; PC := 32
	6	[1055]	LOADNIL  	R1 R1 ; R1 := nil
	7	[1056]	LOADK    	R2 := 0.000000
	8	[1057]	LOADK    	R3 := 1.000000
	9	[1057]	GETUPVAL 	R4 U0 ; R4 := U0
	10	[1057]	GETTABLE 	R4 R4 K1 ; R4 := R4["list"]
	11	[1057]	LEN      	R4 R4 ; R4 := # R4
	12	[1057]	LOADK    	R5 := 1.000000
	13	[1057]	FORPREP  	R3 22 ; R3 -= R5; PC := 22
	14	[1058]	GETUPVAL 	R7 U0 ; R7 := U0
	15	[1058]	GETTABLE 	R7 R7 K1 ; R7 := R7["list"]
	16	[1058]	GETTABLE 	R1 R7 R6 ; R1 := R7[R6]
	17	[1059]	GETTABLE 	R7 R1 K2 ; R7 := R1["clip"]
	18	[1059]	EQ       	0 R7 K3 ; if R7 ~= "LogMessageContainer" then PC := 22
	19	[1059]	JMP      	22 ; PC := 22
	20	[1060]	GETTABLE 	R2 R1 K4 ; R2 := R1["NewY"]
	21	[1061]	JMP      	23 ; PC := 23
	22	[1057]	FORLOOP  	R3 14 ; R3 += R5; if R3 <= R4 then begin PC := 14; R6 := R3 end
	23	[1064]	EQ       	0 R0 K5 ; if R0 ~= "true" then PC := 26
	24	[1064]	JMP      	26 ; PC := 26
	25	[1065]	SUB      	R2 R2 K6 ; R2 := R2 - 80.000000
	26	[1067]	GETGLOBAL	R7 K7 ; R7 := 0xae91e43b
	27	[1067]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x67bc869f]
	28	[1067]	LOADK    	R9 K3 ; R9 := "LogMessageContainer"
	29	[1067]	LOADK    	R10 := 1.000000
	30	[1067]	MOVE     	R11 R2 ; R11 := R2
	31	[1067]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	32	[1069]	RETURN   	R0 1 ; return 

function #46 <?:1072,1076> (18 instructions, 72 bytes at 00000211243A3D20)
1 param, 6 slots, 1 upvalue, 0 locals, 9 constants, 0 functions
	1	[1073]	GETGLOBAL	R1 K0 ; R1 := 0x38f10e85
	2	[1073]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	3	[1073]	LOADK    	R3 K2 ; R3 := "GameplayMessage.gotoAndPlay"
	4	[1073]	LOADK    	R4 K3 ; R4 := "Show"
	5	[1073]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	6	[1074]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	7	[1074]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x67bc869f]
	8	[1074]	LOADK    	R3 K5 ; R3 := "GameplayMessage.MsgContainer.Msg"
	9	[1074]	LOADK    	R4 := 36.000000
	10	[1074]	GETUPVAL 	R5 U0 ; R5 := U0
	11	[1074]	GETTABLE 	R5 R5 K6 ; R5 := R5["Text"]
	12	[1074]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	13	[1075]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	14	[1075]	SELF     	R1 R1 K7 ; R2 := R1; R1 := R1[0x20b98db3]
	15	[1075]	LOADK    	R3 K8 ; R3 := "GameplayMessage.MsgContainer.Msg.text"
	16	[1075]	MOVE     	R4 R0 ; R4 := R0
	17	[1075]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	18	[1076]	RETURN   	R0 1 ; return 

function #47 <?:1080,1082> (3 instructions, 12 bytes at 00000211243A3EB0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1081]	NEWTABLE 	R0 0 0 ; R0 := {}
	2	[1081]	SETUPVAL 	R0 U0 ; U0 := R0
	3	[1082]	RETURN   	R0 1 ; return 

function #48 <?:1085,1087> (17 instructions, 68 bytes at 0000021115B37B40)
1 param, 10 slots, 1 upvalue, 0 locals, 4 constants, 1 function
	1	[1086]	GETGLOBAL	R1 K0 ; R1 := 0x25312c9b
	2	[1086]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	3	[1086]	MOVE     	R3 R0 ; R3 := R0
	4	[1086]	LOADK    	R4 := 8.000000
	5	[1086]	NEWTABLE 	R5 1 0 ; R5 := {}
	6	[1086]	LOADK    	R6 := 10.000000
	7	[1086]	SETLIST  	R5 1 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
	8	[1086]	NEWTABLE 	R6 1 0 ; R6 := {}
	9	[1086]	LOADK    	R7 := 30.000000
	10	[1086]	SETLIST  	R6 1 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
	11	[1086]	LOADK    	R7 K3 ; R7 := 0.300000
	12	[1086]	LOADK    	R8 := 0.000000
	13	[1086]	CLOSURE  	R9 0 ; R9 := closure(Function #1)
	14	[1086]	MOVE     	R0 R0 ; R0 := R0
	15	[1086]	GETUPVAL 	R0 U0 ; R0 := U0
	16	[1086]	CALL     	R1 9 1 ; R1(R2,R3,R4,R5,R6,R7,R8,R9)
	17	[1087]	RETURN   	R0 1 ; return 

function #49 <?:1090,1092> (16 instructions, 64 bytes at 0000021133F0E3F0)
0 params, 2 slots, 2 upvalues, 0 locals, 5 constants, 0 functions
	1	[1091]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1091]	EQ       	1 R0 K0 ; if R0 == nil then PC := 10
	3	[1091]	JMP      	10 ; PC := 10
	4	[1091]	GETUPVAL 	R0 U0 ; R0 := U0
	5	[1091]	GETTABLE 	R0 R0 K1 ; R0 := R0["UIMode"]
	6	[1091]	GETUPVAL 	R1 U1 ; R1 := U1
	7	[1091]	GETTABLE 	R1 R1 K2 ; R1 := R1["UI_MODE_IN_SPACE_HUB"]
	8	[1091]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 14
	9	[1091]	JMP      	14 ; PC := 14
	10	[1091]	GETGLOBAL	R0 K3 ; R0 := 0x0032441c
	11	[1091]	GETTABLE 	R0 R0 K4 ; R0 := R0["StalkerMode"]
	12	[1091]	JMP      	15 ; PC := 15
	13	[1091]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 14
	14	[1091]	OP_LOADBOOL	R0 1 0 ; R0 := true
	15	[1091]	RETURN   	R0 2 ; return R0 
	16	[1092]	RETURN   	R0 1 ; return 

function #50 <?:1094,1117> (83 instructions, 332 bytes at 0000021131DB1AF0)
0 params, 6 slots, 5 upvalues, 0 locals, 20 constants, 0 functions
	1	[1095]	GETGLOBAL	R0 K0 ; R0 := 0xbe190284
	2	[1095]	SETUPVAL 	R0 U0 ; U0 := R0
	3	[1096]	GETUPVAL 	R0 U1 ; R0 := U1
	4	[1096]	GETUPVAL 	R1 U2 ; R1 := U2
	5	[1096]	GETTABLE 	R1 R1 K2 ; R1 := R1[0xb73d420f]
	6	[1096]	CALL     	R1 1 2 ; R1 := R1()
	7	[1096]	SETTABLE 	R0 K1 R1 ; R0["UIMode"] := R1
	8	[1098]	GETUPVAL 	R0 U3 ; R0 := U3
	9	[1098]	CALL     	R0 1 2 ; R0 := R0()
	10	[1099]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	11	[1099]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xaade900e]
	12	[1099]	LOADK    	R3 K5 ; R3 := "HealthAndShield"
	13	[1099]	LOADK    	R4 := 11.000000
	14	[1099]	NOT      	R5 R0 ; R5 := not R0
	15	[1099]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	16	[1100]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	17	[1100]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xaade900e]
	18	[1100]	LOADK    	R3 K6 ; R3 := "WeaponFrame"
	19	[1100]	LOADK    	R4 := 11.000000
	20	[1100]	NOT      	R5 R0 ; R5 := not R0
	21	[1100]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	22	[1101]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	23	[1101]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xaade900e]
	24	[1101]	LOADK    	R3 K7 ; R3 := "Reticle"
	25	[1101]	LOADK    	R4 := 11.000000
	26	[1101]	NOT      	R5 R0 ; R5 := not R0
	27	[1101]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	28	[1102]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	29	[1102]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xaade900e]
	30	[1102]	LOADK    	R3 K8 ; R3 := "reloadTimer"
	31	[1102]	LOADK    	R4 := 11.000000
	32	[1102]	NOT      	R5 R0 ; R5 := not R0
	33	[1102]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	34	[1103]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	35	[1103]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xaade900e]
	36	[1103]	LOADK    	R3 K9 ; R3 := "AbilityChargeProgress"
	37	[1103]	LOADK    	R4 := 11.000000
	38	[1103]	NOT      	R5 R0 ; R5 := not R0
	39	[1103]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	40	[1105]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	41	[1105]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xaade900e]
	42	[1105]	LOADK    	R3 K10 ; R3 := "PainTop"
	43	[1105]	LOADK    	R4 := 11.000000
	44	[1105]	NOT      	R5 R0 ; R5 := not R0
	45	[1105]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	46	[1106]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	47	[1106]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xaade900e]
	48	[1106]	LOADK    	R3 K11 ; R3 := "PainBottom"
	49	[1106]	LOADK    	R4 := 11.000000
	50	[1106]	NOT      	R5 R0 ; R5 := not R0
	51	[1106]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	52	[1107]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	53	[1107]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xaade900e]
	54	[1107]	LOADK    	R3 K12 ; R3 := "PainLeft"
	55	[1107]	LOADK    	R4 := 11.000000
	56	[1107]	NOT      	R5 R0 ; R5 := not R0
	57	[1107]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	58	[1108]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	59	[1108]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xaade900e]
	60	[1108]	LOADK    	R3 K13 ; R3 := "PainRight"
	61	[1108]	LOADK    	R4 := 11.000000
	62	[1108]	NOT      	R5 R0 ; R5 := not R0
	63	[1108]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	64	[1110]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	65	[1110]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xaade900e]
	66	[1110]	LOADK    	R3 K14 ; R3 := "AbilityPanel"
	67	[1110]	LOADK    	R4 := 11.000000
	68	[1110]	NOT      	R5 R0 ; R5 := not R0
	69	[1110]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	70	[1112]	GETUPVAL 	R1 U4 ; R1 := U4
	71	[1112]	GETTABLE 	R1 R1 K15 ; R1 := R1[0xd2229093]
	72	[1112]	GETUPVAL 	R2 U0 ; R2 := U0
	73	[1112]	CALL     	R1 2 1 ; R1(R2)
	74	[1114]	GETGLOBAL	R1 K16 ; R1 := 0x7b998233
	75	[1114]	GETGLOBAL	R2 K17 ; R2 := _T
	76	[1114]	GETTABLE 	R2 R2 K18 ; R2 := R2["Touch_UpdateTouchControls"]
	77	[1114]	CALL     	R1 2 2 ; R1 := R1(R2)
	78	[1114]	TEST     	R1 1 ; if R1 then PC := 83
	79	[1114]	JMP      	83 ; PC := 83
	80	[1115]	GETGLOBAL	R1 K17 ; R1 := _T
	81	[1115]	GETTABLE 	R1 R1 K19 ; R1 := R1[0xaa4aa244]
	82	[1115]	CALL     	R1 1 1 ; R1()
	83	[1117]	RETURN   	R0 1 ; return 

function #51 <?:1119,1140> (66 instructions, 264 bytes at 0000021131DB1B80)
0 params, 5 slots, 3 upvalues, 0 locals, 16 constants, 0 functions
	1	[1120]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[1120]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[1120]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[1120]	TEST     	R0 0 ; if not R0 then PC := 7
	5	[1120]	JMP      	7 ; PC := 7
	6	[1121]	RETURN   	R0 1 ; return 
	7	[1124]	GETUPVAL 	R0 U1 ; R0 := U1
	8	[1124]	GETUPVAL 	R1 U0 ; R1 := U0
	9	[1124]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0x73a8846a]
	10	[1124]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[1124]	SETTABLE 	R0 K1 R1 ; R0["ptr"] := R1
	12	[1125]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	13	[1125]	GETUPVAL 	R1 U1 ; R1 := U1
	14	[1125]	GETTABLE 	R1 R1 K1 ; R1 := R1["ptr"]
	15	[1125]	CALL     	R0 2 2 ; R0 := R0(R1)
	16	[1125]	TEST     	R0 1 ; if R0 then PC := 31
	17	[1125]	JMP      	31 ; PC := 31
	18	[1126]	GETUPVAL 	R0 U1 ; R0 := U1
	19	[1126]	GETUPVAL 	R1 U1 ; R1 := U1
	20	[1126]	GETTABLE 	R1 R1 K1 ; R1 := R1["ptr"]
	21	[1126]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x327f2778]
	22	[1126]	CALL     	R1 2 2 ; R1 := R1(R2)
	23	[1126]	SETTABLE 	R0 K3 R1 ; R0["impactBehavior"] := R1
	24	[1127]	GETUPVAL 	R0 U1 ; R0 := U1
	25	[1127]	GETUPVAL 	R1 U1 ; R1 := U1
	26	[1127]	GETTABLE 	R1 R1 K1 ; R1 := R1["ptr"]
	27	[1127]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x5419c5ba]
	28	[1127]	CALL     	R1 2 2 ; R1 := R1(R2)
	29	[1127]	SETTABLE 	R0 K5 R1 ; R0["IsMelee"] := R1
	30	[1127]	JMP      	35 ; PC := 35
	31	[1129]	GETUPVAL 	R0 U1 ; R0 := U1
	32	[1129]	SETTABLE 	R0 K3 K7 ; R0["impactBehavior"] := nil
	33	[1130]	GETUPVAL 	R0 U1 ; R0 := U1
	34	[1130]	SETTABLE 	R0 K5 K7 ; R0["IsMelee"] := nil
	35	[1133]	GETUPVAL 	R0 U2 ; R0 := U2
	36	[1133]	GETTABLE 	R0 R0 K8 ; R0 := R0["IsOperator"]
	37	[1133]	TEST     	R0 0 ; if not R0 then PC := 57
	38	[1133]	JMP      	57 ; PC := 57
	39	[1133]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	40	[1133]	GETUPVAL 	R1 U1 ; R1 := U1
	41	[1133]	GETTABLE 	R1 R1 K1 ; R1 := R1["ptr"]
	42	[1133]	CALL     	R0 2 2 ; R0 := R0(R1)
	43	[1133]	TEST     	R0 1 ; if R0 then PC := 57
	44	[1133]	JMP      	57 ; PC := 57
	45	[1133]	GETUPVAL 	R0 U1 ; R0 := U1
	46	[1133]	GETTABLE 	R0 R0 K1 ; R0 := R0["ptr"]
	47	[1133]	SELF     	R0 R0 K9 ; R1 := R0; R0 := R0[0x81f3a598]
	48	[1133]	CALL     	R0 2 2 ; R0 := R0(R1)
	49	[1133]	TEST     	R0 0 ; if not R0 then PC := 57
	50	[1133]	JMP      	57 ; PC := 57
	51	[1134]	GETGLOBAL	R0 K10 ; R0 := 0xae91e43b
	52	[1134]	SELF     	R0 R0 K11 ; R1 := R0; R0 := R0[0xaade900e]
	53	[1134]	LOADK    	R2 K12 ; R2 := "WeaponFrame"
	54	[1134]	LOADK    	R3 := 11.000000
	55	[1134]	OP_LOADBOOL	R4 1 0 ; R4 := true
	56	[1134]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	57	[1137]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	58	[1137]	GETGLOBAL	R1 K13 ; R1 := _T
	59	[1137]	GETTABLE 	R1 R1 K14 ; R1 := R1["Touch_UpdateTouchControls"]
	60	[1137]	CALL     	R0 2 2 ; R0 := R0(R1)
	61	[1137]	TEST     	R0 1 ; if R0 then PC := 66
	62	[1137]	JMP      	66 ; PC := 66
	63	[1138]	GETGLOBAL	R0 K13 ; R0 := _T
	64	[1138]	GETTABLE 	R0 R0 K15 ; R0 := R0[0xaa4aa244]
	65	[1138]	CALL     	R0 1 1 ; R0()
	66	[1140]	RETURN   	R0 1 ; return 

function #52 <?:1142,1180> (164 instructions, 656 bytes at 0000021131DB1C10)
2 params, 16 slots, 9 upvalues, 0 locals, 39 constants, 0 functions
	1	[1143]	GETGLOBAL	R2 K0 ; R2 := _T
	2	[1143]	GETTABLE 	R2 R2 K1 ; R2 := R2["SecretMiniGameActive"]
	3	[1143]	TEST     	R2 0 ; if not R2 then PC := 12
	4	[1143]	JMP      	12 ; PC := 12
	5	[1144]	GETGLOBAL	R2 K2 ; R2 := 0xae91e43b
	6	[1144]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0xaade900e]
	7	[1144]	LOADK    	R4 K4 ; R4 := "WeaponFrame"
	8	[1144]	LOADK    	R5 := 11.000000
	9	[1144]	OP_LOADBOOL	R6 0 0 ; R6 := false
	10	[1144]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	11	[1145]	RETURN   	R0 1 ; return 
	12	[1148]	GETUPVAL 	R2 U0 ; R2 := U0
	13	[1148]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0x3583ccf1]
	14	[1148]	MOVE     	R4 R0 ; R4 := R0
	15	[1148]	MOVE     	R5 R1 ; R5 := R1
	16	[1148]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	17	[1149]	GETUPVAL 	R2 U0 ; R2 := U0
	18	[1149]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0x31051e5a]
	19	[1149]	CALL     	R2 2 2 ; R2 := R2(R3)
	20	[1149]	TEST     	R2 1 ; if R2 then PC := 28
	21	[1149]	JMP      	28 ; PC := 28
	22	[1149]	GETGLOBAL	R2 K7 ; R2 := 0x7b998233
	23	[1149]	GETUPVAL 	R3 U1 ; R3 := U1
	24	[1149]	GETTABLE 	R3 R3 K8 ; R3 := R3["ptr"]
	25	[1149]	CALL     	R2 2 2 ; R2 := R2(R3)
	26	[1149]	TEST     	R2 0 ; if not R2 then PC := 58
	27	[1149]	JMP      	58 ; PC := 58
	28	[1150]	GETUPVAL 	R2 U2 ; R2 := U2
	29	[1150]	CALL     	R2 1 1 ; R2()
	30	[1151]	GETGLOBAL	R2 K7 ; R2 := 0x7b998233
	31	[1151]	GETUPVAL 	R3 U1 ; R3 := U1
	32	[1151]	GETTABLE 	R3 R3 K8 ; R3 := R3["ptr"]
	33	[1151]	CALL     	R2 2 2 ; R2 := R2(R3)
	34	[1151]	TEST     	R2 1 ; if R2 then PC := 58
	35	[1151]	JMP      	58 ; PC := 58
	36	[1152]	GETUPVAL 	R2 U3 ; R2 := U3
	37	[1152]	GETUPVAL 	R3 U1 ; R3 := U1
	38	[1152]	GETTABLE 	R3 R3 K8 ; R3 := R3["ptr"]
	39	[1152]	SELF     	R3 R3 K9 ; R4 := R3; R3 := R3[0x7a7373f5]
	40	[1152]	CALL     	R3 2 2 ; R3 := R3(R4)
	41	[1152]	GETGLOBAL	R4 K10 ; R4 := 0x5bced4c4
	42	[1152]	GETTABLE 	R4 R4 K11 ; R4 := R4[0xac1b386a]
	43	[1152]	LOADK    	R5 K12 ; R5 := 9999.000000
	44	[1152]	GETUPVAL 	R6 U1 ; R6 := U1
	45	[1152]	GETTABLE 	R6 R6 K8 ; R6 := R6["ptr"]
	46	[1152]	SELF     	R6 R6 K13 ; R7 := R6; R6 := R6[0x094b3a83]
	47	[1152]	CALL     	R6 2 0 ; R6,... := R6(R7)
	48	[1152]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	49	[1152]	GETUPVAL 	R5 U1 ; R5 := U1
	50	[1152]	GETTABLE 	R5 R5 K8 ; R5 := R5["ptr"]
	51	[1152]	SELF     	R5 R5 K14 ; R6 := R5; R5 := R5[0xd6bd1155]
	52	[1152]	CALL     	R5 2 2 ; R5 := R5(R6)
	53	[1152]	GETUPVAL 	R6 U1 ; R6 := U1
	54	[1152]	GETTABLE 	R6 R6 K8 ; R6 := R6["ptr"]
	55	[1152]	SELF     	R6 R6 K15 ; R7 := R6; R6 := R6[0xa63336e7]
	56	[1152]	CALL     	R6 2 0 ; R6,... := R6(R7)
	57	[1152]	CALL     	R2 0 1 ; R2(R3,...)
	58	[1156]	GETGLOBAL	R2 K0 ; R2 := _T
	59	[1156]	GETTABLE 	R2 R2 K16 ; R2 := R2["VoidMeleeWeaponComboRequirement"]
	60	[1156]	EQ       	1 R2 K17 ; if R2 == nil then PC := 164
	61	[1156]	JMP      	164 ; PC := 164
	62	[1157]	GETGLOBAL	R2 K7 ; R2 := 0x7b998233
	63	[1157]	GETUPVAL 	R3 U4 ; R3 := U4
	64	[1157]	CALL     	R2 2 2 ; R2 := R2(R3)
	65	[1157]	TEST     	R2 1 ; if R2 then PC := 71
	66	[1157]	JMP      	71 ; PC := 71
	67	[1157]	GETUPVAL 	R2 U4 ; R2 := U4
	68	[1157]	SELF     	R2 R2 K18 ; R3 := R2; R2 := R2[0xb9700060]
	69	[1157]	CALL     	R2 2 2 ; R2 := R2(R3)
	70	[1157]	JMP      	73 ; PC := 73
	71	[1157]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 72
	72	[1157]	OP_LOADBOOL	R2 1 0 ; R2 := true
	73	[1158]	GETGLOBAL	R3 K7 ; R3 := 0x7b998233
	74	[1158]	GETUPVAL 	R4 U1 ; R4 := U1
	75	[1158]	GETTABLE 	R4 R4 K8 ; R4 := R4["ptr"]
	76	[1158]	CALL     	R3 2 2 ; R3 := R3(R4)
	77	[1158]	TEST     	R3 1 ; if R3 then PC := 156
	78	[1158]	JMP      	156 ; PC := 156
	79	[1158]	GETUPVAL 	R3 U1 ; R3 := U1
	80	[1158]	GETTABLE 	R3 R3 K19 ; R3 := R3["IsMelee"]
	81	[1158]	TEST     	R3 1 ; if R3 then PC := 85
	82	[1158]	JMP      	85 ; PC := 85
	83	[1158]	TEST     	R2 0 ; if not R2 then PC := 156
	84	[1158]	JMP      	156 ; PC := 156
	85	[1159]	GETUPVAL 	R3 U1 ; R3 := U1
	86	[1159]	GETTABLE 	R3 R3 K20 ; R3 := R3["impactBehavior"]
	87	[1159]	SELF     	R3 R3 K21 ; R4 := R3; R3 := R3[0xdb875eba]
	88	[1159]	CALL     	R3 2 2 ; R3 := R3(R4)
	89	[1160]	GETGLOBAL	R4 K0 ; R4 := _T
	90	[1160]	GETTABLE 	R4 R4 K16 ; R4 := R4["VoidMeleeWeaponComboRequirement"]
	91	[1160]	LE       	0 R4 R3 ; if R4 > R3 then PC := 147
	92	[1160]	JMP      	147 ; PC := 147
	93	[1160]	GETUPVAL 	R4 U5 ; R4 := U5
	94	[1160]	GETTABLE 	R4 R4 K22 ; R4 := R4["Fade"]
	95	[1160]	LT       	0 R4 K23 ; if R4 >= 1.000000 then PC := 147
	96	[1160]	JMP      	147 ; PC := 147
	97	[1161]	GETUPVAL 	R4 U6 ; R4 := U6
	98	[1161]	GETTABLE 	R4 R4 K24 ; R4 := R4[0x06d055f9]
	99	[1161]	MOVE     	R5 R2 ; R5 := R2
	100	[1161]	LOADK    	R6 K25 ; R6 := "WeaponFrame.ComboLabelMiddle"
	101	[1161]	LOADK    	R7 K26 ; R7 := "WeaponFrame.LabelMiddle"
	102	[1161]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	103	[1162]	GETUPVAL 	R5 U7 ; R5 := U7
	104	[1162]	GETTABLE 	R5 R5 K27 ; R5 := R5[0xb5be5d4a]
	105	[1162]	GETGLOBAL	R6 K2 ; R6 := 0xae91e43b
	106	[1162]	MOVE     	R7 R4 ; R7 := R4
	107	[1162]	OP_LOADBOOL	R8 1 0 ; R8 := true
	108	[1162]	CALL     	R5 4 3 ; R5,R6 := R5(R6,R7,R8)
	109	[1164]	GETGLOBAL	R7 K7 ; R7 := 0x7b998233
	110	[1164]	GETUPVAL 	R8 U8 ; R8 := U8
	111	[1164]	CALL     	R7 2 2 ; R7 := R7(R8)
	112	[1164]	TEST     	R7 0 ; if not R7 then PC := 122
	113	[1164]	JMP      	122 ; PC := 122
	114	[1165]	GETUPVAL 	R7 U7 ; R7 := U7
	115	[1165]	GETTABLE 	R7 R7 K28 ; R7 := R7[0x5a22d251]
	116	[1165]	GETGLOBAL	R8 K2 ; R8 := 0xae91e43b
	117	[1165]	GETGLOBAL	R9 K29 ; R9 := 0xe858af5c
	118	[1165]	ADD      	R10 R5 K30 ; R10 := R5 + 3.000000
	119	[1165]	ADD      	R11 R6 K31 ; R11 := R6 + 10.000000
	120	[1165]	CALL     	R7 5 2 ; R7 := R7(R8,R9,R10,R11)
	121	[1165]	SETUPVAL 	R7 U8 ; U8 := R7
	122	[1168]	GETGLOBAL	R7 K7 ; R7 := 0x7b998233
	123	[1168]	GETUPVAL 	R8 U8 ; R8 := U8
	124	[1168]	CALL     	R7 2 2 ; R7 := R7(R8)
	125	[1168]	TEST     	R7 1 ; if R7 then PC := 164
	126	[1168]	JMP      	164 ; PC := 164
	127	[1169]	GETGLOBAL	R7 K32 ; R7 := 0x89326c93
	128	[1169]	SELF     	R7 R7 K33 ; R8 := R7; R7 := R7[0xb4364067]
	129	[1169]	CALL     	R7 2 2 ; R7 := R7(R8)
	130	[1170]	GETUPVAL 	R8 U6 ; R8 := U6
	131	[1170]	GETTABLE 	R8 R8 K34 ; R8 := R8[0x3e145a1a]
	132	[1170]	GETGLOBAL	R9 K2 ; R9 := 0xae91e43b
	133	[1170]	ADD      	R10 R5 K30 ; R10 := R5 + 3.000000
	134	[1170]	ADD      	R11 R6 K31 ; R11 := R6 + 10.000000
	135	[1170]	MOVE     	R12 R7 ; R12 := R7
	136	[1170]	CALL     	R8 5 3 ; R8,R9 := R8(R9,R10,R11,R12)
	137	[1171]	GETUPVAL 	R10 U8 ; R10 := U8
	138	[1171]	SELF     	R10 R10 K35 ; R11 := R10; R10 := R10[0xe28aa928]
	139	[1171]	GETGLOBAL	R12 K36 ; R12 := 0xa421af95
	140	[1171]	MOVE     	R13 R8 ; R13 := R8
	141	[1171]	MOVE     	R14 R9 ; R14 := R9
	142	[1171]	LOADK    	R15 := 1.000000
	143	[1171]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	144	[1171]	GETGLOBAL	R13 K37 ; R13 := ZERO_ROTATION
	145	[1171]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	146	[1172]	JMP      	164 ; PC := 164
	147	[1173]	GETGLOBAL	R10 K7 ; R10 := 0x7b998233
	148	[1173]	GETUPVAL 	R11 U8 ; R11 := U8
	149	[1173]	CALL     	R10 2 2 ; R10 := R10(R11)
	150	[1173]	TEST     	R10 1 ; if R10 then PC := 164
	151	[1173]	JMP      	164 ; PC := 164
	152	[1174]	GETUPVAL 	R10 U8 ; R10 := U8
	153	[1174]	SELF     	R10 R10 K38 ; R11 := R10; R10 := R10[0xa2880940]
	154	[1174]	CALL     	R10 2 1 ; R10(R11)
	155	[1175]	JMP      	164 ; PC := 164
	156	[1176]	GETGLOBAL	R10 K7 ; R10 := 0x7b998233
	157	[1176]	GETUPVAL 	R11 U8 ; R11 := U8
	158	[1176]	CALL     	R10 2 2 ; R10 := R10(R11)
	159	[1176]	TEST     	R10 1 ; if R10 then PC := 164
	160	[1176]	JMP      	164 ; PC := 164
	161	[1177]	GETUPVAL 	R10 U8 ; R10 := U8
	162	[1177]	SELF     	R10 R10 K38 ; R11 := R10; R10 := R10[0xa2880940]
	163	[1177]	CALL     	R10 2 1 ; R10(R11)
	164	[1180]	RETURN   	R0 1 ; return 

function #53 <?:1183,1192> (33 instructions, 132 bytes at 000002111B362810)
2 params, 14 slots, 1 upvalue, 0 locals, 13 constants, 0 functions
	1	[1184]	SELF     	R2 R1 K0 ; R3 := R1; R2 := R1[0xc6c1d322]
	2	[1184]	CALL     	R2 2 2 ; R2 := R2(R3)
	3	[1185]	LE       	0 R2 K2 ; if R2 > 12.000000 then PC := 33
	4	[1185]	JMP      	33 ; PC := 33
	5	[1186]	MOVE     	R3 R2 ; R3 := R2
	6	[1186]	LOADK    	R4 := 12.000000
	7	[1186]	LOADK    	R5 := 1.000000
	8	[1186]	FORPREP  	R3 32 ; R3 -= R5; PC := 32
	9	[1187]	SELF     	R7 R1 K3 ; R8 := R1; R7 := R1[0xf80e8dff]
	10	[1187]	MOVE     	R9 R6 ; R9 := R6
	11	[1187]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	12	[1187]	LT       	0 K4 R7 ; if 0.000000 >= R7 then PC := 32
	13	[1187]	JMP      	32 ; PC := 32
	14	[1188]	GETGLOBAL	R7 K5 ; R7 := 0x33bdd652
	15	[1188]	GETTABLE 	R7 R7 K6 ; R7 := R7[0x23d5322f]
	16	[1188]	MOVE     	R8 R0 ; R8 := R0
	17	[1188]	NEWTABLE 	R9 0 3 ; R9 := {}
	18	[1188]	SETTABLE 	R9 K7 R6 ; R9["DamageType"] := R6
	19	[1188]	GETUPVAL 	R10 U0 ; R10 := U0
	20	[1188]	ADD      	R11 R6 K9 ; R11 := R6 + 1.000000
	21	[1188]	GETTABLE 	R10 R10 R11 ; R10 := R10[R11]
	22	[1188]	GETTABLE 	R10 R10 K8 ; R10 := R10["Icon"]
	23	[1188]	SETTABLE 	R9 K8 R10 ; R9["Icon"] := R10
	24	[1188]	GETGLOBAL	R10 K11 ; R10 := 0x5bced4c4
	25	[1188]	GETTABLE 	R10 R10 K12 ; R10 := R10[0x99675e23]
	26	[1188]	SELF     	R11 R1 K3 ; R12 := R1; R11 := R1[0xf80e8dff]
	27	[1188]	MOVE     	R13 R6 ; R13 := R6
	28	[1188]	CALL     	R11 3 0 ; R11,... := R11(R12,R13)
	29	[1188]	CALL     	R10 0 2 ; R10 := R10(R11,...)
	30	[1188]	SETTABLE 	R9 K10 R10 ; R9["Time"] := R10
	31	[1188]	CALL     	R7 3 1 ; R7(R8,R9)
	32	[1186]	FORLOOP  	R3 9 ; R3 += R5; if R3 <= R4 then begin PC := 9; R6 := R3 end
	33	[1192]	RETURN   	R0 1 ; return 

function #54 <?:1194,1305> (234 instructions, 936 bytes at 00000211C5BEF8D0)
1 param, 30 slots, 9 upvalues, 0 locals, 44 constants, 0 functions
	1	[1195]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[1195]	GETTABLE 	R1 R1 K1 ; R1 := R1["SecretMiniGameActive"]
	3	[1195]	TEST     	R1 0 ; if not R1 then PC := 9
	4	[1195]	JMP      	9 ; PC := 9
	5	[1195]	GETGLOBAL	R1 K0 ; R1 := _T
	6	[1195]	GETTABLE 	R1 R1 K2 ; R1 := R1["SecretMiniGameAllowsPause"]
	7	[1195]	TEST     	R1 0 ; if not R1 then PC := 13
	8	[1195]	JMP      	13 ; PC := 13
	9	[1195]	SELF     	R1 R0 K3 ; R2 := R0; R1 := R0[0xa5e492d4]
	10	[1195]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[1195]	TEST     	R1 1 ; if R1 then PC := 14
	12	[1195]	JMP      	14 ; PC := 14
	13	[1196]	RETURN   	R0 1 ; return 
	14	[1199]	GETGLOBAL	R1 K4 ; R1 := 0x67652851
	15	[1199]	CALL     	R1 1 2 ; R1 := R1()
	16	[1201]	NEWTABLE 	R2 0 0 ; R2 := {}
	17	[1202]	GETUPVAL 	R3 U0 ; R3 := U0
	18	[1202]	LEN      	R3 R3 ; R3 := # R3
	19	[1202]	LT       	0 K5 R3 ; if 0.000000 >= R3 then PC := 51
	20	[1202]	JMP      	51 ; PC := 51
	21	[1203]	GETGLOBAL	R3 K6 ; R3 := 0xc8802016
	22	[1203]	GETUPVAL 	R4 U0 ; R4 := U0
	23	[1203]	CALL     	R3 2 4 ; R3,R4,R5 := R3(R4)
	24	[1203]	JMP      	49 ; PC := 49
	25	[1204]	GETTABLE 	R8 R7 K7 ; R8 := R7["Timer"]
	26	[1204]	TEST     	R8 0 ; if not R8 then PC := 47
	27	[1204]	JMP      	47 ; PC := 47
	28	[1204]	GETTABLE 	R8 R7 K7 ; R8 := R7["Timer"]
	29	[1204]	LT       	0 K5 R8 ; if 0.000000 >= R8 then PC := 47
	30	[1204]	JMP      	47 ; PC := 47
	31	[1205]	GETGLOBAL	R8 K8 ; R8 := 0x5bced4c4
	32	[1205]	GETTABLE 	R8 R8 K9 ; R8 := R8[0xb62ecfe0]
	33	[1205]	LOADK    	R9 := 0.000000
	34	[1205]	GETTABLE 	R10 R7 K7 ; R10 := R7["Timer"]
	35	[1205]	SUB      	R10 R10 R1 ; R10 := R10 - R1
	36	[1205]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	37	[1205]	SETTABLE 	R7 K7 R8 ; R7["Timer"] := R8
	38	[1206]	GETGLOBAL	R8 K11 ; R8 := 0x64fb1586
	39	[1206]	GETUPVAL 	R9 U1 ; R9 := U1
	40	[1206]	GETTABLE 	R9 R9 K12 ; R9 := R9[0x1142c7a8]
	41	[1206]	GETTABLE 	R10 R7 K7 ; R10 := R7["Timer"]
	42	[1206]	ADD      	R10 R10 K13 ; R10 := R10 + 1.000000
	43	[1206]	LOADK    	R11 := 0.000000
	44	[1206]	CALL     	R9 3 0 ; R9,... := R9(R10,R11)
	45	[1206]	CALL     	R8 0 2 ; R8 := R8(R9,...)
	46	[1206]	SETTABLE 	R7 K10 R8 ; R7["Time"] := R8
	47	[1208]	SETTABLE 	R7 K14 K15 ; R7["InStatEffectList"] := false
	48	[1209]	SETTABLE 	R2 R6 R7 ; R2[R6] := R7
	49	[1203]	TFORLOOP 	R3 2 ; R6,R7 := R3(R4,R5); if R6 ~= nil then begin PC = 25; R5 := R6 end
	50	[1209]	JMP      	25 ; PC := 25
	51	[1213]	GETUPVAL 	R8 U2 ; R8 := U2
	52	[1213]	MOVE     	R9 R2 ; R9 := R2
	53	[1213]	GETUPVAL 	R10 U3 ; R10 := U3
	54	[1213]	GETTABLE 	R10 R10 K16 ; R10 := R10["DamageController"]
	55	[1213]	CALL     	R8 3 1 ; R8(R9,R10)
	56	[1215]	GETGLOBAL	R8 K17 ; R8 := 0x7b998233
	57	[1215]	GETUPVAL 	R9 U4 ; R9 := U4
	58	[1215]	CALL     	R8 2 2 ; R8 := R8(R9)
	59	[1215]	TEST     	R8 1 ; if R8 then PC := 81
	60	[1215]	JMP      	81 ; PC := 81
	61	[1215]	GETUPVAL 	R8 U4 ; R8 := U4
	62	[1215]	SELF     	R8 R8 K18 ; R9 := R8; R8 := R8[0xf2deaf69]
	63	[1215]	GETGLOBAL	R10 K19 ; R10 := gLotusVehicleAvatarType
	64	[1215]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	65	[1215]	TEST     	R8 0 ; if not R8 then PC := 81
	66	[1215]	JMP      	81 ; PC := 81
	67	[1216]	GETUPVAL 	R8 U4 ; R8 := U4
	68	[1216]	SELF     	R8 R8 K20 ; R9 := R8; R8 := R8[0xff005826]
	69	[1216]	CALL     	R8 2 2 ; R8 := R8(R9)
	70	[1217]	GETGLOBAL	R9 K17 ; R9 := 0x7b998233
	71	[1217]	MOVE     	R10 R8 ; R10 := R8
	72	[1217]	CALL     	R9 2 2 ; R9 := R9(R10)
	73	[1217]	TEST     	R9 1 ; if R9 then PC := 81
	74	[1217]	JMP      	81 ; PC := 81
	75	[1218]	SELF     	R9 R8 K21 ; R10 := R8; R9 := R8[0x1ac1655c]
	76	[1218]	CALL     	R9 2 2 ; R9 := R9(R10)
	77	[1219]	GETUPVAL 	R10 U2 ; R10 := U2
	78	[1219]	MOVE     	R11 R2 ; R11 := R2
	79	[1219]	MOVE     	R12 R9 ; R12 := R9
	80	[1219]	CALL     	R10 3 1 ; R10(R11,R12)
	81	[1224]	LEN      	R10 R2 ; R10 := # R2
	82	[1225]	LOADK    	R11 := 1.000000
	83	[1226]	OP_LOADBOOL	R12 0 0 ; R12 := false
	84	[1227]	GETUPVAL 	R13 U5 ; R13 := U5
	85	[1227]	EQ       	1 R13 K22 ; if R13 == nil then PC := 152
	86	[1227]	JMP      	152 ; PC := 152
	87	[1228]	LOADK    	R13 := 1.000000
	88	[1229]	GETUPVAL 	R14 U5 ; R14 := U5
	89	[1229]	SELF     	R14 R14 K23 ; R15 := R14; R14 := R14[0x5fbddc1a]
	90	[1229]	CALL     	R14 2 2 ; R14 := R14(R15)
	91	[1229]	LE       	0 R13 R14 ; if R13 > R14 then PC := 152
	92	[1229]	JMP      	152 ; PC := 152
	93	[1230]	GETUPVAL 	R14 U5 ; R14 := U5
	94	[1230]	SELF     	R14 R14 K24 ; R15 := R14; R14 := R14[0x5465f8f3]
	95	[1230]	MOVE     	R16 R13 ; R16 := R13
	96	[1230]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	97	[1232]	GETGLOBAL	R15 K17 ; R15 := 0x7b998233
	98	[1232]	MOVE     	R16 R14 ; R16 := R14
	99	[1232]	CALL     	R15 2 2 ; R15 := R15(R16)
	100	[1232]	TEST     	R15 1 ; if R15 then PC := 152
	101	[1232]	JMP      	152 ; PC := 152
	102	[1232]	GETTABLE 	R15 R14 K25 ; R15 := R14["mIsDebuff"]
	103	[1232]	TEST     	R15 0 ; if not R15 then PC := 152
	104	[1232]	JMP      	152 ; PC := 152
	105	[1232]	GETTABLE 	R15 R14 K26 ; R15 := R14["mAbilityType"]
	106	[1232]	EQ       	1 R15 K22 ; if R15 == nil then PC := 109
	107	[1232]	JMP      	109 ; PC := 109
	108	[1234]	JMP      	152 ; PC := 152
	109	[1237]	ADD      	R11 R13 K13 ; R11 := R13 + 1.000000
	110	[1240]	OP_LOADBOOL	R15 0 0 ; R15 := false
	111	[1241]	LOADK    	R16 := 1.000000
	112	[1241]	MOVE     	R17 R10 ; R17 := R10
	113	[1241]	LOADK    	R18 := 1.000000
	114	[1241]	FORPREP  	R16 139 ; R16 -= R18; PC := 139
	115	[1242]	GETTABLE 	R20 R2 R19 ; R20 := R2[R19]
	116	[1242]	EQ       	1 R20 K22 ; if R20 == nil then PC := 139
	117	[1242]	JMP      	139 ; PC := 139
	118	[1242]	GETTABLE 	R20 R2 R19 ; R20 := R2[R19]
	119	[1242]	GETTABLE 	R20 R20 K27 ; R20 := R20["DamageType"]
	120	[1242]	GETTABLE 	R21 R14 K28 ; R21 := R14["mDamageType"]
	121	[1242]	EQ       	0 R20 R21 ; if R20 ~= R21 then PC := 139
	122	[1242]	JMP      	139 ; PC := 139
	123	[1243]	GETTABLE 	R20 R2 R19 ; R20 := R2[R19]
	124	[1243]	GETTABLE 	R20 R20 K10 ; R20 := R20["Time"]
	125	[1243]	GETTABLE 	R21 R14 K29 ; R21 := R14["mBuffData"]
	126	[1243]	EQ       	1 R20 R21 ; if R20 == R21 then PC := 135
	127	[1243]	JMP      	135 ; PC := 135
	128	[1244]	GETTABLE 	R20 R2 R19 ; R20 := R2[R19]
	129	[1244]	GETTABLE 	R20 R20 K10 ; R20 := R20["Time"]
	130	[1244]	SETTABLE 	R14 K29 R20 ; R14["mBuffData"] := R20
	131	[1245]	GETUPVAL 	R20 U5 ; R20 := U5
	132	[1245]	GETTABLE 	R20 R20 K30 ; R20 := R20[0xb15e6aca]
	133	[1245]	MOVE     	R21 R14 ; R21 := R14
	134	[1245]	CALL     	R20 2 1 ; R20(R21)
	135	[1248]	GETTABLE 	R20 R2 R19 ; R20 := R2[R19]
	136	[1248]	SETTABLE 	R20 K14 K31 ; R20["InStatEffectList"] := true
	137	[1249]	OP_LOADBOOL	R15 1 0 ; R15 := true
	138	[1250]	JMP      	140 ; PC := 140
	139	[1241]	FORLOOP  	R16 115 ; R16 += R18; if R16 <= R17 then begin PC := 115; R19 := R16 end
	140	[1255]	TEST     	R15 1 ; if R15 then PC := 150
	141	[1255]	JMP      	150 ; PC := 150
	142	[1256]	OP_LOADBOOL	R12 1 0 ; R12 := true
	143	[1258]	GETUPVAL 	R20 U5 ; R20 := U5
	144	[1258]	SELF     	R20 R20 K32 ; R21 := R20; R20 := R20[0x9ae7e2d2]
	145	[1258]	MOVE     	R22 R13 ; R22 := R13
	146	[1258]	OP_LOADBOOL	R23 1 0 ; R23 := true
	147	[1258]	OP_LOADBOOL	R24 1 0 ; R24 := true
	148	[1258]	CALL     	R20 5 1 ; R20(R21,R22,R23,R24)
	149	[1258]	JMP      	88 ; PC := 88
	150	[1260]	ADD      	R13 R13 K13 ; R13 := R13 + 1.000000
	151	[1261]	JMP      	88 ; PC := 88
	152	[1266]	LOADK    	R20 := 1.000000
	153	[1266]	MOVE     	R21 R10 ; R21 := R10
	154	[1266]	LOADK    	R22 := 1.000000
	155	[1266]	FORPREP  	R20 211 ; R20 -= R22; PC := 211
	156	[1267]	GETTABLE 	R24 R2 R23 ; R24 := R2[R23]
	157	[1267]	GETTABLE 	R24 R24 K14 ; R24 := R24["InStatEffectList"]
	158	[1267]	TEST     	R24 1 ; if R24 then PC := 211
	159	[1267]	JMP      	211 ; PC := 211
	160	[1268]	OP_LOADBOOL	R12 1 0 ; R12 := true
	161	[1269]	NEWTABLE 	R24 0 6 ; R24 := {}
	162	[1269]	SETTABLE 	R24 K33 K13 ; R24["mBuffType"] := 1.000000
	163	[1270]	SETTABLE 	R24 K25 K31 ; R24["mIsDebuff"] := true
	164	[1271]	GETTABLE 	R25 R2 R23 ; R25 := R2[R23]
	165	[1271]	GETTABLE 	R25 R25 K27 ; R25 := R25["DamageType"]
	166	[1271]	SETTABLE 	R24 K28 R25 ; R24["mDamageType"] := R25
	167	[1272]	GETTABLE 	R25 R2 R23 ; R25 := R2[R23]
	168	[1272]	GETTABLE 	R25 R25 K36 ; R25 := R25["Icon"]
	169	[1272]	SETTABLE 	R24 K35 R25 ; R24["mIcon"] := R25
	170	[1273]	SETTABLE 	R24 K37 K38 ; R24["mDesc"] := ""
	171	[1274]	GETTABLE 	R25 R2 R23 ; R25 := R2[R23]
	172	[1274]	GETTABLE 	R25 R25 K10 ; R25 := R25["Time"]
	173	[1274]	SETTABLE 	R24 K29 R25 ; R24["mBuffData"] := R25
	174	[1277]	GETTABLE 	R25 R2 R23 ; R25 := R2[R23]
	175	[1277]	GETTABLE 	R25 R25 K39 ; R25 := R25["Description"]
	176	[1277]	EQ       	1 R25 K22 ; if R25 == nil then PC := 182
	177	[1277]	JMP      	182 ; PC := 182
	178	[1278]	GETTABLE 	R25 R2 R23 ; R25 := R2[R23]
	179	[1278]	GETTABLE 	R25 R25 K39 ; R25 := R25["Description"]
	180	[1278]	SETTABLE 	R24 K37 R25 ; R24["mDesc"] := R25
	181	[1278]	JMP      	197 ; PC := 197
	182	[1279]	GETGLOBAL	R25 K40 ; R25 := 0x03f57322
	183	[1279]	GETTABLE 	R26 R2 R23 ; R26 := R2[R23]
	184	[1279]	GETTABLE 	R26 R26 K27 ; R26 := R26["DamageType"]
	185	[1279]	CALL     	R25 2 2 ; R25 := R25(R26)
	186	[1279]	EQ       	1 R25 K22 ; if R25 == nil then PC := 197
	187	[1279]	JMP      	197 ; PC := 197
	188	[1280]	GETUPVAL 	R25 U6 ; R25 := U6
	189	[1280]	GETGLOBAL	R26 K40 ; R26 := 0x03f57322
	190	[1280]	GETTABLE 	R27 R2 R23 ; R27 := R2[R23]
	191	[1280]	GETTABLE 	R27 R27 K27 ; R27 := R27["DamageType"]
	192	[1280]	CALL     	R26 2 2 ; R26 := R26(R27)
	193	[1280]	ADD      	R26 R26 K13 ; R26 := R26 + 1.000000
	194	[1280]	GETTABLE 	R25 R25 R26 ; R25 := R25[R26]
	195	[1280]	GETTABLE 	R25 R25 K41 ; R25 := R25["NameTag"]
	196	[1280]	SETTABLE 	R24 K37 R25 ; R24["mDesc"] := R25
	197	[1283]	GETTABLE 	R25 R24 K29 ; R25 := R24["mBuffData"]
	198	[1283]	EQ       	1 R25 K22 ; if R25 == nil then PC := 203
	199	[1283]	JMP      	203 ; PC := 203
	200	[1283]	GETTABLE 	R25 R24 K29 ; R25 := R24["mBuffData"]
	201	[1283]	EQ       	0 R25 K38 ; if R25 ~= "" then PC := 204
	202	[1283]	JMP      	204 ; PC := 204
	203	[1284]	SETTABLE 	R24 K33 K5 ; R24["mBuffType"] := 0.000000
	204	[1287]	GETUPVAL 	R25 U5 ; R25 := U5
	205	[1287]	SELF     	R25 R25 K42 ; R26 := R25; R25 := R25[0x45082a31]
	206	[1287]	MOVE     	R27 R11 ; R27 := R11
	207	[1287]	MOVE     	R28 R24 ; R28 := R24
	208	[1287]	OP_LOADBOOL	R29 1 0 ; R29 := true
	209	[1287]	CALL     	R25 5 1 ; R25(R26,R27,R28,R29)
	210	[1289]	ADD      	R11 R11 K13 ; R11 := R11 + 1.000000
	211	[1266]	FORLOOP  	R20 156 ; R20 += R22; if R20 <= R21 then begin PC := 156; R23 := R20 end
	212	[1293]	TEST     	R12 1 ; if R12 then PC := 226
	213	[1293]	JMP      	226 ; PC := 226
	214	[1293]	GETUPVAL 	R25 U7 ; R25 := U7
	215	[1293]	GETUPVAL 	R26 U8 ; R26 := U8
	216	[1293]	EQ       	1 R25 R26 ; if R25 == R26 then PC := 226
	217	[1293]	JMP      	226 ; PC := 226
	218	[1294]	OP_LOADBOOL	R12 1 0 ; R12 := true
	219	[1295]	GETUPVAL 	R25 U8 ; R25 := U8
	220	[1295]	SETUPVAL 	R25 U7 ; U7 := R25
	221	[1296]	GETUPVAL 	R25 U5 ; R25 := U5
	222	[1296]	SELF     	R25 R25 K43 ; R26 := R25; R25 := R25[0x71e9ac81]
	223	[1296]	LOADNIL  	R27 R27 ; R27 := nil
	224	[1296]	OP_LOADBOOL	R28 1 0 ; R28 := true
	225	[1296]	CALL     	R25 4 1 ; R25(R26,R27,R28)
	226	[1299]	TEST     	R12 0 ; if not R12 then PC := 234
	227	[1299]	JMP      	234 ; PC := 234
	228	[1301]	GETUPVAL 	R25 U5 ; R25 := U5
	229	[1301]	SELF     	R25 R25 K43 ; R26 := R25; R25 := R25[0x71e9ac81]
	230	[1301]	LOADNIL  	R27 R27 ; R27 := nil
	231	[1301]	OP_LOADBOOL	R28 1 0 ; R28 := true
	232	[1301]	OP_LOADBOOL	R29 1 0 ; R29 := true
	233	[1301]	CALL     	R25 5 1 ; R25(R26,R27,R28,R29)
	234	[1305]	RETURN   	R0 1 ; return 

function #55 <?:1307,1422> (312 instructions, 1248 bytes at 00000211929631B0)
1 param, 27 slots, 10 upvalues, 0 locals, 52 constants, 0 functions
	1	[1308]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1308]	GETTABLE 	R1 R1 K0 ; R1 := R1["Cached"]
	3	[1308]	TEST     	R1 0 ; if not R1 then PC := 45
	4	[1308]	JMP      	45 ; PC := 45
	5	[1309]	LOADK    	R1 := 1.000000
	6	[1310]	GETUPVAL 	R2 U0 ; R2 := U0
	7	[1310]	GETTABLE 	R2 R2 K1 ; R2 := R2["Buffs"]
	8	[1310]	LEN      	R2 R2 ; R2 := # R2
	9	[1310]	LE       	0 R1 R2 ; if R1 > R2 then PC := 45
	10	[1310]	JMP      	45 ; PC := 45
	11	[1311]	GETUPVAL 	R2 U0 ; R2 := U0
	12	[1311]	GETTABLE 	R2 R2 K1 ; R2 := R2["Buffs"]
	13	[1311]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	14	[1312]	OP_LOADBOOL	R3 1 0 ; R3 := true
	15	[1314]	GETGLOBAL	R4 K2 ; R4 := 0x6c97a788
	16	[1314]	GETTABLE 	R4 R4 K3 ; R4 := R4[0xd6ae36be]
	17	[1314]	GETTABLE 	R5 R2 K4 ; R5 := R2["buffType"]
	18	[1314]	CALL     	R4 2 2 ; R4 := R4(R5)
	19	[1314]	TEST     	R4 0 ; if not R4 then PC := 41
	20	[1314]	JMP      	41 ; PC := 41
	21	[1314]	GETTABLE 	R4 R2 K5 ; R4 := R2["buffData"]
	22	[1314]	LE       	0 K6 R4 ; if 0.000000 > R4 then PC := 41
	23	[1314]	JMP      	41 ; PC := 41
	24	[1315]	GETGLOBAL	R4 K7 ; R4 := 0x5bced4c4
	25	[1315]	GETTABLE 	R4 R4 K8 ; R4 := R4[0xb62ecfe0]
	26	[1315]	GETTABLE 	R5 R2 K5 ; R5 := R2["buffData"]
	27	[1315]	SUB      	R5 R5 R0 ; R5 := R5 - R0
	28	[1315]	LOADK    	R6 := 0.000000
	29	[1315]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	30	[1315]	SETTABLE 	R2 K5 R4 ; R2["buffData"] := R4
	31	[1316]	GETTABLE 	R4 R2 K5 ; R4 := R2["buffData"]
	32	[1316]	LE       	0 R4 K6 ; if R4 > 0.000000 then PC := 41
	33	[1316]	JMP      	41 ; PC := 41
	34	[1317]	OP_LOADBOOL	R3 0 0 ; R3 := false
	35	[1318]	GETGLOBAL	R4 K9 ; R4 := 0x33bdd652
	36	[1318]	GETTABLE 	R4 R4 K10 ; R4 := R4[0x9c1f3b5a]
	37	[1318]	GETUPVAL 	R5 U0 ; R5 := U0
	38	[1318]	GETTABLE 	R5 R5 K1 ; R5 := R5["Buffs"]
	39	[1318]	MOVE     	R6 R1 ; R6 := R1
	40	[1318]	CALL     	R4 3 1 ; R4(R5,R6)
	41	[1322]	TEST     	R3 0 ; if not R3 then PC := 6
	42	[1322]	JMP      	6 ; PC := 6
	43	[1323]	ADD      	R1 R1 K11 ; R1 := R1 + 1.000000
	44	[1324]	JMP      	6 ; PC := 6
	45	[1328]	GETUPVAL 	R4 U1 ; R4 := U1
	46	[1328]	EQ       	1 R4 K12 ; if R4 == nil then PC := 55
	47	[1328]	JMP      	55 ; PC := 55
	48	[1328]	GETUPVAL 	R4 U2 ; R4 := U2
	49	[1328]	GETTABLE 	R4 R4 K13 ; R4 := R4["IsSpectating"]
	50	[1328]	TEST     	R4 0 ; if not R4 then PC := 56
	51	[1328]	JMP      	56 ; PC := 56
	52	[1328]	GETUPVAL 	R4 U3 ; R4 := U3
	53	[1328]	TEST     	R4 1 ; if R4 then PC := 56
	54	[1328]	JMP      	56 ; PC := 56
	55	[1329]	RETURN   	R0 1 ; return 
	56	[1332]	GETUPVAL 	R4 U2 ; R4 := U2
	57	[1332]	GETTABLE 	R4 R4 K13 ; R4 := R4["IsSpectating"]
	58	[1332]	TEST     	R4 1 ; if R4 then PC := 91
	59	[1332]	JMP      	91 ; PC := 91
	60	[1333]	GETUPVAL 	R4 U4 ; R4 := U4
	61	[1333]	EQ       	1 R4 K12 ; if R4 == nil then PC := 123
	62	[1333]	JMP      	123 ; PC := 123
	63	[1333]	GETUPVAL 	R4 U4 ; R4 := U4
	64	[1333]	SELF     	R4 R4 K14 ; R5 := R4; R4 := R4[0x5a32db44]
	65	[1333]	CALL     	R4 2 2 ; R4 := R4(R5)
	66	[1333]	TEST     	R4 0 ; if not R4 then PC := 123
	67	[1333]	JMP      	123 ; PC := 123
	68	[1335]	GETUPVAL 	R4 U4 ; R4 := U4
	69	[1335]	SELF     	R4 R4 K15 ; R5 := R4; R4 := R4[0x1f7e8969]
	70	[1335]	CALL     	R4 2 2 ; R4 := R4(R5)
	71	[1336]	LOADK    	R5 := 1.000000
	72	[1336]	LEN      	R6 R4 ; R6 := # R4
	73	[1336]	LOADK    	R7 := 1.000000
	74	[1336]	FORPREP  	R5 86 ; R5 -= R7; PC := 86
	75	[1337]	GETTABLE 	R9 R4 R8 ; R9 := R4[R8]
	76	[1337]	GETTABLE 	R9 R9 K16 ; R9 := R9["addBuff"]
	77	[1337]	TEST     	R9 0 ; if not R9 then PC := 83
	78	[1337]	JMP      	83 ; PC := 83
	79	[1338]	GETUPVAL 	R9 U5 ; R9 := U5
	80	[1338]	GETTABLE 	R10 R4 R8 ; R10 := R4[R8]
	81	[1338]	CALL     	R9 2 1 ; R9(R10)
	82	[1338]	JMP      	86 ; PC := 86
	83	[1340]	GETUPVAL 	R9 U6 ; R9 := U6
	84	[1340]	GETTABLE 	R10 R4 R8 ; R10 := R4[R8]
	85	[1340]	CALL     	R9 2 1 ; R9(R10)
	86	[1336]	FORLOOP  	R5 75 ; R5 += R7; if R5 <= R6 then begin PC := 75; R8 := R5 end
	87	[1344]	GETUPVAL 	R9 U4 ; R9 := U4
	88	[1344]	SELF     	R9 R9 K17 ; R10 := R9; R9 := R9[0x484bc106]
	89	[1344]	CALL     	R9 2 1 ; R9(R10)
	90	[1345]	JMP      	123 ; PC := 123
	91	[1346]	GETGLOBAL	R9 K18 ; R9 := 0x7b998233
	92	[1346]	GETUPVAL 	R10 U7 ; R10 := U7
	93	[1346]	CALL     	R9 2 2 ; R9 := R9(R10)
	94	[1346]	TEST     	R9 1 ; if R9 then PC := 123
	95	[1346]	JMP      	123 ; PC := 123
	96	[1346]	GETUPVAL 	R9 U3 ; R9 := U3
	97	[1346]	TEST     	R9 0 ; if not R9 then PC := 123
	98	[1346]	JMP      	123 ; PC := 123
	99	[1347]	GETUPVAL 	R9 U7 ; R9 := U7
	100	[1347]	SELF     	R9 R9 K15 ; R10 := R9; R9 := R9[0x1f7e8969]
	101	[1347]	CALL     	R9 2 2 ; R9 := R9(R10)
	102	[1348]	LOADK    	R10 := 1.000000
	103	[1348]	LEN      	R11 R9 ; R11 := # R9
	104	[1348]	LOADK    	R12 := 1.000000
	105	[1348]	FORPREP  	R10 122 ; R10 -= R12; PC := 122
	106	[1349]	GETGLOBAL	R14 K18 ; R14 := 0x7b998233
	107	[1349]	GETTABLE 	R15 R9 R13 ; R15 := R9[R13]
	108	[1349]	GETTABLE 	R15 R15 K19 ; R15 := R15["abilityType"]
	109	[1349]	CALL     	R14 2 2 ; R14 := R14(R15)
	110	[1349]	TEST     	R14 1 ; if R14 then PC := 122
	111	[1349]	JMP      	122 ; PC := 122
	112	[1349]	GETTABLE 	R14 R9 R13 ; R14 := R9[R13]
	113	[1349]	GETTABLE 	R14 R14 K19 ; R14 := R14["abilityType"]
	114	[1349]	SELF     	R14 R14 K20 ; R15 := R14; R14 := R14[0xf2deaf69]
	115	[1349]	GETGLOBAL	R16 K21 ; R16 := 0xbaec173b
	116	[1349]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	117	[1349]	TEST     	R14 0 ; if not R14 then PC := 122
	118	[1349]	JMP      	122 ; PC := 122
	119	[1350]	GETUPVAL 	R14 U5 ; R14 := U5
	120	[1350]	GETTABLE 	R15 R9 R13 ; R15 := R9[R13]
	121	[1350]	CALL     	R14 2 1 ; R14(R15)
	122	[1348]	FORLOOP  	R10 106 ; R10 += R12; if R10 <= R11 then begin PC := 106; R13 := R10 end
	123	[1355]	GETGLOBAL	R14 K18 ; R14 := 0x7b998233
	124	[1355]	GETUPVAL 	R15 U7 ; R15 := U7
	125	[1355]	CALL     	R14 2 2 ; R14 := R14(R15)
	126	[1355]	TEST     	R14 1 ; if R14 then PC := 133
	127	[1355]	JMP      	133 ; PC := 133
	128	[1355]	GETUPVAL 	R14 U7 ; R14 := U7
	129	[1355]	SELF     	R14 R14 K22 ; R15 := R14; R14 := R14[0x2047cfe7]
	130	[1355]	CALL     	R14 2 2 ; R14 := R14(R15)
	131	[1355]	TEST     	R14 0 ; if not R14 then PC := 148
	132	[1355]	JMP      	148 ; PC := 148
	133	[1355]	GETUPVAL 	R14 U1 ; R14 := U1
	134	[1355]	SELF     	R14 R14 K23 ; R15 := R14; R14 := R14[0x5fbddc1a]
	135	[1355]	CALL     	R14 2 2 ; R14 := R14(R15)
	136	[1355]	LT       	0 K6 R14 ; if 0.000000 >= R14 then PC := 148
	137	[1355]	JMP      	148 ; PC := 148
	138	[1356]	GETUPVAL 	R14 U1 ; R14 := U1
	139	[1356]	SELF     	R14 R14 K24 ; R15 := R14; R14 := R14[0x7c09c373]
	140	[1356]	CALL     	R14 2 1 ; R14(R15)
	141	[1357]	GETUPVAL 	R14 U1 ; R14 := U1
	142	[1357]	SELF     	R14 R14 K25 ; R15 := R14; R14 := R14[0x71e9ac81]
	143	[1357]	CALL     	R14 2 1 ; R14(R15)
	144	[1359]	GETUPVAL 	R14 U1 ; R14 := U1
	145	[1359]	SETTABLE 	R14 K26 K12 ; R14["mVisNameId"] := nil
	146	[1360]	GETUPVAL 	R14 U1 ; R14 := U1
	147	[1360]	SETTABLE 	R14 K27 K12 ; R14["mVisNameFadeTimer"] := nil
	148	[1364]	GETUPVAL 	R14 U1 ; R14 := U1
	149	[1364]	GETTABLE 	R14 R14 K26 ; R14 := R14["mVisNameId"]
	150	[1364]	EQ       	1 R14 K12 ; if R14 == nil then PC := 204
	151	[1364]	JMP      	204 ; PC := 204
	152	[1364]	GETUPVAL 	R14 U1 ; R14 := U1
	153	[1364]	GETTABLE 	R14 R14 K27 ; R14 := R14["mVisNameFadeTimer"]
	154	[1364]	EQ       	1 R14 K12 ; if R14 == nil then PC := 204
	155	[1364]	JMP      	204 ; PC := 204
	156	[1365]	GETUPVAL 	R14 U1 ; R14 := U1
	157	[1365]	SELF     	R14 R14 K28 ; R15 := R14; R14 := R14[0xca30dfb6]
	158	[1365]	GETUPVAL 	R16 U1 ; R16 := U1
	159	[1365]	GETTABLE 	R16 R16 K26 ; R16 := R16["mVisNameId"]
	160	[1365]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	161	[1366]	GETGLOBAL	R15 K18 ; R15 := 0x7b998233
	162	[1366]	MOVE     	R16 R14 ; R16 := R14
	163	[1366]	CALL     	R15 2 2 ; R15 := R15(R16)
	164	[1366]	TEST     	R15 1 ; if R15 then PC := 200
	165	[1366]	JMP      	200 ; PC := 200
	166	[1366]	GETTABLE 	R15 R14 K29 ; R15 := R14["mClipName"]
	167	[1366]	EQ       	1 R15 K12 ; if R15 == nil then PC := 200
	168	[1366]	JMP      	200 ; PC := 200
	169	[1367]	GETUPVAL 	R15 U1 ; R15 := U1
	170	[1367]	GETGLOBAL	R16 K7 ; R16 := 0x5bced4c4
	171	[1367]	GETTABLE 	R16 R16 K8 ; R16 := R16[0xb62ecfe0]
	172	[1367]	GETUPVAL 	R17 U1 ; R17 := U1
	173	[1367]	GETTABLE 	R17 R17 K27 ; R17 := R17["mVisNameFadeTimer"]
	174	[1367]	SUB      	R17 R17 R0 ; R17 := R17 - R0
	175	[1367]	LOADK    	R18 := 0.000000
	176	[1367]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	177	[1367]	SETTABLE 	R15 K27 R16 ; R15["mVisNameFadeTimer"] := R16
	178	[1369]	GETUPVAL 	R15 U1 ; R15 := U1
	179	[1369]	GETTABLE 	R15 R15 K27 ; R15 := R15["mVisNameFadeTimer"]
	180	[1369]	GETUPVAL 	R16 U1 ; R16 := U1
	181	[1369]	GETTABLE 	R16 R16 K30 ; R16 := R16["mVisNameFadeDuration"]
	182	[1369]	DIV      	R15 R15 R16 ; R15 := R15 / R16
	183	[1369]	MUL      	R15 R15 K31 ; R15 := R15 * 100.000000
	184	[1370]	GETGLOBAL	R16 K32 ; R16 := 0xae91e43b
	185	[1370]	SELF     	R16 R16 K33 ; R17 := R16; R16 := R16[0xf64b7262]
	186	[1370]	GETTABLE 	R18 R14 K29 ; R18 := R14["mClipName"]
	187	[1370]	LOADK    	R19 K34 ; R19 := "StatName"
	188	[1370]	LOADK    	R20 := 10.000000
	189	[1370]	MOVE     	R21 R15 ; R21 := R15
	190	[1370]	CALL     	R16 6 1 ; R16(R17,R18,R19,R20,R21)
	191	[1372]	GETUPVAL 	R16 U1 ; R16 := U1
	192	[1372]	GETTABLE 	R16 R16 K27 ; R16 := R16["mVisNameFadeTimer"]
	193	[1372]	EQ       	0 R16 K6 ; if R16 ~= 0.000000 then PC := 204
	194	[1372]	JMP      	204 ; PC := 204
	195	[1373]	GETUPVAL 	R16 U1 ; R16 := U1
	196	[1373]	SETTABLE 	R16 K26 K12 ; R16["mVisNameId"] := nil
	197	[1374]	GETUPVAL 	R16 U1 ; R16 := U1
	198	[1374]	SETTABLE 	R16 K27 K12 ; R16["mVisNameFadeTimer"] := nil
	199	[1375]	JMP      	204 ; PC := 204
	200	[1377]	GETUPVAL 	R16 U1 ; R16 := U1
	201	[1377]	SETTABLE 	R16 K26 K12 ; R16["mVisNameId"] := nil
	202	[1378]	GETUPVAL 	R16 U1 ; R16 := U1
	203	[1378]	SETTABLE 	R16 K27 K12 ; R16["mVisNameFadeTimer"] := nil
	204	[1382]	GETUPVAL 	R16 U1 ; R16 := U1
	205	[1382]	SELF     	R16 R16 K23 ; R17 := R16; R16 := R16[0x5fbddc1a]
	206	[1382]	CALL     	R16 2 2 ; R16 := R16(R17)
	207	[1383]	LOADK    	R17 := 1.000000
	208	[1384]	LE       	0 R17 R16 ; if R17 > R16 then PC := 312
	209	[1384]	JMP      	312 ; PC := 312
	210	[1385]	GETUPVAL 	R18 U1 ; R18 := U1
	211	[1385]	SELF     	R18 R18 K35 ; R19 := R18; R18 := R18[0x5465f8f3]
	212	[1385]	MOVE     	R20 R17 ; R20 := R17
	213	[1385]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	214	[1386]	OP_LOADBOOL	R19 1 0 ; R19 := true
	215	[1388]	EQ       	1 R18 K12 ; if R18 == nil then PC := 308
	216	[1388]	JMP      	308 ; PC := 308
	217	[1388]	GETTABLE 	R20 R18 K29 ; R20 := R18["mClipName"]
	218	[1388]	EQ       	1 R20 K12 ; if R20 == nil then PC := 308
	219	[1388]	JMP      	308 ; PC := 308
	220	[1389]	GETGLOBAL	R20 K2 ; R20 := 0x6c97a788
	221	[1389]	GETTABLE 	R20 R20 K3 ; R20 := R20[0xd6ae36be]
	222	[1389]	GETTABLE 	R21 R18 K36 ; R21 := R18["mBuffType"]
	223	[1389]	CALL     	R20 2 2 ; R20 := R20(R21)
	224	[1389]	TEST     	R20 0 ; if not R20 then PC := 283
	225	[1389]	JMP      	283 ; PC := 283
	226	[1389]	GETTABLE 	R20 R18 K37 ; R20 := R18["mBuffData"]
	227	[1389]	LE       	0 K6 R20 ; if 0.000000 > R20 then PC := 283
	228	[1389]	JMP      	283 ; PC := 283
	229	[1391]	GETGLOBAL	R20 K7 ; R20 := 0x5bced4c4
	230	[1391]	GETTABLE 	R20 R20 K8 ; R20 := R20[0xb62ecfe0]
	231	[1391]	GETTABLE 	R21 R18 K37 ; R21 := R18["mBuffData"]
	232	[1391]	SUB      	R21 R21 R0 ; R21 := R21 - R0
	233	[1391]	LOADK    	R22 := 0.000000
	234	[1391]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	235	[1391]	SETTABLE 	R18 K37 R20 ; R18["mBuffData"] := R20
	236	[1394]	GETTABLE 	R20 R18 K37 ; R20 := R18["mBuffData"]
	237	[1394]	LE       	0 R20 K6 ; if R20 > 0.000000 then PC := 271
	238	[1394]	JMP      	271 ; PC := 271
	239	[1395]	GETTABLE 	R20 R18 K36 ; R20 := R18["mBuffType"]
	240	[1395]	EQ       	0 R20 K38 ; if R20 ~= 13.000000 then PC := 257
	241	[1395]	JMP      	257 ; PC := 257
	242	[1395]	GETTABLE 	R20 R18 K39 ; R20 := R18["mBuffDataExtra"]
	243	[1395]	LT       	0 K11 R20 ; if 1.000000 >= R20 then PC := 257
	244	[1395]	JMP      	257 ; PC := 257
	245	[1396]	GETTABLE 	R20 R18 K39 ; R20 := R18["mBuffDataExtra"]
	246	[1396]	SUB      	R20 R20 K11 ; R20 := R20 - 1.000000
	247	[1396]	SETTABLE 	R18 K39 R20 ; R18["mBuffDataExtra"] := R20
	248	[1397]	GETTABLE 	R20 R18 K40 ; R20 := R18["mInitialBuffData"]
	249	[1397]	SETTABLE 	R18 K37 R20 ; R18["mBuffData"] := R20
	250	[1398]	GETUPVAL 	R20 U1 ; R20 := U1
	251	[1398]	SELF     	R20 R20 K25 ; R21 := R20; R20 := R20[0x71e9ac81]
	252	[1398]	LOADNIL  	R22 R22 ; R22 := nil
	253	[1398]	OP_LOADBOOL	R23 1 0 ; R23 := true
	254	[1398]	OP_LOADBOOL	R24 1 0 ; R24 := true
	255	[1398]	CALL     	R20 5 1 ; R20(R21,R22,R23,R24)
	256	[1398]	JMP      	283 ; PC := 283
	257	[1400]	GETUPVAL 	R20 U1 ; R20 := U1
	258	[1400]	SELF     	R20 R20 K41 ; R21 := R20; R20 := R20[0x9ae7e2d2]
	259	[1400]	MOVE     	R22 R17 ; R22 := R17
	260	[1400]	OP_LOADBOOL	R23 1 0 ; R23 := true
	261	[1400]	OP_LOADBOOL	R24 1 0 ; R24 := true
	262	[1400]	CALL     	R20 5 1 ; R20(R21,R22,R23,R24)
	263	[1401]	GETUPVAL 	R20 U1 ; R20 := U1
	264	[1401]	SELF     	R20 R20 K25 ; R21 := R20; R20 := R20[0x71e9ac81]
	265	[1401]	LOADNIL  	R22 R22 ; R22 := nil
	266	[1401]	OP_LOADBOOL	R23 1 0 ; R23 := true
	267	[1401]	OP_LOADBOOL	R24 1 0 ; R24 := true
	268	[1401]	CALL     	R20 5 1 ; R20(R21,R22,R23,R24)
	269	[1402]	OP_LOADBOOL	R19 0 0 ; R19 := false
	270	[1403]	JMP      	283 ; PC := 283
	271	[1405]	GETGLOBAL	R20 K32 ; R20 := 0xae91e43b
	272	[1405]	SELF     	R20 R20 K42 ; R21 := R20; R20 := R20[0x5f56eeab]
	273	[1405]	GETTABLE 	R22 R18 K29 ; R22 := R18["mClipName"]
	274	[1405]	LOADK    	R23 K43 ; R23 := ".Desc"
	275	[1405]	CONCAT   	R22 R22 R23 ; R22 := R22 .. R23
	276	[1405]	LOADK    	R23 := 29.000000
	277	[1405]	GETUPVAL 	R24 U8 ; R24 := U8
	278	[1405]	GETTABLE 	R24 R24 K44 ; R24 := R24[0x1142c7a8]
	279	[1405]	GETTABLE 	R25 R18 K37 ; R25 := R18["mBuffData"]
	280	[1405]	LOADK    	R26 := 1.000000
	281	[1405]	CALL     	R24 3 0 ; R24,... := R24(R25,R26)
	282	[1405]	CALL     	R20 0 1 ; R20(R21,...)
	283	[1409]	TEST     	R19 0 ; if not R19 then PC := 308
	284	[1409]	JMP      	308 ; PC := 308
	285	[1409]	GETTABLE 	R20 R18 K45 ; R20 := R18["WaitingForIcon"]
	286	[1409]	TEST     	R20 0 ; if not R20 then PC := 308
	287	[1409]	JMP      	308 ; PC := 308
	288	[1409]	GETUPVAL 	R20 U9 ; R20 := U9
	289	[1409]	GETTABLE 	R21 R18 K46 ; R21 := R18["Icon"]
	290	[1409]	CALL     	R20 2 2 ; R20 := R20(R21)
	291	[1409]	TEST     	R20 0 ; if not R20 then PC := 308
	292	[1409]	JMP      	308 ; PC := 308
	293	[1412]	SETTABLE 	R18 K45 K47 ; R18["WaitingForIcon"] := false
	294	[1413]	GETGLOBAL	R20 K32 ; R20 := 0xae91e43b
	295	[1413]	SELF     	R20 R20 K48 ; R21 := R20; R20 := R20[0xc0a3774b]
	296	[1413]	GETTABLE 	R22 R18 K29 ; R22 := R18["mClipName"]
	297	[1413]	LOADK    	R23 K49 ; R23 := "Icon.Icon"
	298	[1413]	LOADK    	R24 := 11.000000
	299	[1413]	OP_LOADBOOL	R25 1 0 ; R25 := true
	300	[1413]	CALL     	R20 6 1 ; R20(R21,R22,R23,R24,R25)
	301	[1414]	GETGLOBAL	R20 K32 ; R20 := 0xae91e43b
	302	[1414]	SELF     	R20 R20 K50 ; R21 := R20; R20 := R20[0x1cb415c1]
	303	[1414]	GETTABLE 	R22 R18 K29 ; R22 := R18["mClipName"]
	304	[1414]	LOADK    	R23 K51 ; R23 := ".Icon.Icon"
	305	[1414]	CONCAT   	R22 R22 R23 ; R22 := R22 .. R23
	306	[1414]	GETTABLE 	R23 R18 K46 ; R23 := R18["Icon"]
	307	[1414]	CALL     	R20 4 1 ; R20(R21,R22,R23)
	308	[1418]	TEST     	R19 0 ; if not R19 then PC := 208
	309	[1418]	JMP      	208 ; PC := 208
	310	[1419]	ADD      	R17 R17 K11 ; R17 := R17 + 1.000000
	311	[1420]	JMP      	208 ; PC := 208
	312	[1422]	RETURN   	R0 1 ; return 

function #56 <?:1425,1427> (7 instructions, 28 bytes at 0000021117FB16C0)
1 param, 3 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[1426]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[1426]	EQ       	1 R0 K2 ; if R0 == "true" then PC := 5
	3	[1426]	JMP      	5 ; PC := 5
	4	[1426]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 5
	5	[1426]	OP_LOADBOOL	R2 1 0 ; R2 := true
	6	[1426]	SETTABLE 	R1 K1 R2 ; R1["forceLocalRespawn"] := R2
	7	[1427]	RETURN   	R0 1 ; return 

function #57 <?:1430,1438> (22 instructions, 88 bytes at 0000021117FB1750)
3 params, 12 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[1431]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[1431]	GETTABLE 	R3 R3 R1 ; R3 := R3[R1]
	3	[1432]	GETUPVAL 	R4 U0 ; R4 := U0
	4	[1432]	GETTABLE 	R4 R4 R2 ; R4 := R4[R2]
	5	[1433]	TEST     	R3 0 ; if not R3 then PC := 19
	6	[1433]	JMP      	19 ; PC := 19
	7	[1433]	TEST     	R4 0 ; if not R4 then PC := 19
	8	[1433]	JMP      	19 ; PC := 19
	9	[1434]	GETUPVAL 	R5 U0 ; R5 := U0
	10	[1434]	SELF     	R5 R5 K0 ; R6 := R5; R5 := R5[0x20ff29f7]
	11	[1434]	GETGLOBAL	R7 K1 ; R7 := 0xae91e43b
	12	[1434]	MOVE     	R8 R0 ; R8 := R0
	13	[1434]	NEWTABLE 	R9 2 0 ; R9 := {}
	14	[1434]	MOVE     	R10 R3 ; R10 := R3
	15	[1434]	MOVE     	R11 R4 ; R11 := R4
	16	[1434]	SETLIST  	R9 2 1 ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 2
	17	[1434]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	18	[1434]	JMP      	22 ; PC := 22
	19	[1436]	GETGLOBAL	R5 K2 ; R5 := 0x3d106989
	20	[1436]	LOADK    	R6 K3 ; R6 := "Failed to register to AnchorMgr, invalid alignment"
	21	[1436]	CALL     	R5 2 1 ; R5(R6)
	22	[1438]	RETURN   	R0 1 ; return 

function #58 <?:1441,1443> (6 instructions, 24 bytes at 00000211214D5210)
1 param, 5 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[1442]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1442]	SELF     	R1 R1 K0 ; R2 := R1; R1 := R1[0x7f19c438]
	3	[1442]	GETGLOBAL	R3 K1 ; R3 := 0xae91e43b
	4	[1442]	MOVE     	R4 R0 ; R4 := R0
	5	[1442]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	6	[1443]	RETURN   	R0 1 ; return 

function #59 <?:1446,1454> (22 instructions, 88 bytes at 00000211214D52A0)
1 param, 9 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[1447]	LOADK    	R1 := 1.000000
	2	[1447]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[1447]	LEN      	R2 R2 ; R2 := # R2
	4	[1447]	LOADK    	R3 := 1.000000
	5	[1447]	FORPREP  	R1 15 ; R1 -= R3; PC := 15
	6	[1448]	GETTABLE 	R5 R0 K0 ; R5 := R0["DamageType"]
	7	[1448]	GETUPVAL 	R6 U0 ; R6 := U0
	8	[1448]	GETTABLE 	R6 R6 R4 ; R6 := R6[R4]
	9	[1448]	GETTABLE 	R6 R6 K0 ; R6 := R6["DamageType"]
	10	[1448]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 15
	11	[1448]	JMP      	15 ; PC := 15
	12	[1449]	GETUPVAL 	R5 U0 ; R5 := U0
	13	[1449]	SETTABLE 	R5 R4 R0 ; R5[R4] := R0
	14	[1450]	RETURN   	R0 1 ; return 
	15	[1447]	FORLOOP  	R1 6 ; R1 += R3; if R1 <= R2 then begin PC := 6; R4 := R1 end
	16	[1453]	GETGLOBAL	R5 K1 ; R5 := 0x33bdd652
	17	[1453]	GETTABLE 	R5 R5 K2 ; R5 := R5[0x23d5322f]
	18	[1453]	GETUPVAL 	R6 U0 ; R6 := U0
	19	[1453]	LOADK    	R7 := 1.000000
	20	[1453]	MOVE     	R8 R0 ; R8 := R0
	21	[1453]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	22	[1454]	RETURN   	R0 1 ; return 

function #60 <?:1456,1463> (19 instructions, 76 bytes at 0000021117417940)
1 param, 8 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[1457]	LOADK    	R1 := 1.000000
	2	[1457]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[1457]	LEN      	R2 R2 ; R2 := # R2
	4	[1457]	LOADK    	R3 := 1.000000
	5	[1457]	FORPREP  	R1 18 ; R1 -= R3; PC := 18
	6	[1458]	GETTABLE 	R5 R0 K0 ; R5 := R0["DamageType"]
	7	[1458]	GETUPVAL 	R6 U0 ; R6 := U0
	8	[1458]	GETTABLE 	R6 R6 R4 ; R6 := R6[R4]
	9	[1458]	GETTABLE 	R6 R6 K0 ; R6 := R6["DamageType"]
	10	[1458]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 18
	11	[1458]	JMP      	18 ; PC := 18
	12	[1459]	GETGLOBAL	R5 K1 ; R5 := 0x33bdd652
	13	[1459]	GETTABLE 	R5 R5 K2 ; R5 := R5[0x9c1f3b5a]
	14	[1459]	GETUPVAL 	R6 U0 ; R6 := U0
	15	[1459]	MOVE     	R7 R4 ; R7 := R4
	16	[1459]	CALL     	R5 3 1 ; R5(R6,R7)
	17	[1460]	RETURN   	R0 1 ; return 
	18	[1457]	FORLOOP  	R1 6 ; R1 += R3; if R1 <= R2 then begin PC := 6; R4 := R1 end
	19	[1463]	RETURN   	R0 1 ; return 

function #61 <?:1465,1520> (134 instructions, 536 bytes at 0000021117417A90)
2 params, 13 slots, 6 upvalues, 0 locals, 32 constants, 0 functions
	1	[1466]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[1466]	MOVE     	R3 R0 ; R3 := R0
	3	[1466]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[1466]	TEST     	R2 1 ; if R2 then PC := 17
	5	[1466]	JMP      	17 ; PC := 17
	6	[1466]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	7	[1466]	GETUPVAL 	R3 U0 ; R3 := U0
	8	[1466]	CALL     	R2 2 2 ; R2 := R2(R3)
	9	[1466]	TEST     	R2 1 ; if R2 then PC := 17
	10	[1466]	JMP      	17 ; PC := 17
	11	[1466]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	12	[1466]	GETUPVAL 	R3 U1 ; R3 := U1
	13	[1466]	GETTABLE 	R3 R3 K1 ; R3 := R3["InventoryController"]
	14	[1466]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[1466]	TEST     	R2 0 ; if not R2 then PC := 19
	16	[1466]	JMP      	19 ; PC := 19
	17	[1467]	RETURN   	R0 1 ; return 
	18	[1467]	JMP      	39 ; PC := 39
	19	[1468]	GETUPVAL 	R2 U2 ; R2 := U2
	20	[1468]	GETTABLE 	R2 R2 K2 ; R2 := R2["hasCheckedForStatusEffects"]
	21	[1468]	TEST     	R2 0 ; if not R2 then PC := 39
	22	[1468]	JMP      	39 ; PC := 39
	23	[1469]	GETUPVAL 	R2 U2 ; R2 := U2
	24	[1469]	GETTABLE 	R2 R2 K3 ; R2 := R2["effectCheckRetry"]
	25	[1469]	LT       	0 K4 R2 ; if 0.000000 >= R2 then PC := 38
	26	[1469]	JMP      	38 ; PC := 38
	27	[1471]	GETUPVAL 	R2 U2 ; R2 := U2
	28	[1471]	GETUPVAL 	R3 U2 ; R3 := U2
	29	[1471]	GETTABLE 	R3 R3 K3 ; R3 := R3["effectCheckRetry"]
	30	[1471]	SUB      	R3 R3 R1 ; R3 := R3 - R1
	31	[1471]	SETTABLE 	R2 K3 R3 ; R2["effectCheckRetry"] := R3
	32	[1472]	GETUPVAL 	R2 U2 ; R2 := U2
	33	[1472]	GETTABLE 	R2 R2 K3 ; R2 := R2["effectCheckRetry"]
	34	[1472]	LT       	0 R2 K4 ; if R2 >= 0.000000 then PC := 38
	35	[1472]	JMP      	38 ; PC := 38
	36	[1473]	GETUPVAL 	R2 U2 ; R2 := U2
	37	[1473]	SETTABLE 	R2 K2 K5 ; R2["hasCheckedForStatusEffects"] := false
	38	[1476]	RETURN   	R0 1 ; return 
	39	[1479]	GETUPVAL 	R2 U2 ; R2 := U2
	40	[1479]	SETTABLE 	R2 K2 K6 ; R2["hasCheckedForStatusEffects"] := true
	41	[1481]	LOADNIL  	R2 R2 ; R2 := nil
	42	[1482]	GETUPVAL 	R3 U2 ; R3 := U2
	43	[1482]	GETTABLE 	R3 R3 K7 ; R3 := R3["effectOverride"]
	44	[1483]	EQ       	0 R3 K8 ; if R3 ~= nil then PC := 111
	45	[1483]	JMP      	111 ; PC := 111
	46	[1484]	LOADNIL  	R4 R4 ; R4 := nil
	47	[1485]	LOADK    	R5 := 1.000000
	48	[1485]	GETUPVAL 	R6 U1 ; R6 := U1
	49	[1485]	GETTABLE 	R6 R6 K1 ; R6 := R6["InventoryController"]
	50	[1485]	SELF     	R6 R6 K9 ; R7 := R6; R6 := R6[0x4056d183]
	51	[1485]	LOADK    	R8 := 0.000000
	52	[1485]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	53	[1485]	LOADK    	R7 := 1.000000
	54	[1485]	FORPREP  	R5 110 ; R5 -= R7; PC := 110
	55	[1486]	GETUPVAL 	R9 U1 ; R9 := U1
	56	[1486]	GETTABLE 	R9 R9 K1 ; R9 := R9["InventoryController"]
	57	[1486]	SELF     	R9 R9 K11 ; R10 := R9; R9 := R9[0xe6e56442]
	58	[1486]	SUB      	R11 R8 K12 ; R11 := R8 - 1.000000
	59	[1486]	LOADK    	R12 := 0.000000
	60	[1486]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	61	[1486]	MOVE     	R4 R9 ; R4 := R9
	62	[1487]	GETGLOBAL	R9 K0 ; R9 := 0x7b998233
	63	[1487]	MOVE     	R10 R4 ; R10 := R4
	64	[1487]	CALL     	R9 2 2 ; R9 := R9(R10)
	65	[1487]	TEST     	R9 1 ; if R9 then PC := 110
	66	[1487]	JMP      	110 ; PC := 110
	67	[1487]	GETUPVAL 	R9 U1 ; R9 := U1
	68	[1487]	GETTABLE 	R9 R9 K1 ; R9 := R9["InventoryController"]
	69	[1487]	SELF     	R9 R9 K13 ; R10 := R9; R9 := R9[0x3dc59189]
	70	[1487]	SUB      	R11 R8 K12 ; R11 := R8 - 1.000000
	71	[1487]	LOADK    	R12 := 0.000000
	72	[1487]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	73	[1487]	LT       	0 K4 R9 ; if 0.000000 >= R9 then PC := 110
	74	[1487]	JMP      	110 ; PC := 110
	75	[1488]	SELF     	R9 R4 K14 ; R10 := R4; R9 := R4[0xed4e0128]
	76	[1488]	CALL     	R9 2 2 ; R9 := R9(R10)
	77	[1488]	MOVE     	R3 R9 ; R3 := R9
	78	[1489]	EQ       	0 R3 K15 ; if R3 ~= "ShieldDebuffKey" then PC := 85
	79	[1489]	JMP      	85 ; PC := 85
	80	[1490]	NEWTABLE 	R9 0 2 ; R9 := {}
	81	[1490]	SETTABLE 	R9 K16 K17 ; R9["Icon"] := "<SHIELD_DEBUFF_KEY>"
	82	[1490]	SETTABLE 	R9 K18 K19 ; R9["Description"] := "/Lotus/Language/Items/ShieldDebuffKeyName"
	83	[1490]	MOVE     	R2 R9 ; R2 := R9
	84	[1490]	JMP      	105 ; PC := 105
	85	[1491]	EQ       	0 R3 K20 ; if R3 ~= "HealthDebuffKey" then PC := 92
	86	[1491]	JMP      	92 ; PC := 92
	87	[1492]	NEWTABLE 	R9 0 2 ; R9 := {}
	88	[1492]	SETTABLE 	R9 K16 K21 ; R9["Icon"] := "<HEALTH_DEBUFF_KEY>"
	89	[1492]	SETTABLE 	R9 K18 K22 ; R9["Description"] := "/Lotus/Language/Items/HealthDebuffKeyName"
	90	[1492]	MOVE     	R2 R9 ; R2 := R9
	91	[1492]	JMP      	105 ; PC := 105
	92	[1493]	EQ       	0 R3 K23 ; if R3 ~= "SpeedDebuffKey" then PC := 99
	93	[1493]	JMP      	99 ; PC := 99
	94	[1494]	NEWTABLE 	R9 0 2 ; R9 := {}
	95	[1494]	SETTABLE 	R9 K16 K24 ; R9["Icon"] := "<SPEED_DEBUFF_KEY>"
	96	[1494]	SETTABLE 	R9 K18 K25 ; R9["Description"] := "/Lotus/Language/Items/SpeedDebuffKeyName"
	97	[1494]	MOVE     	R2 R9 ; R2 := R9
	98	[1494]	JMP      	105 ; PC := 105
	99	[1495]	EQ       	0 R3 K26 ; if R3 ~= "DamageDebuffKey" then PC := 105
	100	[1495]	JMP      	105 ; PC := 105
	101	[1496]	NEWTABLE 	R9 0 2 ; R9 := {}
	102	[1496]	SETTABLE 	R9 K16 K27 ; R9["Icon"] := "<DAMAGE_DEBUFF_KEY>"
	103	[1496]	SETTABLE 	R9 K18 K28 ; R9["Description"] := "/Lotus/Language/Items/DamageDebuffKeyName"
	104	[1496]	MOVE     	R2 R9 ; R2 := R9
	105	[1498]	EQ       	1 R2 K8 ; if R2 == nil then PC := 110
	106	[1498]	JMP      	110 ; PC := 110
	107	[1499]	SETTABLE 	R2 K29 R3 ; R2["DamageType"] := R3
	108	[1500]	SETTABLE 	R2 K30 K31 ; R2["Time"] := ""
	109	[1501]	JMP      	111 ; PC := 111
	110	[1485]	FORLOOP  	R5 55 ; R5 += R7; if R5 <= R6 then begin PC := 55; R8 := R5 end
	111	[1507]	GETUPVAL 	R9 U3 ; R9 := U3
	112	[1507]	EQ       	1 R9 K8 ; if R9 == nil then PC := 128
	113	[1507]	JMP      	128 ; PC := 128
	114	[1508]	EQ       	1 R2 K8 ; if R2 == nil then PC := 121
	115	[1508]	JMP      	121 ; PC := 121
	116	[1508]	GETUPVAL 	R9 U3 ; R9 := U3
	117	[1508]	GETTABLE 	R9 R9 K29 ; R9 := R9["DamageType"]
	118	[1508]	GETTABLE 	R10 R2 K29 ; R10 := R2["DamageType"]
	119	[1508]	EQ       	1 R9 R10 ; if R9 == R10 then PC := 127
	120	[1508]	JMP      	127 ; PC := 127
	121	[1509]	GETUPVAL 	R9 U4 ; R9 := U4
	122	[1509]	GETUPVAL 	R10 U3 ; R10 := U3
	123	[1509]	CALL     	R9 2 1 ; R9(R10)
	124	[1510]	LOADNIL  	R9 R9 ; R9 := nil
	125	[1510]	SETUPVAL 	R9 U3 ; U3 := R9
	126	[1510]	JMP      	128 ; PC := 128
	127	[1512]	RETURN   	R0 1 ; return 
	128	[1516]	EQ       	1 R2 K8 ; if R2 == nil then PC := 134
	129	[1516]	JMP      	134 ; PC := 134
	130	[1517]	GETUPVAL 	R9 U5 ; R9 := U5
	131	[1517]	MOVE     	R10 R2 ; R10 := R2
	132	[1517]	CALL     	R9 2 1 ; R9(R10)
	133	[1518]	SETUPVAL 	R2 U3 ; U3 := R2
	134	[1520]	RETURN   	R0 1 ; return 

function #62 <?:1522,1535> (40 instructions, 160 bytes at 000002111A6BC140)
3 params, 8 slots, 2 upvalues, 0 locals, 14 constants, 0 functions
	1	[1523]	GETGLOBAL	R3 K0 ; R3 := 0xb009bbc6
	2	[1523]	MOVE     	R4 R0 ; R4 := R0
	3	[1523]	CALL     	R3 2 2 ; R3 := R3(R4)
	4	[1525]	GETGLOBAL	R4 K1 ; R4 := 0x7b998233
	5	[1525]	MOVE     	R5 R3 ; R5 := R3
	6	[1525]	CALL     	R4 2 2 ; R4 := R4(R5)
	7	[1525]	TEST     	R4 1 ; if R4 then PC := 40
	8	[1525]	JMP      	40 ; PC := 40
	9	[1526]	NEWTABLE 	R4 0 5 ; R4 := {}
	10	[1526]	SETTABLE 	R4 K2 K3 ; R4["Icon"] := "<SHIELD_DEBUFF_KEY>"
	11	[1526]	GETGLOBAL	R5 K5 ; R5 := 0x64fb1586
	12	[1526]	SELF     	R6 R3 K6 ; R7 := R3; R6 := R3[0xd3a9d01f]
	13	[1526]	CALL     	R6 2 0 ; R6,... := R6(R7)
	14	[1526]	CALL     	R5 0 2 ; R5 := R5(R6,...)
	15	[1526]	SETTABLE 	R4 K4 R5 ; R4["Description"] := R5
	16	[1526]	SETTABLE 	R4 K7 R0 ; R4["DamageType"] := R0
	17	[1526]	GETGLOBAL	R5 K9 ; R5 := 0x03f57322
	18	[1526]	MOVE     	R6 R2 ; R6 := R2
	19	[1526]	CALL     	R5 2 2 ; R5 := R5(R6)
	20	[1526]	SETTABLE 	R4 K8 R5 ; R4["Timer"] := R5
	21	[1526]	GETGLOBAL	R5 K9 ; R5 := 0x03f57322
	22	[1526]	MOVE     	R6 R2 ; R6 := R2
	23	[1526]	CALL     	R5 2 2 ; R5 := R5(R6)
	24	[1526]	SETTABLE 	R4 K10 R5 ; R4["Time"] := R5
	25	[1527]	EQ       	0 R1 K11 ; if R1 ~= "true" then PC := 37
	26	[1527]	JMP      	37 ; PC := 37
	27	[1528]	GETTABLE 	R5 R4 K8 ; R5 := R4["Timer"]
	28	[1528]	EQ       	1 R5 K12 ; if R5 == nil then PC := 33
	29	[1528]	JMP      	33 ; PC := 33
	30	[1528]	GETTABLE 	R5 R4 K8 ; R5 := R4["Timer"]
	31	[1528]	LT       	0 K13 R5 ; if 0.000000 >= R5 then PC := 40
	32	[1528]	JMP      	40 ; PC := 40
	33	[1529]	GETUPVAL 	R5 U0 ; R5 := U0
	34	[1529]	MOVE     	R6 R4 ; R6 := R4
	35	[1529]	CALL     	R5 2 1 ; R5(R6)
	36	[1530]	JMP      	40 ; PC := 40
	37	[1532]	GETUPVAL 	R5 U1 ; R5 := U1
	38	[1532]	MOVE     	R6 R4 ; R6 := R4
	39	[1532]	CALL     	R5 2 1 ; R5(R6)
	40	[1535]	RETURN   	R0 1 ; return 

function #63 <?:1539,1542> (10 instructions, 40 bytes at 000002111A6BC280)
0 params, 3 slots, 2 upvalues, 0 locals, 3 constants, 0 functions
	1	[1540]	GETGLOBAL	R0 K0 ; R0 := 0x33bdd652
	2	[1540]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x9c1f3b5a]
	3	[1540]	GETUPVAL 	R1 U0 ; R1 := U0
	4	[1540]	LOADK    	R2 := 1.000000
	5	[1540]	CALL     	R0 3 1 ; R0(R1,R2)
	6	[1541]	GETUPVAL 	R0 U1 ; R0 := U1
	7	[1541]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x5f93ee4d]
	8	[1541]	OP_LOADBOOL	R2 0 0 ; R2 := false
	9	[1541]	CALL     	R0 3 1 ; R0(R1,R2)
	10	[1542]	RETURN   	R0 1 ; return 

function #64 <?:1544,1568> (98 instructions, 392 bytes at 0000021192595DB0)
1 param, 9 slots, 5 upvalues, 0 locals, 26 constants, 0 functions
	1	[1546]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1546]	GETUPVAL 	R2 U1 ; R2 := U1
	3	[1546]	GETTABLE 	R2 R2 K1 ; R2 := R2[0xfc31b69e]
	4	[1546]	MOVE     	R3 R0 ; R3 := R0
	5	[1546]	LOADK    	R4 := -1.000000
	6	[1546]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	7	[1546]	SETTABLE 	R1 K0 R2 ; R1[1.000000] := R2
	8	[1547]	GETUPVAL 	R1 U0 ; R1 := U0
	9	[1547]	GETTABLE 	R1 R1 K0 ; R1 := R1[1.000000]
	10	[1547]	GETTABLE 	R1 R1 K2 ; R1 := R1["mInstalled"]
	11	[1547]	SETTABLE 	R1 K3 K0 ; R1["fake"] := 1.000000
	12	[1548]	GETUPVAL 	R1 U2 ; R1 := U2
	13	[1548]	NEWTABLE 	R2 0 0 ; R2 := {}
	14	[1548]	SETTABLE 	R1 K0 R2 ; R1[1.000000] := R2
	15	[1549]	GETUPVAL 	R1 U2 ; R1 := U2
	16	[1549]	GETTABLE 	R1 R1 K0 ; R1 := R1[1.000000]
	17	[1549]	SETTABLE 	R1 K4 K0 ; R1["mCardIndex"] := 1.000000
	18	[1550]	GETUPVAL 	R1 U2 ; R1 := U2
	19	[1550]	GETTABLE 	R1 R1 K0 ; R1 := R1[1.000000]
	20	[1550]	SETTABLE 	R1 K5 K6 ; R1["mClipName"] := "Card.Card"
	21	[1551]	GETUPVAL 	R1 U2 ; R1 := U2
	22	[1551]	GETTABLE 	R1 R1 K0 ; R1 := R1[1.000000]
	23	[1551]	SETTABLE 	R1 K2 K0 ; R1["mInstalled"] := 1.000000
	24	[1552]	GETUPVAL 	R1 U2 ; R1 := U2
	25	[1552]	GETTABLE 	R1 R1 K0 ; R1 := R1[1.000000]
	26	[1552]	SETTABLE 	R1 K7 K9 ; R1["mPolarity"] := 0.000000
	27	[1554]	GETUPVAL 	R1 U1 ; R1 := U1
	28	[1554]	GETTABLE 	R1 R1 K10 ; R1 := R1[0xcbcefa26]
	29	[1554]	GETUPVAL 	R2 U2 ; R2 := U2
	30	[1554]	GETTABLE 	R2 R2 K0 ; R2 := R2[1.000000]
	31	[1554]	CALL     	R1 2 1 ; R1(R2)
	32	[1555]	GETUPVAL 	R1 U1 ; R1 := U1
	33	[1555]	GETTABLE 	R1 R1 K11 ; R1 := R1[0x7b21de70]
	34	[1555]	GETUPVAL 	R2 U2 ; R2 := U2
	35	[1555]	GETTABLE 	R2 R2 K0 ; R2 := R2[1.000000]
	36	[1555]	GETUPVAL 	R3 U2 ; R3 := U2
	37	[1555]	GETTABLE 	R3 R3 K0 ; R3 := R3[1.000000]
	38	[1555]	GETTABLE 	R3 R3 K5 ; R3 := R3["mClipName"]
	39	[1555]	LOADK    	R4 K12 ; R4 := ".Card"
	40	[1555]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	41	[1555]	OP_LOADBOOL	R4 0 0 ; R4 := false
	42	[1555]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	43	[1556]	GETUPVAL 	R1 U1 ; R1 := U1
	44	[1556]	GETTABLE 	R1 R1 K13 ; R1 := R1[0x37970f97]
	45	[1556]	GETUPVAL 	R2 U2 ; R2 := U2
	46	[1556]	GETTABLE 	R2 R2 K0 ; R2 := R2[1.000000]
	47	[1556]	GETUPVAL 	R3 U2 ; R3 := U2
	48	[1556]	GETTABLE 	R3 R3 K0 ; R3 := R3[1.000000]
	49	[1556]	GETTABLE 	R3 R3 K5 ; R3 := R3["mClipName"]
	50	[1556]	LOADK    	R4 K12 ; R4 := ".Card"
	51	[1556]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	52	[1556]	OP_LOADBOOL	R4 1 0 ; R4 := true
	53	[1556]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	54	[1558]	GETGLOBAL	R1 K14 ; R1 := 0xae91e43b
	55	[1558]	SELF     	R1 R1 K15 ; R2 := R1; R1 := R1[0xf64b7262]
	56	[1558]	GETUPVAL 	R3 U2 ; R3 := U2
	57	[1558]	GETTABLE 	R3 R3 K0 ; R3 := R3[1.000000]
	58	[1558]	GETTABLE 	R3 R3 K5 ; R3 := R3["mClipName"]
	59	[1558]	LOADK    	R4 K16 ; R4 := "Card.BottomFrame.Equipped"
	60	[1558]	LOADK    	R5 := 10.000000
	61	[1558]	LOADK    	R6 := 0.000000
	62	[1558]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	63	[1560]	GETUPVAL 	R1 U3 ; R1 := U3
	64	[1560]	GETTABLE 	R1 R1 K17 ; R1 := R1[0x659d451f]
	65	[1560]	GETGLOBAL	R2 K18 ; R2 := 0x2e797504
	66	[1560]	CALL     	R1 2 1 ; R1(R2)
	67	[1562]	GETUPVAL 	R1 U2 ; R1 := U2
	68	[1562]	GETTABLE 	R1 R1 K0 ; R1 := R1[1.000000]
	69	[1562]	GETTABLE 	R1 R1 K5 ; R1 := R1["mClipName"]
	70	[1563]	GETGLOBAL	R2 K14 ; R2 := 0xae91e43b
	71	[1563]	SELF     	R2 R2 K19 ; R3 := R2; R2 := R2[0x67bc869f]
	72	[1563]	MOVE     	R4 R1 ; R4 := R1
	73	[1563]	LOADK    	R5 := 10.000000
	74	[1563]	LOADK    	R6 := 0.000000
	75	[1563]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	76	[1564]	GETGLOBAL	R2 K20 ; R2 := 0x25312c9b
	77	[1564]	GETGLOBAL	R3 K14 ; R3 := 0xae91e43b
	78	[1564]	MOVE     	R4 R1 ; R4 := R1
	79	[1564]	LOADK    	R5 := 8.000000
	80	[1564]	NEWTABLE 	R6 1 0 ; R6 := {}
	81	[1564]	LOADK    	R7 := 10.000000
	82	[1564]	SETLIST  	R6 1 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
	83	[1564]	NEWTABLE 	R7 1 0 ; R7 := {}
	84	[1564]	LOADK    	R8 := 100.000000
	85	[1564]	SETLIST  	R7 1 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
	86	[1564]	LOADK    	R8 K22 ; R8 := 0.200000
	87	[1564]	CALL     	R2 7 1 ; R2(R3,R4,R5,R6,R7,R8)
	88	[1566]	GETGLOBAL	R2 K14 ; R2 := 0xae91e43b
	89	[1566]	SELF     	R2 R2 K23 ; R3 := R2; R2 := R2[0xaade900e]
	90	[1566]	LOADK    	R4 K24 ; R4 := "Card"
	91	[1566]	LOADK    	R5 := 11.000000
	92	[1566]	OP_LOADBOOL	R6 1 0 ; R6 := true
	93	[1566]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	94	[1567]	GETUPVAL 	R2 U4 ; R2 := U4
	95	[1567]	SELF     	R2 R2 K25 ; R3 := R2; R2 := R2[0x5f93ee4d]
	96	[1567]	OP_LOADBOOL	R4 1 0 ; R4 := true
	97	[1567]	CALL     	R2 3 1 ; R2(R3,R4)
	98	[1568]	RETURN   	R0 1 ; return 

function #65 <?:1570,1578> (21 instructions, 84 bytes at 0000021192595E40)
1 param, 7 slots, 1 upvalue, 0 locals, 9 constants, 0 functions
	1	[1571]	GETGLOBAL	R1 K0 ; R1 := 0x6c97a788
	2	[1571]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x1aba4d9e]
	3	[1571]	CALL     	R1 1 2 ; R1 := R1()
	4	[1572]	GETTABLE 	R2 R0 K3 ; R2 := R0["mItem"]
	5	[1572]	SETTABLE 	R1 K2 R2 ; R1["mItemType"] := R2
	6	[1573]	GETTABLE 	R2 R0 K5 ; R2 := R0["mFingerprint"]
	7	[1573]	SETTABLE 	R1 K4 R2 ; R1["mUpgradeFingerprint"] := R2
	8	[1574]	GETUPVAL 	R2 U0 ; R2 := U0
	9	[1574]	EQ       	0 R2 K6 ; if R2 ~= nil then PC := 13
	10	[1574]	JMP      	13 ; PC := 13
	11	[1575]	NEWTABLE 	R2 0 0 ; R2 := {}
	12	[1575]	SETUPVAL 	R2 U0 ; U0 := R2
	13	[1577]	GETGLOBAL	R2 K7 ; R2 := 0x33bdd652
	14	[1577]	GETTABLE 	R2 R2 K8 ; R2 := R2[0x23d5322f]
	15	[1577]	GETUPVAL 	R3 U0 ; R3 := U0
	16	[1577]	NEWTABLE 	R4 2 0 ; R4 := {}
	17	[1577]	MOVE     	R5 R1 ; R5 := R1
	18	[1577]	LOADK    	R6 := -1.000000
	19	[1577]	SETLIST  	R4 2 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
	20	[1577]	CALL     	R2 3 1 ; R2(R3,R4)
	21	[1578]	RETURN   	R0 1 ; return 

function #66 <?:1580,1587> (13 instructions, 52 bytes at 000002112A561C20)
2 params, 5 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[1581]	EQ       	0 R1 K0 ; if R1 ~= nil then PC := 4
	2	[1581]	JMP      	4 ; PC := 4
	3	[1582]	LOADK    	R1 K1 ; R1 := ""
	4	[1585]	NEWTABLE 	R2 0 2 ; R2 := {}
	5	[1585]	GETGLOBAL	R3 K3 ; R3 := 0x7ed0a956
	6	[1585]	MOVE     	R4 R0 ; R4 := R0
	7	[1585]	CALL     	R3 2 2 ; R3 := R3(R4)
	8	[1585]	SETTABLE 	R2 K2 R3 ; R2["mItem"] := R3
	9	[1585]	SETTABLE 	R2 K4 R1 ; R2["mFingerprint"] := R1
	10	[1586]	GETUPVAL 	R3 U0 ; R3 := U0
	11	[1586]	MOVE     	R4 R2 ; R4 := R2
	12	[1586]	CALL     	R3 2 1 ; R3(R4)
	13	[1587]	RETURN   	R0 1 ; return 

function #67 <?:1589,1622> (97 instructions, 388 bytes at 000002112A561D50)
1 param, 12 slots, 6 upvalues, 0 locals, 19 constants, 0 functions
	1	[1590]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1590]	TEST     	R1 0 ; if not R1 then PC := 8
	3	[1590]	JMP      	8 ; PC := 8
	4	[1590]	GETGLOBAL	R1 K0 ; R1 := 0x0032441c
	5	[1590]	GETTABLE 	R1 R1 K1 ; R1 := R1["StalkerMode"]
	6	[1590]	TEST     	R1 0 ; if not R1 then PC := 9
	7	[1590]	JMP      	9 ; PC := 9
	8	[1591]	RETURN   	R0 1 ; return 
	9	[1594]	GETUPVAL 	R1 U0 ; R1 := U0
	10	[1594]	LEN      	R1 R1 ; R1 := # R1
	11	[1594]	EQ       	0 R1 K2 ; if R1 ~= 0.000000 then PC := 22
	12	[1594]	JMP      	22 ; PC := 22
	13	[1595]	LOADNIL  	R1 R1 ; R1 := nil
	14	[1595]	SETUPVAL 	R1 U0 ; U0 := R1
	15	[1596]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	16	[1596]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xaade900e]
	17	[1596]	LOADK    	R3 K5 ; R3 := "Card"
	18	[1596]	LOADK    	R4 := 11.000000
	19	[1596]	OP_LOADBOOL	R5 1 0 ; R5 := true
	20	[1596]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	21	[1597]	RETURN   	R0 1 ; return 
	22	[1601]	GETGLOBAL	R1 K6 ; R1 := 0x9ba7909f
	23	[1601]	SELF     	R1 R1 K7 ; R2 := R1; R1 := R1[0x5374b92e]
	24	[1601]	GETGLOBAL	R3 K0 ; R3 := 0x0032441c
	25	[1601]	GETTABLE 	R3 R3 K8 ; R3 := R3["UIMovie_TransmissionMovie"]
	26	[1601]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	27	[1601]	TEST     	R1 0 ; if not R1 then PC := 34
	28	[1601]	JMP      	34 ; PC := 34
	29	[1602]	GETUPVAL 	R1 U1 ; R1 := U1
	30	[1602]	GETTABLE 	R1 R1 K9 ; R1 := R1["mTransOnRightSide"]
	31	[1602]	TEST     	R1 0 ; if not R1 then PC := 34
	32	[1602]	JMP      	34 ; PC := 34
	33	[1603]	RETURN   	R0 1 ; return 
	34	[1607]	LOADK    	R1 := 1.000000
	35	[1608]	GETUPVAL 	R2 U0 ; R2 := U0
	36	[1608]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	37	[1608]	GETTABLE 	R2 R2 K10 ; R2 := R2[2.000000]
	38	[1608]	LT       	0 R2 K2 ; if R2 >= 0.000000 then PC := 49
	39	[1608]	JMP      	49 ; PC := 49
	40	[1609]	GETUPVAL 	R2 U0 ; R2 := U0
	41	[1609]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	42	[1609]	SETTABLE 	R2 K10 K11 ; R2[2.000000] := 3.000000
	43	[1610]	GETUPVAL 	R2 U2 ; R2 := U2
	44	[1610]	GETUPVAL 	R3 U0 ; R3 := U0
	45	[1610]	GETTABLE 	R3 R3 R1 ; R3 := R3[R1]
	46	[1610]	GETTABLE 	R3 R3 K12 ; R3 := R3[1.000000]
	47	[1610]	CALL     	R2 2 1 ; R2(R3)
	48	[1610]	JMP      	97 ; PC := 97
	49	[1611]	GETUPVAL 	R2 U0 ; R2 := U0
	50	[1611]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	51	[1611]	GETTABLE 	R2 R2 K10 ; R2 := R2[2.000000]
	52	[1611]	LT       	0 K2 R2 ; if 0.000000 >= R2 then PC := 97
	53	[1611]	JMP      	97 ; PC := 97
	54	[1612]	GETUPVAL 	R2 U0 ; R2 := U0
	55	[1612]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	56	[1612]	GETUPVAL 	R3 U0 ; R3 := U0
	57	[1612]	GETTABLE 	R3 R3 R1 ; R3 := R3[R1]
	58	[1612]	GETTABLE 	R3 R3 K10 ; R3 := R3[2.000000]
	59	[1612]	SUB      	R3 R3 R0 ; R3 := R3 - R0
	60	[1612]	SETTABLE 	R2 K10 R3 ; R2[2.000000] := R3
	61	[1613]	GETUPVAL 	R2 U0 ; R2 := U0
	62	[1613]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	63	[1613]	GETTABLE 	R2 R2 K10 ; R2 := R2[2.000000]
	64	[1613]	LT       	0 R2 K2 ; if R2 >= 0.000000 then PC := 97
	65	[1613]	JMP      	97 ; PC := 97
	66	[1615]	GETUPVAL 	R2 U0 ; R2 := U0
	67	[1615]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	68	[1615]	SETTABLE 	R2 K10 K2 ; R2[2.000000] := 0.000000
	69	[1616]	GETUPVAL 	R2 U3 ; R2 := U3
	70	[1616]	GETTABLE 	R2 R2 K12 ; R2 := R2[1.000000]
	71	[1616]	GETTABLE 	R2 R2 K13 ; R2 := R2["mClipName"]
	72	[1617]	GETUPVAL 	R3 U4 ; R3 := U4
	73	[1617]	GETTABLE 	R3 R3 K14 ; R3 := R3[0x37970f97]
	74	[1617]	GETUPVAL 	R4 U3 ; R4 := U3
	75	[1617]	GETTABLE 	R4 R4 K12 ; R4 := R4[1.000000]
	76	[1617]	GETUPVAL 	R5 U3 ; R5 := U3
	77	[1617]	GETTABLE 	R5 R5 K12 ; R5 := R5[1.000000]
	78	[1617]	GETTABLE 	R5 R5 K13 ; R5 := R5["mClipName"]
	79	[1617]	LOADK    	R6 K15 ; R6 := ".Card"
	80	[1617]	CONCAT   	R5 R5 R6 ; R5 := R5 .. R6
	81	[1617]	OP_LOADBOOL	R6 1 0 ; R6 := true
	82	[1617]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	83	[1618]	GETGLOBAL	R3 K16 ; R3 := 0x25312c9b
	84	[1618]	GETGLOBAL	R4 K3 ; R4 := 0xae91e43b
	85	[1618]	MOVE     	R5 R2 ; R5 := R2
	86	[1618]	LOADK    	R6 := 8.000000
	87	[1618]	NEWTABLE 	R7 1 0 ; R7 := {}
	88	[1618]	LOADK    	R8 := 10.000000
	89	[1618]	SETLIST  	R7 1 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
	90	[1618]	NEWTABLE 	R8 1 0 ; R8 := {}
	91	[1618]	LOADK    	R9 := 0.000000
	92	[1618]	SETLIST  	R8 1 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
	93	[1618]	LOADK    	R9 K18 ; R9 := 0.200000
	94	[1618]	LOADK    	R10 := 0.000000
	95	[1618]	GETUPVAL 	R11 U5 ; R11 := U5
	96	[1618]	CALL     	R3 9 1 ; R3(R4,R5,R6,R7,R8,R9,R10,R11)
	97	[1622]	RETURN   	R0 1 ; return 

function #68 <?:1624,1630> (24 instructions, 96 bytes at 000002112620DDE0)
2 params, 10 slots, 2 upvalues, 0 locals, 8 constants, 0 functions
	1	[1625]	GETGLOBAL	R2 K0 ; R2 := _T
	2	[1625]	GETTABLE 	R2 R2 K1 ; R2 := R2["MinimalHud"]
	3	[1625]	TEST     	R2 1 ; if R2 then PC := 24
	4	[1625]	JMP      	24 ; PC := 24
	5	[1625]	GETUPVAL 	R2 U0 ; R2 := U0
	6	[1625]	GETTABLE 	R2 R2 K2 ; R2 := R2["IsAlternateHud"]
	7	[1625]	TEST     	R2 1 ; if R2 then PC := 24
	8	[1625]	JMP      	24 ; PC := 24
	9	[1626]	GETGLOBAL	R2 K3 ; R2 := 0xb009bbc6
	10	[1626]	MOVE     	R3 R0 ; R3 := R0
	11	[1626]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[1627]	GETUPVAL 	R3 U1 ; R3 := U1
	13	[1627]	GETTABLE 	R3 R3 K4 ; R3 := R3[0xb5be5d4a]
	14	[1627]	GETGLOBAL	R4 K5 ; R4 := 0xae91e43b
	15	[1627]	LOADK    	R5 K6 ; R5 := "Notification"
	16	[1627]	CALL     	R3 3 3 ; R3,R4 := R3(R4,R5)
	17	[1628]	GETUPVAL 	R5 U1 ; R5 := U1
	18	[1628]	GETTABLE 	R5 R5 K7 ; R5 := R5[0x5a22d251]
	19	[1628]	GETGLOBAL	R6 K5 ; R6 := 0xae91e43b
	20	[1628]	MOVE     	R7 R2 ; R7 := R2
	21	[1628]	MOVE     	R8 R3 ; R8 := R3
	22	[1628]	ADD      	R9 R4 R1 ; R9 := R4 + R1
	23	[1628]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	24	[1630]	RETURN   	R0 1 ; return 

function #69 <?:1632,1648> (37 instructions, 148 bytes at 000002112DBFC140)
1 param, 11 slots, 2 upvalues, 0 locals, 9 constants, 1 function
	1	[1633]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[1633]	GETTABLE 	R1 R1 K1 ; R1 := R1["MinimalHud"]
	3	[1633]	TEST     	R1 1 ; if R1 then PC := 9
	4	[1633]	JMP      	9 ; PC := 9
	5	[1633]	GETUPVAL 	R1 U0 ; R1 := U0
	6	[1633]	GETTABLE 	R1 R1 K2 ; R1 := R1["IsAlternateHud"]
	7	[1633]	TEST     	R1 0 ; if not R1 then PC := 14
	8	[1633]	JMP      	14 ; PC := 14
	9	[1634]	GETUPVAL 	R1 U1 ; R1 := U1
	10	[1634]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xf707943e]
	11	[1634]	OP_LOADBOOL	R3 0 0 ; R3 := false
	12	[1634]	CALL     	R1 3 1 ; R1(R2,R3)
	13	[1634]	JMP      	37 ; PC := 37
	14	[1636]	LOADK    	R1 := 105.000000
	15	[1637]	GETGLOBAL	R2 K4 ; R2 := 0x25312c9b
	16	[1637]	GETGLOBAL	R3 K5 ; R3 := 0xae91e43b
	17	[1637]	LOADK    	R4 K6 ; R4 := "Notification"
	18	[1637]	LOADK    	R5 := 1.000000
	19	[1637]	NEWTABLE 	R6 3 0 ; R6 := {}
	20	[1637]	LOADK    	R7 := 10.000000
	21	[1637]	LOADK    	R8 := 5.000000
	22	[1637]	LOADK    	R9 := 6.000000
	23	[1637]	SETLIST  	R6 3 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 3
	24	[1637]	NEWTABLE 	R7 3 0 ; R7 := {}
	25	[1637]	LOADK    	R8 := 100.000000
	26	[1637]	LOADK    	R9 := 100.000000
	27	[1637]	LOADK    	R10 := 100.000000
	28	[1637]	SETLIST  	R7 3 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 3
	29	[1637]	LOADK    	R8 K8 ; R8 := 0.350000
	30	[1637]	LOADK    	R9 := 0.000000
	31	[1646]	CLOSURE  	R10 0 ; R10 := closure(Function #1)
	32	[1646]	MOVE     	R0 R1 ; R0 := R1
	33	[1646]	MOVE     	R0 R0 ; R0 := R0
	34	[1646]	GETUPVAL 	R0 U1 ; R0 := U1
	35	[1637]	CALL     	R2 9 1 ; R2(R3,R4,R5,R6,R7,R8,R9,R10)
	36	[1646]	CLOSE    	R1 ; SAVE R1,...
	37	[1648]	RETURN   	R0 1 ; return 

function #70 <?:1651,1653> (20 instructions, 80 bytes at 00000211321E1880)
0 params, 9 slots, 1 upvalue, 0 locals, 7 constants, 0 functions
	1	[1652]	GETGLOBAL	R0 K0 ; R0 := 0x25312c9b
	2	[1652]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	3	[1652]	LOADK    	R2 K2 ; R2 := "AbilityPanel.AbilityMessage"
	4	[1652]	LOADK    	R3 := 8.000000
	5	[1652]	NEWTABLE 	R4 2 0 ; R4 := {}
	6	[1652]	LOADK    	R5 := 10.000000
	7	[1652]	LOADK    	R6 := 0.000000
	8	[1652]	SETLIST  	R4 2 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
	9	[1652]	NEWTABLE 	R5 2 0 ; R5 := {}
	10	[1652]	LOADK    	R6 := 0.000000
	11	[1652]	GETUPVAL 	R7 U0 ; R7 := U0
	12	[1652]	GETTABLE 	R7 R7 K4 ; R7 := R7["newX"]
	13	[1652]	GETUPVAL 	R8 U0 ; R8 := U0
	14	[1652]	GETTABLE 	R8 R8 K5 ; R8 := R8["offsetX"]
	15	[1652]	SUB      	R7 R7 R8 ; R7 := R7 - R8
	16	[1652]	SETLIST  	R5 2 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 2
	17	[1652]	LOADK    	R6 K6 ; R6 := 0.300000
	18	[1652]	LOADK    	R7 := 2.000000
	19	[1652]	CALL     	R0 8 1 ; R0(R1,R2,R3,R4,R5,R6,R7)
	20	[1653]	RETURN   	R0 1 ; return 

function #71 <?:1656,1661> (36 instructions, 144 bytes at 00000211CBBFA330)
3 params, 12 slots, 2 upvalues, 0 locals, 10 constants, 0 functions
	1	[1657]	GETGLOBAL	R3 K0 ; R3 := 0xae91e43b
	2	[1657]	SELF     	R3 R3 K1 ; R4 := R3; R3 := R3[0x20b98db3]
	3	[1657]	LOADK    	R5 K2 ; R5 := "AbilityPanel.AbilityMessage.Label.text"
	4	[1657]	MOVE     	R6 R2 ; R6 := R2
	5	[1657]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	6	[1658]	GETUPVAL 	R3 U0 ; R3 := U0
	7	[1658]	SELF     	R3 R3 K3 ; R4 := R3; R3 := R3[0x3488eaf1]
	8	[1658]	CALL     	R3 2 1 ; R3(R4)
	9	[1659]	GETGLOBAL	R3 K0 ; R3 := 0xae91e43b
	10	[1659]	SELF     	R3 R3 K4 ; R4 := R3; R3 := R3[0x67bc869f]
	11	[1659]	LOADK    	R5 K5 ; R5 := "AbilityPanel.AbilityMessage"
	12	[1659]	LOADK    	R6 := 0.000000
	13	[1659]	GETUPVAL 	R7 U0 ; R7 := U0
	14	[1659]	GETTABLE 	R7 R7 K6 ; R7 := R7["newX"]
	15	[1659]	GETUPVAL 	R8 U0 ; R8 := U0
	16	[1659]	GETTABLE 	R8 R8 K7 ; R8 := R8["offsetX"]
	17	[1659]	ADD      	R7 R7 R8 ; R7 := R7 + R8
	18	[1659]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	19	[1660]	GETGLOBAL	R3 K8 ; R3 := 0x25312c9b
	20	[1660]	GETGLOBAL	R4 K0 ; R4 := 0xae91e43b
	21	[1660]	LOADK    	R5 K5 ; R5 := "AbilityPanel.AbilityMessage"
	22	[1660]	LOADK    	R6 := 8.000000
	23	[1660]	NEWTABLE 	R7 2 0 ; R7 := {}
	24	[1660]	LOADK    	R8 := 10.000000
	25	[1660]	LOADK    	R9 := 0.000000
	26	[1660]	SETLIST  	R7 2 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 2
	27	[1660]	NEWTABLE 	R8 2 0 ; R8 := {}
	28	[1660]	LOADK    	R9 := 100.000000
	29	[1660]	GETUPVAL 	R10 U0 ; R10 := U0
	30	[1660]	GETTABLE 	R10 R10 K6 ; R10 := R10["newX"]
	31	[1660]	SETLIST  	R8 2 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 2
	32	[1660]	LOADK    	R9 := 0.250000
	33	[1660]	LOADK    	R10 := 0.000000
	34	[1660]	GETUPVAL 	R11 U1 ; R11 := U1
	35	[1660]	CALL     	R3 9 1 ; R3(R4,R5,R6,R7,R8,R9,R10,R11)
	36	[1661]	RETURN   	R0 1 ; return 

function #72 <?:1664,1673> (33 instructions, 132 bytes at 000002113006D460)
2 params, 9 slots, 1 upvalue, 0 locals, 12 constants, 0 functions
	1	[1665]	EQ       	0 R1 K0 ; if R1 ~= nil then PC := 5
	2	[1665]	JMP      	5 ; PC := 5
	3	[1666]	OP_LOADBOOL	R2 0 0 ; R2 := false
	4	[1666]	RETURN   	R2 2 ; return R2 
	5	[1668]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	6	[1668]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0x42b04007]
	7	[1668]	MOVE     	R4 R0 ; R4 := R0
	8	[1668]	OP_LOADBOOL	R5 0 0 ; R5 := false
	9	[1668]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	10	[1669]	GETGLOBAL	R3 K1 ; R3 := 0xae91e43b
	11	[1669]	SELF     	R3 R3 K2 ; R4 := R3; R3 := R3[0x42b04007]
	12	[1669]	LOADK    	R5 K3 ; R5 := "/Lotus/Language/Game/AbilitySelected"
	13	[1669]	OP_LOADBOOL	R6 0 0 ; R6 := false
	14	[1669]	NEWTABLE 	R7 0 1 ; R7 := {}
	15	[1669]	SETTABLE 	R7 K4 R2 ; R7["ABILITY_NAME"] := R2
	16	[1669]	CALL     	R3 5 2 ; R3 := R3(R4,R5,R6,R7)
	17	[1670]	GETUPVAL 	R4 U0 ; R4 := U0
	18	[1670]	LOADK    	R5 K5 ; R5 := 16777215.000000
	19	[1670]	LOADK    	R6 K5 ; R6 := 16777215.000000
	20	[1670]	MOVE     	R7 R3 ; R7 := R3
	21	[1670]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	22	[1671]	GETGLOBAL	R4 K6 ; R4 := 0x38f10e85
	23	[1671]	GETGLOBAL	R5 K1 ; R5 := 0xae91e43b
	24	[1671]	GETGLOBAL	R6 K7 ; R6 := 0x7f5022cf
	25	[1671]	GETTABLE 	R6 R6 K8 ; R6 := R6[0xe8072ded]
	26	[1671]	LOADK    	R7 K9 ; R7 := "AbilityPanel.Power%i.Icon.gotoAndPlay"
	27	[1671]	ADD      	R8 R1 K10 ; R8 := R1 + 1.000000
	28	[1671]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	29	[1671]	LOADK    	R7 K11 ; R7 := "Play"
	30	[1671]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	31	[1672]	OP_LOADBOOL	R4 1 0 ; R4 := true
	32	[1672]	RETURN   	R4 2 ; return R4 
	33	[1673]	RETURN   	R0 1 ; return 

function #73 <?:1675,1677> (9 instructions, 36 bytes at 0000021133D78EF0)
0 params, 5 slots, 2 upvalues, 0 locals, 3 constants, 0 functions
	1	[1676]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1676]	GETUPVAL 	R1 U1 ; R1 := U1
	3	[1676]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xbd2e96ea]
	4	[1676]	LOADK    	R3 := 0.250000
	5	[1676]	GETUPVAL 	R4 U0 ; R4 := U0
	6	[1676]	GETTABLE 	R4 R4 K2 ; R4 := R4["Hide"]
	7	[1676]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	8	[1676]	SETTABLE 	R0 K0 R1 ; R0["timerId"] := R1
	9	[1677]	RETURN   	R0 1 ; return 

function #74 <?:1680,1705> (75 instructions, 300 bytes at 0000021122451B20)
2 params, 12 slots, 7 upvalues, 0 locals, 27 constants, 0 functions
	1	[1681]	EQ       	0 R1 K0 ; if R1 ~= nil then PC := 5
	2	[1681]	JMP      	5 ; PC := 5
	3	[1682]	OP_LOADBOOL	R2 0 0 ; R2 := false
	4	[1682]	RETURN   	R2 2 ; return R2 
	5	[1684]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	6	[1684]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0x42b04007]
	7	[1684]	MOVE     	R4 R0 ; R4 := R0
	8	[1684]	OP_LOADBOOL	R5 0 0 ; R5 := false
	9	[1684]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	10	[1685]	GETUPVAL 	R3 U0 ; R3 := U0
	11	[1685]	LOADK    	R4 K3 ; R4 := 16777215.000000
	12	[1685]	LOADK    	R5 K4 ; R5 := 366327.000000
	13	[1685]	MOVE     	R6 R2 ; R6 := R2
	14	[1685]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	15	[1686]	GETGLOBAL	R3 K5 ; R3 := 0x38f10e85
	16	[1686]	GETGLOBAL	R4 K1 ; R4 := 0xae91e43b
	17	[1686]	GETGLOBAL	R5 K6 ; R5 := 0x7f5022cf
	18	[1686]	GETTABLE 	R5 R5 K7 ; R5 := R5[0xe8072ded]
	19	[1686]	LOADK    	R6 K8 ; R6 := "AbilityPanel.Power%i.Icon.gotoAndPlay"
	20	[1686]	ADD      	R7 R1 K9 ; R7 := R1 + 1.000000
	21	[1686]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	22	[1686]	LOADK    	R6 K10 ; R6 := "Play"
	23	[1686]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	24	[1688]	GETGLOBAL	R3 K11 ; R3 := 0xe72d2edb
	25	[1688]	EQ       	0 R3 K13 ; if R3 ~= 3.000000 then PC := 53
	26	[1688]	JMP      	53 ; PC := 53
	27	[1690]	GETGLOBAL	R3 K14 ; R3 := 0x7b998233
	28	[1690]	GETGLOBAL	R4 K15 ; R4 := 0xcf7f594a
	29	[1690]	CALL     	R3 2 2 ; R3 := R3(R4)
	30	[1690]	TEST     	R3 1 ; if R3 then PC := 53
	31	[1690]	JMP      	53 ; PC := 53
	32	[1691]	GETUPVAL 	R3 U1 ; R3 := U1
	33	[1691]	GETTABLE 	R3 R3 K16 ; R3 := R3[0xb5be5d4a]
	34	[1691]	GETGLOBAL	R4 K1 ; R4 := 0xae91e43b
	35	[1691]	LOADK    	R5 K17 ; R5 := "StancePanel.StanceComponent.Stance"
	36	[1691]	ADD      	R6 R1 K9 ; R6 := R1 + 1.000000
	37	[1691]	LOADK    	R7 K18 ; R7 := ".Icon"
	38	[1691]	CONCAT   	R5 R5 R7 ; R5 := R5 .. R6 .. R7
	39	[1691]	OP_LOADBOOL	R6 0 0 ; R6 := false
	40	[1691]	CALL     	R3 4 3 ; R3,R4 := R3(R4,R5,R6)
	41	[1692]	GETUPVAL 	R5 U2 ; R5 := U2
	42	[1692]	ADD      	R6 R1 K9 ; R6 := R1 + 1.000000
	43	[1692]	GETUPVAL 	R7 U1 ; R7 := U1
	44	[1692]	GETTABLE 	R7 R7 K19 ; R7 := R7[0x5a22d251]
	45	[1692]	GETGLOBAL	R8 K1 ; R8 := 0xae91e43b
	46	[1692]	GETGLOBAL	R9 K15 ; R9 := 0xcf7f594a
	47	[1692]	MOVE     	R10 R3 ; R10 := R3
	48	[1692]	MOVE     	R11 R4 ; R11 := R4
	49	[1692]	CALL     	R7 5 2 ; R7 := R7(R8,R9,R10,R11)
	50	[1692]	SETTABLE 	R5 R6 R7 ; R5[R6] := R7
	51	[1693]	GETUPVAL 	R5 U3 ; R5 := U3
	52	[1693]	SETTABLE 	R5 K20 K21 ; R5["mAbilityFxPlayed"] := true
	53	[1697]	GETUPVAL 	R5 U4 ; R5 := U4
	54	[1697]	TEST     	R5 0 ; if not R5 then PC := 61
	55	[1697]	JMP      	61 ; PC := 61
	56	[1698]	GETUPVAL 	R5 U5 ; R5 := U5
	57	[1698]	GETTABLE 	R5 R5 K22 ; R5 := R5[0x587aa683]
	58	[1698]	MOVE     	R6 R2 ; R6 := R2
	59	[1698]	GETUPVAL 	R7 U6 ; R7 := U6
	60	[1698]	CALL     	R5 3 1 ; R5(R6,R7)
	61	[1700]	GETGLOBAL	R5 K14 ; R5 := 0x7b998233
	62	[1700]	GETGLOBAL	R6 K23 ; R6 := _T
	63	[1700]	GETTABLE 	R6 R6 K24 ; R6 := R6["RailjackHud_Movie"]
	64	[1700]	CALL     	R5 2 2 ; R5 := R5(R6)
	65	[1700]	TEST     	R5 1 ; if R5 then PC := 73
	66	[1700]	JMP      	73 ; PC := 73
	67	[1701]	GETGLOBAL	R5 K23 ; R5 := _T
	68	[1701]	GETTABLE 	R5 R5 K24 ; R5 := R5["RailjackHud_Movie"]
	69	[1701]	SELF     	R5 R5 K25 ; R6 := R5; R5 := R5[0xe4162eed]
	70	[1701]	LOADK    	R7 K26 ; R7 := "NotifyAbilityActivate"
	71	[1701]	MOVE     	R8 R1 ; R8 := R1
	72	[1701]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	73	[1704]	OP_LOADBOOL	R5 1 0 ; R5 := true
	74	[1704]	RETURN   	R5 2 ; return R5 
	75	[1705]	RETURN   	R0 1 ; return 

function #75 <?:1708,1726> (48 instructions, 192 bytes at 0000021137ABF660)
1 param, 6 slots, 3 upvalues, 0 locals, 12 constants, 0 functions
	1	[1709]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[1709]	GETTABLE 	R1 R1 K1 ; R1 := R1["SecretMiniGameActive"]
	3	[1709]	TEST     	R1 1 ; if R1 then PC := 46
	4	[1709]	JMP      	46 ; PC := 46
	5	[1710]	MOVE     	R1 R0 ; R1 := R0
	6	[1711]	GETUPVAL 	R2 U0 ; R2 := U0
	7	[1711]	LOADK    	R3 K2 ; R3 := 16777215.000000
	8	[1711]	LOADK    	R4 := 16711680.000000
	9	[1711]	MOVE     	R5 R1 ; R5 := R1
	10	[1711]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	11	[1713]	GETUPVAL 	R2 U1 ; R2 := U1
	12	[1713]	TEST     	R2 0 ; if not R2 then PC := 19
	13	[1713]	JMP      	19 ; PC := 19
	14	[1714]	GETUPVAL 	R2 U1 ; R2 := U1
	15	[1714]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0xc9dd135d]
	16	[1714]	LOADK    	R4 K4 ; R4 := "NotifyAbilityActivateError"
	17	[1714]	MOVE     	R5 R0 ; R5 := R0
	18	[1714]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	19	[1716]	GETGLOBAL	R2 K5 ; R2 := 0x7b998233
	20	[1716]	GETGLOBAL	R3 K0 ; R3 := _T
	21	[1716]	GETTABLE 	R3 R3 K6 ; R3 := R3["RailjackHud_Movie"]
	22	[1716]	CALL     	R2 2 2 ; R2 := R2(R3)
	23	[1716]	TEST     	R2 1 ; if R2 then PC := 41
	24	[1716]	JMP      	41 ; PC := 41
	25	[1717]	GETGLOBAL	R2 K0 ; R2 := _T
	26	[1717]	GETTABLE 	R2 R2 K6 ; R2 := R2["RailjackHud_Movie"]
	27	[1717]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0xe4162eed]
	28	[1717]	LOADK    	R4 K4 ; R4 := "NotifyAbilityActivateError"
	29	[1717]	MOVE     	R5 R0 ; R5 := R0
	30	[1717]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	31	[1718]	GETGLOBAL	R2 K5 ; R2 := 0x7b998233
	32	[1718]	GETGLOBAL	R3 K8 ; R3 := 0x674a7881
	33	[1718]	CALL     	R2 2 2 ; R2 := R2(R3)
	34	[1718]	TEST     	R2 1 ; if R2 then PC := 46
	35	[1718]	JMP      	46 ; PC := 46
	36	[1719]	GETUPVAL 	R2 U2 ; R2 := U2
	37	[1719]	GETTABLE 	R2 R2 K9 ; R2 := R2[0x659d451f]
	38	[1719]	GETGLOBAL	R3 K8 ; R3 := 0x674a7881
	39	[1719]	CALL     	R2 2 1 ; R2(R3)
	40	[1720]	JMP      	46 ; PC := 46
	41	[1722]	GETUPVAL 	R2 U2 ; R2 := U2
	42	[1722]	GETTABLE 	R2 R2 K9 ; R2 := R2[0x659d451f]
	43	[1722]	GETGLOBAL	R3 K10 ; R3 := 0x0032441c
	44	[1722]	GETTABLE 	R3 R3 K11 ; R3 := R3["UISound_Error"]
	45	[1722]	CALL     	R2 2 1 ; R2(R3)
	46	[1725]	OP_LOADBOOL	R2 1 0 ; R2 := true
	47	[1725]	RETURN   	R2 2 ; return R2 
	48	[1726]	RETURN   	R0 1 ; return 

function #76 <?:1728,1740> (34 instructions, 136 bytes at 000002112CC8A9E0)
1 param, 9 slots, 3 upvalues, 0 locals, 12 constants, 0 functions
	1	[1729]	GETGLOBAL	R1 K0 ; R1 := 0xe72d2edb
	2	[1729]	EQ       	0 R1 K2 ; if R1 ~= 3.000000 then PC := 34
	3	[1729]	JMP      	34 ; PC := 34
	4	[1731]	GETGLOBAL	R1 K3 ; R1 := 0x7b998233
	5	[1731]	GETGLOBAL	R2 K4 ; R2 := 0xcf7f594a
	6	[1731]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[1731]	TEST     	R1 1 ; if R1 then PC := 34
	8	[1731]	JMP      	34 ; PC := 34
	9	[1732]	GETUPVAL 	R1 U0 ; R1 := U0
	10	[1732]	GETTABLE 	R1 R1 K5 ; R1 := R1["mAbilityFxPlayed"]
	11	[1732]	TEST     	R1 0 ; if not R1 then PC := 16
	12	[1732]	JMP      	16 ; PC := 16
	13	[1733]	GETUPVAL 	R1 U0 ; R1 := U0
	14	[1733]	SETTABLE 	R1 K5 K6 ; R1["mAbilityFxPlayed"] := false
	15	[1733]	JMP      	34 ; PC := 34
	16	[1735]	GETUPVAL 	R1 U1 ; R1 := U1
	17	[1735]	GETTABLE 	R1 R1 K7 ; R1 := R1[0xb5be5d4a]
	18	[1735]	GETGLOBAL	R2 K8 ; R2 := 0xae91e43b
	19	[1735]	LOADK    	R3 K9 ; R3 := "StancePanel.StanceComponent.Stance"
	20	[1735]	MOVE     	R4 R0 ; R4 := R0
	21	[1735]	LOADK    	R5 K10 ; R5 := ".Icon"
	22	[1735]	CONCAT   	R3 R3 R5 ; R3 := R3 .. R4 .. R5
	23	[1735]	OP_LOADBOOL	R4 0 0 ; R4 := false
	24	[1735]	CALL     	R1 4 3 ; R1,R2 := R1(R2,R3,R4)
	25	[1736]	GETUPVAL 	R3 U2 ; R3 := U2
	26	[1736]	GETUPVAL 	R4 U1 ; R4 := U1
	27	[1736]	GETTABLE 	R4 R4 K11 ; R4 := R4[0x5a22d251]
	28	[1736]	GETGLOBAL	R5 K8 ; R5 := 0xae91e43b
	29	[1736]	GETGLOBAL	R6 K4 ; R6 := 0xcf7f594a
	30	[1736]	MOVE     	R7 R1 ; R7 := R1
	31	[1736]	MOVE     	R8 R2 ; R8 := R2
	32	[1736]	CALL     	R4 5 2 ; R4 := R4(R5,R6,R7,R8)
	33	[1736]	SETTABLE 	R3 R0 R4 ; R3[R0] := R4
	34	[1740]	RETURN   	R0 1 ; return 

function #77 <?:1742,1757> (45 instructions, 180 bytes at 0000021137BE4C40)
1 param, 10 slots, 1 upvalue, 0 locals, 9 constants, 1 function
	1	[1743]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1743]	GETTABLE 	R1 R1 K0 ; R1 := R1["IsAlternateHud"]
	3	[1743]	TEST     	R1 0 ; if not R1 then PC := 6
	4	[1743]	JMP      	6 ; PC := 6
	5	[1744]	RETURN   	R0 1 ; return 
	6	[1746]	TEST     	R0 0 ; if not R0 then PC := 31
	7	[1746]	JMP      	31 ; PC := 31
	8	[1747]	GETGLOBAL	R1 K1 ; R1 := _T
	9	[1747]	GETTABLE 	R1 R1 K2 ; R1 := R1["BlockWeaponPanelVisibility"]
	10	[1747]	TEST     	R1 1 ; if R1 then PC := 45
	11	[1747]	JMP      	45 ; PC := 45
	12	[1748]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	13	[1748]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xaade900e]
	14	[1748]	LOADK    	R3 K5 ; R3 := "WeaponFrame"
	15	[1748]	LOADK    	R4 := 11.000000
	16	[1748]	OP_LOADBOOL	R5 1 0 ; R5 := true
	17	[1748]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	18	[1749]	GETGLOBAL	R1 K6 ; R1 := 0x25312c9b
	19	[1749]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	20	[1749]	LOADK    	R3 K5 ; R3 := "WeaponFrame"
	21	[1749]	LOADK    	R4 := 0.000000
	22	[1749]	NEWTABLE 	R5 1 0 ; R5 := {}
	23	[1749]	LOADK    	R6 := 10.000000
	24	[1749]	SETLIST  	R5 1 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
	25	[1749]	NEWTABLE 	R6 1 0 ; R6 := {}
	26	[1749]	LOADK    	R7 := 100.000000
	27	[1749]	SETLIST  	R6 1 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
	28	[1749]	LOADK    	R7 K8 ; R7 := 0.150000
	29	[1749]	CALL     	R1 7 1 ; R1(R2,R3,R4,R5,R6,R7)
	30	[1750]	JMP      	45 ; PC := 45
	31	[1752]	GETGLOBAL	R1 K6 ; R1 := 0x25312c9b
	32	[1752]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	33	[1752]	LOADK    	R3 K5 ; R3 := "WeaponFrame"
	34	[1752]	LOADK    	R4 := 0.000000
	35	[1752]	NEWTABLE 	R5 1 0 ; R5 := {}
	36	[1752]	LOADK    	R6 := 10.000000
	37	[1752]	SETLIST  	R5 1 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
	38	[1752]	NEWTABLE 	R6 1 0 ; R6 := {}
	39	[1752]	LOADK    	R7 := 0.000000
	40	[1752]	SETLIST  	R6 1 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
	41	[1752]	LOADK    	R7 K8 ; R7 := 0.150000
	42	[1752]	LOADK    	R8 := 0.000000
	43	[1755]	CLOSURE  	R9 0 ; R9 := closure(Function #1)
	44	[1752]	CALL     	R1 9 1 ; R1(R2,R3,R4,R5,R6,R7,R8,R9)
	45	[1757]	RETURN   	R0 1 ; return 

function #78 <?:1759,1774> (70 instructions, 280 bytes at 00000211237AD300)
1 param, 22 slots, 2 upvalues, 0 locals, 15 constants, 0 functions
	1	[1760]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1760]	GETTABLE 	R1 R1 K0 ; R1 := R1["IsAlternateHud"]
	3	[1760]	TEST     	R1 0 ; if not R1 then PC := 6
	4	[1760]	JMP      	6 ; PC := 6
	5	[1761]	RETURN   	R0 1 ; return 
	6	[1763]	NEWTABLE 	R1 2 0 ; R1 := {}
	7	[1763]	LOADK    	R2 K1 ; R2 := ".EnergyBar"
	8	[1763]	LOADK    	R3 K2 ; R3 := ".EnergyAmount"
	9	[1763]	SETLIST  	R1 2 1 ; R1[(1-1)*FPF+i] := R(1+i), 1 <= i <= 2
	10	[1764]	NEWTABLE 	R2 4 0 ; R2 := {}
	11	[1764]	LOADK    	R3 K3 ; R3 := ".Ability1"
	12	[1764]	LOADK    	R4 K4 ; R4 := ".Ability2"
	13	[1764]	LOADK    	R5 K5 ; R5 := ".Ability3"
	14	[1764]	LOADK    	R6 K6 ; R6 := ".Ability4"
	15	[1764]	SETLIST  	R2 4 1 ; R2[(1-1)*FPF+i] := R(2+i), 1 <= i <= 4
	16	[1765]	GETUPVAL 	R3 U0 ; R3 := U0
	17	[1765]	SETTABLE 	R3 K7 R0 ; R3["mEnergyVisible"] := R0
	18	[1766]	GETUPVAL 	R3 U1 ; R3 := U1
	19	[1766]	GETTABLE 	R3 R3 K8 ; R3 := R3[0x06d055f9]
	20	[1766]	MOVE     	R4 R0 ; R4 := R0
	21	[1766]	LOADK    	R5 := 100.000000
	22	[1766]	LOADK    	R6 := 0.000000
	23	[1766]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	24	[1767]	GETUPVAL 	R4 U1 ; R4 := U1
	25	[1767]	GETTABLE 	R4 R4 K8 ; R4 := R4[0x06d055f9]
	26	[1767]	MOVE     	R5 R0 ; R5 := R0
	27	[1767]	LOADK    	R6 := 18.000000
	28	[1767]	LOADK    	R7 := 32.000000
	29	[1767]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	30	[1768]	GETGLOBAL	R5 K9 ; R5 := 0xc8802016
	31	[1768]	MOVE     	R6 R1 ; R6 := R1
	32	[1768]	CALL     	R5 2 4 ; R5,R6,R7 := R5(R6)
	33	[1768]	JMP      	48 ; PC := 48
	34	[1769]	GETGLOBAL	R10 K10 ; R10 := 0x25312c9b
	35	[1769]	GETGLOBAL	R11 K11 ; R11 := 0xae91e43b
	36	[1769]	LOADK    	R12 K12 ; R12 := "AbilityPanel"
	37	[1769]	MOVE     	R13 R9 ; R13 := R9
	38	[1769]	CONCAT   	R12 R12 R13 ; R12 := R12 .. R13
	39	[1769]	LOADK    	R13 := 0.000000
	40	[1769]	NEWTABLE 	R14 1 0 ; R14 := {}
	41	[1769]	LOADK    	R15 := 10.000000
	42	[1769]	SETLIST  	R14 1 1 ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 1
	43	[1769]	NEWTABLE 	R15 1 0 ; R15 := {}
	44	[1769]	MOVE     	R16 R3 ; R16 := R3
	45	[1769]	SETLIST  	R15 1 1 ; R15[(1-1)*FPF+i] := R(15+i), 1 <= i <= 1
	46	[1769]	LOADK    	R16 K14 ; R16 := 0.150000
	47	[1769]	CALL     	R10 7 1 ; R10(R11,R12,R13,R14,R15,R16)
	48	[1768]	TFORLOOP 	R5 2 ; R8,R9 := R5(R6,R7); if R8 ~= nil then begin PC = 34; R7 := R8 end
	49	[1769]	JMP      	34 ; PC := 34
	50	[1771]	GETGLOBAL	R10 K9 ; R10 := 0xc8802016
	51	[1771]	MOVE     	R11 R2 ; R11 := R2
	52	[1771]	CALL     	R10 2 4 ; R10,R11,R12 := R10(R11)
	53	[1771]	JMP      	68 ; PC := 68
	54	[1772]	GETGLOBAL	R15 K10 ; R15 := 0x25312c9b
	55	[1772]	GETGLOBAL	R16 K11 ; R16 := 0xae91e43b
	56	[1772]	LOADK    	R17 K12 ; R17 := "AbilityPanel"
	57	[1772]	MOVE     	R18 R14 ; R18 := R14
	58	[1772]	CONCAT   	R17 R17 R18 ; R17 := R17 .. R18
	59	[1772]	LOADK    	R18 := 0.000000
	60	[1772]	NEWTABLE 	R19 1 0 ; R19 := {}
	61	[1772]	LOADK    	R20 := 1.000000
	62	[1772]	SETLIST  	R19 1 1 ; R19[(1-1)*FPF+i] := R(19+i), 1 <= i <= 1
	63	[1772]	NEWTABLE 	R20 1 0 ; R20 := {}
	64	[1772]	MOVE     	R21 R4 ; R21 := R4
	65	[1772]	SETLIST  	R20 1 1 ; R20[(1-1)*FPF+i] := R(20+i), 1 <= i <= 1
	66	[1772]	LOADK    	R21 K14 ; R21 := 0.150000
	67	[1772]	CALL     	R15 7 1 ; R15(R16,R17,R18,R19,R20,R21)
	68	[1771]	TFORLOOP 	R10 2 ; R13,R14 := R10(R11,R12); if R13 ~= nil then begin PC = 54; R12 := R13 end
	69	[1772]	JMP      	54 ; PC := 54
	70	[1774]	RETURN   	R0 1 ; return 

function #79 <?:1776,1800> (64 instructions, 256 bytes at 00000211237AD390)
3 params, 12 slots, 2 upvalues, 0 locals, 12 constants, 1 function
	1	[1777]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[1777]	GETTABLE 	R3 R3 K0 ; R3 := R3["IsAlternateHud"]
	3	[1777]	TEST     	R3 0 ; if not R3 then PC := 6
	4	[1777]	JMP      	6 ; PC := 6
	5	[1778]	RETURN   	R0 1 ; return 
	6	[1781]	EQ       	0 R1 K1 ; if R1 ~= nil then PC := 9
	7	[1781]	JMP      	9 ; PC := 9
	8	[1782]	MOVE     	R1 R0 ; R1 := R0
	9	[1785]	TEST     	R0 0 ; if not R0 then PC := 40
	10	[1785]	JMP      	40 ; PC := 40
	11	[1785]	TEST     	R2 0 ; if not R2 then PC := 17
	12	[1785]	JMP      	17 ; PC := 17
	13	[1785]	GETGLOBAL	R3 K2 ; R3 := _T
	14	[1785]	GETTABLE 	R3 R3 K3 ; R3 := R3["MinimalHud"]
	15	[1785]	TEST     	R3 1 ; if R3 then PC := 40
	16	[1785]	JMP      	40 ; PC := 40
	17	[1786]	GETGLOBAL	R3 K2 ; R3 := _T
	18	[1786]	GETTABLE 	R3 R3 K4 ; R3 := R3["BlockAbilityPanelVisibility"]
	19	[1786]	TEST     	R3 1 ; if R3 then PC := 54
	20	[1786]	JMP      	54 ; PC := 54
	21	[1787]	GETGLOBAL	R3 K5 ; R3 := 0xae91e43b
	22	[1787]	SELF     	R3 R3 K6 ; R4 := R3; R3 := R3[0xaade900e]
	23	[1787]	LOADK    	R5 K7 ; R5 := "AbilityPanel"
	24	[1787]	LOADK    	R6 := 11.000000
	25	[1787]	OP_LOADBOOL	R7 1 0 ; R7 := true
	26	[1787]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	27	[1788]	GETGLOBAL	R3 K8 ; R3 := 0x25312c9b
	28	[1788]	GETGLOBAL	R4 K5 ; R4 := 0xae91e43b
	29	[1788]	LOADK    	R5 K7 ; R5 := "AbilityPanel"
	30	[1788]	LOADK    	R6 := 0.000000
	31	[1788]	NEWTABLE 	R7 1 0 ; R7 := {}
	32	[1788]	LOADK    	R8 := 10.000000
	33	[1788]	SETLIST  	R7 1 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
	34	[1788]	NEWTABLE 	R8 1 0 ; R8 := {}
	35	[1788]	LOADK    	R9 := 100.000000
	36	[1788]	SETLIST  	R8 1 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
	37	[1788]	LOADK    	R9 K10 ; R9 := 0.150000
	38	[1788]	CALL     	R3 7 1 ; R3(R4,R5,R6,R7,R8,R9)
	39	[1789]	JMP      	54 ; PC := 54
	40	[1791]	GETGLOBAL	R3 K8 ; R3 := 0x25312c9b
	41	[1791]	GETGLOBAL	R4 K5 ; R4 := 0xae91e43b
	42	[1791]	LOADK    	R5 K7 ; R5 := "AbilityPanel"
	43	[1791]	LOADK    	R6 := 0.000000
	44	[1791]	NEWTABLE 	R7 1 0 ; R7 := {}
	45	[1791]	LOADK    	R8 := 10.000000
	46	[1791]	SETLIST  	R7 1 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
	47	[1791]	NEWTABLE 	R8 1 0 ; R8 := {}
	48	[1791]	LOADK    	R9 := 0.000000
	49	[1791]	SETLIST  	R8 1 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
	50	[1791]	LOADK    	R9 K10 ; R9 := 0.150000
	51	[1791]	LOADK    	R10 := 0.000000
	52	[1794]	CLOSURE  	R11 0 ; R11 := closure(Function #1)
	53	[1791]	CALL     	R3 9 1 ; R3(R4,R5,R6,R7,R8,R9,R10,R11)
	54	[1797]	TEST     	R0 0 ; if not R0 then PC := 60
	55	[1797]	JMP      	60 ; PC := 60
	56	[1797]	GETGLOBAL	R3 K2 ; R3 := _T
	57	[1797]	GETTABLE 	R3 R3 K4 ; R3 := R3["BlockAbilityPanelVisibility"]
	58	[1797]	TEST     	R3 1 ; if R3 then PC := 64
	59	[1797]	JMP      	64 ; PC := 64
	60	[1798]	GETUPVAL 	R3 U1 ; R3 := U1
	61	[1798]	SELF     	R3 R3 K11 ; R4 := R3; R3 := R3[0x7727930f]
	62	[1798]	MOVE     	R5 R1 ; R5 := R1
	63	[1798]	CALL     	R3 3 1 ; R3(R4,R5)
	64	[1800]	RETURN   	R0 1 ; return 

function #80 <?:1803,1814> (55 instructions, 220 bytes at 000002112A46A0F0)
0 params, 6 slots, 2 upvalues, 0 locals, 14 constants, 0 functions
	1	[1804]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[1804]	GETGLOBAL	R1 K1 ; R1 := _T
	3	[1804]	GETTABLE 	R1 R1 K2 ; R1 := R1["Touch_GetTopMenuOffset"]
	4	[1804]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[1804]	TEST     	R0 1 ; if R0 then PC := 12
	6	[1804]	JMP      	12 ; PC := 12
	7	[1804]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	8	[1804]	GETUPVAL 	R1 U0 ; R1 := U0
	9	[1804]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[1804]	TEST     	R0 0 ; if not R0 then PC := 13
	11	[1804]	JMP      	13 ; PC := 13
	12	[1805]	RETURN   	R0 1 ; return 
	13	[1807]	GETUPVAL 	R0 U0 ; R0 := U0
	14	[1807]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x4bc5dc8b]
	15	[1807]	LOADK    	R2 K4 ; R2 := "HudTracker"
	16	[1807]	LOADK    	R3 := 40.000000
	17	[1807]	LOADK    	R4 := 235.000000
	18	[1807]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	19	[1808]	GETUPVAL 	R0 U0 ; R0 := U0
	20	[1808]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x4bc5dc8b]
	21	[1808]	LOADK    	R2 K5 ; R2 := "MiniMapContainer"
	22	[1808]	LOADK    	R3 := 40.000000
	23	[1808]	LOADK    	R4 := 65.000000
	24	[1808]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	25	[1809]	GETUPVAL 	R0 U0 ; R0 := U0
	26	[1809]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x4bc5dc8b]
	27	[1809]	LOADK    	R2 K6 ; R2 := "WeaponFrame"
	28	[1809]	LOADNIL  	R3 R3 ; R3 := nil
	29	[1809]	LOADK    	R4 := 600.000000
	30	[1809]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	31	[1810]	GETUPVAL 	R0 U0 ; R0 := U0
	32	[1810]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x4bc5dc8b]
	33	[1810]	LOADK    	R2 K7 ; R2 := "HealthAndShield"
	34	[1810]	LOADK    	R3 := 1240.000000
	35	[1810]	LOADNIL  	R4 R4 ; R4 := nil
	36	[1810]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	37	[1811]	GETUPVAL 	R0 U0 ; R0 := U0
	38	[1811]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x4bc5dc8b]
	39	[1811]	LOADK    	R2 K8 ; R2 := "AbilityPanel"
	40	[1811]	LOADK    	R3 := 1200.000000
	41	[1811]	LOADNIL  	R4 R4 ; R4 := nil
	42	[1811]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	43	[1813]	GETUPVAL 	R0 U0 ; R0 := U0
	44	[1813]	SELF     	R0 R0 K9 ; R1 := R0; R0 := R0[0xfaa69527]
	45	[1813]	GETGLOBAL	R2 K10 ; R2 := 0xae91e43b
	46	[1813]	SELF     	R2 R2 K11 ; R3 := R2; R2 := R2[0x6b837788]
	47	[1813]	CALL     	R2 2 2 ; R2 := R2(R3)
	48	[1813]	GETGLOBAL	R3 K10 ; R3 := 0xae91e43b
	49	[1813]	SELF     	R3 R3 K12 ; R4 := R3; R3 := R3[0xaf9fda9f]
	50	[1813]	CALL     	R3 2 2 ; R3 := R3(R4)
	51	[1813]	OP_LOADBOOL	R4 1 0 ; R4 := true
	52	[1813]	GETUPVAL 	R5 U1 ; R5 := U1
	53	[1813]	GETTABLE 	R5 R5 K13 ; R5 := R5["HudScalePadding"]
	54	[1813]	CALL     	R0 6 1 ; R0(R1,R2,R3,R4,R5)
	55	[1814]	RETURN   	R0 1 ; return 

function #81 <?:1816,1872> (164 instructions, 656 bytes at 000002112A46A270)
3 params, 23 slots, 7 upvalues, 0 locals, 30 constants, 0 functions
	1	[1817]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	2	[1817]	GETUPVAL 	R4 U0 ; R4 := U0
	3	[1817]	CALL     	R3 2 2 ; R3 := R3(R4)
	4	[1817]	TEST     	R3 1 ; if R3 then PC := 162
	5	[1817]	JMP      	162 ; PC := 162
	6	[1818]	EQ       	1 R0 K1 ; if R0 == "true" then PC := 9
	7	[1818]	JMP      	9 ; PC := 9
	8	[1818]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 9
	9	[1818]	OP_LOADBOOL	R0 1 0 ; R0 := true
	10	[1819]	EQ       	1 R1 K1 ; if R1 == "true" then PC := 13
	11	[1819]	JMP      	13 ; PC := 13
	12	[1819]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 13
	13	[1819]	OP_LOADBOOL	R1 1 0 ; R1 := true
	14	[1820]	EQ       	1 R2 K1 ; if R2 == "true" then PC := 17
	15	[1820]	JMP      	17 ; PC := 17
	16	[1820]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 17
	17	[1820]	OP_LOADBOOL	R2 1 0 ; R2 := true
	18	[1821]	LOADNIL  	R3 R3 ; R3 := nil
	19	[1822]	LOADK    	R4 := 1.000000
	20	[1822]	GETUPVAL 	R5 U0 ; R5 := U0
	21	[1822]	GETTABLE 	R5 R5 K2 ; R5 := R5["list"]
	22	[1822]	LEN      	R5 R5 ; R5 := # R5
	23	[1822]	LOADK    	R6 := 1.000000
	24	[1822]	FORPREP  	R4 53 ; R4 -= R6; PC := 53
	25	[1823]	GETUPVAL 	R8 U0 ; R8 := U0
	26	[1823]	GETTABLE 	R8 R8 K2 ; R8 := R8["list"]
	27	[1823]	GETTABLE 	R3 R8 R7 ; R3 := R8[R7]
	28	[1824]	GETTABLE 	R8 R3 K3 ; R8 := R3["clip"]
	29	[1824]	EQ       	0 R8 K4 ; if R8 ~= "AbilityPanel" then PC := 53
	30	[1824]	JMP      	53 ; PC := 53
	31	[1825]	TEST     	R0 1 ; if R0 then PC := 37
	32	[1825]	JMP      	37 ; PC := 37
	33	[1825]	GETUPVAL 	R8 U1 ; R8 := U1
	34	[1825]	GETTABLE 	R8 R8 K5 ; R8 := R8["OriginalX"]
	35	[1825]	EQ       	0 R8 K6 ; if R8 ~= nil then PC := 40
	36	[1825]	JMP      	40 ; PC := 40
	37	[1826]	GETUPVAL 	R8 U1 ; R8 := U1
	38	[1826]	GETTABLE 	R9 R3 K7 ; R9 := R3["originalX"]
	39	[1826]	SETTABLE 	R8 K5 R9 ; R8["OriginalX"] := R9
	40	[1828]	GETUPVAL 	R8 U1 ; R8 := U1
	41	[1828]	GETTABLE 	R8 R8 K5 ; R8 := R8["OriginalX"]
	42	[1828]	GETUPVAL 	R9 U2 ; R9 := U2
	43	[1828]	GETTABLE 	R9 R9 K8 ; R9 := R9[0x06d055f9]
	44	[1828]	TESTSET  	R10 R1 1 ; if R1 then PC := 47 else R10 := R1 
	45	[1828]	JMP      	47 ; PC := 47
	46	[1828]	MOVE     	R10 R2 ; R10 := R2
	47	[1828]	LOADK    	R11 := -65.000000
	48	[1828]	LOADK    	R12 := 0.000000
	49	[1828]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	50	[1828]	ADD      	R8 R8 R9 ; R8 := R8 + R9
	51	[1828]	SETTABLE 	R3 K7 R8 ; R3["originalX"] := R8
	52	[1829]	JMP      	54 ; PC := 54
	53	[1822]	FORLOOP  	R4 25 ; R4 += R6; if R4 <= R5 then begin PC := 25; R7 := R4 end
	54	[1833]	TEST     	R0 0 ; if not R0 then PC := 60
	55	[1833]	JMP      	60 ; PC := 60
	56	[1833]	TEST     	R1 1 ; if R1 then PC := 60
	57	[1833]	JMP      	60 ; PC := 60
	58	[1833]	TEST     	R2 0 ; if not R2 then PC := 160
	59	[1833]	JMP      	160 ; PC := 160
	60	[1834]	GETGLOBAL	R8 K0 ; R8 := 0x7b998233
	61	[1834]	GETUPVAL 	R9 U3 ; R9 := U3
	62	[1834]	CALL     	R8 2 2 ; R8 := R8(R9)
	63	[1834]	TEST     	R8 0 ; if not R8 then PC := 86
	64	[1834]	JMP      	86 ; PC := 86
	65	[1835]	GETGLOBAL	R8 K9 ; R8 := 0xae91e43b
	66	[1835]	SELF     	R8 R8 K10 ; R9 := R8; R8 := R8[0xcd73323e]
	67	[1835]	CALL     	R8 2 2 ; R8 := R8(R9)
	68	[1836]	GETGLOBAL	R9 K0 ; R9 := 0x7b998233
	69	[1836]	MOVE     	R10 R8 ; R10 := R8
	70	[1836]	CALL     	R9 2 2 ; R9 := R9(R10)
	71	[1836]	TEST     	R9 0 ; if not R9 then PC := 75
	72	[1836]	JMP      	75 ; PC := 75
	73	[1837]	OP_LOADBOOL	R9 0 0 ; R9 := false
	74	[1837]	RETURN   	R9 2 ; return R9 
	75	[1839]	SELF     	R9 R8 K11 ; R10 := R8; R9 := R8[0x6d7bfacb]
	76	[1839]	OP_LOADBOOL	R11 0 0 ; R11 := false
	77	[1839]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	78	[1839]	SETUPVAL 	R9 U3 ; U3 := R9
	79	[1840]	GETGLOBAL	R9 K0 ; R9 := 0x7b998233
	80	[1840]	GETUPVAL 	R10 U3 ; R10 := U3
	81	[1840]	CALL     	R9 2 2 ; R9 := R9(R10)
	82	[1840]	TEST     	R9 0 ; if not R9 then PC := 86
	83	[1840]	JMP      	86 ; PC := 86
	84	[1841]	OP_LOADBOOL	R9 0 0 ; R9 := false
	85	[1841]	RETURN   	R9 2 ; return R9 
	86	[1845]	GETGLOBAL	R9 K9 ; R9 := 0xae91e43b
	87	[1845]	SELF     	R9 R9 K12 ; R10 := R9; R9 := R9[0x6b837788]
	88	[1845]	CALL     	R9 2 2 ; R9 := R9(R10)
	89	[1846]	GETGLOBAL	R10 K9 ; R10 := 0xae91e43b
	90	[1846]	SELF     	R10 R10 K13 ; R11 := R10; R10 := R10[0xaf9fda9f]
	91	[1846]	CALL     	R10 2 2 ; R10 := R10(R11)
	92	[1847]	GETGLOBAL	R11 K9 ; R11 := 0xae91e43b
	93	[1847]	SELF     	R11 R11 K14 ; R12 := R11; R11 := R11[0x091c120e]
	94	[1847]	CALL     	R11 2 2 ; R11 := R11(R12)
	95	[1847]	LT       	1 R9 R11 ; if R9 < R11 then PC := 102
	96	[1847]	JMP      	102 ; PC := 102
	97	[1847]	GETGLOBAL	R11 K9 ; R11 := 0xae91e43b
	98	[1847]	SELF     	R11 R11 K15 ; R12 := R11; R11 := R11[0x2cc9d281]
	99	[1847]	CALL     	R11 2 2 ; R11 := R11(R12)
	100	[1847]	LT       	0 R10 R11 ; if R10 >= R11 then PC := 115
	101	[1847]	JMP      	115 ; PC := 115
	102	[1847]	GETGLOBAL	R11 K16 ; R11 := 0x34291f5c
	103	[1847]	GETTABLE 	R11 R11 K17 ; R11 := R11[0x056bfe8b]
	104	[1847]	CALL     	R11 1 2 ; R11 := R11()
	105	[1847]	TEST     	R11 1 ; if R11 then PC := 115
	106	[1847]	JMP      	115 ; PC := 115
	107	[1848]	GETGLOBAL	R11 K9 ; R11 := 0xae91e43b
	108	[1848]	SELF     	R11 R11 K14 ; R12 := R11; R11 := R11[0x091c120e]
	109	[1848]	CALL     	R11 2 2 ; R11 := R11(R12)
	110	[1848]	MOVE     	R9 R11 ; R9 := R11
	111	[1849]	GETGLOBAL	R11 K9 ; R11 := 0xae91e43b
	112	[1849]	SELF     	R11 R11 K15 ; R12 := R11; R11 := R11[0x2cc9d281]
	113	[1849]	CALL     	R11 2 2 ; R11 := R11(R12)
	114	[1849]	MOVE     	R10 R11 ; R10 := R11
	115	[1852]	GETGLOBAL	R11 K16 ; R11 := 0x34291f5c
	116	[1852]	GETTABLE 	R11 R11 K18 ; R11 := R11[0xe6b41adb]
	117	[1852]	CALL     	R11 1 2 ; R11 := R11()
	118	[1852]	TEST     	R11 0 ; if not R11 then PC := 123
	119	[1852]	JMP      	123 ; PC := 123
	120	[1853]	GETUPVAL 	R11 U4 ; R11 := U4
	121	[1853]	CALL     	R11 1 1 ; R11()
	122	[1853]	JMP      	131 ; PC := 131
	123	[1855]	GETUPVAL 	R11 U0 ; R11 := U0
	124	[1855]	SELF     	R11 R11 K19 ; R12 := R11; R11 := R11[0xfaa69527]
	125	[1855]	MOVE     	R13 R9 ; R13 := R9
	126	[1855]	MOVE     	R14 R10 ; R14 := R10
	127	[1855]	OP_LOADBOOL	R15 1 0 ; R15 := true
	128	[1855]	GETUPVAL 	R16 U5 ; R16 := U5
	129	[1855]	GETTABLE 	R16 R16 K20 ; R16 := R16["HudScalePadding"]
	130	[1855]	CALL     	R11 6 1 ; R11(R12,R13,R14,R15,R16)
	131	[1857]	GETUPVAL 	R11 U3 ; R11 := U3
	132	[1857]	SELF     	R11 R11 K21 ; R12 := R11; R11 := R11[0xdae5251c]
	133	[1857]	GETUPVAL 	R13 U0 ; R13 := U0
	134	[1857]	SELF     	R13 R13 K22 ; R14 := R13; R13 := R13[0x2de3d774]
	135	[1857]	LOADK    	R15 K23 ; R15 := "Notification"
	136	[1857]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	137	[1857]	GETTABLE 	R13 R13 K24 ; R13 := R13["y"]
	138	[1857]	CALL     	R11 3 1 ; R11(R12,R13)
	139	[1859]	GETGLOBAL	R11 K25 ; R11 := 0xc8802016
	140	[1859]	GETUPVAL 	R12 U6 ; R12 := U6
	141	[1859]	CALL     	R11 2 4 ; R11,R12,R13 := R11(R12)
	142	[1859]	JMP      	158 ; PC := 158
	143	[1860]	GETTABLE 	R16 R15 K26 ; R16 := R15["Clip"]
	144	[1860]	EQ       	0 R16 K4 ; if R16 ~= "AbilityPanel" then PC := 158
	145	[1860]	JMP      	158 ; PC := 158
	146	[1861]	GETUPVAL 	R16 U0 ; R16 := U0
	147	[1861]	SELF     	R16 R16 K22 ; R17 := R16; R16 := R16[0x2de3d774]
	148	[1861]	GETTABLE 	R18 R15 K26 ; R18 := R15["Clip"]
	149	[1861]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	150	[1862]	GETUPVAL 	R17 U3 ; R17 := U3
	151	[1862]	SELF     	R17 R17 K27 ; R18 := R17; R17 := R17[0x31669273]
	152	[1862]	GETTABLE 	R19 R15 K28 ; R19 := R15["Movie"]
	153	[1862]	GETTABLE 	R20 R15 K26 ; R20 := R15["Clip"]
	154	[1862]	GETTABLE 	R21 R16 K29 ; R21 := R16["x"]
	155	[1862]	GETTABLE 	R22 R16 K24 ; R22 := R16["y"]
	156	[1862]	CALL     	R17 6 1 ; R17(R18,R19,R20,R21,R22)
	157	[1863]	JMP      	160 ; PC := 160
	158	[1859]	TFORLOOP 	R11 2 ; R14,R15 := R11(R12,R13); if R14 ~= nil then begin PC = 143; R13 := R14 end
	159	[1864]	JMP      	143 ; PC := 143
	160	[1868]	OP_LOADBOOL	R17 1 0 ; R17 := true
	161	[1868]	RETURN   	R17 2 ; return R17 
	162	[1871]	OP_LOADBOOL	R17 0 0 ; R17 := false
	163	[1871]	RETURN   	R17 2 ; return R17 
	164	[1872]	RETURN   	R0 1 ; return 

function #82 <?:1875,1891> (57 instructions, 228 bytes at 00000211242BE530)
1 param, 7 slots, 5 upvalues, 0 locals, 10 constants, 0 functions
	1	[1876]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1876]	GETTABLE 	R1 R1 K0 ; R1 := R1["mMiniMapHidden"]
	3	[1876]	TEST     	R1 1 ; if R1 then PC := 57
	4	[1876]	JMP      	57 ; PC := 57
	5	[1877]	GETUPVAL 	R1 U0 ; R1 := U0
	6	[1877]	SETTABLE 	R1 K0 K1 ; R1["mMiniMapHidden"] := true
	7	[1878]	GETUPVAL 	R1 U1 ; R1 := U1
	8	[1878]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xf4ed1581]
	9	[1878]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[1878]	TEST     	R1 0 ; if not R1 then PC := 51
	11	[1878]	JMP      	51 ; PC := 51
	12	[1879]	OP_LOADBOOL	R1 1 0 ; R1 := true
	13	[1879]	SETUPVAL 	R1 U2 ; U2 := R1
	14	[1880]	GETUPVAL 	R1 U1 ; R1 := U1
	15	[1880]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xbf5bcc4a]
	16	[1880]	OP_LOADBOOL	R3 0 0 ; R3 := false
	17	[1880]	CALL     	R1 3 1 ; R1(R2,R3)
	18	[1881]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	19	[1881]	GETUPVAL 	R2 U3 ; R2 := U3
	20	[1881]	CALL     	R1 2 2 ; R1 := R1(R2)
	21	[1881]	TEST     	R1 1 ; if R1 then PC := 53
	22	[1881]	JMP      	53 ; PC := 53
	23	[1882]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	24	[1882]	GETUPVAL 	R2 U4 ; R2 := U4
	25	[1882]	CALL     	R1 2 2 ; R1 := R1(R2)
	26	[1882]	TEST     	R1 1 ; if R1 then PC := 53
	27	[1882]	JMP      	53 ; PC := 53
	28	[1883]	GETUPVAL 	R1 U3 ; R1 := U3
	29	[1883]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0x840ecf2e]
	30	[1883]	GETUPVAL 	R3 U4 ; R3 := U4
	31	[1883]	GETGLOBAL	R4 K6 ; R4 := _T
	32	[1883]	GETTABLE 	R4 R4 K7 ; R4 := R4["DisableMiniMap"]
	33	[1883]	EQ       	1 R4 K1 ; if R4 == true then PC := 36
	34	[1883]	JMP      	36 ; PC := 36
	35	[1883]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 36
	36	[1883]	OP_LOADBOOL	R4 1 0 ; R4 := true
	37	[1883]	GETGLOBAL	R5 K6 ; R5 := _T
	38	[1883]	GETTABLE 	R5 R5 K7 ; R5 := R5["DisableMiniMap"]
	39	[1883]	EQ       	0 R5 K1 ; if R5 ~= true then PC := 42
	40	[1883]	JMP      	42 ; PC := 42
	41	[1883]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 42
	42	[1883]	OP_LOADBOOL	R5 1 0 ; R5 := true
	43	[1883]	GETGLOBAL	R6 K6 ; R6 := _T
	44	[1883]	GETTABLE 	R6 R6 K8 ; R6 := R6["OverlayMapVisible"]
	45	[1883]	EQ       	1 R6 K1 ; if R6 == true then PC := 48
	46	[1883]	JMP      	48 ; PC := 48
	47	[1883]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 48
	48	[1883]	OP_LOADBOOL	R6 1 0 ; R6 := true
	49	[1883]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	50	[1885]	JMP      	53 ; PC := 53
	51	[1887]	OP_LOADBOOL	R1 0 0 ; R1 := false
	52	[1887]	SETUPVAL 	R1 U2 ; U2 := R1
	53	[1889]	GETUPVAL 	R1 U3 ; R1 := U3
	54	[1889]	SELF     	R1 R1 K9 ; R2 := R1; R1 := R1[0x719f1395]
	55	[1889]	MOVE     	R3 R0 ; R3 := R0
	56	[1889]	CALL     	R1 3 1 ; R1(R2,R3)
	57	[1891]	RETURN   	R0 1 ; return 

function #83 <?:1893,1901> (18 instructions, 72 bytes at 00000211242BE6C0)
1 param, 4 slots, 4 upvalues, 0 locals, 4 constants, 0 functions
	1	[1894]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1894]	GETTABLE 	R1 R1 K0 ; R1 := R1["mMiniMapHidden"]
	3	[1894]	TEST     	R1 0 ; if not R1 then PC := 18
	4	[1894]	JMP      	18 ; PC := 18
	5	[1895]	GETUPVAL 	R1 U0 ; R1 := U0
	6	[1895]	SETTABLE 	R1 K0 K1 ; R1["mMiniMapHidden"] := false
	7	[1896]	GETUPVAL 	R1 U1 ; R1 := U1
	8	[1896]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xbb74a13b]
	9	[1896]	MOVE     	R3 R0 ; R3 := R0
	10	[1896]	CALL     	R1 3 1 ; R1(R2,R3)
	11	[1897]	GETUPVAL 	R1 U2 ; R1 := U2
	12	[1897]	TEST     	R1 0 ; if not R1 then PC := 18
	13	[1897]	JMP      	18 ; PC := 18
	14	[1898]	GETUPVAL 	R1 U3 ; R1 := U3
	15	[1898]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xbf5bcc4a]
	16	[1898]	OP_LOADBOOL	R3 1 0 ; R3 := true
	17	[1898]	CALL     	R1 3 1 ; R1(R2,R3)
	18	[1901]	RETURN   	R0 1 ; return 

function #84 <?:1904,1918> (31 instructions, 124 bytes at 00000211931CA0F0)
1 param, 10 slots, 2 upvalues, 0 locals, 8 constants, 0 functions
	1	[1905]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[1905]	GETTABLE 	R1 R1 K0 ; R1 := R1["mVisible"]
	3	[1905]	TEST     	R1 0 ; if not R1 then PC := 25
	4	[1905]	JMP      	25 ; PC := 25
	5	[1906]	GETUPVAL 	R1 U0 ; R1 := U0
	6	[1906]	GETTABLE 	R1 R1 K1 ; R1 := R1["mVoipHidden"]
	7	[1906]	TEST     	R1 1 ; if R1 then PC := 24
	8	[1906]	JMP      	24 ; PC := 24
	9	[1907]	LOADK    	R1 := 1.000000
	10	[1907]	LOADK    	R2 := 3.000000
	11	[1907]	LOADK    	R3 := 1.000000
	12	[1907]	FORPREP  	R1 21 ; R1 -= R3; PC := 21
	13	[1908]	GETGLOBAL	R5 K2 ; R5 := 0xae91e43b
	14	[1908]	SELF     	R5 R5 K3 ; R6 := R5; R5 := R5[0x67bc869f]
	15	[1908]	LOADK    	R7 K4 ; R7 := "VoipIndicator"
	16	[1908]	MOVE     	R8 R4 ; R8 := R4
	17	[1908]	CONCAT   	R7 R7 R8 ; R7 := R7 .. R8
	18	[1908]	LOADK    	R8 := 10.000000
	19	[1908]	LOADK    	R9 := 0.000000
	20	[1908]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	21	[1907]	FORLOOP  	R1 13 ; R1 += R3; if R1 <= R2 then begin PC := 13; R4 := R1 end
	22	[1910]	GETUPVAL 	R5 U0 ; R5 := U0
	23	[1910]	SETTABLE 	R5 K1 K5 ; R5["mVoipHidden"] := true
	24	[1912]	RETURN   	R0 1 ; return 
	25	[1915]	GETUPVAL 	R5 U0 ; R5 := U0
	26	[1915]	SETTABLE 	R5 K1 K6 ; R5["mVoipHidden"] := nil
	27	[1917]	GETUPVAL 	R5 U1 ; R5 := U1
	28	[1917]	SELF     	R5 R5 K7 ; R6 := R5; R5 := R5[0x5cd44037]
	29	[1917]	MOVE     	R7 R0 ; R7 := R0
	30	[1917]	CALL     	R5 3 1 ; R5(R6,R7)
	31	[1918]	RETURN   	R0 1 ; return 

function #85 <?:1922,1927> (16 instructions, 64 bytes at 00000211256B9A40)
0 params, 5 slots, 1 upvalue, 0 locals, 7 constants, 0 functions
	1	[1923]	GETGLOBAL	R0 K0 ; R0 := 0x9ba7909f
	2	[1923]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xbcfb64ab]
	3	[1923]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[1923]	GETTABLE 	R2 R2 K2 ; R2 := R2[0xc472e470]
	5	[1923]	CALL     	R2 1 0 ; R2,... := R2()
	6	[1923]	CALL     	R0 0 2 ; R0 := R0(R1,...)
	7	[1924]	GETGLOBAL	R1 K3 ; R1 := 0x7b998233
	8	[1924]	MOVE     	R2 R0 ; R2 := R0
	9	[1924]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[1924]	TEST     	R1 1 ; if R1 then PC := 16
	11	[1924]	JMP      	16 ; PC := 16
	12	[1925]	SELF     	R1 R0 K4 ; R2 := R0; R1 := R0[0xe4162eed]
	13	[1925]	LOADK    	R3 K5 ; R3 := "ToggleFocus"
	14	[1925]	LOADK    	R4 K6 ; R4 := ""
	15	[1925]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	16	[1927]	RETURN   	R0 1 ; return 

function #86 <?:1930,1935> (11 instructions, 44 bytes at 00000211256B9B20)
1 param, 3 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[1931]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[1931]	MOVE     	R2 R0 ; R2 := R0
	3	[1931]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[1931]	TEST     	R1 1 ; if R1 then PC := 9
	5	[1931]	JMP      	9 ; PC := 9
	6	[1932]	SELF     	R1 R0 K1 ; R2 := R0; R1 := R0[0x5ca33548]
	7	[1932]	TAILCALL 	R1 2 0 ; R1,... := R1(R2)
	8	[1932]	RETURN   	R1 0 ; return R1,... 
	9	[1934]	LOADK    	R1 K2 ; R1 := ""
	10	[1934]	RETURN   	R1 2 ; return R1 
	11	[1935]	RETURN   	R0 1 ; return 

function #87 <?:1938,1940> (3 instructions, 12 bytes at 00000211C4CCE830)
0 params, 2 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[1939]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1939]	SETTABLE 	R0 K0 K1 ; R0["PlayerListHasChanged"] := true
	3	[1940]	RETURN   	R0 1 ; return 

function #88 <?:1942,2007> (199 instructions, 796 bytes at 00000211C4CCE8C0)
0 params, 42 slots, 11 upvalues, 0 locals, 33 constants, 0 functions
	1	[1944]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1944]	SETTABLE 	R0 K0 K1 ; R0["PlayerListHasChanged"] := false
	3	[1946]	GETUPVAL 	R0 U1 ; R0 := U1
	4	[1946]	TEST     	R0 0 ; if not R0 then PC := 8
	5	[1946]	JMP      	8 ; PC := 8
	6	[1947]	GETUPVAL 	R0 U1 ; R0 := U1
	7	[1947]	SETTABLE 	R0 K2 K3 ; R0["mPlayersChanged"] := true
	8	[1950]	GETGLOBAL	R0 K4 ; R0 := 0x7b998233
	9	[1950]	GETUPVAL 	R1 U2 ; R1 := U2
	10	[1950]	CALL     	R0 2 2 ; R0 := R0(R1)
	11	[1950]	TEST     	R0 1 ; if R0 then PC := 24
	12	[1950]	JMP      	24 ; PC := 24
	13	[1950]	GETUPVAL 	R0 U2 ; R0 := U2
	14	[1950]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0xf2deaf69]
	15	[1950]	GETGLOBAL	R2 K6 ; R2 := gLotusAttractModeGameRulesType
	16	[1950]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	17	[1950]	TEST     	R0 1 ; if R0 then PC := 24
	18	[1950]	JMP      	24 ; PC := 24
	19	[1950]	GETUPVAL 	R0 U2 ; R0 := U2
	20	[1950]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0x3790d299]
	21	[1950]	CALL     	R0 2 2 ; R0 := R0(R1)
	22	[1950]	TEST     	R0 0 ; if not R0 then PC := 25
	23	[1950]	JMP      	25 ; PC := 25
	24	[1951]	RETURN   	R0 1 ; return 
	25	[1954]	NEWTABLE 	R0 0 0 ; R0 := {}
	26	[1955]	LOADK    	R1 := 1.000000
	27	[1955]	GETUPVAL 	R2 U3 ; R2 := U3
	28	[1955]	LEN      	R2 R2 ; R2 := # R2
	29	[1955]	LOADK    	R3 := 1.000000
	30	[1955]	FORPREP  	R1 34 ; R1 -= R3; PC := 34
	31	[1956]	GETUPVAL 	R5 U3 ; R5 := U3
	32	[1956]	GETTABLE 	R5 R5 R4 ; R5 := R5[R4]
	33	[1956]	SETTABLE 	R0 R4 R5 ; R0[R4] := R5
	34	[1955]	FORLOOP  	R1 31 ; R1 += R3; if R1 <= R2 then begin PC := 31; R4 := R1 end
	35	[1959]	GETGLOBAL	R5 K4 ; R5 := 0x7b998233
	36	[1959]	GETUPVAL 	R6 U4 ; R6 := U4
	37	[1959]	CALL     	R5 2 2 ; R5 := R5(R6)
	38	[1959]	TEST     	R5 1 ; if R5 then PC := 46
	39	[1959]	JMP      	46 ; PC := 46
	40	[1960]	GETUPVAL 	R5 U4 ; R5 := U4
	41	[1960]	SELF     	R5 R5 K8 ; R6 := R5; R5 := R5[0xc1a65a0f]
	42	[1960]	GETGLOBAL	R7 K9 ; R7 := 0xae91e43b
	43	[1960]	SELF     	R7 R7 K10 ; R8 := R7; R7 := R7[0xcd73323e]
	44	[1960]	CALL     	R7 2 0 ; R7,... := R7(R8)
	45	[1960]	CALL     	R5 0 1 ; R5(R6,...)
	46	[1962]	GETGLOBAL	R5 K11 ; R5 := 0x89326c93
	47	[1962]	SELF     	R5 R5 K12 ; R6 := R5; R5 := R5[0x7d108ddb]
	48	[1962]	CALL     	R5 2 2 ; R5 := R5(R6)
	49	[1962]	SETUPVAL 	R5 U5 ; U5 := R5
	50	[1963]	GETUPVAL 	R5 U6 ; R5 := U6
	51	[1963]	NEWTABLE 	R6 0 0 ; R6 := {}
	52	[1963]	SETTABLE 	R5 K13 R6 ; R5["PlayerAvatars"] := R6
	53	[1965]	NEWTABLE 	R5 0 0 ; R5 := {}
	54	[1965]	SETUPVAL 	R5 U3 ; U3 := R5
	55	[1966]	LOADK    	R5 := 1.000000
	56	[1966]	GETUPVAL 	R6 U5 ; R6 := U5
	57	[1966]	LEN      	R6 R6 ; R6 := # R6
	58	[1966]	LOADK    	R7 := 1.000000
	59	[1966]	FORPREP  	R5 86 ; R5 -= R7; PC := 86
	60	[1967]	GETGLOBAL	R9 K4 ; R9 := 0x7b998233
	61	[1967]	GETUPVAL 	R10 U5 ; R10 := U5
	62	[1967]	GETTABLE 	R10 R10 R8 ; R10 := R10[R8]
	63	[1967]	CALL     	R9 2 2 ; R9 := R9(R10)
	64	[1967]	TEST     	R9 1 ; if R9 then PC := 86
	65	[1967]	JMP      	86 ; PC := 86
	66	[1967]	GETUPVAL 	R9 U5 ; R9 := U5
	67	[1967]	GETTABLE 	R9 R9 R8 ; R9 := R9[R8]
	68	[1967]	SELF     	R9 R9 K14 ; R10 := R9; R9 := R9[0xdcc3e539]
	69	[1967]	CALL     	R9 2 2 ; R9 := R9(R10)
	70	[1967]	TEST     	R9 1 ; if R9 then PC := 86
	71	[1967]	JMP      	86 ; PC := 86
	72	[1967]	GETUPVAL 	R9 U7 ; R9 := U7
	73	[1967]	GETUPVAL 	R10 U5 ; R10 := U5
	74	[1967]	GETTABLE 	R10 R10 R8 ; R10 := R10[R8]
	75	[1967]	CALL     	R9 2 2 ; R9 := R9(R10)
	76	[1967]	GETUPVAL 	R10 U8 ; R10 := U8
	77	[1967]	GETTABLE 	R10 R10 K15 ; R10 := R10["HIDDEN_PLAYER_NAME"]
	78	[1967]	EQ       	1 R9 R10 ; if R9 == R10 then PC := 86
	79	[1967]	JMP      	86 ; PC := 86
	80	[1968]	GETUPVAL 	R9 U3 ; R9 := U3
	81	[1968]	GETUPVAL 	R10 U7 ; R10 := U7
	82	[1968]	GETUPVAL 	R11 U5 ; R11 := U5
	83	[1968]	GETTABLE 	R11 R11 R8 ; R11 := R11[R8]
	84	[1968]	CALL     	R10 2 2 ; R10 := R10(R11)
	85	[1968]	SETTABLE 	R9 R8 R10 ; R9[R8] := R10
	86	[1966]	FORLOOP  	R5 60 ; R5 += R7; if R5 <= R6 then begin PC := 60; R8 := R5 end
	87	[1972]	GETGLOBAL	R9 K16 ; R9 := 0x9ba7909f
	88	[1972]	SELF     	R9 R9 K17 ; R10 := R9; R9 := R9[0xbcfb64ab]
	89	[1972]	GETUPVAL 	R11 U9 ; R11 := U9
	90	[1972]	GETTABLE 	R11 R11 K18 ; R11 := R11[0xc472e470]
	91	[1972]	CALL     	R11 1 0 ; R11,... := R11()
	92	[1972]	CALL     	R9 0 2 ; R9 := R9(R10,...)
	93	[1973]	GETGLOBAL	R10 K4 ; R10 := 0x7b998233
	94	[1973]	MOVE     	R11 R9 ; R11 := R9
	95	[1973]	CALL     	R10 2 2 ; R10 := R10(R11)
	96	[1973]	TEST     	R10 1 ; if R10 then PC := 199
	97	[1973]	JMP      	199 ; PC := 199
	98	[1973]	GETUPVAL 	R10 U0 ; R10 := U0
	99	[1973]	GETTABLE 	R10 R10 K19 ; R10 := R10["Initialized"]
	100	[1973]	TEST     	R10 0 ; if not R10 then PC := 199
	101	[1973]	JMP      	199 ; PC := 199
	102	[1974]	NEWTABLE 	R10 0 0 ; R10 := {}
	103	[1975]	LOADK    	R11 := 1.000000
	104	[1975]	GETUPVAL 	R12 U3 ; R12 := U3
	105	[1975]	LEN      	R12 R12 ; R12 := # R12
	106	[1975]	LOADK    	R13 := 1.000000
	107	[1975]	FORPREP  	R11 111 ; R11 -= R13; PC := 111
	108	[1976]	GETUPVAL 	R15 U3 ; R15 := U3
	109	[1976]	GETTABLE 	R15 R15 R14 ; R15 := R15[R14]
	110	[1976]	SETTABLE 	R10 R14 R15 ; R10[R14] := R15
	111	[1975]	FORLOOP  	R11 108 ; R11 += R13; if R11 <= R12 then begin PC := 108; R14 := R11 end
	112	[1979]	LOADK    	R15 := 1.000000
	113	[1979]	LEN      	R16 R0 ; R16 := # R0
	114	[1979]	LOADK    	R17 := 1.000000
	115	[1979]	FORPREP  	R15 134 ; R15 -= R17; PC := 134
	116	[1980]	LOADK    	R19 := 1.000000
	117	[1980]	LEN      	R20 R10 ; R20 := # R10
	118	[1980]	LOADK    	R21 := 1.000000
	119	[1980]	FORPREP  	R19 133 ; R19 -= R21; PC := 133
	120	[1981]	GETTABLE 	R23 R0 R18 ; R23 := R0[R18]
	121	[1981]	GETTABLE 	R24 R10 R22 ; R24 := R10[R22]
	122	[1981]	EQ       	0 R23 R24 ; if R23 ~= R24 then PC := 133
	123	[1981]	JMP      	133 ; PC := 133
	124	[1981]	GETTABLE 	R23 R0 R18 ; R23 := R0[R18]
	125	[1981]	EQ       	1 R23 K20 ; if R23 == "" then PC := 133
	126	[1981]	JMP      	133 ; PC := 133
	127	[1981]	GETTABLE 	R23 R10 R22 ; R23 := R10[R22]
	128	[1981]	EQ       	1 R23 K20 ; if R23 == "" then PC := 133
	129	[1981]	JMP      	133 ; PC := 133
	130	[1982]	SETTABLE 	R0 R18 K20 ; R0[R18] := ""
	131	[1983]	SETTABLE 	R10 R22 K20 ; R10[R22] := ""
	132	[1984]	JMP      	134 ; PC := 134
	133	[1980]	FORLOOP  	R19 120 ; R19 += R21; if R19 <= R20 then begin PC := 120; R22 := R19 end
	134	[1979]	FORLOOP  	R15 116 ; R15 += R17; if R15 <= R16 then begin PC := 116; R18 := R15 end
	135	[1990]	LOADK    	R23 := 1.000000
	136	[1990]	LEN      	R24 R0 ; R24 := # R0
	137	[1990]	LOADK    	R25 := 1.000000
	138	[1990]	FORPREP  	R23 173 ; R23 -= R25; PC := 173
	139	[1991]	GETTABLE 	R27 R0 R26 ; R27 := R0[R26]
	140	[1991]	EQ       	1 R27 K21 ; if R27 == nil then PC := 173
	141	[1991]	JMP      	173 ; PC := 173
	142	[1991]	GETTABLE 	R27 R0 R26 ; R27 := R0[R26]
	143	[1991]	EQ       	1 R27 K20 ; if R27 == "" then PC := 173
	144	[1991]	JMP      	173 ; PC := 173
	145	[1992]	SELF     	R27 R9 K22 ; R28 := R9; R27 := R9[0xf56f3887]
	146	[1992]	LOADK    	R29 K23 ; R29 := "ChannelSystemMessage"
	147	[1992]	NEWTABLE 	R30 2 0 ; R30 := {}
	148	[1992]	GETGLOBAL	R31 K9 ; R31 := 0xae91e43b
	149	[1992]	SELF     	R31 R31 K24 ; R32 := R31; R31 := R31[0x42b04007]
	150	[1992]	LOADK    	R33 K25 ; R33 := "/Lotus/Language/Menu/PlayerHasDisconnected"
	151	[1992]	OP_LOADBOOL	R34 0 0 ; R34 := false
	152	[1992]	NEWTABLE 	R35 0 1 ; R35 := {}
	153	[1992]	GETTABLE 	R36 R0 R26 ; R36 := R0[R26]
	154	[1992]	SETTABLE 	R35 K26 R36 ; R35["PLAYER_NAME"] := R36
	155	[1992]	CALL     	R31 5 2 ; R31 := R31(R32,R33,R34,R35)
	156	[1992]	LOADK    	R32 K27 ; R32 := "1"
	157	[1992]	SETLIST  	R30 2 1 ; R30[(1-1)*FPF+i] := R(30+i), 1 <= i <= 2
	158	[1992]	CALL     	R27 4 1 ; R27(R28,R29,R30)
	159	[1995]	GETUPVAL 	R27 U10 ; R27 := U10
	160	[1995]	SELF     	R27 R27 K28 ; R28 := R27; R27 := R27[0xf017005a]
	161	[1995]	CALL     	R27 2 2 ; R27 := R27(R28)
	162	[1996]	GETGLOBAL	R28 K29 ; R28 := 0x7f5022cf
	163	[1996]	GETTABLE 	R28 R28 K30 ; R28 := R28[0xa5c556b9]
	164	[1996]	MOVE     	R29 R27 ; R29 := R27
	165	[1996]	GETTABLE 	R30 R0 R26 ; R30 := R0[R26]
	166	[1996]	CALL     	R28 3 2 ; R28 := R28(R29,R30)
	167	[1996]	EQ       	1 R28 K21 ; if R28 == nil then PC := 173
	168	[1996]	JMP      	173 ; PC := 173
	169	[1997]	GETUPVAL 	R28 U10 ; R28 := U10
	170	[1997]	SELF     	R28 R28 K31 ; R29 := R28; R28 := R28[0x89212ed6]
	171	[1997]	LOADK    	R30 K20 ; R30 := ""
	172	[1997]	CALL     	R28 3 1 ; R28(R29,R30)
	173	[1990]	FORLOOP  	R23 139 ; R23 += R25; if R23 <= R24 then begin PC := 139; R26 := R23 end
	174	[2001]	LOADK    	R28 := 1.000000
	175	[2001]	LEN      	R29 R10 ; R29 := # R10
	176	[2001]	LOADK    	R30 := 1.000000
	177	[2001]	FORPREP  	R28 198 ; R28 -= R30; PC := 198
	178	[2002]	GETTABLE 	R32 R10 R31 ; R32 := R10[R31]
	179	[2002]	EQ       	1 R32 K21 ; if R32 == nil then PC := 198
	180	[2002]	JMP      	198 ; PC := 198
	181	[2002]	GETTABLE 	R32 R10 R31 ; R32 := R10[R31]
	182	[2002]	EQ       	1 R32 K20 ; if R32 == "" then PC := 198
	183	[2002]	JMP      	198 ; PC := 198
	184	[2003]	SELF     	R32 R9 K22 ; R33 := R9; R32 := R9[0xf56f3887]
	185	[2003]	LOADK    	R34 K23 ; R34 := "ChannelSystemMessage"
	186	[2003]	NEWTABLE 	R35 2 0 ; R35 := {}
	187	[2003]	GETGLOBAL	R36 K9 ; R36 := 0xae91e43b
	188	[2003]	SELF     	R36 R36 K24 ; R37 := R36; R36 := R36[0x42b04007]
	189	[2003]	LOADK    	R38 K32 ; R38 := "/Lotus/Language/Menu/PlayerHasJoined"
	190	[2003]	OP_LOADBOOL	R39 0 0 ; R39 := false
	191	[2003]	NEWTABLE 	R40 0 1 ; R40 := {}
	192	[2003]	GETTABLE 	R41 R10 R31 ; R41 := R10[R31]
	193	[2003]	SETTABLE 	R40 K26 R41 ; R40["PLAYER_NAME"] := R41
	194	[2003]	CALL     	R36 5 2 ; R36 := R36(R37,R38,R39,R40)
	195	[2003]	LOADK    	R37 K27 ; R37 := "1"
	196	[2003]	SETLIST  	R35 2 1 ; R35[(1-1)*FPF+i] := R(35+i), 1 <= i <= 2
	197	[2003]	CALL     	R32 4 1 ; R32(R33,R34,R35)
	198	[2001]	FORLOOP  	R28 178 ; R28 += R30; if R28 <= R29 then begin PC := 178; R31 := R28 end
	199	[2007]	RETURN   	R0 1 ; return 

function #89 <?:2010,2062> (149 instructions, 596 bytes at 00000211C4CCE950)
0 params, 14 slots, 7 upvalues, 0 locals, 26 constants, 0 functions
	1	[2012]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[2012]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[2012]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2012]	TEST     	R1 1 ; if R1 then PC := 11
	5	[2012]	JMP      	11 ; PC := 11
	6	[2012]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	7	[2012]	GETGLOBAL	R2 K1 ; R2 := 0xbe190284
	8	[2012]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[2012]	TEST     	R1 0 ; if not R1 then PC := 12
	10	[2012]	JMP      	12 ; PC := 12
	11	[2013]	RETURN   	R0 1 ; return 
	12	[2016]	GETUPVAL 	R1 U0 ; R1 := U0
	13	[2016]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xe5916fbf]
	14	[2016]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[2017]	LOADK    	R2 := 1.000000
	16	[2017]	LEN      	R3 R1 ; R3 := # R1
	17	[2017]	LOADK    	R4 := 1.000000
	18	[2017]	FORPREP  	R2 27 ; R2 -= R4; PC := 27
	19	[2018]	GETGLOBAL	R6 K1 ; R6 := 0xbe190284
	20	[2018]	SELF     	R6 R6 K3 ; R7 := R6; R6 := R6[0x0f823e41]
	21	[2018]	GETTABLE 	R8 R1 R5 ; R8 := R1[R5]
	22	[2018]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	23	[2018]	TEST     	R6 0 ; if not R6 then PC := 27
	24	[2018]	JMP      	27 ; PC := 27
	25	[2019]	GETTABLE 	R0 R1 R5 ; R0 := R1[R5]
	26	[2020]	JMP      	28 ; PC := 28
	27	[2017]	FORLOOP  	R2 19 ; R2 += R4; if R2 <= R3 then begin PC := 19; R5 := R2 end
	28	[2024]	EQ       	1 R0 K4 ; if R0 == nil then PC := 139
	29	[2024]	JMP      	139 ; PC := 139
	30	[2025]	GETGLOBAL	R6 K5 ; R6 := 0x64fb1586
	31	[2025]	GETGLOBAL	R7 K1 ; R7 := 0xbe190284
	32	[2025]	SELF     	R7 R7 K6 ; R8 := R7; R7 := R7[0x6dc7ed4b]
	33	[2025]	MOVE     	R9 R0 ; R9 := R0
	34	[2025]	CALL     	R7 3 0 ; R7,... := R7(R8,R9)
	35	[2025]	CALL     	R6 0 2 ; R6 := R6(R7,...)
	36	[2026]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	37	[2026]	GETUPVAL 	R8 U1 ; R8 := U1
	38	[2026]	GETTABLE 	R8 R8 K7 ; R8 := R8["TimerOfInterest"]
	39	[2026]	CALL     	R7 2 2 ; R7 := R7(R8)
	40	[2026]	TEST     	R7 0 ; if not R7 then PC := 69
	41	[2026]	JMP      	69 ; PC := 69
	42	[2027]	GETUPVAL 	R7 U1 ; R7 := U1
	43	[2027]	GETUPVAL 	R8 U2 ; R8 := U2
	44	[2027]	LOADK    	R9 K7 ; R9 := "TimerOfInterest"
	45	[2027]	GETUPVAL 	R10 U3 ; R10 := U3
	46	[2027]	GETTABLE 	R10 R10 K8 ; R10 := R10["HT_TIMER"]
	47	[2027]	LOADK    	R11 := 0.250000
	48	[2027]	OP_LOADBOOL	R12 0 0 ; R12 := false
	49	[2027]	OP_LOADBOOL	R13 0 0 ; R13 := false
	50	[2027]	CALL     	R8 6 2 ; R8 := R8(R9,R10,R11,R12,R13)
	51	[2027]	SETTABLE 	R7 K7 R8 ; R7["TimerOfInterest"] := R8
	52	[2028]	GETUPVAL 	R7 U1 ; R7 := U1
	53	[2028]	GETTABLE 	R7 R7 K7 ; R7 := R7["TimerOfInterest"]
	54	[2028]	SETTABLE 	R7 K9 R0 ; R7[0x00000003] := R0
	55	[2029]	GETGLOBAL	R7 K10 ; R7 := 0x7f5022cf
	56	[2029]	GETTABLE 	R7 R7 K11 ; R7 := R7[0x41e2ae25]
	57	[2029]	MOVE     	R8 R6 ; R8 := R6
	58	[2029]	CALL     	R7 2 2 ; R7 := R7(R8)
	59	[2029]	LT       	0 K12 R7 ; if 0.000000 >= R7 then PC := 67
	60	[2029]	JMP      	67 ; PC := 67
	61	[2030]	GETUPVAL 	R7 U1 ; R7 := U1
	62	[2030]	GETTABLE 	R7 R7 K7 ; R7 := R7["TimerOfInterest"]
	63	[2030]	GETTABLE 	R7 R7 K13 ; R7 := R7[0xe0cba3ca]
	64	[2030]	MOVE     	R8 R6 ; R8 := R6
	65	[2030]	LOADK    	R9 := 5.000000
	66	[2030]	CALL     	R7 3 1 ; R7(R8,R9)
	67	[2032]	GETGLOBAL	R7 K14 ; R7 := _T
	68	[2032]	SETTABLE 	R7 K15 K4 ; R7["TimerOfInterestEnded"] := nil
	69	[2034]	GETGLOBAL	R7 K1 ; R7 := 0xbe190284
	70	[2034]	SELF     	R7 R7 K16 ; R8 := R7; R7 := R7[0xffddf768]
	71	[2034]	MOVE     	R9 R0 ; R9 := R0
	72	[2034]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	73	[2036]	GETUPVAL 	R8 U1 ; R8 := U1
	74	[2036]	GETTABLE 	R8 R8 K7 ; R8 := R8["TimerOfInterest"]
	75	[2036]	TEST     	R8 0 ; if not R8 then PC := 82
	76	[2036]	JMP      	82 ; PC := 82
	77	[2037]	GETUPVAL 	R8 U1 ; R8 := U1
	78	[2037]	GETTABLE 	R8 R8 K7 ; R8 := R8["TimerOfInterest"]
	79	[2037]	GETTABLE 	R8 R8 K17 ; R8 := R8[0x8550d2a7]
	80	[2037]	MOVE     	R9 R7 ; R9 := R7
	81	[2037]	CALL     	R8 2 1 ; R8(R9)
	82	[2040]	GETGLOBAL	R8 K14 ; R8 := _T
	83	[2040]	GETTABLE 	R8 R8 K15 ; R8 := R8["TimerOfInterestEnded"]
	84	[2040]	TEST     	R8 1 ; if R8 then PC := 122
	85	[2040]	JMP      	122 ; PC := 122
	86	[2040]	LE       	0 R7 K12 ; if R7 > 0.000000 then PC := 122
	87	[2040]	JMP      	122 ; PC := 122
	88	[2042]	GETGLOBAL	R8 K0 ; R8 := 0x7b998233
	89	[2042]	GETGLOBAL	R9 K14 ; R9 := _T
	90	[2042]	GETTABLE 	R9 R9 K18 ; R9 := R9["missionTimerExpiryPortTrigger"]
	91	[2042]	CALL     	R8 2 2 ; R8 := R8(R9)
	92	[2042]	TEST     	R8 1 ; if R8 then PC := 102
	93	[2042]	JMP      	102 ; PC := 102
	94	[2043]	GETGLOBAL	R8 K14 ; R8 := _T
	95	[2043]	GETTABLE 	R8 R8 K18 ; R8 := R8["missionTimerExpiryPortTrigger"]
	96	[2043]	SELF     	R8 R8 K19 ; R9 := R8; R8 := R8[0x8eb2112d]
	97	[2043]	GETGLOBAL	R10 K5 ; R10 := 0x64fb1586
	98	[2043]	GETGLOBAL	R11 K14 ; R11 := _T
	99	[2043]	GETTABLE 	R11 R11 K20 ; R11 := R11["missionTimerExpiryPortCommand"]
	100	[2043]	CALL     	R10 2 0 ; R10,... := R10(R11)
	101	[2043]	CALL     	R8 0 1 ; R8(R9,...)
	102	[2047]	GETGLOBAL	R8 K1 ; R8 := 0xbe190284
	103	[2047]	SELF     	R8 R8 K21 ; R9 := R8; R8 := R8[0x4becc81a]
	104	[2047]	GETUPVAL 	R10 U1 ; R10 := U1
	105	[2047]	GETTABLE 	R10 R10 K7 ; R10 := R10["TimerOfInterest"]
	106	[2047]	GETTABLE 	R10 R10 K9 ; R10 := R10["MissionTimerName"]
	107	[2047]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	108	[2047]	TEST     	R8 0 ; if not R8 then PC := 120
	109	[2047]	JMP      	120 ; PC := 120
	110	[2048]	GETUPVAL 	R8 U1 ; R8 := U1
	111	[2048]	GETTABLE 	R8 R8 K7 ; R8 := R8["TimerOfInterest"]
	112	[2048]	GETTABLE 	R8 R8 K13 ; R8 := R8[0xe0cba3ca]
	113	[2048]	LOADK    	R9 K22 ; R9 := "/Lotus/Language/Menu/HUD_MissionFailed"
	114	[2048]	CALL     	R8 2 1 ; R8(R9)
	115	[2049]	GETUPVAL 	R8 U4 ; R8 := U4
	116	[2049]	SELF     	R8 R8 K23 ; R9 := R8; R8 := R8[0xbd2e96ea]
	117	[2049]	LOADK    	R10 := 1.500000
	118	[2049]	GETUPVAL 	R11 U5 ; R11 := U5
	119	[2049]	CALL     	R8 4 1 ; R8(R9,R10,R11)
	120	[2051]	GETGLOBAL	R8 K14 ; R8 := _T
	121	[2051]	SETTABLE 	R8 K15 K24 ; R8["TimerOfInterestEnded"] := true
	122	[2055]	GETUPVAL 	R8 U1 ; R8 := U1
	123	[2055]	GETTABLE 	R8 R8 K7 ; R8 := R8["TimerOfInterest"]
	124	[2055]	GETTABLE 	R8 R8 K25 ; R8 := R8["CurrentMessage"]
	125	[2055]	EQ       	1 R8 K4 ; if R8 == nil then PC := 149
	126	[2055]	JMP      	149 ; PC := 149
	127	[2055]	GETUPVAL 	R8 U1 ; R8 := U1
	128	[2055]	GETTABLE 	R8 R8 K7 ; R8 := R8["TimerOfInterest"]
	129	[2055]	GETTABLE 	R8 R8 K25 ; R8 := R8["CurrentMessage"]
	130	[2055]	EQ       	1 R8 R6 ; if R8 == R6 then PC := 149
	131	[2055]	JMP      	149 ; PC := 149
	132	[2056]	GETUPVAL 	R8 U1 ; R8 := U1
	133	[2056]	GETTABLE 	R8 R8 K7 ; R8 := R8["TimerOfInterest"]
	134	[2056]	GETTABLE 	R8 R8 K13 ; R8 := R8[0xe0cba3ca]
	135	[2056]	MOVE     	R9 R6 ; R9 := R6
	136	[2056]	LOADK    	R10 := 5.000000
	137	[2056]	CALL     	R8 3 1 ; R8(R9,R10)
	138	[2057]	JMP      	149 ; PC := 149
	139	[2058]	GETUPVAL 	R8 U1 ; R8 := U1
	140	[2058]	GETTABLE 	R8 R8 K7 ; R8 := R8["TimerOfInterest"]
	141	[2058]	EQ       	1 R8 K4 ; if R8 == nil then PC := 149
	142	[2058]	JMP      	149 ; PC := 149
	143	[2059]	GETUPVAL 	R8 U6 ; R8 := U6
	144	[2059]	GETUPVAL 	R9 U1 ; R9 := U1
	145	[2059]	GETTABLE 	R9 R9 K7 ; R9 := R9["TimerOfInterest"]
	146	[2059]	CALL     	R8 2 1 ; R8(R9)
	147	[2060]	GETUPVAL 	R8 U1 ; R8 := U1
	148	[2060]	SETTABLE 	R8 K7 K4 ; R8["TimerOfInterest"] := nil
	149	[2062]	RETURN   	R0 1 ; return 

function #90 <?:2066,2096> (88 instructions, 352 bytes at 000002112A6CCE10)
1 param, 12 slots, 3 upvalues, 0 locals, 21 constants, 0 functions
	1	[2067]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[2067]	GETTABLE 	R1 R1 K1 ; R1 := R1["DisableAllTransmissions"]
	3	[2067]	TEST     	R1 0 ; if not R1 then PC := 6
	4	[2067]	JMP      	6 ; PC := 6
	5	[2068]	RETURN   	R0 1 ; return 
	6	[2071]	GETGLOBAL	R1 K2 ; R1 := 0xb009bbc6
	7	[2071]	MOVE     	R2 R0 ; R2 := R0
	8	[2071]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[2074]	GETGLOBAL	R2 K3 ; R2 := 0x7b998233
	10	[2074]	GETGLOBAL	R3 K0 ; R3 := _T
	11	[2074]	GETTABLE 	R3 R3 K4 ; R3 := R3["curTransmission"]
	12	[2074]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[2074]	TEST     	R2 1 ; if R2 then PC := 21
	14	[2074]	JMP      	21 ; PC := 21
	15	[2074]	GETGLOBAL	R2 K0 ; R2 := _T
	16	[2074]	GETTABLE 	R2 R2 K4 ; R2 := R2["curTransmission"]
	17	[2074]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0xed4e0128]
	18	[2074]	CALL     	R2 2 2 ; R2 := R2(R3)
	19	[2074]	EQ       	1 R2 R0 ; if R2 == R0 then PC := 22
	20	[2074]	JMP      	22 ; PC := 22
	21	[2074]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 22
	22	[2074]	OP_LOADBOOL	R2 1 0 ; R2 := true
	23	[2075]	TEST     	R2 1 ; if R2 then PC := 50
	24	[2075]	JMP      	50 ; PC := 50
	25	[2076]	LOADK    	R3 := 1.000000
	26	[2076]	GETGLOBAL	R4 K0 ; R4 := _T
	27	[2076]	GETTABLE 	R4 R4 K6 ; R4 := R4["QueuedTransmissions"]
	28	[2076]	LEN      	R4 R4 ; R4 := # R4
	29	[2076]	LOADK    	R5 := 1.000000
	30	[2076]	FORPREP  	R3 49 ; R3 -= R5; PC := 49
	31	[2077]	GETGLOBAL	R7 K3 ; R7 := 0x7b998233
	32	[2077]	GETGLOBAL	R8 K0 ; R8 := _T
	33	[2077]	GETTABLE 	R8 R8 K6 ; R8 := R8["QueuedTransmissions"]
	34	[2077]	GETTABLE 	R8 R8 R6 ; R8 := R8[R6]
	35	[2077]	GETTABLE 	R8 R8 K7 ; R8 := R8["Transmission"]
	36	[2077]	CALL     	R7 2 2 ; R7 := R7(R8)
	37	[2077]	TEST     	R7 1 ; if R7 then PC := 49
	38	[2077]	JMP      	49 ; PC := 49
	39	[2077]	GETGLOBAL	R7 K0 ; R7 := _T
	40	[2077]	GETTABLE 	R7 R7 K6 ; R7 := R7["QueuedTransmissions"]
	41	[2077]	GETTABLE 	R7 R7 R6 ; R7 := R7[R6]
	42	[2077]	GETTABLE 	R7 R7 K7 ; R7 := R7["Transmission"]
	43	[2077]	SELF     	R7 R7 K5 ; R8 := R7; R7 := R7[0xed4e0128]
	44	[2077]	CALL     	R7 2 2 ; R7 := R7(R8)
	45	[2077]	EQ       	0 R7 R0 ; if R7 ~= R0 then PC := 49
	46	[2077]	JMP      	49 ; PC := 49
	47	[2078]	OP_LOADBOOL	R2 1 0 ; R2 := true
	48	[2079]	JMP      	50 ; PC := 50
	49	[2076]	FORLOOP  	R3 31 ; R3 += R5; if R3 <= R4 then begin PC := 31; R6 := R3 end
	50	[2084]	TEST     	R2 1 ; if R2 then PC := 88
	51	[2084]	JMP      	88 ; PC := 88
	52	[2085]	GETUPVAL 	R7 U0 ; R7 := U0
	53	[2085]	GETTABLE 	R7 R7 K8 ; R7 := R7[0x1f60d532]
	54	[2085]	MOVE     	R8 R1 ; R8 := R1
	55	[2085]	GETUPVAL 	R9 U1 ; R9 := U1
	56	[2085]	SELF     	R9 R9 K9 ; R10 := R9; R9 := R9[0x816beb43]
	57	[2085]	CALL     	R9 2 0 ; R9,... := R9(R10)
	58	[2085]	CALL     	R7 0 1 ; R7(R8,...)
	59	[2086]	GETUPVAL 	R7 U2 ; R7 := U2
	60	[2086]	SELF     	R8 R1 K11 ; R9 := R1; R8 := R1[0xd325c0ea]
	61	[2086]	CALL     	R8 2 2 ; R8 := R8(R9)
	62	[2086]	SETTABLE 	R7 K10 R8 ; R7["mTransOnRightSide"] := R8
	63	[2088]	GETGLOBAL	R7 K12 ; R7 := 0x3d106989
	64	[2088]	LOADK    	R8 K13 ; R8 := "Queued a transmission from Hud: "
	65	[2088]	MOVE     	R9 R0 ; R9 := R0
	66	[2088]	CONCAT   	R8 R8 R9 ; R8 := R8 .. R9
	67	[2088]	CALL     	R7 2 1 ; R7(R8)
	68	[2090]	GETGLOBAL	R7 K14 ; R7 := 0x9ba7909f
	69	[2090]	SELF     	R7 R7 K15 ; R8 := R7; R7 := R7[0xbcfb64ab]
	70	[2090]	GETGLOBAL	R9 K16 ; R9 := 0x0032441c
	71	[2090]	GETTABLE 	R9 R9 K17 ; R9 := R9["UIMovie_TransmissionMovie"]
	72	[2090]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	73	[2091]	GETGLOBAL	R8 K18 ; R8 := 0x60cce7b4
	74	[2091]	GETGLOBAL	R9 K3 ; R9 := 0x7b998233
	75	[2091]	MOVE     	R10 R7 ; R10 := R7
	76	[2091]	CALL     	R9 2 2 ; R9 := R9(R10)
	77	[2091]	NOT      	R9 R9 ; R9 := not R9
	78	[2091]	CALL     	R8 2 1 ; R8(R9)
	79	[2092]	GETGLOBAL	R8 K3 ; R8 := 0x7b998233
	80	[2092]	MOVE     	R9 R7 ; R9 := R7
	81	[2092]	CALL     	R8 2 2 ; R8 := R8(R9)
	82	[2092]	TEST     	R8 1 ; if R8 then PC := 88
	83	[2092]	JMP      	88 ; PC := 88
	84	[2093]	SELF     	R8 R7 K19 ; R9 := R7; R8 := R7[0xe4162eed]
	85	[2093]	LOADK    	R10 K20 ; R10 := "TransmissionQueuedFromHud"
	86	[2093]	MOVE     	R11 R0 ; R11 := R0
	87	[2093]	CALL     	R8 4 1 ; R8(R9,R10,R11)
	88	[2096]	RETURN   	R0 1 ; return 

function #91 <?:2098,2100> (17 instructions, 68 bytes at 0000021124725790)
1 param, 4 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[2099]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[2099]	MOVE     	R2 R0 ; R2 := R0
	3	[2099]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[2099]	TEST     	R1 1 ; if R1 then PC := 11
	5	[2099]	JMP      	11 ; PC := 11
	6	[2099]	SELF     	R1 R0 K1 ; R2 := R0; R1 := R0[0xf2deaf69]
	7	[2099]	GETGLOBAL	R3 K2 ; R3 := gLotusAvatarType
	8	[2099]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	9	[2099]	TEST     	R1 0 ; if not R1 then PC := 15
	10	[2099]	JMP      	15 ; PC := 15
	11	[2099]	SELF     	R1 R0 K3 ; R2 := R0; R1 := R0[0xdcb64a96]
	12	[2099]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[2099]	JMP      	16 ; PC := 16
	14	[2099]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 15
	15	[2099]	OP_LOADBOOL	R1 1 0 ; R1 := true
	16	[2099]	RETURN   	R1 2 ; return R1 
	17	[2100]	RETURN   	R0 1 ; return 

function #92 <?:2102,2158> (223 instructions, 892 bytes at 0000021123D037A0)
0 params, 9 slots, 9 upvalues, 0 locals, 41 constants, 0 functions
	1	[2103]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2103]	SELF     	R0 R0 K0 ; R1 := R0; R0 := R0[0xbb610e5b]
	3	[2103]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[2104]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	5	[2104]	GETUPVAL 	R2 U1 ; R2 := U1
	6	[2104]	GETTABLE 	R2 R2 K2 ; R2 := R2["avatar"]
	7	[2104]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[2104]	TEST     	R1 1 ; if R1 then PC := 180
	9	[2104]	JMP      	180 ; PC := 180
	10	[2104]	GETUPVAL 	R1 U1 ; R1 := U1
	11	[2104]	GETTABLE 	R1 R1 K2 ; R1 := R1["avatar"]
	12	[2104]	EQ       	1 R1 R0 ; if R1 == R0 then PC := 180
	13	[2104]	JMP      	180 ; PC := 180
	14	[2104]	GETUPVAL 	R1 U2 ; R1 := U2
	15	[2104]	GETTABLE 	R1 R1 K3 ; R1 := R1["UIMode"]
	16	[2104]	GETUPVAL 	R2 U3 ; R2 := U3
	17	[2104]	GETTABLE 	R2 R2 K4 ; R2 := R2["UI_MODE_IN_SPACE_HUB"]
	18	[2104]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 27
	19	[2104]	JMP      	27 ; PC := 27
	20	[2104]	GETGLOBAL	R1 K5 ; R1 := 0xbe190284
	21	[2104]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0xd6573683]
	22	[2104]	GETUPVAL 	R3 U1 ; R3 := U1
	23	[2104]	GETTABLE 	R3 R3 K2 ; R3 := R3["avatar"]
	24	[2104]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	25	[2104]	TEST     	R1 1 ; if R1 then PC := 180
	26	[2104]	JMP      	180 ; PC := 180
	27	[2105]	GETUPVAL 	R1 U1 ; R1 := U1
	28	[2105]	GETTABLE 	R1 R1 K2 ; R1 := R1["avatar"]
	29	[2105]	SELF     	R1 R1 K7 ; R2 := R1; R1 := R1[0x22da1852]
	30	[2105]	CALL     	R1 2 2 ; R1 := R1(R2)
	31	[2106]	GETUPVAL 	R2 U4 ; R2 := U4
	32	[2106]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 40
	33	[2106]	JMP      	40 ; PC := 40
	34	[2106]	GETUPVAL 	R2 U5 ; R2 := U5
	35	[2106]	GETUPVAL 	R3 U1 ; R3 := U1
	36	[2106]	GETTABLE 	R3 R3 K2 ; R3 := R3["avatar"]
	37	[2106]	CALL     	R2 2 2 ; R2 := R2(R3)
	38	[2106]	TEST     	R2 1 ; if R2 then PC := 41
	39	[2106]	JMP      	41 ; PC := 41
	40	[2107]	RETURN   	R0 1 ; return 
	41	[2109]	GETUPVAL 	R2 U1 ; R2 := U1
	42	[2109]	SETTABLE 	R2 K8 K9 ; R2["valid"] := true
	43	[2110]	GETUPVAL 	R2 U1 ; R2 := U1
	44	[2110]	GETUPVAL 	R3 U1 ; R3 := U1
	45	[2110]	GETTABLE 	R3 R3 K2 ; R3 := R3["avatar"]
	46	[2110]	SELF     	R3 R3 K11 ; R4 := R3; R3 := R3[0x5e651723]
	47	[2110]	CALL     	R3 2 2 ; R3 := R3(R4)
	48	[2110]	SETTABLE 	R2 K10 R3 ; R2["player"] := R3
	49	[2111]	OP_LOADBOOL	R2 0 0 ; R2 := false
	50	[2112]	GETGLOBAL	R3 K12 ; R3 := 0x34291f5c
	51	[2112]	GETTABLE 	R3 R3 K13 ; R3 := R3[0x1467d5f4]
	52	[2112]	CALL     	R3 1 2 ; R3 := R3()
	53	[2112]	TEST     	R3 0 ; if not R3 then PC := 64
	54	[2112]	JMP      	64 ; PC := 64
	55	[2113]	GETGLOBAL	R3 K14 ; R3 := 0x9ba7909f
	56	[2113]	SELF     	R3 R3 K15 ; R4 := R3; R3 := R3[0xa50d1a6a]
	57	[2113]	LOADK    	R5 K16 ; R5 := "INSPECT"
	58	[2113]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	59	[2113]	EQ       	0 R3 K17 ; if R3 ~= "" then PC := 62
	60	[2113]	JMP      	62 ; PC := 62
	61	[2113]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 62
	62	[2113]	OP_LOADBOOL	R2 1 0 ; R2 := true
	63	[2113]	JMP      	73 ; PC := 73
	64	[2115]	GETGLOBAL	R3 K14 ; R3 := 0x9ba7909f
	65	[2115]	SELF     	R3 R3 K18 ; R4 := R3; R3 := R3[0x9e473958]
	66	[2115]	LOADK    	R5 K16 ; R5 := "INSPECT"
	67	[2115]	OP_LOADBOOL	R6 0 0 ; R6 := false
	68	[2115]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	69	[2115]	EQ       	0 R3 K19 ; if R3 ~= nil then PC := 72
	70	[2115]	JMP      	72 ; PC := 72
	71	[2115]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 72
	72	[2115]	OP_LOADBOOL	R2 1 0 ; R2 := true
	73	[2117]	GETGLOBAL	R3 K1 ; R3 := 0x7b998233
	74	[2117]	GETUPVAL 	R4 U1 ; R4 := U1
	75	[2117]	GETTABLE 	R4 R4 K10 ; R4 := R4["player"]
	76	[2117]	CALL     	R3 2 2 ; R3 := R3(R4)
	77	[2117]	TEST     	R3 1 ; if R3 then PC := 87
	78	[2117]	JMP      	87 ; PC := 87
	79	[2117]	GETUPVAL 	R3 U1 ; R3 := U1
	80	[2117]	GETTABLE 	R3 R3 K2 ; R3 := R3["avatar"]
	81	[2117]	SELF     	R3 R3 K20 ; R4 := R3; R3 := R3[0x808b79e6]
	82	[2117]	CALL     	R3 2 2 ; R3 := R3(R4)
	83	[2117]	SELF     	R4 R0 K20 ; R5 := R0; R4 := R0[0x808b79e6]
	84	[2117]	CALL     	R4 2 2 ; R4 := R4(R5)
	85	[2117]	EQ       	1 R3 R4 ; if R3 == R4 then PC := 162
	86	[2117]	JMP      	162 ; PC := 162
	87	[2118]	GETUPVAL 	R3 U1 ; R3 := U1
	88	[2118]	GETUPVAL 	R4 U1 ; R4 := U1
	89	[2118]	GETTABLE 	R4 R4 K2 ; R4 := R4["avatar"]
	90	[2118]	SELF     	R4 R4 K22 ; R5 := R4; R4 := R4[0xdff9d2a7]
	91	[2118]	CALL     	R4 2 2 ; R4 := R4(R5)
	92	[2118]	SETTABLE 	R3 K21 R4 ; R3["name"] := R4
	93	[2119]	GETUPVAL 	R3 U1 ; R3 := U1
	94	[2119]	GETUPVAL 	R4 U1 ; R4 := U1
	95	[2119]	GETTABLE 	R4 R4 K2 ; R4 := R4["avatar"]
	96	[2119]	SELF     	R4 R4 K24 ; R5 := R4; R4 := R4[0x0f3c38bd]
	97	[2119]	CALL     	R4 2 2 ; R4 := R4(R5)
	98	[2119]	SELF     	R4 R4 K25 ; R5 := R4; R4 := R4[0x6d604ba7]
	99	[2119]	CALL     	R4 2 2 ; R4 := R4(R5)
	100	[2119]	SETTABLE 	R3 K23 R4 ; R3["desc"] := R4
	101	[2120]	GETGLOBAL	R3 K26 ; R3 := 0x7f5022cf
	102	[2120]	GETTABLE 	R3 R3 K27 ; R3 := R3[0x41e2ae25]
	103	[2120]	GETUPVAL 	R4 U1 ; R4 := U1
	104	[2120]	GETTABLE 	R4 R4 K23 ; R4 := R4["desc"]
	105	[2120]	CALL     	R3 2 2 ; R3 := R3(R4)
	106	[2120]	LT       	0 K28 R3 ; if 0.000000 >= R3 then PC := 117
	107	[2120]	JMP      	117 ; PC := 117
	108	[2121]	GETUPVAL 	R3 U1 ; R3 := U1
	109	[2121]	GETGLOBAL	R4 K29 ; R4 := 0xae91e43b
	110	[2121]	SELF     	R4 R4 K30 ; R5 := R4; R4 := R4[0x42b04007]
	111	[2121]	GETUPVAL 	R6 U1 ; R6 := U1
	112	[2121]	GETTABLE 	R6 R6 K23 ; R6 := R6["desc"]
	113	[2121]	OP_LOADBOOL	R7 1 0 ; R7 := true
	114	[2121]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	115	[2121]	SETTABLE 	R3 K23 R4 ; R3["desc"] := R4
	116	[2121]	JMP      	186 ; PC := 186
	117	[2122]	GETUPVAL 	R3 U1 ; R3 := U1
	118	[2122]	GETTABLE 	R3 R3 K21 ; R3 := R3["name"]
	119	[2122]	EQ       	1 R3 K17 ; if R3 == "" then PC := 186
	120	[2122]	JMP      	186 ; PC := 186
	121	[2122]	TEST     	R2 0 ; if not R2 then PC := 186
	122	[2122]	JMP      	186 ; PC := 186
	123	[2124]	LOADNIL  	R3 R3 ; R3 := nil
	124	[2125]	GETUPVAL 	R4 U6 ; R4 := U6
	125	[2125]	CALL     	R4 1 2 ; R4 := R4()
	126	[2125]	TEST     	R4 1 ; if R4 then PC := 134
	127	[2125]	JMP      	134 ; PC := 134
	128	[2125]	GETUPVAL 	R4 U2 ; R4 := U2
	129	[2125]	GETTABLE 	R4 R4 K3 ; R4 := R4["UIMode"]
	130	[2125]	GETUPVAL 	R5 U3 ; R5 := U3
	131	[2125]	GETTABLE 	R5 R5 K31 ; R5 := R5["UI_MODE_IN_DOJO"]
	132	[2125]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 141
	133	[2125]	JMP      	141 ; PC := 141
	134	[2126]	GETUPVAL 	R4 U7 ; R4 := U7
	135	[2126]	SELF     	R4 R4 K32 ; R5 := R4; R4 := R4[0x6566f2d4]
	136	[2126]	GETUPVAL 	R6 U1 ; R6 := U1
	137	[2126]	GETTABLE 	R6 R6 K2 ; R6 := R6["avatar"]
	138	[2126]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	139	[2126]	MOVE     	R3 R4 ; R3 := R4
	140	[2126]	JMP      	152 ; PC := 152
	141	[2127]	GETGLOBAL	R4 K1 ; R4 := 0x7b998233
	142	[2127]	GETUPVAL 	R5 U1 ; R5 := U1
	143	[2127]	GETTABLE 	R5 R5 K10 ; R5 := R5["player"]
	144	[2127]	CALL     	R4 2 2 ; R4 := R4(R5)
	145	[2127]	TEST     	R4 1 ; if R4 then PC := 152
	146	[2127]	JMP      	152 ; PC := 152
	147	[2128]	GETUPVAL 	R4 U1 ; R4 := U1
	148	[2128]	GETTABLE 	R4 R4 K10 ; R4 := R4["player"]
	149	[2128]	SELF     	R4 R4 K33 ; R5 := R4; R4 := R4[0x1020015e]
	150	[2128]	CALL     	R4 2 2 ; R4 := R4(R5)
	151	[2128]	MOVE     	R3 R4 ; R3 := R4
	152	[2131]	EQ       	1 R3 K17 ; if R3 == "" then PC := 186
	153	[2131]	JMP      	186 ; PC := 186
	154	[2132]	GETUPVAL 	R4 U1 ; R4 := U1
	155	[2132]	GETGLOBAL	R5 K29 ; R5 := 0xae91e43b
	156	[2132]	SELF     	R5 R5 K30 ; R6 := R5; R5 := R5[0x42b04007]
	157	[2132]	LOADK    	R7 K34 ; R7 := "/Lotus/Language/Menu/InspectPlayer"
	158	[2132]	OP_LOADBOOL	R8 1 0 ; R8 := true
	159	[2132]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	160	[2132]	SETTABLE 	R4 K23 R5 ; R4["desc"] := R5
	161	[2134]	JMP      	186 ; PC := 186
	162	[2136]	GETUPVAL 	R4 U1 ; R4 := U1
	163	[2136]	GETUPVAL 	R5 U8 ; R5 := U8
	164	[2136]	GETUPVAL 	R6 U1 ; R6 := U1
	165	[2136]	GETTABLE 	R6 R6 K10 ; R6 := R6["player"]
	166	[2136]	CALL     	R5 2 2 ; R5 := R5(R6)
	167	[2136]	SETTABLE 	R4 K21 R5 ; R4["name"] := R5
	168	[2137]	GETUPVAL 	R4 U1 ; R4 := U1
	169	[2137]	SETTABLE 	R4 K35 K9 ; R4["sameFaction"] := true
	170	[2139]	TEST     	R2 0 ; if not R2 then PC := 186
	171	[2139]	JMP      	186 ; PC := 186
	172	[2140]	GETUPVAL 	R4 U1 ; R4 := U1
	173	[2140]	GETGLOBAL	R5 K29 ; R5 := 0xae91e43b
	174	[2140]	SELF     	R5 R5 K30 ; R6 := R5; R5 := R5[0x42b04007]
	175	[2140]	LOADK    	R7 K34 ; R7 := "/Lotus/Language/Menu/InspectPlayer"
	176	[2140]	OP_LOADBOOL	R8 1 0 ; R8 := true
	177	[2140]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	178	[2140]	SETTABLE 	R4 K23 R5 ; R4["desc"] := R5
	179	[2142]	JMP      	186 ; PC := 186
	180	[2144]	GETUPVAL 	R4 U1 ; R4 := U1
	181	[2144]	SETTABLE 	R4 K10 K19 ; R4["player"] := nil
	182	[2145]	GETUPVAL 	R4 U1 ; R4 := U1
	183	[2145]	SETTABLE 	R4 K35 K36 ; R4["sameFaction"] := false
	184	[2147]	GETUPVAL 	R4 U1 ; R4 := U1
	185	[2147]	SETTABLE 	R4 K21 K17 ; R4["name"] := ""
	186	[2150]	GETGLOBAL	R4 K29 ; R4 := 0xae91e43b
	187	[2150]	SELF     	R4 R4 K37 ; R5 := R4; R4 := R4[0x5f56eeab]
	188	[2150]	LOADK    	R6 K38 ; R6 := "TargetStatus.Name"
	189	[2150]	LOADK    	R7 := 29.000000
	190	[2150]	GETUPVAL 	R8 U1 ; R8 := U1
	191	[2150]	GETTABLE 	R8 R8 K21 ; R8 := R8["name"]
	192	[2150]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	193	[2151]	GETGLOBAL	R4 K29 ; R4 := 0xae91e43b
	194	[2151]	SELF     	R4 R4 K39 ; R5 := R4; R4 := R4[0xaade900e]
	195	[2151]	LOADK    	R6 K38 ; R6 := "TargetStatus.Name"
	196	[2151]	LOADK    	R7 := 11.000000
	197	[2151]	OP_LOADBOOL	R8 1 0 ; R8 := true
	198	[2151]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	199	[2152]	GETUPVAL 	R4 U1 ; R4 := U1
	200	[2152]	GETTABLE 	R4 R4 K23 ; R4 := R4["desc"]
	201	[2152]	EQ       	1 R4 K19 ; if R4 == nil then PC := 217
	202	[2152]	JMP      	217 ; PC := 217
	203	[2153]	GETGLOBAL	R4 K29 ; R4 := 0xae91e43b
	204	[2153]	SELF     	R4 R4 K37 ; R5 := R4; R4 := R4[0x5f56eeab]
	205	[2153]	LOADK    	R6 K40 ; R6 := "TargetStatus.Desc"
	206	[2153]	LOADK    	R7 := 29.000000
	207	[2153]	GETUPVAL 	R8 U1 ; R8 := U1
	208	[2153]	GETTABLE 	R8 R8 K23 ; R8 := R8["desc"]
	209	[2153]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	210	[2154]	GETGLOBAL	R4 K29 ; R4 := 0xae91e43b
	211	[2154]	SELF     	R4 R4 K39 ; R5 := R4; R4 := R4[0xaade900e]
	212	[2154]	LOADK    	R6 K40 ; R6 := "TargetStatus.Desc"
	213	[2154]	LOADK    	R7 := 11.000000
	214	[2154]	OP_LOADBOOL	R8 1 0 ; R8 := true
	215	[2154]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	216	[2154]	JMP      	223 ; PC := 223
	217	[2156]	GETGLOBAL	R4 K29 ; R4 := 0xae91e43b
	218	[2156]	SELF     	R4 R4 K39 ; R5 := R4; R4 := R4[0xaade900e]
	219	[2156]	LOADK    	R6 K40 ; R6 := "TargetStatus.Desc"
	220	[2156]	LOADK    	R7 := 11.000000
	221	[2156]	OP_LOADBOOL	R8 0 0 ; R8 := false
	222	[2156]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	223	[2158]	RETURN   	R0 1 ; return 

function #93 <?:2160,2178> (40 instructions, 160 bytes at 000002113475B060)
0 params, 8 slots, 4 upvalues, 0 locals, 15 constants, 0 functions
	1	[2161]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2161]	SELF     	R0 R0 K0 ; R1 := R0; R0 := R0[0xbb610e5b]
	3	[2161]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[2162]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	5	[2162]	MOVE     	R2 R0 ; R2 := R0
	6	[2162]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[2162]	TEST     	R1 0 ; if not R1 then PC := 10
	8	[2162]	JMP      	10 ; PC := 10
	9	[2163]	RETURN   	R0 1 ; return 
	10	[2165]	SELF     	R1 R0 K2 ; R2 := R0; R1 := R0[0xde321e6f]
	11	[2165]	CALL     	R1 2 2 ; R1 := R1(R2)
	12	[2165]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x7c09e541]
	13	[2165]	CALL     	R1 2 2 ; R1 := R1(R2)
	14	[2166]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	15	[2166]	MOVE     	R3 R1 ; R3 := R1
	16	[2166]	CALL     	R2 2 2 ; R2 := R2(R3)
	17	[2166]	TEST     	R2 0 ; if not R2 then PC := 20
	18	[2166]	JMP      	20 ; PC := 20
	19	[2167]	RETURN   	R0 1 ; return 
	20	[2170]	GETUPVAL 	R2 U1 ; R2 := U1
	21	[2170]	SETTABLE 	R2 K4 K5 ; R2["valid"] := false
	22	[2171]	GETUPVAL 	R2 U1 ; R2 := U1
	23	[2171]	SETTABLE 	R2 K6 K7 ; R2["name"] := ""
	24	[2172]	GETUPVAL 	R2 U1 ; R2 := U1
	25	[2172]	SETTABLE 	R2 K8 K9 ; R2["desc"] := nil
	26	[2173]	GETUPVAL 	R2 U1 ; R2 := U1
	27	[2173]	SETTABLE 	R2 K10 K9 ; R2["player"] := nil
	28	[2175]	GETUPVAL 	R2 U1 ; R2 := U1
	29	[2175]	GETUPVAL 	R3 U1 ; R3 := U1
	30	[2175]	GETUPVAL 	R4 U1 ; R4 := U1
	31	[2175]	GETUPVAL 	R5 U2 ; R5 := U2
	32	[2175]	GETTABLE 	R5 R5 K14 ; R5 := R5[0xdb2e16e9]
	33	[2175]	MOVE     	R6 R1 ; R6 := R1
	34	[2175]	CALL     	R5 2 4 ; R5,R6,R7 := R5(R6)
	35	[2175]	SETTABLE 	R4 K13 R7 ; R4["hitProxy"] := R7
	36	[2175]	SETTABLE 	R3 K12 R6 ; R3["avatar"] := R6
	37	[2175]	SETTABLE 	R2 K11 R5 ; R2["deco"] := R5
	38	[2177]	GETUPVAL 	R2 U3 ; R2 := U3
	39	[2177]	CALL     	R2 1 1 ; R2()
	40	[2178]	RETURN   	R0 1 ; return 

function #94 <?:2180,2195> (58 instructions, 232 bytes at 000002111E37C1E0)
0 params, 7 slots, 5 upvalues, 0 locals, 17 constants, 0 functions
	1	[2181]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[2181]	NEWTABLE 	R1 0 3 ; R1 := {}
	3	[2181]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[2181]	SETTABLE 	R1 K2 R2 ; R1["Avatar"] := R2
	5	[2181]	GETUPVAL 	R2 U1 ; R2 := U1
	6	[2181]	SETTABLE 	R1 K3 R2 ; R1["Controllers"] := R2
	7	[2181]	GETUPVAL 	R2 U2 ; R2 := U2
	8	[2181]	SETTABLE 	R1 K4 R2 ; R1["Weapon"] := R2
	9	[2181]	SETTABLE 	R0 K1 R1 ; R0["ScanUpdateParms"] := R1
	10	[2182]	GETGLOBAL	R0 K5 ; R0 := 0x7b998233
	11	[2182]	GETUPVAL 	R1 U3 ; R1 := U3
	12	[2182]	CALL     	R0 2 2 ; R0 := R0(R1)
	13	[2182]	TEST     	R0 0 ; if not R0 then PC := 34
	14	[2182]	JMP      	34 ; PC := 34
	15	[2183]	GETGLOBAL	R0 K6 ; R0 := 0xae91e43b
	16	[2183]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0xcd73323e]
	17	[2183]	CALL     	R0 2 2 ; R0 := R0(R1)
	18	[2184]	GETGLOBAL	R1 K5 ; R1 := 0x7b998233
	19	[2184]	MOVE     	R2 R0 ; R2 := R0
	20	[2184]	CALL     	R1 2 2 ; R1 := R1(R2)
	21	[2184]	TEST     	R1 0 ; if not R1 then PC := 24
	22	[2184]	JMP      	24 ; PC := 24
	23	[2185]	RETURN   	R0 1 ; return 
	24	[2187]	SELF     	R1 R0 K8 ; R2 := R0; R1 := R0[0x6d7bfacb]
	25	[2187]	OP_LOADBOOL	R3 0 0 ; R3 := false
	26	[2187]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	27	[2187]	SETUPVAL 	R1 U3 ; U3 := R1
	28	[2188]	GETGLOBAL	R1 K5 ; R1 := 0x7b998233
	29	[2188]	GETUPVAL 	R2 U3 ; R2 := U3
	30	[2188]	CALL     	R1 2 2 ; R1 := R1(R2)
	31	[2188]	TEST     	R1 0 ; if not R1 then PC := 34
	32	[2188]	JMP      	34 ; PC := 34
	33	[2189]	RETURN   	R0 1 ; return 
	34	[2192]	GETUPVAL 	R1 U3 ; R1 := U3
	35	[2192]	SELF     	R1 R1 K9 ; R2 := R1; R1 := R1[0x59a9b745]
	36	[2192]	CALL     	R1 2 2 ; R1 := R1(R2)
	37	[2193]	GETGLOBAL	R2 K0 ; R2 := _T
	38	[2193]	GETTABLE 	R2 R2 K1 ; R2 := R2["ScanUpdateParms"]
	39	[2193]	NEWTABLE 	R3 0 4 ; R3 := {}
	40	[2193]	GETTABLE 	R4 R1 K11 ; R4 := R1["mActive"]
	41	[2193]	SETTABLE 	R3 K11 R4 ; R3["mActive"] := R4
	42	[2193]	GETTABLE 	R4 R1 K12 ; R4 := R1["mPtr"]
	43	[2193]	SETTABLE 	R3 K12 R4 ; R3["mPtr"] := R4
	44	[2193]	GETTABLE 	R4 R1 K13 ; R4 := R1["mAvatar"]
	45	[2193]	SETTABLE 	R3 K13 R4 ; R3["mAvatar"] := R4
	46	[2193]	GETTABLE 	R4 R1 K14 ; R4 := R1["mName"]
	47	[2193]	SETTABLE 	R3 K14 R4 ; R3["mName"] := R4
	48	[2193]	SETTABLE 	R2 K10 R3 ; R2["CurrentTarget"] := R3
	49	[2194]	GETGLOBAL	R2 K0 ; R2 := _T
	50	[2194]	GETTABLE 	R2 R2 K1 ; R2 := R2["ScanUpdateParms"]
	51	[2194]	GETUPVAL 	R3 U4 ; R3 := U4
	52	[2194]	GETTABLE 	R3 R3 K16 ; R3 := R3[0x06d055f9]
	53	[2194]	GETTABLE 	R4 R1 K11 ; R4 := R1["mActive"]
	54	[2194]	LOADK    	R5 := 1.000000
	55	[2194]	LOADNIL  	R6 R6 ; R6 := nil
	56	[2194]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	57	[2194]	SETTABLE 	R2 K15 R3 ; R2["ActiveTargetIndex"] := R3
	58	[2195]	RETURN   	R0 1 ; return 

function #95 <?:2197,2199> (3 instructions, 12 bytes at 000002111E37C270)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[2198]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2198]	CALL     	R0 1 1 ; R0()
	3	[2199]	RETURN   	R0 1 ; return 

function #96 <?:2202,2228> (67 instructions, 268 bytes at 0000021121766B60)
1 param, 8 slots, 4 upvalues, 0 locals, 18 constants, 1 function
	1	[2203]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2203]	GETUPVAL 	R2 U1 ; R2 := U1
	3	[2203]	LOADK    	R3 K1 ; R3 := "HRVoidTearList"
	4	[2203]	GETUPVAL 	R4 U2 ; R4 := U2
	5	[2203]	GETTABLE 	R4 R4 K2 ; R4 := R4["HT_ICON_BAR"]
	6	[2203]	LOADK    	R5 := 0.500000
	7	[2203]	LOADK    	R6 := 1.000000
	8	[2203]	OP_LOADBOOL	R7 0 0 ; R7 := false
	9	[2203]	CALL     	R2 6 2 ; R2 := R2(R3,R4,R5,R6,R7)
	10	[2203]	SETTABLE 	R1 K0 R2 ; R1["VoidTearListTracker"] := R2
	11	[2204]	GETUPVAL 	R1 U0 ; R1 := U0
	12	[2204]	GETTABLE 	R1 R1 K0 ; R1 := R1["VoidTearListTracker"]
	13	[2204]	GETTABLE 	R1 R1 K3 ; R1 := R1[0xb7ae3621]
	14	[2204]	LOADK    	R2 := 0.000000
	15	[2204]	LOADK    	R3 := -15.000000
	16	[2204]	CALL     	R1 3 1 ; R1(R2,R3)
	17	[2205]	GETUPVAL 	R1 U0 ; R1 := U0
	18	[2205]	GETTABLE 	R1 R1 K0 ; R1 := R1["VoidTearListTracker"]
	19	[2205]	GETTABLE 	R1 R1 K4 ; R1 := R1["List"]
	20	[2205]	SETTABLE 	R1 K5 K6 ; R1["mCurrProgress"] := 0.000000
	21	[2206]	GETUPVAL 	R1 U0 ; R1 := U0
	22	[2206]	GETTABLE 	R1 R1 K0 ; R1 := R1["VoidTearListTracker"]
	23	[2206]	GETTABLE 	R1 R1 K4 ; R1 := R1["List"]
	24	[2206]	GETUPVAL 	R2 U3 ; R2 := U3
	25	[2206]	GETTABLE 	R2 R2 K8 ; R2 := R2[0x8bcd12b6]
	26	[2206]	GETGLOBAL	R3 K9 ; R3 := 0x0032441c
	27	[2206]	GETTABLE 	R3 R3 K10 ; R3 := R3["UIColor_Red"]
	28	[2206]	CALL     	R2 2 2 ; R2 := R2(R3)
	29	[2206]	SETTABLE 	R1 K7 R2 ; R1["mCompletedColorObj"] := R2
	30	[2207]	GETUPVAL 	R1 U0 ; R1 := U0
	31	[2207]	GETTABLE 	R1 R1 K0 ; R1 := R1["VoidTearListTracker"]
	32	[2207]	GETTABLE 	R1 R1 K11 ; R1 := R1[0x6608b24b]
	33	[2219]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	34	[2219]	GETUPVAL 	R0 U3 ; R0 := U3
	35	[2207]	CALL     	R1 2 1 ; R1(R2)
	36	[2221]	GETUPVAL 	R1 U0 ; R1 := U0
	37	[2221]	GETTABLE 	R1 R1 K0 ; R1 := R1["VoidTearListTracker"]
	38	[2221]	GETTABLE 	R1 R1 K12 ; R1 := R1[0xbe9ad86f]
	39	[2221]	CALL     	R1 1 1 ; R1()
	40	[2222]	GETUPVAL 	R1 U0 ; R1 := U0
	41	[2222]	GETTABLE 	R1 R1 K0 ; R1 := R1["VoidTearListTracker"]
	42	[2222]	GETTABLE 	R1 R1 K4 ; R1 := R1["List"]
	43	[2222]	SELF     	R1 R1 K13 ; R2 := R1; R1 := R1[0x71e9ac81]
	44	[2222]	CALL     	R1 2 1 ; R1(R2)
	45	[2224]	GETGLOBAL	R1 K14 ; R1 := 0x7b998233
	46	[2224]	GETUPVAL 	R2 U0 ; R2 := U0
	47	[2224]	GETTABLE 	R2 R2 K15 ; R2 := R2["VoidTearTitleTracker"]
	48	[2224]	CALL     	R1 2 2 ; R1 := R1(R2)
	49	[2224]	TEST     	R1 0 ; if not R1 then PC := 67
	50	[2224]	JMP      	67 ; PC := 67
	51	[2225]	GETUPVAL 	R1 U0 ; R1 := U0
	52	[2225]	GETUPVAL 	R2 U1 ; R2 := U1
	53	[2225]	LOADK    	R3 K16 ; R3 := "HRVoidTearTitle"
	54	[2225]	GETUPVAL 	R4 U2 ; R4 := U2
	55	[2225]	GETTABLE 	R4 R4 K17 ; R4 := R4["HT_LABEL"]
	56	[2225]	LOADK    	R5 := 0.500000
	57	[2225]	LOADK    	R6 := 1.000000
	58	[2225]	OP_LOADBOOL	R7 0 0 ; R7 := false
	59	[2225]	CALL     	R2 6 2 ; R2 := R2(R3,R4,R5,R6,R7)
	60	[2225]	SETTABLE 	R1 K15 R2 ; R1["VoidTearTitleTracker"] := R2
	61	[2226]	GETUPVAL 	R1 U0 ; R1 := U0
	62	[2226]	GETTABLE 	R1 R1 K15 ; R1 := R1["VoidTearTitleTracker"]
	63	[2226]	GETTABLE 	R1 R1 K3 ; R1 := R1[0xb7ae3621]
	64	[2226]	LOADK    	R2 := 0.000000
	65	[2226]	LOADK    	R3 := -20.000000
	66	[2226]	CALL     	R1 3 1 ; R1(R2,R3)
	67	[2228]	RETURN   	R0 1 ; return 

function #97 <?:2230,2254> (82 instructions, 328 bytes at 000002112BAE5B70)
1 param, 12 slots, 2 upvalues, 0 locals, 22 constants, 0 functions
	1	[2231]	OP_LOADBOOL	R1 0 0 ; R1 := false
	2	[2233]	LOADK    	R2 K0 ; R2 := "<p><font face=\"Noto Sans\" size=\"14\"><b>"
	3	[2233]	GETUPVAL 	R3 U0 ; R3 := U0
	4	[2233]	GETTABLE 	R3 R3 K1 ; R3 := R3[0x06d055f9]
	5	[2233]	GETTABLE 	R4 R0 K2 ; R4 := R0["Title"]
	6	[2233]	EQ       	1 R4 K3 ; if R4 == nil then PC := 9
	7	[2233]	JMP      	9 ; PC := 9
	8	[2233]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 9
	9	[2233]	OP_LOADBOOL	R4 1 0 ; R4 := true
	10	[2233]	LOADK    	R5 K4 ; R5 := ""
	11	[2233]	GETGLOBAL	R6 K5 ; R6 := 0x603636ad
	12	[2233]	GETTABLE 	R7 R0 K2 ; R7 := R0["Title"]
	13	[2233]	OP_LOADBOOL	R8 0 0 ; R8 := false
	14	[2233]	CALL     	R6 3 0 ; R6,... := R6(R7,R8)
	15	[2233]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	16	[2233]	LOADK    	R4 K6 ; R4 := "</b></font></p>"
	17	[2233]	CONCAT   	R2 R2 R4 ; R2 := R2 .. R3 .. R4
	18	[2234]	GETUPVAL 	R3 U1 ; R3 := U1
	19	[2234]	GETTABLE 	R3 R3 K7 ; R3 := R3["VoidTearTitleTracker"]
	20	[2234]	GETTABLE 	R3 R3 K8 ; R3 := R3[0x3f8a850c]
	21	[2234]	MOVE     	R4 R2 ; R4 := R2
	22	[2234]	CALL     	R3 2 1 ; R3(R4)
	23	[2236]	GETUPVAL 	R3 U1 ; R3 := U1
	24	[2236]	GETTABLE 	R3 R3 K9 ; R3 := R3["VoidTearListTracker"]
	25	[2236]	GETTABLE 	R3 R3 K10 ; R3 := R3["NeedsInit"]
	26	[2236]	TEST     	R3 1 ; if R3 then PC := 55
	27	[2236]	JMP      	55 ; PC := 55
	28	[2236]	GETTABLE 	R3 R0 K11 ; R3 := R0["Total"]
	29	[2236]	GETUPVAL 	R4 U1 ; R4 := U1
	30	[2236]	GETTABLE 	R4 R4 K9 ; R4 := R4["VoidTearListTracker"]
	31	[2236]	GETTABLE 	R4 R4 K12 ; R4 := R4["List"]
	32	[2236]	SELF     	R4 R4 K13 ; R5 := R4; R4 := R4[0x5fbddc1a]
	33	[2236]	CALL     	R4 2 2 ; R4 := R4(R5)
	34	[2236]	EQ       	1 R3 R4 ; if R3 == R4 then PC := 55
	35	[2236]	JMP      	55 ; PC := 55
	36	[2237]	GETUPVAL 	R3 U1 ; R3 := U1
	37	[2237]	GETTABLE 	R3 R3 K9 ; R3 := R3["VoidTearListTracker"]
	38	[2237]	GETTABLE 	R3 R3 K14 ; R3 := R3[0x55e7b08c]
	39	[2237]	OP_LOADBOOL	R4 1 0 ; R4 := true
	40	[2237]	OP_LOADBOOL	R5 1 0 ; R5 := true
	41	[2237]	CALL     	R3 3 1 ; R3(R4,R5)
	42	[2238]	LOADK    	R3 := 1.000000
	43	[2238]	GETTABLE 	R4 R0 K11 ; R4 := R0["Total"]
	44	[2238]	LOADK    	R5 := 1.000000
	45	[2238]	FORPREP  	R3 53 ; R3 -= R5; PC := 53
	46	[2239]	GETUPVAL 	R7 U1 ; R7 := U1
	47	[2239]	GETTABLE 	R7 R7 K9 ; R7 := R7["VoidTearListTracker"]
	48	[2239]	GETTABLE 	R7 R7 K15 ; R7 := R7[0xe4b8bb38]
	49	[2239]	LOADNIL  	R8 R8 ; R8 := nil
	50	[2239]	NEWTABLE 	R9 0 1 ; R9 := {}
	51	[2239]	SETTABLE 	R9 K16 K17 ; R9["Rotation"] := 45.000000
	52	[2239]	CALL     	R7 3 1 ; R7(R8,R9)
	53	[2238]	FORLOOP  	R3 46 ; R3 += R5; if R3 <= R4 then begin PC := 46; R6 := R3 end
	54	[2242]	OP_LOADBOOL	R1 1 0 ; R1 := true
	55	[2245]	GETTABLE 	R7 R0 K18 ; R7 := R0["Curr"]
	56	[2245]	GETUPVAL 	R8 U1 ; R8 := U1
	57	[2245]	GETTABLE 	R8 R8 K9 ; R8 := R8["VoidTearListTracker"]
	58	[2245]	GETTABLE 	R8 R8 K12 ; R8 := R8["List"]
	59	[2245]	GETTABLE 	R8 R8 K19 ; R8 := R8["mCurrProgress"]
	60	[2245]	EQ       	1 R7 R8 ; if R7 == R8 then PC := 72
	61	[2245]	JMP      	72 ; PC := 72
	62	[2246]	GETUPVAL 	R7 U1 ; R7 := U1
	63	[2246]	GETTABLE 	R7 R7 K9 ; R7 := R7["VoidTearListTracker"]
	64	[2246]	GETTABLE 	R7 R7 K12 ; R7 := R7["List"]
	65	[2246]	GETTABLE 	R8 R0 K18 ; R8 := R0["Curr"]
	66	[2246]	SETTABLE 	R7 K19 R8 ; R7["mCurrProgress"] := R8
	67	[2247]	GETUPVAL 	R7 U1 ; R7 := U1
	68	[2247]	GETTABLE 	R7 R7 K9 ; R7 := R7["VoidTearListTracker"]
	69	[2247]	GETTABLE 	R7 R7 K20 ; R7 := R7[0xbe9ad86f]
	70	[2247]	CALL     	R7 1 1 ; R7()
	71	[2248]	OP_LOADBOOL	R1 1 0 ; R1 := true
	72	[2251]	TEST     	R1 0 ; if not R1 then PC := 82
	73	[2251]	JMP      	82 ; PC := 82
	74	[2252]	GETUPVAL 	R7 U1 ; R7 := U1
	75	[2252]	GETTABLE 	R7 R7 K9 ; R7 := R7["VoidTearListTracker"]
	76	[2252]	GETTABLE 	R7 R7 K12 ; R7 := R7["List"]
	77	[2252]	SELF     	R7 R7 K21 ; R8 := R7; R7 := R7[0x71e9ac81]
	78	[2252]	LOADNIL  	R9 R9 ; R9 := nil
	79	[2252]	OP_LOADBOOL	R10 1 0 ; R10 := true
	80	[2252]	OP_LOADBOOL	R11 1 0 ; R11 := true
	81	[2252]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	82	[2254]	RETURN   	R0 1 ; return 

function #98 <?:2256,2298> (147 instructions, 588 bytes at 00000211928B1550)
0 params, 8 slots, 7 upvalues, 0 locals, 34 constants, 0 functions
	1	[2257]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[2257]	GETTABLE 	R0 R0 K1 ; R0 := R0["VoidTearProgress"]
	3	[2258]	EQ       	0 R0 K2 ; if R0 ~= nil then PC := 34
	4	[2258]	JMP      	34 ; PC := 34
	5	[2258]	GETGLOBAL	R1 K0 ; R1 := _T
	6	[2258]	GETTABLE 	R1 R1 K3 ; R1 := R1["GreedWagerProgress"]
	7	[2258]	EQ       	0 R1 K2 ; if R1 ~= nil then PC := 34
	8	[2258]	JMP      	34 ; PC := 34
	9	[2258]	GETUPVAL 	R1 U0 ; R1 := U0
	10	[2258]	GETTABLE 	R1 R1 K4 ; R1 := R1["VoidTearTracker"]
	11	[2258]	EQ       	1 R1 K2 ; if R1 == nil then PC := 34
	12	[2258]	JMP      	34 ; PC := 34
	13	[2259]	GETUPVAL 	R1 U1 ; R1 := U1
	14	[2259]	GETUPVAL 	R2 U0 ; R2 := U0
	15	[2259]	GETTABLE 	R2 R2 K4 ; R2 := R2["VoidTearTracker"]
	16	[2259]	CALL     	R1 2 1 ; R1(R2)
	17	[2260]	GETUPVAL 	R1 U0 ; R1 := U0
	18	[2260]	SETTABLE 	R1 K4 K2 ; R1["VoidTearTracker"] := nil
	19	[2261]	GETUPVAL 	R1 U1 ; R1 := U1
	20	[2261]	GETUPVAL 	R2 U0 ; R2 := U0
	21	[2261]	GETTABLE 	R2 R2 K5 ; R2 := R2["VoidTearTitleTracker"]
	22	[2261]	CALL     	R1 2 1 ; R1(R2)
	23	[2262]	GETUPVAL 	R1 U0 ; R1 := U0
	24	[2262]	SETTABLE 	R1 K5 K2 ; R1["VoidTearTitleTracker"] := nil
	25	[2263]	GETUPVAL 	R1 U1 ; R1 := U1
	26	[2263]	GETUPVAL 	R2 U0 ; R2 := U0
	27	[2263]	GETTABLE 	R2 R2 K6 ; R2 := R2["VoidTearListTracker"]
	28	[2263]	CALL     	R1 2 1 ; R1(R2)
	29	[2264]	GETUPVAL 	R1 U0 ; R1 := U0
	30	[2264]	SETTABLE 	R1 K6 K2 ; R1["VoidTearListTracker"] := nil
	31	[2265]	GETUPVAL 	R1 U2 ; R1 := U2
	32	[2265]	SETTABLE 	R1 K7 K8 ; R1["UpdateOverrides"] := true
	33	[2265]	JMP      	147 ; PC := 147
	34	[2266]	EQ       	1 R0 K2 ; if R0 == nil then PC := 147
	35	[2266]	JMP      	147 ; PC := 147
	36	[2267]	GETTABLE 	R1 R0 K9 ; R1 := R0["List"]
	37	[2267]	EQ       	1 R1 K2 ; if R1 == nil then PC := 51
	38	[2267]	JMP      	51 ; PC := 51
	39	[2268]	GETGLOBAL	R1 K10 ; R1 := 0x7b998233
	40	[2268]	GETUPVAL 	R2 U0 ; R2 := U0
	41	[2268]	GETTABLE 	R2 R2 K6 ; R2 := R2["VoidTearListTracker"]
	42	[2268]	CALL     	R1 2 2 ; R1 := R1(R2)
	43	[2268]	TEST     	R1 0 ; if not R1 then PC := 48
	44	[2268]	JMP      	48 ; PC := 48
	45	[2269]	GETUPVAL 	R1 U3 ; R1 := U3
	46	[2269]	GETTABLE 	R2 R0 K9 ; R2 := R0["List"]
	47	[2269]	CALL     	R1 2 1 ; R1(R2)
	48	[2271]	GETUPVAL 	R1 U4 ; R1 := U4
	49	[2271]	GETTABLE 	R2 R0 K9 ; R2 := R0["List"]
	50	[2271]	CALL     	R1 2 1 ; R1(R2)
	51	[2274]	GETGLOBAL	R1 K10 ; R1 := 0x7b998233
	52	[2274]	GETUPVAL 	R2 U0 ; R2 := U0
	53	[2274]	GETTABLE 	R2 R2 K4 ; R2 := R2["VoidTearTracker"]
	54	[2274]	CALL     	R1 2 2 ; R1 := R1(R2)
	55	[2274]	TEST     	R1 0 ; if not R1 then PC := 67
	56	[2274]	JMP      	67 ; PC := 67
	57	[2275]	GETUPVAL 	R1 U0 ; R1 := U0
	58	[2275]	GETUPVAL 	R2 U5 ; R2 := U5
	59	[2275]	LOADK    	R3 K11 ; R3 := "HRVoidTear"
	60	[2275]	GETUPVAL 	R4 U6 ; R4 := U6
	61	[2275]	GETTABLE 	R4 R4 K12 ; R4 := R4["HT_PROGRESS_BAR"]
	62	[2275]	LOADK    	R5 := 0.500000
	63	[2275]	LOADK    	R6 := 1.000000
	64	[2275]	OP_LOADBOOL	R7 0 0 ; R7 := false
	65	[2275]	CALL     	R2 6 2 ; R2 := R2(R3,R4,R5,R6,R7)
	66	[2275]	SETTABLE 	R1 K4 R2 ; R1["VoidTearTracker"] := R2
	67	[2278]	GETUPVAL 	R1 U2 ; R1 := U2
	68	[2278]	GETTABLE 	R1 R1 K7 ; R1 := R1["UpdateOverrides"]
	69	[2278]	TEST     	R1 0 ; if not R1 then PC := 123
	70	[2278]	JMP      	123 ; PC := 123
	71	[2279]	GETUPVAL 	R1 U2 ; R1 := U2
	72	[2279]	SETTABLE 	R1 K7 K2 ; R1["UpdateOverrides"] := nil
	73	[2280]	GETUPVAL 	R1 U0 ; R1 := U0
	74	[2280]	GETTABLE 	R1 R1 K4 ; R1 := R1["VoidTearTracker"]
	75	[2280]	GETTABLE 	R1 R1 K13 ; R1 := R1[0x3f8a850c]
	76	[2280]	GETUPVAL 	R2 U2 ; R2 := U2
	77	[2280]	GETTABLE 	R2 R2 K14 ; R2 := R2["Message"]
	78	[2280]	CALL     	R1 2 1 ; R1(R2)
	79	[2281]	GETUPVAL 	R1 U0 ; R1 := U0
	80	[2281]	GETTABLE 	R1 R1 K4 ; R1 := R1["VoidTearTracker"]
	81	[2281]	GETTABLE 	R1 R1 K15 ; R1 := R1[0x89c1fa33]
	82	[2281]	GETUPVAL 	R2 U2 ; R2 := U2
	83	[2281]	GETTABLE 	R2 R2 K16 ; R2 := R2["Icon"]
	84	[2281]	CALL     	R1 2 1 ; R1(R2)
	85	[2282]	GETUPVAL 	R1 U2 ; R1 := U2
	86	[2282]	GETTABLE 	R1 R1 K17 ; R1 := R1["Tint"]
	87	[2282]	EQ       	1 R1 K2 ; if R1 == nil then PC := 113
	88	[2282]	JMP      	113 ; PC := 113
	89	[2283]	GETUPVAL 	R1 U0 ; R1 := U0
	90	[2283]	GETTABLE 	R1 R1 K4 ; R1 := R1["VoidTearTracker"]
	91	[2283]	GETTABLE 	R1 R1 K18 ; R1 := R1[0x6336d9f3]
	92	[2283]	GETUPVAL 	R2 U2 ; R2 := U2
	93	[2283]	GETTABLE 	R2 R2 K17 ; R2 := R2["Tint"]
	94	[2283]	CALL     	R1 2 1 ; R1(R2)
	95	[2284]	GETUPVAL 	R1 U0 ; R1 := U0
	96	[2284]	GETTABLE 	R1 R1 K4 ; R1 := R1["VoidTearTracker"]
	97	[2284]	GETTABLE 	R1 R1 K19 ; R1 := R1[0x504f8bdc]
	98	[2284]	GETUPVAL 	R2 U2 ; R2 := U2
	99	[2284]	GETTABLE 	R2 R2 K17 ; R2 := R2["Tint"]
	100	[2284]	CALL     	R1 2 1 ; R1(R2)
	101	[2285]	GETUPVAL 	R1 U0 ; R1 := U0
	102	[2285]	GETTABLE 	R1 R1 K4 ; R1 := R1["VoidTearTracker"]
	103	[2285]	GETTABLE 	R1 R1 K20 ; R1 := R1[0x7922f872]
	104	[2285]	GETUPVAL 	R2 U2 ; R2 := U2
	105	[2285]	GETTABLE 	R2 R2 K17 ; R2 := R2["Tint"]
	106	[2285]	CALL     	R1 2 1 ; R1(R2)
	107	[2286]	GETUPVAL 	R1 U0 ; R1 := U0
	108	[2286]	GETTABLE 	R1 R1 K4 ; R1 := R1["VoidTearTracker"]
	109	[2286]	GETTABLE 	R1 R1 K21 ; R1 := R1[0x36b539cc]
	110	[2286]	GETUPVAL 	R2 U2 ; R2 := U2
	111	[2286]	GETTABLE 	R2 R2 K17 ; R2 := R2["Tint"]
	112	[2286]	CALL     	R1 2 1 ; R1(R2)
	113	[2288]	GETUPVAL 	R1 U2 ; R1 := U2
	114	[2288]	GETTABLE 	R1 R1 K22 ; R1 := R1["IconSize"]
	115	[2288]	EQ       	1 R1 K2 ; if R1 == nil then PC := 123
	116	[2288]	JMP      	123 ; PC := 123
	117	[2289]	GETUPVAL 	R1 U0 ; R1 := U0
	118	[2289]	GETTABLE 	R1 R1 K4 ; R1 := R1["VoidTearTracker"]
	119	[2289]	GETTABLE 	R1 R1 K23 ; R1 := R1[0x8412c0d2]
	120	[2289]	GETUPVAL 	R2 U2 ; R2 := U2
	121	[2289]	GETTABLE 	R2 R2 K22 ; R2 := R2["IconSize"]
	122	[2289]	CALL     	R1 2 1 ; R1(R2)
	123	[2293]	GETUPVAL 	R1 U0 ; R1 := U0
	124	[2293]	GETTABLE 	R1 R1 K4 ; R1 := R1["VoidTearTracker"]
	125	[2293]	GETTABLE 	R1 R1 K24 ; R1 := R1[0x900fe191]
	126	[2293]	GETGLOBAL	R2 K25 ; R2 := 0xae91e43b
	127	[2293]	SELF     	R2 R2 K26 ; R3 := R2; R2 := R2[0x42b04007]
	128	[2293]	LOADK    	R4 K27 ; R4 := "/Lotus/Language/Menu/ProgressXOfY"
	129	[2293]	OP_LOADBOOL	R5 1 0 ; R5 := true
	130	[2293]	NEWTABLE 	R6 0 2 ; R6 := {}
	131	[2293]	GETTABLE 	R7 R0 K29 ; R7 := R0["Curr"]
	132	[2293]	SETTABLE 	R6 K28 R7 ; R6["CURRENT"] := R7
	133	[2293]	GETTABLE 	R7 R0 K31 ; R7 := R0["Total"]
	134	[2293]	SETTABLE 	R6 K30 R7 ; R6["TOTAL"] := R7
	135	[2293]	CALL     	R2 5 0 ; R2,... := R2(R3,R4,R5,R6)
	136	[2293]	CALL     	R1 0 1 ; R1(R2,...)
	137	[2294]	GETTABLE 	R1 R0 K31 ; R1 := R0["Total"]
	138	[2294]	LT       	0 K32 R1 ; if 0.000000 >= R1 then PC := 147
	139	[2294]	JMP      	147 ; PC := 147
	140	[2295]	GETUPVAL 	R1 U0 ; R1 := U0
	141	[2295]	GETTABLE 	R1 R1 K4 ; R1 := R1["VoidTearTracker"]
	142	[2295]	GETTABLE 	R1 R1 K33 ; R1 := R1[0x8550d2a7]
	143	[2295]	GETTABLE 	R2 R0 K29 ; R2 := R0["Curr"]
	144	[2295]	GETTABLE 	R3 R0 K31 ; R3 := R0["Total"]
	145	[2295]	DIV      	R2 R2 R3 ; R2 := R2 / R3
	146	[2295]	CALL     	R1 2 1 ; R1(R2)
	147	[2298]	RETURN   	R0 1 ; return 

function #99 <?:2300,2352> (164 instructions, 656 bytes at 0000021131A2CB60)
0 params, 11 slots, 4 upvalues, 0 locals, 38 constants, 0 functions
	1	[2301]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[2301]	GETTABLE 	R0 R0 K1 ; R0 := R0["GreedWagerProgress"]
	3	[2303]	TEST     	R0 0 ; if not R0 then PC := 164
	4	[2303]	JMP      	164 ; PC := 164
	5	[2304]	LOADNIL  	R1 R1 ; R1 := nil
	6	[2305]	GETGLOBAL	R2 K2 ; R2 := 0xae91e43b
	7	[2305]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0x42b04007]
	8	[2305]	LOADK    	R4 K4 ; R4 := "/Lotus/Language/Game/PveGreedCarryingPoints"
	9	[2305]	OP_LOADBOOL	R5 1 0 ; R5 := true
	10	[2305]	NEWTABLE 	R6 0 1 ; R6 := {}
	11	[2305]	GETTABLE 	R7 R0 K6 ; R7 := R0["Carrying"]
	12	[2305]	SETTABLE 	R6 K5 R7 ; R6["val"] := R7
	13	[2305]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	14	[2306]	GETTABLE 	R3 R0 K7 ; R3 := R0["NoGoal"]
	15	[2306]	TEST     	R3 0 ; if not R3 then PC := 19
	16	[2306]	JMP      	19 ; PC := 19
	17	[2307]	MOVE     	R1 R2 ; R1 := R2
	18	[2307]	JMP      	39 ; PC := 39
	19	[2309]	GETTABLE 	R3 R0 K8 ; R3 := R0["Completed"]
	20	[2309]	TEST     	R3 1 ; if R3 then PC := 34
	21	[2309]	JMP      	34 ; PC := 34
	22	[2310]	GETGLOBAL	R3 K2 ; R3 := 0xae91e43b
	23	[2310]	SELF     	R3 R3 K3 ; R4 := R3; R3 := R3[0x42b04007]
	24	[2310]	LOADK    	R5 K9 ; R5 := "/Lotus/Language/Menu/ProgressXOfY"
	25	[2310]	OP_LOADBOOL	R6 1 0 ; R6 := true
	26	[2310]	NEWTABLE 	R7 0 2 ; R7 := {}
	27	[2310]	GETTABLE 	R8 R0 K11 ; R8 := R0["Curr"]
	28	[2310]	SETTABLE 	R7 K10 R8 ; R7["CURRENT"] := R8
	29	[2310]	GETTABLE 	R8 R0 K13 ; R8 := R0["Total"]
	30	[2310]	SETTABLE 	R7 K12 R8 ; R7["TOTAL"] := R8
	31	[2310]	CALL     	R3 5 2 ; R3 := R3(R4,R5,R6,R7)
	32	[2310]	MOVE     	R1 R3 ; R1 := R3
	33	[2310]	JMP      	35 ; PC := 35
	34	[2312]	GETTABLE 	R1 R0 K14 ; R1 := R0["CompletedText"]
	35	[2314]	MOVE     	R3 R1 ; R3 := R1
	36	[2314]	LOADK    	R4 K15 ; R4 := "\r\n"
	37	[2314]	MOVE     	R5 R2 ; R5 := R2
	38	[2314]	CONCAT   	R1 R3 R5 ; R1 := R3 .. R4 .. R5
	39	[2316]	GETTABLE 	R3 R0 K16 ; R3 := R0["Bonus"]
	40	[2316]	LT       	0 K17 R3 ; if 0.000000 >= R3 then PC := 55
	41	[2316]	JMP      	55 ; PC := 55
	42	[2317]	LOADK    	R3 K15 ; R3 := "\r\n"
	43	[2317]	GETGLOBAL	R4 K2 ; R4 := 0xae91e43b
	44	[2317]	SELF     	R4 R4 K3 ; R5 := R4; R4 := R4[0x42b04007]
	45	[2317]	LOADK    	R6 K18 ; R6 := "/Lotus/Language/Game/PveGreedCarryingBonus"
	46	[2317]	OP_LOADBOOL	R7 1 0 ; R7 := true
	47	[2317]	NEWTABLE 	R8 0 1 ; R8 := {}
	48	[2317]	GETTABLE 	R9 R0 K16 ; R9 := R0["Bonus"]
	49	[2317]	SETTABLE 	R8 K5 R9 ; R8["val"] := R9
	50	[2317]	CALL     	R4 5 2 ; R4 := R4(R5,R6,R7,R8)
	51	[2317]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	52	[2318]	MOVE     	R4 R1 ; R4 := R1
	53	[2318]	MOVE     	R5 R3 ; R5 := R3
	54	[2318]	CONCAT   	R1 R4 R5 ; R1 := R4 .. R5
	55	[2321]	GETUPVAL 	R4 U0 ; R4 := U0
	56	[2321]	GETTABLE 	R4 R4 K19 ; R4 := R4["VoidTearTracker"]
	57	[2321]	EQ       	0 R4 K20 ; if R4 ~= nil then PC := 69
	58	[2321]	JMP      	69 ; PC := 69
	59	[2322]	GETUPVAL 	R4 U0 ; R4 := U0
	60	[2322]	GETUPVAL 	R5 U1 ; R5 := U1
	61	[2322]	LOADK    	R6 K21 ; R6 := "HRVoidTear"
	62	[2322]	GETUPVAL 	R7 U2 ; R7 := U2
	63	[2322]	GETTABLE 	R7 R7 K22 ; R7 := R7["HT_PROGRESS_BAR"]
	64	[2322]	LOADK    	R8 := 0.500000
	65	[2322]	LOADK    	R9 := 1.000000
	66	[2322]	OP_LOADBOOL	R10 0 0 ; R10 := false
	67	[2322]	CALL     	R5 6 2 ; R5 := R5(R6,R7,R8,R9,R10)
	68	[2322]	SETTABLE 	R4 K19 R5 ; R4["VoidTearTracker"] := R5
	69	[2325]	GETUPVAL 	R4 U3 ; R4 := U3
	70	[2325]	GETTABLE 	R4 R4 K23 ; R4 := R4["UpdateOverrides"]
	71	[2325]	TEST     	R4 0 ; if not R4 then PC := 125
	72	[2325]	JMP      	125 ; PC := 125
	73	[2326]	GETUPVAL 	R4 U3 ; R4 := U3
	74	[2326]	SETTABLE 	R4 K23 K20 ; R4["UpdateOverrides"] := nil
	75	[2327]	GETUPVAL 	R4 U0 ; R4 := U0
	76	[2327]	GETTABLE 	R4 R4 K19 ; R4 := R4["VoidTearTracker"]
	77	[2327]	GETTABLE 	R4 R4 K24 ; R4 := R4[0x3f8a850c]
	78	[2327]	GETUPVAL 	R5 U3 ; R5 := U3
	79	[2327]	GETTABLE 	R5 R5 K25 ; R5 := R5["Message"]
	80	[2327]	CALL     	R4 2 1 ; R4(R5)
	81	[2328]	GETUPVAL 	R4 U0 ; R4 := U0
	82	[2328]	GETTABLE 	R4 R4 K19 ; R4 := R4["VoidTearTracker"]
	83	[2328]	GETTABLE 	R4 R4 K26 ; R4 := R4[0x89c1fa33]
	84	[2328]	GETUPVAL 	R5 U3 ; R5 := U3
	85	[2328]	GETTABLE 	R5 R5 K27 ; R5 := R5["Icon"]
	86	[2328]	CALL     	R4 2 1 ; R4(R5)
	87	[2329]	GETUPVAL 	R4 U3 ; R4 := U3
	88	[2329]	GETTABLE 	R4 R4 K28 ; R4 := R4["Tint"]
	89	[2329]	EQ       	1 R4 K20 ; if R4 == nil then PC := 115
	90	[2329]	JMP      	115 ; PC := 115
	91	[2330]	GETUPVAL 	R4 U0 ; R4 := U0
	92	[2330]	GETTABLE 	R4 R4 K19 ; R4 := R4["VoidTearTracker"]
	93	[2330]	GETTABLE 	R4 R4 K29 ; R4 := R4[0x6336d9f3]
	94	[2330]	GETUPVAL 	R5 U3 ; R5 := U3
	95	[2330]	GETTABLE 	R5 R5 K28 ; R5 := R5["Tint"]
	96	[2330]	CALL     	R4 2 1 ; R4(R5)
	97	[2331]	GETUPVAL 	R4 U0 ; R4 := U0
	98	[2331]	GETTABLE 	R4 R4 K19 ; R4 := R4["VoidTearTracker"]
	99	[2331]	GETTABLE 	R4 R4 K30 ; R4 := R4[0x504f8bdc]
	100	[2331]	GETUPVAL 	R5 U3 ; R5 := U3
	101	[2331]	GETTABLE 	R5 R5 K28 ; R5 := R5["Tint"]
	102	[2331]	CALL     	R4 2 1 ; R4(R5)
	103	[2332]	GETUPVAL 	R4 U0 ; R4 := U0
	104	[2332]	GETTABLE 	R4 R4 K19 ; R4 := R4["VoidTearTracker"]
	105	[2332]	GETTABLE 	R4 R4 K31 ; R4 := R4[0x7922f872]
	106	[2332]	GETUPVAL 	R5 U3 ; R5 := U3
	107	[2332]	GETTABLE 	R5 R5 K28 ; R5 := R5["Tint"]
	108	[2332]	CALL     	R4 2 1 ; R4(R5)
	109	[2333]	GETUPVAL 	R4 U0 ; R4 := U0
	110	[2333]	GETTABLE 	R4 R4 K19 ; R4 := R4["VoidTearTracker"]
	111	[2333]	GETTABLE 	R4 R4 K32 ; R4 := R4[0x36b539cc]
	112	[2333]	GETUPVAL 	R5 U3 ; R5 := U3
	113	[2333]	GETTABLE 	R5 R5 K28 ; R5 := R5["Tint"]
	114	[2333]	CALL     	R4 2 1 ; R4(R5)
	115	[2335]	GETUPVAL 	R4 U3 ; R4 := U3
	116	[2335]	GETTABLE 	R4 R4 K33 ; R4 := R4["IconSize"]
	117	[2335]	EQ       	1 R4 K20 ; if R4 == nil then PC := 125
	118	[2335]	JMP      	125 ; PC := 125
	119	[2336]	GETUPVAL 	R4 U0 ; R4 := U0
	120	[2336]	GETTABLE 	R4 R4 K19 ; R4 := R4["VoidTearTracker"]
	121	[2336]	GETTABLE 	R4 R4 K34 ; R4 := R4[0x8412c0d2]
	122	[2336]	GETUPVAL 	R5 U3 ; R5 := U3
	123	[2336]	GETTABLE 	R5 R5 K33 ; R5 := R5["IconSize"]
	124	[2336]	CALL     	R4 2 1 ; R4(R5)
	125	[2340]	GETTABLE 	R4 R0 K8 ; R4 := R0["Completed"]
	126	[2340]	TEST     	R4 1 ; if R4 then PC := 139
	127	[2340]	JMP      	139 ; PC := 139
	128	[2340]	GETTABLE 	R4 R0 K7 ; R4 := R0["NoGoal"]
	129	[2340]	TEST     	R4 1 ; if R4 then PC := 139
	130	[2340]	JMP      	139 ; PC := 139
	131	[2341]	GETUPVAL 	R4 U0 ; R4 := U0
	132	[2341]	GETTABLE 	R4 R4 K19 ; R4 := R4["VoidTearTracker"]
	133	[2341]	GETTABLE 	R4 R4 K35 ; R4 := R4[0x8550d2a7]
	134	[2341]	GETTABLE 	R5 R0 K11 ; R5 := R0["Curr"]
	135	[2341]	GETTABLE 	R6 R0 K13 ; R6 := R0["Total"]
	136	[2341]	DIV      	R5 R5 R6 ; R5 := R5 / R6
	137	[2341]	CALL     	R4 2 1 ; R4(R5)
	138	[2341]	JMP      	144 ; PC := 144
	139	[2343]	GETUPVAL 	R4 U0 ; R4 := U0
	140	[2343]	GETTABLE 	R4 R4 K19 ; R4 := R4["VoidTearTracker"]
	141	[2343]	GETTABLE 	R4 R4 K35 ; R4 := R4[0x8550d2a7]
	142	[2343]	LOADK    	R5 := 1.000000
	143	[2343]	CALL     	R4 2 1 ; R4(R5)
	144	[2345]	GETTABLE 	R4 R0 K7 ; R4 := R0["NoGoal"]
	145	[2345]	TEST     	R4 0 ; if not R4 then PC := 159
	146	[2345]	JMP      	159 ; PC := 159
	147	[2346]	GETUPVAL 	R4 U0 ; R4 := U0
	148	[2346]	GETTABLE 	R4 R4 K19 ; R4 := R4["VoidTearTracker"]
	149	[2346]	GETTABLE 	R4 R4 K24 ; R4 := R4[0x3f8a850c]
	150	[2346]	MOVE     	R5 R1 ; R5 := R1
	151	[2346]	LOADK    	R6 := 1.000000
	152	[2346]	CALL     	R4 3 1 ; R4(R5,R6)
	153	[2347]	GETUPVAL 	R4 U0 ; R4 := U0
	154	[2347]	GETTABLE 	R4 R4 K19 ; R4 := R4["VoidTearTracker"]
	155	[2347]	GETTABLE 	R4 R4 K36 ; R4 := R4[0x900fe191]
	156	[2347]	LOADK    	R5 K37 ; R5 := ""
	157	[2347]	CALL     	R4 2 1 ; R4(R5)
	158	[2347]	JMP      	164 ; PC := 164
	159	[2349]	GETUPVAL 	R4 U0 ; R4 := U0
	160	[2349]	GETTABLE 	R4 R4 K19 ; R4 := R4["VoidTearTracker"]
	161	[2349]	GETTABLE 	R4 R4 K36 ; R4 := R4[0x900fe191]
	162	[2349]	MOVE     	R5 R1 ; R5 := R1
	163	[2349]	CALL     	R4 2 1 ; R4(R5)
	164	[2352]	RETURN   	R0 1 ; return 

function #100 <?:2354,2391> (100 instructions, 400 bytes at 0000021125315670)
2 params, 12 slots, 8 upvalues, 0 locals, 25 constants, 0 functions
	1	[2355]	GETGLOBAL	R2 K0 ; R2 := 0x0032441c
	2	[2355]	GETTABLE 	R2 R2 K1 ; R2 := R2["StalkerMode"]
	3	[2355]	TEST     	R2 0 ; if not R2 then PC := 6
	4	[2355]	JMP      	6 ; PC := 6
	5	[2356]	RETURN   	R0 1 ; return 
	6	[2359]	GETUPVAL 	R2 U0 ; R2 := U0
	7	[2359]	GETTABLE 	R2 R2 K2 ; R2 := R2["UIMode"]
	8	[2359]	GETUPVAL 	R3 U1 ; R3 := U1
	9	[2359]	GETTABLE 	R3 R3 K3 ; R3 := R3["UI_MODE_IN_DOJO"]
	10	[2359]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 84
	11	[2359]	JMP      	84 ; PC := 84
	12	[2360]	SELF     	R2 R0 K4 ; R3 := R0; R2 := R0[0xe79e7ef4]
	13	[2360]	CALL     	R2 2 2 ; R2 := R2(R3)
	14	[2361]	LOADNIL  	R3 R3 ; R3 := nil
	15	[2362]	GETGLOBAL	R4 K5 ; R4 := 0x7b998233
	16	[2362]	MOVE     	R5 R2 ; R5 := R2
	17	[2362]	CALL     	R4 2 2 ; R4 := R4(R5)
	18	[2362]	TEST     	R4 1 ; if R4 then PC := 37
	19	[2362]	JMP      	37 ; PC := 37
	20	[2363]	GETGLOBAL	R4 K6 ; R4 := 0x64fb1586
	21	[2363]	SELF     	R5 R2 K7 ; R6 := R2; R5 := R2[0x109d46aa]
	22	[2363]	CALL     	R5 2 0 ; R5,... := R5(R6)
	23	[2363]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	24	[2364]	EQ       	1 R4 K8 ; if R4 == "" then PC := 32
	25	[2364]	JMP      	32 ; PC := 32
	26	[2365]	GETGLOBAL	R5 K9 ; R5 := 0xae91e43b
	27	[2365]	SELF     	R5 R5 K10 ; R6 := R5; R5 := R5[0x42b04007]
	28	[2365]	MOVE     	R7 R4 ; R7 := R4
	29	[2365]	OP_LOADBOOL	R8 0 0 ; R8 := false
	30	[2365]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	31	[2365]	MOVE     	R3 R5 ; R3 := R5
	32	[2368]	GETUPVAL 	R5 U2 ; R5 := U2
	33	[2368]	SELF     	R5 R5 K11 ; R6 := R5; R5 := R5[0xc63157a6]
	34	[2368]	SELF     	R7 R2 K12 ; R8 := R2; R7 := R2[0x4aecf89f]
	35	[2368]	CALL     	R7 2 0 ; R7,... := R7(R8)
	36	[2368]	CALL     	R5 0 1 ; R5(R6,...)
	37	[2371]	TEST     	R3 0 ; if not R3 then PC := 72
	38	[2371]	JMP      	72 ; PC := 72
	39	[2372]	GETGLOBAL	R5 K5 ; R5 := 0x7b998233
	40	[2372]	GETGLOBAL	R6 K13 ; R6 := _T
	41	[2372]	GETTABLE 	R6 R6 K14 ; R6 := R6["DojoRoomTracker"]
	42	[2372]	CALL     	R5 2 2 ; R5 := R5(R6)
	43	[2372]	TEST     	R5 0 ; if not R5 then PC := 65
	44	[2372]	JMP      	65 ; PC := 65
	45	[2373]	GETGLOBAL	R5 K13 ; R5 := _T
	46	[2373]	GETUPVAL 	R6 U3 ; R6 := U3
	47	[2373]	LOADK    	R7 K15 ; R7 := "DojoRoomLabel"
	48	[2373]	GETUPVAL 	R8 U1 ; R8 := U1
	49	[2373]	GETTABLE 	R8 R8 K16 ; R8 := R8["HT_PROGRESS_BAR"]
	50	[2373]	LOADK    	R9 K17 ; R9 := 0.200000
	51	[2373]	LOADNIL  	R10 R10 ; R10 := nil
	52	[2373]	OP_LOADBOOL	R11 0 0 ; R11 := false
	53	[2373]	CALL     	R6 6 2 ; R6 := R6(R7,R8,R9,R10,R11)
	54	[2373]	SETTABLE 	R5 K14 R6 ; R5["DojoRoomTracker"] := R6
	55	[2375]	GETGLOBAL	R5 K13 ; R5 := _T
	56	[2375]	GETTABLE 	R5 R5 K14 ; R5 := R5["DojoRoomTracker"]
	57	[2375]	GETTABLE 	R5 R5 K18 ; R5 := R5[0x3f8a850c]
	58	[2375]	LOADK    	R6 K8 ; R6 := ""
	59	[2375]	CALL     	R5 2 1 ; R5(R6)
	60	[2376]	GETGLOBAL	R5 K13 ; R5 := _T
	61	[2376]	GETTABLE 	R5 R5 K14 ; R5 := R5["DojoRoomTracker"]
	62	[2376]	GETTABLE 	R5 R5 K19 ; R5 := R5[0x8550d2a7]
	63	[2376]	LOADK    	R6 := -1.000000
	64	[2376]	CALL     	R5 2 1 ; R5(R6)
	65	[2378]	GETGLOBAL	R5 K13 ; R5 := _T
	66	[2378]	GETTABLE 	R5 R5 K14 ; R5 := R5["DojoRoomTracker"]
	67	[2378]	GETTABLE 	R5 R5 K20 ; R5 := R5[0x900fe191]
	68	[2378]	MOVE     	R6 R3 ; R6 := R3
	69	[2378]	LOADK    	R7 := 1.000000
	70	[2378]	CALL     	R5 3 1 ; R5(R6,R7)
	71	[2378]	JMP      	84 ; PC := 84
	72	[2379]	GETGLOBAL	R5 K5 ; R5 := 0x7b998233
	73	[2379]	GETGLOBAL	R6 K13 ; R6 := _T
	74	[2379]	GETTABLE 	R6 R6 K14 ; R6 := R6["DojoRoomTracker"]
	75	[2379]	CALL     	R5 2 2 ; R5 := R5(R6)
	76	[2379]	TEST     	R5 1 ; if R5 then PC := 84
	77	[2379]	JMP      	84 ; PC := 84
	78	[2380]	GETUPVAL 	R5 U4 ; R5 := U4
	79	[2380]	GETGLOBAL	R6 K13 ; R6 := _T
	80	[2380]	GETTABLE 	R6 R6 K14 ; R6 := R6["DojoRoomTracker"]
	81	[2380]	CALL     	R5 2 1 ; R5(R6)
	82	[2381]	GETGLOBAL	R5 K13 ; R5 := _T
	83	[2381]	SETTABLE 	R5 K14 K21 ; R5["DojoRoomTracker"] := nil
	84	[2385]	GETGLOBAL	R5 K13 ; R5 := _T
	85	[2385]	GETTABLE 	R5 R5 K22 ; R5 := R5["VoidTearProgress"]
	86	[2385]	TEST     	R5 1 ; if R5 then PC := 92
	87	[2385]	JMP      	92 ; PC := 92
	88	[2385]	GETUPVAL 	R5 U5 ; R5 := U5
	89	[2385]	GETTABLE 	R5 R5 K23 ; R5 := R5["VoidTearTracker"]
	90	[2385]	EQ       	1 R5 K21 ; if R5 == nil then PC := 94
	91	[2385]	JMP      	94 ; PC := 94
	92	[2386]	GETUPVAL 	R5 U6 ; R5 := U6
	93	[2386]	CALL     	R5 1 1 ; R5()
	94	[2388]	GETGLOBAL	R5 K13 ; R5 := _T
	95	[2388]	GETTABLE 	R5 R5 K24 ; R5 := R5["GreedWagerProgress"]
	96	[2388]	TEST     	R5 0 ; if not R5 then PC := 100
	97	[2388]	JMP      	100 ; PC := 100
	98	[2389]	GETUPVAL 	R5 U7 ; R5 := U7
	99	[2389]	CALL     	R5 1 1 ; R5()
	100	[2391]	RETURN   	R0 1 ; return 

function #101 <?:2393,2432> (134 instructions, 536 bytes at 0000021191FF00F0)
0 params, 33 slots, 2 upvalues, 0 locals, 25 constants, 0 functions
	1	[2394]	GETGLOBAL	R0 K0 ; R0 := 0x76ea806b
	2	[2394]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x3f3ae64c]
	3	[2394]	LOADK    	R2 := 0.000000
	4	[2394]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	5	[2396]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	6	[2396]	MOVE     	R2 R0 ; R2 := R0
	7	[2396]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[2396]	TEST     	R1 0 ; if not R1 then PC := 11
	9	[2396]	JMP      	11 ; PC := 11
	10	[2397]	RETURN   	R0 1 ; return 
	11	[2400]	SELF     	R1 R0 K3 ; R2 := R0; R1 := R0[0x40e9c32b]
	12	[2400]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[2400]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x21278581]
	14	[2400]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[2401]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	16	[2401]	GETUPVAL 	R3 U0 ; R3 := U0
	17	[2401]	CALL     	R2 2 2 ; R2 := R2(R3)
	18	[2401]	TEST     	R2 1 ; if R2 then PC := 134
	19	[2401]	JMP      	134 ; PC := 134
	20	[2402]	GETUPVAL 	R2 U0 ; R2 := U0
	21	[2402]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0xf2deaf69]
	22	[2402]	GETGLOBAL	R4 K6 ; R4 := 0x5e5216e2
	23	[2402]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	24	[2402]	TEST     	R2 1 ; if R2 then PC := 32
	25	[2402]	JMP      	32 ; PC := 32
	26	[2402]	GETUPVAL 	R2 U0 ; R2 := U0
	27	[2402]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0xf2deaf69]
	28	[2402]	GETGLOBAL	R4 K7 ; R4 := gLotusMoaPetAvatarType
	29	[2402]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	30	[2402]	TEST     	R2 0 ; if not R2 then PC := 134
	31	[2402]	JMP      	134 ; PC := 134
	32	[2403]	GETUPVAL 	R2 U0 ; R2 := U0
	33	[2403]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0xc1595bd5]
	34	[2403]	GETGLOBAL	R4 K9 ; R4 := 0x53d05c5a
	35	[2403]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	36	[2404]	GETGLOBAL	R3 K10 ; R3 := 0xc8802016
	37	[2404]	MOVE     	R4 R2 ; R4 := R2
	38	[2404]	CALL     	R3 2 4 ; R3,R4,R5 := R3(R4)
	39	[2404]	JMP      	42 ; PC := 42
	40	[2405]	SELF     	R8 R7 K11 ; R9 := R7; R8 := R7[0xa2880940]
	41	[2405]	CALL     	R8 2 1 ; R8(R9)
	42	[2404]	TFORLOOP 	R3 2 ; R6,R7 := R3(R4,R5); if R6 ~= nil then begin PC = 40; R5 := R6 end
	43	[2405]	JMP      	40 ; PC := 40
	44	[2407]	GETUPVAL 	R8 U0 ; R8 := U0
	45	[2407]	SELF     	R8 R8 K8 ; R9 := R8; R8 := R8[0xc1595bd5]
	46	[2407]	GETGLOBAL	R10 K12 ; R10 := 0x36c594be
	47	[2407]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	48	[2407]	MOVE     	R2 R8 ; R2 := R8
	49	[2408]	GETGLOBAL	R8 K10 ; R8 := 0xc8802016
	50	[2408]	MOVE     	R9 R2 ; R9 := R2
	51	[2408]	CALL     	R8 2 4 ; R8,R9,R10 := R8(R9)
	52	[2408]	JMP      	55 ; PC := 55
	53	[2409]	SELF     	R13 R12 K11 ; R14 := R12; R13 := R12[0xa2880940]
	54	[2409]	CALL     	R13 2 1 ; R13(R14)
	55	[2408]	TFORLOOP 	R8 2 ; R11,R12 := R8(R9,R10); if R11 ~= nil then begin PC = 53; R10 := R11 end
	56	[2409]	JMP      	53 ; PC := 53
	57	[2411]	GETUPVAL 	R13 U0 ; R13 := U0
	58	[2411]	SELF     	R13 R13 K8 ; R14 := R13; R13 := R13[0xc1595bd5]
	59	[2411]	GETGLOBAL	R15 K13 ; R15 := 0x53f71da0
	60	[2411]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	61	[2411]	MOVE     	R2 R13 ; R2 := R13
	62	[2412]	GETGLOBAL	R13 K10 ; R13 := 0xc8802016
	63	[2412]	MOVE     	R14 R2 ; R14 := R2
	64	[2412]	CALL     	R13 2 4 ; R13,R14,R15 := R13(R14)
	65	[2412]	JMP      	68 ; PC := 68
	66	[2413]	SELF     	R18 R17 K11 ; R19 := R17; R18 := R17[0xa2880940]
	67	[2413]	CALL     	R18 2 1 ; R18(R19)
	68	[2412]	TFORLOOP 	R13 2 ; R16,R17 := R13(R14,R15); if R16 ~= nil then begin PC = 66; R15 := R16 end
	69	[2413]	JMP      	66 ; PC := 66
	70	[2415]	GETUPVAL 	R18 U0 ; R18 := U0
	71	[2415]	SELF     	R18 R18 K8 ; R19 := R18; R18 := R18[0xc1595bd5]
	72	[2415]	GETGLOBAL	R20 K14 ; R20 := 0x7dd50d71
	73	[2415]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	74	[2415]	MOVE     	R2 R18 ; R2 := R18
	75	[2416]	GETGLOBAL	R18 K10 ; R18 := 0xc8802016
	76	[2416]	MOVE     	R19 R2 ; R19 := R2
	77	[2416]	CALL     	R18 2 4 ; R18,R19,R20 := R18(R19)
	78	[2416]	JMP      	81 ; PC := 81
	79	[2417]	SELF     	R23 R22 K11 ; R24 := R22; R23 := R22[0xa2880940]
	80	[2417]	CALL     	R23 2 1 ; R23(R24)
	81	[2416]	TFORLOOP 	R18 2 ; R21,R22 := R18(R19,R20); if R21 ~= nil then begin PC = 79; R20 := R21 end
	82	[2417]	JMP      	79 ; PC := 79
	83	[2420]	TEST     	R1 0 ; if not R1 then PC := 134
	84	[2420]	JMP      	134 ; PC := 134
	85	[2421]	GETUPVAL 	R23 U0 ; R23 := U0
	86	[2421]	SELF     	R23 R23 K5 ; R24 := R23; R23 := R23[0xf2deaf69]
	87	[2421]	GETGLOBAL	R25 K7 ; R25 := gLotusMoaPetAvatarType
	88	[2421]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	89	[2421]	TEST     	R23 0 ; if not R23 then PC := 113
	90	[2421]	JMP      	113 ; PC := 113
	91	[2422]	GETUPVAL 	R23 U1 ; R23 := U1
	92	[2422]	GETTABLE 	R23 R23 K15 ; R23 := R23[0x06d055f9]
	93	[2422]	GETUPVAL 	R24 U0 ; R24 := U0
	94	[2422]	SELF     	R24 R24 K5 ; R25 := R24; R24 := R24[0xf2deaf69]
	95	[2422]	GETGLOBAL	R26 K16 ; R26 := 0x375efbff
	96	[2422]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	97	[2422]	GETGLOBAL	R25 K14 ; R25 := 0x7dd50d71
	98	[2422]	GETGLOBAL	R26 K13 ; R26 := 0x53f71da0
	99	[2422]	CALL     	R23 4 2 ; R23 := R23(R24,R25,R26)
	100	[2423]	GETUPVAL 	R24 U0 ; R24 := U0
	101	[2423]	SELF     	R24 R24 K17 ; R25 := R24; R24 := R24[0x47901f07]
	102	[2423]	MOVE     	R26 R23 ; R26 := R23
	103	[2423]	GETGLOBAL	R27 K18 ; R27 := 0x0469f296
	104	[2423]	LOADK    	R28 K19 ; R28 := "GAME_C1_GUN1"
	105	[2423]	CALL     	R27 2 2 ; R27 := R27(R28)
	106	[2423]	GETGLOBAL	R28 K20 ; R28 := 0xa421af95
	107	[2423]	LOADK    	R29 := 0.000000
	108	[2423]	LOADK    	R30 K21 ; R30 := 0.300000
	109	[2423]	LOADK    	R31 := 0.000000
	110	[2423]	CALL     	R28 4 0 ; R28,... := R28(R29,R30,R31)
	111	[2423]	CALL     	R24 0 1 ; R24(R25,...)
	112	[2423]	JMP      	134 ; PC := 134
	113	[2425]	GETUPVAL 	R24 U1 ; R24 := U1
	114	[2425]	GETTABLE 	R24 R24 K15 ; R24 := R24[0x06d055f9]
	115	[2425]	GETUPVAL 	R25 U0 ; R25 := U0
	116	[2425]	SELF     	R25 R25 K5 ; R26 := R25; R25 := R25[0xf2deaf69]
	117	[2425]	GETGLOBAL	R27 K22 ; R27 := 0x27c4bd31
	118	[2425]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	119	[2425]	GETGLOBAL	R26 K9 ; R26 := 0x53d05c5a
	120	[2425]	GETGLOBAL	R27 K12 ; R27 := 0x36c594be
	121	[2425]	CALL     	R24 4 2 ; R24 := R24(R25,R26,R27)
	122	[2426]	GETUPVAL 	R25 U0 ; R25 := U0
	123	[2426]	SELF     	R25 R25 K17 ; R26 := R25; R25 := R25[0x47901f07]
	124	[2426]	MOVE     	R27 R24 ; R27 := R24
	125	[2426]	GETGLOBAL	R28 K18 ; R28 := 0x0469f296
	126	[2426]	LOADK    	R29 K23 ; R29 := "GAME_C1_HEAD1"
	127	[2426]	CALL     	R28 2 2 ; R28 := R28(R29)
	128	[2426]	GETGLOBAL	R29 K20 ; R29 := 0xa421af95
	129	[2426]	LOADK    	R30 := 0.000000
	130	[2426]	LOADK    	R31 K24 ; R31 := 0.400000
	131	[2426]	LOADK    	R32 := 0.000000
	132	[2426]	CALL     	R29 4 0 ; R29,... := R29(R30,R31,R32)
	133	[2426]	CALL     	R25 0 1 ; R25(R26,...)
	134	[2432]	RETURN   	R0 1 ; return 

function #102 <?:2434,2500> (192 instructions, 768 bytes at 00000211304F2E70)
6 params, 28 slots, 1 upvalue, 0 locals, 30 constants, 0 functions
	1	[2436]	GETUPVAL 	R6 U0 ; R6 := U0
	2	[2436]	GETTABLE 	R6 R6 R0 ; R6 := R6[R0]
	3	[2436]	EQ       	0 R6 K0 ; if R6 ~= nil then PC := 16
	4	[2436]	JMP      	16 ; PC := 16
	5	[2437]	GETUPVAL 	R6 U0 ; R6 := U0
	6	[2437]	NEWTABLE 	R7 0 3 ; R7 := {}
	7	[2437]	SETTABLE 	R7 K1 R1 ; R7["ClipName"] := R1
	8	[2437]	SETTABLE 	R7 K2 K3 ; R7["NumClips"] := 1.000000
	9	[2437]	GETGLOBAL	R8 K5 ; R8 := 0xae91e43b
	10	[2437]	SELF     	R8 R8 K6 ; R9 := R8; R8 := R8[0x91a24e4b]
	11	[2437]	MOVE     	R10 R1 ; R10 := R1
	12	[2437]	LOADK    	R11 := 5.000000
	13	[2437]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	14	[2437]	SETTABLE 	R7 K4 R8 ; R7["BaseScale"] := R8
	15	[2437]	SETTABLE 	R6 R0 R7 ; R6[R0] := R7
	16	[2440]	GETGLOBAL	R6 K7 ; R6 := 0x5bced4c4
	17	[2440]	GETTABLE 	R6 R6 K8 ; R6 := R6[0xb62ecfe0]
	18	[2440]	LOADK    	R7 := 1.000000
	19	[2440]	GETGLOBAL	R8 K7 ; R8 := 0x5bced4c4
	20	[2440]	GETTABLE 	R8 R8 K9 ; R8 := R8[0x99675e23]
	21	[2440]	GETGLOBAL	R9 K7 ; R9 := 0x5bced4c4
	22	[2440]	GETTABLE 	R9 R9 K10 ; R9 := R9[0xae22009d]
	23	[2440]	ADD      	R10 R2 K3 ; R10 := R2 + 1.000000
	24	[2440]	CALL     	R9 2 0 ; R9,... := R9(R10)
	25	[2440]	CALL     	R8 0 0 ; R8,... := R8(R9,...)
	26	[2440]	CALL     	R6 0 2 ; R6 := R6(R7,...)
	27	[2441]	GETUPVAL 	R7 U0 ; R7 := U0
	28	[2441]	GETTABLE 	R7 R7 R0 ; R7 := R7[R0]
	29	[2442]	GETTABLE 	R8 R7 K2 ; R8 := R7["NumClips"]
	30	[2442]	LT       	0 R8 R6 ; if R8 >= R6 then PC := 49
	31	[2442]	JMP      	49 ; PC := 49
	32	[2443]	GETTABLE 	R8 R7 K2 ; R8 := R7["NumClips"]
	33	[2443]	ADD      	R8 R8 K3 ; R8 := R8 + 1.000000
	34	[2443]	MOVE     	R9 R6 ; R9 := R6
	35	[2443]	LOADK    	R10 := 1.000000
	36	[2443]	FORPREP  	R8 47 ; R8 -= R10; PC := 47
	37	[2444]	GETGLOBAL	R12 K11 ; R12 := 0x38f10e85
	38	[2444]	GETGLOBAL	R13 K5 ; R13 := 0xae91e43b
	39	[2444]	MOVE     	R14 R1 ; R14 := R1
	40	[2444]	LOADK    	R15 K12 ; R15 := ".Container.Digit1.duplicateMovieClip"
	41	[2444]	CONCAT   	R14 R14 R15 ; R14 := R14 .. R15
	42	[2444]	LOADK    	R15 K13 ; R15 := "Digit"
	43	[2444]	MOVE     	R16 R11 ; R16 := R11
	44	[2444]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	45	[2444]	ADD      	R16 K14 R11 ; R16 := 500.000000 + R11
	46	[2444]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	47	[2443]	FORLOOP  	R8 37 ; R8 += R10; if R8 <= R9 then begin PC := 37; R11 := R8 end
	48	[2447]	SETTABLE 	R7 K2 R6 ; R7["NumClips"] := R6
	49	[2450]	LOADK    	R12 := 0.000000
	50	[2451]	LOADK    	R13 := 1.000000
	51	[2451]	GETTABLE 	R14 R7 K2 ; R14 := R7["NumClips"]
	52	[2451]	LOADK    	R15 := 1.000000
	53	[2451]	FORPREP  	R13 118 ; R13 -= R15; PC := 118
	54	[2452]	MOVE     	R17 R1 ; R17 := R1
	55	[2452]	LOADK    	R18 K15 ; R18 := ".Container.Digit"
	56	[2452]	MOVE     	R19 R16 ; R19 := R16
	57	[2452]	CONCAT   	R17 R17 R19 ; R17 := R17 .. R18 .. R19
	58	[2453]	LE       	0 R16 R6 ; if R16 > R6 then PC := 112
	59	[2453]	JMP      	112 ; PC := 112
	60	[2454]	LOADK    	R18 := 0.000000
	61	[2455]	TEST     	R5 0 ; if not R5 then PC := 65
	62	[2455]	JMP      	65 ; PC := 65
	63	[2456]	LOADK    	R18 := 10.000000
	64	[2456]	JMP      	75 ; PC := 75
	65	[2458]	GETGLOBAL	R19 K7 ; R19 := 0x5bced4c4
	66	[2458]	GETTABLE 	R19 R19 K16 ; R19 := R19[0x55f27c30]
	67	[2458]	GETGLOBAL	R20 K7 ; R20 := 0x5bced4c4
	68	[2458]	GETTABLE 	R20 R20 K17 ; R20 := R20[0xa40531d8]
	69	[2458]	LOADK    	R21 := 10.000000
	70	[2458]	SUB      	R22 R16 K3 ; R22 := R16 - 1.000000
	71	[2458]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	72	[2458]	DIV      	R20 R2 R20 ; R20 := R2 / R20
	73	[2458]	CALL     	R19 2 2 ; R19 := R19(R20)
	74	[2458]	MOD      	R18 R19 K18 ; R18 := R19 % 10.000000
	75	[2460]	GETGLOBAL	R19 K11 ; R19 := 0x38f10e85
	76	[2460]	GETGLOBAL	R20 K5 ; R20 := 0xae91e43b
	77	[2460]	MOVE     	R21 R17 ; R21 := R17
	78	[2460]	LOADK    	R22 K19 ; R22 := ".gotoAndStop"
	79	[2460]	CONCAT   	R21 R21 R22 ; R21 := R21 .. R22
	80	[2460]	LOADK    	R22 := 1.000000
	81	[2460]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	82	[2461]	GETGLOBAL	R19 K11 ; R19 := 0x38f10e85
	83	[2461]	GETGLOBAL	R20 K5 ; R20 := 0xae91e43b
	84	[2461]	MOVE     	R21 R17 ; R21 := R17
	85	[2461]	LOADK    	R22 K19 ; R22 := ".gotoAndStop"
	86	[2461]	CONCAT   	R21 R21 R22 ; R21 := R21 .. R22
	87	[2461]	ADD      	R22 R18 K3 ; R22 := R18 + 1.000000
	88	[2461]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	89	[2462]	GETGLOBAL	R19 K5 ; R19 := 0xae91e43b
	90	[2462]	SELF     	R19 R19 K20 ; R20 := R19; R19 := R19[0x67bc869f]
	91	[2462]	MOVE     	R21 R17 ; R21 := R17
	92	[2462]	LOADK    	R22 := 10.000000
	93	[2462]	LOADK    	R23 := 100.000000
	94	[2462]	CALL     	R19 5 1 ; R19(R20,R21,R22,R23)
	95	[2464]	GETGLOBAL	R19 K5 ; R19 := 0xae91e43b
	96	[2464]	SELF     	R19 R19 K20 ; R20 := R19; R19 := R19[0x67bc869f]
	97	[2464]	MOVE     	R21 R17 ; R21 := R17
	98	[2464]	LOADK    	R22 := 0.000000
	99	[2464]	MOVE     	R23 R12 ; R23 := R12
	100	[2464]	CALL     	R19 5 1 ; R19(R20,R21,R22,R23)
	101	[2465]	EQ       	0 R18 K3 ; if R18 ~= 1.000000 then PC := 109
	102	[2465]	JMP      	109 ; PC := 109
	103	[2465]	GETGLOBAL	R19 K21 ; R19 := 0x804cc764
	104	[2465]	EQ       	1 R19 K22 ; if R19 == 0.000000 then PC := 109
	105	[2465]	JMP      	109 ; PC := 109
	106	[2466]	GETGLOBAL	R19 K21 ; R19 := 0x804cc764
	107	[2466]	SUB      	R12 R12 R19 ; R12 := R12 - R19
	108	[2466]	JMP      	118 ; PC := 118
	109	[2468]	GETGLOBAL	R19 K23 ; R19 := 0xa5c9ed93
	110	[2468]	SUB      	R12 R12 R19 ; R12 := R12 - R19
	111	[2469]	JMP      	118 ; PC := 118
	112	[2471]	GETGLOBAL	R19 K5 ; R19 := 0xae91e43b
	113	[2471]	SELF     	R19 R19 K20 ; R20 := R19; R19 := R19[0x67bc869f]
	114	[2471]	MOVE     	R21 R17 ; R21 := R17
	115	[2471]	LOADK    	R22 := 10.000000
	116	[2471]	LOADK    	R23 := 0.000000
	117	[2471]	CALL     	R19 5 1 ; R19(R20,R21,R22,R23)
	118	[2451]	FORLOOP  	R13 54 ; R13 += R15; if R13 <= R14 then begin PC := 54; R16 := R13 end
	119	[2475]	UNM      	R12 R12 ; R12 := ^ R12
	120	[2476]	LOADK    	R19 := 0.000000
	121	[2477]	EQ       	1 R4 K0 ; if R4 == nil then PC := 172
	122	[2477]	JMP      	172 ; PC := 172
	123	[2478]	LT       	0 R4 R12 ; if R4 >= R12 then PC := 153
	124	[2478]	JMP      	153 ; PC := 153
	125	[2479]	DIV      	R20 R4 R12 ; R20 := R4 / R12
	126	[2479]	MUL      	R20 K24 R20 ; R20 := 100.000000 * R20
	127	[2480]	MOVE     	R12 R4 ; R12 := R4
	128	[2481]	GETGLOBAL	R21 K5 ; R21 := 0xae91e43b
	129	[2481]	SELF     	R21 R21 K20 ; R22 := R21; R21 := R21[0x67bc869f]
	130	[2481]	MOVE     	R23 R1 ; R23 := R1
	131	[2481]	LOADK    	R24 := 5.000000
	132	[2481]	MOVE     	R25 R20 ; R25 := R20
	133	[2481]	CALL     	R21 5 1 ; R21(R22,R23,R24,R25)
	134	[2482]	GETGLOBAL	R21 K5 ; R21 := 0xae91e43b
	135	[2482]	SELF     	R21 R21 K20 ; R22 := R21; R21 := R21[0x67bc869f]
	136	[2482]	MOVE     	R23 R1 ; R23 := R1
	137	[2482]	LOADK    	R24 := 6.000000
	138	[2482]	MOVE     	R25 R20 ; R25 := R20
	139	[2482]	CALL     	R21 5 1 ; R21(R22,R23,R24,R25)
	140	[2484]	GETTABLE 	R21 R7 K4 ; R21 := R7["BaseScale"]
	141	[2484]	DIV      	R21 R20 R21 ; R21 := R20 / R21
	142	[2485]	GETGLOBAL	R22 K5 ; R22 := 0xae91e43b
	143	[2485]	SELF     	R22 R22 K25 ; R23 := R22; R22 := R22[0xf64b7262]
	144	[2485]	MOVE     	R24 R1 ; R24 := R1
	145	[2485]	LOADK    	R25 K26 ; R25 := "Container"
	146	[2485]	LOADK    	R26 := 1.000000
	147	[2485]	SUB      	R27 K3 R21 ; R27 := 1.000000 - R21
	148	[2485]	MUL      	R27 K27 R27 ; R27 := 46.000000 * R27
	149	[2485]	CALL     	R22 6 1 ; R22(R23,R24,R25,R26,R27)
	150	[2486]	SUB      	R22 K3 R21 ; R22 := 1.000000 - R21
	151	[2486]	MUL      	R19 K28 R22 ; R19 := 28.000000 * R22
	152	[2486]	JMP      	172 ; PC := 172
	153	[2488]	GETGLOBAL	R22 K5 ; R22 := 0xae91e43b
	154	[2488]	SELF     	R22 R22 K20 ; R23 := R22; R22 := R22[0x67bc869f]
	155	[2488]	MOVE     	R24 R1 ; R24 := R1
	156	[2488]	LOADK    	R25 := 5.000000
	157	[2488]	GETTABLE 	R26 R7 K4 ; R26 := R7["BaseScale"]
	158	[2488]	CALL     	R22 5 1 ; R22(R23,R24,R25,R26)
	159	[2489]	GETGLOBAL	R22 K5 ; R22 := 0xae91e43b
	160	[2489]	SELF     	R22 R22 K20 ; R23 := R22; R22 := R22[0x67bc869f]
	161	[2489]	MOVE     	R24 R1 ; R24 := R1
	162	[2489]	LOADK    	R25 := 6.000000
	163	[2489]	GETTABLE 	R26 R7 K4 ; R26 := R7["BaseScale"]
	164	[2489]	CALL     	R22 5 1 ; R22(R23,R24,R25,R26)
	165	[2490]	GETGLOBAL	R22 K5 ; R22 := 0xae91e43b
	166	[2490]	SELF     	R22 R22 K25 ; R23 := R22; R22 := R22[0xf64b7262]
	167	[2490]	MOVE     	R24 R1 ; R24 := R1
	168	[2490]	LOADK    	R25 K26 ; R25 := "Container"
	169	[2490]	LOADK    	R26 := 1.000000
	170	[2490]	LOADK    	R27 := 0.000000
	171	[2490]	CALL     	R22 6 1 ; R22(R23,R24,R25,R26,R27)
	172	[2494]	EQ       	0 R3 K3 ; if R3 ~= 1.000000 then PC := 179
	173	[2494]	JMP      	179 ; PC := 179
	174	[2495]	GETGLOBAL	R22 K23 ; R22 := 0xa5c9ed93
	175	[2495]	SUB      	R23 R6 K3 ; R23 := R6 - 1.000000
	176	[2495]	MUL      	R22 R22 R23 ; R22 := R22 * R23
	177	[2495]	DIV      	R22 R22 K29 ; R22 := R22 / 2.000000
	178	[2495]	ADD      	R19 R22 R19 ; R19 := R22 + R19
	179	[2497]	GETGLOBAL	R22 K5 ; R22 := 0xae91e43b
	180	[2497]	SELF     	R22 R22 K25 ; R23 := R22; R22 := R22[0xf64b7262]
	181	[2497]	MOVE     	R24 R1 ; R24 := R1
	182	[2497]	LOADK    	R25 K26 ; R25 := "Container"
	183	[2497]	LOADK    	R26 := 0.000000
	184	[2497]	MOVE     	R27 R19 ; R27 := R19
	185	[2497]	CALL     	R22 6 1 ; R22(R23,R24,R25,R26,R27)
	186	[2499]	MOVE     	R22 R6 ; R22 := R6
	187	[2499]	GETGLOBAL	R23 K23 ; R23 := 0xa5c9ed93
	188	[2499]	SUB      	R24 R6 K3 ; R24 := R6 - 1.000000
	189	[2499]	MUL      	R23 R23 R24 ; R23 := R23 * R24
	190	[2499]	SUB      	R23 R19 R23 ; R23 := R19 - R23
	191	[2499]	RETURN   	R22 3 ; return R22, R23 
	192	[2500]	RETURN   	R0 1 ; return 

function #103 <?:2502,2672> (662 instructions, 2648 bytes at 000002111AE9F360)
0 params, 53 slots, 9 upvalues, 0 locals, 88 constants, 0 functions
	1	[2503]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[2503]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[2503]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[2503]	TEST     	R0 0 ; if not R0 then PC := 7
	5	[2503]	JMP      	7 ; PC := 7
	6	[2504]	RETURN   	R0 1 ; return 
	7	[2507]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	8	[2507]	GETUPVAL 	R1 U1 ; R1 := U1
	9	[2507]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[2507]	TEST     	R0 1 ; if R0 then PC := 25
	11	[2507]	JMP      	25 ; PC := 25
	12	[2508]	GETUPVAL 	R0 U1 ; R0 := U1
	13	[2508]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xf4ed1581]
	14	[2508]	CALL     	R0 2 2 ; R0 := R0(R1)
	15	[2509]	GETUPVAL 	R1 U2 ; R1 := U2
	16	[2509]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 25
	17	[2509]	JMP      	25 ; PC := 25
	18	[2510]	SETUPVAL 	R0 U2 ; U2 := R0
	19	[2511]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	20	[2511]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xaade900e]
	21	[2511]	LOADK    	R3 K4 ; R3 := "MiniMapContainer.MapBorders"
	22	[2511]	LOADK    	R4 := 11.000000
	23	[2511]	NOT      	R5 R0 ; R5 := not R0
	24	[2511]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	25	[2515]	GETGLOBAL	R1 K5 ; R1 := 0xe72d2edb
	26	[2515]	EQ       	1 R1 K7 ; if R1 == 1.000000 then PC := 93
	27	[2515]	JMP      	93 ; PC := 93
	28	[2515]	GETUPVAL 	R1 U3 ; R1 := U3
	29	[2515]	GETGLOBAL	R2 K8 ; R2 := 0x34291f5c
	30	[2515]	GETTABLE 	R2 R2 K9 ; R2 := R2[0x1467d5f4]
	31	[2515]	CALL     	R2 1 2 ; R2 := R2()
	32	[2515]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 93
	33	[2515]	JMP      	93 ; PC := 93
	34	[2516]	GETGLOBAL	R1 K8 ; R1 := 0x34291f5c
	35	[2516]	GETTABLE 	R1 R1 K9 ; R1 := R1[0x1467d5f4]
	36	[2516]	CALL     	R1 1 2 ; R1 := R1()
	37	[2516]	SETUPVAL 	R1 U3 ; U3 := R1
	38	[2518]	LOADK    	R1 K10 ; R1 := "MoaComponent.SummonMoa"
	39	[2519]	GETGLOBAL	R2 K5 ; R2 := 0xe72d2edb
	40	[2519]	EQ       	0 R2 K11 ; if R2 ~= 3.000000 then PC := 43
	41	[2519]	JMP      	43 ; PC := 43
	42	[2520]	LOADK    	R1 K12 ; R1 := "StancePanel.StanceComponent.Stance"
	43	[2522]	MOVE     	R2 R1 ; R2 := R1
	44	[2522]	LOADK    	R3 K13 ; R3 := "2"
	45	[2522]	CONCAT   	R2 R2 R3 ; R2 := R2 .. R3
	46	[2523]	MOVE     	R3 R1 ; R3 := R1
	47	[2523]	LOADK    	R4 K14 ; R4 := "1"
	48	[2523]	CONCAT   	R1 R3 R4 ; R1 := R3 .. R4
	49	[2525]	GETGLOBAL	R3 K2 ; R3 := 0xae91e43b
	50	[2525]	SELF     	R3 R3 K15 ; R4 := R3; R3 := R3[0x91a24e4b]
	51	[2525]	MOVE     	R5 R1 ; R5 := R1
	52	[2525]	LOADK    	R6 := 0.000000
	53	[2525]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	54	[2526]	GETGLOBAL	R4 K2 ; R4 := 0xae91e43b
	55	[2526]	SELF     	R4 R4 K15 ; R5 := R4; R4 := R4[0x91a24e4b]
	56	[2526]	MOVE     	R6 R2 ; R6 := R2
	57	[2526]	LOADK    	R7 := 0.000000
	58	[2526]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	59	[2527]	GETGLOBAL	R5 K2 ; R5 := 0xae91e43b
	60	[2527]	SELF     	R5 R5 K16 ; R6 := R5; R5 := R5[0x67bc869f]
	61	[2527]	MOVE     	R7 R1 ; R7 := R1
	62	[2527]	LOADK    	R8 := 0.000000
	63	[2527]	MOVE     	R9 R4 ; R9 := R4
	64	[2527]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	65	[2528]	GETGLOBAL	R5 K2 ; R5 := 0xae91e43b
	66	[2528]	SELF     	R5 R5 K16 ; R6 := R5; R5 := R5[0x67bc869f]
	67	[2528]	MOVE     	R7 R2 ; R7 := R2
	68	[2528]	LOADK    	R8 := 0.000000
	69	[2528]	MOVE     	R9 R3 ; R9 := R3
	70	[2528]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	71	[2530]	GETGLOBAL	R5 K2 ; R5 := 0xae91e43b
	72	[2530]	SELF     	R5 R5 K15 ; R6 := R5; R5 := R5[0x91a24e4b]
	73	[2530]	MOVE     	R7 R1 ; R7 := R1
	74	[2530]	LOADK    	R8 := 1.000000
	75	[2530]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	76	[2531]	GETGLOBAL	R6 K2 ; R6 := 0xae91e43b
	77	[2531]	SELF     	R6 R6 K15 ; R7 := R6; R6 := R6[0x91a24e4b]
	78	[2531]	MOVE     	R8 R2 ; R8 := R2
	79	[2531]	LOADK    	R9 := 1.000000
	80	[2531]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	81	[2532]	GETGLOBAL	R7 K2 ; R7 := 0xae91e43b
	82	[2532]	SELF     	R7 R7 K16 ; R8 := R7; R7 := R7[0x67bc869f]
	83	[2532]	MOVE     	R9 R1 ; R9 := R1
	84	[2532]	LOADK    	R10 := 1.000000
	85	[2532]	MOVE     	R11 R6 ; R11 := R6
	86	[2532]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	87	[2533]	GETGLOBAL	R7 K2 ; R7 := 0xae91e43b
	88	[2533]	SELF     	R7 R7 K16 ; R8 := R7; R7 := R7[0x67bc869f]
	89	[2533]	MOVE     	R9 R2 ; R9 := R2
	90	[2533]	LOADK    	R10 := 1.000000
	91	[2533]	MOVE     	R11 R5 ; R11 := R5
	92	[2533]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	93	[2536]	GETGLOBAL	R7 K17 ; R7 := _T
	94	[2536]	GETTABLE 	R7 R7 K18 ; R7 := R7["CustomHudHealth"]
	95	[2536]	TEST     	R7 1 ; if R7 then PC := 104
	96	[2536]	JMP      	104 ; PC := 104
	97	[2536]	GETGLOBAL	R7 K19 ; R7 := 0x5bced4c4
	98	[2536]	GETTABLE 	R7 R7 K20 ; R7 := R7[0xb62ecfe0]
	99	[2536]	LOADK    	R8 := 0.000000
	100	[2536]	GETUPVAL 	R9 U0 ; R9 := U0
	101	[2536]	SELF     	R9 R9 K21 ; R10 := R9; R9 := R9[0x614c860a]
	102	[2536]	CALL     	R9 2 0 ; R9,... := R9(R10)
	103	[2536]	CALL     	R7 0 2 ; R7 := R7(R8,...)
	104	[2537]	GETGLOBAL	R8 K5 ; R8 := 0xe72d2edb
	105	[2537]	EQ       	0 R8 K7 ; if R8 ~= 1.000000 then PC := 245
	106	[2537]	JMP      	245 ; PC := 245
	107	[2538]	GETUPVAL 	R8 U4 ; R8 := U4
	108	[2538]	GETTABLE 	R8 R8 K22 ; R8 := R8["Health"]
	109	[2538]	EQ       	1 R7 R8 ; if R7 == R8 then PC := 148
	110	[2538]	JMP      	148 ; PC := 148
	111	[2539]	GETUPVAL 	R8 U4 ; R8 := U4
	112	[2539]	SETTABLE 	R8 K22 R7 ; R8["Health"] := R7
	113	[2540]	GETUPVAL 	R8 U5 ; R8 := U5
	114	[2540]	LOADK    	R9 K22 ; R9 := "Health"
	115	[2540]	LOADK    	R10 K23 ; R10 := "HealthAndShield.PlayerHealth"
	116	[2540]	MOVE     	R11 R7 ; R11 := R7
	117	[2540]	GETGLOBAL	R12 K17 ; R12 := _T
	118	[2540]	GETTABLE 	R12 R12 K24 ; R12 := R12["CustomHudHealthOffset"]
	119	[2540]	TEST     	R12 1 ; if R12 then PC := 122
	120	[2540]	JMP      	122 ; PC := 122
	121	[2540]	LOADK    	R12 := 1.000000
	122	[2540]	LOADK    	R13 := 72.000000
	123	[2540]	CALL     	R8 6 1 ; R8(R9,R10,R11,R12,R13)
	124	[2542]	GETUPVAL 	R8 U0 ; R8 := U0
	125	[2542]	SELF     	R8 R8 K25 ; R9 := R8; R8 := R8[0x52cd594a]
	126	[2542]	CALL     	R8 2 2 ; R8 := R8(R9)
	127	[2543]	MUL      	R9 R8 K26 ; R9 := R8 * 59.000000
	128	[2543]	SUB      	R9 K27 R9 ; R9 := 60.000000 - R9
	129	[2544]	GETGLOBAL	R10 K28 ; R10 := 0x38f10e85
	130	[2544]	GETGLOBAL	R11 K2 ; R11 := 0xae91e43b
	131	[2544]	LOADK    	R12 K29 ; R12 := "HealthAndShield.Player.gotoAndStop"
	132	[2544]	MOVE     	R13 R9 ; R13 := R9
	133	[2544]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	134	[2545]	GETGLOBAL	R10 K2 ; R10 := 0xae91e43b
	135	[2545]	SELF     	R10 R10 K16 ; R11 := R10; R10 := R10[0x67bc869f]
	136	[2545]	LOADK    	R12 K30 ; R12 := "HealthAndShield.Player.Health"
	137	[2545]	LOADK    	R13 := 9.000000
	138	[2545]	GETUPVAL 	R14 U6 ; R14 := U6
	139	[2545]	GETTABLE 	R14 R14 K22 ; R14 := R14["Health"]
	140	[2545]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	141	[2546]	GETGLOBAL	R10 K2 ; R10 := 0xae91e43b
	142	[2546]	SELF     	R10 R10 K16 ; R11 := R10; R10 := R10[0x67bc869f]
	143	[2546]	LOADK    	R12 K31 ; R12 := "HealthAndShield.Player.Bg"
	144	[2546]	LOADK    	R13 := 9.000000
	145	[2546]	GETUPVAL 	R14 U6 ; R14 := U6
	146	[2546]	GETTABLE 	R14 R14 K32 ; R14 := R14["UnselectedAbility"]
	147	[2546]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	148	[2550]	GETGLOBAL	R10 K0 ; R10 := 0x7b998233
	149	[2550]	GETUPVAL 	R11 U7 ; R11 := U7
	150	[2550]	GETTABLE 	R11 R11 K33 ; R11 := R11["ActivePowerSuit"]
	151	[2550]	CALL     	R10 2 2 ; R10 := R10(R11)
	152	[2550]	TEST     	R10 1 ; if R10 then PC := 205
	153	[2550]	JMP      	205 ; PC := 205
	154	[2551]	GETUPVAL 	R10 U7 ; R10 := U7
	155	[2551]	GETTABLE 	R10 R10 K33 ; R10 := R10["ActivePowerSuit"]
	156	[2551]	SELF     	R10 R10 K34 ; R11 := R10; R10 := R10[0x58a4d5ac]
	157	[2551]	CALL     	R10 2 2 ; R10 := R10(R11)
	158	[2552]	GETGLOBAL	R11 K19 ; R11 := 0x5bced4c4
	159	[2552]	GETTABLE 	R11 R11 K35 ; R11 := R11[0xac1b386a]
	160	[2552]	DIV      	R12 R10 K36 ; R12 := R10 / 25.000000
	161	[2552]	CALL     	R11 2 2 ; R11 := R11(R12)
	162	[2553]	GETUPVAL 	R12 U4 ; R12 := U4
	163	[2553]	GETTABLE 	R12 R12 K37 ; R12 := R12["GrenadeCount"]
	164	[2553]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 205
	165	[2553]	JMP      	205 ; PC := 205
	166	[2554]	GETUPVAL 	R12 U4 ; R12 := U4
	167	[2554]	SETTABLE 	R12 K37 R11 ; R12["GrenadeCount"] := R11
	168	[2555]	LOADK    	R12 := 1.000000
	169	[2555]	LOADK    	R13 := 4.000000
	170	[2555]	LOADK    	R14 := 1.000000
	171	[2555]	FORPREP  	R12 204 ; R12 -= R14; PC := 204
	172	[2556]	LE       	1 R15 R11 ; if R15 <= R11 then PC := 175
	173	[2556]	JMP      	175 ; PC := 175
	174	[2556]	OP_LOADBOOL	R16 0 1 ; R16 := false; PC := 175
	175	[2556]	OP_LOADBOOL	R16 1 0 ; R16 := true
	176	[2557]	GETGLOBAL	R17 K2 ; R17 := 0xae91e43b
	177	[2557]	SELF     	R17 R17 K38 ; R18 := R17; R17 := R17[0xf64b7262]
	178	[2557]	LOADK    	R19 K39 ; R19 := "GrenadeComponent.Grenade"
	179	[2557]	MOVE     	R20 R15 ; R20 := R15
	180	[2557]	CONCAT   	R19 R19 R20 ; R19 := R19 .. R20
	181	[2557]	LOADK    	R20 K40 ; R20 := "Fill"
	182	[2557]	LOADK    	R21 := 9.000000
	183	[2557]	GETUPVAL 	R22 U8 ; R22 := U8
	184	[2557]	GETTABLE 	R22 R22 K41 ; R22 := R22[0x06d055f9]
	185	[2557]	MOVE     	R23 R16 ; R23 := R16
	186	[2557]	LOADK    	R24 K42 ; R24 := 15844670.000000
	187	[2557]	LOADK    	R25 K43 ; R25 := 16777215.000000
	188	[2557]	CALL     	R22 4 0 ; R22,... := R22(R23,R24,R25)
	189	[2557]	CALL     	R17 0 1 ; R17(R18,...)
	190	[2558]	GETGLOBAL	R17 K2 ; R17 := 0xae91e43b
	191	[2558]	SELF     	R17 R17 K38 ; R18 := R17; R17 := R17[0xf64b7262]
	192	[2558]	LOADK    	R19 K39 ; R19 := "GrenadeComponent.Grenade"
	193	[2558]	MOVE     	R20 R15 ; R20 := R15
	194	[2558]	CONCAT   	R19 R19 R20 ; R19 := R19 .. R20
	195	[2558]	LOADK    	R20 K40 ; R20 := "Fill"
	196	[2558]	LOADK    	R21 := 10.000000
	197	[2558]	GETUPVAL 	R22 U8 ; R22 := U8
	198	[2558]	GETTABLE 	R22 R22 K41 ; R22 := R22[0x06d055f9]
	199	[2558]	MOVE     	R23 R16 ; R23 := R16
	200	[2558]	LOADK    	R24 := 100.000000
	201	[2558]	LOADK    	R25 := 10.000000
	202	[2558]	CALL     	R22 4 0 ; R22,... := R22(R23,R24,R25)
	203	[2558]	CALL     	R17 0 1 ; R17(R18,...)
	204	[2555]	FORLOOP  	R12 172 ; R12 += R14; if R12 <= R13 then begin PC := 172; R15 := R12 end
	205	[2564]	GETGLOBAL	R17 K0 ; R17 := 0x7b998233
	206	[2564]	GETUPVAL 	R18 U7 ; R18 := U7
	207	[2564]	GETTABLE 	R18 R18 K33 ; R18 := R18["ActivePowerSuit"]
	208	[2564]	CALL     	R17 2 2 ; R17 := R17(R18)
	209	[2564]	TEST     	R17 1 ; if R17 then PC := 662
	210	[2564]	JMP      	662 ; PC := 662
	211	[2565]	GETUPVAL 	R17 U4 ; R17 := U4
	212	[2565]	GETTABLE 	R17 R17 K44 ; R17 := R17["CoverAbility"]
	213	[2565]	EQ       	0 R17 K45 ; if R17 ~= nil then PC := 222
	214	[2565]	JMP      	222 ; PC := 222
	215	[2566]	GETUPVAL 	R17 U4 ; R17 := U4
	216	[2566]	GETUPVAL 	R18 U7 ; R18 := U7
	217	[2566]	GETTABLE 	R18 R18 K33 ; R18 := R18["ActivePowerSuit"]
	218	[2566]	SELF     	R18 R18 K46 ; R19 := R18; R18 := R18[0xdaddfb73]
	219	[2566]	LOADK    	R20 := 1.000000
	220	[2566]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	221	[2566]	SETTABLE 	R17 K44 R18 ; R17["CoverAbility"] := R18
	222	[2569]	GETGLOBAL	R17 K0 ; R17 := 0x7b998233
	223	[2569]	GETUPVAL 	R18 U4 ; R18 := U4
	224	[2569]	GETTABLE 	R18 R18 K44 ; R18 := R18["CoverAbility"]
	225	[2569]	CALL     	R17 2 2 ; R17 := R17(R18)
	226	[2569]	TEST     	R17 1 ; if R17 then PC := 662
	227	[2569]	JMP      	662 ; PC := 662
	228	[2570]	GETUPVAL 	R17 U4 ; R17 := U4
	229	[2570]	GETTABLE 	R17 R17 K44 ; R17 := R17["CoverAbility"]
	230	[2570]	SELF     	R17 R17 K47 ; R18 := R17; R17 := R17[0xf8975e8e]
	231	[2570]	CALL     	R17 2 2 ; R17 := R17(R18)
	232	[2570]	NOT      	R17 R17 ; R17 := not R17
	233	[2571]	GETGLOBAL	R18 K2 ; R18 := 0xae91e43b
	234	[2571]	SELF     	R18 R18 K16 ; R19 := R18; R18 := R18[0x67bc869f]
	235	[2571]	LOADK    	R20 K48 ; R20 := "CoverPanel.Cover"
	236	[2571]	LOADK    	R21 := 10.000000
	237	[2571]	GETUPVAL 	R22 U8 ; R22 := U8
	238	[2571]	GETTABLE 	R22 R22 K41 ; R22 := R22[0x06d055f9]
	239	[2571]	MOVE     	R23 R17 ; R23 := R17
	240	[2571]	LOADK    	R24 := 100.000000
	241	[2571]	LOADK    	R25 := 30.000000
	242	[2571]	CALL     	R22 4 0 ; R22,... := R22(R23,R24,R25)
	243	[2571]	CALL     	R18 0 1 ; R18(R19,...)
	244	[2573]	JMP      	662 ; PC := 662
	245	[2574]	GETGLOBAL	R18 K5 ; R18 := 0xe72d2edb
	246	[2574]	EQ       	0 R18 K11 ; if R18 ~= 3.000000 then PC := 431
	247	[2574]	JMP      	431 ; PC := 431
	248	[2575]	GETUPVAL 	R18 U0 ; R18 := U0
	249	[2575]	SELF     	R18 R18 K49 ; R19 := R18; R18 := R18[0x1ac1655c]
	250	[2575]	CALL     	R18 2 2 ; R18 := R18(R19)
	251	[2576]	GETGLOBAL	R19 K17 ; R19 := _T
	252	[2576]	GETTABLE 	R19 R19 K18 ; R19 := R19["CustomHudHealth"]
	253	[2576]	TEST     	R19 1 ; if R19 then PC := 257
	254	[2576]	JMP      	257 ; PC := 257
	255	[2576]	SELF     	R19 R18 K50 ; R20 := R18; R19 := R18[0xd127117d]
	256	[2576]	CALL     	R19 2 2 ; R19 := R19(R20)
	257	[2578]	GETUPVAL 	R20 U4 ; R20 := U4
	258	[2578]	GETTABLE 	R20 R20 K22 ; R20 := R20["Health"]
	259	[2578]	EQ       	1 R7 R20 ; if R7 == R20 then PC := 302
	260	[2578]	JMP      	302 ; PC := 302
	261	[2579]	GETUPVAL 	R20 U4 ; R20 := U4
	262	[2579]	SETTABLE 	R20 K22 R7 ; R20["Health"] := R7
	263	[2580]	GETUPVAL 	R20 U5 ; R20 := U5
	264	[2580]	LOADK    	R21 K22 ; R21 := "Health"
	265	[2580]	LOADK    	R22 K23 ; R22 := "HealthAndShield.PlayerHealth"
	266	[2580]	MOVE     	R23 R7 ; R23 := R7
	267	[2580]	GETGLOBAL	R24 K17 ; R24 := _T
	268	[2580]	GETTABLE 	R24 R24 K24 ; R24 := R24["CustomHudHealthOffset"]
	269	[2580]	TEST     	R24 1 ; if R24 then PC := 272
	270	[2580]	JMP      	272 ; PC := 272
	271	[2580]	LOADK    	R24 := 0.000000
	272	[2580]	LOADK    	R25 := 72.000000
	273	[2580]	CALL     	R20 6 3 ; R20,R21 := R20(R21,R22,R23,R24,R25)
	274	[2581]	GETGLOBAL	R22 K2 ; R22 := 0xae91e43b
	275	[2581]	SELF     	R22 R22 K16 ; R23 := R22; R22 := R22[0x67bc869f]
	276	[2581]	LOADK    	R24 K51 ; R24 := "HealthAndShield.HealthLeafDeco"
	277	[2581]	LOADK    	R25 := 0.000000
	278	[2581]	ADD      	R26 K52 R21 ; R26 := -54.000000 + R21
	279	[2581]	CALL     	R22 5 1 ; R22(R23,R24,R25,R26)
	280	[2583]	GETUPVAL 	R22 U0 ; R22 := U0
	281	[2583]	SELF     	R22 R22 K25 ; R23 := R22; R22 := R22[0x52cd594a]
	282	[2583]	CALL     	R22 2 2 ; R22 := R22(R23)
	283	[2584]	MUL      	R23 R22 K26 ; R23 := R22 * 59.000000
	284	[2584]	SUB      	R23 K27 R23 ; R23 := 60.000000 - R23
	285	[2585]	GETGLOBAL	R24 K28 ; R24 := 0x38f10e85
	286	[2585]	GETGLOBAL	R25 K2 ; R25 := 0xae91e43b
	287	[2585]	LOADK    	R26 K29 ; R26 := "HealthAndShield.Player.gotoAndStop"
	288	[2585]	MOVE     	R27 R23 ; R27 := R23
	289	[2585]	CALL     	R24 4 1 ; R24(R25,R26,R27)
	290	[2586]	GETGLOBAL	R24 K2 ; R24 := 0xae91e43b
	291	[2586]	SELF     	R24 R24 K16 ; R25 := R24; R24 := R24[0x67bc869f]
	292	[2586]	LOADK    	R26 K30 ; R26 := "HealthAndShield.Player.Health"
	293	[2586]	LOADK    	R27 := 9.000000
	294	[2586]	LOADK    	R28 K53 ; R28 := 9150127.000000
	295	[2586]	CALL     	R24 5 1 ; R24(R25,R26,R27,R28)
	296	[2587]	GETGLOBAL	R24 K2 ; R24 := 0xae91e43b
	297	[2587]	SELF     	R24 R24 K16 ; R25 := R24; R24 := R24[0x67bc869f]
	298	[2587]	LOADK    	R26 K31 ; R26 := "HealthAndShield.Player.Bg"
	299	[2587]	LOADK    	R27 := 9.000000
	300	[2587]	LOADK    	R28 K54 ; R28 := 6970169.000000
	301	[2587]	CALL     	R24 5 1 ; R24(R25,R26,R27,R28)
	302	[2589]	GETUPVAL 	R24 U4 ; R24 := U4
	303	[2589]	GETTABLE 	R24 R24 K55 ; R24 := R24["Shield"]
	304	[2589]	EQ       	1 R19 R24 ; if R19 == R24 then PC := 340
	305	[2589]	JMP      	340 ; PC := 340
	306	[2590]	GETUPVAL 	R24 U4 ; R24 := U4
	307	[2590]	SETTABLE 	R24 K55 R19 ; R24["Shield"] := R19
	308	[2591]	GETUPVAL 	R24 U5 ; R24 := U5
	309	[2591]	LOADK    	R25 K55 ; R25 := "Shield"
	310	[2591]	LOADK    	R26 K56 ; R26 := "HealthAndShield.PlayerShield"
	311	[2591]	MOVE     	R27 R19 ; R27 := R19
	312	[2591]	GETGLOBAL	R28 K17 ; R28 := _T
	313	[2591]	GETTABLE 	R28 R28 K24 ; R28 := R28["CustomHudHealthOffset"]
	314	[2591]	TEST     	R28 1 ; if R28 then PC := 317
	315	[2591]	JMP      	317 ; PC := 317
	316	[2591]	LOADK    	R28 := 0.000000
	317	[2591]	LOADK    	R29 := 72.000000
	318	[2591]	CALL     	R24 6 1 ; R24(R25,R26,R27,R28,R29)
	319	[2593]	SELF     	R24 R18 K57 ; R25 := R18; R24 := R18[0xd29b845d]
	320	[2593]	CALL     	R24 2 2 ; R24 := R24(R25)
	321	[2594]	MUL      	R25 R24 K26 ; R25 := R24 * 59.000000
	322	[2594]	SUB      	R25 K27 R25 ; R25 := 60.000000 - R25
	323	[2595]	GETGLOBAL	R26 K28 ; R26 := 0x38f10e85
	324	[2595]	GETGLOBAL	R27 K2 ; R27 := 0xae91e43b
	325	[2595]	LOADK    	R28 K58 ; R28 := "HealthAndShield.PlayerShieldBar.gotoAndStop"
	326	[2595]	MOVE     	R29 R25 ; R29 := R25
	327	[2595]	CALL     	R26 4 1 ; R26(R27,R28,R29)
	328	[2596]	GETGLOBAL	R26 K2 ; R26 := 0xae91e43b
	329	[2596]	SELF     	R26 R26 K16 ; R27 := R26; R26 := R26[0x67bc869f]
	330	[2596]	LOADK    	R28 K59 ; R28 := "HealthAndShield.PlayerShieldBar.Health"
	331	[2596]	LOADK    	R29 := 9.000000
	332	[2596]	LOADK    	R30 K60 ; R30 := 14337426.000000
	333	[2596]	CALL     	R26 5 1 ; R26(R27,R28,R29,R30)
	334	[2597]	GETGLOBAL	R26 K2 ; R26 := 0xae91e43b
	335	[2597]	SELF     	R26 R26 K16 ; R27 := R26; R26 := R26[0x67bc869f]
	336	[2597]	LOADK    	R28 K61 ; R28 := "HealthAndShield.PlayerShieldBar.Bg"
	337	[2597]	LOADK    	R29 := 9.000000
	338	[2597]	LOADK    	R30 K54 ; R30 := 6970169.000000
	339	[2597]	CALL     	R26 5 1 ; R26(R27,R28,R29,R30)
	340	[2600]	GETGLOBAL	R26 K2 ; R26 := 0xae91e43b
	341	[2600]	SELF     	R26 R26 K16 ; R27 := R26; R26 := R26[0x67bc869f]
	342	[2600]	LOADK    	R28 K62 ; R28 := "Reticle.ReticuleLines"
	343	[2600]	LOADK    	R29 := 9.000000
	344	[2600]	LOADK    	R30 K63 ; R30 := 16769169.000000
	345	[2600]	CALL     	R26 5 1 ; R26(R27,R28,R29,R30)
	346	[2601]	GETGLOBAL	R26 K2 ; R26 := 0xae91e43b
	347	[2601]	SELF     	R26 R26 K16 ; R27 := R26; R26 := R26[0x67bc869f]
	348	[2601]	LOADK    	R28 K64 ; R28 := "Reticle.ReticleLeft"
	349	[2601]	LOADK    	R29 := 9.000000
	350	[2601]	LOADK    	R30 K63 ; R30 := 16769169.000000
	351	[2601]	CALL     	R26 5 1 ; R26(R27,R28,R29,R30)
	352	[2602]	GETGLOBAL	R26 K2 ; R26 := 0xae91e43b
	353	[2602]	SELF     	R26 R26 K16 ; R27 := R26; R26 := R26[0x67bc869f]
	354	[2602]	LOADK    	R28 K65 ; R28 := "Reticle.ReticleRight"
	355	[2602]	LOADK    	R29 := 9.000000
	356	[2602]	LOADK    	R30 K63 ; R30 := 16769169.000000
	357	[2602]	CALL     	R26 5 1 ; R26(R27,R28,R29,R30)
	358	[2603]	GETGLOBAL	R26 K2 ; R26 := 0xae91e43b
	359	[2603]	SELF     	R26 R26 K16 ; R27 := R26; R26 := R26[0x67bc869f]
	360	[2603]	LOADK    	R28 K66 ; R28 := "Reticle.Dot"
	361	[2603]	LOADK    	R29 := 9.000000
	362	[2603]	LOADK    	R30 K63 ; R30 := 16769169.000000
	363	[2603]	CALL     	R26 5 1 ; R26(R27,R28,R29,R30)
	364	[2604]	GETGLOBAL	R26 K2 ; R26 := 0xae91e43b
	365	[2604]	SELF     	R26 R26 K16 ; R27 := R26; R26 := R26[0x67bc869f]
	366	[2604]	LOADK    	R28 K67 ; R28 := "Reticle.Arm1.InsideDiamond"
	367	[2604]	LOADK    	R29 := 9.000000
	368	[2604]	LOADK    	R30 K68 ; R30 := 8363959.000000
	369	[2604]	CALL     	R26 5 1 ; R26(R27,R28,R29,R30)
	370	[2606]	GETGLOBAL	R26 K0 ; R26 := 0x7b998233
	371	[2606]	GETUPVAL 	R27 U7 ; R27 := U7
	372	[2606]	GETTABLE 	R27 R27 K33 ; R27 := R27["ActivePowerSuit"]
	373	[2606]	CALL     	R26 2 2 ; R26 := R26(R27)
	374	[2606]	TEST     	R26 1 ; if R26 then PC := 662
	375	[2606]	JMP      	662 ; PC := 662
	376	[2607]	GETUPVAL 	R26 U4 ; R26 := U4
	377	[2607]	GETTABLE 	R26 R26 K69 ; R26 := R26["CustomAbilities"]
	378	[2607]	EQ       	0 R26 K45 ; if R26 ~= nil then PC := 386
	379	[2607]	JMP      	386 ; PC := 386
	380	[2608]	GETUPVAL 	R26 U4 ; R26 := U4
	381	[2608]	GETUPVAL 	R27 U7 ; R27 := U7
	382	[2608]	GETTABLE 	R27 R27 K33 ; R27 := R27["ActivePowerSuit"]
	383	[2608]	SELF     	R27 R27 K70 ; R28 := R27; R27 := R27[0x3c88e434]
	384	[2608]	CALL     	R27 2 2 ; R27 := R27(R28)
	385	[2608]	SETTABLE 	R26 K69 R27 ; R26["CustomAbilities"] := R27
	386	[2611]	GETGLOBAL	R26 K19 ; R26 := 0x5bced4c4
	387	[2611]	GETTABLE 	R26 R26 K35 ; R26 := R26[0xac1b386a]
	388	[2611]	GETUPVAL 	R27 U4 ; R27 := U4
	389	[2611]	GETTABLE 	R27 R27 K69 ; R27 := R27["CustomAbilities"]
	390	[2611]	LEN      	R27 R27 ; R27 := # R27
	391	[2611]	LOADK    	R28 := 3.000000
	392	[2611]	CALL     	R26 3 2 ; R26 := R26(R27,R28)
	393	[2612]	LOADK    	R27 := 1.000000
	394	[2612]	MOVE     	R28 R26 ; R28 := R26
	395	[2612]	LOADK    	R29 := 1.000000
	396	[2612]	FORPREP  	R27 429 ; R27 -= R29; PC := 429
	397	[2613]	GETUPVAL 	R31 U4 ; R31 := U4
	398	[2613]	GETTABLE 	R31 R31 K69 ; R31 := R31["CustomAbilities"]
	399	[2613]	GETTABLE 	R31 R31 R30 ; R31 := R31[R30]
	400	[2613]	SELF     	R31 R31 K71 ; R32 := R31; R31 := R31[0xd8140b94]
	401	[2613]	CALL     	R31 2 2 ; R31 := R31(R32)
	402	[2614]	GETGLOBAL	R32 K2 ; R32 := 0xae91e43b
	403	[2614]	SELF     	R32 R32 K38 ; R33 := R32; R32 := R32[0xf64b7262]
	404	[2614]	LOADK    	R34 K12 ; R34 := "StancePanel.StanceComponent.Stance"
	405	[2614]	MOVE     	R35 R30 ; R35 := R30
	406	[2614]	CONCAT   	R34 R34 R35 ; R34 := R34 .. R35
	407	[2614]	LOADK    	R35 K72 ; R35 := "Icon"
	408	[2614]	LOADK    	R36 := 9.000000
	409	[2614]	GETUPVAL 	R37 U8 ; R37 := U8
	410	[2614]	GETTABLE 	R37 R37 K41 ; R37 := R37[0x06d055f9]
	411	[2614]	MOVE     	R38 R31 ; R38 := R31
	412	[2614]	GETUPVAL 	R39 U4 ; R39 := U4
	413	[2614]	GETTABLE 	R39 R39 K73 ; R39 := R39["TeshinStanceActiveColors"]
	414	[2614]	GETTABLE 	R39 R39 R30 ; R39 := R39[R30]
	415	[2614]	GETUPVAL 	R40 U4 ; R40 := U4
	416	[2614]	GETTABLE 	R40 R40 K74 ; R40 := R40["TeshinStanceInactiveColors"]
	417	[2614]	GETTABLE 	R40 R40 R30 ; R40 := R40[R30]
	418	[2614]	CALL     	R37 4 0 ; R37,... := R37(R38,R39,R40)
	419	[2614]	CALL     	R32 0 1 ; R32(R33,...)
	420	[2615]	GETGLOBAL	R32 K2 ; R32 := 0xae91e43b
	421	[2615]	SELF     	R32 R32 K75 ; R33 := R32; R32 := R32[0xc0a3774b]
	422	[2615]	LOADK    	R34 K12 ; R34 := "StancePanel.StanceComponent.Stance"
	423	[2615]	MOVE     	R35 R30 ; R35 := R30
	424	[2615]	CONCAT   	R34 R34 R35 ; R34 := R34 .. R35
	425	[2615]	LOADK    	R35 K76 ; R35 := "IconGlow"
	426	[2615]	LOADK    	R36 := 11.000000
	427	[2615]	MOVE     	R37 R31 ; R37 := R31
	428	[2615]	CALL     	R32 6 1 ; R32(R33,R34,R35,R36,R37)
	429	[2612]	FORLOOP  	R27 397 ; R27 += R29; if R27 <= R28 then begin PC := 397; R30 := R27 end
	430	[2617]	JMP      	662 ; PC := 662
	431	[2618]	GETGLOBAL	R32 K5 ; R32 := 0xe72d2edb
	432	[2618]	EQ       	0 R32 K77 ; if R32 ~= 2.000000 then PC := 591
	433	[2618]	JMP      	591 ; PC := 591
	434	[2619]	GETUPVAL 	R32 U0 ; R32 := U0
	435	[2619]	SELF     	R32 R32 K49 ; R33 := R32; R32 := R32[0x1ac1655c]
	436	[2619]	CALL     	R32 2 2 ; R32 := R32(R33)
	437	[2620]	GETGLOBAL	R33 K17 ; R33 := _T
	438	[2620]	GETTABLE 	R33 R33 K18 ; R33 := R33["CustomHudHealth"]
	439	[2620]	TEST     	R33 1 ; if R33 then PC := 443
	440	[2620]	JMP      	443 ; PC := 443
	441	[2620]	SELF     	R33 R32 K50 ; R34 := R32; R33 := R32[0xd127117d]
	442	[2620]	CALL     	R33 2 2 ; R33 := R33(R34)
	443	[2622]	GETUPVAL 	R34 U4 ; R34 := U4
	444	[2622]	GETTABLE 	R34 R34 K22 ; R34 := R34["Health"]
	445	[2622]	EQ       	1 R7 R34 ; if R7 == R34 then PC := 482
	446	[2622]	JMP      	482 ; PC := 482
	447	[2623]	GETUPVAL 	R34 U4 ; R34 := U4
	448	[2623]	SETTABLE 	R34 K22 R7 ; R34["Health"] := R7
	449	[2624]	GETUPVAL 	R34 U5 ; R34 := U5
	450	[2624]	LOADK    	R35 K22 ; R35 := "Health"
	451	[2624]	LOADK    	R36 K23 ; R36 := "HealthAndShield.PlayerHealth"
	452	[2624]	MOVE     	R37 R7 ; R37 := R7
	453	[2624]	GETGLOBAL	R38 K17 ; R38 := _T
	454	[2624]	GETTABLE 	R38 R38 K24 ; R38 := R38["CustomHudHealthOffset"]
	455	[2624]	TEST     	R38 1 ; if R38 then PC := 458
	456	[2624]	JMP      	458 ; PC := 458
	457	[2624]	LOADK    	R38 := 0.000000
	458	[2624]	LOADK    	R39 := 58.000000
	459	[2624]	CALL     	R34 6 1 ; R34(R35,R36,R37,R38,R39)
	460	[2626]	GETUPVAL 	R34 U0 ; R34 := U0
	461	[2626]	SELF     	R34 R34 K25 ; R35 := R34; R34 := R34[0x52cd594a]
	462	[2626]	CALL     	R34 2 2 ; R34 := R34(R35)
	463	[2627]	MUL      	R35 R34 K26 ; R35 := R34 * 59.000000
	464	[2627]	SUB      	R35 K27 R35 ; R35 := 60.000000 - R35
	465	[2628]	GETGLOBAL	R36 K28 ; R36 := 0x38f10e85
	466	[2628]	GETGLOBAL	R37 K2 ; R37 := 0xae91e43b
	467	[2628]	LOADK    	R38 K29 ; R38 := "HealthAndShield.Player.gotoAndStop"
	468	[2628]	MOVE     	R39 R35 ; R39 := R35
	469	[2628]	CALL     	R36 4 1 ; R36(R37,R38,R39)
	470	[2629]	GETGLOBAL	R36 K2 ; R36 := 0xae91e43b
	471	[2629]	SELF     	R36 R36 K16 ; R37 := R36; R36 := R36[0x67bc869f]
	472	[2629]	LOADK    	R38 K30 ; R38 := "HealthAndShield.Player.Health"
	473	[2629]	LOADK    	R39 := 9.000000
	474	[2629]	LOADK    	R40 K78 ; R40 := 12284689.000000
	475	[2629]	CALL     	R36 5 1 ; R36(R37,R38,R39,R40)
	476	[2630]	GETGLOBAL	R36 K2 ; R36 := 0xae91e43b
	477	[2630]	SELF     	R36 R36 K16 ; R37 := R36; R36 := R36[0x67bc869f]
	478	[2630]	LOADK    	R38 K31 ; R38 := "HealthAndShield.Player.Bg"
	479	[2630]	LOADK    	R39 := 9.000000
	480	[2630]	LOADK    	R40 K79 ; R40 := 2779007.000000
	481	[2630]	CALL     	R36 5 1 ; R36(R37,R38,R39,R40)
	482	[2632]	GETUPVAL 	R36 U4 ; R36 := U4
	483	[2632]	GETTABLE 	R36 R36 K55 ; R36 := R36["Shield"]
	484	[2632]	EQ       	1 R33 R36 ; if R33 == R36 then PC := 520
	485	[2632]	JMP      	520 ; PC := 520
	486	[2633]	GETUPVAL 	R36 U4 ; R36 := U4
	487	[2633]	SETTABLE 	R36 K55 R33 ; R36["Shield"] := R33
	488	[2634]	GETUPVAL 	R36 U5 ; R36 := U5
	489	[2634]	LOADK    	R37 K55 ; R37 := "Shield"
	490	[2634]	LOADK    	R38 K56 ; R38 := "HealthAndShield.PlayerShield"
	491	[2634]	MOVE     	R39 R33 ; R39 := R33
	492	[2634]	GETGLOBAL	R40 K17 ; R40 := _T
	493	[2634]	GETTABLE 	R40 R40 K24 ; R40 := R40["CustomHudHealthOffset"]
	494	[2634]	TEST     	R40 1 ; if R40 then PC := 497
	495	[2634]	JMP      	497 ; PC := 497
	496	[2634]	LOADK    	R40 := 0.000000
	497	[2634]	LOADK    	R41 := 66.000000
	498	[2634]	CALL     	R36 6 1 ; R36(R37,R38,R39,R40,R41)
	499	[2636]	SELF     	R36 R32 K57 ; R37 := R32; R36 := R32[0xd29b845d]
	500	[2636]	CALL     	R36 2 2 ; R36 := R36(R37)
	501	[2637]	MUL      	R37 R36 K26 ; R37 := R36 * 59.000000
	502	[2637]	SUB      	R37 K27 R37 ; R37 := 60.000000 - R37
	503	[2638]	GETGLOBAL	R38 K28 ; R38 := 0x38f10e85
	504	[2638]	GETGLOBAL	R39 K2 ; R39 := 0xae91e43b
	505	[2638]	LOADK    	R40 K58 ; R40 := "HealthAndShield.PlayerShieldBar.gotoAndStop"
	506	[2638]	MOVE     	R41 R37 ; R41 := R37
	507	[2638]	CALL     	R38 4 1 ; R38(R39,R40,R41)
	508	[2639]	GETGLOBAL	R38 K2 ; R38 := 0xae91e43b
	509	[2639]	SELF     	R38 R38 K16 ; R39 := R38; R38 := R38[0x67bc869f]
	510	[2639]	LOADK    	R40 K59 ; R40 := "HealthAndShield.PlayerShieldBar.Health"
	511	[2639]	LOADK    	R41 := 9.000000
	512	[2639]	LOADK    	R42 K80 ; R42 := 65535.000000
	513	[2639]	CALL     	R38 5 1 ; R38(R39,R40,R41,R42)
	514	[2640]	GETGLOBAL	R38 K2 ; R38 := 0xae91e43b
	515	[2640]	SELF     	R38 R38 K16 ; R39 := R38; R38 := R38[0x67bc869f]
	516	[2640]	LOADK    	R40 K61 ; R40 := "HealthAndShield.PlayerShieldBar.Bg"
	517	[2640]	LOADK    	R41 := 9.000000
	518	[2640]	LOADK    	R42 K79 ; R42 := 2779007.000000
	519	[2640]	CALL     	R38 5 1 ; R38(R39,R40,R41,R42)
	520	[2643]	GETGLOBAL	R38 K0 ; R38 := 0x7b998233
	521	[2643]	GETUPVAL 	R39 U7 ; R39 := U7
	522	[2643]	GETTABLE 	R39 R39 K33 ; R39 := R39["ActivePowerSuit"]
	523	[2643]	CALL     	R38 2 2 ; R38 := R38(R39)
	524	[2643]	TEST     	R38 1 ; if R38 then PC := 662
	525	[2643]	JMP      	662 ; PC := 662
	526	[2644]	GETUPVAL 	R38 U4 ; R38 := U4
	527	[2644]	GETTABLE 	R38 R38 K69 ; R38 := R38["CustomAbilities"]
	528	[2644]	EQ       	0 R38 K45 ; if R38 ~= nil then PC := 536
	529	[2644]	JMP      	536 ; PC := 536
	530	[2645]	GETUPVAL 	R38 U4 ; R38 := U4
	531	[2645]	GETUPVAL 	R39 U7 ; R39 := U7
	532	[2645]	GETTABLE 	R39 R39 K33 ; R39 := R39["ActivePowerSuit"]
	533	[2645]	SELF     	R39 R39 K70 ; R40 := R39; R39 := R39[0x3c88e434]
	534	[2645]	CALL     	R39 2 2 ; R39 := R39(R40)
	535	[2645]	SETTABLE 	R38 K69 R39 ; R38["CustomAbilities"] := R39
	536	[2648]	GETGLOBAL	R38 K19 ; R38 := 0x5bced4c4
	537	[2648]	GETTABLE 	R38 R38 K35 ; R38 := R38[0xac1b386a]
	538	[2648]	GETUPVAL 	R39 U4 ; R39 := U4
	539	[2648]	GETTABLE 	R39 R39 K69 ; R39 := R39["CustomAbilities"]
	540	[2648]	LEN      	R39 R39 ; R39 := # R39
	541	[2648]	LOADK    	R40 := 3.000000
	542	[2648]	CALL     	R38 3 2 ; R38 := R38(R39,R40)
	543	[2649]	LOADK    	R39 := 1.000000
	544	[2649]	MOVE     	R40 R38 ; R40 := R38
	545	[2649]	LOADK    	R41 := 1.000000
	546	[2649]	FORPREP  	R39 589 ; R39 -= R41; PC := 589
	547	[2650]	GETGLOBAL	R43 K17 ; R43 := _T
	548	[2650]	GETTABLE 	R43 R43 K81 ; R43 := R43["VesoMoas"]
	549	[2650]	EQ       	1 R43 K45 ; if R43 == nil then PC := 564
	550	[2650]	JMP      	564 ; PC := 564
	551	[2650]	GETGLOBAL	R43 K17 ; R43 := _T
	552	[2650]	GETTABLE 	R43 R43 K81 ; R43 := R43["VesoMoas"]
	553	[2650]	GETTABLE 	R43 R43 R42 ; R43 := R43[R42]
	554	[2650]	EQ       	1 R43 K45 ; if R43 == nil then PC := 564
	555	[2650]	JMP      	564 ; PC := 564
	556	[2650]	GETGLOBAL	R43 K0 ; R43 := 0x7b998233
	557	[2650]	GETGLOBAL	R44 K17 ; R44 := _T
	558	[2650]	GETTABLE 	R44 R44 K81 ; R44 := R44["VesoMoas"]
	559	[2650]	GETTABLE 	R44 R44 R42 ; R44 := R44[R42]
	560	[2650]	GETTABLE 	R44 R44 K82 ; R44 := R44["avatar"]
	561	[2650]	CALL     	R43 2 2 ; R43 := R43(R44)
	562	[2650]	NOT      	R43 R43 ; R43 := not R43
	563	[2650]	JMP      	566 ; PC := 566
	564	[2650]	OP_LOADBOOL	R43 0 1 ; R43 := false; PC := 565
	565	[2650]	OP_LOADBOOL	R43 1 0 ; R43 := true
	566	[2652]	GETGLOBAL	R44 K2 ; R44 := 0xae91e43b
	567	[2652]	SELF     	R44 R44 K38 ; R45 := R44; R44 := R44[0xf64b7262]
	568	[2652]	LOADK    	R46 K10 ; R46 := "MoaComponent.SummonMoa"
	569	[2652]	MOVE     	R47 R42 ; R47 := R42
	570	[2652]	CONCAT   	R46 R46 R47 ; R46 := R46 .. R47
	571	[2652]	LOADK    	R47 K72 ; R47 := "Icon"
	572	[2652]	LOADK    	R48 := 10.000000
	573	[2652]	GETUPVAL 	R49 U8 ; R49 := U8
	574	[2652]	GETTABLE 	R49 R49 K41 ; R49 := R49[0x06d055f9]
	575	[2652]	MOVE     	R50 R43 ; R50 := R43
	576	[2652]	LOADK    	R51 := 100.000000
	577	[2652]	LOADK    	R52 := 50.000000
	578	[2652]	CALL     	R49 4 0 ; R49,... := R49(R50,R51,R52)
	579	[2652]	CALL     	R44 0 1 ; R44(R45,...)
	580	[2653]	GETGLOBAL	R44 K2 ; R44 := 0xae91e43b
	581	[2653]	SELF     	R44 R44 K75 ; R45 := R44; R44 := R44[0xc0a3774b]
	582	[2653]	LOADK    	R46 K10 ; R46 := "MoaComponent.SummonMoa"
	583	[2653]	MOVE     	R47 R42 ; R47 := R42
	584	[2653]	CONCAT   	R46 R46 R47 ; R46 := R46 .. R47
	585	[2653]	LOADK    	R47 K76 ; R47 := "IconGlow"
	586	[2653]	LOADK    	R48 := 11.000000
	587	[2653]	MOVE     	R49 R43 ; R49 := R43
	588	[2653]	CALL     	R44 6 1 ; R44(R45,R46,R47,R48,R49)
	589	[2649]	FORLOOP  	R39 547 ; R39 += R41; if R39 <= R40 then begin PC := 547; R42 := R39 end
	590	[2655]	JMP      	662 ; PC := 662
	591	[2656]	GETGLOBAL	R44 K5 ; R44 := 0xe72d2edb
	592	[2656]	EQ       	0 R44 K83 ; if R44 ~= 4.000000 then PC := 662
	593	[2656]	JMP      	662 ; PC := 662
	594	[2657]	GETUPVAL 	R44 U0 ; R44 := U0
	595	[2657]	SELF     	R44 R44 K49 ; R45 := R44; R44 := R44[0x1ac1655c]
	596	[2657]	CALL     	R44 2 2 ; R44 := R44(R45)
	597	[2658]	GETGLOBAL	R45 K17 ; R45 := _T
	598	[2658]	GETTABLE 	R45 R45 K18 ; R45 := R45["CustomHudHealth"]
	599	[2658]	TEST     	R45 1 ; if R45 then PC := 603
	600	[2658]	JMP      	603 ; PC := 603
	601	[2658]	SELF     	R45 R44 K50 ; R46 := R44; R45 := R44[0xd127117d]
	602	[2658]	CALL     	R45 2 2 ; R45 := R45(R46)
	603	[2660]	GETUPVAL 	R46 U4 ; R46 := U4
	604	[2660]	GETTABLE 	R46 R46 K22 ; R46 := R46["Health"]
	605	[2660]	EQ       	1 R7 R46 ; if R7 == R46 then PC := 631
	606	[2660]	JMP      	631 ; PC := 631
	607	[2661]	GETUPVAL 	R46 U4 ; R46 := U4
	608	[2661]	SETTABLE 	R46 K22 R7 ; R46["Health"] := R7
	609	[2662]	GETUPVAL 	R46 U5 ; R46 := U5
	610	[2662]	LOADK    	R47 K22 ; R47 := "Health"
	611	[2662]	LOADK    	R48 K23 ; R48 := "HealthAndShield.PlayerHealth"
	612	[2662]	MOVE     	R49 R7 ; R49 := R7
	613	[2662]	GETGLOBAL	R50 K17 ; R50 := _T
	614	[2662]	GETTABLE 	R50 R50 K24 ; R50 := R50["CustomHudHealthOffset"]
	615	[2662]	TEST     	R50 1 ; if R50 then PC := 618
	616	[2662]	JMP      	618 ; PC := 618
	617	[2662]	LOADK    	R50 := 0.000000
	618	[2662]	LOADK    	R51 := 72.000000
	619	[2662]	CALL     	R46 6 1 ; R46(R47,R48,R49,R50,R51)
	620	[2663]	GETUPVAL 	R46 U5 ; R46 := U5
	621	[2663]	LOADK    	R47 K84 ; R47 := "HealthBlur"
	622	[2663]	LOADK    	R48 K85 ; R48 := "HealthAndShield.PlayerHealthBlur"
	623	[2663]	MOVE     	R49 R7 ; R49 := R7
	624	[2663]	GETGLOBAL	R50 K17 ; R50 := _T
	625	[2663]	GETTABLE 	R50 R50 K24 ; R50 := R50["CustomHudHealthOffset"]
	626	[2663]	TEST     	R50 1 ; if R50 then PC := 629
	627	[2663]	JMP      	629 ; PC := 629
	628	[2663]	LOADK    	R50 := 0.000000
	629	[2663]	LOADK    	R51 := 72.000000
	630	[2663]	CALL     	R46 6 1 ; R46(R47,R48,R49,R50,R51)
	631	[2665]	GETUPVAL 	R46 U4 ; R46 := U4
	632	[2665]	GETTABLE 	R46 R46 K55 ; R46 := R46["Shield"]
	633	[2665]	EQ       	1 R45 R46 ; if R45 == R46 then PC := 662
	634	[2665]	JMP      	662 ; PC := 662
	635	[2666]	GETUPVAL 	R46 U4 ; R46 := U4
	636	[2666]	SETTABLE 	R46 K55 R45 ; R46["Shield"] := R45
	637	[2667]	GETUPVAL 	R46 U5 ; R46 := U5
	638	[2667]	LOADK    	R47 K55 ; R47 := "Shield"
	639	[2667]	LOADK    	R48 K56 ; R48 := "HealthAndShield.PlayerShield"
	640	[2667]	MOVE     	R49 R45 ; R49 := R45
	641	[2667]	GETGLOBAL	R50 K17 ; R50 := _T
	642	[2667]	GETTABLE 	R50 R50 K24 ; R50 := R50["CustomHudHealthOffset"]
	643	[2667]	TEST     	R50 1 ; if R50 then PC := 646
	644	[2667]	JMP      	646 ; PC := 646
	645	[2667]	LOADK    	R50 := 0.000000
	646	[2667]	LOADK    	R51 := 72.000000
	647	[2667]	CALL     	R46 6 1 ; R46(R47,R48,R49,R50,R51)
	648	[2668]	EQ       	0 R45 K86 ; if R45 ~= 0.000000 then PC := 655
	649	[2668]	JMP      	655 ; PC := 655
	650	[2668]	SELF     	R46 R44 K87 ; R47 := R44; R46 := R44[0x2ebc4897]
	651	[2668]	CALL     	R46 2 2 ; R46 := R46(R47)
	652	[2668]	LT       	1 K86 R46 ; if 0.000000 < R46 then PC := 655
	653	[2668]	JMP      	655 ; PC := 655
	654	[2668]	OP_LOADBOOL	R46 0 1 ; R46 := false; PC := 655
	655	[2668]	OP_LOADBOOL	R46 1 0 ; R46 := true
	656	[2669]	GETGLOBAL	R47 K2 ; R47 := 0xae91e43b
	657	[2669]	SELF     	R47 R47 K3 ; R48 := R47; R47 := R47[0xaade900e]
	658	[2669]	LOADK    	R49 K56 ; R49 := "HealthAndShield.PlayerShield"
	659	[2669]	LOADK    	R50 := 11.000000
	660	[2669]	MOVE     	R51 R46 ; R51 := R46
	661	[2669]	CALL     	R47 5 1 ; R47(R48,R49,R50,R51)
	662	[2672]	RETURN   	R0 1 ; return 

function #104 <?:2674,3016> (923 instructions, 3692 bytes at 0000021137C31730)
0 params, 50 slots, 24 upvalues, 0 locals, 114 constants, 0 functions
	1	[2675]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[2675]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[2675]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[2675]	TEST     	R0 1 ; if R0 then PC := 10
	5	[2675]	JMP      	10 ; PC := 10
	6	[2675]	GETUPVAL 	R0 U0 ; R0 := U0
	7	[2675]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	8	[2675]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 12
	9	[2675]	JMP      	12 ; PC := 12
	10	[2676]	GETUPVAL 	R0 U1 ; R0 := U1
	11	[2676]	CALL     	R0 1 1 ; R0()
	12	[2679]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	13	[2679]	GETUPVAL 	R1 U0 ; R1 := U0
	14	[2679]	CALL     	R0 2 2 ; R0 := R0(R1)
	15	[2679]	TEST     	R0 0 ; if not R0 then PC := 19
	16	[2679]	JMP      	19 ; PC := 19
	17	[2680]	OP_LOADBOOL	R0 0 0 ; R0 := false
	18	[2680]	RETURN   	R0 2 ; return R0 
	19	[2683]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	20	[2683]	GETUPVAL 	R1 U2 ; R1 := U2
	21	[2683]	CALL     	R0 2 2 ; R0 := R0(R1)
	22	[2683]	TEST     	R0 0 ; if not R0 then PC := 71
	23	[2683]	JMP      	71 ; PC := 71
	24	[2684]	GETGLOBAL	R0 K2 ; R0 := 0xae91e43b
	25	[2684]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0xcd73323e]
	26	[2684]	CALL     	R0 2 2 ; R0 := R0(R1)
	27	[2684]	SETUPVAL 	R0 U2 ; U2 := R0
	28	[2685]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	29	[2685]	GETUPVAL 	R1 U2 ; R1 := U2
	30	[2685]	CALL     	R0 2 2 ; R0 := R0(R1)
	31	[2685]	TEST     	R0 0 ; if not R0 then PC := 35
	32	[2685]	JMP      	35 ; PC := 35
	33	[2686]	OP_LOADBOOL	R0 0 0 ; R0 := false
	34	[2686]	RETURN   	R0 2 ; return R0 
	35	[2689]	GETUPVAL 	R0 U2 ; R0 := U2
	36	[2689]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0x474501e1]
	37	[2689]	CALL     	R0 2 2 ; R0 := R0(R1)
	38	[2689]	SETUPVAL 	R0 U3 ; U3 := R0
	39	[2691]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	40	[2691]	GETUPVAL 	R1 U3 ; R1 := U3
	41	[2691]	CALL     	R0 2 2 ; R0 := R0(R1)
	42	[2691]	TEST     	R0 0 ; if not R0 then PC := 51
	43	[2691]	JMP      	51 ; PC := 51
	44	[2692]	GETGLOBAL	R0 K5 ; R0 := 0x3d106989
	45	[2692]	LOADK    	R1 K6 ; R1 := "HUD REDUX: null minimap"
	46	[2692]	CALL     	R0 2 1 ; R0(R1)
	47	[2693]	LOADNIL  	R0 R0 ; R0 := nil
	48	[2693]	SETUPVAL 	R0 U2 ; U2 := R0
	49	[2694]	OP_LOADBOOL	R0 0 0 ; R0 := false
	50	[2694]	RETURN   	R0 2 ; return R0 
	51	[2697]	GETUPVAL 	R0 U3 ; R0 := U3
	52	[2697]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0xf4ed1581]
	53	[2697]	CALL     	R0 2 2 ; R0 := R0(R1)
	54	[2697]	SETUPVAL 	R0 U4 ; U4 := R0
	55	[2698]	GETGLOBAL	R0 K8 ; R0 := 0xe72d2edb
	56	[2698]	EQ       	1 R0 K10 ; if R0 == 0.000000 then PC := 65
	57	[2698]	JMP      	65 ; PC := 65
	58	[2699]	GETGLOBAL	R0 K2 ; R0 := 0xae91e43b
	59	[2699]	SELF     	R0 R0 K11 ; R1 := R0; R0 := R0[0xaade900e]
	60	[2699]	LOADK    	R2 K12 ; R2 := "MiniMapContainer.MapBorders"
	61	[2699]	LOADK    	R3 := 11.000000
	62	[2699]	GETUPVAL 	R4 U4 ; R4 := U4
	63	[2699]	NOT      	R4 R4 ; R4 := not R4
	64	[2699]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	65	[2702]	GETUPVAL 	R0 U4 ; R0 := U4
	66	[2702]	TEST     	R0 1 ; if R0 then PC := 71
	67	[2702]	JMP      	71 ; PC := 71
	68	[2705]	GETUPVAL 	R0 U3 ; R0 := U3
	69	[2705]	SELF     	R0 R0 K13 ; R1 := R0; R0 := R0[0xd4735716]
	70	[2705]	CALL     	R0 2 1 ; R0(R1)
	71	[2709]	LOADNIL  	R0 R0 ; R0 := nil
	72	[2711]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	73	[2711]	GETUPVAL 	R2 U5 ; R2 := U5
	74	[2711]	GETTABLE 	R2 R2 K14 ; R2 := R2["CameraController"]
	75	[2711]	CALL     	R1 2 2 ; R1 := R1(R2)
	76	[2711]	TEST     	R1 0 ; if not R1 then PC := 83
	77	[2711]	JMP      	83 ; PC := 83
	78	[2712]	GETUPVAL 	R1 U5 ; R1 := U5
	79	[2712]	GETUPVAL 	R2 U2 ; R2 := U2
	80	[2712]	SELF     	R2 R2 K15 ; R3 := R2; R2 := R2[0x0b4bcfb6]
	81	[2712]	CALL     	R2 2 2 ; R2 := R2(R3)
	82	[2712]	SETTABLE 	R1 K14 R2 ; R1["CameraController"] := R2
	83	[2715]	GETUPVAL 	R1 U0 ; R1 := U0
	84	[2715]	SELF     	R1 R1 K16 ; R2 := R1; R1 := R1[0xf2deaf69]
	85	[2715]	GETGLOBAL	R3 K17 ; R3 := gLotusBasePvpGameRulesType
	86	[2715]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	87	[2715]	TEST     	R1 0 ; if not R1 then PC := 92
	88	[2715]	JMP      	92 ; PC := 92
	89	[2715]	GETUPVAL 	R1 U0 ; R1 := U0
	90	[2715]	SELF     	R1 R1 K18 ; R2 := R1; R1 := R1[0x32316a21]
	91	[2715]	CALL     	R1 2 2 ; R1 := R1(R2)
	92	[2717]	GETUPVAL 	R2 U6 ; R2 := U6
	93	[2717]	GETUPVAL 	R3 U6 ; R3 := U6
	94	[2717]	GETTABLE 	R3 R3 K20 ; R3 := R3["IsSpectating"]
	95	[2717]	SETTABLE 	R2 K19 R3 ; R2["mWasSpectating"] := R3
	96	[2718]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	97	[2718]	GETUPVAL 	R3 U5 ; R3 := U5
	98	[2718]	GETTABLE 	R3 R3 K14 ; R3 := R3["CameraController"]
	99	[2718]	CALL     	R2 2 2 ; R2 := R2(R3)
	100	[2718]	TEST     	R2 1 ; if R2 then PC := 189
	101	[2718]	JMP      	189 ; PC := 189
	102	[2718]	GETUPVAL 	R2 U5 ; R2 := U5
	103	[2718]	GETTABLE 	R2 R2 K14 ; R2 := R2["CameraController"]
	104	[2718]	SELF     	R2 R2 K21 ; R3 := R2; R2 := R2[0x174fdd85]
	105	[2718]	CALL     	R2 2 2 ; R2 := R2(R3)
	106	[2718]	TEST     	R2 0 ; if not R2 then PC := 189
	107	[2718]	JMP      	189 ; PC := 189
	108	[2718]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	109	[2718]	GETUPVAL 	R3 U5 ; R3 := U5
	110	[2718]	GETTABLE 	R3 R3 K14 ; R3 := R3["CameraController"]
	111	[2718]	SELF     	R3 R3 K22 ; R4 := R3; R3 := R3[0x122ed2ac]
	112	[2718]	CALL     	R3 2 0 ; R3,... := R3(R4)
	113	[2718]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	114	[2718]	TEST     	R2 1 ; if R2 then PC := 189
	115	[2718]	JMP      	189 ; PC := 189
	116	[2722]	GETUPVAL 	R2 U5 ; R2 := U5
	117	[2722]	GETTABLE 	R2 R2 K14 ; R2 := R2["CameraController"]
	118	[2722]	SELF     	R2 R2 K22 ; R3 := R2; R2 := R2[0x122ed2ac]
	119	[2722]	CALL     	R2 2 2 ; R2 := R2(R3)
	120	[2722]	MOVE     	R0 R2 ; R0 := R2
	121	[2723]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	122	[2723]	GETGLOBAL	R3 K23 ; R3 := _T
	123	[2723]	GETTABLE 	R3 R3 K24 ; R3 := R3["CommanderMap"]
	124	[2723]	CALL     	R2 2 2 ; R2 := R2(R3)
	125	[2723]	TEST     	R2 0 ; if not R2 then PC := 144
	126	[2723]	JMP      	144 ; PC := 144
	127	[2724]	GETGLOBAL	R2 K25 ; R2 := 0x89326c93
	128	[2724]	SELF     	R2 R2 K26 ; R3 := R2; R2 := R2[0x78298275]
	129	[2724]	CALL     	R2 2 2 ; R2 := R2(R3)
	130	[2725]	EQ       	1 R0 R2 ; if R0 == R2 then PC := 144
	131	[2725]	JMP      	144 ; PC := 144
	132	[2725]	GETUPVAL 	R3 U7 ; R3 := U7
	133	[2725]	EQ       	1 R3 R0 ; if R3 == R0 then PC := 144
	134	[2725]	JMP      	144 ; PC := 144
	135	[2726]	GETUPVAL 	R3 U3 ; R3 := U3
	136	[2726]	SELF     	R3 R3 K27 ; R4 := R3; R3 := R3[0x00f85b37]
	137	[2726]	MOVE     	R5 R0 ; R5 := R0
	138	[2726]	CALL     	R3 3 1 ; R3(R4,R5)
	139	[2727]	SETUPVAL 	R0 U7 ; U7 := R0
	140	[2728]	GETUPVAL 	R3 U7 ; R3 := U7
	141	[2728]	SELF     	R3 R3 K28 ; R4 := R3; R3 := R3[0x7102164f]
	142	[2728]	OP_LOADBOOL	R5 0 0 ; R5 := false
	143	[2728]	CALL     	R3 3 1 ; R3(R4,R5)
	144	[2731]	GETUPVAL 	R3 U6 ; R3 := U6
	145	[2731]	GETTABLE 	R3 R3 K20 ; R3 := R3["IsSpectating"]
	146	[2731]	TEST     	R3 1 ; if R3 then PC := 186
	147	[2731]	JMP      	186 ; PC := 186
	148	[2732]	GETGLOBAL	R3 K5 ; R3 := 0x3d106989
	149	[2732]	LOADK    	R4 K29 ; R4 := "*** Enabling spectator mode ***"
	150	[2732]	CALL     	R3 2 1 ; R3(R4)
	151	[2733]	TEST     	R1 0 ; if not R1 then PC := 177
	152	[2733]	JMP      	177 ; PC := 177
	153	[2733]	GETUPVAL 	R3 U0 ; R3 := U0
	154	[2733]	SELF     	R3 R3 K30 ; R4 := R3; R3 := R3[0x529b110d]
	155	[2733]	CALL     	R3 2 2 ; R3 := R3(R4)
	156	[2733]	EQ       	1 R3 K31 ; if R3 == 5.000000 then PC := 163
	157	[2733]	JMP      	163 ; PC := 163
	158	[2733]	GETUPVAL 	R3 U0 ; R3 := U0
	159	[2733]	SELF     	R3 R3 K30 ; R4 := R3; R3 := R3[0x529b110d]
	160	[2733]	CALL     	R3 2 2 ; R3 := R3(R4)
	161	[2733]	EQ       	0 R3 K32 ; if R3 ~= 2.000000 then PC := 177
	162	[2733]	JMP      	177 ; PC := 177
	163	[2733]	GETGLOBAL	R3 K23 ; R3 := _T
	164	[2733]	GETTABLE 	R3 R3 K33 ; R3 := R3["gSectorWars"]
	165	[2733]	TEST     	R3 1 ; if R3 then PC := 177
	166	[2733]	JMP      	177 ; PC := 177
	167	[2733]	GETUPVAL 	R3 U0 ; R3 := U0
	168	[2733]	SELF     	R3 R3 K16 ; R4 := R3; R3 := R3[0xf2deaf69]
	169	[2733]	GETGLOBAL	R5 K34 ; R5 := gLotusPvpGameRulesType
	170	[2733]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	171	[2733]	TEST     	R3 1 ; if R3 then PC := 177
	172	[2733]	JMP      	177 ; PC := 177
	173	[2734]	GETUPVAL 	R3 U0 ; R3 := U0
	174	[2734]	SELF     	R3 R3 K35 ; R4 := R3; R3 := R3[0x6033d6be]
	175	[2734]	OP_LOADBOOL	R5 1 0 ; R5 := true
	176	[2734]	CALL     	R3 3 1 ; R3(R4,R5)
	177	[2737]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	178	[2737]	GETUPVAL 	R4 U8 ; R4 := U8
	179	[2737]	CALL     	R3 2 2 ; R3 := R3(R4)
	180	[2737]	TEST     	R3 1 ; if R3 then PC := 186
	181	[2737]	JMP      	186 ; PC := 186
	182	[2738]	GETUPVAL 	R3 U8 ; R3 := U8
	183	[2738]	SELF     	R3 R3 K36 ; R4 := R3; R3 := R3[0x5cee792a]
	184	[2738]	OP_LOADBOOL	R5 0 0 ; R5 := false
	185	[2738]	CALL     	R3 3 1 ; R3(R4,R5)
	186	[2741]	GETUPVAL 	R3 U6 ; R3 := U6
	187	[2741]	SETTABLE 	R3 K20 K37 ; R3["IsSpectating"] := true
	188	[2741]	JMP      	277 ; PC := 277
	189	[2742]	GETUPVAL 	R3 U6 ; R3 := U6
	190	[2742]	GETTABLE 	R3 R3 K20 ; R3 := R3["IsSpectating"]
	191	[2742]	TEST     	R3 1 ; if R3 then PC := 198
	192	[2742]	JMP      	198 ; PC := 198
	193	[2742]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	194	[2742]	GETUPVAL 	R4 U9 ; R4 := U9
	195	[2742]	CALL     	R3 2 2 ; R3 := R3(R4)
	196	[2742]	TEST     	R3 0 ; if not R3 then PC := 253
	197	[2742]	JMP      	253 ; PC := 253
	198	[2743]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	199	[2743]	GETGLOBAL	R4 K23 ; R4 := _T
	200	[2743]	GETTABLE 	R4 R4 K24 ; R4 := R4["CommanderMap"]
	201	[2743]	CALL     	R3 2 2 ; R3 := R3(R4)
	202	[2743]	TEST     	R3 0 ; if not R3 then PC := 215
	203	[2743]	JMP      	215 ; PC := 215
	204	[2743]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	205	[2743]	GETUPVAL 	R4 U7 ; R4 := U7
	206	[2743]	CALL     	R3 2 2 ; R3 := R3(R4)
	207	[2743]	TEST     	R3 1 ; if R3 then PC := 215
	208	[2743]	JMP      	215 ; PC := 215
	209	[2744]	GETUPVAL 	R3 U7 ; R3 := U7
	210	[2744]	SELF     	R3 R3 K28 ; R4 := R3; R3 := R3[0x7102164f]
	211	[2744]	OP_LOADBOOL	R5 1 0 ; R5 := true
	212	[2744]	CALL     	R3 3 1 ; R3(R4,R5)
	213	[2745]	LOADNIL  	R3 R3 ; R3 := nil
	214	[2745]	SETUPVAL 	R3 U7 ; U7 := R3
	215	[2747]	GETUPVAL 	R3 U2 ; R3 := U2
	216	[2747]	SELF     	R3 R3 K38 ; R4 := R3; R3 := R3[0xbb610e5b]
	217	[2747]	CALL     	R3 2 2 ; R3 := R3(R4)
	218	[2747]	MOVE     	R0 R3 ; R0 := R3
	219	[2748]	TEST     	R0 0 ; if not R0 then PC := 277
	220	[2748]	JMP      	277 ; PC := 277
	221	[2750]	TEST     	R1 0 ; if not R1 then PC := 241
	222	[2750]	JMP      	241 ; PC := 241
	223	[2750]	GETUPVAL 	R3 U0 ; R3 := U0
	224	[2750]	SELF     	R3 R3 K30 ; R4 := R3; R3 := R3[0x529b110d]
	225	[2750]	CALL     	R3 2 2 ; R3 := R3(R4)
	226	[2750]	EQ       	1 R3 K31 ; if R3 == 5.000000 then PC := 233
	227	[2750]	JMP      	233 ; PC := 233
	228	[2750]	GETUPVAL 	R3 U0 ; R3 := U0
	229	[2750]	SELF     	R3 R3 K30 ; R4 := R3; R3 := R3[0x529b110d]
	230	[2750]	CALL     	R3 2 2 ; R3 := R3(R4)
	231	[2750]	EQ       	0 R3 K32 ; if R3 ~= 2.000000 then PC := 241
	232	[2750]	JMP      	241 ; PC := 241
	233	[2750]	GETGLOBAL	R3 K23 ; R3 := _T
	234	[2750]	GETTABLE 	R3 R3 K33 ; R3 := R3["gSectorWars"]
	235	[2750]	TEST     	R3 1 ; if R3 then PC := 241
	236	[2750]	JMP      	241 ; PC := 241
	237	[2751]	GETUPVAL 	R3 U0 ; R3 := U0
	238	[2751]	SELF     	R3 R3 K35 ; R4 := R3; R3 := R3[0x6033d6be]
	239	[2751]	OP_LOADBOOL	R5 0 0 ; R5 := false
	240	[2751]	CALL     	R3 3 1 ; R3(R4,R5)
	241	[2753]	GETUPVAL 	R3 U6 ; R3 := U6
	242	[2753]	SETTABLE 	R3 K20 K39 ; R3["IsSpectating"] := false
	243	[2755]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	244	[2755]	GETUPVAL 	R4 U8 ; R4 := U8
	245	[2755]	CALL     	R3 2 2 ; R3 := R3(R4)
	246	[2755]	TEST     	R3 1 ; if R3 then PC := 277
	247	[2755]	JMP      	277 ; PC := 277
	248	[2756]	GETUPVAL 	R3 U8 ; R3 := U8
	249	[2756]	SELF     	R3 R3 K36 ; R4 := R3; R3 := R3[0x5cee792a]
	250	[2756]	OP_LOADBOOL	R5 1 0 ; R5 := true
	251	[2756]	CALL     	R3 3 1 ; R3(R4,R5)
	252	[2758]	JMP      	277 ; PC := 277
	253	[2760]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	254	[2760]	GETGLOBAL	R4 K23 ; R4 := _T
	255	[2760]	GETTABLE 	R4 R4 K24 ; R4 := R4["CommanderMap"]
	256	[2760]	CALL     	R3 2 2 ; R3 := R3(R4)
	257	[2760]	TEST     	R3 0 ; if not R3 then PC := 270
	258	[2760]	JMP      	270 ; PC := 270
	259	[2760]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	260	[2760]	GETUPVAL 	R4 U7 ; R4 := U7
	261	[2760]	CALL     	R3 2 2 ; R3 := R3(R4)
	262	[2760]	TEST     	R3 1 ; if R3 then PC := 270
	263	[2760]	JMP      	270 ; PC := 270
	264	[2761]	GETUPVAL 	R3 U7 ; R3 := U7
	265	[2761]	SELF     	R3 R3 K28 ; R4 := R3; R3 := R3[0x7102164f]
	266	[2761]	OP_LOADBOOL	R5 1 0 ; R5 := true
	267	[2761]	CALL     	R3 3 1 ; R3(R4,R5)
	268	[2762]	LOADNIL  	R3 R3 ; R3 := nil
	269	[2762]	SETUPVAL 	R3 U7 ; U7 := R3
	270	[2764]	GETUPVAL 	R3 U10 ; R3 := U10
	271	[2764]	GETTABLE 	R3 R3 K40 ; R3 := R3[0xe3a0bbca]
	272	[2764]	GETUPVAL 	R4 U2 ; R4 := U2
	273	[2764]	GETUPVAL 	R5 U9 ; R5 := U9
	274	[2764]	OP_LOADBOOL	R6 1 0 ; R6 := true
	275	[2764]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	276	[2764]	MOVE     	R0 R3 ; R0 := R3
	277	[2767]	GETUPVAL 	R3 U6 ; R3 := U6
	278	[2767]	GETTABLE 	R3 R3 K20 ; R3 := R3["IsSpectating"]
	279	[2767]	TEST     	R3 0 ; if not R3 then PC := 302
	280	[2767]	JMP      	302 ; PC := 302
	281	[2767]	GETUPVAL 	R3 U6 ; R3 := U6
	282	[2767]	GETTABLE 	R3 R3 K19 ; R3 := R3["mWasSpectating"]
	283	[2767]	TEST     	R3 1 ; if R3 then PC := 302
	284	[2767]	JMP      	302 ; PC := 302
	285	[2768]	GETGLOBAL	R3 K0 ; R3 := 0x7b998233
	286	[2768]	GETUPVAL 	R4 U8 ; R4 := U8
	287	[2768]	CALL     	R3 2 2 ; R3 := R3(R4)
	288	[2768]	TEST     	R3 1 ; if R3 then PC := 302
	289	[2768]	JMP      	302 ; PC := 302
	290	[2769]	GETUPVAL 	R3 U8 ; R3 := U8
	291	[2769]	SELF     	R3 R3 K41 ; R4 := R3; R3 := R3[0x603d617e]
	292	[2769]	CALL     	R3 2 2 ; R3 := R3(R4)
	293	[2770]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	294	[2770]	MOVE     	R5 R3 ; R5 := R3
	295	[2770]	CALL     	R4 2 2 ; R4 := R4(R5)
	296	[2770]	TEST     	R4 1 ; if R4 then PC := 302
	297	[2770]	JMP      	302 ; PC := 302
	298	[2771]	SELF     	R4 R3 K42 ; R5 := R3; R4 := R3[0xe4162eed]
	299	[2771]	LOADK    	R6 K43 ; R6 := "SetAiming"
	300	[2771]	LOADK    	R7 K44 ; R7 := "false"
	301	[2771]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	302	[2776]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	303	[2776]	GETUPVAL 	R5 U9 ; R5 := U9
	304	[2776]	CALL     	R4 2 2 ; R4 := R4(R5)
	305	[2776]	TEST     	R4 1 ; if R4 then PC := 382
	306	[2776]	JMP      	382 ; PC := 382
	307	[2776]	GETUPVAL 	R4 U9 ; R4 := U9
	308	[2776]	SELF     	R4 R4 K45 ; R5 := R4; R4 := R4[0x2047cfe7]
	309	[2776]	CALL     	R4 2 2 ; R4 := R4(R5)
	310	[2776]	TEST     	R4 0 ; if not R4 then PC := 382
	311	[2776]	JMP      	382 ; PC := 382
	312	[2776]	GETUPVAL 	R4 U11 ; R4 := U11
	313	[2776]	GETTABLE 	R4 R4 K46 ; R4 := R4["Cached"]
	314	[2776]	TEST     	R4 1 ; if R4 then PC := 382
	315	[2776]	JMP      	382 ; PC := 382
	316	[2778]	GETUPVAL 	R4 U9 ; R4 := U9
	317	[2778]	SELF     	R4 R4 K47 ; R5 := R4; R4 := R4[0x1f7e8969]
	318	[2778]	CALL     	R4 2 2 ; R4 := R4(R5)
	319	[2779]	LOADK    	R5 := 1.000000
	320	[2779]	LEN      	R6 R4 ; R6 := # R4
	321	[2779]	LOADK    	R7 := 1.000000
	322	[2779]	FORPREP  	R5 379 ; R5 -= R7; PC := 379
	323	[2780]	GETTABLE 	R9 R4 R8 ; R9 := R4[R8]
	324	[2781]	GETTABLE 	R10 R9 K48 ; R10 := R9["instigator"]
	325	[2781]	GETUPVAL 	R11 U9 ; R11 := U9
	326	[2781]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 379
	327	[2781]	JMP      	379 ; PC := 379
	328	[2782]	GETGLOBAL	R10 K9 ; R10 := 0x6c97a788
	329	[2782]	GETTABLE 	R10 R10 K49 ; R10 := R10[0x608bc054]
	330	[2782]	CALL     	R10 1 2 ; R10 := R10()
	331	[2783]	NEWTABLE 	R11 0 0 ; R11 := {}
	332	[2784]	GETUPVAL 	R12 U9 ; R12 := U9
	333	[2784]	SETTABLE 	R10 K48 R12 ; R10["instigator"] := R12
	334	[2785]	GETTABLE 	R12 R9 K50 ; R12 := R9["buffType"]
	335	[2785]	SETTABLE 	R10 K50 R12 ; R10[0xb7137910] := R12
	336	[2786]	GETTABLE 	R12 R9 K51 ; R12 := R9["isDebuff"]
	337	[2786]	SETTABLE 	R10 K51 R12 ; R10["isDebuff"] := R12
	338	[2787]	GETTABLE 	R12 R9 K52 ; R12 := R9["stackData"]
	339	[2787]	SETTABLE 	R10 K52 R12 ; R10["stackData"] := R12
	340	[2788]	GETTABLE 	R12 R9 K53 ; R12 := R9["abilityType"]
	341	[2788]	SETTABLE 	R10 K53 R12 ; R10["abilityType"] := R12
	342	[2789]	GETTABLE 	R12 R9 K54 ; R12 := R9["augmentType"]
	343	[2789]	SETTABLE 	R10 K54 R12 ; R10["augmentType"] := R12
	344	[2790]	GETTABLE 	R12 R9 K55 ; R12 := R9["buffData"]
	345	[2790]	SETTABLE 	R10 K55 R12 ; R10["buffData"] := R12
	346	[2791]	GETTABLE 	R12 R9 K56 ; R12 := R9["buffDataExtra"]
	347	[2791]	SETTABLE 	R10 K56 R12 ; R10["buffDataExtra"] := R12
	348	[2793]	LOADK    	R12 := 1.000000
	349	[2793]	GETTABLE 	R13 R9 K57 ; R13 := R9["affected"]
	350	[2793]	LEN      	R13 R13 ; R13 := # R13
	351	[2793]	LOADK    	R14 := 1.000000
	352	[2793]	FORPREP  	R12 368 ; R12 -= R14; PC := 368
	353	[2794]	GETTABLE 	R16 R9 K57 ; R16 := R9["affected"]
	354	[2794]	GETTABLE 	R16 R16 R15 ; R16 := R16[R15]
	355	[2795]	GETGLOBAL	R17 K0 ; R17 := 0x7b998233
	356	[2795]	MOVE     	R18 R16 ; R18 := R16
	357	[2795]	CALL     	R17 2 2 ; R17 := R17(R18)
	358	[2795]	TEST     	R17 1 ; if R17 then PC := 368
	359	[2795]	JMP      	368 ; PC := 368
	360	[2795]	GETUPVAL 	R17 U9 ; R17 := U9
	361	[2795]	EQ       	1 R16 R17 ; if R16 == R17 then PC := 368
	362	[2795]	JMP      	368 ; PC := 368
	363	[2796]	GETGLOBAL	R17 K58 ; R17 := 0x33bdd652
	364	[2796]	GETTABLE 	R17 R17 K59 ; R17 := R17[0x23d5322f]
	365	[2796]	MOVE     	R18 R11 ; R18 := R11
	366	[2796]	MOVE     	R19 R16 ; R19 := R16
	367	[2796]	CALL     	R17 3 1 ; R17(R18,R19)
	368	[2793]	FORLOOP  	R12 353 ; R12 += R14; if R12 <= R13 then begin PC := 353; R15 := R12 end
	369	[2800]	LEN      	R17 R11 ; R17 := # R11
	370	[2800]	LT       	0 K10 R17 ; if 0.000000 >= R17 then PC := 379
	371	[2800]	JMP      	379 ; PC := 379
	372	[2801]	SETTABLE 	R10 K57 R11 ; R10["affected"] := R11
	373	[2802]	GETGLOBAL	R17 K58 ; R17 := 0x33bdd652
	374	[2802]	GETTABLE 	R17 R17 K59 ; R17 := R17[0x23d5322f]
	375	[2802]	GETUPVAL 	R18 U11 ; R18 := U11
	376	[2802]	GETTABLE 	R18 R18 K60 ; R18 := R18["Buffs"]
	377	[2802]	MOVE     	R19 R10 ; R19 := R10
	378	[2802]	CALL     	R17 3 1 ; R17(R18,R19)
	379	[2779]	FORLOOP  	R5 323 ; R5 += R7; if R5 <= R6 then begin PC := 323; R8 := R5 end
	380	[2807]	GETUPVAL 	R17 U11 ; R17 := U11
	381	[2807]	SETTABLE 	R17 K46 K37 ; R17["Cached"] := true
	382	[2810]	GETGLOBAL	R17 K0 ; R17 := 0x7b998233
	383	[2810]	MOVE     	R18 R0 ; R18 := R0
	384	[2810]	CALL     	R17 2 2 ; R17 := R17(R18)
	385	[2810]	TEST     	R17 0 ; if not R17 then PC := 389
	386	[2810]	JMP      	389 ; PC := 389
	387	[2811]	OP_LOADBOOL	R17 0 0 ; R17 := false
	388	[2811]	RETURN   	R17 2 ; return R17 
	389	[2814]	GETGLOBAL	R17 K0 ; R17 := 0x7b998233
	390	[2814]	GETUPVAL 	R18 U9 ; R18 := U9
	391	[2814]	CALL     	R17 2 2 ; R17 := R17(R18)
	392	[2814]	TEST     	R17 1 ; if R17 then PC := 403
	393	[2814]	JMP      	403 ; PC := 403
	394	[2814]	GETUPVAL 	R17 U9 ; R17 := U9
	395	[2814]	EQ       	0 R17 R0 ; if R17 ~= R0 then PC := 403
	396	[2814]	JMP      	403 ; PC := 403
	397	[2814]	GETGLOBAL	R17 K0 ; R17 := 0x7b998233
	398	[2814]	GETUPVAL 	R18 U12 ; R18 := U12
	399	[2814]	GETTABLE 	R18 R18 K61 ; R18 := R18["ActivePowerSuit"]
	400	[2814]	CALL     	R17 2 2 ; R17 := R17(R18)
	401	[2814]	TEST     	R17 0 ; if not R17 then PC := 682
	402	[2814]	JMP      	682 ; PC := 682
	403	[2815]	SELF     	R17 R0 K62 ; R18 := R0; R17 := R0[0xde321e6f]
	404	[2815]	CALL     	R17 2 2 ; R17 := R17(R18)
	405	[2816]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	406	[2816]	MOVE     	R19 R17 ; R19 := R17
	407	[2816]	CALL     	R18 2 2 ; R18 := R18(R19)
	408	[2816]	TEST     	R18 1 ; if R18 then PC := 445
	409	[2816]	JMP      	445 ; PC := 445
	410	[2816]	SELF     	R18 R17 K16 ; R19 := R17; R18 := R17[0xf2deaf69]
	411	[2816]	GETGLOBAL	R20 K63 ; R20 := gLotusInventoryControllerType
	412	[2816]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	413	[2816]	TEST     	R18 0 ; if not R18 then PC := 445
	414	[2816]	JMP      	445 ; PC := 445
	415	[2817]	GETUPVAL 	R18 U5 ; R18 := U5
	416	[2817]	SETTABLE 	R18 K64 R17 ; R18["InventoryController"] := R17
	417	[2818]	GETUPVAL 	R18 U12 ; R18 := U12
	418	[2818]	GETUPVAL 	R19 U5 ; R19 := U5
	419	[2818]	GETTABLE 	R19 R19 K64 ; R19 := R19["InventoryController"]
	420	[2818]	SELF     	R19 R19 K65 ; R20 := R19; R19 := R19[0xf7d48ee0]
	421	[2818]	CALL     	R19 2 2 ; R19 := R19(R20)
	422	[2818]	SETTABLE 	R18 K61 R19 ; R18["ActivePowerSuit"] := R19
	423	[2819]	GETUPVAL 	R18 U12 ; R18 := U12
	424	[2819]	GETUPVAL 	R19 U2 ; R19 := U2
	425	[2819]	SELF     	R19 R19 K67 ; R20 := R19; R19 := R19[0xa534c3ac]
	426	[2819]	CALL     	R19 2 2 ; R19 := R19(R20)
	427	[2819]	SETTABLE 	R18 K66 R19 ; R18["OwnedPowerSuitAvatar"] := R19
	428	[2820]	GETUPVAL 	R18 U13 ; R18 := U13
	429	[2820]	SETTABLE 	R18 K68 K69 ; R18["CustomAbilities"] := nil
	430	[2821]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	431	[2821]	GETUPVAL 	R19 U12 ; R19 := U12
	432	[2821]	GETTABLE 	R19 R19 K66 ; R19 := R19["OwnedPowerSuitAvatar"]
	433	[2821]	CALL     	R18 2 2 ; R18 := R18(R19)
	434	[2821]	TEST     	R18 1 ; if R18 then PC := 443
	435	[2821]	JMP      	443 ; PC := 443
	436	[2822]	GETUPVAL 	R18 U5 ; R18 := U5
	437	[2822]	GETUPVAL 	R19 U12 ; R19 := U12
	438	[2822]	GETTABLE 	R19 R19 K66 ; R19 := R19["OwnedPowerSuitAvatar"]
	439	[2822]	SELF     	R19 R19 K62 ; R20 := R19; R19 := R19[0xde321e6f]
	440	[2822]	CALL     	R19 2 2 ; R19 := R19(R20)
	441	[2822]	SETTABLE 	R18 K70 R19 ; R18["OwnedPowerSuitInventoryController"] := R19
	442	[2822]	JMP      	445 ; PC := 445
	443	[2824]	GETUPVAL 	R18 U5 ; R18 := U5
	444	[2824]	SETTABLE 	R18 K70 K69 ; R18["OwnedPowerSuitInventoryController"] := nil
	445	[2828]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	446	[2828]	GETUPVAL 	R19 U5 ; R19 := U5
	447	[2828]	GETTABLE 	R19 R19 K64 ; R19 := R19["InventoryController"]
	448	[2828]	CALL     	R18 2 2 ; R18 := R18(R19)
	449	[2828]	TEST     	R18 0 ; if not R18 then PC := 453
	450	[2828]	JMP      	453 ; PC := 453
	451	[2829]	OP_LOADBOOL	R18 0 0 ; R18 := false
	452	[2829]	RETURN   	R18 2 ; return R18 
	453	[2832]	GETUPVAL 	R18 U5 ; R18 := U5
	454	[2832]	SELF     	R19 R0 K72 ; R20 := R0; R19 := R0[0x1ac1655c]
	455	[2832]	CALL     	R19 2 2 ; R19 := R19(R20)
	456	[2832]	SETTABLE 	R18 K71 R19 ; R18["DamageController"] := R19
	457	[2833]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	458	[2833]	GETUPVAL 	R19 U5 ; R19 := U5
	459	[2833]	GETTABLE 	R19 R19 K71 ; R19 := R19["DamageController"]
	460	[2833]	CALL     	R18 2 2 ; R18 := R18(R19)
	461	[2833]	TEST     	R18 0 ; if not R18 then PC := 465
	462	[2833]	JMP      	465 ; PC := 465
	463	[2834]	OP_LOADBOOL	R18 0 0 ; R18 := false
	464	[2834]	RETURN   	R18 2 ; return R18 
	465	[2837]	GETUPVAL 	R18 U5 ; R18 := U5
	466	[2837]	SELF     	R19 R0 K74 ; R20 := R0; R19 := R0[0xd3a01177]
	467	[2837]	CALL     	R19 2 2 ; R19 := R19(R20)
	468	[2837]	SETTABLE 	R18 K73 R19 ; R18["InputController"] := R19
	469	[2838]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	470	[2838]	GETUPVAL 	R19 U5 ; R19 := U5
	471	[2838]	GETTABLE 	R19 R19 K73 ; R19 := R19["InputController"]
	472	[2838]	CALL     	R18 2 2 ; R18 := R18(R19)
	473	[2838]	TEST     	R18 0 ; if not R18 then PC := 477
	474	[2838]	JMP      	477 ; PC := 477
	475	[2839]	OP_LOADBOOL	R18 0 0 ; R18 := false
	476	[2839]	RETURN   	R18 2 ; return R18 
	477	[2842]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	478	[2842]	GETUPVAL 	R19 U14 ; R19 := U14
	479	[2842]	CALL     	R18 2 2 ; R18 := R18(R19)
	480	[2842]	TEST     	R18 0 ; if not R18 then PC := 504
	481	[2842]	JMP      	504 ; PC := 504
	482	[2843]	GETUPVAL 	R18 U2 ; R18 := U2
	483	[2843]	SELF     	R18 R18 K75 ; R19 := R18; R18 := R18[0x6d7bfacb]
	484	[2843]	CALL     	R18 2 2 ; R18 := R18(R19)
	485	[2843]	SETUPVAL 	R18 U14 ; U14 := R18
	486	[2845]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	487	[2845]	GETUPVAL 	R19 U14 ; R19 := U14
	488	[2845]	CALL     	R18 2 2 ; R18 := R18(R19)
	489	[2845]	TEST     	R18 0 ; if not R18 then PC := 493
	490	[2845]	JMP      	493 ; PC := 493
	491	[2846]	OP_LOADBOOL	R18 0 0 ; R18 := false
	492	[2846]	RETURN   	R18 2 ; return R18 
	493	[2849]	GETGLOBAL	R18 K8 ; R18 := 0xe72d2edb
	494	[2849]	EQ       	1 R18 K10 ; if R18 == 0.000000 then PC := 500
	495	[2849]	JMP      	500 ; PC := 500
	496	[2850]	GETUPVAL 	R18 U14 ; R18 := U14
	497	[2850]	SELF     	R18 R18 K76 ; R19 := R18; R18 := R18[0xeaef69de]
	498	[2850]	GETGLOBAL	R20 K8 ; R20 := 0xe72d2edb
	499	[2850]	CALL     	R18 3 1 ; R18(R19,R20)
	500	[2853]	GETUPVAL 	R18 U14 ; R18 := U14
	501	[2853]	SELF     	R18 R18 K77 ; R19 := R18; R18 := R18[0x1e9695e9]
	502	[2853]	GETUPVAL 	R20 U2 ; R20 := U2
	503	[2853]	CALL     	R18 3 1 ; R18(R19,R20)
	504	[2856]	GETUPVAL 	R18 U6 ; R18 := U6
	505	[2856]	GETTABLE 	R18 R18 K78 ; R18 := R18["StalkerMode"]
	506	[2856]	GETGLOBAL	R19 K79 ; R19 := 0x0032441c
	507	[2856]	GETTABLE 	R19 R19 K78 ; R19 := R19["StalkerMode"]
	508	[2856]	EQ       	0 R19 K69 ; if R19 ~= nil then PC := 511
	509	[2856]	JMP      	511 ; PC := 511
	510	[2856]	OP_LOADBOOL	R19 0 1 ; R19 := false; PC := 511
	511	[2856]	OP_LOADBOOL	R19 1 0 ; R19 := true
	512	[2856]	EQ       	1 R18 R19 ; if R18 == R19 then PC := 527
	513	[2856]	JMP      	527 ; PC := 527
	514	[2857]	GETUPVAL 	R18 U6 ; R18 := U6
	515	[2857]	GETGLOBAL	R19 K79 ; R19 := 0x0032441c
	516	[2857]	GETTABLE 	R19 R19 K78 ; R19 := R19["StalkerMode"]
	517	[2857]	EQ       	0 R19 K69 ; if R19 ~= nil then PC := 520
	518	[2857]	JMP      	520 ; PC := 520
	519	[2857]	OP_LOADBOOL	R19 0 1 ; R19 := false; PC := 520
	520	[2857]	OP_LOADBOOL	R19 1 0 ; R19 := true
	521	[2857]	SETTABLE 	R18 K78 R19 ; R18["StalkerMode"] := R19
	522	[2858]	GETUPVAL 	R18 U14 ; R18 := U14
	523	[2858]	SELF     	R18 R18 K80 ; R19 := R18; R18 := R18[0x9b069215]
	524	[2858]	GETUPVAL 	R20 U6 ; R20 := U6
	525	[2858]	GETTABLE 	R20 R20 K78 ; R20 := R20["StalkerMode"]
	526	[2858]	CALL     	R18 3 1 ; R18(R19,R20)
	527	[2861]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	528	[2861]	GETUPVAL 	R19 U8 ; R19 := U8
	529	[2861]	CALL     	R18 2 2 ; R18 := R18(R19)
	530	[2861]	TEST     	R18 0 ; if not R18 then PC := 554
	531	[2861]	JMP      	554 ; PC := 554
	532	[2862]	GETUPVAL 	R18 U2 ; R18 := U2
	533	[2862]	SELF     	R18 R18 K81 ; R19 := R18; R18 := R18[0x0803eee1]
	534	[2862]	CALL     	R18 2 2 ; R18 := R18(R19)
	535	[2862]	SETUPVAL 	R18 U8 ; U8 := R18
	536	[2864]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	537	[2864]	GETUPVAL 	R19 U8 ; R19 := U8
	538	[2864]	CALL     	R18 2 2 ; R18 := R18(R19)
	539	[2864]	TEST     	R18 0 ; if not R18 then PC := 543
	540	[2864]	JMP      	543 ; PC := 543
	541	[2865]	OP_LOADBOOL	R18 0 0 ; R18 := false
	542	[2865]	RETURN   	R18 2 ; return R18 
	543	[2868]	GETGLOBAL	R18 K8 ; R18 := 0xe72d2edb
	544	[2868]	EQ       	1 R18 K10 ; if R18 == 0.000000 then PC := 550
	545	[2868]	JMP      	550 ; PC := 550
	546	[2869]	GETUPVAL 	R18 U8 ; R18 := U8
	547	[2869]	SELF     	R18 R18 K76 ; R19 := R18; R18 := R18[0xeaef69de]
	548	[2869]	GETGLOBAL	R20 K8 ; R20 := 0xe72d2edb
	549	[2869]	CALL     	R18 3 1 ; R18(R19,R20)
	550	[2872]	GETUPVAL 	R18 U8 ; R18 := U8
	551	[2872]	SELF     	R18 R18 K77 ; R19 := R18; R18 := R18[0x1e9695e9]
	552	[2872]	GETUPVAL 	R20 U2 ; R20 := U2
	553	[2872]	CALL     	R18 3 1 ; R18(R19,R20)
	554	[2876]	SETUPVAL 	R0 U9 ; U9 := R0
	555	[2879]	GETUPVAL 	R18 U14 ; R18 := U14
	556	[2879]	SELF     	R18 R18 K82 ; R19 := R18; R18 := R18[0x6010b1fa]
	557	[2879]	CALL     	R18 2 1 ; R18(R19)
	558	[2880]	GETGLOBAL	R18 K23 ; R18 := _T
	559	[2880]	GETUPVAL 	R19 U9 ; R19 := U9
	560	[2880]	SETTABLE 	R18 K83 R19 ; R18["CurrentHudAvatar"] := R19
	561	[2882]	GETUPVAL 	R18 U8 ; R18 := U8
	562	[2882]	SELF     	R18 R18 K84 ; R19 := R18; R18 := R18[0x484bc106]
	563	[2882]	CALL     	R18 2 1 ; R18(R19)
	564	[2883]	GETUPVAL 	R18 U8 ; R18 := U8
	565	[2883]	SELF     	R18 R18 K36 ; R19 := R18; R18 := R18[0x5cee792a]
	566	[2883]	GETUPVAL 	R20 U6 ; R20 := U6
	567	[2883]	GETTABLE 	R20 R20 K20 ; R20 := R20["IsSpectating"]
	568	[2883]	NOT      	R20 R20 ; R20 := not R20
	569	[2883]	CALL     	R18 3 1 ; R18(R19,R20)
	570	[2885]	GETUPVAL 	R18 U15 ; R18 := U15
	571	[2885]	SELF     	R18 R18 K85 ; R19 := R18; R18 := R18[0x7c09c373]
	572	[2885]	CALL     	R18 2 1 ; R18(R19)
	573	[2886]	GETUPVAL 	R18 U16 ; R18 := U16
	574	[2886]	EQ       	1 R18 K69 ; if R18 == nil then PC := 579
	575	[2886]	JMP      	579 ; PC := 579
	576	[2887]	GETUPVAL 	R18 U16 ; R18 := U16
	577	[2887]	SELF     	R18 R18 K86 ; R19 := R18; R18 := R18[0xe81208f9]
	578	[2887]	CALL     	R18 2 1 ; R18(R19)
	579	[2890]	GETUPVAL 	R18 U6 ; R18 := U6
	580	[2890]	GETTABLE 	R18 R18 K20 ; R18 := R18["IsSpectating"]
	581	[2890]	TEST     	R18 1 ; if R18 then PC := 651
	582	[2890]	JMP      	651 ; PC := 651
	583	[2891]	GETUPVAL 	R18 U11 ; R18 := U11
	584	[2891]	GETTABLE 	R18 R18 K46 ; R18 := R18["Cached"]
	585	[2891]	TEST     	R18 0 ; if not R18 then PC := 605
	586	[2891]	JMP      	605 ; PC := 605
	587	[2892]	LOADK    	R18 := 1.000000
	588	[2892]	GETUPVAL 	R19 U11 ; R19 := U11
	589	[2892]	GETTABLE 	R19 R19 K60 ; R19 := R19["Buffs"]
	590	[2892]	LEN      	R19 R19 ; R19 := # R19
	591	[2892]	LOADK    	R20 := 1.000000
	592	[2892]	FORPREP  	R18 604 ; R18 -= R20; PC := 604
	593	[2893]	GETUPVAL 	R22 U11 ; R22 := U11
	594	[2893]	GETTABLE 	R22 R22 K60 ; R22 := R22["Buffs"]
	595	[2893]	GETTABLE 	R22 R22 R21 ; R22 := R22[R21]
	596	[2894]	SETTABLE 	R22 K48 R0 ; R22["instigator"] := R0
	597	[2896]	SELF     	R23 R0 K87 ; R24 := R0; R23 := R0[0x37e45fb5]
	598	[2896]	GETUPVAL 	R25 U11 ; R25 := U11
	599	[2896]	GETTABLE 	R25 R25 K60 ; R25 := R25["Buffs"]
	600	[2896]	GETTABLE 	R25 R25 R21 ; R25 := R25[R21]
	601	[2896]	OP_LOADBOOL	R26 1 0 ; R26 := true
	602	[2896]	OP_LOADBOOL	R27 0 0 ; R27 := false
	603	[2896]	CALL     	R23 5 1 ; R23(R24,R25,R26,R27)
	604	[2892]	FORLOOP  	R18 593 ; R18 += R20; if R18 <= R19 then begin PC := 593; R21 := R18 end
	605	[2900]	GETUPVAL 	R23 U11 ; R23 := U11
	606	[2900]	SETTABLE 	R23 K46 K39 ; R23["Cached"] := false
	607	[2901]	GETUPVAL 	R23 U11 ; R23 := U11
	608	[2901]	NEWTABLE 	R24 0 0 ; R24 := {}
	609	[2901]	SETTABLE 	R23 K60 R24 ; R23["Buffs"] := R24
	610	[2903]	SELF     	R23 R0 K47 ; R24 := R0; R23 := R0[0x1f7e8969]
	611	[2903]	CALL     	R23 2 2 ; R23 := R23(R24)
	612	[2904]	LOADK    	R24 := 1.000000
	613	[2904]	LEN      	R25 R23 ; R25 := # R23
	614	[2904]	LOADK    	R26 := 1.000000
	615	[2904]	FORPREP  	R24 619 ; R24 -= R26; PC := 619
	616	[2905]	GETUPVAL 	R28 U17 ; R28 := U17
	617	[2905]	GETTABLE 	R29 R23 R27 ; R29 := R23[R27]
	618	[2905]	CALL     	R28 2 1 ; R28(R29)
	619	[2904]	FORLOOP  	R24 616 ; R24 += R26; if R24 <= R25 then begin PC := 616; R27 := R24 end
	620	[2907]	GETGLOBAL	R28 K88 ; R28 := 0x7ed0a956
	621	[2907]	LOADK    	R29 K89 ; R29 := "/Lotus/Types/Enemies/Orokin/Entrati/EntratiTech/EntratiTechAvatar"
	622	[2907]	CALL     	R28 2 2 ; R28 := R28(R29)
	623	[2908]	SELF     	R29 R0 K16 ; R30 := R0; R29 := R0[0xf2deaf69]
	624	[2908]	GETGLOBAL	R31 K90 ; R31 := gLotusVehicleAvatarType
	625	[2908]	CALL     	R29 3 2 ; R29 := R29(R30,R31)
	626	[2908]	TEST     	R29 0 ; if not R29 then PC := 651
	627	[2908]	JMP      	651 ; PC := 651
	628	[2908]	SELF     	R29 R0 K16 ; R30 := R0; R29 := R0[0xf2deaf69]
	629	[2908]	MOVE     	R31 R28 ; R31 := R28
	630	[2908]	CALL     	R29 3 2 ; R29 := R29(R30,R31)
	631	[2908]	TEST     	R29 1 ; if R29 then PC := 651
	632	[2908]	JMP      	651 ; PC := 651
	633	[2909]	SELF     	R29 R0 K91 ; R30 := R0; R29 := R0[0xff005826]
	634	[2909]	CALL     	R29 2 2 ; R29 := R29(R30)
	635	[2911]	GETGLOBAL	R30 K0 ; R30 := 0x7b998233
	636	[2911]	MOVE     	R31 R29 ; R31 := R29
	637	[2911]	CALL     	R30 2 2 ; R30 := R30(R31)
	638	[2911]	TEST     	R30 1 ; if R30 then PC := 651
	639	[2911]	JMP      	651 ; PC := 651
	640	[2912]	SELF     	R30 R29 K47 ; R31 := R29; R30 := R29[0x1f7e8969]
	641	[2912]	CALL     	R30 2 2 ; R30 := R30(R31)
	642	[2912]	MOVE     	R23 R30 ; R23 := R30
	643	[2913]	LOADK    	R30 := 1.000000
	644	[2913]	LEN      	R31 R23 ; R31 := # R23
	645	[2913]	LOADK    	R32 := 1.000000
	646	[2913]	FORPREP  	R30 650 ; R30 -= R32; PC := 650
	647	[2914]	GETUPVAL 	R34 U17 ; R34 := U17
	648	[2914]	GETTABLE 	R35 R23 R33 ; R35 := R23[R33]
	649	[2914]	CALL     	R34 2 1 ; R34(R35)
	650	[2913]	FORLOOP  	R30 647 ; R30 += R32; if R30 <= R31 then begin PC := 647; R33 := R30 end
	651	[2920]	GETUPVAL 	R34 U5 ; R34 := U5
	652	[2920]	GETTABLE 	R34 R34 K64 ; R34 := R34["InventoryController"]
	653	[2920]	SELF     	R34 R34 K92 ; R35 := R34; R34 := R34[0xac03381f]
	654	[2920]	CALL     	R34 2 2 ; R34 := R34(R35)
	655	[2922]	GETUPVAL 	R35 U6 ; R35 := U6
	656	[2922]	GETTABLE 	R35 R35 K20 ; R35 := R35["IsSpectating"]
	657	[2922]	TEST     	R35 1 ; if R35 then PC := 706
	658	[2922]	JMP      	706 ; PC := 706
	659	[2922]	TEST     	R34 1 ; if R34 then PC := 706
	660	[2922]	JMP      	706 ; PC := 706
	661	[2923]	GETUPVAL 	R35 U2 ; R35 := U2
	662	[2923]	SELF     	R35 R35 K67 ; R36 := R35; R35 := R35[0xa534c3ac]
	663	[2923]	CALL     	R35 2 2 ; R35 := R35(R36)
	664	[2924]	GETGLOBAL	R36 K0 ; R36 := 0x7b998233
	665	[2924]	MOVE     	R37 R35 ; R37 := R35
	666	[2924]	CALL     	R36 2 2 ; R36 := R36(R37)
	667	[2924]	TEST     	R36 1 ; if R36 then PC := 679
	668	[2924]	JMP      	679 ; PC := 679
	669	[2925]	SELF     	R36 R35 K62 ; R37 := R35; R36 := R35[0xde321e6f]
	670	[2925]	CALL     	R36 2 2 ; R36 := R36(R37)
	671	[2926]	GETGLOBAL	R37 K0 ; R37 := 0x7b998233
	672	[2926]	MOVE     	R38 R36 ; R38 := R36
	673	[2926]	CALL     	R37 2 2 ; R37 := R37(R38)
	674	[2926]	TEST     	R37 1 ; if R37 then PC := 679
	675	[2926]	JMP      	679 ; PC := 679
	676	[2927]	SELF     	R37 R36 K93 ; R38 := R36; R37 := R36[0x2676deee]
	677	[2927]	CALL     	R37 2 2 ; R37 := R37(R38)
	678	[2927]	SETUPVAL 	R37 U18 ; U18 := R37
	679	[2930]	GETUPVAL 	R37 U19 ; R37 := U19
	680	[2930]	CALL     	R37 1 1 ; R37()
	681	[2931]	JMP      	706 ; PC := 706
	682	[2932]	GETGLOBAL	R37 K0 ; R37 := 0x7b998233
	683	[2932]	GETUPVAL 	R38 U5 ; R38 := U5
	684	[2932]	GETTABLE 	R38 R38 K64 ; R38 := R38["InventoryController"]
	685	[2932]	CALL     	R37 2 2 ; R37 := R37(R38)
	686	[2932]	TEST     	R37 1 ; if R37 then PC := 706
	687	[2932]	JMP      	706 ; PC := 706
	688	[2933]	GETUPVAL 	R37 U5 ; R37 := U5
	689	[2933]	GETTABLE 	R37 R37 K64 ; R37 := R37["InventoryController"]
	690	[2933]	SELF     	R37 R37 K92 ; R38 := R37; R37 := R37[0xac03381f]
	691	[2933]	CALL     	R37 2 2 ; R37 := R37(R38)
	692	[2934]	GETUPVAL 	R38 U12 ; R38 := U12
	693	[2934]	GETTABLE 	R38 R38 K94 ; R38 := R38["SpaceMode"]
	694	[2934]	EQ       	1 R38 R37 ; if R38 == R37 then PC := 706
	695	[2934]	JMP      	706 ; PC := 706
	696	[2935]	GETUPVAL 	R38 U12 ; R38 := U12
	697	[2935]	SETTABLE 	R38 K94 R37 ; R38["SpaceMode"] := R37
	698	[2936]	GETUPVAL 	R38 U12 ; R38 := U12
	699	[2936]	GETUPVAL 	R39 U5 ; R39 := U5
	700	[2936]	GETTABLE 	R39 R39 K64 ; R39 := R39["InventoryController"]
	701	[2936]	SELF     	R39 R39 K65 ; R40 := R39; R39 := R39[0xf7d48ee0]
	702	[2936]	CALL     	R39 2 2 ; R39 := R39(R40)
	703	[2936]	SETTABLE 	R38 K61 R39 ; R38["ActivePowerSuit"] := R39
	704	[2937]	GETUPVAL 	R38 U13 ; R38 := U13
	705	[2937]	SETTABLE 	R38 K68 K69 ; R38["CustomAbilities"] := nil
	706	[2941]	GETGLOBAL	R38 K0 ; R38 := 0x7b998233
	707	[2941]	GETUPVAL 	R39 U18 ; R39 := U18
	708	[2941]	CALL     	R38 2 2 ; R38 := R38(R39)
	709	[2941]	TEST     	R38 0 ; if not R38 then PC := 742
	710	[2941]	JMP      	742 ; PC := 742
	711	[2941]	GETGLOBAL	R38 K0 ; R38 := 0x7b998233
	712	[2941]	GETUPVAL 	R39 U5 ; R39 := U5
	713	[2941]	GETTABLE 	R39 R39 K64 ; R39 := R39["InventoryController"]
	714	[2941]	CALL     	R38 2 2 ; R38 := R38(R39)
	715	[2941]	TEST     	R38 1 ; if R38 then PC := 742
	716	[2941]	JMP      	742 ; PC := 742
	717	[2941]	GETUPVAL 	R38 U5 ; R38 := U5
	718	[2941]	GETTABLE 	R38 R38 K64 ; R38 := R38["InventoryController"]
	719	[2941]	SELF     	R38 R38 K92 ; R39 := R38; R38 := R38[0xac03381f]
	720	[2941]	CALL     	R38 2 2 ; R38 := R38(R39)
	721	[2941]	TEST     	R38 1 ; if R38 then PC := 742
	722	[2941]	JMP      	742 ; PC := 742
	723	[2941]	GETUPVAL 	R38 U6 ; R38 := U6
	724	[2941]	GETTABLE 	R38 R38 K20 ; R38 := R38["IsSpectating"]
	725	[2941]	TEST     	R38 1 ; if R38 then PC := 742
	726	[2941]	JMP      	742 ; PC := 742
	727	[2941]	GETGLOBAL	R38 K0 ; R38 := 0x7b998233
	728	[2941]	GETUPVAL 	R39 U5 ; R39 := U5
	729	[2941]	GETTABLE 	R39 R39 K64 ; R39 := R39["InventoryController"]
	730	[2941]	SELF     	R39 R39 K93 ; R40 := R39; R39 := R39[0x2676deee]
	731	[2941]	CALL     	R39 2 0 ; R39,... := R39(R40)
	732	[2941]	CALL     	R38 0 2 ; R38 := R38(R39,...)
	733	[2941]	TEST     	R38 1 ; if R38 then PC := 742
	734	[2941]	JMP      	742 ; PC := 742
	735	[2942]	GETUPVAL 	R38 U5 ; R38 := U5
	736	[2942]	GETTABLE 	R38 R38 K64 ; R38 := R38["InventoryController"]
	737	[2942]	SELF     	R38 R38 K93 ; R39 := R38; R38 := R38[0x2676deee]
	738	[2942]	CALL     	R38 2 2 ; R38 := R38(R39)
	739	[2942]	SETUPVAL 	R38 U18 ; U18 := R38
	740	[2943]	GETUPVAL 	R38 U19 ; R38 := U19
	741	[2943]	CALL     	R38 1 1 ; R38()
	742	[2946]	GETGLOBAL	R38 K0 ; R38 := 0x7b998233
	743	[2946]	GETUPVAL 	R39 U5 ; R39 := U5
	744	[2946]	GETTABLE 	R39 R39 K64 ; R39 := R39["InventoryController"]
	745	[2946]	CALL     	R38 2 2 ; R38 := R38(R39)
	746	[2946]	TEST     	R38 0 ; if not R38 then PC := 750
	747	[2946]	JMP      	750 ; PC := 750
	748	[2947]	OP_LOADBOOL	R38 0 0 ; R38 := false
	749	[2947]	RETURN   	R38 2 ; return R38 
	750	[2950]	GETUPVAL 	R38 U5 ; R38 := U5
	751	[2950]	GETTABLE 	R38 R38 K64 ; R38 := R38["InventoryController"]
	752	[2950]	SELF     	R38 R38 K92 ; R39 := R38; R38 := R38[0xac03381f]
	753	[2950]	CALL     	R38 2 2 ; R38 := R38(R39)
	754	[2951]	LOADK    	R39 := 45.000000
	755	[2952]	LOADK    	R40 := 10.000000
	756	[2953]	GETUPVAL 	R41 U3 ; R41 := U3
	757	[2953]	SELF     	R41 R41 K95 ; R42 := R41; R41 := R41[0xec943d0f]
	758	[2953]	CALL     	R41 2 2 ; R41 := R41(R42)
	759	[2954]	GETUPVAL 	R42 U6 ; R42 := U6
	760	[2954]	GETTABLE 	R42 R42 K96 ; R42 := R42["mSpaceMode"]
	761	[2954]	EQ       	1 R42 R38 ; if R42 == R38 then PC := 866
	762	[2954]	JMP      	866 ; PC := 866
	763	[2954]	GETGLOBAL	R42 K0 ; R42 := 0x7b998233
	764	[2954]	GETGLOBAL	R43 K23 ; R43 := _T
	765	[2954]	GETTABLE 	R43 R43 K24 ; R43 := R43["CommanderMap"]
	766	[2954]	CALL     	R42 2 2 ; R42 := R42(R43)
	767	[2954]	TEST     	R42 0 ; if not R42 then PC := 866
	768	[2954]	JMP      	866 ; PC := 866
	769	[2955]	GETUPVAL 	R42 U6 ; R42 := U6
	770	[2955]	SETTABLE 	R42 K96 R38 ; R42["mSpaceMode"] := R38
	771	[2956]	GETUPVAL 	R42 U6 ; R42 := U6
	772	[2956]	GETTABLE 	R42 R42 K96 ; R42 := R42["mSpaceMode"]
	773	[2956]	TEST     	R42 0 ; if not R42 then PC := 809
	774	[2956]	JMP      	809 ; PC := 809
	775	[2957]	LOADNIL  	R42 R42 ; R42 := nil
	776	[2957]	SETUPVAL 	R42 U18 ; U18 := R42
	777	[2959]	GETUPVAL 	R42 U5 ; R42 := U5
	778	[2959]	GETTABLE 	R42 R42 K64 ; R42 := R42["InventoryController"]
	779	[2959]	SELF     	R42 R42 K97 ; R43 := R42; R42 := R42[0x14027b7e]
	780	[2959]	CALL     	R42 2 2 ; R42 := R42(R43)
	781	[2959]	TEST     	R42 1 ; if R42 then PC := 828
	782	[2959]	JMP      	828 ; PC := 828
	783	[2960]	TEST     	R41 1 ; if R41 then PC := 803
	784	[2960]	JMP      	803 ; PC := 803
	785	[2961]	GETUPVAL 	R42 U3 ; R42 := U3
	786	[2961]	SELF     	R42 R42 K98 ; R43 := R42; R42 := R42[0xeadda4ed]
	787	[2961]	LOADK    	R44 := 150.000000
	788	[2961]	GETUPVAL 	R45 U20 ; R45 := U20
	789	[2961]	GETTABLE 	R45 R45 K99 ; R45 := R45[0x06d055f9]
	790	[2961]	GETUPVAL 	R46 U6 ; R46 := U6
	791	[2961]	GETTABLE 	R46 R46 K96 ; R46 := R46["mSpaceMode"]
	792	[2961]	LOADK    	R47 := 300.000000
	793	[2961]	MOVE     	R48 R40 ; R48 := R40
	794	[2961]	CALL     	R45 4 0 ; R45,... := R45(R46,R47,R48)
	795	[2961]	CALL     	R42 0 1 ; R42(R43,...)
	796	[2962]	LOADK    	R39 := 150.000000
	797	[2963]	GETUPVAL 	R42 U6 ; R42 := U6
	798	[2963]	GETTABLE 	R42 R42 K96 ; R42 := R42["mSpaceMode"]
	799	[2963]	TEST     	R42 0 ; if not R42 then PC := 828
	800	[2963]	JMP      	828 ; PC := 828
	801	[2964]	LOADK    	R40 := 300.000000
	802	[2965]	JMP      	828 ; PC := 828
	803	[2967]	GETUPVAL 	R42 U3 ; R42 := U3
	804	[2967]	SELF     	R42 R42 K98 ; R43 := R42; R42 := R42[0xeadda4ed]
	805	[2967]	MOVE     	R44 R39 ; R44 := R39
	806	[2967]	MOVE     	R45 R40 ; R45 := R40
	807	[2967]	CALL     	R42 4 1 ; R42(R43,R44,R45)
	808	[2969]	JMP      	828 ; PC := 828
	809	[2971]	TEST     	R41 1 ; if R41 then PC := 823
	810	[2971]	JMP      	823 ; PC := 823
	811	[2972]	GETUPVAL 	R42 U3 ; R42 := U3
	812	[2972]	SELF     	R42 R42 K98 ; R43 := R42; R42 := R42[0xeadda4ed]
	813	[2972]	LOADK    	R44 := 150.000000
	814	[2972]	GETUPVAL 	R45 U20 ; R45 := U20
	815	[2972]	GETTABLE 	R45 R45 K99 ; R45 := R45[0x06d055f9]
	816	[2972]	GETUPVAL 	R46 U6 ; R46 := U6
	817	[2972]	GETTABLE 	R46 R46 K96 ; R46 := R46["mSpaceMode"]
	818	[2972]	LOADK    	R47 := 300.000000
	819	[2972]	MOVE     	R48 R40 ; R48 := R40
	820	[2972]	CALL     	R45 4 0 ; R45,... := R45(R46,R47,R48)
	821	[2972]	CALL     	R42 0 1 ; R42(R43,...)
	822	[2972]	JMP      	828 ; PC := 828
	823	[2974]	GETUPVAL 	R42 U3 ; R42 := U3
	824	[2974]	SELF     	R42 R42 K98 ; R43 := R42; R42 := R42[0xeadda4ed]
	825	[2974]	MOVE     	R44 R39 ; R44 := R39
	826	[2974]	MOVE     	R45 R40 ; R45 := R40
	827	[2974]	CALL     	R42 4 1 ; R42(R43,R44,R45)
	828	[2977]	GETGLOBAL	R42 K0 ; R42 := 0x7b998233
	829	[2977]	GETGLOBAL	R43 K79 ; R43 := 0x0032441c
	830	[2977]	GETTABLE 	R43 R43 K100 ; R43 := R43["UIMovie_ArcWingHudMovie"]
	831	[2977]	CALL     	R42 2 2 ; R42 := R42(R43)
	832	[2977]	TEST     	R42 1 ; if R42 then PC := 866
	833	[2977]	JMP      	866 ; PC := 866
	834	[2978]	GETGLOBAL	R42 K101 ; R42 := 0x9ba7909f
	835	[2978]	SELF     	R42 R42 K102 ; R43 := R42; R42 := R42[0xbcfb64ab]
	836	[2978]	GETGLOBAL	R44 K79 ; R44 := 0x0032441c
	837	[2978]	GETTABLE 	R44 R44 K100 ; R44 := R44["UIMovie_ArcWingHudMovie"]
	838	[2978]	CALL     	R42 3 2 ; R42 := R42(R43,R44)
	839	[2979]	GETUPVAL 	R43 U6 ; R43 := U6
	840	[2979]	GETTABLE 	R43 R43 K96 ; R43 := R43["mSpaceMode"]
	841	[2979]	TEST     	R43 0 ; if not R43 then PC := 854
	842	[2979]	JMP      	854 ; PC := 854
	843	[2980]	GETGLOBAL	R43 K0 ; R43 := 0x7b998233
	844	[2980]	MOVE     	R44 R42 ; R44 := R42
	845	[2980]	CALL     	R43 2 2 ; R43 := R43(R44)
	846	[2980]	TEST     	R43 0 ; if not R43 then PC := 866
	847	[2980]	JMP      	866 ; PC := 866
	848	[2981]	GETGLOBAL	R43 K101 ; R43 := 0x9ba7909f
	849	[2981]	SELF     	R43 R43 K103 ; R44 := R43; R43 := R43[0x6dd7aa66]
	850	[2981]	GETGLOBAL	R45 K79 ; R45 := 0x0032441c
	851	[2981]	GETTABLE 	R45 R45 K100 ; R45 := R45["UIMovie_ArcWingHudMovie"]
	852	[2981]	CALL     	R43 3 1 ; R43(R44,R45)
	853	[2982]	JMP      	866 ; PC := 866
	854	[2983]	GETGLOBAL	R43 K0 ; R43 := 0x7b998233
	855	[2983]	MOVE     	R44 R42 ; R44 := R42
	856	[2983]	CALL     	R43 2 2 ; R43 := R43(R44)
	857	[2983]	TEST     	R43 1 ; if R43 then PC := 866
	858	[2983]	JMP      	866 ; PC := 866
	859	[2984]	SELF     	R43 R42 K104 ; R44 := R42; R43 := R42[0x32302b4a]
	860	[2984]	CALL     	R43 2 1 ; R43(R44)
	861	[2986]	GETGLOBAL	R43 K5 ; R43 := 0x3d106989
	862	[2986]	LOADK    	R44 K105 ; R44 := "ScopeDebug: Show from HudRedux"
	863	[2986]	CALL     	R43 2 1 ; R43(R44)
	864	[2987]	GETUPVAL 	R43 U21 ; R43 := U21
	865	[2987]	CALL     	R43 1 1 ; R43()
	866	[2992]	GETUPVAL 	R43 U6 ; R43 := U6
	867	[2992]	GETTABLE 	R43 R43 K106 ; R43 := R43["mDistanceFieldMiniMap"]
	868	[2992]	EQ       	1 R41 R43 ; if R41 == R43 then PC := 893
	869	[2992]	JMP      	893 ; PC := 893
	870	[2993]	GETUPVAL 	R43 U6 ; R43 := U6
	871	[2993]	SETTABLE 	R43 K106 R41 ; R43["mDistanceFieldMiniMap"] := R41
	872	[2994]	GETUPVAL 	R43 U6 ; R43 := U6
	873	[2994]	GETTABLE 	R43 R43 K106 ; R43 := R43["mDistanceFieldMiniMap"]
	874	[2994]	TEST     	R43 1 ; if R43 then PC := 888
	875	[2994]	JMP      	888 ; PC := 888
	876	[2995]	GETUPVAL 	R43 U3 ; R43 := U3
	877	[2995]	SELF     	R43 R43 K98 ; R44 := R43; R43 := R43[0xeadda4ed]
	878	[2995]	LOADK    	R45 := 150.000000
	879	[2995]	GETUPVAL 	R46 U20 ; R46 := U20
	880	[2995]	GETTABLE 	R46 R46 K99 ; R46 := R46[0x06d055f9]
	881	[2995]	GETUPVAL 	R47 U6 ; R47 := U6
	882	[2995]	GETTABLE 	R47 R47 K96 ; R47 := R47["mSpaceMode"]
	883	[2995]	LOADK    	R48 := 300.000000
	884	[2995]	MOVE     	R49 R40 ; R49 := R40
	885	[2995]	CALL     	R46 4 0 ; R46,... := R46(R47,R48,R49)
	886	[2995]	CALL     	R43 0 1 ; R43(R44,...)
	887	[2995]	JMP      	893 ; PC := 893
	888	[2997]	GETUPVAL 	R43 U3 ; R43 := U3
	889	[2997]	SELF     	R43 R43 K98 ; R44 := R43; R43 := R43[0xeadda4ed]
	890	[2997]	MOVE     	R45 R39 ; R45 := R39
	891	[2997]	MOVE     	R46 R40 ; R46 := R40
	892	[2997]	CALL     	R43 4 1 ; R43(R44,R45,R46)
	893	[3001]	GETUPVAL 	R43 U22 ; R43 := U22
	894	[3001]	LEN      	R43 R43 ; R43 := # R43
	895	[3001]	EQ       	0 R43 K10 ; if R43 ~= 0.000000 then PC := 912
	896	[3001]	JMP      	912 ; PC := 912
	897	[3002]	GETGLOBAL	R43 K25 ; R43 := 0x89326c93
	898	[3002]	SELF     	R43 R43 K107 ; R44 := R43; R43 := R43[0x7d108ddb]
	899	[3002]	CALL     	R43 2 2 ; R43 := R43(R44)
	900	[3002]	SETUPVAL 	R43 U22 ; U22 := R43
	901	[3003]	GETUPVAL 	R43 U12 ; R43 := U12
	902	[3003]	NEWTABLE 	R44 0 0 ; R44 := {}
	903	[3003]	SETTABLE 	R43 K108 R44 ; R43["PlayerAvatars"] := R44
	904	[3005]	GETUPVAL 	R43 U22 ; R43 := U22
	905	[3005]	LEN      	R43 R43 ; R43 := # R43
	906	[3005]	EQ       	1 R43 K10 ; if R43 == 0.000000 then PC := 912
	907	[3005]	JMP      	912 ; PC := 912
	908	[3006]	GETGLOBAL	R43 K25 ; R43 := 0x89326c93
	909	[3006]	SELF     	R43 R43 K109 ; R44 := R43; R43 := R43[0xb7d33840]
	910	[3006]	LOADK    	R45 K110 ; R45 := "OnPlayersChanged"
	911	[3006]	CALL     	R43 3 1 ; R43(R44,R45)
	912	[3010]	GETUPVAL 	R43 U23 ; R43 := U23
	913	[3010]	TEST     	R43 1 ; if R43 then PC := 921
	914	[3010]	JMP      	921 ; PC := 921
	915	[3011]	GETGLOBAL	R43 K111 ; R43 := 0xe7f2b02f
	916	[3011]	SELF     	R43 R43 K112 ; R44 := R43; R43 := R43[0xe045a641]
	917	[3011]	LOADK    	R45 K113 ; R45 := "HUD_ExternalGameReady"
	918	[3011]	CALL     	R43 3 1 ; R43(R44,R45)
	919	[3012]	OP_LOADBOOL	R43 1 0 ; R43 := true
	920	[3012]	SETUPVAL 	R43 U23 ; U23 := R43
	921	[3015]	OP_LOADBOOL	R43 1 0 ; R43 := true
	922	[3015]	RETURN   	R43 2 ; return R43 
	923	[3016]	RETURN   	R0 1 ; return 

function #105 <?:3018,3033> (66 instructions, 264 bytes at 000002117FBF3C10)
0 params, 12 slots, 0 upvalues, 0 locals, 17 constants, 0 functions
	1	[3019]	GETGLOBAL	R0 K0 ; R0 := 0x9ba7909f
	2	[3019]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x0ea73276]
	3	[3019]	LOADK    	R2 K2 ; R2 := "VIEW_RAILJACK_SYSTEMS_MENU"
	4	[3019]	OP_LOADBOOL	R3 0 0 ; R3 := false
	5	[3019]	LOADNIL  	R4 R4 ; R4 := nil
	6	[3019]	OP_LOADBOOL	R5 1 0 ; R5 := true
	7	[3019]	OP_LOADBOOL	R6 0 0 ; R6 := false
	8	[3019]	CALL     	R0 7 2 ; R0 := R0(R1,R2,R3,R4,R5,R6)
	9	[3020]	LOADK    	R1 K3 ; R1 := ""
	10	[3021]	LEN      	R2 R0 ; R2 := # R0
	11	[3021]	LT       	0 K4 R2 ; if 0.000000 >= R2 then PC := 30
	12	[3021]	JMP      	30 ; PC := 30
	13	[3022]	GETGLOBAL	R2 K5 ; R2 := 0xae91e43b
	14	[3022]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0x42b04007]
	15	[3022]	LOADK    	R4 K7 ; R4 := "<"
	16	[3022]	GETTABLE 	R5 R0 K8 ; R5 := R0[1.000000]
	17	[3022]	LOADK    	R6 K9 ; R6 := ">"
	18	[3022]	CONCAT   	R4 R4 R6 ; R4 := R4 .. R5 .. R6
	19	[3022]	OP_LOADBOOL	R5 1 0 ; R5 := true
	20	[3022]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	21	[3022]	LOADK    	R3 K10 ; R3 := " "
	22	[3022]	GETGLOBAL	R4 K11 ; R4 := 0x5f0788c4
	23	[3022]	GETGLOBAL	R5 K5 ; R5 := 0xae91e43b
	24	[3022]	SELF     	R5 R5 K6 ; R6 := R5; R5 := R5[0x42b04007]
	25	[3022]	LOADK    	R7 K12 ; R7 := "/Lotus/Language/CrewShip/CommandConsole_Tactical"
	26	[3022]	OP_LOADBOOL	R8 0 0 ; R8 := false
	27	[3022]	CALL     	R5 4 0 ; R5,... := R5(R6,R7,R8)
	28	[3022]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	29	[3022]	CONCAT   	R1 R2 R4 ; R1 := R2 .. R3 .. R4
	30	[3025]	GETGLOBAL	R2 K13 ; R2 := 0xbe190284
	31	[3025]	SELF     	R2 R2 K14 ; R3 := R2; R2 := R2[0xbcb03142]
	32	[3025]	CALL     	R2 2 2 ; R2 := R2(R3)
	33	[3025]	TEST     	R2 1 ; if R2 then PC := 65
	34	[3025]	JMP      	65 ; PC := 65
	35	[3026]	GETGLOBAL	R2 K0 ; R2 := 0x9ba7909f
	36	[3026]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0x0ea73276]
	37	[3026]	LOADK    	R4 K15 ; R4 := "EQUIP_RAILJACK_REPAIR_TOOL_MENU"
	38	[3026]	OP_LOADBOOL	R5 0 0 ; R5 := false
	39	[3026]	LOADNIL  	R6 R6 ; R6 := nil
	40	[3026]	OP_LOADBOOL	R7 1 0 ; R7 := true
	41	[3026]	OP_LOADBOOL	R8 0 0 ; R8 := false
	42	[3026]	CALL     	R2 7 2 ; R2 := R2(R3,R4,R5,R6,R7,R8)
	43	[3027]	LEN      	R3 R2 ; R3 := # R2
	44	[3027]	LT       	0 K4 R3 ; if 0.000000 >= R3 then PC := 65
	45	[3027]	JMP      	65 ; PC := 65
	46	[3028]	MOVE     	R3 R1 ; R3 := R1
	47	[3028]	LOADK    	R4 K10 ; R4 := " "
	48	[3028]	GETGLOBAL	R5 K5 ; R5 := 0xae91e43b
	49	[3028]	SELF     	R5 R5 K6 ; R6 := R5; R5 := R5[0x42b04007]
	50	[3028]	LOADK    	R7 K7 ; R7 := "<"
	51	[3028]	GETTABLE 	R8 R2 K8 ; R8 := R2[1.000000]
	52	[3028]	LOADK    	R9 K9 ; R9 := ">"
	53	[3028]	CONCAT   	R7 R7 R9 ; R7 := R7 .. R8 .. R9
	54	[3028]	OP_LOADBOOL	R8 1 0 ; R8 := true
	55	[3028]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	56	[3028]	LOADK    	R6 K10 ; R6 := " "
	57	[3028]	GETGLOBAL	R7 K11 ; R7 := 0x5f0788c4
	58	[3028]	GETGLOBAL	R8 K5 ; R8 := 0xae91e43b
	59	[3028]	SELF     	R8 R8 K6 ; R9 := R8; R8 := R8[0x42b04007]
	60	[3028]	LOADK    	R10 K16 ; R10 := "/Lotus/Language/Railjack/RepairToolName"
	61	[3028]	OP_LOADBOOL	R11 0 0 ; R11 := false
	62	[3028]	CALL     	R8 4 0 ; R8,... := R8(R9,R10,R11)
	63	[3028]	CALL     	R7 0 2 ; R7 := R7(R8,...)
	64	[3028]	CONCAT   	R1 R3 R7 ; R1 := R3 .. R4 .. R5 .. R6 .. R7
	65	[3032]	RETURN   	R1 2 ; return R1 
	66	[3033]	RETURN   	R0 1 ; return 

function #106 <?:3035,3048> (46 instructions, 184 bytes at 0000021191CE33C0)
1 param, 7 slots, 0 upvalues, 0 locals, 10 constants, 0 functions
	1	[3036]	GETGLOBAL	R1 K0 ; R1 := 0x7f5022cf
	2	[3036]	GETTABLE 	R1 R1 K1 ; R1 := R1[0xa5c556b9]
	3	[3036]	MOVE     	R2 R0 ; R2 := R0
	4	[3036]	LOADK    	R3 K2 ; R3 := "_KBM"
	5	[3036]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	6	[3036]	TEST     	R1 0 ; if not R1 then PC := 45
	7	[3036]	JMP      	45 ; PC := 45
	8	[3037]	GETGLOBAL	R1 K3 ; R1 := 0x34291f5c
	9	[3037]	GETTABLE 	R1 R1 K4 ; R1 := R1[0x1467d5f4]
	10	[3037]	CALL     	R1 1 2 ; R1 := R1()
	11	[3038]	GETGLOBAL	R2 K3 ; R2 := 0x34291f5c
	12	[3038]	GETTABLE 	R2 R2 K5 ; R2 := R2[0x9ad21ae9]
	13	[3038]	CALL     	R2 1 2 ; R2 := R2()
	14	[3038]	TEST     	R2 1 ; if R2 then PC := 24
	15	[3038]	JMP      	24 ; PC := 24
	16	[3038]	GETGLOBAL	R2 K3 ; R2 := 0x34291f5c
	17	[3038]	GETTABLE 	R2 R2 K6 ; R2 := R2[0x86647daf]
	18	[3038]	CALL     	R2 1 2 ; R2 := R2()
	19	[3038]	TEST     	R2 1 ; if R2 then PC := 24
	20	[3038]	JMP      	24 ; PC := 24
	21	[3038]	GETGLOBAL	R2 K3 ; R2 := 0x34291f5c
	22	[3038]	GETTABLE 	R2 R2 K7 ; R2 := R2[0xc84fa15a]
	23	[3038]	CALL     	R2 1 2 ; R2 := R2()
	24	[3039]	TEST     	R2 0 ; if not R2 then PC := 36
	25	[3039]	JMP      	36 ; PC := 36
	26	[3040]	TEST     	R1 0 ; if not R1 then PC := 45
	27	[3040]	JMP      	45 ; PC := 45
	28	[3041]	GETGLOBAL	R3 K0 ; R3 := 0x7f5022cf
	29	[3041]	GETTABLE 	R3 R3 K8 ; R3 := R3[0x66edf04f]
	30	[3041]	MOVE     	R4 R0 ; R4 := R0
	31	[3041]	LOADK    	R5 K2 ; R5 := "_KBM"
	32	[3041]	LOADK    	R6 K9 ; R6 := "_Controller"
	33	[3041]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	34	[3041]	MOVE     	R0 R3 ; R0 := R3
	35	[3042]	JMP      	45 ; PC := 45
	36	[3043]	TEST     	R1 0 ; if not R1 then PC := 45
	37	[3043]	JMP      	45 ; PC := 45
	38	[3044]	GETGLOBAL	R3 K0 ; R3 := 0x7f5022cf
	39	[3044]	GETTABLE 	R3 R3 K8 ; R3 := R3[0x66edf04f]
	40	[3044]	MOVE     	R4 R0 ; R4 := R0
	41	[3044]	LOADK    	R5 K2 ; R5 := "_KBM"
	42	[3044]	LOADK    	R6 K9 ; R6 := "_Controller"
	43	[3044]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	44	[3044]	MOVE     	R0 R3 ; R0 := R3
	45	[3047]	RETURN   	R0 2 ; return R0 
	46	[3048]	RETURN   	R0 1 ; return 

function #107 <?:3050,3116> (228 instructions, 912 bytes at 0000021191BE0140)
0 params, 20 slots, 6 upvalues, 0 locals, 61 constants, 0 functions
	1	[3051]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[3051]	GETTABLE 	R0 R0 K0 ; R0 := R0["B"]
	3	[3051]	SETTABLE 	R0 K1 K2 ; R0["Ability"] := "ACTIVATE_ABILITY_MENU_2"
	4	[3052]	GETUPVAL 	R0 U0 ; R0 := U0
	5	[3052]	GETTABLE 	R0 R0 K3 ; R0 := R0["A"]
	6	[3052]	SETTABLE 	R0 K1 K4 ; R0["Ability"] := "ACTIVATE_ABILITY_MENU_0"
	7	[3053]	GETUPVAL 	R0 U0 ; R0 := U0
	8	[3053]	GETTABLE 	R0 R0 K5 ; R0 := R0["X"]
	9	[3053]	SETTABLE 	R0 K1 K6 ; R0["Ability"] := "ACTIVATE_ABILITY_MENU_1"
	10	[3054]	GETUPVAL 	R0 U0 ; R0 := U0
	11	[3054]	GETTABLE 	R0 R0 K7 ; R0 := R0["Y"]
	12	[3054]	SETTABLE 	R0 K1 K8 ; R0["Ability"] := "ACTIVATE_ABILITY_MENU_3"
	13	[3056]	NEWTABLE 	R0 4 0 ; R0 := {}
	14	[3056]	LOADK    	R1 K4 ; R1 := "ACTIVATE_ABILITY_MENU_0"
	15	[3056]	LOADK    	R2 K6 ; R2 := "ACTIVATE_ABILITY_MENU_1"
	16	[3056]	LOADK    	R3 K2 ; R3 := "ACTIVATE_ABILITY_MENU_2"
	17	[3056]	LOADK    	R4 K8 ; R4 := "ACTIVATE_ABILITY_MENU_3"
	18	[3056]	SETLIST  	R0 4 1 ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 4
	19	[3058]	GETGLOBAL	R1 K9 ; R1 := 0x76ea806b
	20	[3058]	SELF     	R1 R1 K10 ; R2 := R1; R1 := R1[0x8792aaab]
	21	[3058]	CALL     	R1 2 2 ; R1 := R1(R2)
	22	[3058]	TEST     	R1 0 ; if not R1 then PC := 79
	23	[3058]	JMP      	79 ; PC := 79
	24	[3059]	GETGLOBAL	R1 K11 ; R1 := 0xc8802016
	25	[3059]	MOVE     	R2 R0 ; R2 := R0
	26	[3059]	CALL     	R1 2 4 ; R1,R2,R3 := R1(R2)
	27	[3059]	JMP      	77 ; PC := 77
	28	[3060]	GETUPVAL 	R6 U1 ; R6 := U1
	29	[3060]	SELF     	R6 R6 K12 ; R7 := R6; R6 := R6[0x8fa32637]
	30	[3060]	MOVE     	R8 R5 ; R8 := R5
	31	[3060]	OP_LOADBOOL	R9 0 0 ; R9 := false
	32	[3060]	GETGLOBAL	R10 K13 ; R10 := 0xa94df70b
	33	[3060]	SELF     	R10 R10 K14 ; R11 := R10; R10 := R10[0xaa3c124f]
	34	[3060]	CALL     	R10 2 2 ; R10 := R10(R11)
	35	[3060]	GETGLOBAL	R11 K15 ; R11 := 0xd2d76b4d
	36	[3060]	CALL     	R6 6 2 ; R6 := R6(R7,R8,R9,R10,R11)
	37	[3061]	EQ       	0 R6 K16 ; if R6 ~= "" then PC := 54
	38	[3061]	JMP      	54 ; PC := 54
	39	[3062]	GETGLOBAL	R7 K17 ; R7 := 0x9ba7909f
	40	[3062]	SELF     	R7 R7 K18 ; R8 := R7; R7 := R7[0xa50d1a6a]
	41	[3062]	MOVE     	R9 R5 ; R9 := R5
	42	[3062]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	43	[3063]	GETUPVAL 	R8 U1 ; R8 := U1
	44	[3063]	SELF     	R8 R8 K19 ; R9 := R8; R8 := R8[0x4ab77446]
	45	[3063]	MOVE     	R10 R7 ; R10 := R7
	46	[3063]	GETGLOBAL	R11 K13 ; R11 := 0xa94df70b
	47	[3063]	SELF     	R11 R11 K14 ; R12 := R11; R11 := R11[0xaa3c124f]
	48	[3063]	CALL     	R11 2 2 ; R11 := R11(R12)
	49	[3063]	GETGLOBAL	R12 K15 ; R12 := 0xd2d76b4d
	50	[3063]	CALL     	R8 5 2 ; R8 := R8(R9,R10,R11,R12)
	51	[3063]	TEST     	R8 1 ; if R8 then PC := 54
	52	[3063]	JMP      	54 ; PC := 54
	53	[3064]	MOVE     	R6 R7 ; R6 := R7
	54	[3068]	EQ       	0 R6 K20 ; if R6 ~= "GAMEPAD_X" then PC := 60
	55	[3068]	JMP      	60 ; PC := 60
	56	[3069]	GETUPVAL 	R8 U0 ; R8 := U0
	57	[3069]	GETTABLE 	R8 R8 K3 ; R8 := R8["A"]
	58	[3069]	SETTABLE 	R8 K1 R5 ; R8["Ability"] := R5
	59	[3069]	JMP      	77 ; PC := 77
	60	[3070]	EQ       	0 R6 K21 ; if R6 ~= "GAMEPAD_CIRCLE" then PC := 66
	61	[3070]	JMP      	66 ; PC := 66
	62	[3071]	GETUPVAL 	R8 U0 ; R8 := U0
	63	[3071]	GETTABLE 	R8 R8 K0 ; R8 := R8["B"]
	64	[3071]	SETTABLE 	R8 K1 R5 ; R8["Ability"] := R5
	65	[3071]	JMP      	77 ; PC := 77
	66	[3072]	EQ       	0 R6 K22 ; if R6 ~= "GAMEPAD_TRIANGLE" then PC := 72
	67	[3072]	JMP      	72 ; PC := 72
	68	[3073]	GETUPVAL 	R8 U0 ; R8 := U0
	69	[3073]	GETTABLE 	R8 R8 K7 ; R8 := R8["Y"]
	70	[3073]	SETTABLE 	R8 K1 R5 ; R8["Ability"] := R5
	71	[3073]	JMP      	77 ; PC := 77
	72	[3074]	EQ       	0 R6 K23 ; if R6 ~= "GAMEPAD_SQUARE" then PC := 77
	73	[3074]	JMP      	77 ; PC := 77
	74	[3075]	GETUPVAL 	R8 U0 ; R8 := U0
	75	[3075]	GETTABLE 	R8 R8 K5 ; R8 := R8["X"]
	76	[3075]	SETTABLE 	R8 K1 R5 ; R8["Ability"] := R5
	77	[3059]	TFORLOOP 	R1 2 ; R4,R5 := R1(R2,R3); if R4 ~= nil then begin PC = 28; R3 := R4 end
	78	[3076]	JMP      	28 ; PC := 28
	79	[3080]	GETGLOBAL	R8 K24 ; R8 := 0xae91e43b
	80	[3080]	SELF     	R8 R8 K25 ; R9 := R8; R8 := R8[0x20b98db3]
	81	[3080]	LOADK    	R10 K26 ; R10 := "AbilityPanel.ControllerCastingButtons.AButton.text"
	82	[3080]	LOADK    	R11 K27 ; R11 := "<GAMEPAD_X>"
	83	[3080]	CALL     	R8 4 1 ; R8(R9,R10,R11)
	84	[3081]	GETGLOBAL	R8 K24 ; R8 := 0xae91e43b
	85	[3081]	SELF     	R8 R8 K25 ; R9 := R8; R8 := R8[0x20b98db3]
	86	[3081]	LOADK    	R10 K28 ; R10 := "AbilityPanel.ControllerCastingButtons.BButton.text"
	87	[3081]	LOADK    	R11 K29 ; R11 := "<GAMEPAD_CIRCLE>"
	88	[3081]	CALL     	R8 4 1 ; R8(R9,R10,R11)
	89	[3082]	GETGLOBAL	R8 K24 ; R8 := 0xae91e43b
	90	[3082]	SELF     	R8 R8 K25 ; R9 := R8; R8 := R8[0x20b98db3]
	91	[3082]	LOADK    	R10 K30 ; R10 := "AbilityPanel.ControllerCastingButtons.XButton.text"
	92	[3082]	LOADK    	R11 K31 ; R11 := "<GAMEPAD_SQUARE>"
	93	[3082]	CALL     	R8 4 1 ; R8(R9,R10,R11)
	94	[3083]	GETGLOBAL	R8 K24 ; R8 := 0xae91e43b
	95	[3083]	SELF     	R8 R8 K25 ; R9 := R8; R8 := R8[0x20b98db3]
	96	[3083]	LOADK    	R10 K32 ; R10 := "AbilityPanel.ControllerCastingButtons.YButton.text"
	97	[3083]	LOADK    	R11 K33 ; R11 := "<GAMEPAD_TRIANGLE>"
	98	[3083]	CALL     	R8 4 1 ; R8(R9,R10,R11)
	99	[3084]	GETGLOBAL	R8 K24 ; R8 := 0xae91e43b
	100	[3084]	SELF     	R8 R8 K25 ; R9 := R8; R8 := R8[0x20b98db3]
	101	[3084]	LOADK    	R10 K34 ; R10 := "AbilityPanel.FocusButton.text"
	102	[3084]	LOADK    	R11 K35 ; R11 := "<ACTIVATE_ABILITY_MENU_4>"
	103	[3084]	CALL     	R8 4 1 ; R8(R9,R10,R11)
	104	[3086]	GETUPVAL 	R8 U2 ; R8 := U2
	105	[3086]	CALL     	R8 1 2 ; R8 := R8()
	106	[3087]	GETGLOBAL	R9 K24 ; R9 := 0xae91e43b
	107	[3087]	SELF     	R9 R9 K36 ; R10 := R9; R9 := R9[0x5f56eeab]
	108	[3087]	LOADK    	R11 K37 ; R11 := "AbilityPanel.TacticalCallout"
	109	[3087]	LOADK    	R12 := 29.000000
	110	[3087]	MOVE     	R13 R8 ; R13 := R8
	111	[3087]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	112	[3089]	GETGLOBAL	R9 K24 ; R9 := 0xae91e43b
	113	[3089]	SELF     	R9 R9 K38 ; R10 := R9; R9 := R9[0x67bc869f]
	114	[3089]	LOADK    	R11 K39 ; R11 := "AbilityPanel.ControllerCastingButtons"
	115	[3089]	LOADK    	R12 := 10.000000
	116	[3089]	LOADK    	R13 := 0.000000
	117	[3089]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	118	[3090]	GETGLOBAL	R9 K24 ; R9 := 0xae91e43b
	119	[3090]	SELF     	R9 R9 K38 ; R10 := R9; R9 := R9[0x67bc869f]
	120	[3090]	LOADK    	R11 K40 ; R11 := "AbilityPanel.ControllerCastingImage"
	121	[3090]	LOADK    	R12 := 10.000000
	122	[3090]	LOADK    	R13 := 0.000000
	123	[3090]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	124	[3091]	GETGLOBAL	R9 K24 ; R9 := 0xae91e43b
	125	[3091]	SELF     	R9 R9 K38 ; R10 := R9; R9 := R9[0x67bc869f]
	126	[3091]	LOADK    	R11 K37 ; R11 := "AbilityPanel.TacticalCallout"
	127	[3091]	LOADK    	R12 := 10.000000
	128	[3091]	LOADK    	R13 := 0.000000
	129	[3091]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	130	[3092]	GETGLOBAL	R9 K24 ; R9 := 0xae91e43b
	131	[3092]	SELF     	R9 R9 K38 ; R10 := R9; R9 := R9[0x67bc869f]
	132	[3092]	LOADK    	R11 K41 ; R11 := "AbilityPanel.FocusButton"
	133	[3092]	LOADK    	R12 := 10.000000
	134	[3092]	LOADK    	R13 := 0.000000
	135	[3092]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	136	[3094]	GETUPVAL 	R9 U3 ; R9 := U3
	137	[3094]	EQ       	1 R9 K42 ; if R9 == nil then PC := 228
	138	[3094]	JMP      	228 ; PC := 228
	139	[3095]	LOADK    	R9 K16 ; R9 := ""
	140	[3096]	GETUPVAL 	R10 U3 ; R10 := U3
	141	[3096]	GETTABLE 	R10 R10 K43 ; R10 := R10["Message"]
	142	[3097]	GETGLOBAL	R11 K44 ; R11 := 0x0b96777e
	143	[3097]	MOVE     	R12 R10 ; R12 := R10
	144	[3097]	CALL     	R11 2 2 ; R11 := R11(R12)
	145	[3097]	EQ       	0 R11 K45 ; if R11 ~= "function" then PC := 150
	146	[3097]	JMP      	150 ; PC := 150
	147	[3098]	MOVE     	R11 R10 ; R11 := R10
	148	[3098]	CALL     	R11 1 2 ; R11 := R11()
	149	[3098]	MOVE     	R10 R11 ; R10 := R11
	150	[3100]	GETUPVAL 	R11 U4 ; R11 := U4
	151	[3100]	MOVE     	R12 R10 ; R12 := R10
	152	[3100]	CALL     	R11 2 2 ; R11 := R11(R12)
	153	[3100]	MOVE     	R10 R11 ; R10 := R11
	154	[3101]	GETUPVAL 	R11 U3 ; R11 := U3
	155	[3101]	GETTABLE 	R11 R11 K46 ; R11 := R11["InputFilter"]
	156	[3102]	GETGLOBAL	R12 K47 ; R12 := 0x7b998233
	157	[3102]	MOVE     	R13 R11 ; R13 := R11
	158	[3102]	CALL     	R12 2 2 ; R12 := R12(R13)
	159	[3102]	TEST     	R12 1 ; if R12 then PC := 185
	160	[3102]	JMP      	185 ; PC := 185
	161	[3103]	GETGLOBAL	R12 K24 ; R12 := 0xae91e43b
	162	[3103]	SELF     	R12 R12 K48 ; R13 := R12; R12 := R12[0x54f5d6ad]
	163	[3103]	MOVE     	R14 R10 ; R14 := R10
	164	[3103]	MOVE     	R15 R11 ; R15 := R11
	165	[3103]	GETUPVAL 	R16 U3 ; R16 := U3
	166	[3103]	GETTABLE 	R16 R16 K49 ; R16 := R16["Params"]
	167	[3103]	CALL     	R12 5 2 ; R12 := R12(R13,R14,R15,R16)
	168	[3103]	MOVE     	R9 R12 ; R9 := R12
	169	[3104]	GETGLOBAL	R12 K50 ; R12 := 0x7f5022cf
	170	[3104]	GETTABLE 	R12 R12 K51 ; R12 := R12[0xa5c556b9]
	171	[3104]	MOVE     	R13 R9 ; R13 := R9
	172	[3104]	LOADK    	R14 K52 ; R14 := "<[%u%d_]+>"
	173	[3104]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	174	[3104]	TEST     	R12 0 ; if not R12 then PC := 193
	175	[3104]	JMP      	193 ; PC := 193
	176	[3105]	GETGLOBAL	R12 K24 ; R12 := 0xae91e43b
	177	[3105]	SELF     	R12 R12 K53 ; R13 := R12; R12 := R12[0x42b04007]
	178	[3105]	MOVE     	R14 R10 ; R14 := R10
	179	[3105]	OP_LOADBOOL	R15 1 0 ; R15 := true
	180	[3105]	GETUPVAL 	R16 U3 ; R16 := U3
	181	[3105]	GETTABLE 	R16 R16 K49 ; R16 := R16["Params"]
	182	[3105]	CALL     	R12 5 2 ; R12 := R12(R13,R14,R15,R16)
	183	[3105]	MOVE     	R9 R12 ; R9 := R12
	184	[3106]	JMP      	193 ; PC := 193
	185	[3108]	GETGLOBAL	R12 K24 ; R12 := 0xae91e43b
	186	[3108]	SELF     	R12 R12 K53 ; R13 := R12; R12 := R12[0x42b04007]
	187	[3108]	MOVE     	R14 R10 ; R14 := R10
	188	[3108]	OP_LOADBOOL	R15 1 0 ; R15 := true
	189	[3108]	GETUPVAL 	R16 U3 ; R16 := U3
	190	[3108]	GETTABLE 	R16 R16 K49 ; R16 := R16["Params"]
	191	[3108]	CALL     	R12 5 2 ; R12 := R12(R13,R14,R15,R16)
	192	[3108]	MOVE     	R9 R12 ; R9 := R12
	193	[3110]	GETGLOBAL	R12 K24 ; R12 := 0xae91e43b
	194	[3110]	SELF     	R12 R12 K36 ; R13 := R12; R12 := R12[0x5f56eeab]
	195	[3110]	LOADK    	R14 K54 ; R14 := "ImpactMessage.Label"
	196	[3110]	LOADK    	R15 := 29.000000
	197	[3110]	MOVE     	R16 R9 ; R16 := R9
	198	[3110]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	199	[3111]	GETUPVAL 	R12 U5 ; R12 := U5
	200	[3111]	EQ       	1 R12 K42 ; if R12 == nil then PC := 206
	201	[3111]	JMP      	206 ; PC := 206
	202	[3111]	GETUPVAL 	R12 U5 ; R12 := U5
	203	[3111]	GETTABLE 	R12 R12 K55 ; R12 := R12["mImpactMessageFrame"]
	204	[3111]	EQ       	1 R12 K56 ; if R12 == 4.000000 then PC := 228
	205	[3111]	JMP      	228 ; PC := 228
	206	[3112]	GETGLOBAL	R12 K24 ; R12 := 0xae91e43b
	207	[3112]	SELF     	R12 R12 K38 ; R13 := R12; R12 := R12[0x67bc869f]
	208	[3112]	LOADK    	R14 K57 ; R14 := "ImpactMessage.Bg"
	209	[3112]	LOADK    	R15 := 12.000000
	210	[3112]	GETGLOBAL	R16 K24 ; R16 := 0xae91e43b
	211	[3112]	SELF     	R16 R16 K58 ; R17 := R16; R16 := R16[0x91a24e4b]
	212	[3112]	LOADK    	R18 K54 ; R18 := "ImpactMessage.Label"
	213	[3112]	LOADK    	R19 := 33.000000
	214	[3112]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	215	[3112]	ADD      	R16 R16 K59 ; R16 := R16 + 20.000000
	216	[3112]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	217	[3113]	GETGLOBAL	R12 K24 ; R12 := 0xae91e43b
	218	[3113]	SELF     	R12 R12 K38 ; R13 := R12; R12 := R12[0x67bc869f]
	219	[3113]	LOADK    	R14 K57 ; R14 := "ImpactMessage.Bg"
	220	[3113]	LOADK    	R15 := 13.000000
	221	[3113]	GETGLOBAL	R16 K24 ; R16 := 0xae91e43b
	222	[3113]	SELF     	R16 R16 K58 ; R17 := R16; R16 := R16[0x91a24e4b]
	223	[3113]	LOADK    	R18 K54 ; R18 := "ImpactMessage.Label"
	224	[3113]	LOADK    	R19 := 34.000000
	225	[3113]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	226	[3113]	ADD      	R16 R16 K60 ; R16 := R16 + 8.000000
	227	[3113]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	228	[3116]	RETURN   	R0 1 ; return 

function #108 <?:3118,3249> (430 instructions, 1720 bytes at 0000021191BE01D0)
0 params, 22 slots, 10 upvalues, 0 locals, 72 constants, 0 functions
	1	[3119]	LOADK    	R0 := 0.000000
	2	[3120]	GETGLOBAL	R1 K0 ; R1 := 0x67652851
	3	[3120]	CALL     	R1 1 2 ; R1 := R1()
	4	[3122]	GETUPVAL 	R2 U0 ; R2 := U0
	5	[3122]	GETTABLE 	R2 R2 K1 ; R2 := R2["mScreenDuck"]
	6	[3122]	LT       	0 K2 R2 ; if 0.000000 >= R2 then PC := 33
	7	[3122]	JMP      	33 ; PC := 33
	8	[3123]	GETUPVAL 	R2 U0 ; R2 := U0
	9	[3123]	GETGLOBAL	R3 K3 ; R3 := 0x5bced4c4
	10	[3123]	GETTABLE 	R3 R3 K4 ; R3 := R3[0xb62ecfe0]
	11	[3123]	LOADK    	R4 := 0.000000
	12	[3123]	GETUPVAL 	R5 U0 ; R5 := U0
	13	[3123]	GETTABLE 	R5 R5 K1 ; R5 := R5["mScreenDuck"]
	14	[3123]	MUL      	R6 R1 K5 ; R6 := R1 * 0.500000
	15	[3123]	SUB      	R5 R5 R6 ; R5 := R5 - R6
	16	[3123]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	17	[3123]	SETTABLE 	R2 K1 R3 ; R2["mScreenDuck"] := R3
	18	[3124]	LOADK    	R0 := 0.000000
	19	[3125]	GETGLOBAL	R2 K6 ; R2 := 0xae91e43b
	20	[3125]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0xc6a10ab1]
	21	[3125]	LOADK    	R4 := 0.000000
	22	[3125]	CALL     	R2 3 1 ; R2(R3,R4)
	23	[3126]	GETGLOBAL	R2 K6 ; R2 := 0xae91e43b
	24	[3126]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0x58bec6d6]
	25	[3126]	GETGLOBAL	R4 K3 ; R4 := 0x5bced4c4
	26	[3126]	GETTABLE 	R4 R4 K9 ; R4 := R4[0xac1b386a]
	27	[3126]	LOADK    	R5 := 1.000000
	28	[3126]	GETUPVAL 	R6 U0 ; R6 := U0
	29	[3126]	GETTABLE 	R6 R6 K1 ; R6 := R6["mScreenDuck"]
	30	[3126]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	31	[3126]	MUL      	R4 R4 K10 ; R4 := R4 * 0.800000
	32	[3126]	CALL     	R2 3 1 ; R2(R3,R4)
	33	[3129]	GETGLOBAL	R2 K11 ; R2 := _T
	34	[3129]	GETTABLE 	R2 R2 K12 ; R2 := R2["TopMenuOpen"]
	35	[3129]	TEST     	R2 0 ; if not R2 then PC := 41
	36	[3129]	JMP      	41 ; PC := 41
	37	[3131]	LOADK    	R0 := 1.000000
	38	[3132]	GETUPVAL 	R2 U1 ; R2 := U1
	39	[3132]	SETTABLE 	R2 K12 K13 ; R2["TopMenuOpen"] := true
	40	[3132]	JMP      	49 ; PC := 49
	41	[3133]	GETUPVAL 	R2 U1 ; R2 := U1
	42	[3133]	GETTABLE 	R2 R2 K12 ; R2 := R2["TopMenuOpen"]
	43	[3133]	TEST     	R2 0 ; if not R2 then PC := 49
	44	[3133]	JMP      	49 ; PC := 49
	45	[3135]	GETUPVAL 	R2 U2 ; R2 := U2
	46	[3135]	CALL     	R2 1 1 ; R2()
	47	[3136]	GETUPVAL 	R2 U1 ; R2 := U1
	48	[3136]	SETTABLE 	R2 K12 K14 ; R2["TopMenuOpen"] := false
	49	[3139]	GETUPVAL 	R2 U3 ; R2 := U3
	50	[3139]	GETTABLE 	R2 R2 K15 ; R2 := R2["PhotoBooth"]
	51	[3139]	TEST     	R2 0 ; if not R2 then PC := 54
	52	[3139]	JMP      	54 ; PC := 54
	53	[3140]	LOADK    	R0 := 1.000000
	54	[3143]	GETGLOBAL	R2 K11 ; R2 := _T
	55	[3143]	GETTABLE 	R2 R2 K16 ; R2 := R2["SettingsVisible"]
	56	[3143]	TEST     	R2 0 ; if not R2 then PC := 59
	57	[3143]	JMP      	59 ; PC := 59
	58	[3144]	LOADK    	R0 := 1.000000
	59	[3146]	GETGLOBAL	R2 K11 ; R2 := _T
	60	[3146]	GETTABLE 	R2 R2 K17 ; R2 := R2["HideHud"]
	61	[3146]	EQ       	1 R2 K18 ; if R2 == nil then PC := 68
	62	[3146]	JMP      	68 ; PC := 68
	63	[3146]	GETGLOBAL	R2 K11 ; R2 := _T
	64	[3146]	GETTABLE 	R2 R2 K17 ; R2 := R2["HideHud"]
	65	[3146]	LT       	0 K2 R2 ; if 0.000000 >= R2 then PC := 68
	66	[3146]	JMP      	68 ; PC := 68
	67	[3147]	LOADK    	R0 := 1.000000
	68	[3150]	GETGLOBAL	R2 K19 ; R2 := 0x89326c93
	69	[3150]	SELF     	R2 R2 K20 ; R3 := R2; R2 := R2[0xdd25e9d1]
	70	[3150]	CALL     	R2 2 2 ; R2 := R2(R3)
	71	[3150]	TEST     	R2 0 ; if not R2 then PC := 81
	72	[3150]	JMP      	81 ; PC := 81
	73	[3150]	GETGLOBAL	R2 K19 ; R2 := 0x89326c93
	74	[3150]	SELF     	R2 R2 K20 ; R3 := R2; R2 := R2[0xdd25e9d1]
	75	[3150]	CALL     	R2 2 2 ; R2 := R2(R3)
	76	[3150]	SELF     	R2 R2 K21 ; R3 := R2; R2 := R2[0x45fce6aa]
	77	[3150]	GETUPVAL 	R4 U4 ; R4 := U4
	78	[3150]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	79	[3150]	TEST     	R2 0 ; if not R2 then PC := 91
	80	[3150]	JMP      	91 ; PC := 91
	81	[3150]	GETGLOBAL	R2 K22 ; R2 := 0x7b998233
	82	[3150]	GETUPVAL 	R3 U5 ; R3 := U5
	83	[3150]	CALL     	R2 2 2 ; R2 := R2(R3)
	84	[3150]	TEST     	R2 1 ; if R2 then PC := 92
	85	[3150]	JMP      	92 ; PC := 92
	86	[3150]	GETUPVAL 	R2 U5 ; R2 := U5
	87	[3150]	SELF     	R2 R2 K23 ; R3 := R2; R2 := R2[0x0ffec0b9]
	88	[3150]	CALL     	R2 2 2 ; R2 := R2(R3)
	89	[3150]	TEST     	R2 0 ; if not R2 then PC := 92
	90	[3150]	JMP      	92 ; PC := 92
	91	[3151]	LOADK    	R0 := 1.000000
	92	[3155]	GETUPVAL 	R2 U1 ; R2 := U1
	93	[3155]	GETTABLE 	R2 R2 K24 ; R2 := R2["WaitingForProgressMovie"]
	94	[3155]	TEST     	R2 0 ; if not R2 then PC := 107
	95	[3155]	JMP      	107 ; PC := 107
	96	[3156]	GETGLOBAL	R2 K25 ; R2 := 0x9ba7909f
	97	[3156]	SELF     	R2 R2 K26 ; R3 := R2; R2 := R2[0x5374b92e]
	98	[3156]	GETGLOBAL	R4 K27 ; R4 := 0x82fd6cc3
	99	[3156]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	100	[3156]	TEST     	R2 1 ; if R2 then PC := 105
	101	[3156]	JMP      	105 ; PC := 105
	102	[3157]	GETUPVAL 	R2 U1 ; R2 := U1
	103	[3157]	SETTABLE 	R2 K24 K14 ; R2["WaitingForProgressMovie"] := false
	104	[3157]	JMP      	116 ; PC := 116
	105	[3159]	LOADK    	R0 := 1.000000
	106	[3160]	JMP      	116 ; PC := 116
	107	[3161]	GETGLOBAL	R2 K11 ; R2 := _T
	108	[3161]	GETTABLE 	R2 R2 K28 ; R2 := R2["SpectatorHudOpen"]
	109	[3161]	TEST     	R2 1 ; if R2 then PC := 115
	110	[3161]	JMP      	115 ; PC := 115
	111	[3161]	GETGLOBAL	R2 K11 ; R2 := _T
	112	[3161]	GETTABLE 	R2 R2 K29 ; R2 := R2["PVPScoreBoardOpen"]
	113	[3161]	TEST     	R2 0 ; if not R2 then PC := 116
	114	[3161]	JMP      	116 ; PC := 116
	115	[3162]	LOADK    	R0 := 1.000000
	116	[3165]	GETUPVAL 	R2 U0 ; R2 := U0
	117	[3165]	GETTABLE 	R2 R2 K30 ; R2 := R2["IsAlternateHud"]
	118	[3165]	TEST     	R2 0 ; if not R2 then PC := 121
	119	[3165]	JMP      	121 ; PC := 121
	120	[3166]	LOADK    	R0 := 1.000000
	121	[3169]	GETGLOBAL	R2 K11 ; R2 := _T
	122	[3169]	GETTABLE 	R2 R2 K31 ; R2 := R2["MinimalHud"]
	123	[3169]	TEST     	R2 0 ; if not R2 then PC := 126
	124	[3169]	JMP      	126 ; PC := 126
	125	[3170]	LOADK    	R0 := 1.000000
	126	[3173]	GETUPVAL 	R2 U1 ; R2 := U1
	127	[3173]	GETTABLE 	R2 R2 K32 ; R2 := R2["Fade"]
	128	[3173]	EQ       	0 R2 R0 ; if R2 ~= R0 then PC := 153
	129	[3173]	JMP      	153 ; PC := 153
	130	[3173]	GETGLOBAL	R2 K11 ; R2 := _T
	131	[3173]	GETTABLE 	R2 R2 K33 ; R2 := R2["UpdateHudFadeValue"]
	132	[3173]	EQ       	0 R2 K18 ; if R2 ~= nil then PC := 153
	133	[3173]	JMP      	153 ; PC := 153
	134	[3174]	GETGLOBAL	R2 K34 ; R2 := 0xcfc01047
	135	[3174]	GETUPVAL 	R3 U6 ; R3 := U6
	136	[3174]	GETTABLE 	R3 R3 K35 ; R3 := R3["Interpolating"]
	137	[3174]	CALL     	R2 2 4 ; R2,R3,R4 := R2(R3)
	138	[3174]	JMP      	150 ; PC := 150
	139	[3175]	GETGLOBAL	R7 K6 ; R7 := 0xae91e43b
	140	[3175]	SELF     	R7 R7 K36 ; R8 := R7; R7 := R7[0xbf8f0712]
	141	[3175]	MOVE     	R9 R5 ; R9 := R5
	142	[3175]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	143	[3175]	TEST     	R7 1 ; if R7 then PC := 150
	144	[3175]	JMP      	150 ; PC := 150
	145	[3176]	GETUPVAL 	R7 U6 ; R7 := U6
	146	[3176]	GETTABLE 	R7 R7 K35 ; R7 := R7["Interpolating"]
	147	[3176]	SETTABLE 	R7 R5 K18 ; R7[R5] := nil
	148	[3177]	GETGLOBAL	R7 K11 ; R7 := _T
	149	[3177]	SETTABLE 	R7 K33 K13 ; R7["UpdateHudFadeValue"] := true
	150	[3174]	TFORLOOP 	R2 2 ; R5,R6 := R2(R3,R4); if R5 ~= nil then begin PC = 139; R4 := R5 end
	151	[3178]	JMP      	139 ; PC := 139
	152	[3179]	JMP      	156 ; PC := 156
	153	[3181]	GETUPVAL 	R7 U6 ; R7 := U6
	154	[3181]	NEWTABLE 	R8 0 0 ; R8 := {}
	155	[3181]	SETTABLE 	R7 K35 R8 ; R7["Interpolating"] := R8
	156	[3184]	GETUPVAL 	R7 U1 ; R7 := U1
	157	[3184]	GETTABLE 	R7 R7 K32 ; R7 := R7["Fade"]
	158	[3184]	EQ       	0 R7 R0 ; if R7 ~= R0 then PC := 164
	159	[3184]	JMP      	164 ; PC := 164
	160	[3184]	GETGLOBAL	R7 K11 ; R7 := _T
	161	[3184]	GETTABLE 	R7 R7 K33 ; R7 := R7["UpdateHudFadeValue"]
	162	[3184]	TEST     	R7 0 ; if not R7 then PC := 430
	163	[3184]	JMP      	430 ; PC := 430
	164	[3185]	GETUPVAL 	R7 U1 ; R7 := U1
	165	[3185]	SETTABLE 	R7 K32 R0 ; R7["Fade"] := R0
	166	[3186]	GETGLOBAL	R7 K11 ; R7 := _T
	167	[3186]	SETTABLE 	R7 K33 K18 ; R7["UpdateHudFadeValue"] := nil
	168	[3187]	GETGLOBAL	R7 K37 ; R7 := 0x7fa0b32a
	169	[3187]	MOVE     	R8 R0 ; R8 := R0
	170	[3187]	CALL     	R7 2 2 ; R7 := R7(R8)
	171	[3187]	SUB      	R7 K38 R7 ; R7 := 1.000000 - R7
	172	[3187]	MUL      	R7 R7 K39 ; R7 := R7 * 100.000000
	173	[3188]	GETGLOBAL	R8 K40 ; R8 := 0x4ec73e73
	174	[3188]	GETUPVAL 	R9 U6 ; R9 := U6
	175	[3188]	GETTABLE 	R9 R9 K41 ; R9 := R9["Faded"]
	176	[3188]	CALL     	R8 2 2 ; R8 := R8(R9)
	177	[3188]	EQ       	1 R8 K18 ; if R8 == nil then PC := 180
	178	[3188]	JMP      	180 ; PC := 180
	179	[3188]	OP_LOADBOOL	R8 0 1 ; R8 := false; PC := 180
	180	[3188]	OP_LOADBOOL	R8 1 0 ; R8 := true
	181	[3189]	GETUPVAL 	R9 U6 ; R9 := U6
	182	[3189]	GETTABLE 	R9 R9 K42 ; R9 := R9["Enabled"]
	183	[3189]	TEST     	R9 1 ; if R9 then PC := 223
	184	[3189]	JMP      	223 ; PC := 223
	185	[3189]	TEST     	R8 0 ; if not R8 then PC := 223
	186	[3189]	JMP      	223 ; PC := 223
	187	[3189]	GETGLOBAL	R9 K11 ; R9 := _T
	188	[3189]	GETTABLE 	R9 R9 K31 ; R9 := R9["MinimalHud"]
	189	[3189]	TEST     	R9 1 ; if R9 then PC := 223
	190	[3189]	JMP      	223 ; PC := 223
	191	[3189]	GETUPVAL 	R9 U0 ; R9 := U0
	192	[3189]	GETTABLE 	R9 R9 K30 ; R9 := R9["IsAlternateHud"]
	193	[3189]	TEST     	R9 1 ; if R9 then PC := 223
	194	[3189]	JMP      	223 ; PC := 223
	195	[3189]	GETGLOBAL	R9 K11 ; R9 := _T
	196	[3189]	GETTABLE 	R9 R9 K28 ; R9 := R9["SpectatorHudOpen"]
	197	[3189]	TEST     	R9 1 ; if R9 then PC := 223
	198	[3189]	JMP      	223 ; PC := 223
	199	[3190]	GETGLOBAL	R9 K6 ; R9 := 0xae91e43b
	200	[3190]	SELF     	R9 R9 K43 ; R10 := R9; R9 := R9[0x67bc869f]
	201	[3190]	LOADK    	R11 K44 ; R11 := "_root"
	202	[3190]	LOADK    	R12 := 10.000000
	203	[3190]	MOVE     	R13 R7 ; R13 := R7
	204	[3190]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	205	[3191]	GETUPVAL 	R9 U0 ; R9 := U0
	206	[3191]	GETTABLE 	R9 R9 K45 ; R9 := R9["UIMode"]
	207	[3191]	GETUPVAL 	R10 U7 ; R10 := U7
	208	[3191]	GETTABLE 	R10 R10 K46 ; R10 := R10["UI_MODE_IN_DOJO"]
	209	[3191]	EQ       	0 R9 R10 ; if R9 ~= R10 then PC := 426
	210	[3191]	JMP      	426 ; PC := 426
	211	[3192]	GETGLOBAL	R9 K25 ; R9 := 0x9ba7909f
	212	[3192]	SELF     	R9 R9 K47 ; R10 := R9; R9 := R9[0xbcfb64ab]
	213	[3192]	GETGLOBAL	R11 K48 ; R11 := 0xe35e5527
	214	[3192]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	215	[3193]	TEST     	R9 0 ; if not R9 then PC := 426
	216	[3193]	JMP      	426 ; PC := 426
	217	[3194]	SELF     	R10 R9 K43 ; R11 := R9; R10 := R9[0x67bc869f]
	218	[3194]	LOADK    	R12 K44 ; R12 := "_root"
	219	[3194]	LOADK    	R13 := 10.000000
	220	[3194]	MOVE     	R14 R7 ; R14 := R7
	221	[3194]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	222	[3196]	JMP      	426 ; PC := 426
	223	[3198]	TEST     	R8 0 ; if not R8 then PC := 231
	224	[3198]	JMP      	231 ; PC := 231
	225	[3200]	GETGLOBAL	R10 K6 ; R10 := 0xae91e43b
	226	[3200]	SELF     	R10 R10 K43 ; R11 := R10; R10 := R10[0x67bc869f]
	227	[3200]	LOADK    	R12 K44 ; R12 := "_root"
	228	[3200]	LOADK    	R13 := 10.000000
	229	[3200]	LOADK    	R14 := 100.000000
	230	[3200]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	231	[3202]	GETGLOBAL	R10 K49 ; R10 := 0xc8802016
	232	[3202]	GETUPVAL 	R11 U6 ; R11 := U6
	233	[3202]	GETTABLE 	R11 R11 K50 ; R11 := R11["Clips"]
	234	[3202]	CALL     	R10 2 4 ; R10,R11,R12 := R10(R11)
	235	[3202]	JMP      	424 ; PC := 424
	236	[3203]	GETUPVAL 	R15 U0 ; R15 := U0
	237	[3203]	GETTABLE 	R15 R15 K30 ; R15 := R15["IsAlternateHud"]
	238	[3203]	TEST     	R15 1 ; if R15 then PC := 244
	239	[3203]	JMP      	244 ; PC := 244
	240	[3203]	GETGLOBAL	R15 K11 ; R15 := _T
	241	[3203]	GETTABLE 	R15 R15 K51 ; R15 := R15["ForceShowHudTrackers"]
	242	[3203]	TEST     	R15 0 ; if not R15 then PC := 246
	243	[3203]	JMP      	246 ; PC := 246
	244	[3203]	EQ       	1 R14 K52 ; if R14 == "HudTracker" then PC := 381
	245	[3203]	JMP      	381 ; PC := 381
	246	[3205]	GETUPVAL 	R15 U0 ; R15 := U0
	247	[3205]	GETTABLE 	R15 R15 K30 ; R15 := R15["IsAlternateHud"]
	248	[3205]	TEST     	R15 1 ; if R15 then PC := 254
	249	[3205]	JMP      	254 ; PC := 254
	250	[3205]	GETGLOBAL	R15 K11 ; R15 := _T
	251	[3205]	GETTABLE 	R15 R15 K53 ; R15 := R15["ForceShowMiniMap"]
	252	[3205]	TEST     	R15 0 ; if not R15 then PC := 258
	253	[3205]	JMP      	258 ; PC := 258
	254	[3205]	EQ       	1 R14 K54 ; if R14 == "MiniMapContainer" then PC := 381
	255	[3205]	JMP      	381 ; PC := 381
	256	[3205]	EQ       	1 R14 K55 ; if R14 == "MiniMapOverlayMsg" then PC := 381
	257	[3205]	JMP      	381 ; PC := 381
	258	[3206]	GETGLOBAL	R15 K11 ; R15 := _T
	259	[3206]	GETTABLE 	R15 R15 K31 ; R15 := R15["MinimalHud"]
	260	[3206]	TEST     	R15 0 ; if not R15 then PC := 282
	261	[3206]	JMP      	282 ; PC := 282
	262	[3206]	EQ       	1 R14 K56 ; if R14 == "Reticle" then PC := 381
	263	[3206]	JMP      	381 ; PC := 381
	264	[3206]	EQ       	1 R14 K57 ; if R14 == "ReticleCustom" then PC := 381
	265	[3206]	JMP      	381 ; PC := 381
	266	[3206]	EQ       	1 R14 K58 ; if R14 == "PvPHeldFlagTimer" then PC := 381
	267	[3206]	JMP      	381 ; PC := 381
	268	[3207]	GETGLOBAL	R15 K11 ; R15 := _T
	269	[3207]	GETTABLE 	R15 R15 K59 ; R15 := R15["ForceShowHealthShield"]
	270	[3207]	TEST     	R15 0 ; if not R15 then PC := 276
	271	[3207]	JMP      	276 ; PC := 276
	272	[3207]	EQ       	1 R14 K60 ; if R14 == "HealthAndShield" then PC := 381
	273	[3207]	JMP      	381 ; PC := 381
	274	[3207]	EQ       	1 R14 K61 ; if R14 == "Card" then PC := 381
	275	[3207]	JMP      	381 ; PC := 381
	276	[3207]	GETGLOBAL	R15 K11 ; R15 := _T
	277	[3207]	GETTABLE 	R15 R15 K62 ; R15 := R15["ForceShowImpactMessages"]
	278	[3207]	TEST     	R15 0 ; if not R15 then PC := 282
	279	[3207]	JMP      	282 ; PC := 282
	280	[3207]	EQ       	1 R14 K63 ; if R14 == "ImpactMessage" then PC := 381
	281	[3207]	JMP      	381 ; PC := 381
	282	[3209]	GETGLOBAL	R15 K6 ; R15 := 0xae91e43b
	283	[3209]	SELF     	R15 R15 K36 ; R16 := R15; R15 := R15[0xbf8f0712]
	284	[3209]	MOVE     	R17 R14 ; R17 := R14
	285	[3209]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	286	[3209]	TEST     	R15 0 ; if not R15 then PC := 292
	287	[3209]	JMP      	292 ; PC := 292
	288	[3210]	GETUPVAL 	R15 U6 ; R15 := U6
	289	[3210]	GETTABLE 	R15 R15 K35 ; R15 := R15["Interpolating"]
	290	[3210]	SETTABLE 	R15 R14 K13 ; R15[R14] := true
	291	[3210]	JMP      	424 ; PC := 424
	292	[3212]	GETUPVAL 	R15 U6 ; R15 := U6
	293	[3212]	GETTABLE 	R15 R15 K41 ; R15 := R15["Faded"]
	294	[3212]	GETTABLE 	R15 R15 R14 ; R15 := R15[R14]
	295	[3212]	TEST     	R15 1 ; if R15 then PC := 313
	296	[3212]	JMP      	313 ; PC := 313
	297	[3213]	GETUPVAL 	R15 U6 ; R15 := U6
	298	[3213]	GETTABLE 	R15 R15 K41 ; R15 := R15["Faded"]
	299	[3213]	NEWTABLE 	R16 0 2 ; R16 := {}
	300	[3213]	GETGLOBAL	R17 K6 ; R17 := 0xae91e43b
	301	[3213]	SELF     	R17 R17 K65 ; R18 := R17; R17 := R17[0x5b0290d2]
	302	[3213]	MOVE     	R19 R14 ; R19 := R14
	303	[3213]	LOADK    	R20 := 11.000000
	304	[3213]	CALL     	R17 4 2 ; R17 := R17(R18,R19,R20)
	305	[3213]	SETTABLE 	R16 K64 R17 ; R16["Visible"] := R17
	306	[3213]	GETGLOBAL	R17 K6 ; R17 := 0xae91e43b
	307	[3213]	SELF     	R17 R17 K67 ; R18 := R17; R17 := R17[0x91a24e4b]
	308	[3213]	MOVE     	R19 R14 ; R19 := R14
	309	[3213]	LOADK    	R20 := 10.000000
	310	[3213]	CALL     	R17 4 2 ; R17 := R17(R18,R19,R20)
	311	[3213]	SETTABLE 	R16 K66 R17 ; R16["Alpha"] := R17
	312	[3213]	SETTABLE 	R15 R14 R16 ; R15[R14] := R16
	313	[3215]	GETGLOBAL	R15 K6 ; R15 := 0xae91e43b
	314	[3215]	SELF     	R15 R15 K68 ; R16 := R15; R15 := R15[0xaade900e]
	315	[3215]	MOVE     	R17 R14 ; R17 := R14
	316	[3215]	LOADK    	R18 := 11.000000
	317	[3215]	EQ       	0 R0 K2 ; if R0 ~= 0.000000 then PC := 324
	318	[3215]	JMP      	324 ; PC := 324
	319	[3215]	GETUPVAL 	R19 U6 ; R19 := U6
	320	[3215]	GETTABLE 	R19 R19 K41 ; R19 := R19["Faded"]
	321	[3215]	GETTABLE 	R19 R19 R14 ; R19 := R19[R14]
	322	[3215]	GETTABLE 	R19 R19 K64 ; R19 := R19["Visible"]
	323	[3215]	JMP      	326 ; PC := 326
	324	[3215]	OP_LOADBOOL	R19 0 1 ; R19 := false; PC := 325
	325	[3215]	OP_LOADBOOL	R19 1 0 ; R19 := true
	326	[3215]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	327	[3216]	GETUPVAL 	R15 U6 ; R15 := U6
	328	[3216]	GETTABLE 	R15 R15 K69 ; R15 := R15["AutoClips"]
	329	[3216]	GETTABLE 	R15 R15 R14 ; R15 := R15[R14]
	330	[3216]	TEST     	R15 1 ; if R15 then PC := 346
	331	[3216]	JMP      	346 ; PC := 346
	332	[3217]	GETGLOBAL	R15 K6 ; R15 := 0xae91e43b
	333	[3217]	SELF     	R15 R15 K43 ; R16 := R15; R15 := R15[0x67bc869f]
	334	[3217]	MOVE     	R17 R14 ; R17 := R14
	335	[3217]	LOADK    	R18 := 10.000000
	336	[3217]	GETGLOBAL	R19 K37 ; R19 := 0x7fa0b32a
	337	[3217]	MOVE     	R20 R0 ; R20 := R0
	338	[3217]	CALL     	R19 2 2 ; R19 := R19(R20)
	339	[3217]	SUB      	R19 K38 R19 ; R19 := 1.000000 - R19
	340	[3217]	GETUPVAL 	R20 U6 ; R20 := U6
	341	[3217]	GETTABLE 	R20 R20 K41 ; R20 := R20["Faded"]
	342	[3217]	GETTABLE 	R20 R20 R14 ; R20 := R20[R14]
	343	[3217]	GETTABLE 	R20 R20 K66 ; R20 := R20["Alpha"]
	344	[3217]	MUL      	R19 R19 R20 ; R19 := R19 * R20
	345	[3217]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	346	[3219]	EQ       	0 R0 K2 ; if R0 ~= 0.000000 then PC := 351
	347	[3219]	JMP      	351 ; PC := 351
	348	[3220]	GETUPVAL 	R15 U6 ; R15 := U6
	349	[3220]	GETTABLE 	R15 R15 K41 ; R15 := R15["Faded"]
	350	[3220]	SETTABLE 	R15 R14 K18 ; R15[R14] := nil
	351	[3223]	GETGLOBAL	R15 K22 ; R15 := 0x7b998233
	352	[3223]	GETUPVAL 	R16 U8 ; R16 := U8
	353	[3223]	CALL     	R15 2 2 ; R15 := R15(R16)
	354	[3223]	TEST     	R15 1 ; if R15 then PC := 424
	355	[3223]	JMP      	424 ; PC := 424
	356	[3224]	GETUPVAL 	R15 U8 ; R15 := U8
	357	[3224]	SELF     	R15 R15 K70 ; R16 := R15; R15 := R15[0x603d617e]
	358	[3224]	CALL     	R15 2 2 ; R15 := R15(R16)
	359	[3225]	GETGLOBAL	R16 K22 ; R16 := 0x7b998233
	360	[3225]	MOVE     	R17 R15 ; R17 := R15
	361	[3225]	CALL     	R16 2 2 ; R16 := R16(R17)
	362	[3225]	TEST     	R16 1 ; if R16 then PC := 424
	363	[3225]	JMP      	424 ; PC := 424
	364	[3226]	SELF     	R16 R15 K68 ; R17 := R15; R16 := R15[0xaade900e]
	365	[3226]	LOADK    	R18 K44 ; R18 := "_root"
	366	[3226]	LOADK    	R19 := 11.000000
	367	[3226]	EQ       	1 R0 K2 ; if R0 == 0.000000 then PC := 370
	368	[3226]	JMP      	370 ; PC := 370
	369	[3226]	OP_LOADBOOL	R20 0 1 ; R20 := false; PC := 370
	370	[3226]	OP_LOADBOOL	R20 1 0 ; R20 := true
	371	[3226]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	372	[3227]	SELF     	R16 R15 K43 ; R17 := R15; R16 := R15[0x67bc869f]
	373	[3227]	LOADK    	R18 K44 ; R18 := "_root"
	374	[3227]	LOADK    	R19 := 10.000000
	375	[3227]	GETGLOBAL	R20 K37 ; R20 := 0x7fa0b32a
	376	[3227]	MOVE     	R21 R0 ; R21 := R0
	377	[3227]	CALL     	R20 2 2 ; R20 := R20(R21)
	378	[3227]	SUB      	R20 K38 R20 ; R20 := 1.000000 - R20
	379	[3227]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	380	[3230]	JMP      	424 ; PC := 424
	381	[3231]	GETUPVAL 	R16 U6 ; R16 := U6
	382	[3231]	GETTABLE 	R16 R16 K41 ; R16 := R16["Faded"]
	383	[3231]	GETTABLE 	R16 R16 R14 ; R16 := R16[R14]
	384	[3231]	TEST     	R16 0 ; if not R16 then PC := 424
	385	[3231]	JMP      	424 ; PC := 424
	386	[3232]	GETGLOBAL	R16 K6 ; R16 := 0xae91e43b
	387	[3232]	SELF     	R16 R16 K68 ; R17 := R16; R16 := R16[0xaade900e]
	388	[3232]	MOVE     	R18 R14 ; R18 := R14
	389	[3232]	LOADK    	R19 := 11.000000
	390	[3232]	OP_LOADBOOL	R20 1 0 ; R20 := true
	391	[3232]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	392	[3233]	GETGLOBAL	R16 K6 ; R16 := 0xae91e43b
	393	[3233]	SELF     	R16 R16 K43 ; R17 := R16; R16 := R16[0x67bc869f]
	394	[3233]	MOVE     	R18 R14 ; R18 := R14
	395	[3233]	LOADK    	R19 := 10.000000
	396	[3233]	LOADK    	R20 := 100.000000
	397	[3233]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	398	[3234]	GETUPVAL 	R16 U6 ; R16 := U6
	399	[3234]	GETTABLE 	R16 R16 K41 ; R16 := R16["Faded"]
	400	[3234]	SETTABLE 	R16 R14 K18 ; R16[R14] := nil
	401	[3236]	GETGLOBAL	R16 K22 ; R16 := 0x7b998233
	402	[3236]	GETUPVAL 	R17 U8 ; R17 := U8
	403	[3236]	CALL     	R16 2 2 ; R16 := R16(R17)
	404	[3236]	TEST     	R16 1 ; if R16 then PC := 424
	405	[3236]	JMP      	424 ; PC := 424
	406	[3237]	GETUPVAL 	R16 U8 ; R16 := U8
	407	[3237]	SELF     	R16 R16 K70 ; R17 := R16; R16 := R16[0x603d617e]
	408	[3237]	CALL     	R16 2 2 ; R16 := R16(R17)
	409	[3238]	GETGLOBAL	R17 K22 ; R17 := 0x7b998233
	410	[3238]	MOVE     	R18 R16 ; R18 := R16
	411	[3238]	CALL     	R17 2 2 ; R17 := R17(R18)
	412	[3238]	TEST     	R17 1 ; if R17 then PC := 424
	413	[3238]	JMP      	424 ; PC := 424
	414	[3239]	SELF     	R17 R16 K68 ; R18 := R16; R17 := R16[0xaade900e]
	415	[3239]	LOADK    	R19 K44 ; R19 := "_root"
	416	[3239]	LOADK    	R20 := 11.000000
	417	[3239]	OP_LOADBOOL	R21 1 0 ; R21 := true
	418	[3239]	CALL     	R17 5 1 ; R17(R18,R19,R20,R21)
	419	[3240]	SELF     	R17 R16 K43 ; R18 := R16; R17 := R16[0x67bc869f]
	420	[3240]	LOADK    	R19 K44 ; R19 := "_root"
	421	[3240]	LOADK    	R20 := 10.000000
	422	[3240]	LOADK    	R21 := 100.000000
	423	[3240]	CALL     	R17 5 1 ; R17(R18,R19,R20,R21)
	424	[3202]	TFORLOOP 	R10 2 ; R13,R14 := R10(R11,R12); if R13 ~= nil then begin PC = 236; R12 := R13 end
	425	[3243]	JMP      	236 ; PC := 236
	426	[3247]	GETUPVAL 	R17 U9 ; R17 := U9
	427	[3247]	SELF     	R17 R17 K71 ; R18 := R17; R17 := R17[0x2ce7535d]
	428	[3247]	MOVE     	R19 R7 ; R19 := R7
	429	[3247]	CALL     	R17 3 1 ; R17(R18,R19)
	430	[3249]	RETURN   	R0 1 ; return 

function #109 <?:3251,3253> (3 instructions, 12 bytes at 0000021137AEACE0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[3252]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[3252]	CALL     	R0 1 1 ; R0()
	3	[3253]	RETURN   	R0 1 ; return 

function #110 <?:3255,3650> (1092 instructions, 4368 bytes at 0000021137AEAD70)
0 params, 58 slots, 40 upvalues, 0 locals, 193 constants, 0 functions
	1	[3256]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[3256]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	3	[3256]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[3256]	TEST     	R0 1 ; if R0 then PC := 10
	5	[3256]	JMP      	10 ; PC := 10
	6	[3256]	GETUPVAL 	R0 U0 ; R0 := U0
	7	[3256]	GETTABLE 	R0 R0 K2 ; R0 := R0["Initialized"]
	8	[3256]	TEST     	R0 1 ; if R0 then PC := 11
	9	[3256]	JMP      	11 ; PC := 11
	10	[3257]	RETURN   	R0 1 ; return 
	11	[3260]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	12	[3260]	GETGLOBAL	R1 K3 ; R1 := 0xbe190284
	13	[3260]	CALL     	R0 2 2 ; R0 := R0(R1)
	14	[3260]	TEST     	R0 1 ; if R0 then PC := 22
	15	[3260]	JMP      	22 ; PC := 22
	16	[3260]	GETGLOBAL	R0 K3 ; R0 := 0xbe190284
	17	[3260]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0xf2deaf69]
	18	[3260]	GETGLOBAL	R2 K5 ; R2 := gLotusAttractModeGameRulesType
	19	[3260]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	20	[3260]	TEST     	R0 0 ; if not R0 then PC := 23
	21	[3260]	JMP      	23 ; PC := 23
	22	[3261]	RETURN   	R0 1 ; return 
	23	[3264]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	24	[3264]	GETGLOBAL	R1 K6 ; R1 := _T
	25	[3264]	GETTABLE 	R1 R1 K7 ; R1 := R1["RailjackHud_Movie"]
	26	[3264]	CALL     	R0 2 2 ; R0 := R0(R1)
	27	[3264]	NOT      	R0 R0 ; R0 := not R0
	28	[3268]	GETGLOBAL	R1 K8 ; R1 := 0x67652851
	29	[3268]	CALL     	R1 1 2 ; R1 := R1()
	30	[3271]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	31	[3271]	SELF     	R2 R2 K9 ; R3 := R2; R2 := R2[0x8a8c8d5a]
	32	[3271]	MOVE     	R4 R1 ; R4 := R1
	33	[3271]	CALL     	R2 3 1 ; R2(R3,R4)
	34	[3275]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	35	[3275]	GETUPVAL 	R3 U1 ; R3 := U1
	36	[3275]	CALL     	R2 2 2 ; R2 := R2(R3)
	37	[3275]	TEST     	R2 1 ; if R2 then PC := 43
	38	[3275]	JMP      	43 ; PC := 43
	39	[3276]	GETUPVAL 	R2 U1 ; R2 := U1
	40	[3276]	SELF     	R2 R2 K10 ; R3 := R2; R2 := R2[0xfaa69527]
	41	[3276]	MOVE     	R4 R1 ; R4 := R1
	42	[3276]	CALL     	R2 3 1 ; R2(R3,R4)
	43	[3280]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	44	[3280]	GETUPVAL 	R3 U2 ; R3 := U2
	45	[3280]	CALL     	R2 2 2 ; R2 := R2(R3)
	46	[3280]	TEST     	R2 1 ; if R2 then PC := 51
	47	[3280]	JMP      	51 ; PC := 51
	48	[3281]	GETUPVAL 	R2 U2 ; R2 := U2
	49	[3281]	SELF     	R2 R2 K10 ; R3 := R2; R2 := R2[0xfaa69527]
	50	[3281]	CALL     	R2 2 1 ; R2(R3)
	51	[3285]	GETGLOBAL	R2 K6 ; R2 := _T
	52	[3285]	GETUPVAL 	R3 U3 ; R3 := U3
	53	[3285]	CALL     	R3 1 2 ; R3 := R3()
	54	[3285]	SETTABLE 	R2 K11 R3 ; R2["HudInitState"] := R3
	55	[3288]	GETGLOBAL	R2 K6 ; R2 := _T
	56	[3288]	GETTABLE 	R2 R2 K11 ; R2 := R2["HudInitState"]
	57	[3288]	TEST     	R2 1 ; if R2 then PC := 60
	58	[3288]	JMP      	60 ; PC := 60
	59	[3290]	RETURN   	R0 1 ; return 
	60	[3294]	GETUPVAL 	R2 U0 ; R2 := U0
	61	[3294]	SETTABLE 	R2 K12 K13 ; R2["mDispatchingQueuedFuncs"] := true
	62	[3295]	GETUPVAL 	R2 U4 ; R2 := U4
	63	[3295]	LEN      	R2 R2 ; R2 := # R2
	64	[3295]	LT       	0 K14 R2 ; if 0.000000 >= R2 then PC := 114
	65	[3295]	JMP      	114 ; PC := 114
	66	[3296]	LOADK    	R2 := 1.000000
	67	[3296]	GETUPVAL 	R3 U4 ; R3 := U4
	68	[3296]	LEN      	R3 R3 ; R3 := # R3
	69	[3296]	LOADK    	R4 := 1.000000
	70	[3296]	FORPREP  	R2 111 ; R2 -= R4; PC := 111
	71	[3297]	GETUPVAL 	R6 U4 ; R6 := U4
	72	[3297]	GETTABLE 	R6 R6 R5 ; R6 := R6[R5]
	73	[3297]	GETTABLE 	R6 R6 K15 ; R6 := R6[1.000000]
	74	[3297]	GETUPVAL 	R7 U4 ; R7 := U4
	75	[3297]	GETTABLE 	R7 R7 R5 ; R7 := R7[R5]
	76	[3297]	GETTABLE 	R7 R7 K16 ; R7 := R7[2.000000]
	77	[3297]	GETUPVAL 	R8 U4 ; R8 := U4
	78	[3297]	GETTABLE 	R8 R8 R5 ; R8 := R8[R5]
	79	[3297]	GETTABLE 	R8 R8 K17 ; R8 := R8[3.000000]
	80	[3297]	GETUPVAL 	R9 U4 ; R9 := U4
	81	[3297]	GETTABLE 	R9 R9 R5 ; R9 := R9[R5]
	82	[3297]	GETTABLE 	R9 R9 K18 ; R9 := R9[4.000000]
	83	[3297]	GETUPVAL 	R10 U4 ; R10 := U4
	84	[3297]	GETTABLE 	R10 R10 R5 ; R10 := R10[R5]
	85	[3297]	GETTABLE 	R10 R10 K19 ; R10 := R10[5.000000]
	86	[3297]	GETUPVAL 	R11 U4 ; R11 := U4
	87	[3297]	GETTABLE 	R11 R11 R5 ; R11 := R11[R5]
	88	[3297]	GETTABLE 	R11 R11 K20 ; R11 := R11[6.000000]
	89	[3297]	GETUPVAL 	R12 U4 ; R12 := U4
	90	[3297]	GETTABLE 	R12 R12 R5 ; R12 := R12[R5]
	91	[3297]	GETTABLE 	R12 R12 K21 ; R12 := R12[7.000000]
	92	[3297]	GETUPVAL 	R13 U4 ; R13 := U4
	93	[3297]	GETTABLE 	R13 R13 R5 ; R13 := R13[R5]
	94	[3297]	GETTABLE 	R13 R13 K22 ; R13 := R13[8.000000]
	95	[3297]	GETUPVAL 	R14 U4 ; R14 := U4
	96	[3297]	GETTABLE 	R14 R14 R5 ; R14 := R14[R5]
	97	[3297]	GETTABLE 	R14 R14 K23 ; R14 := R14[9.000000]
	98	[3297]	GETUPVAL 	R15 U4 ; R15 := U4
	99	[3297]	GETTABLE 	R15 R15 R5 ; R15 := R15[R5]
	100	[3297]	GETTABLE 	R15 R15 K24 ; R15 := R15[10.000000]
	101	[3297]	GETUPVAL 	R16 U4 ; R16 := U4
	102	[3297]	GETTABLE 	R16 R16 R5 ; R16 := R16[R5]
	103	[3297]	GETTABLE 	R16 R16 K25 ; R16 := R16[11.000000]
	104	[3297]	GETUPVAL 	R17 U4 ; R17 := U4
	105	[3297]	GETTABLE 	R17 R17 R5 ; R17 := R17[R5]
	106	[3297]	GETTABLE 	R17 R17 K26 ; R17 := R17[12.000000]
	107	[3297]	GETUPVAL 	R18 U4 ; R18 := U4
	108	[3297]	GETTABLE 	R18 R18 R5 ; R18 := R18[R5]
	109	[3297]	GETTABLE 	R18 R18 K27 ; R18 := R18[13.000000]
	110	[3297]	CALL     	R6 13 1 ; R6(R7,R8,R9,R10,R11,R12,R13,R14,R15,R16,R17,R18)
	111	[3296]	FORLOOP  	R2 71 ; R2 += R4; if R2 <= R3 then begin PC := 71; R5 := R2 end
	112	[3299]	NEWTABLE 	R6 0 0 ; R6 := {}
	113	[3299]	SETUPVAL 	R6 U4 ; U4 := R6
	114	[3301]	GETUPVAL 	R6 U0 ; R6 := U0
	115	[3301]	SETTABLE 	R6 K12 K28 ; R6["mDispatchingQueuedFuncs"] := false
	116	[3303]	GETUPVAL 	R6 U0 ; R6 := U0
	117	[3303]	GETTABLE 	R6 R6 K29 ; R6 := R6["PlayerListHasChanged"]
	118	[3303]	TEST     	R6 0 ; if not R6 then PC := 122
	119	[3303]	JMP      	122 ; PC := 122
	120	[3304]	GETUPVAL 	R6 U5 ; R6 := U5
	121	[3304]	CALL     	R6 1 1 ; R6()
	122	[3307]	GETUPVAL 	R6 U0 ; R6 := U0
	123	[3307]	GETTABLE 	R6 R6 K30 ; R6 := R6["UIMode"]
	124	[3307]	GETUPVAL 	R7 U6 ; R7 := U6
	125	[3307]	GETTABLE 	R7 R7 K31 ; R7 := R7["UI_MODE_IN_GAME"]
	126	[3307]	EQ       	0 R6 R7 ; if R6 ~= R7 then PC := 141
	127	[3307]	JMP      	141 ; PC := 141
	128	[3307]	GETUPVAL 	R6 U0 ; R6 := U0
	129	[3307]	GETTABLE 	R6 R6 K32 ; R6 := R6["IsInConclave"]
	130	[3307]	TEST     	R6 1 ; if R6 then PC := 141
	131	[3307]	JMP      	141 ; PC := 141
	132	[3307]	GETUPVAL 	R6 U0 ; R6 := U0
	133	[3307]	GETTABLE 	R6 R6 K33 ; R6 := R6["MissionType"]
	134	[3307]	EQ       	0 R6 K34 ; if R6 ~= -1.000000 then PC := 141
	135	[3307]	JMP      	141 ; PC := 141
	136	[3308]	GETUPVAL 	R6 U0 ; R6 := U0
	137	[3308]	GETUPVAL 	R7 U7 ; R7 := U7
	138	[3308]	SELF     	R7 R7 K35 ; R8 := R7; R7 := R7[0x5c390f04]
	139	[3308]	CALL     	R7 2 2 ; R7 := R7(R8)
	140	[3308]	SETTABLE 	R6 K33 R7 ; R6["MissionType"] := R7
	141	[3313]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	142	[3313]	GETUPVAL 	R7 U8 ; R7 := U8
	143	[3313]	CALL     	R6 2 2 ; R6 := R6(R7)
	144	[3313]	TEST     	R6 1 ; if R6 then PC := 149
	145	[3313]	JMP      	149 ; PC := 149
	146	[3314]	GETUPVAL 	R6 U8 ; R6 := U8
	147	[3314]	SELF     	R6 R6 K10 ; R7 := R6; R6 := R6[0xfaa69527]
	148	[3314]	CALL     	R6 2 1 ; R6(R7)
	149	[3319]	GETUPVAL 	R6 U0 ; R6 := U0
	150	[3319]	GETGLOBAL	R7 K37 ; R7 := 0x34291f5c
	151	[3319]	GETTABLE 	R7 R7 K38 ; R7 := R7[0x1467d5f4]
	152	[3319]	CALL     	R7 1 2 ; R7 := R7()
	153	[3319]	SETTABLE 	R6 K36 R7 ; R6["mPlayingWithController"] := R7
	154	[3322]	GETUPVAL 	R6 U9 ; R6 := U9
	155	[3322]	SELF     	R6 R6 K10 ; R7 := R6; R6 := R6[0xfaa69527]
	156	[3322]	GETUPVAL 	R8 U10 ; R8 := U10
	157	[3322]	MOVE     	R9 R1 ; R9 := R1
	158	[3322]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	159	[3323]	GETGLOBAL	R6 K6 ; R6 := _T
	160	[3323]	GETTABLE 	R6 R6 K39 ; R6 := R6["OverrideDamageIndicatorColor"]
	161	[3323]	EQ       	1 R6 K40 ; if R6 == nil then PC := 170
	162	[3323]	JMP      	170 ; PC := 170
	163	[3324]	GETGLOBAL	R6 K1 ; R6 := 0xae91e43b
	164	[3324]	SELF     	R6 R6 K41 ; R7 := R6; R6 := R6[0x67bc869f]
	165	[3324]	LOADK    	R8 K42 ; R8 := "SuccessfulHitNotification"
	166	[3324]	LOADK    	R9 := 9.000000
	167	[3324]	GETGLOBAL	R10 K6 ; R10 := _T
	168	[3324]	GETTABLE 	R10 R10 K39 ; R10 := R10["OverrideDamageIndicatorColor"]
	169	[3324]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	170	[3327]	GETUPVAL 	R6 U11 ; R6 := U11
	171	[3327]	GETTABLE 	R6 R6 K43 ; R6 := R6["SecretMiniGameActive"]
	172	[3327]	GETGLOBAL	R7 K6 ; R7 := _T
	173	[3327]	GETTABLE 	R7 R7 K43 ; R7 := R7["SecretMiniGameActive"]
	174	[3327]	EQ       	1 R6 R7 ; if R6 == R7 then PC := 198
	175	[3327]	JMP      	198 ; PC := 198
	176	[3328]	GETUPVAL 	R6 U11 ; R6 := U11
	177	[3328]	GETGLOBAL	R7 K6 ; R7 := _T
	178	[3328]	GETTABLE 	R7 R7 K43 ; R7 := R7["SecretMiniGameActive"]
	179	[3328]	SETTABLE 	R6 K43 R7 ; R6["SecretMiniGameActive"] := R7
	180	[3329]	GETUPVAL 	R6 U9 ; R6 := U9
	181	[3329]	SELF     	R6 R6 K44 ; R7 := R6; R6 := R6[0x7442ac7d]
	182	[3329]	GETGLOBAL	R8 K6 ; R8 := _T
	183	[3329]	GETTABLE 	R8 R8 K43 ; R8 := R8["SecretMiniGameActive"]
	184	[3329]	EQ       	1 R8 K13 ; if R8 == true then PC := 187
	185	[3329]	JMP      	187 ; PC := 187
	186	[3329]	OP_LOADBOOL	R8 0 1 ; R8 := false; PC := 187
	187	[3329]	OP_LOADBOOL	R8 1 0 ; R8 := true
	188	[3329]	CALL     	R6 3 1 ; R6(R7,R8)
	189	[3330]	GETUPVAL 	R6 U9 ; R6 := U9
	190	[3330]	SELF     	R6 R6 K45 ; R7 := R6; R6 := R6[0x50a1c9ed]
	191	[3330]	GETGLOBAL	R8 K6 ; R8 := _T
	192	[3330]	GETTABLE 	R8 R8 K46 ; R8 := R8["SecretMiniGameAllowsPause"]
	193	[3330]	EQ       	1 R8 K13 ; if R8 == true then PC := 196
	194	[3330]	JMP      	196 ; PC := 196
	195	[3330]	OP_LOADBOOL	R8 0 1 ; R8 := false; PC := 196
	196	[3330]	OP_LOADBOOL	R8 1 0 ; R8 := true
	197	[3330]	CALL     	R6 3 1 ; R6(R7,R8)
	198	[3333]	GETUPVAL 	R6 U0 ; R6 := U0
	199	[3333]	GETTABLE 	R6 R6 K30 ; R6 := R6["UIMode"]
	200	[3333]	GETUPVAL 	R7 U6 ; R7 := U6
	201	[3333]	GETTABLE 	R7 R7 K47 ; R7 := R7["UI_MODE_IN_SPACE_HUB"]
	202	[3333]	EQ       	1 R6 R7 ; if R6 == R7 then PC := 307
	203	[3333]	JMP      	307 ; PC := 307
	204	[3335]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	205	[3335]	GETUPVAL 	R7 U12 ; R7 := U12
	206	[3335]	CALL     	R6 2 2 ; R6 := R6(R7)
	207	[3335]	TEST     	R6 1 ; if R6 then PC := 309
	208	[3335]	JMP      	309 ; PC := 309
	209	[3335]	GETUPVAL 	R6 U12 ; R6 := U12
	210	[3335]	SELF     	R6 R6 K48 ; R7 := R6; R6 := R6[0xa5e492d4]
	211	[3335]	CALL     	R6 2 2 ; R6 := R6(R7)
	212	[3335]	TEST     	R6 0 ; if not R6 then PC := 309
	213	[3335]	JMP      	309 ; PC := 309
	214	[3336]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	215	[3336]	GETUPVAL 	R7 U11 ; R7 := U11
	216	[3336]	GETTABLE 	R7 R7 K49 ; R7 := R7["ActivePowerSuit"]
	217	[3336]	CALL     	R6 2 2 ; R6 := R6(R7)
	218	[3336]	TEST     	R6 0 ; if not R6 then PC := 228
	219	[3336]	JMP      	228 ; PC := 228
	220	[3337]	GETUPVAL 	R6 U11 ; R6 := U11
	221	[3337]	GETUPVAL 	R7 U13 ; R7 := U13
	222	[3337]	GETTABLE 	R7 R7 K50 ; R7 := R7["InventoryController"]
	223	[3337]	SELF     	R7 R7 K51 ; R8 := R7; R7 := R7[0xf7d48ee0]
	224	[3337]	CALL     	R7 2 2 ; R7 := R7(R8)
	225	[3337]	SETTABLE 	R6 K49 R7 ; R6["ActivePowerSuit"] := R7
	226	[3338]	GETUPVAL 	R6 U14 ; R6 := U14
	227	[3338]	SETTABLE 	R6 K52 K40 ; R6["CustomAbilities"] := nil
	228	[3341]	GETGLOBAL	R6 K0 ; R6 := 0x7b998233
	229	[3341]	GETUPVAL 	R7 U11 ; R7 := U11
	230	[3341]	GETTABLE 	R7 R7 K49 ; R7 := R7["ActivePowerSuit"]
	231	[3341]	CALL     	R6 2 2 ; R6 := R6(R7)
	232	[3341]	TEST     	R6 1 ; if R6 then PC := 239
	233	[3341]	JMP      	239 ; PC := 239
	234	[3341]	GETUPVAL 	R6 U11 ; R6 := U11
	235	[3341]	GETTABLE 	R6 R6 K49 ; R6 := R6["ActivePowerSuit"]
	236	[3341]	SELF     	R6 R6 K53 ; R7 := R6; R6 := R6[0x1c3517ec]
	237	[3341]	CALL     	R6 2 2 ; R6 := R6(R7)
	238	[3341]	JMP      	241 ; PC := 241
	239	[3341]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 240
	240	[3341]	OP_LOADBOOL	R6 1 0 ; R6 := true
	241	[3342]	TEST     	R6 0 ; if not R6 then PC := 251
	242	[3342]	JMP      	251 ; PC := 251
	243	[3343]	GETUPVAL 	R7 U11 ; R7 := U11
	244	[3343]	GETUPVAL 	R8 U13 ; R8 := U13
	245	[3343]	GETTABLE 	R8 R8 K50 ; R8 := R8["InventoryController"]
	246	[3343]	SELF     	R8 R8 K54 ; R9 := R8; R8 := R8[0x2303a280]
	247	[3343]	CALL     	R8 2 2 ; R8 := R8(R9)
	248	[3343]	SETTABLE 	R7 K49 R8 ; R7["ActivePowerSuit"] := R8
	249	[3344]	GETUPVAL 	R7 U14 ; R7 := U14
	250	[3344]	SETTABLE 	R7 K52 K40 ; R7["CustomAbilities"] := nil
	251	[3347]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	252	[3347]	GETUPVAL 	R8 U15 ; R8 := U15
	253	[3347]	CALL     	R7 2 2 ; R7 := R7(R8)
	254	[3347]	TEST     	R7 1 ; if R7 then PC := 261
	255	[3347]	JMP      	261 ; PC := 261
	256	[3347]	GETUPVAL 	R7 U11 ; R7 := U11
	257	[3347]	GETTABLE 	R7 R7 K49 ; R7 := R7["ActivePowerSuit"]
	258	[3347]	GETUPVAL 	R8 U15 ; R8 := U15
	259	[3347]	EQ       	1 R7 R8 ; if R7 == R8 then PC := 309
	260	[3347]	JMP      	309 ; PC := 309
	261	[3348]	GETUPVAL 	R7 U11 ; R7 := U11
	262	[3348]	GETTABLE 	R7 R7 K49 ; R7 := R7["ActivePowerSuit"]
	263	[3348]	SETUPVAL 	R7 U15 ; U15 := R7
	264	[3349]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	265	[3349]	GETUPVAL 	R8 U15 ; R8 := U15
	266	[3349]	CALL     	R7 2 2 ; R7 := R7(R8)
	267	[3349]	TEST     	R7 1 ; if R7 then PC := 309
	268	[3349]	JMP      	309 ; PC := 309
	269	[3350]	GETUPVAL 	R7 U16 ; R7 := U16
	270	[3350]	SETTABLE 	R7 K55 K28 ; R7["hasCheckedForStatusEffects"] := false
	271	[3351]	GETUPVAL 	R7 U0 ; R7 := U0
	272	[3351]	GETUPVAL 	R8 U15 ; R8 := U15
	273	[3351]	SELF     	R8 R8 K4 ; R9 := R8; R8 := R8[0xf2deaf69]
	274	[3351]	GETGLOBAL	R10 K57 ; R10 := 0x8e6056be
	275	[3351]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	276	[3351]	SETTABLE 	R7 K56 R8 ; R7["IsOperator"] := R8
	277	[3352]	GETUPVAL 	R7 U15 ; R7 := U15
	278	[3352]	SELF     	R7 R7 K58 ; R8 := R7; R7 := R7[0x68d708a7]
	279	[3352]	CALL     	R7 2 2 ; R7 := R7(R8)
	280	[3353]	SELF     	R8 R7 K59 ; R9 := R7; R8 := R7[0x8e62760a]
	281	[3353]	LOADK    	R10 := 0.000000
	282	[3353]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	283	[3354]	SELF     	R9 R8 K61 ; R10 := R8; R9 := R8[0x697019d0]
	284	[3354]	LOADK    	R11 := 6.000000
	285	[3354]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	286	[3354]	TEST     	R9 0 ; if not R9 then PC := 309
	287	[3354]	JMP      	309 ; PC := 309
	288	[3355]	GETGLOBAL	R9 K62 ; R9 := 0x60130201
	289	[3355]	SELF     	R10 R8 K63 ; R11 := R8; R10 := R8[0x5d10207d]
	290	[3355]	LOADK    	R12 := 6.000000
	291	[3355]	CALL     	R10 3 0 ; R10,... := R10(R11,R12)
	292	[3355]	CALL     	R9 0 2 ; R9 := R9(R10,...)
	293	[3356]	GETGLOBAL	R10 K0 ; R10 := 0x7b998233
	294	[3356]	MOVE     	R11 R9 ; R11 := R9
	295	[3356]	CALL     	R10 2 2 ; R10 := R10(R11)
	296	[3356]	TEST     	R10 1 ; if R10 then PC := 309
	297	[3356]	JMP      	309 ; PC := 309
	298	[3357]	SELF     	R10 R9 K64 ; R11 := R9; R10 := R9[0xa5d5c8f6]
	299	[3357]	CALL     	R10 2 2 ; R10 := R10(R11)
	300	[3358]	GETGLOBAL	R11 K1 ; R11 := 0xae91e43b
	301	[3358]	SELF     	R11 R11 K41 ; R12 := R11; R11 := R11[0x67bc869f]
	302	[3358]	LOADK    	R13 K65 ; R13 := "AbilityChargeProgress"
	303	[3358]	LOADK    	R14 := 9.000000
	304	[3358]	MOVE     	R15 R10 ; R15 := R10
	305	[3358]	CALL     	R11 5 1 ; R11(R12,R13,R14,R15)
	306	[3363]	JMP      	309 ; PC := 309
	307	[3366]	GETUPVAL 	R11 U17 ; R11 := U17
	308	[3366]	CALL     	R11 1 1 ; R11()
	309	[3370]	GETUPVAL 	R11 U18 ; R11 := U18
	310	[3370]	CALL     	R11 1 1 ; R11()
	311	[3373]	GETUPVAL 	R11 U12 ; R11 := U12
	312	[3376]	GETGLOBAL	R12 K0 ; R12 := 0x7b998233
	313	[3376]	GETGLOBAL	R13 K66 ; R13 := 0x25d99d89
	314	[3376]	CALL     	R12 2 2 ; R12 := R12(R13)
	315	[3376]	TEST     	R12 1 ; if R12 then PC := 474
	316	[3376]	JMP      	474 ; PC := 474
	317	[3377]	GETGLOBAL	R12 K66 ; R12 := 0x25d99d89
	318	[3377]	SELF     	R12 R12 K67 ; R13 := R12; R12 := R12[0x5963daba]
	319	[3377]	CALL     	R12 2 2 ; R12 := R12(R13)
	320	[3378]	LE       	1 K16 R12 ; if 2.000000 <= R12 then PC := 323
	321	[3378]	JMP      	323 ; PC := 323
	322	[3378]	OP_LOADBOOL	R13 0 1 ; R13 := false; PC := 323
	323	[3378]	OP_LOADBOOL	R13 1 0 ; R13 := true
	324	[3379]	SELF     	R14 R11 K4 ; R15 := R11; R14 := R11[0xf2deaf69]
	325	[3379]	GETGLOBAL	R16 K68 ; R16 := gLotusOperatorAvatarType
	326	[3379]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	327	[3379]	TEST     	R14 0 ; if not R14 then PC := 331
	328	[3379]	JMP      	331 ; PC := 331
	329	[3379]	SELF     	R14 R11 K69 ; R15 := R11; R14 := R11[0x9d09462e]
	330	[3379]	CALL     	R14 2 2 ; R14 := R14(R15)
	331	[3380]	GETUPVAL 	R15 U13 ; R15 := U13
	332	[3380]	GETTABLE 	R15 R15 K50 ; R15 := R15["InventoryController"]
	333	[3380]	SELF     	R15 R15 K70 ; R16 := R15; R15 := R15[0xa340c0e2]
	334	[3380]	CALL     	R15 2 2 ; R15 := R15(R16)
	335	[3382]	GETUPVAL 	R16 U0 ; R16 := U0
	336	[3382]	GETTABLE 	R16 R16 K56 ; R16 := R16["IsOperator"]
	337	[3382]	TEST     	R16 0 ; if not R16 then PC := 365
	338	[3382]	JMP      	365 ; PC := 365
	339	[3383]	GETGLOBAL	R16 K1 ; R16 := 0xae91e43b
	340	[3383]	SELF     	R16 R16 K71 ; R17 := R16; R16 := R16[0xaade900e]
	341	[3383]	LOADK    	R18 K72 ; R18 := "AbilityPanel.EnergyBar"
	342	[3383]	LOADK    	R19 := 11.000000
	343	[3383]	MOVE     	R20 R14 ; R20 := R14
	344	[3383]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	345	[3384]	GETGLOBAL	R16 K1 ; R16 := 0xae91e43b
	346	[3384]	SELF     	R16 R16 K71 ; R17 := R16; R16 := R16[0xaade900e]
	347	[3384]	LOADK    	R18 K73 ; R18 := "AbilityPanel.EnergyAmount"
	348	[3384]	LOADK    	R19 := 11.000000
	349	[3384]	MOVE     	R20 R14 ; R20 := R14
	350	[3384]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	351	[3385]	GETGLOBAL	R16 K1 ; R16 := 0xae91e43b
	352	[3385]	SELF     	R16 R16 K71 ; R17 := R16; R16 := R16[0xaade900e]
	353	[3385]	LOADK    	R18 K74 ; R18 := "AbilityPanel.Focus"
	354	[3385]	LOADK    	R19 := 11.000000
	355	[3385]	GETGLOBAL	R20 K0 ; R20 := 0x7b998233
	356	[3385]	MOVE     	R21 R15 ; R21 := R15
	357	[3385]	CALL     	R20 2 2 ; R20 := R20(R21)
	358	[3385]	TEST     	R20 0 ; if not R20 then PC := 363
	359	[3385]	JMP      	363 ; PC := 363
	360	[3385]	MOVE     	R20 R13 ; R20 := R13
	361	[3385]	JMP      	364 ; PC := 364
	362	[3385]	OP_LOADBOOL	R20 0 1 ; R20 := false; PC := 363
	363	[3385]	OP_LOADBOOL	R20 1 0 ; R20 := true
	364	[3385]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	365	[3388]	TEST     	R13 0 ; if not R13 then PC := 474
	366	[3388]	JMP      	474 ; PC := 474
	367	[3389]	GETUPVAL 	R16 U10 ; R16 := U10
	368	[3389]	SELF     	R16 R16 K75 ; R17 := R16; R16 := R16[0x5578d98b]
	369	[3389]	CALL     	R16 2 2 ; R16 := R16(R17)
	370	[3390]	GETGLOBAL	R17 K0 ; R17 := 0x7b998233
	371	[3390]	MOVE     	R18 R16 ; R18 := R16
	372	[3390]	CALL     	R17 2 2 ; R17 := R17(R18)
	373	[3390]	TEST     	R17 1 ; if R17 then PC := 430
	374	[3390]	JMP      	430 ; PC := 430
	375	[3391]	SELF     	R17 R16 K76 ; R18 := R16; R17 := R16[0xde321e6f]
	376	[3391]	CALL     	R17 2 2 ; R17 := R17(R18)
	377	[3392]	GETGLOBAL	R18 K0 ; R18 := 0x7b998233
	378	[3392]	MOVE     	R19 R17 ; R19 := R17
	379	[3392]	CALL     	R18 2 2 ; R18 := R18(R19)
	380	[3392]	TEST     	R18 1 ; if R18 then PC := 430
	381	[3392]	JMP      	430 ; PC := 430
	382	[3393]	SELF     	R18 R17 K51 ; R19 := R17; R18 := R17[0xf7d48ee0]
	383	[3393]	CALL     	R18 2 2 ; R18 := R18(R19)
	384	[3394]	GETGLOBAL	R19 K0 ; R19 := 0x7b998233
	385	[3394]	MOVE     	R20 R18 ; R20 := R18
	386	[3394]	CALL     	R19 2 2 ; R19 := R19(R20)
	387	[3394]	TEST     	R19 1 ; if R19 then PC := 430
	388	[3394]	JMP      	430 ; PC := 430
	389	[3395]	SELF     	R19 R18 K77 ; R20 := R18; R19 := R18[0x58a4d5ac]
	390	[3395]	CALL     	R19 2 2 ; R19 := R19(R20)
	391	[3396]	SELF     	R20 R18 K78 ; R21 := R18; R20 := R18[0xded54c60]
	392	[3396]	CALL     	R20 2 2 ; R20 := R20(R21)
	393	[3397]	DIV      	R21 R19 R20 ; R21 := R19 / R20
	394	[3398]	GETGLOBAL	R22 K1 ; R22 := 0xae91e43b
	395	[3398]	SELF     	R22 R22 K79 ; R23 := R22; R22 := R22[0x91e13703]
	396	[3398]	LOADK    	R24 K80 ; R24 := "AbilityPanel.Focus.FocusFx"
	397	[3398]	LOADK    	R25 K81 ; R25 := "FocusFill"
	398	[3398]	MOVE     	R26 R21 ; R26 := R21
	399	[3398]	LOADK    	R27 := 0.000000
	400	[3398]	LOADK    	R28 := 0.000000
	401	[3398]	LOADK    	R29 := 0.000000
	402	[3398]	CALL     	R22 8 1 ; R22(R23,R24,R25,R26,R27,R28,R29)
	403	[3399]	GETGLOBAL	R22 K1 ; R22 := 0xae91e43b
	404	[3399]	SELF     	R22 R22 K71 ; R23 := R22; R22 := R22[0xaade900e]
	405	[3399]	LOADK    	R24 K82 ; R24 := "AbilityPanel.Focus.FocusIconActive"
	406	[3399]	LOADK    	R25 := 11.000000
	407	[3399]	LE       	1 K15 R21 ; if 1.000000 <= R21 then PC := 410
	408	[3399]	JMP      	410 ; PC := 410
	409	[3399]	OP_LOADBOOL	R26 0 1 ; R26 := false; PC := 410
	410	[3399]	OP_LOADBOOL	R26 1 0 ; R26 := true
	411	[3399]	CALL     	R22 5 1 ; R22(R23,R24,R25,R26)
	412	[3400]	GETGLOBAL	R22 K1 ; R22 := 0xae91e43b
	413	[3400]	SELF     	R22 R22 K71 ; R23 := R22; R22 := R22[0xaade900e]
	414	[3400]	LOADK    	R24 K83 ; R24 := "AbilityPanel.Focus.FocusGlow"
	415	[3400]	LOADK    	R25 := 11.000000
	416	[3400]	LE       	1 K15 R21 ; if 1.000000 <= R21 then PC := 419
	417	[3400]	JMP      	419 ; PC := 419
	418	[3400]	OP_LOADBOOL	R26 0 1 ; R26 := false; PC := 419
	419	[3400]	OP_LOADBOOL	R26 1 0 ; R26 := true
	420	[3400]	CALL     	R22 5 1 ; R22(R23,R24,R25,R26)
	421	[3401]	GETGLOBAL	R22 K1 ; R22 := 0xae91e43b
	422	[3401]	SELF     	R22 R22 K71 ; R23 := R22; R22 := R22[0xaade900e]
	423	[3401]	LOADK    	R24 K84 ; R24 := "AbilityPanel.Focus.FocusIconInactive"
	424	[3401]	LOADK    	R25 := 11.000000
	425	[3401]	LT       	1 R21 K15 ; if R21 < 1.000000 then PC := 428
	426	[3401]	JMP      	428 ; PC := 428
	427	[3401]	OP_LOADBOOL	R26 0 1 ; R26 := false; PC := 428
	428	[3401]	OP_LOADBOOL	R26 1 0 ; R26 := true
	429	[3401]	CALL     	R22 5 1 ; R22(R23,R24,R25,R26)
	430	[3406]	GETUPVAL 	R22 U0 ; R22 := U0
	431	[3406]	GETTABLE 	R22 R22 K56 ; R22 := R22["IsOperator"]
	432	[3406]	TEST     	R22 0 ; if not R22 then PC := 474
	433	[3406]	JMP      	474 ; PC := 474
	434	[3406]	GETGLOBAL	R22 K0 ; R22 := 0x7b998233
	435	[3406]	MOVE     	R23 R11 ; R23 := R11
	436	[3406]	CALL     	R22 2 2 ; R22 := R22(R23)
	437	[3406]	TEST     	R22 1 ; if R22 then PC := 474
	438	[3406]	JMP      	474 ; PC := 474
	439	[3406]	SELF     	R22 R11 K4 ; R23 := R11; R22 := R11[0xf2deaf69]
	440	[3406]	GETGLOBAL	R24 K68 ; R24 := gLotusOperatorAvatarType
	441	[3406]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	442	[3406]	TEST     	R22 0 ; if not R22 then PC := 474
	443	[3406]	JMP      	474 ; PC := 474
	444	[3407]	SELF     	R22 R11 K85 ; R23 := R11; R22 := R11[0x47363d30]
	445	[3407]	CALL     	R22 2 2 ; R22 := R22(R23)
	446	[3408]	SELF     	R23 R11 K86 ; R24 := R11; R23 := R11[0x5548f414]
	447	[3408]	CALL     	R23 2 2 ; R23 := R23(R24)
	448	[3409]	GETGLOBAL	R24 K87 ; R24 := 0x5bced4c4
	449	[3409]	GETTABLE 	R24 R24 K88 ; R24 := R24[0xac1b386a]
	450	[3409]	GETUPVAL 	R25 U19 ; R25 := U19
	451	[3409]	GETTABLE 	R25 R25 K89 ; R25 := R25[0x74a11ec6]
	452	[3409]	DIV      	R26 R22 R23 ; R26 := R22 / R23
	453	[3409]	MUL      	R26 R26 K90 ; R26 := R26 * 100.000000
	454	[3409]	LOADK    	R27 := 0.000000
	455	[3409]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	456	[3409]	ADD      	R25 R25 K15 ; R25 := R25 + 1.000000
	457	[3409]	LOADK    	R26 := 100.000000
	458	[3409]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	459	[3410]	GETGLOBAL	R25 K91 ; R25 := 0x38f10e85
	460	[3410]	GETGLOBAL	R26 K1 ; R26 := 0xae91e43b
	461	[3410]	LOADK    	R27 K92 ; R27 := "AbilityPanel.EnergyBar.gotoAndStop"
	462	[3410]	MOVE     	R28 R24 ; R28 := R24
	463	[3410]	CALL     	R25 4 1 ; R25(R26,R27,R28)
	464	[3412]	GETGLOBAL	R25 K1 ; R25 := 0xae91e43b
	465	[3412]	SELF     	R25 R25 K93 ; R26 := R25; R25 := R25[0x5f56eeab]
	466	[3412]	LOADK    	R27 K73 ; R27 := "AbilityPanel.EnergyAmount"
	467	[3412]	LOADK    	R28 := 29.000000
	468	[3412]	GETUPVAL 	R29 U19 ; R29 := U19
	469	[3412]	GETTABLE 	R29 R29 K89 ; R29 := R29[0x74a11ec6]
	470	[3412]	MOVE     	R30 R22 ; R30 := R22
	471	[3412]	LOADK    	R31 := 0.000000
	472	[3412]	CALL     	R29 3 0 ; R29,... := R29(R30,R31)
	473	[3412]	CALL     	R25 0 1 ; R25(R26,...)
	474	[3418]	GETUPVAL 	R25 U0 ; R25 := U0
	475	[3418]	GETTABLE 	R25 R25 K94 ; R25 := R25["IsSpectating"]
	476	[3418]	TEST     	R25 1 ; if R25 then PC := 485
	477	[3418]	JMP      	485 ; PC := 485
	478	[3419]	GETUPVAL 	R25 U9 ; R25 := U9
	479	[3419]	SELF     	R25 R25 K95 ; R26 := R25; R25 := R25[0xed924c7f]
	480	[3419]	MOVE     	R27 R11 ; R27 := R11
	481	[3419]	MOVE     	R28 R1 ; R28 := R1
	482	[3419]	GETGLOBAL	R29 K6 ; R29 := _T
	483	[3419]	GETTABLE 	R29 R29 K96 ; R29 := R29["velocityCoords"]
	484	[3419]	CALL     	R25 5 1 ; R25(R26,R27,R28,R29)
	485	[3423]	GETGLOBAL	R25 K97 ; R25 := 0x9ba7909f
	486	[3423]	SELF     	R25 R25 K98 ; R26 := R25; R25 := R25[0x5374b92e]
	487	[3423]	GETGLOBAL	R27 K99 ; R27 := 0xd991a286
	488	[3423]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	489	[3423]	TEST     	R25 1 ; if R25 then PC := 499
	490	[3423]	JMP      	499 ; PC := 499
	491	[3424]	GETGLOBAL	R25 K100 ; R25 := 0x3d106989
	492	[3424]	LOADK    	R26 K101 ; R26 := "HUD REDUX: Pushing background movie from Update"
	493	[3424]	CALL     	R25 2 1 ; R25(R26)
	494	[3425]	GETGLOBAL	R25 K97 ; R25 := 0x9ba7909f
	495	[3425]	SELF     	R25 R25 K102 ; R26 := R25; R25 := R25[0x6dd7aa66]
	496	[3425]	GETGLOBAL	R27 K99 ; R27 := 0xd991a286
	497	[3425]	CALL     	R25 3 1 ; R25(R26,R27)
	498	[3425]	JMP      	518 ; PC := 518
	499	[3426]	GETGLOBAL	R25 K0 ; R25 := 0x7b998233
	500	[3426]	GETGLOBAL	R26 K6 ; R26 := _T
	501	[3426]	GETTABLE 	R26 R26 K103 ; R26 := R26["BackgroundInitialized"]
	502	[3426]	CALL     	R25 2 2 ; R25 := R25(R26)
	503	[3426]	TEST     	R25 0 ; if not R25 then PC := 518
	504	[3426]	JMP      	518 ; PC := 518
	505	[3427]	GETGLOBAL	R25 K100 ; R25 := 0x3d106989
	506	[3427]	LOADK    	R26 K104 ; R26 := "HUD REDUX: Closing background and reinitializing due to the fact that the BackgroundInitialized is nil"
	507	[3427]	CALL     	R25 2 1 ; R25(R26)
	508	[3428]	GETGLOBAL	R25 K97 ; R25 := 0x9ba7909f
	509	[3428]	SELF     	R25 R25 K105 ; R26 := R25; R25 := R25[0xbcfb64ab]
	510	[3428]	GETGLOBAL	R27 K99 ; R27 := 0xd991a286
	511	[3428]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	512	[3429]	SELF     	R26 R25 K106 ; R27 := R25; R26 := R25[0x32302b4a]
	513	[3429]	CALL     	R26 2 1 ; R26(R27)
	514	[3430]	GETGLOBAL	R26 K97 ; R26 := 0x9ba7909f
	515	[3430]	SELF     	R26 R26 K102 ; R27 := R26; R26 := R26[0x6dd7aa66]
	516	[3430]	GETGLOBAL	R28 K99 ; R28 := 0xd991a286
	517	[3430]	CALL     	R26 3 1 ; R26(R27,R28)
	518	[3433]	GETGLOBAL	R26 K0 ; R26 := 0x7b998233
	519	[3433]	GETUPVAL 	R27 U0 ; R27 := U0
	520	[3433]	GETTABLE 	R27 R27 K107 ; R27 := R27["mHudMarkersMovie"]
	521	[3433]	CALL     	R26 2 2 ; R26 := R26(R27)
	522	[3433]	TEST     	R26 0 ; if not R26 then PC := 543
	523	[3433]	JMP      	543 ; PC := 543
	524	[3434]	GETUPVAL 	R26 U0 ; R26 := U0
	525	[3434]	GETGLOBAL	R27 K1 ; R27 := 0xae91e43b
	526	[3434]	SELF     	R27 R27 K108 ; R28 := R27; R27 := R27[0x1fd6abd0]
	527	[3434]	GETGLOBAL	R29 K109 ; R29 := 0x13d86d46
	528	[3434]	CALL     	R27 3 2 ; R27 := R27(R28,R29)
	529	[3434]	SETTABLE 	R26 K107 R27 ; R26["mHudMarkersMovie"] := R27
	530	[3435]	GETGLOBAL	R26 K0 ; R26 := 0x7b998233
	531	[3435]	GETUPVAL 	R27 U0 ; R27 := U0
	532	[3435]	GETTABLE 	R27 R27 K107 ; R27 := R27["mHudMarkersMovie"]
	533	[3435]	CALL     	R26 2 2 ; R26 := R26(R27)
	534	[3435]	TEST     	R26 1 ; if R26 then PC := 543
	535	[3435]	JMP      	543 ; PC := 543
	536	[3436]	GETUPVAL 	R26 U0 ; R26 := U0
	537	[3436]	GETTABLE 	R26 R26 K107 ; R26 := R26["mHudMarkersMovie"]
	538	[3436]	SELF     	R26 R26 K110 ; R27 := R26; R26 := R26[0x263a3cc2]
	539	[3436]	GETGLOBAL	R28 K1 ; R28 := 0xae91e43b
	540	[3436]	SELF     	R28 R28 K111 ; R29 := R28; R28 := R28[0xcd73323e]
	541	[3436]	CALL     	R28 2 0 ; R28,... := R28(R29)
	542	[3436]	CALL     	R26 0 1 ; R26(R27,...)
	543	[3440]	GETGLOBAL	R26 K0 ; R26 := 0x7b998233
	544	[3440]	GETUPVAL 	R27 U20 ; R27 := U20
	545	[3440]	CALL     	R26 2 2 ; R26 := R26(R27)
	546	[3440]	TEST     	R26 0 ; if not R26 then PC := 565
	547	[3440]	JMP      	565 ; PC := 565
	548	[3441]	GETUPVAL 	R26 U10 ; R26 := U10
	549	[3441]	SELF     	R26 R26 K112 ; R27 := R26; R26 := R26[0x0803eee1]
	550	[3441]	CALL     	R26 2 2 ; R26 := R26(R27)
	551	[3441]	SETUPVAL 	R26 U20 ; U20 := R26
	552	[3442]	GETGLOBAL	R26 K0 ; R26 := 0x7b998233
	553	[3442]	GETUPVAL 	R27 U20 ; R27 := U20
	554	[3442]	CALL     	R26 2 2 ; R26 := R26(R27)
	555	[3442]	TEST     	R26 0 ; if not R26 then PC := 558
	556	[3442]	JMP      	558 ; PC := 558
	557	[3443]	RETURN   	R0 1 ; return 
	558	[3446]	GETGLOBAL	R26 K113 ; R26 := 0xe72d2edb
	559	[3446]	EQ       	1 R26 K14 ; if R26 == 0.000000 then PC := 565
	560	[3446]	JMP      	565 ; PC := 565
	561	[3447]	GETUPVAL 	R26 U20 ; R26 := U20
	562	[3447]	SELF     	R26 R26 K114 ; R27 := R26; R26 := R26[0xeaef69de]
	563	[3447]	GETGLOBAL	R28 K113 ; R28 := 0xe72d2edb
	564	[3447]	CALL     	R26 3 1 ; R26(R27,R28)
	565	[3452]	GETUPVAL 	R26 U0 ; R26 := U0
	566	[3452]	GETTABLE 	R26 R26 K94 ; R26 := R26["IsSpectating"]
	567	[3452]	TEST     	R26 1 ; if R26 then PC := 575
	568	[3452]	JMP      	575 ; PC := 575
	569	[3452]	TEST     	R0 1 ; if R0 then PC := 575
	570	[3452]	JMP      	575 ; PC := 575
	571	[3453]	GETUPVAL 	R26 U21 ; R26 := U21
	572	[3453]	MOVE     	R27 R11 ; R27 := R11
	573	[3453]	MOVE     	R28 R1 ; R28 := R1
	574	[3453]	CALL     	R26 3 1 ; R26(R27,R28)
	575	[3457]	GETGLOBAL	R26 K6 ; R26 := _T
	576	[3457]	GETTABLE 	R26 R26 K115 ; R26 := R26["isStreamingLevel"]
	577	[3457]	TEST     	R26 1 ; if R26 then PC := 728
	578	[3457]	JMP      	728 ; PC := 728
	579	[3457]	GETUPVAL 	R26 U22 ; R26 := U22
	580	[3457]	GETTABLE 	R26 R26 K116 ; R26 := R26["Active"]
	581	[3457]	TEST     	R26 0 ; if not R26 then PC := 728
	582	[3457]	JMP      	728 ; PC := 728
	583	[3458]	GETUPVAL 	R26 U23 ; R26 := U23
	584	[3458]	GETTABLE 	R26 R26 K117 ; R26 := R26[0xf0090084]
	585	[3458]	CALL     	R26 1 2 ; R26 := R26()
	586	[3459]	EQ       	1 R26 K40 ; if R26 == nil then PC := 728
	587	[3459]	JMP      	728 ; PC := 728
	588	[3459]	GETUPVAL 	R27 U22 ; R27 := U22
	589	[3459]	GETTABLE 	R27 R27 K118 ; R27 := R27["IsNight"]
	590	[3459]	EQ       	1 R26 R27 ; if R26 == R27 then PC := 728
	591	[3459]	JMP      	728 ; PC := 728
	592	[3460]	GETUPVAL 	R27 U22 ; R27 := U22
	593	[3460]	GETTABLE 	R27 R27 K118 ; R27 := R27["IsNight"]
	594	[3460]	EQ       	1 R27 K40 ; if R27 == nil then PC := 597
	595	[3460]	JMP      	597 ; PC := 597
	596	[3460]	OP_LOADBOOL	R27 0 1 ; R27 := false; PC := 597
	597	[3460]	OP_LOADBOOL	R27 1 0 ; R27 := true
	598	[3461]	GETUPVAL 	R28 U22 ; R28 := U22
	599	[3461]	SETTABLE 	R28 K118 R26 ; R28["IsNight"] := R26
	600	[3463]	TEST     	R27 1 ; if R27 then PC := 672
	601	[3463]	JMP      	672 ; PC := 672
	602	[3463]	GETUPVAL 	R28 U22 ; R28 := U22
	603	[3463]	GETTABLE 	R28 R28 K119 ; R28 := R28["Landscape"]
	604	[3463]	TEST     	R28 0 ; if not R28 then PC := 672
	605	[3463]	JMP      	672 ; PC := 672
	606	[3464]	GETUPVAL 	R28 U22 ; R28 := U22
	607	[3464]	GETTABLE 	R28 R28 K118 ; R28 := R28["IsNight"]
	608	[3464]	TEST     	R28 0 ; if not R28 then PC := 621
	609	[3464]	JMP      	621 ; PC := 621
	610	[3466]	GETUPVAL 	R28 U22 ; R28 := U22
	611	[3466]	GETUPVAL 	R29 U22 ; R29 := U22
	612	[3466]	GETTABLE 	R29 R29 K120 ; R29 := R29["DayCount"]
	613	[3466]	ADD      	R29 R29 K15 ; R29 := R29 + 1.000000
	614	[3466]	SETTABLE 	R28 K120 R29 ; R28["DayCount"] := R29
	615	[3467]	GETUPVAL 	R28 U22 ; R28 := U22
	616	[3467]	GETUPVAL 	R29 U7 ; R29 := U7
	617	[3467]	SELF     	R29 R29 K122 ; R30 := R29; R29 := R29[0xae962fa0]
	618	[3467]	CALL     	R29 2 2 ; R29 := R29(R30)
	619	[3467]	SETTABLE 	R28 K121 R29 ; R28["GameTimeAtDusk"] := R29
	620	[3467]	JMP      	672 ; PC := 672
	621	[3470]	GETGLOBAL	R28 K0 ; R28 := 0x7b998233
	622	[3470]	GETUPVAL 	R29 U7 ; R29 := U7
	623	[3470]	CALL     	R28 2 2 ; R28 := R28(R29)
	624	[3470]	TEST     	R28 1 ; if R28 then PC := 636
	625	[3470]	JMP      	636 ; PC := 636
	626	[3470]	GETUPVAL 	R28 U7 ; R28 := U7
	627	[3470]	SELF     	R28 R28 K122 ; R29 := R28; R28 := R28[0xae962fa0]
	628	[3470]	CALL     	R28 2 2 ; R28 := R28(R29)
	629	[3470]	GETUPVAL 	R29 U22 ; R29 := U22
	630	[3470]	GETTABLE 	R29 R29 K121 ; R29 := R29["GameTimeAtDusk"]
	631	[3470]	SUB      	R28 R28 R29 ; R28 := R28 - R29
	632	[3470]	LT       	0 R28 K123 ; if R28 >= 2940.000000 then PC := 636
	633	[3470]	JMP      	636 ; PC := 636
	634	[3472]	GETUPVAL 	R28 U22 ; R28 := U22
	635	[3472]	SETTABLE 	R28 K120 K14 ; R28["DayCount"] := 0.000000
	636	[3474]	GETUPVAL 	R28 U22 ; R28 := U22
	637	[3474]	GETTABLE 	R28 R28 K120 ; R28 := R28["DayCount"]
	638	[3474]	LT       	0 K14 R28 ; if 0.000000 >= R28 then PC := 672
	639	[3474]	JMP      	672 ; PC := 672
	640	[3474]	GETUPVAL 	R28 U22 ; R28 := U22
	641	[3474]	GETTABLE 	R28 R28 K119 ; R28 := R28["Landscape"]
	642	[3474]	TEST     	R28 0 ; if not R28 then PC := 672
	643	[3474]	JMP      	672 ; PC := 672
	644	[3475]	GETGLOBAL	R28 K124 ; R28 := 0x89326c93
	645	[3475]	SELF     	R28 R28 K125 ; R29 := R28; R28 := R28[0xfb64e76c]
	646	[3475]	CALL     	R28 2 2 ; R28 := R28(R29)
	647	[3476]	GETUPVAL 	R29 U7 ; R29 := U7
	648	[3476]	SELF     	R29 R29 K126 ; R30 := R29; R29 := R29[0xef893aec]
	649	[3476]	CALL     	R29 2 2 ; R29 := R29(R30)
	650	[3477]	GETGLOBAL	R30 K0 ; R30 := 0x7b998233
	651	[3477]	MOVE     	R31 R28 ; R31 := R28
	652	[3477]	CALL     	R30 2 2 ; R30 := R30(R31)
	653	[3477]	TEST     	R30 1 ; if R30 then PC := 672
	654	[3477]	JMP      	672 ; PC := 672
	655	[3477]	GETGLOBAL	R30 K0 ; R30 := 0x7b998233
	656	[3477]	MOVE     	R31 R29 ; R31 := R29
	657	[3477]	CALL     	R30 2 2 ; R30 := R30(R31)
	658	[3477]	TEST     	R30 1 ; if R30 then PC := 672
	659	[3477]	JMP      	672 ; PC := 672
	660	[3477]	GETTABLE 	R30 R29 K127 ; R30 := R29["location"]
	661	[3477]	GETUPVAL 	R31 U6 ; R31 := U6
	662	[3477]	GETTABLE 	R31 R31 K128 ; R31 := R31["PLAINS_NODE_TAG"]
	663	[3477]	EQ       	0 R30 R31 ; if R30 ~= R31 then PC := 672
	664	[3477]	JMP      	672 ; PC := 672
	665	[3478]	GETGLOBAL	R30 K129 ; R30 := 0xba7dfcd2
	666	[3478]	SELF     	R30 R30 K130 ; R31 := R30; R30 := R30[0xf056b179]
	667	[3478]	MOVE     	R32 R28 ; R32 := R28
	668	[3478]	GETGLOBAL	R33 K131 ; R33 := 0x0469f296
	669	[3478]	LOADK    	R34 K132 ; R34 := "SURVIVED_EIDOLON_NIGHT"
	670	[3478]	CALL     	R33 2 0 ; R33,... := R33(R34)
	671	[3478]	CALL     	R30 0 1 ; R30(R31,...)
	672	[3484]	GETUPVAL 	R30 U22 ; R30 := U22
	673	[3484]	GETTABLE 	R30 R30 K133 ; R30 := R30["Visible"]
	674	[3484]	TEST     	R30 0 ; if not R30 then PC := 728
	675	[3484]	JMP      	728 ; PC := 728
	676	[3485]	TEST     	R27 0 ; if not R27 then PC := 691
	677	[3485]	JMP      	691 ; PC := 691
	678	[3486]	GETGLOBAL	R30 K1 ; R30 := 0xae91e43b
	679	[3486]	SELF     	R30 R30 K41 ; R31 := R30; R30 := R30[0x67bc869f]
	680	[3486]	LOADK    	R32 K134 ; R32 := "MiniMapContainer.Clock.Spinner"
	681	[3486]	LOADK    	R33 := 14.000000
	682	[3486]	GETUPVAL 	R34 U19 ; R34 := U19
	683	[3486]	GETTABLE 	R34 R34 K135 ; R34 := R34[0x06d055f9]
	684	[3486]	GETUPVAL 	R35 U22 ; R35 := U22
	685	[3486]	GETTABLE 	R35 R35 K118 ; R35 := R35["IsNight"]
	686	[3486]	LOADK    	R36 := 180.000000
	687	[3486]	LOADK    	R37 := 0.000000
	688	[3486]	CALL     	R34 4 0 ; R34,... := R34(R35,R36,R37)
	689	[3486]	CALL     	R30 0 1 ; R30(R31,...)
	690	[3486]	JMP      	709 ; PC := 709
	691	[3488]	GETGLOBAL	R30 K136 ; R30 := 0x25312c9b
	692	[3488]	GETGLOBAL	R31 K1 ; R31 := 0xae91e43b
	693	[3488]	LOADK    	R32 K134 ; R32 := "MiniMapContainer.Clock.Spinner"
	694	[3488]	LOADK    	R33 := 6.000000
	695	[3488]	NEWTABLE 	R34 1 0 ; R34 := {}
	696	[3488]	LOADK    	R35 := 14.000000
	697	[3488]	SETLIST  	R34 1 1 ; R34[(1-1)*FPF+i] := R(34+i), 1 <= i <= 1
	698	[3488]	NEWTABLE 	R35 0 0 ; R35 := {}
	699	[3488]	GETUPVAL 	R36 U19 ; R36 := U19
	700	[3488]	GETTABLE 	R36 R36 K135 ; R36 := R36[0x06d055f9]
	701	[3488]	GETUPVAL 	R37 U22 ; R37 := U22
	702	[3488]	GETTABLE 	R37 R37 K118 ; R37 := R37["IsNight"]
	703	[3488]	LOADK    	R38 := 180.000000
	704	[3488]	LOADK    	R39 := 0.000000
	705	[3488]	CALL     	R36 4 0 ; R36,... := R36(R37,R38,R39)
	706	[3488]	SETLIST  	R35 0 1 ; R35[(1-1)*FPF+i] := R(35+i), 1 <= i <= 0
	707	[3488]	LOADK    	R36 := 0.500000
	708	[3488]	CALL     	R30 7 1 ; R30(R31,R32,R33,R34,R35,R36)
	709	[3491]	GETGLOBAL	R30 K6 ; R30 := _T
	710	[3491]	GETTABLE 	R30 R30 K138 ; R30 := R30["ShowNotification"]
	711	[3491]	EQ       	1 R30 K40 ; if R30 == nil then PC := 728
	712	[3491]	JMP      	728 ; PC := 728
	713	[3491]	TEST     	R27 1 ; if R27 then PC := 728
	714	[3491]	JMP      	728 ; PC := 728
	715	[3492]	LOADK    	R30 K139 ; R30 := "/Lotus/Language/Menu/"
	716	[3492]	GETUPVAL 	R31 U19 ; R31 := U19
	717	[3492]	GETTABLE 	R31 R31 K135 ; R31 := R31[0x06d055f9]
	718	[3492]	GETUPVAL 	R32 U22 ; R32 := U22
	719	[3492]	GETTABLE 	R32 R32 K118 ; R32 := R32["IsNight"]
	720	[3492]	LOADK    	R33 K140 ; R33 := "HUD_Nightfall"
	721	[3492]	LOADK    	R34 K141 ; R34 := "HUD_Daybreak"
	722	[3492]	CALL     	R31 4 2 ; R31 := R31(R32,R33,R34)
	723	[3492]	CONCAT   	R30 R30 R31 ; R30 := R30 .. R31
	724	[3493]	GETGLOBAL	R31 K6 ; R31 := _T
	725	[3493]	GETTABLE 	R31 R31 K142 ; R31 := R31[0x7dce37bc]
	726	[3493]	MOVE     	R32 R30 ; R32 := R30
	727	[3493]	CALL     	R31 2 1 ; R31(R32)
	728	[3499]	GETUPVAL 	R31 U2 ; R31 := U2
	729	[3499]	SELF     	R31 R31 K143 ; R32 := R31; R31 := R31[0x46610c50]
	730	[3499]	GETGLOBAL	R33 K6 ; R33 := _T
	731	[3499]	GETTABLE 	R33 R33 K115 ; R33 := R33["isStreamingLevel"]
	732	[3499]	EQ       	0 R33 K13 ; if R33 ~= true then PC := 738
	733	[3499]	JMP      	738 ; PC := 738
	734	[3499]	GETUPVAL 	R33 U0 ; R33 := U0
	735	[3499]	GETTABLE 	R33 R33 K144 ; R33 := R33["IsAlternateHud"]
	736	[3499]	NOT      	R33 R33 ; R33 := not R33
	737	[3499]	JMP      	740 ; PC := 740
	738	[3499]	OP_LOADBOOL	R33 0 1 ; R33 := false; PC := 739
	739	[3499]	OP_LOADBOOL	R33 1 0 ; R33 := true
	740	[3499]	CALL     	R31 3 1 ; R31(R32,R33)
	741	[3501]	GETUPVAL 	R31 U0 ; R31 := U0
	742	[3501]	GETTABLE 	R31 R31 K30 ; R31 := R31["UIMode"]
	743	[3501]	GETUPVAL 	R32 U6 ; R32 := U6
	744	[3501]	GETTABLE 	R32 R32 K47 ; R32 := R32["UI_MODE_IN_SPACE_HUB"]
	745	[3501]	EQ       	1 R31 R32 ; if R31 == R32 then PC := 821
	746	[3501]	JMP      	821 ; PC := 821
	747	[3504]	GETGLOBAL	R31 K0 ; R31 := 0x7b998233
	748	[3504]	MOVE     	R32 R11 ; R32 := R11
	749	[3504]	CALL     	R31 2 2 ; R31 := R31(R32)
	750	[3504]	TEST     	R31 1 ; if R31 then PC := 755
	751	[3504]	JMP      	755 ; PC := 755
	752	[3505]	GETUPVAL 	R31 U24 ; R31 := U24
	753	[3505]	MOVE     	R32 R11 ; R32 := R11
	754	[3505]	CALL     	R31 2 1 ; R31(R32)
	755	[3509]	GETGLOBAL	R31 K0 ; R31 := 0x7b998233
	756	[3509]	MOVE     	R32 R11 ; R32 := R11
	757	[3509]	CALL     	R31 2 2 ; R31 := R31(R32)
	758	[3509]	TEST     	R31 1 ; if R31 then PC := 773
	759	[3509]	JMP      	773 ; PC := 773
	760	[3510]	GETGLOBAL	R31 K6 ; R31 := _T
	761	[3510]	GETTABLE 	R31 R31 K145 ; R31 := R31["PetNameNeedsUpdate"]
	762	[3510]	TEST     	R31 0 ; if not R31 then PC := 770
	763	[3510]	JMP      	770 ; PC := 770
	764	[3511]	GETGLOBAL	R31 K6 ; R31 := _T
	765	[3511]	SETTABLE 	R31 K145 K40 ; R31["PetNameNeedsUpdate"] := nil
	766	[3512]	GETUPVAL 	R31 U9 ; R31 := U9
	767	[3512]	SELF     	R31 R31 K146 ; R32 := R31; R31 := R31[0xe1fb4b07]
	768	[3512]	MOVE     	R33 R11 ; R33 := R11
	769	[3512]	CALL     	R31 3 1 ; R31(R32,R33)
	770	[3515]	GETUPVAL 	R31 U25 ; R31 := U25
	771	[3515]	MOVE     	R32 R1 ; R32 := R1
	772	[3515]	CALL     	R31 2 1 ; R31(R32)
	773	[3518]	GETGLOBAL	R31 K113 ; R31 := 0xe72d2edb
	774	[3518]	EQ       	1 R31 K14 ; if R31 == 0.000000 then PC := 778
	775	[3518]	JMP      	778 ; PC := 778
	776	[3519]	GETUPVAL 	R31 U26 ; R31 := U26
	777	[3519]	CALL     	R31 1 1 ; R31()
	778	[3523]	GETUPVAL 	R31 U27 ; R31 := U27
	779	[3523]	SELF     	R31 R31 K10 ; R32 := R31; R31 := R31[0xfaa69527]
	780	[3523]	CALL     	R31 2 1 ; R31(R32)
	781	[3526]	GETUPVAL 	R31 U28 ; R31 := U28
	782	[3526]	GETTABLE 	R31 R31 K147 ; R31 := R31["mCanControlPlayerPanel"]
	783	[3526]	TEST     	R31 0 ; if not R31 then PC := 815
	784	[3526]	JMP      	815 ; PC := 815
	785	[3526]	GETGLOBAL	R31 K6 ; R31 := _T
	786	[3526]	GETTABLE 	R31 R31 K148 ; R31 := R31["HidePlayerPanel"]
	787	[3526]	GETUPVAL 	R32 U28 ; R32 := U28
	788	[3526]	GETTABLE 	R32 R32 K148 ; R32 := R32["HidePlayerPanel"]
	789	[3526]	EQ       	1 R31 R32 ; if R31 == R32 then PC := 815
	790	[3526]	JMP      	815 ; PC := 815
	791	[3526]	GETGLOBAL	R31 K0 ; R31 := 0x7b998233
	792	[3526]	GETUPVAL 	R32 U29 ; R32 := U29
	793	[3526]	CALL     	R31 2 2 ; R31 := R31(R32)
	794	[3526]	TEST     	R31 1 ; if R31 then PC := 815
	795	[3526]	JMP      	815 ; PC := 815
	796	[3527]	GETUPVAL 	R31 U28 ; R31 := U28
	797	[3527]	GETGLOBAL	R32 K6 ; R32 := _T
	798	[3527]	GETTABLE 	R32 R32 K148 ; R32 := R32["HidePlayerPanel"]
	799	[3527]	SETTABLE 	R31 K148 R32 ; R31["HidePlayerPanel"] := R32
	800	[3528]	GETUPVAL 	R31 U28 ; R31 := U28
	801	[3528]	GETTABLE 	R31 R31 K148 ; R31 := R31["HidePlayerPanel"]
	802	[3528]	EQ       	1 R31 K40 ; if R31 == nil then PC := 808
	803	[3528]	JMP      	808 ; PC := 808
	804	[3528]	GETUPVAL 	R31 U28 ; R31 := U28
	805	[3528]	GETTABLE 	R31 R31 K148 ; R31 := R31["HidePlayerPanel"]
	806	[3528]	EQ       	0 R31 K14 ; if R31 ~= 0.000000 then PC := 812
	807	[3528]	JMP      	812 ; PC := 812
	808	[3529]	GETUPVAL 	R31 U29 ; R31 := U29
	809	[3529]	SELF     	R31 R31 K149 ; R32 := R31; R31 := R31[0x587aa683]
	810	[3529]	CALL     	R31 2 1 ; R31(R32)
	811	[3529]	JMP      	815 ; PC := 815
	812	[3531]	GETUPVAL 	R31 U29 ; R31 := U29
	813	[3531]	SELF     	R31 R31 K150 ; R32 := R31; R31 := R31[0xe0f7ce9e]
	814	[3531]	CALL     	R31 2 1 ; R31(R32)
	815	[3536]	GETUPVAL 	R31 U29 ; R31 := U29
	816	[3536]	SELF     	R31 R31 K10 ; R32 := R31; R31 := R31[0xfaa69527]
	817	[3536]	CALL     	R31 2 1 ; R31(R32)
	818	[3540]	GETUPVAL 	R31 U30 ; R31 := U30
	819	[3540]	MOVE     	R32 R1 ; R32 := R1
	820	[3540]	CALL     	R31 2 1 ; R31(R32)
	821	[3545]	TEST     	R0 1 ; if R0 then PC := 911
	822	[3545]	JMP      	911 ; PC := 911
	823	[3546]	GETUPVAL 	R31 U9 ; R31 := U9
	824	[3546]	SELF     	R31 R31 K151 ; R32 := R31; R31 := R31[0x2660b67b]
	825	[3546]	MOVE     	R33 R11 ; R33 := R11
	826	[3546]	MOVE     	R34 R1 ; R34 := R1
	827	[3546]	GETGLOBAL	R35 K6 ; R35 := _T
	828	[3546]	GETTABLE 	R35 R35 K152 ; R35 := R35["keyBindsSaved"]
	829	[3546]	EQ       	1 R35 K13 ; if R35 == true then PC := 832
	830	[3546]	JMP      	832 ; PC := 832
	831	[3546]	OP_LOADBOOL	R35 0 1 ; R35 := false; PC := 832
	832	[3546]	OP_LOADBOOL	R35 1 0 ; R35 := true
	833	[3546]	CALL     	R31 5 1 ; R31(R32,R33,R34,R35)
	834	[3547]	GETUPVAL 	R31 U0 ; R31 := U0
	835	[3547]	GETTABLE 	R31 R31 K36 ; R31 := R31["mPlayingWithController"]
	836	[3547]	TEST     	R31 0 ; if not R31 then PC := 844
	837	[3547]	JMP      	844 ; PC := 844
	838	[3547]	GETGLOBAL	R31 K6 ; R31 := _T
	839	[3547]	GETTABLE 	R31 R31 K152 ; R31 := R31["keyBindsSaved"]
	840	[3547]	TEST     	R31 0 ; if not R31 then PC := 844
	841	[3547]	JMP      	844 ; PC := 844
	842	[3548]	GETGLOBAL	R31 K6 ; R31 := _T
	843	[3548]	SETTABLE 	R31 K152 K40 ; R31["keyBindsSaved"] := nil
	844	[3551]	GETGLOBAL	R31 K153 ; R31 := 0xcfc01047
	845	[3551]	GETUPVAL 	R32 U31 ; R32 := U31
	846	[3551]	CALL     	R31 2 4 ; R31,R32,R33 := R31(R32)
	847	[3551]	JMP      	909 ; PC := 909
	848	[3552]	GETGLOBAL	R36 K0 ; R36 := 0x7b998233
	849	[3552]	MOVE     	R37 R35 ; R37 := R35
	850	[3552]	CALL     	R36 2 2 ; R36 := R36(R37)
	851	[3552]	TEST     	R36 0 ; if not R36 then PC := 856
	852	[3552]	JMP      	856 ; PC := 856
	853	[3553]	GETUPVAL 	R36 U31 ; R36 := U31
	854	[3553]	SETTABLE 	R36 R34 K40 ; R36[R34] := nil
	855	[3553]	JMP      	909 ; PC := 909
	856	[3556]	LOADK    	R36 K154 ; R36 := "AbilityPanel.Ability"
	857	[3557]	GETGLOBAL	R37 K113 ; R37 := 0xe72d2edb
	858	[3557]	EQ       	0 R37 K17 ; if R37 ~= 3.000000 then PC := 861
	859	[3557]	JMP      	861 ; PC := 861
	860	[3559]	LOADK    	R36 K155 ; R36 := "StancePanel.StanceComponent.Stance"
	861	[3561]	GETGLOBAL	R37 K1 ; R37 := 0xae91e43b
	862	[3561]	SELF     	R37 R37 K156 ; R38 := R37; R37 := R37[0x91a24e4b]
	863	[3561]	MOVE     	R39 R36 ; R39 := R36
	864	[3561]	MOVE     	R40 R34 ; R40 := R34
	865	[3561]	CONCAT   	R39 R39 R40 ; R39 := R39 .. R40
	866	[3561]	LOADK    	R40 := 0.000000
	867	[3561]	CALL     	R37 4 2 ; R37 := R37(R38,R39,R40)
	868	[3562]	GETGLOBAL	R38 K87 ; R38 := 0x5bced4c4
	869	[3562]	GETTABLE 	R38 R38 K157 ; R38 := R38[0xd4c1d800]
	870	[3562]	GETUPVAL 	R39 U19 ; R39 := U19
	871	[3562]	GETTABLE 	R39 R39 K158 ; R39 := R39[0x15ba5fe6]
	872	[3562]	LOADK    	R40 := 4.000000
	873	[3562]	CALL     	R39 2 0 ; R39,... := R39(R40)
	874	[3562]	CALL     	R38 0 2 ; R38 := R38(R39,...)
	875	[3562]	MUL      	R38 R37 R38 ; R38 := R37 * R38
	876	[3563]	GETUPVAL 	R39 U19 ; R39 := U19
	877	[3563]	GETTABLE 	R39 R39 K159 ; R39 := R39[0x49f30025]
	878	[3563]	GETGLOBAL	R40 K1 ; R40 := 0xae91e43b
	879	[3563]	CALL     	R39 2 3 ; R39,R40 := R39(R40)
	880	[3564]	DIV      	R41 R39 K23 ; R41 := R39 / 9.000000
	881	[3564]	DIV      	R37 R37 R41 ; R37 := R37 / R41
	882	[3565]	GETUPVAL 	R41 U19 ; R41 := U19
	883	[3565]	GETTABLE 	R41 R41 K160 ; R41 := R41[0xb5be5d4a]
	884	[3565]	GETGLOBAL	R42 K1 ; R42 := 0xae91e43b
	885	[3565]	MOVE     	R43 R36 ; R43 := R36
	886	[3565]	MOVE     	R44 R34 ; R44 := R34
	887	[3565]	LOADK    	R45 K161 ; R45 := ".Icon"
	888	[3565]	CONCAT   	R43 R43 R45 ; R43 := R43 .. R44 .. R45
	889	[3565]	OP_LOADBOOL	R44 1 0 ; R44 := true
	890	[3565]	CALL     	R41 4 3 ; R41,R42 := R41(R42,R43,R44)
	891	[3566]	GETGLOBAL	R43 K124 ; R43 := 0x89326c93
	892	[3566]	SELF     	R43 R43 K162 ; R44 := R43; R43 := R43[0xb4364067]
	893	[3566]	CALL     	R43 2 2 ; R43 := R43(R44)
	894	[3567]	GETUPVAL 	R44 U19 ; R44 := U19
	895	[3567]	GETTABLE 	R44 R44 K163 ; R44 := R44[0x3e145a1a]
	896	[3567]	GETGLOBAL	R45 K1 ; R45 := 0xae91e43b
	897	[3567]	ADD      	R46 R41 R37 ; R46 := R41 + R37
	898	[3567]	ADD      	R47 R42 R38 ; R47 := R42 + R38
	899	[3567]	MOVE     	R48 R43 ; R48 := R43
	900	[3567]	CALL     	R44 5 3 ; R44,R45 := R44(R45,R46,R47,R48)
	901	[3568]	SELF     	R46 R35 K164 ; R47 := R35; R46 := R35[0xe28aa928]
	902	[3568]	GETGLOBAL	R48 K165 ; R48 := 0xa421af95
	903	[3568]	MOVE     	R49 R44 ; R49 := R44
	904	[3568]	MOVE     	R50 R45 ; R50 := R45
	905	[3568]	LOADK    	R51 := 1.000000
	906	[3568]	CALL     	R48 4 2 ; R48 := R48(R49,R50,R51)
	907	[3568]	GETGLOBAL	R49 K166 ; R49 := ZERO_ROTATION
	908	[3568]	CALL     	R46 4 1 ; R46(R47,R48,R49)
	909	[3551]	TFORLOOP 	R31 2 ; R34,R35 := R31(R32,R33); if R34 ~= nil then begin PC = 848; R33 := R34 end
	910	[3569]	JMP      	848 ; PC := 848
	911	[3575]	GETUPVAL 	R46 U9 ; R46 := U9
	912	[3575]	SELF     	R46 R46 K167 ; R47 := R46; R46 := R46[0x2855a0e4]
	913	[3575]	MOVE     	R48 R11 ; R48 := R11
	914	[3575]	GETGLOBAL	R49 K6 ; R49 := _T
	915	[3575]	GETTABLE 	R49 R49 K168 ; R49 := R49["SubtitleVisible"]
	916	[3575]	EQ       	1 R49 K13 ; if R49 == true then PC := 919
	917	[3575]	JMP      	919 ; PC := 919
	918	[3575]	OP_LOADBOOL	R49 0 1 ; R49 := false; PC := 919
	919	[3575]	OP_LOADBOOL	R49 1 0 ; R49 := true
	920	[3575]	MOVE     	R50 R1 ; R50 := R1
	921	[3575]	CALL     	R46 5 1 ; R46(R47,R48,R49,R50)
	922	[3579]	GETUPVAL 	R46 U32 ; R46 := U32
	923	[3579]	MOVE     	R47 R1 ; R47 := R1
	924	[3579]	CALL     	R46 2 1 ; R46(R47)
	925	[3583]	GETUPVAL 	R46 U33 ; R46 := U33
	926	[3583]	MOVE     	R47 R11 ; R47 := R11
	927	[3583]	MOVE     	R48 R1 ; R48 := R1
	928	[3583]	CALL     	R46 3 1 ; R46(R47,R48)
	929	[3587]	GETUPVAL 	R46 U9 ; R46 := U9
	930	[3587]	SELF     	R46 R46 K169 ; R47 := R46; R46 := R46[0x840ecf2e]
	931	[3587]	MOVE     	R48 R11 ; R48 := R11
	932	[3587]	GETGLOBAL	R49 K6 ; R49 := _T
	933	[3587]	GETTABLE 	R49 R49 K170 ; R49 := R49["DisableMiniMap"]
	934	[3587]	EQ       	1 R49 K13 ; if R49 == true then PC := 937
	935	[3587]	JMP      	937 ; PC := 937
	936	[3587]	OP_LOADBOOL	R49 0 1 ; R49 := false; PC := 937
	937	[3587]	OP_LOADBOOL	R49 1 0 ; R49 := true
	938	[3587]	GETGLOBAL	R50 K6 ; R50 := _T
	939	[3587]	GETTABLE 	R50 R50 K170 ; R50 := R50["DisableMiniMap"]
	940	[3587]	EQ       	0 R50 K13 ; if R50 ~= true then PC := 943
	941	[3587]	JMP      	943 ; PC := 943
	942	[3587]	OP_LOADBOOL	R50 0 1 ; R50 := false; PC := 943
	943	[3587]	OP_LOADBOOL	R50 1 0 ; R50 := true
	944	[3587]	GETGLOBAL	R51 K6 ; R51 := _T
	945	[3587]	GETTABLE 	R51 R51 K171 ; R51 := R51["OverlayMapVisible"]
	946	[3587]	EQ       	1 R51 K13 ; if R51 == true then PC := 949
	947	[3587]	JMP      	949 ; PC := 949
	948	[3587]	OP_LOADBOOL	R51 0 1 ; R51 := false; PC := 949
	949	[3587]	OP_LOADBOOL	R51 1 0 ; R51 := true
	950	[3587]	CALL     	R46 6 1 ; R46(R47,R48,R49,R50,R51)
	951	[3590]	GETUPVAL 	R46 U9 ; R46 := U9
	952	[3590]	SELF     	R46 R46 K172 ; R47 := R46; R46 := R46[0xb8366c40]
	953	[3590]	CALL     	R46 2 2 ; R46 := R46(R47)
	954	[3590]	TEST     	R46 0 ; if not R46 then PC := 959
	955	[3590]	JMP      	959 ; PC := 959
	956	[3592]	GETUPVAL 	R46 U34 ; R46 := U34
	957	[3592]	GETTABLE 	R46 R46 K173 ; R46 := R46[0x6f72d56e]
	958	[3592]	CALL     	R46 1 1 ; R46()
	959	[3597]	GETUPVAL 	R46 U35 ; R46 := U35
	960	[3597]	GETTABLE 	R46 R46 K174 ; R46 := R46["PhotoBooth"]
	961	[3597]	TEST     	R46 1 ; if R46 then PC := 975
	962	[3597]	JMP      	975 ; PC := 975
	963	[3597]	GETGLOBAL	R46 K0 ; R46 := 0x7b998233
	964	[3597]	MOVE     	R47 R11 ; R47 := R11
	965	[3597]	CALL     	R46 2 2 ; R46 := R46(R47)
	966	[3597]	TEST     	R46 1 ; if R46 then PC := 975
	967	[3597]	JMP      	975 ; PC := 975
	968	[3598]	GETUPVAL 	R46 U9 ; R46 := U9
	969	[3598]	SELF     	R46 R46 K175 ; R47 := R46; R46 := R46[0x0b8ec6da]
	970	[3598]	MOVE     	R48 R11 ; R48 := R11
	971	[3598]	GETUPVAL 	R49 U36 ; R49 := U36
	972	[3598]	GETGLOBAL	R50 K6 ; R50 := _T
	973	[3598]	GETTABLE 	R50 R50 K176 ; R50 := R50["StalkerPlayerAvatar"]
	974	[3598]	CALL     	R46 5 1 ; R46(R47,R48,R49,R50)
	975	[3603]	GETUPVAL 	R46 U37 ; R46 := U37
	976	[3603]	CALL     	R46 1 1 ; R46()
	977	[3610]	GETUPVAL 	R46 U38 ; R46 := U38
	978	[3610]	MOVE     	R47 R11 ; R47 := R11
	979	[3610]	MOVE     	R48 R1 ; R48 := R1
	980	[3610]	CALL     	R46 3 1 ; R46(R47,R48)
	981	[3614]	GETUPVAL 	R46 U34 ; R46 := U34
	982	[3614]	GETTABLE 	R46 R46 K177 ; R46 := R46[0x477ee521]
	983	[3614]	MOVE     	R47 R1 ; R47 := R1
	984	[3614]	CALL     	R46 2 1 ; R46(R47)
	985	[3618]	GETGLOBAL	R46 K0 ; R46 := 0x7b998233
	986	[3618]	GETUPVAL 	R47 U20 ; R47 := U20
	987	[3618]	CALL     	R46 2 2 ; R46 := R46(R47)
	988	[3618]	TEST     	R46 1 ; if R46 then PC := 1013
	989	[3618]	JMP      	1013 ; PC := 1013
	990	[3618]	GETUPVAL 	R46 U27 ; R46 := U27
	991	[3618]	GETTABLE 	R46 R46 K178 ; R46 := R46["isEnabled"]
	992	[3618]	GETTABLE 	R46 R46 K179 ; R46 := R46["mValue"]
	993	[3618]	TEST     	R46 1 ; if R46 then PC := 1013
	994	[3618]	JMP      	1013 ; PC := 1013
	995	[3619]	GETUPVAL 	R46 U20 ; R46 := U20
	996	[3619]	SELF     	R46 R46 K180 ; R47 := R46; R46 := R46[0xf017005a]
	997	[3619]	CALL     	R46 2 2 ; R46 := R46(R47)
	998	[3620]	GETUPVAL 	R47 U39 ; R47 := U39
	999	[3620]	GETTABLE 	R47 R47 K179 ; R47 := R47["mValue"]
	1000	[3620]	EQ       	1 R47 R46 ; if R47 == R46 then PC := 1013
	1001	[3620]	JMP      	1013 ; PC := 1013
	1002	[3621]	GETUPVAL 	R47 U20 ; R47 := U20
	1003	[3621]	SELF     	R47 R47 K181 ; R48 := R47; R47 := R47[0x85f8fedb]
	1004	[3621]	CALL     	R47 2 2 ; R47 := R47(R48)
	1005	[3621]	TEST     	R47 0 ; if not R47 then PC := 1009
	1006	[3621]	JMP      	1009 ; PC := 1009
	1007	[3622]	GETGLOBAL	R47 K6 ; R47 := _T
	1008	[3622]	SETTABLE 	R47 K182 K13 ; R47["GenericMessageNoAnimateTyping"] := true
	1009	[3624]	GETUPVAL 	R47 U39 ; R47 := U39
	1010	[3624]	SELF     	R47 R47 K183 ; R48 := R47; R47 := R47[0xc63157a6]
	1011	[3624]	MOVE     	R49 R46 ; R49 := R46
	1012	[3624]	CALL     	R47 3 1 ; R47(R48,R49)
	1013	[3629]	GETGLOBAL	R47 K113 ; R47 := 0xe72d2edb
	1014	[3629]	EQ       	0 R47 K15 ; if R47 ~= 1.000000 then PC := 1074
	1015	[3629]	JMP      	1074 ; PC := 1074
	1016	[3631]	GETGLOBAL	R47 K0 ; R47 := 0x7b998233
	1017	[3631]	GETUPVAL 	R48 U12 ; R48 := U12
	1018	[3631]	CALL     	R47 2 2 ; R47 := R47(R48)
	1019	[3631]	TEST     	R47 1 ; if R47 then PC := 1074
	1020	[3631]	JMP      	1074 ; PC := 1074
	1021	[3631]	GETGLOBAL	R47 K0 ; R47 := 0x7b998233
	1022	[3631]	GETUPVAL 	R48 U20 ; R48 := U20
	1023	[3631]	CALL     	R47 2 2 ; R47 := R47(R48)
	1024	[3631]	TEST     	R47 1 ; if R47 then PC := 1074
	1025	[3631]	JMP      	1074 ; PC := 1074
	1026	[3632]	GETUPVAL 	R47 U20 ; R47 := U20
	1027	[3632]	SELF     	R47 R47 K184 ; R48 := R47; R47 := R47[0x9239435d]
	1028	[3632]	CALL     	R47 2 2 ; R47 := R47(R48)
	1029	[3633]	GETUPVAL 	R48 U14 ; R48 := U14
	1030	[3633]	GETGLOBAL	R49 K186 ; R49 := 0x42dcc9f5
	1031	[3633]	GETUPVAL 	R50 U14 ; R50 := U14
	1032	[3633]	GETTABLE 	R50 R50 K185 ; R50 := R50["HeartRateFactor"]
	1033	[3633]	MUL      	R51 R1 K187 ; R51 := R1 * 1.400000
	1034	[3633]	MUL      	R51 R47 R51 ; R51 := R47 * R51
	1035	[3633]	ADD      	R50 R50 R51 ; R50 := R50 + R51
	1036	[3633]	DIV      	R51 R1 K17 ; R51 := R1 / 3.000000
	1037	[3633]	SUB      	R50 R50 R51 ; R50 := R50 - R51
	1038	[3633]	LOADK    	R51 := 1.000000
	1039	[3633]	LOADK    	R52 := 4.000000
	1040	[3633]	CALL     	R49 4 2 ; R49 := R49(R50,R51,R52)
	1041	[3633]	SETTABLE 	R48 K185 R49 ; R48["HeartRateFactor"] := R49
	1042	[3634]	GETGLOBAL	R48 K87 ; R48 := 0x5bced4c4
	1043	[3634]	GETTABLE 	R48 R48 K88 ; R48 := R48[0xac1b386a]
	1044	[3634]	GETUPVAL 	R49 U14 ; R49 := U14
	1045	[3634]	GETTABLE 	R49 R49 K188 ; R49 := R49["HeartRateCurrFrame"]
	1046	[3634]	GETUPVAL 	R50 U14 ; R50 := U14
	1047	[3634]	GETTABLE 	R50 R50 K185 ; R50 := R50["HeartRateFactor"]
	1048	[3634]	DIV      	R50 R50 K19 ; R50 := R50 / 5.000000
	1049	[3634]	ADD      	R49 R49 R50 ; R49 := R49 + R50
	1050	[3634]	GETUPVAL 	R50 U14 ; R50 := U14
	1051	[3634]	GETTABLE 	R50 R50 K189 ; R50 := R50["HeartRateMaxFrame"]
	1052	[3634]	CALL     	R48 3 2 ; R48 := R48(R49,R50)
	1053	[3635]	GETGLOBAL	R49 K91 ; R49 := 0x38f10e85
	1054	[3635]	GETGLOBAL	R50 K1 ; R50 := 0xae91e43b
	1055	[3635]	LOADK    	R51 K190 ; R51 := "HealthAndShield.HeartRateBacker.gotoAndStop"
	1056	[3635]	GETGLOBAL	R52 K87 ; R52 := 0x5bced4c4
	1057	[3635]	GETTABLE 	R52 R52 K191 ; R52 := R52[0x99675e23]
	1058	[3635]	MOVE     	R53 R48 ; R53 := R48
	1059	[3635]	CALL     	R52 2 0 ; R52,... := R52(R53)
	1060	[3635]	CALL     	R49 0 1 ; R49(R50,...)
	1061	[3636]	GETGLOBAL	R49 K87 ; R49 := 0x5bced4c4
	1062	[3636]	GETTABLE 	R49 R49 K191 ; R49 := R49[0x99675e23]
	1063	[3636]	MOVE     	R50 R48 ; R50 := R48
	1064	[3636]	CALL     	R49 2 2 ; R49 := R49(R50)
	1065	[3636]	GETUPVAL 	R50 U14 ; R50 := U14
	1066	[3636]	GETTABLE 	R50 R50 K189 ; R50 := R50["HeartRateMaxFrame"]
	1067	[3636]	EQ       	0 R49 R50 ; if R49 ~= R50 then PC := 1072
	1068	[3636]	JMP      	1072 ; PC := 1072
	1069	[3637]	GETUPVAL 	R49 U14 ; R49 := U14
	1070	[3637]	SETTABLE 	R49 K188 K15 ; R49["HeartRateCurrFrame"] := 1.000000
	1071	[3637]	JMP      	1074 ; PC := 1074
	1072	[3639]	GETUPVAL 	R49 U14 ; R49 := U14
	1073	[3639]	SETTABLE 	R49 K188 R48 ; R49["HeartRateCurrFrame"] := R48
	1074	[3644]	GETGLOBAL	R49 K37 ; R49 := 0x34291f5c
	1075	[3644]	GETTABLE 	R49 R49 K192 ; R49 := R49[0x781669d7]
	1076	[3644]	CALL     	R49 1 2 ; R49 := R49()
	1077	[3644]	TEST     	R49 0 ; if not R49 then PC := 1092
	1078	[3644]	JMP      	1092 ; PC := 1092
	1079	[3645]	LOADK    	R49 := 1.000000
	1080	[3645]	LOADK    	R50 := 4.000000
	1081	[3645]	LOADK    	R51 := 1.000000
	1082	[3645]	FORPREP  	R49 1091 ; R49 -= R51; PC := 1091
	1083	[3646]	GETGLOBAL	R53 K1 ; R53 := 0xae91e43b
	1084	[3646]	SELF     	R53 R53 K71 ; R54 := R53; R53 := R53[0xaade900e]
	1085	[3646]	LOADK    	R55 K154 ; R55 := "AbilityPanel.Ability"
	1086	[3646]	MOVE     	R56 R52 ; R56 := R52
	1087	[3646]	CONCAT   	R55 R55 R56 ; R55 := R55 .. R56
	1088	[3646]	LOADK    	R56 := 11.000000
	1089	[3646]	OP_LOADBOOL	R57 0 0 ; R57 := false
	1090	[3646]	CALL     	R53 5 1 ; R53(R54,R55,R56,R57)
	1091	[3645]	FORLOOP  	R49 1083 ; R49 += R51; if R49 <= R50 then begin PC := 1083; R52 := R49 end
	1092	[3650]	RETURN   	R0 1 ; return 

function #111 <?:3653,3688> (22 instructions, 88 bytes at 0000021137AEAE00)
0 params, 4 slots, 6 upvalues, 0 locals, 6 constants, 2 functions
	1	[3655]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[3655]	SETTABLE 	R0 K1 K2 ; R0["SpectatorHudOpen"] := false
	3	[3657]	NEWTABLE 	R0 0 0 ; R0 := {}
	4	[3657]	SETUPVAL 	R0 U0 ; U0 := R0
	5	[3658]	GETUPVAL 	R0 U0 ; R0 := U0
	6	[3665]	CLOSURE  	R1 0 ; R1 := closure(Function #1)
	7	[3665]	GETUPVAL 	R0 U0 ; R0 := U0
	8	[3665]	GETUPVAL 	R0 U1 ; R0 := U1
	9	[3665]	GETUPVAL 	R0 U2 ; R0 := U2
	10	[3665]	GETUPVAL 	R0 U3 ; R0 := U3
	11	[3665]	SETTABLE 	R0 K3 R1 ; R0["Update"] := R1
	12	[3666]	GETUPVAL 	R0 U0 ; R0 := U0
	13	[3666]	GETUPVAL 	R1 U4 ; R1 := U4
	14	[3666]	GETTABLE 	R1 R1 K5 ; R1 := R1[0x4c3dfdb3]
	15	[3666]	OP_LOADBOOL	R2 0 0 ; R2 := false
	16	[3687]	CLOSURE  	R3 1 ; R3 := closure(Function #2)
	17	[3687]	GETUPVAL 	R0 U2 ; R0 := U2
	18	[3687]	GETUPVAL 	R0 U3 ; R0 := U3
	19	[3687]	GETUPVAL 	R0 U5 ; R0 := U5
	20	[3666]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	21	[3687]	SETTABLE 	R0 K4 R1 ; R0["isEnabled"] := R1
	22	[3688]	RETURN   	R0 1 ; return 

function #112 <?:3691,3731> (111 instructions, 444 bytes at 000002111FF93E80)
0 params, 9 slots, 7 upvalues, 0 locals, 41 constants, 2 functions
	1	[3692]	NEWTABLE 	R0 0 0 ; R0 := {}
	2	[3692]	SETUPVAL 	R0 U0 ; U0 := R0
	3	[3693]	GETUPVAL 	R0 U0 ; R0 := U0
	4	[3693]	CLOSURE  	R1 0 ; R1 := closure(Function #1)
	5	[3693]	SETTABLE 	R0 K0 R1 ; R0["Update"] := R1
	6	[3696]	GETGLOBAL	R0 K1 ; R0 := 0xae91e43b
	7	[3696]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x67bc869f]
	8	[3696]	LOADK    	R2 K3 ; R2 := "MinimapContainer.DefenseTarget"
	9	[3696]	LOADK    	R3 := 10.000000
	10	[3696]	LOADK    	R4 := 0.000000
	11	[3696]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	12	[3698]	GETUPVAL 	R0 U1 ; R0 := U1
	13	[3698]	EQ       	0 R0 K4 ; if R0 ~= nil then PC := 42
	14	[3698]	JMP      	42 ; PC := 42
	15	[3700]	GETGLOBAL	R0 K5 ; R0 := 0x2d0fad09
	16	[3700]	LOADK    	R1 K6 ; R1 := "Lotus.Interface.Components.PlayerPanelRedux"
	17	[3700]	CALL     	R0 2 2 ; R0 := R0(R1)
	18	[3701]	GETTABLE 	R1 R0 K7 ; R1 := R0[0xae6791ba]
	19	[3701]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	20	[3701]	LOADK    	R3 K8 ; R3 := "HealthAndShield.Squad"
	21	[3701]	GETGLOBAL	R4 K9 ; R4 := 0xca561df9
	22	[3701]	GETUPVAL 	R5 U2 ; R5 := U2
	23	[3701]	GETTABLE 	R5 R5 K10 ; R5 := R5[0x06d055f9]
	24	[3701]	GETUPVAL 	R6 U3 ; R6 := U3
	25	[3701]	GETTABLE 	R6 R6 K11 ; R6 := R6["MissionType"]
	26	[3701]	EQ       	1 R6 K13 ; if R6 == 18.000000 then PC := 29
	27	[3701]	JMP      	29 ; PC := 29
	28	[3701]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 29
	29	[3701]	OP_LOADBOOL	R6 1 0 ; R6 := true
	30	[3701]	GETGLOBAL	R7 K14 ; R7 := 0x5694100c
	31	[3701]	LOADNIL  	R8 R8 ; R8 := nil
	32	[3701]	CALL     	R5 4 0 ; R5,... := R5(R6,R7,R8)
	33	[3701]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	34	[3701]	SETUPVAL 	R1 U1 ; U1 := R1
	35	[3702]	GETUPVAL 	R1 U1 ; R1 := U1
	36	[3702]	SETTABLE 	R1 K15 K16 ; R1["mHideVoipWhenInactive"] := true
	37	[3703]	GETUPVAL 	R1 U1 ; R1 := U1
	38	[3703]	SETTABLE 	R1 K17 K18 ; R1["mShowYourself"] := false
	39	[3704]	GETUPVAL 	R1 U1 ; R1 := U1
	40	[3704]	GETGLOBAL	R2 K20 ; R2 := 0xd8f49b1c
	41	[3704]	SETTABLE 	R1 K19 R2 ; R1["mVoipTextures"] := R2
	42	[3707]	GETUPVAL 	R1 U1 ; R1 := U1
	43	[3707]	GETGLOBAL	R2 K22 ; R2 := 0x8b491a77
	44	[3707]	SETTABLE 	R1 K21 R2 ; R1["mStatusIconList"] := R2
	45	[3708]	GETGLOBAL	R1 K23 ; R1 := 0xbe190284
	46	[3708]	SELF     	R1 R1 K24 ; R2 := R1; R1 := R1[0xef893aec]
	47	[3708]	CALL     	R1 2 2 ; R1 := R1(R2)
	48	[3709]	GETUPVAL 	R2 U1 ; R2 := U1
	49	[3709]	SELF     	R2 R2 K25 ; R3 := R2; R2 := R2[0x1589e6dc]
	50	[3709]	GETTABLE 	R4 R1 K26 ; R4 := R1["missionType"]
	51	[3709]	EQ       	1 R4 K27 ; if R4 == 31.000000 then PC := 54
	52	[3709]	JMP      	54 ; PC := 54
	53	[3709]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 54
	54	[3709]	OP_LOADBOOL	R4 1 0 ; R4 := true
	55	[3709]	CALL     	R2 3 1 ; R2(R3,R4)
	56	[3710]	GETTABLE 	R2 R1 K28 ; R2 := R1["periodicMissionTag"]
	57	[3710]	GETUPVAL 	R3 U5 ; R3 := U5
	58	[3710]	GETTABLE 	R3 R3 K29 ; R3 := R3["ELITE_ALERT_PERIODIC_MISSION_TAG"]
	59	[3710]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 67
	60	[3710]	JMP      	67 ; PC := 67
	61	[3710]	GETTABLE 	R2 R1 K28 ; R2 := R1["periodicMissionTag"]
	62	[3710]	GETUPVAL 	R3 U5 ; R3 := U5
	63	[3710]	GETTABLE 	R3 R3 K30 ; R3 := R3["ELITE_ALERT_PERIODIC_MISSION_TAG_ALT"]
	64	[3710]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 67
	65	[3710]	JMP      	67 ; PC := 67
	66	[3710]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 67
	67	[3710]	OP_LOADBOOL	R2 1 0 ; R2 := true
	68	[3710]	SETUPVAL 	R2 U4 ; U4 := R2
	69	[3713]	GETGLOBAL	R2 K31 ; R2 := 0x89326c93
	70	[3713]	SELF     	R2 R2 K32 ; R3 := R2; R2 := R2[0xded7d5cd]
	71	[3713]	CALL     	R2 2 2 ; R2 := R2(R3)
	72	[3714]	GETGLOBAL	R3 K33 ; R3 := 0x7b998233
	73	[3714]	MOVE     	R4 R2 ; R4 := R2
	74	[3714]	CALL     	R3 2 2 ; R3 := R3(R4)
	75	[3714]	TEST     	R3 1 ; if R3 then PC := 89
	76	[3714]	JMP      	89 ; PC := 89
	77	[3714]	GETGLOBAL	R3 K33 ; R3 := 0x7b998233
	78	[3714]	GETTABLE 	R4 R2 K34 ; R4 := R2[1.000000]
	79	[3714]	CALL     	R3 2 2 ; R3 := R3(R4)
	80	[3714]	TEST     	R3 1 ; if R3 then PC := 89
	81	[3714]	JMP      	89 ; PC := 89
	82	[3714]	GETGLOBAL	R3 K33 ; R3 := 0x7b998233
	83	[3714]	GETTABLE 	R4 R2 K34 ; R4 := R2[1.000000]
	84	[3714]	SELF     	R4 R4 K35 ; R5 := R4; R4 := R4[0xbb610e5b]
	85	[3714]	CALL     	R4 2 0 ; R4,... := R4(R5)
	86	[3714]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	87	[3714]	TEST     	R3 0 ; if not R3 then PC := 94
	88	[3714]	JMP      	94 ; PC := 94
	89	[3717]	GETUPVAL 	R3 U0 ; R3 := U0
	90	[3720]	CLOSURE  	R4 1 ; R4 := closure(Function #2)
	91	[3720]	GETUPVAL 	R0 U6 ; R0 := U6
	92	[3720]	SETTABLE 	R3 K0 R4 ; R3["Update"] := R4
	93	[3721]	RETURN   	R0 1 ; return 
	94	[3724]	GETGLOBAL	R3 K36 ; R3 := 0x76ea806b
	95	[3724]	SELF     	R3 R3 K37 ; R4 := R3; R3 := R3[0x3f3ae64c]
	96	[3724]	LOADK    	R5 := 0.000000
	97	[3724]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	98	[3725]	TEST     	R3 0 ; if not R3 then PC := 111
	99	[3725]	JMP      	111 ; PC := 111
	100	[3726]	SELF     	R4 R3 K38 ; R5 := R3; R4 := R3[0x40e9c32b]
	101	[3726]	CALL     	R4 2 2 ; R4 := R4(R5)
	102	[3727]	TEST     	R4 0 ; if not R4 then PC := 111
	103	[3727]	JMP      	111 ; PC := 111
	104	[3727]	SELF     	R5 R4 K39 ; R6 := R4; R5 := R4[0x2cba1ca6]
	105	[3727]	CALL     	R5 2 2 ; R5 := R5(R6)
	106	[3727]	TEST     	R5 0 ; if not R5 then PC := 111
	107	[3727]	JMP      	111 ; PC := 111
	108	[3728]	GETUPVAL 	R5 U1 ; R5 := U1
	109	[3728]	SELF     	R5 R5 K40 ; R6 := R5; R5 := R5[0x587aa683]
	110	[3728]	CALL     	R5 2 1 ; R5(R6)
	111	[3731]	RETURN   	R0 1 ; return 

function #113 <?:3733,3738> (33 instructions, 132 bytes at 000002117FAA5000)
0 params, 9 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[3734]	GETGLOBAL	R0 K0 ; R0 := 0x25312c9b
	2	[3734]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	3	[3734]	LOADK    	R2 K2 ; R2 := "MinimapContainer.DefenseTarget"
	4	[3734]	LOADK    	R3 := 8.000000
	5	[3734]	NEWTABLE 	R4 1 0 ; R4 := {}
	6	[3734]	LOADK    	R5 := 10.000000
	7	[3734]	SETLIST  	R4 1 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
	8	[3734]	NEWTABLE 	R5 1 0 ; R5 := {}
	9	[3734]	LOADK    	R6 := 100.000000
	10	[3734]	SETLIST  	R5 1 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
	11	[3734]	LOADK    	R6 := 0.500000
	12	[3734]	LOADK    	R7 := 0.000000
	13	[3734]	LOADNIL  	R8 R8 ; R8 := nil
	14	[3734]	CALL     	R0 9 1 ; R0(R1,R2,R3,R4,R5,R6,R7,R8)
	15	[3735]	GETGLOBAL	R0 K1 ; R0 := 0xae91e43b
	16	[3735]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0x67bc869f]
	17	[3735]	LOADK    	R2 K5 ; R2 := "MinimapContainer.DefenseTarget.Health"
	18	[3735]	LOADK    	R3 := 10.000000
	19	[3735]	LOADK    	R4 := 50.000000
	20	[3735]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	21	[3736]	GETGLOBAL	R0 K1 ; R0 := 0xae91e43b
	22	[3736]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0x67bc869f]
	23	[3736]	LOADK    	R2 K6 ; R2 := "MinimapContainer.DefenseTarget.Health.Mover"
	24	[3736]	LOADK    	R3 := 9.000000
	25	[3736]	LOADK    	R4 := 16711680.000000
	26	[3736]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	27	[3737]	GETGLOBAL	R0 K1 ; R0 := 0xae91e43b
	28	[3737]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0x67bc869f]
	29	[3737]	LOADK    	R2 K7 ; R2 := "MinimapContainer.DefenseTarget.Health.Background"
	30	[3737]	LOADK    	R3 := 9.000000
	31	[3737]	LOADK    	R4 := 0.000000
	32	[3737]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	33	[3738]	RETURN   	R0 1 ; return 

function #114 <?:3740,3742> (15 instructions, 60 bytes at 0000021137ABCAD0)
0 params, 9 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[3741]	GETGLOBAL	R0 K0 ; R0 := 0x25312c9b
	2	[3741]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	3	[3741]	LOADK    	R2 K2 ; R2 := "MinimapContainer.DefenseTarget"
	4	[3741]	LOADK    	R3 := 8.000000
	5	[3741]	NEWTABLE 	R4 1 0 ; R4 := {}
	6	[3741]	LOADK    	R5 := 10.000000
	7	[3741]	SETLIST  	R4 1 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
	8	[3741]	NEWTABLE 	R5 1 0 ; R5 := {}
	9	[3741]	LOADK    	R6 := 0.000000
	10	[3741]	SETLIST  	R5 1 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
	11	[3741]	LOADK    	R6 := 0.500000
	12	[3741]	LOADK    	R7 := 0.000000
	13	[3741]	LOADNIL  	R8 R8 ; R8 := nil
	14	[3741]	CALL     	R0 9 1 ; R0(R1,R2,R3,R4,R5,R6,R7,R8)
	15	[3742]	RETURN   	R0 1 ; return 

function #115 <?:3744,3746> (7 instructions, 28 bytes at 000002112356B510)
1 param, 6 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[3745]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	2	[3745]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x5f56eeab]
	3	[3745]	LOADK    	R3 K2 ; R3 := "MinimapContainer.DefenseTarget.Name"
	4	[3745]	LOADK    	R4 := 29.000000
	5	[3745]	MOVE     	R5 R0 ; R5 := R0
	6	[3745]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	7	[3746]	RETURN   	R0 1 ; return 

function #116 <?:3749,3763> (52 instructions, 208 bytes at 000002112356B5A0)
1 param, 8 slots, 2 upvalues, 0 locals, 19 constants, 4 functions
	1	[3750]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[3750]	MOVE     	R2 R0 ; R2 := R0
	3	[3750]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[3750]	MOVE     	R0 R1 ; R0 := R1
	5	[3751]	GETGLOBAL	R1 K1 ; R1 := 0x42dcc9f5
	6	[3751]	GETGLOBAL	R2 K2 ; R2 := 0x5bced4c4
	7	[3751]	GETTABLE 	R2 R2 K3 ; R2 := R2[0x55f27c30]
	8	[3751]	MUL      	R3 R0 K4 ; R3 := R0 * 100.000000
	9	[3751]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[3751]	LOADK    	R3 := 0.000000
	11	[3751]	LOADK    	R4 := 100.000000
	12	[3751]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	13	[3752]	GETGLOBAL	R2 K5 ; R2 := 0xae91e43b
	14	[3752]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0x5f56eeab]
	15	[3752]	LOADK    	R4 K7 ; R4 := "MinimapContainer.DefenseTarget.Value"
	16	[3752]	LOADK    	R5 := 29.000000
	17	[3752]	MOVE     	R6 R1 ; R6 := R1
	18	[3752]	LOADK    	R7 K8 ; R7 := "%"
	19	[3752]	CONCAT   	R6 R6 R7 ; R6 := R6 .. R7
	20	[3752]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	21	[3753]	GETUPVAL 	R2 U0 ; R2 := U0
	22	[3753]	EQ       	0 R2 K9 ; if R2 ~= nil then PC := 47
	23	[3753]	JMP      	47 ; PC := 47
	24	[3754]	GETUPVAL 	R2 U1 ; R2 := U1
	25	[3754]	GETTABLE 	R2 R2 K10 ; R2 := R2[0xae6791ba]
	26	[3754]	GETGLOBAL	R3 K5 ; R3 := 0xae91e43b
	27	[3754]	LOADNIL  	R4 R4 ; R4 := nil
	28	[3754]	LOADK    	R5 := 100.000000
	29	[3754]	LOADK    	R6 K11 ; R6 := "MinimapContainer.DefenseTarget.Target"
	30	[3754]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	31	[3754]	SETUPVAL 	R2 U0 ; U0 := R2
	32	[3755]	GETUPVAL 	R2 U0 ; R2 := U0
	33	[3755]	CLOSURE  	R3 0 ; R3 := closure(Function #1)
	34	[3755]	SETTABLE 	R2 K12 R3 ; R2["mOverrideGetHealth"] := R3
	35	[3756]	GETUPVAL 	R2 U0 ; R2 := U0
	36	[3756]	CLOSURE  	R3 1 ; R3 := closure(Function #2)
	37	[3756]	SETTABLE 	R2 K13 R3 ; R2["mOverrideGetMaxHealth"] := R3
	38	[3757]	GETUPVAL 	R2 U0 ; R2 := U0
	39	[3757]	CLOSURE  	R3 2 ; R3 := closure(Function #3)
	40	[3757]	SETTABLE 	R2 K14 R3 ; R2["mOverrideGetShield"] := R3
	41	[3758]	GETUPVAL 	R2 U0 ; R2 := U0
	42	[3758]	CLOSURE  	R3 3 ; R3 := closure(Function #4)
	43	[3758]	SETTABLE 	R2 K15 R3 ; R2["mOverrideGetMaxShield"] := R3
	44	[3759]	GETUPVAL 	R2 U0 ; R2 := U0
	45	[3759]	SELF     	R2 R2 K16 ; R3 := R2; R2 := R2[0x687ae094]
	46	[3759]	CALL     	R2 2 1 ; R2(R3)
	47	[3761]	GETUPVAL 	R2 U0 ; R2 := U0
	48	[3761]	SETTABLE 	R2 K17 R1 ; R2["mProgress"] := R1
	49	[3762]	GETUPVAL 	R2 U0 ; R2 := U0
	50	[3762]	SELF     	R2 R2 K18 ; R3 := R2; R2 := R2[0xfaa69527]
	51	[3762]	CALL     	R2 2 1 ; R2(R3)
	52	[3763]	RETURN   	R0 1 ; return 

function #117 <?:3765,3771> (30 instructions, 120 bytes at 00000211354F51A0)
0 params, 9 slots, 2 upvalues, 0 locals, 7 constants, 0 functions
	1	[3766]	GETGLOBAL	R0 K0 ; R0 := 0x25312c9b
	2	[3766]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	3	[3766]	LOADK    	R2 K2 ; R2 := "ImpactMessage"
	4	[3766]	LOADK    	R3 := 0.000000
	5	[3766]	NEWTABLE 	R4 3 0 ; R4 := {}
	6	[3766]	LOADK    	R5 := 10.000000
	7	[3766]	LOADK    	R6 := 5.000000
	8	[3766]	LOADK    	R7 := 6.000000
	9	[3766]	SETLIST  	R4 3 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 3
	10	[3766]	NEWTABLE 	R5 3 0 ; R5 := {}
	11	[3766]	LOADK    	R6 := 0.000000
	12	[3766]	GETUPVAL 	R7 U0 ; R7 := U0
	13	[3766]	GETTABLE 	R7 R7 K4 ; R7 := R7["mImpactMessageTransitionScale"]
	14	[3766]	GETUPVAL 	R8 U0 ; R8 := U0
	15	[3766]	GETTABLE 	R8 R8 K4 ; R8 := R8["mImpactMessageTransitionScale"]
	16	[3766]	SETLIST  	R5 3 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 3
	17	[3766]	LOADK    	R6 := 0.250000
	18	[3766]	CALL     	R0 7 1 ; R0(R1,R2,R3,R4,R5,R6)
	19	[3767]	GETGLOBAL	R0 K5 ; R0 := 0x7b998233
	20	[3767]	GETUPVAL 	R1 U1 ; R1 := U1
	21	[3767]	CALL     	R0 2 2 ; R0 := R0(R1)
	22	[3767]	TEST     	R0 1 ; if R0 then PC := 30
	23	[3767]	JMP      	30 ; PC := 30
	24	[3768]	GETGLOBAL	R0 K1 ; R0 := 0xae91e43b
	25	[3768]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0x9275da44]
	26	[3768]	GETUPVAL 	R2 U1 ; R2 := U1
	27	[3768]	CALL     	R0 3 1 ; R0(R1,R2)
	28	[3769]	LOADNIL  	R0 R0 ; R0 := nil
	29	[3769]	SETUPVAL 	R0 U1 ; U1 := R0
	30	[3771]	RETURN   	R0 1 ; return 

function #118 <?:3773,4021> (840 instructions, 3360 bytes at 00000211384EDDB0)
12 params, 52 slots, 11 upvalues, 0 locals, 120 constants, 1 function
	1	[3774]	GETGLOBAL	R12 K0 ; R12 := 0x7b998233
	2	[3774]	GETGLOBAL	R13 K1 ; R13 := 0xae91e43b
	3	[3774]	CALL     	R12 2 2 ; R12 := R12(R13)
	4	[3774]	TEST     	R12 1 ; if R12 then PC := 11
	5	[3774]	JMP      	11 ; PC := 11
	6	[3774]	GETGLOBAL	R12 K0 ; R12 := 0x7b998233
	7	[3774]	GETUPVAL 	R13 U0 ; R13 := U0
	8	[3774]	CALL     	R12 2 2 ; R12 := R12(R13)
	9	[3774]	TEST     	R12 0 ; if not R12 then PC := 12
	10	[3774]	JMP      	12 ; PC := 12
	11	[3775]	RETURN   	R0 1 ; return 
	12	[3778]	NEWTABLE 	R12 0 3 ; R12 := {}
	13	[3778]	SETTABLE 	R12 K2 R0 ; R12["Message"] := R0
	14	[3778]	TESTSET  	R13 R5 1 ; if R5 then PC := 17 else R13 := R5 
	15	[3778]	JMP      	17 ; PC := 17
	16	[3778]	NEWTABLE 	R13 0 0 ; R13 := {}
	17	[3778]	SETTABLE 	R12 K3 R13 ; R12["Params"] := R13
	18	[3778]	SETTABLE 	R12 K4 R10 ; R12["InputFilter"] := R10
	19	[3778]	SETUPVAL 	R12 U1 ; U1 := R12
	20	[3779]	GETGLOBAL	R12 K5 ; R12 := 0x0b96777e
	21	[3779]	MOVE     	R13 R0 ; R13 := R0
	22	[3779]	CALL     	R12 2 2 ; R12 := R12(R13)
	23	[3779]	EQ       	0 R12 K6 ; if R12 ~= "function" then PC := 28
	24	[3779]	JMP      	28 ; PC := 28
	25	[3780]	MOVE     	R12 R0 ; R12 := R0
	26	[3780]	CALL     	R12 1 2 ; R12 := R12()
	27	[3780]	MOVE     	R0 R12 ; R0 := R12
	28	[3782]	GETUPVAL 	R12 U2 ; R12 := U2
	29	[3782]	MOVE     	R13 R0 ; R13 := R0
	30	[3782]	CALL     	R12 2 2 ; R12 := R12(R13)
	31	[3782]	MOVE     	R0 R12 ; R0 := R12
	32	[3784]	GETUPVAL 	R12 U0 ; R12 := U0
	33	[3784]	SELF     	R12 R12 K7 ; R13 := R12; R12 := R12[0xf2deaf69]
	34	[3784]	GETGLOBAL	R14 K8 ; R14 := gLotusBasePvpGameRulesType
	35	[3784]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	36	[3786]	LE       	0 K9 R1 ; if 0.000000 > R1 then PC := 44
	37	[3786]	JMP      	44 ; PC := 44
	38	[3788]	GETGLOBAL	R13 K10 ; R13 := 0x5bced4c4
	39	[3788]	GETTABLE 	R13 R13 K11 ; R13 := R13[0xb62ecfe0]
	40	[3788]	MOVE     	R14 R1 ; R14 := R1
	41	[3788]	LOADK    	R15 := 0.500000
	42	[3788]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	43	[3788]	MOVE     	R1 R13 ; R1 := R13
	44	[3790]	GETGLOBAL	R13 K0 ; R13 := 0x7b998233
	45	[3790]	MOVE     	R14 R2 ; R14 := R2
	46	[3790]	CALL     	R13 2 2 ; R13 := R13(R14)
	47	[3790]	TEST     	R13 0 ; if not R13 then PC := 50
	48	[3790]	JMP      	50 ; PC := 50
	49	[3791]	OP_LOADBOOL	R2 1 0 ; R2 := true
	50	[3793]	GETGLOBAL	R13 K0 ; R13 := 0x7b998233
	51	[3793]	MOVE     	R14 R3 ; R14 := R3
	52	[3793]	CALL     	R13 2 2 ; R13 := R13(R14)
	53	[3793]	TEST     	R13 0 ; if not R13 then PC := 56
	54	[3793]	JMP      	56 ; PC := 56
	55	[3794]	GETGLOBAL	R3 K12 ; R3 := 0xd84b5282
	56	[3796]	GETGLOBAL	R13 K0 ; R13 := 0x7b998233
	57	[3796]	MOVE     	R14 R4 ; R14 := R4
	58	[3796]	CALL     	R13 2 2 ; R13 := R13(R14)
	59	[3796]	TEST     	R13 0 ; if not R13 then PC := 62
	60	[3796]	JMP      	62 ; PC := 62
	61	[3797]	OP_LOADBOOL	R4 1 0 ; R4 := true
	62	[3799]	GETGLOBAL	R13 K0 ; R13 := 0x7b998233
	63	[3799]	MOVE     	R14 R6 ; R14 := R6
	64	[3799]	CALL     	R13 2 2 ; R13 := R13(R14)
	65	[3799]	TEST     	R13 0 ; if not R13 then PC := 77
	66	[3799]	JMP      	77 ; PC := 77
	67	[3800]	GETUPVAL 	R13 U3 ; R13 := U3
	68	[3800]	GETTABLE 	R13 R13 K13 ; R13 := R13[0x06d055f9]
	69	[3800]	GETUPVAL 	R14 U0 ; R14 := U0
	70	[3800]	SELF     	R14 R14 K7 ; R15 := R14; R14 := R14[0xf2deaf69]
	71	[3800]	GETGLOBAL	R16 K8 ; R16 := gLotusBasePvpGameRulesType
	72	[3800]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	73	[3800]	LOADK    	R15 := 2.000000
	74	[3800]	LOADK    	R16 := 1.000000
	75	[3800]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	76	[3800]	MOVE     	R6 R13 ; R6 := R13
	77	[3802]	EQ       	0 R6 K14 ; if R6 ~= 4.000000 then PC := 93
	78	[3802]	JMP      	93 ; PC := 93
	79	[3802]	GETGLOBAL	R13 K0 ; R13 := 0x7b998233
	80	[3802]	MOVE     	R14 R11 ; R14 := R11
	81	[3802]	CALL     	R13 2 2 ; R13 := R13(R14)
	82	[3802]	TEST     	R13 1 ; if R13 then PC := 89
	83	[3802]	JMP      	89 ; PC := 89
	84	[3802]	GETGLOBAL	R13 K15 ; R13 := _T
	85	[3802]	GETTABLE 	R13 R13 K16 ; R13 := R13["ImpactMessageTexturePacks"]
	86	[3802]	GETTABLE 	R13 R13 R11 ; R13 := R13[R11]
	87	[3802]	EQ       	0 R13 K17 ; if R13 ~= nil then PC := 93
	88	[3802]	JMP      	93 ; PC := 93
	89	[3803]	GETGLOBAL	R13 K18 ; R13 := 0x3d106989
	90	[3803]	LOADK    	R14 K19 ; R14 := "No texture pack for impact message"
	91	[3803]	CALL     	R13 2 1 ; R13(R14)
	92	[3804]	RETURN   	R0 1 ; return 
	93	[3807]	LE       	0 K9 R1 ; if 0.000000 > R1 then PC := 99
	94	[3807]	JMP      	99 ; PC := 99
	95	[3808]	GETUPVAL 	R13 U3 ; R13 := U3
	96	[3808]	GETTABLE 	R13 R13 K20 ; R13 := R13[0x659d451f]
	97	[3808]	MOVE     	R14 R3 ; R14 := R3
	98	[3808]	CALL     	R13 2 1 ; R13(R14)
	99	[3811]	TEST     	R4 0 ; if not R4 then PC := 118
	100	[3811]	JMP      	118 ; PC := 118
	101	[3811]	GETGLOBAL	R13 K0 ; R13 := 0x7b998233
	102	[3811]	GETGLOBAL	R14 K21 ; R14 := 0xdb09d9fb
	103	[3811]	CALL     	R13 2 2 ; R13 := R13(R14)
	104	[3811]	TEST     	R13 1 ; if R13 then PC := 118
	105	[3811]	JMP      	118 ; PC := 118
	106	[3812]	GETUPVAL 	R13 U4 ; R13 := U4
	107	[3812]	GETTABLE 	R13 R13 K22 ; R13 := R13[0xb5be5d4a]
	108	[3812]	GETGLOBAL	R14 K1 ; R14 := 0xae91e43b
	109	[3812]	LOADK    	R15 K23 ; R15 := "ImpactMessage"
	110	[3812]	CALL     	R13 3 3 ; R13,R14 := R13(R14,R15)
	111	[3813]	GETUPVAL 	R15 U4 ; R15 := U4
	112	[3813]	GETTABLE 	R15 R15 K24 ; R15 := R15[0x5a22d251]
	113	[3813]	GETGLOBAL	R16 K1 ; R16 := 0xae91e43b
	114	[3813]	GETGLOBAL	R17 K21 ; R17 := 0xdb09d9fb
	115	[3813]	MOVE     	R18 R13 ; R18 := R13
	116	[3813]	MOVE     	R19 R14 ; R19 := R14
	117	[3813]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	118	[3816]	GETUPVAL 	R15 U5 ; R15 := U5
	119	[3816]	GETTABLE 	R15 R15 K25 ; R15 := R15["mImpactMessageFrame"]
	120	[3816]	EQ       	1 R15 R6 ; if R15 == R6 then PC := 288
	121	[3816]	JMP      	288 ; PC := 288
	122	[3817]	GETUPVAL 	R15 U5 ; R15 := U5
	123	[3817]	SETTABLE 	R15 K25 R6 ; R15[0x05000044] := R6
	124	[3818]	GETGLOBAL	R15 K26 ; R15 := 0x38f10e85
	125	[3818]	GETGLOBAL	R16 K1 ; R16 := 0xae91e43b
	126	[3818]	LOADK    	R17 K27 ; R17 := "ImpactMessage.gotoAndStop"
	127	[3818]	MOVE     	R18 R6 ; R18 := R6
	128	[3818]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	129	[3819]	EQ       	0 R6 K14 ; if R6 ~= 4.000000 then PC := 206
	130	[3819]	JMP      	206 ; PC := 206
	131	[3820]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	132	[3820]	SELF     	R15 R15 K28 ; R16 := R15; R15 := R15[0x5f56eeab]
	133	[3820]	LOADK    	R17 K29 ; R17 := "ImpactMessage.Label"
	134	[3820]	LOADK    	R18 := 38.000000
	135	[3820]	LOADK    	R19 K30 ; R19 := "bottom"
	136	[3820]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	137	[3821]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	138	[3821]	SELF     	R15 R15 K31 ; R16 := R15; R15 := R15[0x67bc869f]
	139	[3821]	LOADK    	R17 K32 ; R17 := "ImpactMessage.Underlay"
	140	[3821]	LOADK    	R18 := 9.000000
	141	[3821]	LOADK    	R19 K33 ; R19 := 1315613.000000
	142	[3821]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	143	[3822]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	144	[3822]	SELF     	R15 R15 K31 ; R16 := R15; R15 := R15[0x67bc869f]
	145	[3822]	LOADK    	R17 K29 ; R17 := "ImpactMessage.Label"
	146	[3822]	LOADK    	R18 := 9.000000
	147	[3822]	GETUPVAL 	R19 U6 ; R19 := U6
	148	[3822]	GETTABLE 	R19 R19 K34 ; R19 := R19["Text"]
	149	[3822]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	150	[3823]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	151	[3823]	SELF     	R15 R15 K31 ; R16 := R15; R15 := R15[0x67bc869f]
	152	[3823]	LOADK    	R17 K35 ; R17 := "ImpactMessage.BgLines"
	153	[3823]	LOADK    	R18 := 9.000000
	154	[3823]	GETUPVAL 	R19 U6 ; R19 := U6
	155	[3823]	GETTABLE 	R19 R19 K34 ; R19 := R19["Text"]
	156	[3823]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	157	[3824]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	158	[3824]	SELF     	R15 R15 K36 ; R16 := R15; R15 := R15[0xd5181643]
	159	[3824]	LOADK    	R17 K37 ; R17 := "ImpactMessage.IconTinted"
	160	[3824]	GETGLOBAL	R18 K38 ; R18 := 0x0032441c
	161	[3824]	GETTABLE 	R18 R18 K39 ; R18 := R18["UIMaterial_Plain"]
	162	[3824]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	163	[3825]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	164	[3825]	SELF     	R15 R15 K36 ; R16 := R15; R15 := R15[0xd5181643]
	165	[3825]	LOADK    	R17 K40 ; R17 := "ImpactMessage.IconWhite"
	166	[3825]	GETGLOBAL	R18 K38 ; R18 := 0x0032441c
	167	[3825]	GETTABLE 	R18 R18 K39 ; R18 := R18["UIMaterial_Plain"]
	168	[3825]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	169	[3826]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	170	[3826]	SELF     	R15 R15 K36 ; R16 := R15; R15 := R15[0xd5181643]
	171	[3826]	LOADK    	R17 K41 ; R17 := "ImpactMessage.IconBg"
	172	[3826]	GETGLOBAL	R18 K38 ; R18 := 0x0032441c
	173	[3826]	GETTABLE 	R18 R18 K39 ; R18 := R18["UIMaterial_Plain"]
	174	[3826]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	175	[3827]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	176	[3827]	SELF     	R15 R15 K36 ; R16 := R15; R15 := R15[0xd5181643]
	177	[3827]	LOADK    	R17 K35 ; R17 := "ImpactMessage.BgLines"
	178	[3827]	GETGLOBAL	R18 K38 ; R18 := 0x0032441c
	179	[3827]	GETTABLE 	R18 R18 K39 ; R18 := R18["UIMaterial_Plain"]
	180	[3827]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	181	[3828]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	182	[3828]	SELF     	R15 R15 K36 ; R16 := R15; R15 := R15[0xd5181643]
	183	[3828]	LOADK    	R17 K32 ; R17 := "ImpactMessage.Underlay"
	184	[3828]	GETGLOBAL	R18 K38 ; R18 := 0x0032441c
	185	[3828]	GETTABLE 	R18 R18 K39 ; R18 := R18["UIMaterial_Plain"]
	186	[3828]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	187	[3829]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	188	[3829]	SELF     	R15 R15 K36 ; R16 := R15; R15 := R15[0xd5181643]
	189	[3829]	LOADK    	R17 K42 ; R17 := "ImpactMessage.MessageFlare"
	190	[3829]	GETGLOBAL	R18 K38 ; R18 := 0x0032441c
	191	[3829]	GETTABLE 	R18 R18 K39 ; R18 := R18["UIMaterial_Plain"]
	192	[3829]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	193	[3830]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	194	[3830]	SELF     	R15 R15 K36 ; R16 := R15; R15 := R15[0xd5181643]
	195	[3830]	LOADK    	R17 K43 ; R17 := "ImpactMessage.Underlay.TopShadow"
	196	[3830]	GETGLOBAL	R18 K38 ; R18 := 0x0032441c
	197	[3830]	GETTABLE 	R18 R18 K39 ; R18 := R18["UIMaterial_Plain"]
	198	[3830]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	199	[3831]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	200	[3831]	SELF     	R15 R15 K36 ; R16 := R15; R15 := R15[0xd5181643]
	201	[3831]	LOADK    	R17 K44 ; R17 := "ImpactMessage.LineDeco"
	202	[3831]	GETGLOBAL	R18 K38 ; R18 := 0x0032441c
	203	[3831]	GETTABLE 	R18 R18 K39 ; R18 := R18["UIMaterial_Plain"]
	204	[3831]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	205	[3831]	JMP      	212 ; PC := 212
	206	[3833]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	207	[3833]	SELF     	R15 R15 K28 ; R16 := R15; R15 := R15[0x5f56eeab]
	208	[3833]	LOADK    	R17 K29 ; R17 := "ImpactMessage.Label"
	209	[3833]	LOADK    	R18 := 38.000000
	210	[3833]	LOADK    	R19 K45 ; R19 := "center"
	211	[3833]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	212	[3835]	GETUPVAL 	R15 U5 ; R15 := U5
	213	[3835]	GETTABLE 	R15 R15 K25 ; R15 := R15["mImpactMessageFrame"]
	214	[3835]	EQ       	0 R15 K46 ; if R15 ~= 3.000000 then PC := 234
	215	[3835]	JMP      	234 ; PC := 234
	216	[3835]	GETUPVAL 	R15 U5 ; R15 := U5
	217	[3835]	GETTABLE 	R15 R15 K47 ; R15 := R15["mImpactMessage3LabelY"]
	218	[3835]	EQ       	0 R15 K17 ; if R15 ~= nil then PC := 234
	219	[3835]	JMP      	234 ; PC := 234
	220	[3836]	GETUPVAL 	R15 U5 ; R15 := U5
	221	[3836]	GETGLOBAL	R16 K1 ; R16 := 0xae91e43b
	222	[3836]	SELF     	R16 R16 K48 ; R17 := R16; R16 := R16[0x91a24e4b]
	223	[3836]	LOADK    	R18 K29 ; R18 := "ImpactMessage.Label"
	224	[3836]	LOADK    	R19 := 1.000000
	225	[3836]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	226	[3836]	SETTABLE 	R15 K47 R16 ; R15["mImpactMessage3LabelY"] := R16
	227	[3837]	GETUPVAL 	R15 U5 ; R15 := U5
	228	[3837]	GETGLOBAL	R16 K1 ; R16 := 0xae91e43b
	229	[3837]	SELF     	R16 R16 K48 ; R17 := R16; R16 := R16[0x91a24e4b]
	230	[3837]	LOADK    	R18 K29 ; R18 := "ImpactMessage.Label"
	231	[3837]	LOADK    	R19 := 34.000000
	232	[3837]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	233	[3837]	SETTABLE 	R15 K49 R16 ; R15["mImpactMessage3LabelHeight"] := R16
	234	[3840]	GETGLOBAL	R15 K50 ; R15 := 0xe72d2edb
	235	[3840]	EQ       	0 R15 K46 ; if R15 ~= 3.000000 then PC := 275
	236	[3840]	JMP      	275 ; PC := 275
	237	[3841]	EQ       	0 R6 K52 ; if R6 ~= 1.000000 then PC := 258
	238	[3841]	JMP      	258 ; PC := 258
	239	[3842]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	240	[3842]	SELF     	R15 R15 K31 ; R16 := R15; R15 := R15[0x67bc869f]
	241	[3842]	LOADK    	R17 K53 ; R17 := "ImpactMessage.UnderGlow"
	242	[3842]	LOADK    	R18 := 9.000000
	243	[3842]	LOADK    	R19 K54 ; R19 := 1712680.000000
	244	[3842]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	245	[3843]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	246	[3843]	SELF     	R15 R15 K31 ; R16 := R15; R15 := R15[0x67bc869f]
	247	[3843]	LOADK    	R17 K55 ; R17 := "ImpactMessage.LineDivider"
	248	[3843]	LOADK    	R18 := 9.000000
	249	[3843]	LOADK    	R19 K56 ; R19 := 15785113.000000
	250	[3843]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	251	[3844]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	252	[3844]	SELF     	R15 R15 K31 ; R16 := R15; R15 := R15[0x67bc869f]
	253	[3844]	LOADK    	R17 K29 ; R17 := "ImpactMessage.Label"
	254	[3844]	LOADK    	R18 := 36.000000
	255	[3844]	LOADK    	R19 K56 ; R19 := 15785113.000000
	256	[3844]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	257	[3844]	JMP      	288 ; PC := 288
	258	[3845]	EQ       	0 R6 K46 ; if R6 ~= 3.000000 then PC := 288
	259	[3845]	JMP      	288 ; PC := 288
	260	[3846]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	261	[3846]	SELF     	R15 R15 K31 ; R16 := R15; R15 := R15[0x67bc869f]
	262	[3846]	LOADK    	R17 K29 ; R17 := "ImpactMessage.Label"
	263	[3846]	LOADK    	R18 := 36.000000
	264	[3846]	GETUPVAL 	R19 U6 ; R19 := U6
	265	[3846]	GETTABLE 	R19 R19 K34 ; R19 := R19["Text"]
	266	[3846]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	267	[3847]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	268	[3847]	SELF     	R15 R15 K31 ; R16 := R15; R15 := R15[0x67bc869f]
	269	[3847]	LOADK    	R17 K57 ; R17 := "ImpactMessage.Underline"
	270	[3847]	LOADK    	R18 := 9.000000
	271	[3847]	GETUPVAL 	R19 U6 ; R19 := U6
	272	[3847]	GETTABLE 	R19 R19 K34 ; R19 := R19["Text"]
	273	[3847]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	274	[3848]	JMP      	288 ; PC := 288
	275	[3849]	GETGLOBAL	R15 K50 ; R15 := 0xe72d2edb
	276	[3849]	EQ       	0 R15 K14 ; if R15 ~= 4.000000 then PC := 288
	277	[3849]	JMP      	288 ; PC := 288
	278	[3850]	EQ       	1 R6 K52 ; if R6 == 1.000000 then PC := 282
	279	[3850]	JMP      	282 ; PC := 282
	280	[3850]	EQ       	0 R6 K46 ; if R6 ~= 3.000000 then PC := 288
	281	[3850]	JMP      	288 ; PC := 288
	282	[3851]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	283	[3851]	SELF     	R15 R15 K31 ; R16 := R15; R15 := R15[0x67bc869f]
	284	[3851]	LOADK    	R17 K57 ; R17 := "ImpactMessage.Underline"
	285	[3851]	LOADK    	R18 := 9.000000
	286	[3851]	LOADK    	R19 K58 ; R19 := 11625827.000000
	287	[3851]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	288	[3856]	LE       	0 K9 R1 ; if 0.000000 > R1 then PC := 296
	289	[3856]	JMP      	296 ; PC := 296
	290	[3857]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	291	[3857]	SELF     	R15 R15 K31 ; R16 := R15; R15 := R15[0x67bc869f]
	292	[3857]	LOADK    	R17 K23 ; R17 := "ImpactMessage"
	293	[3857]	LOADK    	R18 := 10.000000
	294	[3857]	LOADK    	R19 := 0.000000
	295	[3857]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	296	[3860]	TEST     	R7 0 ; if not R7 then PC := 301
	297	[3860]	JMP      	301 ; PC := 301
	298	[3861]	GETUPVAL 	R15 U5 ; R15 := U5
	299	[3861]	SETTABLE 	R15 K59 R7 ; R15["mImpactMessageScale"] := R7
	300	[3861]	JMP      	302 ; PC := 302
	301	[3863]	LOADK    	R7 := 100.000000
	302	[3866]	TEST     	R8 0 ; if not R8 then PC := 307
	303	[3866]	JMP      	307 ; PC := 307
	304	[3867]	GETUPVAL 	R15 U5 ; R15 := U5
	305	[3867]	SETTABLE 	R15 K60 R8 ; R15["mImpactMessageTransitionScale"] := R8
	306	[3867]	JMP      	308 ; PC := 308
	307	[3869]	LOADK    	R8 := 100.000000
	308	[3872]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	309	[3872]	SELF     	R15 R15 K61 ; R16 := R15; R15 := R15[0xc7fa728c]
	310	[3872]	CALL     	R15 2 2 ; R15 := R15(R16)
	311	[3873]	GETGLOBAL	R16 K0 ; R16 := 0x7b998233
	312	[3873]	MOVE     	R17 R9 ; R17 := R9
	313	[3873]	CALL     	R16 2 2 ; R16 := R16(R17)
	314	[3873]	TEST     	R16 1 ; if R16 then PC := 323
	315	[3873]	JMP      	323 ; PC := 323
	316	[3873]	EQ       	1 R15 R9 ; if R15 == R9 then PC := 323
	317	[3873]	JMP      	323 ; PC := 323
	318	[3874]	SETUPVAL 	R15 U7 ; U7 := R15
	319	[3875]	GETGLOBAL	R16 K1 ; R16 := 0xae91e43b
	320	[3875]	SELF     	R16 R16 K62 ; R17 := R16; R16 := R16[0x9275da44]
	321	[3875]	MOVE     	R18 R9 ; R18 := R9
	322	[3875]	CALL     	R16 3 1 ; R16(R17,R18)
	323	[3878]	GETGLOBAL	R16 K1 ; R16 := 0xae91e43b
	324	[3878]	SELF     	R16 R16 K31 ; R17 := R16; R16 := R16[0x67bc869f]
	325	[3878]	LOADK    	R18 K23 ; R18 := "ImpactMessage"
	326	[3878]	LOADK    	R19 := 5.000000
	327	[3878]	MOVE     	R20 R8 ; R20 := R8
	328	[3878]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	329	[3879]	GETGLOBAL	R16 K1 ; R16 := 0xae91e43b
	330	[3879]	SELF     	R16 R16 K31 ; R17 := R16; R16 := R16[0x67bc869f]
	331	[3879]	LOADK    	R18 K23 ; R18 := "ImpactMessage"
	332	[3879]	LOADK    	R19 := 6.000000
	333	[3879]	MOVE     	R20 R8 ; R20 := R8
	334	[3879]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	335	[3881]	GETUPVAL 	R16 U5 ; R16 := U5
	336	[3881]	GETTABLE 	R16 R16 K25 ; R16 := R16["mImpactMessageFrame"]
	337	[3881]	EQ       	0 R16 K14 ; if R16 ~= 4.000000 then PC := 345
	338	[3881]	JMP      	345 ; PC := 345
	339	[3882]	GETGLOBAL	R16 K1 ; R16 := 0xae91e43b
	340	[3882]	SELF     	R16 R16 K31 ; R17 := R16; R16 := R16[0x67bc869f]
	341	[3882]	LOADK    	R18 K29 ; R18 := "ImpactMessage.Label"
	342	[3882]	LOADK    	R19 := 42.000000
	343	[3882]	LOADK    	R20 := 25.000000
	344	[3882]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	345	[3885]	LOADK    	R16 K63 ; R16 := ""
	346	[3886]	GETGLOBAL	R17 K0 ; R17 := 0x7b998233
	347	[3886]	MOVE     	R18 R10 ; R18 := R10
	348	[3886]	CALL     	R17 2 2 ; R17 := R17(R18)
	349	[3886]	TEST     	R17 1 ; if R17 then PC := 373
	350	[3886]	JMP      	373 ; PC := 373
	351	[3887]	GETGLOBAL	R17 K1 ; R17 := 0xae91e43b
	352	[3887]	SELF     	R17 R17 K64 ; R18 := R17; R17 := R17[0x54f5d6ad]
	353	[3887]	MOVE     	R19 R0 ; R19 := R0
	354	[3887]	MOVE     	R20 R10 ; R20 := R10
	355	[3887]	MOVE     	R21 R5 ; R21 := R5
	356	[3887]	CALL     	R17 5 2 ; R17 := R17(R18,R19,R20,R21)
	357	[3887]	MOVE     	R16 R17 ; R16 := R17
	358	[3888]	GETGLOBAL	R17 K65 ; R17 := 0x7f5022cf
	359	[3888]	GETTABLE 	R17 R17 K66 ; R17 := R17[0xa5c556b9]
	360	[3888]	MOVE     	R18 R16 ; R18 := R16
	361	[3888]	LOADK    	R19 K67 ; R19 := "<[%u%d_]+>"
	362	[3888]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	363	[3888]	TEST     	R17 0 ; if not R17 then PC := 380
	364	[3888]	JMP      	380 ; PC := 380
	365	[3889]	GETGLOBAL	R17 K1 ; R17 := 0xae91e43b
	366	[3889]	SELF     	R17 R17 K68 ; R18 := R17; R17 := R17[0x42b04007]
	367	[3889]	MOVE     	R19 R0 ; R19 := R0
	368	[3889]	OP_LOADBOOL	R20 1 0 ; R20 := true
	369	[3889]	MOVE     	R21 R5 ; R21 := R5
	370	[3889]	CALL     	R17 5 2 ; R17 := R17(R18,R19,R20,R21)
	371	[3889]	MOVE     	R16 R17 ; R16 := R17
	372	[3890]	JMP      	380 ; PC := 380
	373	[3892]	GETGLOBAL	R17 K1 ; R17 := 0xae91e43b
	374	[3892]	SELF     	R17 R17 K68 ; R18 := R17; R17 := R17[0x42b04007]
	375	[3892]	MOVE     	R19 R0 ; R19 := R0
	376	[3892]	OP_LOADBOOL	R20 1 0 ; R20 := true
	377	[3892]	MOVE     	R21 R5 ; R21 := R5
	378	[3892]	CALL     	R17 5 2 ; R17 := R17(R18,R19,R20,R21)
	379	[3892]	MOVE     	R16 R17 ; R16 := R17
	380	[3895]	GETGLOBAL	R17 K1 ; R17 := 0xae91e43b
	381	[3895]	SELF     	R17 R17 K28 ; R18 := R17; R17 := R17[0x5f56eeab]
	382	[3895]	LOADK    	R19 K29 ; R19 := "ImpactMessage.Label"
	383	[3895]	LOADK    	R20 := 29.000000
	384	[3895]	MOVE     	R21 R16 ; R21 := R16
	385	[3895]	CALL     	R17 5 1 ; R17(R18,R19,R20,R21)
	386	[3897]	GETUPVAL 	R17 U5 ; R17 := U5
	387	[3897]	GETTABLE 	R17 R17 K25 ; R17 := R17["mImpactMessageFrame"]
	388	[3897]	EQ       	0 R17 K46 ; if R17 ~= 3.000000 then PC := 422
	389	[3897]	JMP      	422 ; PC := 422
	390	[3898]	GETGLOBAL	R17 K1 ; R17 := 0xae91e43b
	391	[3898]	SELF     	R17 R17 K48 ; R18 := R17; R17 := R17[0x91a24e4b]
	392	[3898]	LOADK    	R19 K29 ; R19 := "ImpactMessage.Label"
	393	[3898]	LOADK    	R20 := 35.000000
	394	[3898]	CALL     	R17 4 2 ; R17 := R17(R18,R19,R20)
	395	[3899]	GETGLOBAL	R18 K1 ; R18 := 0xae91e43b
	396	[3899]	SELF     	R18 R18 K48 ; R19 := R18; R18 := R18[0x91a24e4b]
	397	[3899]	LOADK    	R20 K29 ; R20 := "ImpactMessage.Label"
	398	[3899]	LOADK    	R21 := 34.000000
	399	[3899]	CALL     	R18 4 2 ; R18 := R18(R19,R20,R21)
	400	[3900]	GETUPVAL 	R19 U5 ; R19 := U5
	401	[3900]	GETTABLE 	R19 R19 K47 ; R19 := R19["mImpactMessage3LabelY"]
	402	[3901]	LT       	0 K46 R17 ; if 3.000000 >= R17 then PC := 410
	403	[3901]	JMP      	410 ; PC := 410
	404	[3902]	ADD      	R20 R19 K69 ; R20 := R19 + 20.000000
	405	[3902]	GETUPVAL 	R21 U5 ; R21 := U5
	406	[3902]	GETTABLE 	R21 R21 K49 ; R21 := R21["mImpactMessage3LabelHeight"]
	407	[3902]	SUB      	R21 R18 R21 ; R21 := R18 - R21
	408	[3902]	SUB      	R19 R20 R21 ; R19 := R20 - R21
	409	[3902]	JMP      	415 ; PC := 415
	410	[3904]	GETUPVAL 	R20 U5 ; R20 := U5
	411	[3904]	GETTABLE 	R20 R20 K49 ; R20 := R20["mImpactMessage3LabelHeight"]
	412	[3904]	SUB      	R20 R18 R20 ; R20 := R18 - R20
	413	[3904]	MUL      	R20 R20 K70 ; R20 := R20 * 0.500000
	414	[3904]	SUB      	R19 R19 R20 ; R19 := R19 - R20
	415	[3906]	GETGLOBAL	R20 K1 ; R20 := 0xae91e43b
	416	[3906]	SELF     	R20 R20 K31 ; R21 := R20; R20 := R20[0x67bc869f]
	417	[3906]	LOADK    	R22 K29 ; R22 := "ImpactMessage.Label"
	418	[3906]	LOADK    	R23 := 1.000000
	419	[3906]	MOVE     	R24 R19 ; R24 := R19
	420	[3906]	CALL     	R20 5 1 ; R20(R21,R22,R23,R24)
	421	[3906]	JMP      	749 ; PC := 749
	422	[3907]	GETUPVAL 	R20 U5 ; R20 := U5
	423	[3907]	GETTABLE 	R20 R20 K25 ; R20 := R20["mImpactMessageFrame"]
	424	[3907]	EQ       	0 R20 K14 ; if R20 ~= 4.000000 then PC := 749
	425	[3907]	JMP      	749 ; PC := 749
	426	[3908]	GETGLOBAL	R20 K15 ; R20 := _T
	427	[3908]	GETTABLE 	R20 R20 K16 ; R20 := R20["ImpactMessageTexturePacks"]
	428	[3908]	GETTABLE 	R20 R20 R11 ; R20 := R20[R11]
	429	[3909]	NEWTABLE 	R21 6 0 ; R21 := {}
	430	[3909]	LOADK    	R22 K71 ; R22 := "LineDeco"
	431	[3909]	LOADK    	R23 K72 ; R23 := "IconWhite"
	432	[3909]	LOADK    	R24 K73 ; R24 := "IconTinted"
	433	[3909]	LOADK    	R25 K74 ; R25 := "IconBg"
	434	[3909]	LOADK    	R26 K75 ; R26 := "IconBgLeft"
	435	[3909]	LOADK    	R27 K76 ; R27 := "IconBgRight"
	436	[3909]	SETLIST  	R21 6 1 ; R21[(1-1)*FPF+i] := R(21+i), 1 <= i <= 6
	437	[3910]	NEWTABLE 	R22 6 0 ; R22 := {}
	438	[3910]	LOADK    	R23 K71 ; R23 := "LineDeco"
	439	[3910]	LOADK    	R24 K77 ; R24 := "Icon.IconWhite"
	440	[3910]	LOADK    	R25 K78 ; R25 := "Icon.IconTinted"
	441	[3910]	LOADK    	R26 K79 ; R26 := "Icon.IconBg"
	442	[3910]	LOADK    	R27 K80 ; R27 := "Icon.IconBgLeft"
	443	[3910]	LOADK    	R28 K81 ; R28 := "Icon.IconBgRight"
	444	[3910]	SETLIST  	R22 6 1 ; R22[(1-1)*FPF+i] := R(22+i), 1 <= i <= 6
	445	[3911]	NEWTABLE 	R23 6 0 ; R23 := {}
	446	[3911]	LOADK    	R24 := 128.000000
	447	[3911]	LOADK    	R25 := 256.000000
	448	[3911]	LOADK    	R26 := 256.000000
	449	[3911]	LOADK    	R27 := 256.000000
	450	[3911]	LOADK    	R28 := 256.000000
	451	[3911]	LOADK    	R29 := 256.000000
	452	[3911]	SETLIST  	R23 6 1 ; R23[(1-1)*FPF+i] := R(23+i), 1 <= i <= 6
	453	[3912]	NEWTABLE 	R24 6 0 ; R24 := {}
	454	[3912]	LOADK    	R25 := 32.000000
	455	[3912]	LOADK    	R26 := 256.000000
	456	[3912]	LOADK    	R27 := 256.000000
	457	[3912]	LOADK    	R28 := 256.000000
	458	[3912]	LOADK    	R29 := 256.000000
	459	[3912]	LOADK    	R30 := 256.000000
	460	[3912]	SETLIST  	R24 6 1 ; R24[(1-1)*FPF+i] := R(24+i), 1 <= i <= 6
	461	[3913]	NEWTABLE 	R25 6 0 ; R25 := {}
	462	[3913]	LOADK    	R26 := 0.000000
	463	[3913]	LOADK    	R27 := 0.000000
	464	[3913]	LOADK    	R28 := 0.000000
	465	[3913]	LOADK    	R29 := 0.000000
	466	[3913]	LOADK    	R30 := -128.000000
	467	[3913]	LOADK    	R31 := 128.000000
	468	[3913]	SETLIST  	R25 6 1 ; R25[(1-1)*FPF+i] := R(25+i), 1 <= i <= 6
	469	[3914]	NEWTABLE 	R26 6 0 ; R26 := {}
	470	[3914]	LOADK    	R27 := 97.000000
	471	[3914]	LOADK    	R28 := 0.000000
	472	[3914]	LOADK    	R29 := 0.000000
	473	[3914]	LOADK    	R30 := 0.000000
	474	[3914]	LOADK    	R31 := 0.000000
	475	[3914]	LOADK    	R32 := 0.000000
	476	[3914]	SETLIST  	R26 6 1 ; R26[(1-1)*FPF+i] := R(26+i), 1 <= i <= 6
	477	[3915]	GETGLOBAL	R27 K1 ; R27 := 0xae91e43b
	478	[3915]	SELF     	R27 R27 K36 ; R28 := R27; R27 := R27[0xd5181643]
	479	[3915]	LOADK    	R29 K82 ; R29 := "ImpactMessage.Icon.IconBgLeft"
	480	[3915]	GETGLOBAL	R30 K38 ; R30 := 0x0032441c
	481	[3915]	GETTABLE 	R30 R30 K39 ; R30 := R30["UIMaterial_Plain"]
	482	[3915]	CALL     	R27 4 1 ; R27(R28,R29,R30)
	483	[3916]	GETGLOBAL	R27 K1 ; R27 := 0xae91e43b
	484	[3916]	SELF     	R27 R27 K36 ; R28 := R27; R27 := R27[0xd5181643]
	485	[3916]	LOADK    	R29 K83 ; R29 := "ImpactMessage.Icon.IconBgRight"
	486	[3916]	GETGLOBAL	R30 K38 ; R30 := 0x0032441c
	487	[3916]	GETTABLE 	R30 R30 K39 ; R30 := R30["UIMaterial_Plain"]
	488	[3916]	CALL     	R27 4 1 ; R27(R28,R29,R30)
	489	[3917]	GETGLOBAL	R27 K84 ; R27 := 0xc8802016
	490	[3917]	MOVE     	R28 R21 ; R28 := R21
	491	[3917]	CALL     	R27 2 4 ; R27,R28,R29 := R27(R28)
	492	[3917]	JMP      	609 ; PC := 609
	493	[3918]	GETGLOBAL	R32 K1 ; R32 := 0xae91e43b
	494	[3918]	SELF     	R32 R32 K85 ; R33 := R32; R32 := R32[0xc0a3774b]
	495	[3918]	LOADK    	R34 K23 ; R34 := "ImpactMessage"
	496	[3918]	GETTABLE 	R35 R22 R30 ; R35 := R22[R30]
	497	[3918]	LOADK    	R36 := 11.000000
	498	[3918]	GETGLOBAL	R37 K0 ; R37 := 0x7b998233
	499	[3918]	GETTABLE 	R38 R20 R31 ; R38 := R20[R31]
	500	[3918]	CALL     	R37 2 2 ; R37 := R37(R38)
	501	[3918]	NOT      	R37 R37 ; R37 := not R37
	502	[3918]	CALL     	R32 6 1 ; R32(R33,R34,R35,R36,R37)
	503	[3919]	GETGLOBAL	R32 K0 ; R32 := 0x7b998233
	504	[3919]	GETTABLE 	R33 R20 R31 ; R33 := R20[R31]
	505	[3919]	CALL     	R32 2 2 ; R32 := R32(R33)
	506	[3919]	TEST     	R32 1 ; if R32 then PC := 515
	507	[3919]	JMP      	515 ; PC := 515
	508	[3920]	GETGLOBAL	R32 K1 ; R32 := 0xae91e43b
	509	[3920]	SELF     	R32 R32 K86 ; R33 := R32; R32 := R32[0x1cb415c1]
	510	[3920]	LOADK    	R34 K87 ; R34 := "ImpactMessage."
	511	[3920]	GETTABLE 	R35 R22 R30 ; R35 := R22[R30]
	512	[3920]	CONCAT   	R34 R34 R35 ; R34 := R34 .. R35
	513	[3920]	GETTABLE 	R35 R20 R31 ; R35 := R20[R31]
	514	[3920]	CALL     	R32 4 1 ; R32(R33,R34,R35)
	515	[3923]	GETGLOBAL	R32 K0 ; R32 := 0x7b998233
	516	[3923]	MOVE     	R33 R31 ; R33 := R31
	517	[3923]	LOADK    	R34 K88 ; R34 := "Material"
	518	[3923]	CONCAT   	R33 R33 R34 ; R33 := R33 .. R34
	519	[3923]	GETTABLE 	R33 R20 R33 ; R33 := R20[R33]
	520	[3923]	CALL     	R32 2 2 ; R32 := R32(R33)
	521	[3923]	TEST     	R32 1 ; if R32 then PC := 533
	522	[3923]	JMP      	533 ; PC := 533
	523	[3924]	GETGLOBAL	R32 K1 ; R32 := 0xae91e43b
	524	[3924]	SELF     	R32 R32 K36 ; R33 := R32; R32 := R32[0xd5181643]
	525	[3924]	LOADK    	R34 K87 ; R34 := "ImpactMessage."
	526	[3924]	GETTABLE 	R35 R22 R30 ; R35 := R22[R30]
	527	[3924]	CONCAT   	R34 R34 R35 ; R34 := R34 .. R35
	528	[3924]	MOVE     	R35 R31 ; R35 := R31
	529	[3924]	LOADK    	R36 K88 ; R36 := "Material"
	530	[3924]	CONCAT   	R35 R35 R36 ; R35 := R35 .. R36
	531	[3924]	GETTABLE 	R35 R20 R35 ; R35 := R20[R35]
	532	[3924]	CALL     	R32 4 1 ; R32(R33,R34,R35)
	533	[3927]	GETTABLE 	R32 R25 R30 ; R32 := R25[R30]
	534	[3928]	GETTABLE 	R33 R26 R30 ; R33 := R26[R30]
	535	[3929]	GETTABLE 	R34 R23 R30 ; R34 := R23[R30]
	536	[3930]	GETTABLE 	R35 R24 R30 ; R35 := R24[R30]
	537	[3931]	MOVE     	R36 R31 ; R36 := R31
	538	[3931]	LOADK    	R37 K89 ; R37 := "Adjust"
	539	[3931]	CONCAT   	R36 R36 R37 ; R36 := R36 .. R37
	540	[3931]	GETTABLE 	R36 R20 R36 ; R36 := R20[R36]
	541	[3931]	EQ       	1 R36 K17 ; if R36 == nil then PC := 563
	542	[3931]	JMP      	563 ; PC := 563
	543	[3932]	MOVE     	R36 R31 ; R36 := R31
	544	[3932]	LOADK    	R37 K89 ; R37 := "Adjust"
	545	[3932]	CONCAT   	R36 R36 R37 ; R36 := R36 .. R37
	546	[3932]	GETTABLE 	R36 R20 R36 ; R36 := R20[R36]
	547	[3933]	GETTABLE 	R37 R36 K90 ; R37 := R36["Width"]
	548	[3933]	EQ       	1 R37 K17 ; if R37 == nil then PC := 551
	549	[3933]	JMP      	551 ; PC := 551
	550	[3934]	GETTABLE 	R34 R36 K90 ; R34 := R36["Width"]
	551	[3936]	GETTABLE 	R37 R36 K91 ; R37 := R36["Height"]
	552	[3936]	EQ       	1 R37 K17 ; if R37 == nil then PC := 555
	553	[3936]	JMP      	555 ; PC := 555
	554	[3937]	GETTABLE 	R35 R36 K91 ; R35 := R36["Height"]
	555	[3939]	GETTABLE 	R37 R36 K92 ; R37 := R36["X"]
	556	[3939]	EQ       	1 R37 K17 ; if R37 == nil then PC := 559
	557	[3939]	JMP      	559 ; PC := 559
	558	[3940]	GETTABLE 	R32 R36 K92 ; R32 := R36["X"]
	559	[3942]	GETTABLE 	R37 R36 K93 ; R37 := R36["Y"]
	560	[3942]	EQ       	1 R37 K17 ; if R37 == nil then PC := 563
	561	[3942]	JMP      	563 ; PC := 563
	562	[3943]	GETTABLE 	R33 R36 K93 ; R33 := R36["Y"]
	563	[3947]	GETGLOBAL	R37 K0 ; R37 := 0x7b998233
	564	[3947]	GETTABLE 	R38 R20 K94 ; R38 := R20["LetterSpacing"]
	565	[3947]	CALL     	R37 2 2 ; R37 := R37(R38)
	566	[3947]	TEST     	R37 1 ; if R37 then PC := 575
	567	[3947]	JMP      	575 ; PC := 575
	568	[3948]	GETGLOBAL	R37 K1 ; R37 := 0xae91e43b
	569	[3948]	SELF     	R37 R37 K31 ; R38 := R37; R37 := R37[0x67bc869f]
	570	[3948]	LOADK    	R39 K95 ; R39 := "Impactmessage.Label"
	571	[3948]	LOADK    	R40 := 65.000000
	572	[3948]	GETTABLE 	R41 R20 K94 ; R41 := R20["LetterSpacing"]
	573	[3948]	CALL     	R37 5 1 ; R37(R38,R39,R40,R41)
	574	[3948]	JMP      	581 ; PC := 581
	575	[3950]	GETGLOBAL	R37 K1 ; R37 := 0xae91e43b
	576	[3950]	SELF     	R37 R37 K31 ; R38 := R37; R37 := R37[0x67bc869f]
	577	[3950]	LOADK    	R39 K95 ; R39 := "Impactmessage.Label"
	578	[3950]	LOADK    	R40 := 65.000000
	579	[3950]	LOADK    	R41 := 0.000000
	580	[3950]	CALL     	R37 5 1 ; R37(R38,R39,R40,R41)
	581	[3953]	GETGLOBAL	R37 K1 ; R37 := 0xae91e43b
	582	[3953]	SELF     	R37 R37 K96 ; R38 := R37; R37 := R37[0xf64b7262]
	583	[3953]	LOADK    	R39 K97 ; R39 := "Impactmessage"
	584	[3953]	GETTABLE 	R40 R22 R30 ; R40 := R22[R30]
	585	[3953]	LOADK    	R41 := 12.000000
	586	[3953]	MOVE     	R42 R34 ; R42 := R34
	587	[3953]	CALL     	R37 6 1 ; R37(R38,R39,R40,R41,R42)
	588	[3954]	GETGLOBAL	R37 K1 ; R37 := 0xae91e43b
	589	[3954]	SELF     	R37 R37 K96 ; R38 := R37; R37 := R37[0xf64b7262]
	590	[3954]	LOADK    	R39 K97 ; R39 := "Impactmessage"
	591	[3954]	GETTABLE 	R40 R22 R30 ; R40 := R22[R30]
	592	[3954]	LOADK    	R41 := 13.000000
	593	[3954]	MOVE     	R42 R35 ; R42 := R35
	594	[3954]	CALL     	R37 6 1 ; R37(R38,R39,R40,R41,R42)
	595	[3955]	GETGLOBAL	R37 K1 ; R37 := 0xae91e43b
	596	[3955]	SELF     	R37 R37 K96 ; R38 := R37; R37 := R37[0xf64b7262]
	597	[3955]	LOADK    	R39 K97 ; R39 := "Impactmessage"
	598	[3955]	GETTABLE 	R40 R22 R30 ; R40 := R22[R30]
	599	[3955]	LOADK    	R41 := 0.000000
	600	[3955]	MOVE     	R42 R32 ; R42 := R32
	601	[3955]	CALL     	R37 6 1 ; R37(R38,R39,R40,R41,R42)
	602	[3956]	GETGLOBAL	R37 K1 ; R37 := 0xae91e43b
	603	[3956]	SELF     	R37 R37 K96 ; R38 := R37; R37 := R37[0xf64b7262]
	604	[3956]	LOADK    	R39 K97 ; R39 := "Impactmessage"
	605	[3956]	GETTABLE 	R40 R22 R30 ; R40 := R22[R30]
	606	[3956]	LOADK    	R41 := 1.000000
	607	[3956]	MOVE     	R42 R33 ; R42 := R33
	608	[3956]	CALL     	R37 6 1 ; R37(R38,R39,R40,R41,R42)
	609	[3917]	TFORLOOP 	R27 2 ; R30,R31 := R27(R28,R29); if R30 ~= nil then begin PC = 493; R29 := R30 end
	610	[3956]	JMP      	493 ; PC := 493
	611	[3958]	GETGLOBAL	R37 K0 ; R37 := 0x7b998233
	612	[3958]	GETTABLE 	R38 R20 K98 ; R38 := R20["Color"]
	613	[3958]	CALL     	R37 2 2 ; R37 := R37(R38)
	614	[3958]	TEST     	R37 1 ; if R37 then PC := 673
	615	[3958]	JMP      	673 ; PC := 673
	616	[3959]	GETGLOBAL	R37 K99 ; R37 := 0x76ea806b
	617	[3959]	SELF     	R37 R37 K100 ; R38 := R37; R37 := R37[0x3f3ae64c]
	618	[3959]	LOADK    	R39 := 0.000000
	619	[3959]	CALL     	R37 3 2 ; R37 := R37(R38,R39)
	620	[3960]	GETGLOBAL	R38 K0 ; R38 := 0x7b998233
	621	[3960]	MOVE     	R39 R37 ; R39 := R37
	622	[3960]	CALL     	R38 2 2 ; R38 := R38(R39)
	623	[3960]	TEST     	R38 1 ; if R38 then PC := 694
	624	[3960]	JMP      	694 ; PC := 694
	625	[3961]	SELF     	R38 R37 K101 ; R39 := R37; R38 := R37[0x40e9c32b]
	626	[3961]	CALL     	R38 2 2 ; R38 := R38(R39)
	627	[3962]	GETTABLE 	R39 R20 K98 ; R39 := R20["Color"]
	628	[3963]	GETTABLE 	R40 R20 K102 ; R40 := R20["IsColorHex"]
	629	[3963]	TEST     	R40 1 ; if R40 then PC := 635
	630	[3963]	JMP      	635 ; PC := 635
	631	[3964]	SELF     	R40 R38 K103 ; R41 := R38; R40 := R38[0xef9a3ee6]
	632	[3964]	MOVE     	R42 R39 ; R42 := R39
	633	[3964]	CALL     	R40 3 2 ; R40 := R40(R41,R42)
	634	[3964]	MOVE     	R39 R40 ; R39 := R40
	635	[3966]	GETGLOBAL	R40 K1 ; R40 := 0xae91e43b
	636	[3966]	SELF     	R40 R40 K31 ; R41 := R40; R40 := R40[0x67bc869f]
	637	[3966]	LOADK    	R42 K42 ; R42 := "ImpactMessage.MessageFlare"
	638	[3966]	LOADK    	R43 := 9.000000
	639	[3966]	MOVE     	R44 R39 ; R44 := R39
	640	[3966]	CALL     	R40 5 1 ; R40(R41,R42,R43,R44)
	641	[3967]	GETGLOBAL	R40 K1 ; R40 := 0xae91e43b
	642	[3967]	SELF     	R40 R40 K31 ; R41 := R40; R40 := R40[0x67bc869f]
	643	[3967]	LOADK    	R42 K44 ; R42 := "ImpactMessage.LineDeco"
	644	[3967]	LOADK    	R43 := 9.000000
	645	[3967]	MOVE     	R44 R39 ; R44 := R39
	646	[3967]	CALL     	R40 5 1 ; R40(R41,R42,R43,R44)
	647	[3968]	GETGLOBAL	R40 K1 ; R40 := 0xae91e43b
	648	[3968]	SELF     	R40 R40 K31 ; R41 := R40; R40 := R40[0x67bc869f]
	649	[3968]	LOADK    	R42 K104 ; R42 := "ImpactMessage.Icon.IconTinted"
	650	[3968]	LOADK    	R43 := 9.000000
	651	[3968]	MOVE     	R44 R39 ; R44 := R39
	652	[3968]	CALL     	R40 5 1 ; R40(R41,R42,R43,R44)
	653	[3969]	GETGLOBAL	R40 K1 ; R40 := 0xae91e43b
	654	[3969]	SELF     	R40 R40 K31 ; R41 := R40; R40 := R40[0x67bc869f]
	655	[3969]	LOADK    	R42 K105 ; R42 := "ImpactMessage.Icon"
	656	[3969]	LOADK    	R43 := 1.000000
	657	[3969]	LOADK    	R44 := 40.000000
	658	[3969]	CALL     	R40 5 1 ; R40(R41,R42,R43,R44)
	659	[3970]	GETGLOBAL	R40 K106 ; R40 := 0x25312c9b
	660	[3970]	GETGLOBAL	R41 K1 ; R41 := 0xae91e43b
	661	[3970]	LOADK    	R42 K105 ; R42 := "ImpactMessage.Icon"
	662	[3970]	LOADK    	R43 := 2.000000
	663	[3970]	NEWTABLE 	R44 1 0 ; R44 := {}
	664	[3970]	LOADK    	R45 := 1.000000
	665	[3970]	SETLIST  	R44 1 1 ; R44[(1-1)*FPF+i] := R(44+i), 1 <= i <= 1
	666	[3970]	NEWTABLE 	R45 1 0 ; R45 := {}
	667	[3970]	LOADK    	R46 := 20.000000
	668	[3970]	SETLIST  	R45 1 1 ; R45[(1-1)*FPF+i] := R(45+i), 1 <= i <= 1
	669	[3970]	LOADK    	R46 := 1.500000
	670	[3970]	LOADK    	R47 := 0.000000
	671	[3970]	CALL     	R40 8 1 ; R40(R41,R42,R43,R44,R45,R46,R47)
	672	[3971]	JMP      	694 ; PC := 694
	673	[3973]	GETGLOBAL	R40 K1 ; R40 := 0xae91e43b
	674	[3973]	SELF     	R40 R40 K31 ; R41 := R40; R40 := R40[0x67bc869f]
	675	[3973]	LOADK    	R42 K42 ; R42 := "ImpactMessage.MessageFlare"
	676	[3973]	LOADK    	R43 := 9.000000
	677	[3973]	GETGLOBAL	R44 K38 ; R44 := 0x0032441c
	678	[3973]	GETTABLE 	R44 R44 K108 ; R44 := R44["UIColor_White"]
	679	[3973]	CALL     	R40 5 1 ; R40(R41,R42,R43,R44)
	680	[3974]	GETGLOBAL	R40 K1 ; R40 := 0xae91e43b
	681	[3974]	SELF     	R40 R40 K31 ; R41 := R40; R40 := R40[0x67bc869f]
	682	[3974]	LOADK    	R42 K44 ; R42 := "ImpactMessage.LineDeco"
	683	[3974]	LOADK    	R43 := 9.000000
	684	[3974]	GETGLOBAL	R44 K38 ; R44 := 0x0032441c
	685	[3974]	GETTABLE 	R44 R44 K108 ; R44 := R44["UIColor_White"]
	686	[3974]	CALL     	R40 5 1 ; R40(R41,R42,R43,R44)
	687	[3975]	GETGLOBAL	R40 K1 ; R40 := 0xae91e43b
	688	[3975]	SELF     	R40 R40 K31 ; R41 := R40; R40 := R40[0x67bc869f]
	689	[3975]	LOADK    	R42 K104 ; R42 := "ImpactMessage.Icon.IconTinted"
	690	[3975]	LOADK    	R43 := 9.000000
	691	[3975]	GETGLOBAL	R44 K38 ; R44 := 0x0032441c
	692	[3975]	GETTABLE 	R44 R44 K108 ; R44 := R44["UIColor_White"]
	693	[3975]	CALL     	R40 5 1 ; R40(R41,R42,R43,R44)
	694	[3978]	LOADNIL  	R40 R40 ; R40 := nil
	695	[3979]	LOADK    	R41 := 25.000000
	696	[3981]	GETGLOBAL	R42 K1 ; R42 := 0xae91e43b
	697	[3981]	SELF     	R42 R42 K48 ; R43 := R42; R42 := R42[0x91a24e4b]
	698	[3981]	LOADK    	R44 K29 ; R44 := "ImpactMessage.Label"
	699	[3981]	LOADK    	R45 := 35.000000
	700	[3981]	CALL     	R42 4 2 ; R42 := R42(R43,R44,R45)
	701	[3981]	MOVE     	R40 R42 ; R40 := R42
	702	[3982]	LT       	0 K109 R40 ; if 2.000000 >= R40 then PC := 723
	703	[3982]	JMP      	723 ; PC := 723
	704	[3983]	SUB      	R41 R41 K109 ; R41 := R41 - 2.000000
	705	[3984]	GETGLOBAL	R42 K1 ; R42 := 0xae91e43b
	706	[3984]	SELF     	R42 R42 K28 ; R43 := R42; R42 := R42[0x5f56eeab]
	707	[3984]	LOADK    	R44 K29 ; R44 := "ImpactMessage.Label"
	708	[3984]	LOADK    	R45 := 29.000000
	709	[3984]	LOADK    	R46 K63 ; R46 := ""
	710	[3984]	CALL     	R42 5 1 ; R42(R43,R44,R45,R46)
	711	[3985]	GETGLOBAL	R42 K1 ; R42 := 0xae91e43b
	712	[3985]	SELF     	R42 R42 K31 ; R43 := R42; R42 := R42[0x67bc869f]
	713	[3985]	LOADK    	R44 K29 ; R44 := "ImpactMessage.Label"
	714	[3985]	LOADK    	R45 := 42.000000
	715	[3985]	MOVE     	R46 R41 ; R46 := R41
	716	[3985]	CALL     	R42 5 1 ; R42(R43,R44,R45,R46)
	717	[3986]	GETGLOBAL	R42 K1 ; R42 := 0xae91e43b
	718	[3986]	SELF     	R42 R42 K28 ; R43 := R42; R42 := R42[0x5f56eeab]
	719	[3986]	LOADK    	R44 K29 ; R44 := "ImpactMessage.Label"
	720	[3986]	LOADK    	R45 := 29.000000
	721	[3986]	MOVE     	R46 R16 ; R46 := R16
	722	[3986]	CALL     	R42 5 1 ; R42(R43,R44,R45,R46)
	723	[3988]	LE       	1 R40 K109 ; if R40 <= 2.000000 then PC := 727
	724	[3988]	JMP      	727 ; PC := 727
	725	[3988]	LE       	0 R41 K110 ; if R41 > 16.000000 then PC := 696
	726	[3988]	JMP      	696 ; PC := 696
	727	[3989]	GETTABLE 	R42 R20 K111 ; R42 := R20["ShowTextShadow"]
	728	[3989]	TEST     	R42 0 ; if not R42 then PC := 743
	729	[3989]	JMP      	743 ; PC := 743
	730	[3990]	GETGLOBAL	R42 K1 ; R42 := 0xae91e43b
	731	[3990]	SELF     	R42 R42 K48 ; R43 := R42; R42 := R42[0x91a24e4b]
	732	[3990]	LOADK    	R44 K29 ; R44 := "ImpactMessage.Label"
	733	[3990]	LOADK    	R45 := 34.000000
	734	[3990]	CALL     	R42 4 2 ; R42 := R42(R43,R44,R45)
	735	[3991]	GETGLOBAL	R43 K1 ; R43 := 0xae91e43b
	736	[3991]	SELF     	R43 R43 K31 ; R44 := R43; R43 := R43[0x67bc869f]
	737	[3991]	LOADK    	R45 K43 ; R45 := "ImpactMessage.Underlay.TopShadow"
	738	[3991]	LOADK    	R46 := 13.000000
	739	[3991]	MUL      	R47 R42 K109 ; R47 := R42 * 2.000000
	740	[3991]	ADD      	R47 K112 R47 ; R47 := 32.000000 + R47
	741	[3991]	CALL     	R43 5 1 ; R43(R44,R45,R46,R47)
	742	[3991]	JMP      	749 ; PC := 749
	743	[3993]	GETGLOBAL	R43 K1 ; R43 := 0xae91e43b
	744	[3993]	SELF     	R43 R43 K31 ; R44 := R43; R43 := R43[0x67bc869f]
	745	[3993]	LOADK    	R45 K43 ; R45 := "ImpactMessage.Underlay.TopShadow"
	746	[3993]	LOADK    	R46 := 13.000000
	747	[3993]	LOADK    	R47 := 32.000000
	748	[3993]	CALL     	R43 5 1 ; R43(R44,R45,R46,R47)
	749	[3997]	GETGLOBAL	R43 K50 ; R43 := 0xe72d2edb
	750	[3997]	EQ       	1 R43 K46 ; if R43 == 3.000000 then PC := 783
	751	[3997]	JMP      	783 ; PC := 783
	752	[3997]	EQ       	1 R6 K14 ; if R6 == 4.000000 then PC := 783
	753	[3997]	JMP      	783 ; PC := 783
	754	[3998]	TEST     	R12 0 ; if not R12 then PC := 770
	755	[3998]	JMP      	770 ; PC := 770
	756	[3999]	GETGLOBAL	R43 K1 ; R43 := 0xae91e43b
	757	[3999]	SELF     	R43 R43 K31 ; R44 := R43; R43 := R43[0x67bc869f]
	758	[3999]	LOADK    	R45 K32 ; R45 := "ImpactMessage.Underlay"
	759	[3999]	LOADK    	R46 := 9.000000
	760	[3999]	GETUPVAL 	R47 U3 ; R47 := U3
	761	[3999]	GETTABLE 	R47 R47 K13 ; R47 := R47[0x06d055f9]
	762	[3999]	MOVE     	R48 R2 ; R48 := R2
	763	[3999]	GETGLOBAL	R49 K38 ; R49 := 0x0032441c
	764	[3999]	GETTABLE 	R49 R49 K113 ; R49 := R49["UIColor_Shield"]
	765	[3999]	GETGLOBAL	R50 K38 ; R50 := 0x0032441c
	766	[3999]	GETTABLE 	R50 R50 K114 ; R50 := R50["UIColor_Health"]
	767	[3999]	CALL     	R47 4 0 ; R47,... := R47(R48,R49,R50)
	768	[3999]	CALL     	R43 0 1 ; R43(R44,...)
	769	[3999]	JMP      	783 ; PC := 783
	770	[4001]	GETGLOBAL	R43 K1 ; R43 := 0xae91e43b
	771	[4001]	SELF     	R43 R43 K31 ; R44 := R43; R43 := R43[0x67bc869f]
	772	[4001]	LOADK    	R45 K23 ; R45 := "ImpactMessage"
	773	[4001]	LOADK    	R46 := 9.000000
	774	[4001]	GETUPVAL 	R47 U3 ; R47 := U3
	775	[4001]	GETTABLE 	R47 R47 K13 ; R47 := R47[0x06d055f9]
	776	[4001]	MOVE     	R48 R2 ; R48 := R2
	777	[4001]	GETUPVAL 	R49 U6 ; R49 := U6
	778	[4001]	GETTABLE 	R49 R49 K34 ; R49 := R49["Text"]
	779	[4001]	GETUPVAL 	R50 U6 ; R50 := U6
	780	[4001]	GETTABLE 	R50 R50 K115 ; R50 := R50["NegativeText"]
	781	[4001]	CALL     	R47 4 0 ; R47,... := R47(R48,R49,R50)
	782	[4001]	CALL     	R43 0 1 ; R43(R44,...)
	783	[4005]	EQ       	1 R6 K14 ; if R6 == 4.000000 then PC := 807
	784	[4005]	JMP      	807 ; PC := 807
	785	[4006]	GETGLOBAL	R43 K1 ; R43 := 0xae91e43b
	786	[4006]	SELF     	R43 R43 K31 ; R44 := R43; R43 := R43[0x67bc869f]
	787	[4006]	LOADK    	R45 K116 ; R45 := "ImpactMessage.Bg"
	788	[4006]	LOADK    	R46 := 12.000000
	789	[4006]	GETGLOBAL	R47 K1 ; R47 := 0xae91e43b
	790	[4006]	SELF     	R47 R47 K48 ; R48 := R47; R47 := R47[0x91a24e4b]
	791	[4006]	LOADK    	R49 K29 ; R49 := "ImpactMessage.Label"
	792	[4006]	LOADK    	R50 := 33.000000
	793	[4006]	CALL     	R47 4 2 ; R47 := R47(R48,R49,R50)
	794	[4006]	ADD      	R47 R47 K69 ; R47 := R47 + 20.000000
	795	[4006]	CALL     	R43 5 1 ; R43(R44,R45,R46,R47)
	796	[4007]	GETGLOBAL	R43 K1 ; R43 := 0xae91e43b
	797	[4007]	SELF     	R43 R43 K31 ; R44 := R43; R43 := R43[0x67bc869f]
	798	[4007]	LOADK    	R45 K116 ; R45 := "ImpactMessage.Bg"
	799	[4007]	LOADK    	R46 := 13.000000
	800	[4007]	GETGLOBAL	R47 K1 ; R47 := 0xae91e43b
	801	[4007]	SELF     	R47 R47 K48 ; R48 := R47; R47 := R47[0x91a24e4b]
	802	[4007]	LOADK    	R49 K29 ; R49 := "ImpactMessage.Label"
	803	[4007]	LOADK    	R50 := 34.000000
	804	[4007]	CALL     	R47 4 2 ; R47 := R47(R48,R49,R50)
	805	[4007]	ADD      	R47 R47 K117 ; R47 := R47 + 8.000000
	806	[4007]	CALL     	R43 5 1 ; R43(R44,R45,R46,R47)
	807	[4010]	GETGLOBAL	R43 K0 ; R43 := 0x7b998233
	808	[4010]	GETUPVAL 	R44 U8 ; R44 := U8
	809	[4010]	CALL     	R43 2 2 ; R43 := R43(R44)
	810	[4010]	TEST     	R43 1 ; if R43 then PC := 818
	811	[4010]	JMP      	818 ; PC := 818
	812	[4011]	GETUPVAL 	R43 U9 ; R43 := U9
	813	[4011]	SELF     	R43 R43 K118 ; R44 := R43; R43 := R43[0x775c858b]
	814	[4011]	GETUPVAL 	R45 U8 ; R45 := U8
	815	[4011]	CALL     	R43 3 1 ; R43(R44,R45)
	816	[4012]	LOADNIL  	R43 R43 ; R43 := nil
	817	[4012]	SETUPVAL 	R43 U8 ; U8 := R43
	818	[4015]	GETGLOBAL	R43 K106 ; R43 := 0x25312c9b
	819	[4015]	GETGLOBAL	R44 K1 ; R44 := 0xae91e43b
	820	[4015]	LOADK    	R45 K23 ; R45 := "ImpactMessage"
	821	[4015]	LOADK    	R46 := 0.000000
	822	[4015]	NEWTABLE 	R47 3 0 ; R47 := {}
	823	[4015]	LOADK    	R48 := 10.000000
	824	[4015]	LOADK    	R49 := 5.000000
	825	[4015]	LOADK    	R50 := 6.000000
	826	[4015]	SETLIST  	R47 3 1 ; R47[(1-1)*FPF+i] := R(47+i), 1 <= i <= 3
	827	[4015]	NEWTABLE 	R48 3 0 ; R48 := {}
	828	[4015]	LOADK    	R49 := 100.000000
	829	[4015]	MOVE     	R50 R7 ; R50 := R7
	830	[4015]	MOVE     	R51 R7 ; R51 := R7
	831	[4015]	SETLIST  	R48 3 1 ; R48[(1-1)*FPF+i] := R(48+i), 1 <= i <= 3
	832	[4015]	LOADK    	R49 K119 ; R49 := 0.150000
	833	[4015]	LOADK    	R50 := 0.000000
	834	[4020]	CLOSURE  	R51 0 ; R51 := closure(Function #1)
	835	[4020]	MOVE     	R0 R1 ; R0 := R1
	836	[4020]	GETUPVAL 	R0 U8 ; R0 := U8
	837	[4020]	GETUPVAL 	R0 U9 ; R0 := U9
	838	[4020]	GETUPVAL 	R0 U10 ; R0 := U10
	839	[4015]	CALL     	R43 9 1 ; R43(R44,R45,R46,R47,R48,R49,R50,R51)
	840	[4021]	RETURN   	R0 1 ; return 

function #119 <?:4023,4029> (20 instructions, 80 bytes at 000002112D53BDA0)
4 params, 10 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[4024]	GETGLOBAL	R4 K0 ; R4 := 0x03f57322
	2	[4024]	MOVE     	R5 R1 ; R5 := R1
	3	[4024]	CALL     	R4 2 2 ; R4 := R4(R5)
	4	[4024]	MOVE     	R1 R4 ; R1 := R4
	5	[4025]	EQ       	1 R2 K1 ; if R2 == "true" then PC := 8
	6	[4025]	JMP      	8 ; PC := 8
	7	[4025]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 8
	8	[4025]	OP_LOADBOOL	R2 1 0 ; R2 := true
	9	[4026]	EQ       	1 R3 K1 ; if R3 == "true" then PC := 12
	10	[4026]	JMP      	12 ; PC := 12
	11	[4026]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 12
	12	[4026]	OP_LOADBOOL	R3 1 0 ; R3 := true
	13	[4028]	GETUPVAL 	R4 U0 ; R4 := U0
	14	[4028]	MOVE     	R5 R0 ; R5 := R0
	15	[4028]	MOVE     	R6 R1 ; R6 := R1
	16	[4028]	MOVE     	R7 R2 ; R7 := R2
	17	[4028]	LOADNIL  	R8 R8 ; R8 := nil
	18	[4028]	MOVE     	R9 R3 ; R9 := R3
	19	[4028]	CALL     	R4 6 1 ; R4(R5,R6,R7,R8,R9)
	20	[4029]	RETURN   	R0 1 ; return 

function #120 <?:4031,4038> (23 instructions, 92 bytes at 000002112D53BE30)
1 param, 7 slots, 3 upvalues, 0 locals, 8 constants, 0 functions
	1	[4032]	EQ       	0 R0 K0 ; if R0 ~= nil then PC := 4
	2	[4032]	JMP      	4 ; PC := 4
	3	[4033]	LOADK    	R0 := 0.000000
	4	[4036]	GETUPVAL 	R1 U0 ; R1 := U0
	5	[4036]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x4bc5dc8b]
	6	[4036]	LOADK    	R3 K2 ; R3 := "ImpactMessage"
	7	[4036]	LOADNIL  	R4 R4 ; R4 := nil
	8	[4036]	GETUPVAL 	R5 U1 ; R5 := U1
	9	[4036]	ADD      	R5 R5 R0 ; R5 := R5 + R0
	10	[4036]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	11	[4037]	GETUPVAL 	R1 U0 ; R1 := U0
	12	[4037]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xfaa69527]
	13	[4037]	GETGLOBAL	R3 K4 ; R3 := 0xae91e43b
	14	[4037]	SELF     	R3 R3 K5 ; R4 := R3; R3 := R3[0x6b837788]
	15	[4037]	CALL     	R3 2 2 ; R3 := R3(R4)
	16	[4037]	GETGLOBAL	R4 K4 ; R4 := 0xae91e43b
	17	[4037]	SELF     	R4 R4 K6 ; R5 := R4; R4 := R4[0xaf9fda9f]
	18	[4037]	CALL     	R4 2 2 ; R4 := R4(R5)
	19	[4037]	OP_LOADBOOL	R5 1 0 ; R5 := true
	20	[4037]	GETUPVAL 	R6 U2 ; R6 := U2
	21	[4037]	GETTABLE 	R6 R6 K7 ; R6 := R6["HudScalePadding"]
	22	[4037]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	23	[4038]	RETURN   	R0 1 ; return 

function #121 <?:4040,4082> (104 instructions, 416 bytes at 0000021130329420)
0 params, 15 slots, 2 upvalues, 0 locals, 46 constants, 0 functions
	1	[4041]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[4041]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x67bc869f]
	3	[4041]	LOADK    	R2 K2 ; R2 := "ImpactMessage"
	4	[4041]	LOADK    	R3 := 10.000000
	5	[4041]	LOADK    	R4 := 0.000000
	6	[4041]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	7	[4042]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	8	[4042]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0xd5181643]
	9	[4042]	LOADK    	R2 K2 ; R2 := "ImpactMessage"
	10	[4042]	GETGLOBAL	R3 K4 ; R3 := 0x0032441c
	11	[4042]	GETTABLE 	R3 R3 K5 ; R3 := R3["UIMaterial_Plain"]
	12	[4042]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	13	[4044]	GETUPVAL 	R0 U0 ; R0 := U0
	14	[4044]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0xf2deaf69]
	15	[4044]	GETGLOBAL	R2 K7 ; R2 := gLotusSpeedballGameRulesType
	16	[4044]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	17	[4044]	TEST     	R0 0 ; if not R0 then PC := 46
	18	[4044]	JMP      	46 ; PC := 46
	19	[4045]	LOADK    	R0 := 180.000000
	20	[4046]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	21	[4046]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x67bc869f]
	22	[4046]	LOADK    	R3 K2 ; R3 := "ImpactMessage"
	23	[4046]	LOADK    	R4 := 1.000000
	24	[4046]	MOVE     	R5 R0 ; R5 := R0
	25	[4046]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	26	[4048]	GETGLOBAL	R1 K8 ; R1 := 0x7b998233
	27	[4048]	GETUPVAL 	R2 U1 ; R2 := U1
	28	[4048]	CALL     	R1 2 2 ; R1 := R1(R2)
	29	[4048]	TEST     	R1 1 ; if R1 then PC := 46
	30	[4048]	JMP      	46 ; PC := 46
	31	[4049]	LOADK    	R1 := 1.000000
	32	[4049]	GETUPVAL 	R2 U1 ; R2 := U1
	33	[4049]	GETTABLE 	R2 R2 K9 ; R2 := R2["list"]
	34	[4049]	LEN      	R2 R2 ; R2 := # R2
	35	[4049]	LOADK    	R3 := 1.000000
	36	[4049]	FORPREP  	R1 45 ; R1 -= R3; PC := 45
	37	[4050]	GETUPVAL 	R5 U1 ; R5 := U1
	38	[4050]	GETTABLE 	R5 R5 K9 ; R5 := R5["list"]
	39	[4050]	GETTABLE 	R5 R5 R4 ; R5 := R5[R4]
	40	[4051]	GETTABLE 	R6 R5 K10 ; R6 := R5["clip"]
	41	[4051]	EQ       	0 R6 K2 ; if R6 ~= "ImpactMessage" then PC := 45
	42	[4051]	JMP      	45 ; PC := 45
	43	[4052]	SETTABLE 	R5 K11 R0 ; R5["originalY"] := R0
	44	[4053]	JMP      	46 ; PC := 46
	45	[4049]	FORLOOP  	R1 37 ; R1 += R3; if R1 <= R2 then begin PC := 37; R4 := R1 end
	46	[4059]	GETGLOBAL	R6 K8 ; R6 := 0x7b998233
	47	[4059]	GETGLOBAL	R7 K12 ; R7 := _T
	48	[4059]	GETTABLE 	R7 R7 K13 ; R7 := R7["ImpactMessageTexturePacks"]
	49	[4059]	CALL     	R6 2 2 ; R6 := R6(R7)
	50	[4059]	TEST     	R6 0 ; if not R6 then PC := 55
	51	[4059]	JMP      	55 ; PC := 55
	52	[4060]	GETGLOBAL	R6 K12 ; R6 := _T
	53	[4060]	NEWTABLE 	R7 0 0 ; R7 := {}
	54	[4060]	SETTABLE 	R6 K13 R7 ; R6["ImpactMessageTexturePacks"] := R7
	55	[4064]	GETGLOBAL	R6 K14 ; R6 := 0xc8802016
	56	[4064]	GETGLOBAL	R7 K15 ; R7 := 0x567818a9
	57	[4064]	CALL     	R6 2 4 ; R6,R7,R8 := R6(R7)
	58	[4064]	JMP      	102 ; PC := 102
	59	[4065]	GETGLOBAL	R11 K12 ; R11 := _T
	60	[4065]	GETTABLE 	R11 R11 K13 ; R11 := R11["ImpactMessageTexturePacks"]
	61	[4065]	LOADK    	R12 K16 ; R12 := "PowerRift"
	62	[4065]	MOVE     	R13 R9 ; R13 := R9
	63	[4065]	CONCAT   	R12 R12 R13 ; R12 := R12 .. R13
	64	[4065]	NEWTABLE 	R13 0 13 ; R13 := {}
	65	[4067]	SETTABLE 	R13 K17 R10 ; R13["IconWhite"] := R10
	66	[4068]	NEWTABLE 	R14 0 2 ; R14 := {}
	67	[4068]	SETTABLE 	R14 K19 K20 ; R14["Width"] := 110.000000
	68	[4068]	SETTABLE 	R14 K21 K20 ; R14["Height"] := 110.000000
	69	[4068]	SETTABLE 	R13 K18 R14 ; R13["IconWhiteAdjust"] := R14
	70	[4069]	GETGLOBAL	R14 K23 ; R14 := 0x7d082bc8
	71	[4069]	GETTABLE 	R14 R14 K24 ; R14 := R14[2.000000]
	72	[4069]	SETTABLE 	R13 K22 R14 ; R13["IconBgLeft"] := R14
	73	[4070]	GETGLOBAL	R14 K26 ; R14 := 0x1343588e
	74	[4070]	GETTABLE 	R14 R14 K27 ; R14 := R14[1.000000]
	75	[4070]	SETTABLE 	R13 K25 R14 ; R13["IconBgLeftMaterial"] := R14
	76	[4071]	NEWTABLE 	R14 0 3 ; R14 := {}
	77	[4071]	SETTABLE 	R14 K19 K29 ; R14["Width"] := 256.000000
	78	[4071]	SETTABLE 	R14 K21 K30 ; R14["Height"] := 128.000000
	79	[4071]	SETTABLE 	R14 K31 K32 ; R14["X"] := -162.000000
	80	[4071]	SETTABLE 	R13 K28 R14 ; R13["IconBgLeftAdjust"] := R14
	81	[4072]	GETGLOBAL	R14 K23 ; R14 := 0x7d082bc8
	82	[4072]	GETTABLE 	R14 R14 K24 ; R14 := R14[2.000000]
	83	[4072]	SETTABLE 	R13 K33 R14 ; R13["IconBgRight"] := R14
	84	[4073]	GETGLOBAL	R14 K26 ; R14 := 0x1343588e
	85	[4073]	GETTABLE 	R14 R14 K27 ; R14 := R14[1.000000]
	86	[4073]	SETTABLE 	R13 K34 R14 ; R13["IconBgRightMaterial"] := R14
	87	[4074]	NEWTABLE 	R14 0 3 ; R14 := {}
	88	[4074]	SETTABLE 	R14 K19 K29 ; R14["Width"] := 256.000000
	89	[4074]	SETTABLE 	R14 K21 K30 ; R14["Height"] := 128.000000
	90	[4074]	SETTABLE 	R14 K31 K36 ; R14["X"] := 162.000000
	91	[4074]	SETTABLE 	R13 K35 R14 ; R13["IconBgRightAdjust"] := R14
	92	[4075]	GETGLOBAL	R14 K23 ; R14 := 0x7d082bc8
	93	[4075]	GETTABLE 	R14 R14 K27 ; R14 := R14[1.000000]
	94	[4075]	SETTABLE 	R13 K37 R14 ; R13["LineDeco"] := R14
	95	[4076]	NEWTABLE 	R14 0 1 ; R14 := {}
	96	[4076]	SETTABLE 	R14 K39 K40 ; R14["Y"] := 93.000000
	97	[4076]	SETTABLE 	R13 K38 R14 ; R13["LineDecoAdjust"] := R14
	98	[4077]	SETTABLE 	R13 K41 K42 ; R13["ShowTextShadow"] := true
	99	[4078]	SETTABLE 	R13 K43 K44 ; R13["Color"] := 16646000.000000
	100	[4079]	SETTABLE 	R13 K45 K42 ; R13["IsColorHex"] := true
	101	[4080]	SETTABLE 	R11 R12 R13 ; R11[R12] := R13
	102	[4064]	TFORLOOP 	R6 2 ; R9,R10 := R6(R7,R8); if R9 ~= nil then begin PC = 59; R8 := R9 end
	103	[4080]	JMP      	59 ; PC := 59
	104	[4082]	RETURN   	R0 1 ; return 

function #122 <?:4084,4092> (20 instructions, 80 bytes at 00000211303294B0)
0 params, 4 slots, 2 upvalues, 0 locals, 4 constants, 0 functions
	1	[4085]	GETGLOBAL	R0 K0 ; R0 := 0x76ea806b
	2	[4085]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x3f3ae64c]
	3	[4085]	LOADK    	R2 := 0.000000
	4	[4085]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	5	[4087]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	6	[4087]	MOVE     	R2 R0 ; R2 := R0
	7	[4087]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[4087]	TEST     	R1 1 ; if R1 then PC := 15
	9	[4087]	JMP      	15 ; PC := 15
	10	[4087]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	11	[4087]	GETUPVAL 	R2 U0 ; R2 := U0
	12	[4087]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[4087]	TEST     	R1 0 ; if not R1 then PC := 16
	14	[4087]	JMP      	16 ; PC := 16
	15	[4088]	RETURN   	R0 1 ; return 
	16	[4091]	GETUPVAL 	R1 U0 ; R1 := U0
	17	[4091]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x1e9695e9]
	18	[4091]	GETUPVAL 	R3 U1 ; R3 := U1
	19	[4091]	CALL     	R1 3 1 ; R1(R2,R3)
	20	[4092]	RETURN   	R0 1 ; return 

function #123 <?:4094,4152> (144 instructions, 576 bytes at 0000021130329590)
0 params, 6 slots, 13 upvalues, 0 locals, 37 constants, 0 functions
	1	[4095]	GETGLOBAL	R0 K0 ; R0 := 0x76ea806b
	2	[4095]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x3f3ae64c]
	3	[4095]	LOADK    	R2 := 0.000000
	4	[4095]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	5	[4097]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	6	[4097]	MOVE     	R2 R0 ; R2 := R0
	7	[4097]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[4097]	TEST     	R1 0 ; if not R1 then PC := 11
	9	[4097]	JMP      	11 ; PC := 11
	10	[4098]	RETURN   	R0 1 ; return 
	11	[4101]	SELF     	R1 R0 K3 ; R2 := R0; R1 := R0[0x40e9c32b]
	12	[4101]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[4102]	TEST     	R1 0 ; if not R1 then PC := 98
	14	[4102]	JMP      	98 ; PC := 98
	15	[4103]	GETUPVAL 	R2 U0 ; R2 := U0
	16	[4103]	EQ       	1 R2 K4 ; if R2 == nil then PC := 45
	17	[4103]	JMP      	45 ; PC := 45
	18	[4104]	SELF     	R2 R1 K5 ; R3 := R1; R2 := R1[0x2cba1ca6]
	19	[4104]	CALL     	R2 2 2 ; R2 := R2(R3)
	20	[4104]	TEST     	R2 0 ; if not R2 then PC := 40
	21	[4104]	JMP      	40 ; PC := 40
	22	[4105]	GETUPVAL 	R2 U1 ; R2 := U1
	23	[4105]	SETTABLE 	R2 K6 K7 ; R2["mCanControlPlayerPanel"] := true
	24	[4106]	GETGLOBAL	R2 K8 ; R2 := _T
	25	[4106]	GETTABLE 	R2 R2 K9 ; R2 := R2["HidePlayerPanel"]
	26	[4106]	EQ       	1 R2 K4 ; if R2 == nil then PC := 32
	27	[4106]	JMP      	32 ; PC := 32
	28	[4106]	GETGLOBAL	R2 K8 ; R2 := _T
	29	[4106]	GETTABLE 	R2 R2 K9 ; R2 := R2["HidePlayerPanel"]
	30	[4106]	EQ       	0 R2 K10 ; if R2 ~= 0.000000 then PC := 36
	31	[4106]	JMP      	36 ; PC := 36
	32	[4107]	GETUPVAL 	R2 U0 ; R2 := U0
	33	[4107]	SELF     	R2 R2 K11 ; R3 := R2; R2 := R2[0x587aa683]
	34	[4107]	CALL     	R2 2 1 ; R2(R3)
	35	[4107]	JMP      	45 ; PC := 45
	36	[4109]	GETUPVAL 	R2 U0 ; R2 := U0
	37	[4109]	SELF     	R2 R2 K12 ; R3 := R2; R2 := R2[0xe0f7ce9e]
	38	[4109]	CALL     	R2 2 1 ; R2(R3)
	39	[4110]	JMP      	45 ; PC := 45
	40	[4112]	GETUPVAL 	R2 U1 ; R2 := U1
	41	[4112]	SETTABLE 	R2 K6 K13 ; R2["mCanControlPlayerPanel"] := false
	42	[4113]	GETUPVAL 	R2 U0 ; R2 := U0
	43	[4113]	SELF     	R2 R2 K12 ; R3 := R2; R2 := R2[0xe0f7ce9e]
	44	[4113]	CALL     	R2 2 1 ; R2(R3)
	45	[4116]	GETUPVAL 	R2 U2 ; R2 := U2
	46	[4116]	SELF     	R3 R1 K15 ; R4 := R1; R3 := R1[0xef9a3ee6]
	47	[4116]	LOADK    	R5 := 17.000000
	48	[4116]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	49	[4116]	SETTABLE 	R2 K14 R3 ; R2["Text"] := R3
	50	[4117]	GETUPVAL 	R2 U2 ; R2 := U2
	51	[4117]	SELF     	R3 R1 K15 ; R4 := R1; R3 := R1[0xef9a3ee6]
	52	[4117]	LOADK    	R5 := 33.000000
	53	[4117]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	54	[4117]	SETTABLE 	R2 K17 R3 ; R2["NegativeText"] := R3
	55	[4118]	GETUPVAL 	R2 U2 ; R2 := U2
	56	[4118]	SELF     	R3 R1 K15 ; R4 := R1; R3 := R1[0xef9a3ee6]
	57	[4118]	LOADK    	R5 := 3.000000
	58	[4118]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	59	[4118]	SETTABLE 	R2 K18 R3 ; R2["Buff"] := R3
	60	[4119]	GETUPVAL 	R2 U2 ; R2 := U2
	61	[4119]	SELF     	R3 R1 K15 ; R4 := R1; R3 := R1[0xef9a3ee6]
	62	[4119]	LOADK    	R5 := 8.000000
	63	[4119]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	64	[4119]	SETTABLE 	R2 K19 R3 ; R2["Debuff"] := R3
	65	[4120]	GETUPVAL 	R2 U2 ; R2 := U2
	66	[4120]	SELF     	R3 R1 K15 ; R4 := R1; R3 := R1[0xef9a3ee6]
	67	[4120]	LOADK    	R5 := 47.000000
	68	[4120]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	69	[4120]	SETTABLE 	R2 K20 R3 ; R2["Shadow"] := R3
	70	[4121]	GETUPVAL 	R2 U2 ; R2 := U2
	71	[4121]	SELF     	R3 R1 K15 ; R4 := R1; R3 := R1[0xef9a3ee6]
	72	[4121]	LOADK    	R5 := 52.000000
	73	[4121]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	74	[4121]	SETTABLE 	R2 K21 R3 ; R2["UnselectedAbility"] := R3
	75	[4122]	GETUPVAL 	R2 U2 ; R2 := U2
	76	[4122]	SELF     	R3 R1 K15 ; R4 := R1; R3 := R1[0xef9a3ee6]
	77	[4122]	LOADK    	R5 := 46.000000
	78	[4122]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	79	[4122]	SETTABLE 	R2 K22 R3 ; R2["SelectedAbility"] := R3
	80	[4125]	GETUPVAL 	R2 U2 ; R2 := U2
	81	[4125]	SELF     	R3 R1 K15 ; R4 := R1; R3 := R1[0xef9a3ee6]
	82	[4125]	LOADK    	R5 := 19.000000
	83	[4125]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	84	[4125]	SETTABLE 	R2 K23 R3 ; R2["Health"] := R3
	85	[4126]	GETUPVAL 	R2 U2 ; R2 := U2
	86	[4126]	SELF     	R3 R1 K15 ; R4 := R1; R3 := R1[0xef9a3ee6]
	87	[4126]	LOADK    	R5 := 48.000000
	88	[4126]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	89	[4126]	SETTABLE 	R2 K24 R3 ; R2["Shield"] := R3
	90	[4127]	GETUPVAL 	R2 U2 ; R2 := U2
	91	[4127]	SELF     	R3 R1 K15 ; R4 := R1; R3 := R1[0xef9a3ee6]
	92	[4127]	LOADK    	R5 := 44.000000
	93	[4127]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	94	[4127]	SETTABLE 	R2 K25 R3 ; R2["Reticle"] := R3
	95	[4129]	GETUPVAL 	R2 U3 ; R2 := U3
	96	[4129]	GETTABLE 	R2 R2 K26 ; R2 := R2[0x4c398318]
	97	[4129]	CALL     	R2 1 1 ; R2()
	98	[4132]	SELF     	R2 R0 K3 ; R3 := R0; R2 := R0[0x40e9c32b]
	99	[4132]	CALL     	R2 2 2 ; R2 := R2(R3)
	100	[4132]	SETUPVAL 	R2 U4 ; U4 := R2
	101	[4133]	GETUPVAL 	R2 U5 ; R2 := U5
	102	[4133]	GETUPVAL 	R3 U4 ; R3 := U4
	103	[4133]	SELF     	R3 R3 K28 ; R4 := R3; R3 := R3[0x21b2271b]
	104	[4133]	CALL     	R3 2 2 ; R3 := R3(R4)
	105	[4133]	SETTABLE 	R2 K27 R3 ; R2["HudScale"] := R3
	106	[4134]	GETUPVAL 	R2 U4 ; R2 := U4
	107	[4134]	SELF     	R2 R2 K29 ; R3 := R2; R2 := R2[0x963e3c9f]
	108	[4134]	CALL     	R2 2 2 ; R2 := R2(R3)
	109	[4134]	SETUPVAL 	R2 U6 ; U6 := R2
	110	[4136]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	111	[4136]	GETUPVAL 	R3 U7 ; R3 := U7
	112	[4136]	CALL     	R2 2 2 ; R2 := R2(R3)
	113	[4136]	TEST     	R2 1 ; if R2 then PC := 119
	114	[4136]	JMP      	119 ; PC := 119
	115	[4137]	GETUPVAL 	R2 U7 ; R2 := U7
	116	[4137]	SELF     	R2 R2 K30 ; R3 := R2; R2 := R2[0x1e9695e9]
	117	[4137]	GETUPVAL 	R4 U8 ; R4 := U8
	118	[4137]	CALL     	R2 3 1 ; R2(R3,R4)
	119	[4140]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	120	[4140]	GETUPVAL 	R3 U9 ; R3 := U9
	121	[4140]	CALL     	R2 2 2 ; R2 := R2(R3)
	122	[4140]	TEST     	R2 1 ; if R2 then PC := 128
	123	[4140]	JMP      	128 ; PC := 128
	124	[4141]	GETUPVAL 	R2 U9 ; R2 := U9
	125	[4141]	SELF     	R2 R2 K30 ; R3 := R2; R2 := R2[0x1e9695e9]
	126	[4141]	GETUPVAL 	R4 U8 ; R4 := U8
	127	[4141]	CALL     	R2 3 1 ; R2(R3,R4)
	128	[4144]	GETUPVAL 	R2 U10 ; R2 := U10
	129	[4144]	CALL     	R2 1 1 ; R2()
	130	[4146]	GETUPVAL 	R2 U11 ; R2 := U11
	131	[4146]	CALL     	R2 1 1 ; R2()
	132	[4148]	GETUPVAL 	R2 U12 ; R2 := U12
	133	[4148]	CALL     	R2 1 1 ; R2()
	134	[4150]	GETGLOBAL	R2 K31 ; R2 := 0xae91e43b
	135	[4150]	SELF     	R2 R2 K32 ; R3 := R2; R2 := R2[0x20b98db3]
	136	[4150]	LOADK    	R4 K33 ; R4 := "AbilityPanel.FocusButton.text"
	137	[4150]	LOADK    	R5 K34 ; R5 := "<ACTIVATE_ABILITY_MENU_4>"
	138	[4150]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	139	[4151]	GETGLOBAL	R2 K31 ; R2 := 0xae91e43b
	140	[4151]	SELF     	R2 R2 K32 ; R3 := R2; R2 := R2[0x20b98db3]
	141	[4151]	LOADK    	R4 K35 ; R4 := "RevivePanel.Callout.text"
	142	[4151]	LOADK    	R5 K36 ; R5 := "/Lotus/Language/SystemMessages/RevivePrompt"
	143	[4151]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	144	[4152]	RETURN   	R0 1 ; return 

function #124 <?:4155,4200> (197 instructions, 788 bytes at 0000021138E30480)
1 param, 18 slots, 7 upvalues, 0 locals, 36 constants, 0 functions
	1	[4156]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	2	[4156]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x5b0290d2]
	3	[4156]	LOADK    	R3 K2 ; R3 := "AbilityPanel.ControllerCastingImage"
	4	[4156]	LOADK    	R4 := 11.000000
	5	[4156]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	6	[4156]	TEST     	R1 1 ; if R1 then PC := 9
	7	[4156]	JMP      	9 ; PC := 9
	8	[4157]	OP_LOADBOOL	R0 0 0 ; R0 := false
	9	[4159]	GETUPVAL 	R1 U0 ; R1 := U0
	10	[4159]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xf2df3db3]
	11	[4159]	MOVE     	R3 R0 ; R3 := R0
	12	[4159]	CALL     	R1 3 1 ; R1(R2,R3)
	13	[4161]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	14	[4161]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x5b0290d2]
	15	[4161]	LOADK    	R3 K4 ; R3 := "AbilityPanel"
	16	[4161]	LOADK    	R4 := 11.000000
	17	[4161]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	18	[4161]	TEST     	R1 0 ; if not R1 then PC := 44
	19	[4161]	JMP      	44 ; PC := 44
	20	[4162]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	21	[4162]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xaade900e]
	22	[4162]	LOADK    	R3 K6 ; R3 := "WeaponFrame"
	23	[4162]	LOADK    	R4 := 11.000000
	24	[4162]	TEST     	R0 1 ; if R0 then PC := 41
	25	[4162]	JMP      	41 ; PC := 41
	26	[4162]	GETUPVAL 	R5 U1 ; R5 := U1
	27	[4162]	GETTABLE 	R5 R5 K7 ; R5 := R5["IsOperator"]
	28	[4162]	TEST     	R5 0 ; if not R5 then PC := 42
	29	[4162]	JMP      	42 ; PC := 42
	30	[4162]	GETGLOBAL	R5 K8 ; R5 := 0x7b998233
	31	[4162]	GETUPVAL 	R6 U2 ; R6 := U2
	32	[4162]	GETTABLE 	R6 R6 K9 ; R6 := R6["ptr"]
	33	[4162]	CALL     	R5 2 2 ; R5 := R5(R6)
	34	[4162]	TEST     	R5 1 ; if R5 then PC := 41
	35	[4162]	JMP      	41 ; PC := 41
	36	[4162]	GETUPVAL 	R5 U2 ; R5 := U2
	37	[4162]	GETTABLE 	R5 R5 K9 ; R5 := R5["ptr"]
	38	[4162]	SELF     	R5 R5 K10 ; R6 := R5; R5 := R5[0x81f3a598]
	39	[4162]	CALL     	R5 2 2 ; R5 := R5(R6)
	40	[4162]	JMP      	43 ; PC := 43
	41	[4162]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 42
	42	[4162]	OP_LOADBOOL	R5 1 0 ; R5 := true
	43	[4162]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	44	[4165]	GETUPVAL 	R1 U3 ; R1 := U3
	45	[4165]	GETTABLE 	R1 R1 K11 ; R1 := R1[0x06d055f9]
	46	[4165]	GETUPVAL 	R2 U1 ; R2 := U1
	47	[4165]	GETTABLE 	R2 R2 K12 ; R2 := R2["MissionType"]
	48	[4165]	EQ       	1 R2 K14 ; if R2 == 31.000000 then PC := 51
	49	[4165]	JMP      	51 ; PC := 51
	50	[4165]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 51
	51	[4165]	OP_LOADBOOL	R2 1 0 ; R2 := true
	52	[4165]	LOADK    	R3 := 100.000000
	53	[4165]	LOADK    	R4 := 0.000000
	54	[4165]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	55	[4167]	TEST     	R1 0 ; if not R1 then PC := 67
	56	[4167]	JMP      	67 ; PC := 67
	57	[4167]	TEST     	R0 0 ; if not R0 then PC := 67
	58	[4167]	JMP      	67 ; PC := 67
	59	[4168]	GETUPVAL 	R2 U4 ; R2 := U4
	60	[4168]	CALL     	R2 1 2 ; R2 := R2()
	61	[4169]	GETGLOBAL	R3 K0 ; R3 := 0xae91e43b
	62	[4169]	SELF     	R3 R3 K15 ; R4 := R3; R3 := R3[0x5f56eeab]
	63	[4169]	LOADK    	R5 K16 ; R5 := "AbilityPanel.TacticalCallout"
	64	[4169]	LOADK    	R6 := 29.000000
	65	[4169]	MOVE     	R7 R2 ; R7 := R2
	66	[4169]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	67	[4172]	GETGLOBAL	R3 K17 ; R3 := 0x25312c9b
	68	[4172]	GETGLOBAL	R4 K0 ; R4 := 0xae91e43b
	69	[4172]	LOADK    	R5 K2 ; R5 := "AbilityPanel.ControllerCastingImage"
	70	[4172]	LOADK    	R6 := 8.000000
	71	[4172]	NEWTABLE 	R7 1 0 ; R7 := {}
	72	[4172]	LOADK    	R8 := 10.000000
	73	[4172]	SETLIST  	R7 1 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
	74	[4172]	NEWTABLE 	R8 0 0 ; R8 := {}
	75	[4172]	GETUPVAL 	R9 U3 ; R9 := U3
	76	[4172]	GETTABLE 	R9 R9 K11 ; R9 := R9[0x06d055f9]
	77	[4172]	MOVE     	R10 R0 ; R10 := R0
	78	[4172]	LOADK    	R11 := 100.000000
	79	[4172]	LOADK    	R12 := 0.000000
	80	[4172]	CALL     	R9 4 0 ; R9,... := R9(R10,R11,R12)
	81	[4172]	SETLIST  	R8 0 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 0
	82	[4172]	LOADK    	R9 K19 ; R9 := 0.150000
	83	[4172]	CALL     	R3 7 1 ; R3(R4,R5,R6,R7,R8,R9)
	84	[4173]	GETGLOBAL	R3 K17 ; R3 := 0x25312c9b
	85	[4173]	GETGLOBAL	R4 K0 ; R4 := 0xae91e43b
	86	[4173]	LOADK    	R5 K20 ; R5 := "AbilityPanel.ControllerCastingButtons"
	87	[4173]	LOADK    	R6 := 8.000000
	88	[4173]	NEWTABLE 	R7 1 0 ; R7 := {}
	89	[4173]	LOADK    	R8 := 10.000000
	90	[4173]	SETLIST  	R7 1 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
	91	[4173]	NEWTABLE 	R8 0 0 ; R8 := {}
	92	[4173]	GETUPVAL 	R9 U3 ; R9 := U3
	93	[4173]	GETTABLE 	R9 R9 K11 ; R9 := R9[0x06d055f9]
	94	[4173]	MOVE     	R10 R0 ; R10 := R0
	95	[4173]	LOADK    	R11 := 100.000000
	96	[4173]	LOADK    	R12 := 0.000000
	97	[4173]	CALL     	R9 4 0 ; R9,... := R9(R10,R11,R12)
	98	[4173]	SETLIST  	R8 0 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 0
	99	[4173]	LOADK    	R9 K19 ; R9 := 0.150000
	100	[4173]	CALL     	R3 7 1 ; R3(R4,R5,R6,R7,R8,R9)
	101	[4174]	GETGLOBAL	R3 K17 ; R3 := 0x25312c9b
	102	[4174]	GETGLOBAL	R4 K0 ; R4 := 0xae91e43b
	103	[4174]	LOADK    	R5 K21 ; R5 := "AbilityPanel.FocusButton"
	104	[4174]	LOADK    	R6 := 8.000000
	105	[4174]	NEWTABLE 	R7 1 0 ; R7 := {}
	106	[4174]	LOADK    	R8 := 10.000000
	107	[4174]	SETLIST  	R7 1 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
	108	[4174]	NEWTABLE 	R8 0 0 ; R8 := {}
	109	[4174]	GETUPVAL 	R9 U3 ; R9 := U3
	110	[4174]	GETTABLE 	R9 R9 K11 ; R9 := R9[0x06d055f9]
	111	[4174]	MOVE     	R10 R0 ; R10 := R0
	112	[4174]	LOADK    	R11 := 100.000000
	113	[4174]	LOADK    	R12 := 0.000000
	114	[4174]	CALL     	R9 4 0 ; R9,... := R9(R10,R11,R12)
	115	[4174]	SETLIST  	R8 0 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 0
	116	[4174]	LOADK    	R9 K19 ; R9 := 0.150000
	117	[4174]	CALL     	R3 7 1 ; R3(R4,R5,R6,R7,R8,R9)
	118	[4175]	GETGLOBAL	R3 K17 ; R3 := 0x25312c9b
	119	[4175]	GETGLOBAL	R4 K0 ; R4 := 0xae91e43b
	120	[4175]	LOADK    	R5 K16 ; R5 := "AbilityPanel.TacticalCallout"
	121	[4175]	LOADK    	R6 := 8.000000
	122	[4175]	NEWTABLE 	R7 1 0 ; R7 := {}
	123	[4175]	LOADK    	R8 := 10.000000
	124	[4175]	SETLIST  	R7 1 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
	125	[4175]	NEWTABLE 	R8 0 0 ; R8 := {}
	126	[4175]	GETUPVAL 	R9 U3 ; R9 := U3
	127	[4175]	GETTABLE 	R9 R9 K11 ; R9 := R9[0x06d055f9]
	128	[4175]	MOVE     	R10 R0 ; R10 := R0
	129	[4175]	MOVE     	R11 R1 ; R11 := R1
	130	[4175]	LOADK    	R12 := 0.000000
	131	[4175]	CALL     	R9 4 0 ; R9,... := R9(R10,R11,R12)
	132	[4175]	SETLIST  	R8 0 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 0
	133	[4175]	LOADK    	R9 K19 ; R9 := 0.150000
	134	[4175]	CALL     	R3 7 1 ; R3(R4,R5,R6,R7,R8,R9)
	135	[4177]	LOADNIL  	R3 R3 ; R3 := nil
	136	[4178]	TEST     	R0 0 ; if not R0 then PC := 140
	137	[4178]	JMP      	140 ; PC := 140
	138	[4179]	GETUPVAL 	R3 U5 ; R3 := U5
	139	[4179]	JMP      	141 ; PC := 141
	140	[4181]	GETUPVAL 	R3 U6 ; R3 := U6
	141	[4184]	GETGLOBAL	R4 K22 ; R4 := 0xcfc01047
	142	[4184]	MOVE     	R5 R3 ; R5 := R3
	143	[4184]	CALL     	R4 2 4 ; R4,R5,R6 := R4(R5)
	144	[4184]	JMP      	195 ; PC := 195
	145	[4186]	LOADNIL  	R9 R9 ; R9 := nil
	146	[4188]	GETTABLE 	R10 R8 K23 ; R10 := R8["Ability"]
	147	[4188]	EQ       	0 R10 K24 ; if R10 ~= "ACTIVATE_ABILITY_MENU_0" then PC := 155
	148	[4188]	JMP      	155 ; PC := 155
	149	[4189]	GETGLOBAL	R10 K25 ; R10 := 0x7f5022cf
	150	[4189]	GETTABLE 	R10 R10 K26 ; R10 := R10[0xe8072ded]
	151	[4189]	LOADK    	R11 K27 ; R11 := "AbilityPanel.Ability1"
	152	[4189]	CALL     	R10 2 2 ; R10 := R10(R11)
	153	[4189]	MOVE     	R9 R10 ; R9 := R10
	154	[4189]	JMP      	181 ; PC := 181
	155	[4190]	GETTABLE 	R10 R8 K23 ; R10 := R8["Ability"]
	156	[4190]	EQ       	0 R10 K28 ; if R10 ~= "ACTIVATE_ABILITY_MENU_1" then PC := 164
	157	[4190]	JMP      	164 ; PC := 164
	158	[4191]	GETGLOBAL	R10 K25 ; R10 := 0x7f5022cf
	159	[4191]	GETTABLE 	R10 R10 K26 ; R10 := R10[0xe8072ded]
	160	[4191]	LOADK    	R11 K29 ; R11 := "AbilityPanel.Ability2"
	161	[4191]	CALL     	R10 2 2 ; R10 := R10(R11)
	162	[4191]	MOVE     	R9 R10 ; R9 := R10
	163	[4191]	JMP      	181 ; PC := 181
	164	[4192]	GETTABLE 	R10 R8 K23 ; R10 := R8["Ability"]
	165	[4192]	EQ       	0 R10 K30 ; if R10 ~= "ACTIVATE_ABILITY_MENU_2" then PC := 173
	166	[4192]	JMP      	173 ; PC := 173
	167	[4193]	GETGLOBAL	R10 K25 ; R10 := 0x7f5022cf
	168	[4193]	GETTABLE 	R10 R10 K26 ; R10 := R10[0xe8072ded]
	169	[4193]	LOADK    	R11 K31 ; R11 := "AbilityPanel.Ability3"
	170	[4193]	CALL     	R10 2 2 ; R10 := R10(R11)
	171	[4193]	MOVE     	R9 R10 ; R9 := R10
	172	[4193]	JMP      	181 ; PC := 181
	173	[4194]	GETTABLE 	R10 R8 K23 ; R10 := R8["Ability"]
	174	[4194]	EQ       	0 R10 K32 ; if R10 ~= "ACTIVATE_ABILITY_MENU_3" then PC := 181
	175	[4194]	JMP      	181 ; PC := 181
	176	[4195]	GETGLOBAL	R10 K25 ; R10 := 0x7f5022cf
	177	[4195]	GETTABLE 	R10 R10 K26 ; R10 := R10[0xe8072ded]
	178	[4195]	LOADK    	R11 K33 ; R11 := "AbilityPanel.Ability4"
	179	[4195]	CALL     	R10 2 2 ; R10 := R10(R11)
	180	[4195]	MOVE     	R9 R10 ; R9 := R10
	181	[4198]	GETGLOBAL	R10 K17 ; R10 := 0x25312c9b
	182	[4198]	GETGLOBAL	R11 K0 ; R11 := 0xae91e43b
	183	[4198]	MOVE     	R12 R9 ; R12 := R9
	184	[4198]	LOADK    	R13 := 8.000000
	185	[4198]	NEWTABLE 	R14 2 0 ; R14 := {}
	186	[4198]	LOADK    	R15 := 0.000000
	187	[4198]	LOADK    	R16 := 1.000000
	188	[4198]	SETLIST  	R14 2 1 ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 2
	189	[4198]	NEWTABLE 	R15 2 0 ; R15 := {}
	190	[4198]	GETTABLE 	R16 R8 K34 ; R16 := R8["X"]
	191	[4198]	GETTABLE 	R17 R8 K35 ; R17 := R8["Y"]
	192	[4198]	SETLIST  	R15 2 1 ; R15[(1-1)*FPF+i] := R(15+i), 1 <= i <= 2
	193	[4198]	LOADK    	R16 K19 ; R16 := 0.150000
	194	[4198]	CALL     	R10 7 1 ; R10(R11,R12,R13,R14,R15,R16)
	195	[4184]	TFORLOOP 	R4 2 ; R7,R8 := R4(R5,R6); if R7 ~= nil then begin PC = 145; R6 := R7 end
	196	[4198]	JMP      	145 ; PC := 145
	197	[4200]	RETURN   	R0 1 ; return 

function #125 <?:4202,4214> (31 instructions, 124 bytes at 0000021138E30510)
1 param, 6 slots, 1 upvalue, 0 locals, 7 constants, 0 functions
	1	[4203]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[4203]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[4203]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[4203]	TEST     	R1 0 ; if not R1 then PC := 7
	5	[4203]	JMP      	7 ; PC := 7
	6	[4204]	RETURN   	R0 1 ; return 
	7	[4207]	GETGLOBAL	R1 K1 ; R1 := 0x03f57322
	8	[4207]	MOVE     	R2 R0 ; R2 := R0
	9	[4207]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[4207]	EQ       	0 R1 K2 ; if R1 ~= nil then PC := 13
	11	[4207]	JMP      	13 ; PC := 13
	12	[4208]	LOADK    	R0 := 9.000000
	13	[4211]	GETUPVAL 	R1 U0 ; R1 := U0
	14	[4211]	GETGLOBAL	R2 K1 ; R2 := 0x03f57322
	15	[4211]	MOVE     	R3 R0 ; R3 := R0
	16	[4211]	CALL     	R2 2 2 ; R2 := R2(R3)
	17	[4211]	SETTABLE 	R1 K3 R2 ; R1["mColumns"] := R2
	18	[4212]	GETUPVAL 	R1 U0 ; R1 := U0
	19	[4212]	GETUPVAL 	R2 U0 ; R2 := U0
	20	[4212]	GETTABLE 	R2 R2 K3 ; R2 := R2["mColumns"]
	21	[4212]	GETUPVAL 	R3 U0 ; R3 := U0
	22	[4212]	GETTABLE 	R3 R3 K5 ; R3 := R3["mRows"]
	23	[4212]	MUL      	R2 R2 R3 ; R2 := R2 * R3
	24	[4212]	SETTABLE 	R1 K4 R2 ; R1["mVisibleElements"] := R2
	25	[4213]	GETUPVAL 	R1 U0 ; R1 := U0
	26	[4213]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x71e9ac81]
	27	[4213]	LOADNIL  	R3 R3 ; R3 := nil
	28	[4213]	OP_LOADBOOL	R4 1 0 ; R4 := true
	29	[4213]	OP_LOADBOOL	R5 1 0 ; R5 := true
	30	[4213]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	31	[4214]	RETURN   	R0 1 ; return 

function #126 <?:4216,4507> (55 instructions, 220 bytes at 0000021191C8B480)
0 params, 7 slots, 6 upvalues, 0 locals, 24 constants, 4 functions
	1	[4217]	GETGLOBAL	R0 K0 ; R0 := 0x2d0fad09
	2	[4217]	LOADK    	R1 K1 ; R1 := "EE.Interface.Components.Grid"
	3	[4217]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[4218]	GETTABLE 	R1 R0 K2 ; R1 := R0[0xda0c93a2]
	5	[4218]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	6	[4218]	LOADK    	R3 K4 ; R3 := "HealthAndShield.StatusEffectItem"
	7	[4218]	LOADNIL  	R4 R4 ; R4 := nil
	8	[4218]	LOADK    	R5 := 9.000000
	9	[4218]	LOADK    	R6 := 2.000000
	10	[4218]	CALL     	R1 6 2 ; R1 := R1(R2,R3,R4,R5,R6)
	11	[4218]	SETUPVAL 	R1 U0 ; U0 := R1
	12	[4219]	GETUPVAL 	R1 U0 ; R1 := U0
	13	[4219]	SETTABLE 	R1 K5 K6 ; R1["mColumnSeparation"] := -50.000000
	14	[4220]	GETUPVAL 	R1 U0 ; R1 := U0
	15	[4220]	SETTABLE 	R1 K7 K8 ; R1["mRowSeparation"] := 50.000000
	16	[4221]	GETUPVAL 	R1 U0 ; R1 := U0
	17	[4221]	SETTABLE 	R1 K9 K10 ; R1["mVisNameId"] := nil
	18	[4222]	GETUPVAL 	R1 U0 ; R1 := U0
	19	[4222]	SETTABLE 	R1 K11 K10 ; R1["mVisNameFadeTimer"] := nil
	20	[4223]	GETUPVAL 	R1 U0 ; R1 := U0
	21	[4223]	SETTABLE 	R1 K12 K13 ; R1["mVisNameFadeDuration"] := 1.000000
	22	[4224]	GETUPVAL 	R1 U0 ; R1 := U0
	23	[4224]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	24	[4224]	SELF     	R2 R2 K15 ; R3 := R2; R2 := R2[0x91a24e4b]
	25	[4224]	LOADK    	R4 K16 ; R4 := "HealthAndShield.StatusEffectItem.StatName.Name"
	26	[4224]	LOADK    	R5 := 0.000000
	27	[4224]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	28	[4224]	SETTABLE 	R1 K14 R2 ; R1["mOrigStatEffectNameXPos"] := R2
	29	[4225]	GETUPVAL 	R1 U0 ; R1 := U0
	30	[4225]	GETGLOBAL	R2 K18 ; R2 := 0x7ed0a956
	31	[4225]	LOADK    	R3 K19 ; R3 := "/Lotus/Types/PickUps/FocusBoostBuff"
	32	[4225]	CALL     	R2 2 2 ; R2 := R2(R3)
	33	[4225]	SETTABLE 	R1 K17 R2 ; R1["mFocusBoostAbilityType"] := R2
	34	[4226]	GETUPVAL 	R1 U0 ; R1 := U0
	35	[4259]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	36	[4259]	GETUPVAL 	R0 U0 ; R0 := U0
	37	[4259]	GETUPVAL 	R0 U1 ; R0 := U1
	38	[4259]	SETTABLE 	R1 K20 R2 ; R1["TryToShowStatName"] := R2
	39	[4260]	GETUPVAL 	R1 U0 ; R1 := U0
	40	[4274]	CLOSURE  	R2 1 ; R2 := closure(Function #2)
	41	[4274]	GETUPVAL 	R0 U1 ; R0 := U1
	42	[4274]	GETUPVAL 	R0 U0 ; R0 := U0
	43	[4274]	SETTABLE 	R1 K21 R2 ; R1["mOnRemovedCallback"] := R2
	44	[4275]	GETUPVAL 	R1 U0 ; R1 := U0
	45	[4280]	CLOSURE  	R2 2 ; R2 := closure(Function #3)
	46	[4280]	SETTABLE 	R1 K22 R2 ; R1["mClipCreatedCallback"] := R2
	47	[4281]	GETUPVAL 	R1 U0 ; R1 := U0
	48	[4506]	CLOSURE  	R2 3 ; R2 := closure(Function #4)
	49	[4506]	GETUPVAL 	R0 U2 ; R0 := U2
	50	[4506]	GETUPVAL 	R0 U3 ; R0 := U3
	51	[4506]	GETUPVAL 	R0 U0 ; R0 := U0
	52	[4506]	GETUPVAL 	R0 U4 ; R0 := U4
	53	[4506]	GETUPVAL 	R0 U5 ; R0 := U5
	54	[4506]	SETTABLE 	R1 K23 R2 ; R1["mElementDrawCallback"] := R2
	55	[4507]	RETURN   	R0 1 ; return 

function #127 <?:4509,4525> (26 instructions, 104 bytes at 00000211CD2D4670)
0 params, 5 slots, 3 upvalues, 0 locals, 4 constants, 1 function
	1	[4510]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[4510]	CALL     	R0 1 1 ; R0()
	3	[4512]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	4	[4512]	GETUPVAL 	R1 U1 ; R1 := U1
	5	[4512]	CALL     	R0 2 2 ; R0 := R0(R1)
	6	[4512]	TEST     	R0 1 ; if R0 then PC := 11
	7	[4512]	JMP      	11 ; PC := 11
	8	[4513]	GETUPVAL 	R0 U1 ; R0 := U1
	9	[4513]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x008ed227]
	10	[4513]	CALL     	R0 2 1 ; R0(R1)
	11	[4516]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	12	[4516]	GETUPVAL 	R1 U2 ; R1 := U2
	13	[4516]	CALL     	R0 2 2 ; R0 := R0(R1)
	14	[4516]	TEST     	R0 1 ; if R0 then PC := 26
	15	[4516]	JMP      	26 ; PC := 26
	16	[4517]	GETUPVAL 	R0 U2 ; R0 := U2
	17	[4517]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xea061e98]
	18	[4522]	CLOSURE  	R2 0 ; R2 := closure(Function #1)
	19	[4517]	CALL     	R0 3 1 ; R0(R1,R2)
	20	[4523]	GETUPVAL 	R0 U2 ; R0 := U2
	21	[4523]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x71e9ac81]
	22	[4523]	LOADNIL  	R2 R2 ; R2 := nil
	23	[4523]	OP_LOADBOOL	R3 1 0 ; R3 := true
	24	[4523]	OP_LOADBOOL	R4 1 0 ; R4 := true
	25	[4523]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	26	[4525]	RETURN   	R0 1 ; return 

function #128 <?:4527,4533> (16 instructions, 64 bytes at 0000021137F93CA0)
4 params, 9 slots, 1 upvalue, 0 locals, 8 constants, 0 functions
	1	[4528]	GETUPVAL 	R4 U0 ; R4 := U0
	2	[4528]	SETTABLE 	R4 K0 R1 ; R4["Icon"] := R1
	3	[4529]	GETUPVAL 	R4 U0 ; R4 := U0
	4	[4529]	GETGLOBAL	R5 K2 ; R5 := 0xae91e43b
	5	[4529]	SELF     	R5 R5 K3 ; R6 := R5; R5 := R5[0x42b04007]
	6	[4529]	MOVE     	R7 R0 ; R7 := R0
	7	[4529]	OP_LOADBOOL	R8 1 0 ; R8 := true
	8	[4529]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	9	[4529]	SETTABLE 	R4 K1 R5 ; R4["Message"] := R5
	10	[4530]	GETUPVAL 	R4 U0 ; R4 := U0
	11	[4530]	SETTABLE 	R4 K4 R2 ; R4["IconSize"] := R2
	12	[4531]	GETUPVAL 	R4 U0 ; R4 := U0
	13	[4531]	SETTABLE 	R4 K5 R3 ; R4["Tint"] := R3
	14	[4532]	GETUPVAL 	R4 U0 ; R4 := U0
	15	[4532]	SETTABLE 	R4 K6 K7 ; R4["UpdateOverrides"] := true
	16	[4533]	RETURN   	R0 1 ; return 

function #129 <?:4535,4538> (18 instructions, 72 bytes at 000002113020A160)
1 param, 9 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[4536]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	2	[4536]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xaade900e]
	3	[4536]	LOADK    	R3 K2 ; R3 := "MiniMapContainer.VoidTearProgress"
	4	[4536]	LOADK    	R4 := 11.000000
	5	[4536]	MOVE     	R5 R0 ; R5 := R0
	6	[4536]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	7	[4537]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	8	[4537]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x67bc869f]
	9	[4537]	LOADK    	R3 K2 ; R3 := "MiniMapContainer.VoidTearProgress"
	10	[4537]	LOADK    	R4 := 10.000000
	11	[4537]	GETUPVAL 	R5 U0 ; R5 := U0
	12	[4537]	GETTABLE 	R5 R5 K4 ; R5 := R5[0x06d055f9]
	13	[4537]	MOVE     	R6 R0 ; R6 := R0
	14	[4537]	LOADK    	R7 := 100.000000
	15	[4537]	LOADK    	R8 := 0.000000
	16	[4537]	CALL     	R5 4 0 ; R5,... := R5(R6,R7,R8)
	17	[4537]	CALL     	R1 0 1 ; R1(R2,...)
	18	[4538]	RETURN   	R0 1 ; return 

function #130 <?:4540,4543> (17 instructions, 68 bytes at 000002113020A1F0)
2 params, 8 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[4541]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[4541]	GETTABLE 	R2 R2 K0 ; R2 := R2[0x06d055f9]
	3	[4541]	MOVE     	R3 R1 ; R3 := R1
	4	[4541]	GETGLOBAL	R4 K1 ; R4 := 0xae91e43b
	5	[4541]	SELF     	R4 R4 K2 ; R5 := R4; R4 := R4[0x91a24e4b]
	6	[4541]	LOADK    	R6 K3 ; R6 := "MiniMapContainer.MissionCountdown"
	7	[4541]	LOADK    	R7 := 1.000000
	8	[4541]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	9	[4541]	LOADK    	R5 := 0.000000
	10	[4541]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	11	[4542]	GETGLOBAL	R3 K1 ; R3 := 0xae91e43b
	12	[4542]	SELF     	R3 R3 K4 ; R4 := R3; R3 := R3[0x67bc869f]
	13	[4542]	LOADK    	R5 K3 ; R5 := "MiniMapContainer.MissionCountdown"
	14	[4542]	LOADK    	R6 := 1.000000
	15	[4542]	ADD      	R7 R2 R0 ; R7 := R2 + R0
	16	[4542]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	17	[4543]	RETURN   	R0 1 ; return 

function #131 <?:4545,4555> (21 instructions, 84 bytes at 0000021192677460)
3 params, 8 slots, 1 upvalue, 0 locals, 9 constants, 0 functions
	1	[4546]	GETGLOBAL	R3 K0 ; R3 := 0x6c97a788
	2	[4546]	GETTABLE 	R3 R3 K1 ; R3 := R3[0x48b81819]
	3	[4546]	CALL     	R3 1 2 ; R3 := R3()
	4	[4548]	SETTABLE 	R3 K2 R0 ; R3["mTitle"] := R0
	5	[4549]	GETGLOBAL	R4 K4 ; R4 := 0xae91e43b
	6	[4549]	SELF     	R4 R4 K5 ; R5 := R4; R4 := R4[0x42b04007]
	7	[4549]	MOVE     	R6 R1 ; R6 := R1
	8	[4549]	OP_LOADBOOL	R7 1 0 ; R7 := true
	9	[4549]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	10	[4549]	SETTABLE 	R3 K3 R4 ; R3["mDescription"] := R4
	11	[4550]	SETTABLE 	R3 K6 R2 ; R3["mItem"] := R2
	12	[4552]	GETGLOBAL	R4 K7 ; R4 := 0x7b998233
	13	[4552]	GETUPVAL 	R5 U0 ; R5 := U0
	14	[4552]	CALL     	R4 2 2 ; R4 := R4(R5)
	15	[4552]	TEST     	R4 1 ; if R4 then PC := 21
	16	[4552]	JMP      	21 ; PC := 21
	17	[4553]	GETUPVAL 	R4 U0 ; R4 := U0
	18	[4553]	SELF     	R4 R4 K8 ; R5 := R4; R4 := R4[0x1a8d3500]
	19	[4553]	MOVE     	R6 R3 ; R6 := R3
	20	[4553]	CALL     	R4 3 1 ; R4(R5,R6)
	21	[4555]	RETURN   	R0 1 ; return 

function #132 <?:4557,4559> (3 instructions, 12 bytes at 00000211CDA115C0)
1 param, 2 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[4558]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[4558]	SETTABLE 	R1 K0 R0 ; R1["Enabled"] := R0
	3	[4559]	RETURN   	R0 1 ; return 

function #133 <?:4561,4563> (12 instructions, 48 bytes at 00000211CDA11650)
2 params, 8 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[4562]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	2	[4562]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0xc0a3774b]
	3	[4562]	LOADK    	R4 K2 ; R4 := "AbilityPanel.Ability"
	4	[4562]	GETGLOBAL	R5 K3 ; R5 := 0x64fb1586
	5	[4562]	ADD      	R6 R0 K4 ; R6 := R0 + 1.000000
	6	[4562]	CALL     	R5 2 2 ; R5 := R5(R6)
	7	[4562]	CONCAT   	R4 R4 R5 ; R4 := R4 .. R5
	8	[4562]	LOADK    	R5 K5 ; R5 := "ActiveAnim"
	9	[4562]	LOADK    	R6 := 11.000000
	10	[4562]	MOVE     	R7 R1 ; R7 := R1
	11	[4562]	CALL     	R2 6 1 ; R2(R3,R4,R5,R6,R7)
	12	[4563]	RETURN   	R0 1 ; return 

function #134 <?:4565,4567> (6 instructions, 24 bytes at 00000211CDA11750)
2 params, 6 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[4566]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[4566]	SELF     	R2 R2 K0 ; R3 := R2; R2 := R2[0x71ddff47]
	3	[4566]	SUB      	R4 R0 K1 ; R4 := R0 - 1.000000
	4	[4566]	MOVE     	R5 R1 ; R5 := R1
	5	[4566]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	6	[4567]	RETURN   	R0 1 ; return 

function #135 <?:4569,4571> (6 instructions, 24 bytes at 000002112F5411B0)
2 params, 6 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[4570]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[4570]	SELF     	R2 R2 K0 ; R3 := R2; R2 := R2[0x82675750]
	3	[4570]	MOVE     	R4 R0 ; R4 := R0
	4	[4570]	MOVE     	R5 R1 ; R5 := R1
	5	[4570]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	6	[4571]	RETURN   	R0 1 ; return 

function #136 <?:4573,4589> (56 instructions, 224 bytes at 000002112F541240)
3 params, 11 slots, 3 upvalues, 0 locals, 15 constants, 0 functions
	1	[4574]	GETGLOBAL	R3 K0 ; R3 := 0xe72d2edb
	2	[4574]	EQ       	1 R3 K2 ; if R3 == 0.000000 then PC := 8
	3	[4574]	JMP      	8 ; PC := 8
	4	[4574]	GETGLOBAL	R3 K0 ; R3 := 0xe72d2edb
	5	[4574]	EQ       	1 R3 K3 ; if R3 == 4.000000 then PC := 8
	6	[4574]	JMP      	8 ; PC := 8
	7	[4576]	RETURN   	R0 1 ; return 
	8	[4578]	GETGLOBAL	R3 K4 ; R3 := 0x7b998233
	9	[4578]	MOVE     	R4 R1 ; R4 := R1
	10	[4578]	CALL     	R3 2 2 ; R3 := R3(R4)
	11	[4578]	TEST     	R3 1 ; if R3 then PC := 56
	12	[4578]	JMP      	56 ; PC := 56
	13	[4579]	GETUPVAL 	R3 U0 ; R3 := U0
	14	[4579]	GETTABLE 	R3 R3 K5 ; R3 := R3[0xb5be5d4a]
	15	[4579]	GETGLOBAL	R4 K6 ; R4 := 0xae91e43b
	16	[4579]	LOADK    	R5 K7 ; R5 := "AbilityPanel.Ability"
	17	[4579]	MOVE     	R6 R0 ; R6 := R0
	18	[4579]	LOADK    	R7 K8 ; R7 := ".Icon"
	19	[4579]	CONCAT   	R5 R5 R7 ; R5 := R5 .. R6 .. R7
	20	[4579]	OP_LOADBOOL	R6 1 0 ; R6 := true
	21	[4579]	CALL     	R3 4 3 ; R3,R4 := R3(R4,R5,R6)
	22	[4580]	GETUPVAL 	R5 U1 ; R5 := U1
	23	[4580]	GETUPVAL 	R6 U0 ; R6 := U0
	24	[4580]	GETTABLE 	R6 R6 K9 ; R6 := R6[0x5a22d251]
	25	[4580]	GETGLOBAL	R7 K6 ; R7 := 0xae91e43b
	26	[4580]	MOVE     	R8 R1 ; R8 := R1
	27	[4580]	MOVE     	R9 R3 ; R9 := R3
	28	[4580]	MOVE     	R10 R4 ; R10 := R4
	29	[4580]	CALL     	R6 5 2 ; R6 := R6(R7,R8,R9,R10)
	30	[4580]	SETTABLE 	R5 R0 R6 ; R5[R0] := R6
	31	[4582]	TEST     	R2 1 ; if R2 then PC := 56
	32	[4582]	JMP      	56 ; PC := 56
	33	[4582]	GETGLOBAL	R5 K4 ; R5 := 0x7b998233
	34	[4582]	GETUPVAL 	R6 U1 ; R6 := U1
	35	[4582]	GETTABLE 	R6 R6 R0 ; R6 := R6[R0]
	36	[4582]	CALL     	R5 2 2 ; R5 := R5(R6)
	37	[4582]	TEST     	R5 1 ; if R5 then PC := 56
	38	[4582]	JMP      	56 ; PC := 56
	39	[4583]	GETUPVAL 	R5 U1 ; R5 := U1
	40	[4583]	GETTABLE 	R5 R5 R0 ; R5 := R5[R0]
	41	[4583]	SELF     	R5 R5 K10 ; R6 := R5; R5 := R5[0xf2deaf69]
	42	[4583]	GETGLOBAL	R7 K11 ; R7 := gParticleSysType
	43	[4583]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	44	[4583]	TEST     	R5 0 ; if not R5 then PC := 56
	45	[4583]	JMP      	56 ; PC := 56
	46	[4584]	GETGLOBAL	R5 K12 ; R5 := 0x60130201
	47	[4584]	GETUPVAL 	R6 U2 ; R6 := U2
	48	[4584]	GETTABLE 	R6 R6 K13 ; R6 := R6["UnselectedAbility"]
	49	[4584]	CALL     	R5 2 2 ; R5 := R5(R6)
	50	[4585]	GETUPVAL 	R6 U1 ; R6 := U1
	51	[4585]	GETTABLE 	R6 R6 R0 ; R6 := R6[R0]
	52	[4585]	SELF     	R6 R6 K14 ; R7 := R6; R6 := R6[0x8feccd8b]
	53	[4585]	MOVE     	R8 R5 ; R8 := R5
	54	[4585]	MOVE     	R9 R5 ; R9 := R5
	55	[4585]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	56	[4589]	RETURN   	R0 1 ; return 

function #137 <?:4591,4598> (20 instructions, 80 bytes at 000002112AD6E0C0)
2 params, 5 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[4592]	EQ       	0 R1 K0 ; if R1 ~= "true" then PC := 20
	2	[4592]	JMP      	20 ; PC := 20
	3	[4593]	GETGLOBAL	R2 K1 ; R2 := 0x03f57322
	4	[4593]	MOVE     	R3 R0 ; R3 := R0
	5	[4593]	CALL     	R2 2 2 ; R2 := R2(R3)
	6	[4593]	MOVE     	R0 R2 ; R0 := R2
	7	[4594]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	8	[4594]	GETGLOBAL	R3 K3 ; R3 := 0x208bb2bc
	9	[4594]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[4594]	TEST     	R2 1 ; if R2 then PC := 20
	11	[4594]	JMP      	20 ; PC := 20
	12	[4594]	LE       	0 K4 R0 ; if 1.000000 > R0 then PC := 20
	13	[4594]	JMP      	20 ; PC := 20
	14	[4594]	LE       	0 R0 K5 ; if R0 > 4.000000 then PC := 20
	15	[4594]	JMP      	20 ; PC := 20
	16	[4595]	GETUPVAL 	R2 U0 ; R2 := U0
	17	[4595]	MOVE     	R3 R0 ; R3 := R0
	18	[4595]	GETGLOBAL	R4 K3 ; R4 := 0x208bb2bc
	19	[4595]	CALL     	R2 3 1 ; R2(R3,R4)
	20	[4598]	RETURN   	R0 1 ; return 

function #138 <?:4600,4608> (16 instructions, 64 bytes at 00000211195C41E0)
2 params, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[4601]	GETGLOBAL	R2 K0 ; R2 := _T
	2	[4601]	SETTABLE 	R2 R0 R1 ; R2[R0] := R1
	3	[4603]	GETGLOBAL	R2 K0 ; R2 := _T
	4	[4603]	GETTABLE 	R2 R2 K1 ; R2 := R2["HudNonQueuedFunctions"]
	5	[4603]	EQ       	0 R2 K2 ; if R2 ~= nil then PC := 10
	6	[4603]	JMP      	10 ; PC := 10
	7	[4604]	GETGLOBAL	R2 K0 ; R2 := _T
	8	[4604]	NEWTABLE 	R3 0 0 ; R3 := {}
	9	[4604]	SETTABLE 	R2 K1 R3 ; R2["HudNonQueuedFunctions"] := R3
	10	[4607]	GETGLOBAL	R2 K3 ; R2 := 0x33bdd652
	11	[4607]	GETTABLE 	R2 R2 K4 ; R2 := R2[0x23d5322f]
	12	[4607]	GETGLOBAL	R3 K0 ; R3 := _T
	13	[4607]	GETTABLE 	R3 R3 K1 ; R3 := R3["HudNonQueuedFunctions"]
	14	[4607]	MOVE     	R4 R0 ; R4 := R0
	15	[4607]	CALL     	R2 3 1 ; R2(R3,R4)
	16	[4608]	RETURN   	R0 1 ; return 

function #139 <?:4610,4653> (148 instructions, 592 bytes at 00000211195C4320)
0 params, 3 slots, 29 upvalues, 0 locals, 31 constants, 25 functions
	1	[4611]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[4611]	CLOSURE  	R1 0 ; R1 := closure(Function #1)
	3	[4611]	GETUPVAL 	R0 U0 ; R0 := U0
	4	[4611]	GETUPVAL 	R0 U1 ; R0 := U1
	5	[4611]	SETTABLE 	R0 K1 R1 ; R0["ShowWeaponPanel"] := R1
	6	[4612]	GETGLOBAL	R0 K0 ; R0 := _T
	7	[4612]	CLOSURE  	R1 1 ; R1 := closure(Function #2)
	8	[4612]	GETUPVAL 	R0 U0 ; R0 := U0
	9	[4612]	GETUPVAL 	R0 U1 ; R0 := U1
	10	[4612]	SETTABLE 	R0 K2 R1 ; R0["HideWeaponPanel"] := R1
	11	[4613]	GETGLOBAL	R0 K0 ; R0 := _T
	12	[4613]	CLOSURE  	R1 2 ; R1 := closure(Function #3)
	13	[4613]	GETUPVAL 	R0 U0 ; R0 := U0
	14	[4613]	GETUPVAL 	R0 U2 ; R0 := U2
	15	[4613]	SETTABLE 	R0 K3 R1 ; R0["ShowAbilityPanel"] := R1
	16	[4614]	GETGLOBAL	R0 K0 ; R0 := _T
	17	[4614]	CLOSURE  	R1 3 ; R1 := closure(Function #4)
	18	[4614]	GETUPVAL 	R0 U0 ; R0 := U0
	19	[4614]	GETUPVAL 	R0 U2 ; R0 := U2
	20	[4614]	SETTABLE 	R0 K4 R1 ; R0["HideAbilityPanel"] := R1
	21	[4615]	GETGLOBAL	R0 K0 ; R0 := _T
	22	[4615]	CLOSURE  	R1 4 ; R1 := closure(Function #5)
	23	[4615]	GETUPVAL 	R0 U0 ; R0 := U0
	24	[4615]	GETUPVAL 	R0 U3 ; R0 := U3
	25	[4615]	SETTABLE 	R0 K5 R1 ; R0[0xaf8af54c] := R1
	26	[4617]	GETGLOBAL	R0 K0 ; R0 := _T
	27	[4617]	CLOSURE  	R1 5 ; R1 := closure(Function #6)
	28	[4617]	GETUPVAL 	R0 U0 ; R0 := U0
	29	[4617]	GETUPVAL 	R0 U4 ; R0 := U4
	30	[4617]	SETTABLE 	R0 K6 R1 ; R0["SetFocusTimer"] := R1
	31	[4619]	GETGLOBAL	R0 K0 ; R0 := _T
	32	[4619]	CLOSURE  	R1 6 ; R1 := closure(Function #7)
	33	[4619]	GETUPVAL 	R0 U0 ; R0 := U0
	34	[4619]	GETUPVAL 	R0 U5 ; R0 := U5
	35	[4619]	SETTABLE 	R0 K7 R1 ; R0["AddLogMessage"] := R1
	36	[4620]	GETGLOBAL	R0 K0 ; R0 := _T
	37	[4620]	CLOSURE  	R1 7 ; R1 := closure(Function #8)
	38	[4620]	GETUPVAL 	R0 U0 ; R0 := U0
	39	[4620]	GETUPVAL 	R0 U6 ; R0 := U6
	40	[4620]	SETTABLE 	R0 K8 R1 ; R0["AddPvpKillMessage"] := R1
	41	[4622]	GETGLOBAL	R0 K0 ; R0 := _T
	42	[4622]	CLOSURE  	R1 8 ; R1 := closure(Function #9)
	43	[4622]	GETUPVAL 	R0 U0 ; R0 := U0
	44	[4622]	GETUPVAL 	R0 U7 ; R0 := U7
	45	[4622]	SETTABLE 	R0 K9 R1 ; R0["ShowImpactMessage"] := R1
	46	[4623]	GETGLOBAL	R0 K0 ; R0 := _T
	47	[4623]	CLOSURE  	R1 9 ; R1 := closure(Function #10)
	48	[4623]	GETUPVAL 	R0 U0 ; R0 := U0
	49	[4623]	GETUPVAL 	R0 U8 ; R0 := U8
	50	[4623]	SETTABLE 	R0 K10 R1 ; R0[0x6b7d8dca] := R1
	51	[4624]	GETGLOBAL	R0 K0 ; R0 := _T
	52	[4624]	CLOSURE  	R1 10 ; R1 := closure(Function #11)
	53	[4624]	GETUPVAL 	R0 U0 ; R0 := U0
	54	[4624]	GETUPVAL 	R0 U9 ; R0 := U9
	55	[4624]	SETTABLE 	R0 K11 R1 ; R0["SetImpactMessageDeltaY"] := R1
	56	[4626]	GETGLOBAL	R0 K0 ; R0 := _T
	57	[4626]	CLOSURE  	R1 11 ; R1 := closure(Function #12)
	58	[4626]	GETUPVAL 	R0 U0 ; R0 := U0
	59	[4626]	GETUPVAL 	R0 U10 ; R0 := U10
	60	[4626]	SETTABLE 	R0 K12 R1 ; R0["VoidTearOverride"] := R1
	61	[4627]	GETGLOBAL	R0 K0 ; R0 := _T
	62	[4627]	CLOSURE  	R1 12 ; R1 := closure(Function #13)
	63	[4627]	GETUPVAL 	R0 U0 ; R0 := U0
	64	[4627]	GETUPVAL 	R0 U11 ; R0 := U11
	65	[4627]	SETTABLE 	R0 K13 R1 ; R0["SetVoidTearVisible"] := R1
	66	[4629]	GETGLOBAL	R0 K0 ; R0 := _T
	67	[4629]	CLOSURE  	R1 13 ; R1 := closure(Function #14)
	68	[4629]	GETUPVAL 	R0 U0 ; R0 := U0
	69	[4629]	GETUPVAL 	R0 U12 ; R0 := U12
	70	[4629]	SETTABLE 	R0 K14 R1 ; R0["MissionCountdownApplyOffsetY"] := R1
	71	[4630]	GETGLOBAL	R0 K0 ; R0 := _T
	72	[4630]	CLOSURE  	R1 14 ; R1 := closure(Function #15)
	73	[4630]	GETUPVAL 	R0 U0 ; R0 := U0
	74	[4630]	GETUPVAL 	R0 U13 ; R0 := U13
	75	[4630]	SETTABLE 	R0 K15 R1 ; R0["AddLevelUp"] := R1
	76	[4631]	GETGLOBAL	R0 K0 ; R0 := _T
	77	[4631]	CLOSURE  	R1 15 ; R1 := closure(Function #16)
	78	[4631]	GETUPVAL 	R0 U0 ; R0 := U0
	79	[4631]	GETUPVAL 	R0 U14 ; R0 := U14
	80	[4631]	SETTABLE 	R0 K16 R1 ; R0["SetHudPartialFade"] := R1
	81	[4633]	GETGLOBAL	R0 K0 ; R0 := _T
	82	[4633]	CLOSURE  	R1 16 ; R1 := closure(Function #17)
	83	[4633]	GETUPVAL 	R0 U0 ; R0 := U0
	84	[4633]	GETUPVAL 	R0 U15 ; R0 := U15
	85	[4633]	SETTABLE 	R0 K17 R1 ; R0["SetAbilityActiveAnim"] := R1
	86	[4634]	GETGLOBAL	R0 K0 ; R0 := _T
	87	[4634]	CLOSURE  	R1 17 ; R1 := closure(Function #18)
	88	[4634]	GETUPVAL 	R0 U0 ; R0 := U0
	89	[4634]	GETUPVAL 	R0 U16 ; R0 := U16
	90	[4634]	SETTABLE 	R0 K18 R1 ; R0["SetAbilityCastable"] := R1
	91	[4636]	GETGLOBAL	R0 K0 ; R0 := _T
	92	[4636]	CLOSURE  	R1 18 ; R1 := closure(Function #19)
	93	[4636]	GETUPVAL 	R0 U0 ; R0 := U0
	94	[4636]	GETUPVAL 	R0 U17 ; R0 := U17
	95	[4636]	SETTABLE 	R0 K19 R1 ; R0["ForceHideMiniMap"] := R1
	96	[4637]	GETGLOBAL	R0 K0 ; R0 := _T
	97	[4637]	CLOSURE  	R1 19 ; R1 := closure(Function #20)
	98	[4637]	GETUPVAL 	R0 U0 ; R0 := U0
	99	[4637]	GETUPVAL 	R0 U18 ; R0 := U18
	100	[4637]	SETTABLE 	R0 K20 R1 ; R0[0x76626452] := R1
	101	[4639]	GETGLOBAL	R0 K0 ; R0 := _T
	102	[4639]	CLOSURE  	R1 20 ; R1 := closure(Function #21)
	103	[4639]	GETUPVAL 	R0 U0 ; R0 := U0
	104	[4639]	GETUPVAL 	R0 U19 ; R0 := U19
	105	[4639]	SETTABLE 	R0 K21 R1 ; R0["RemoveHudTracker"] := R1
	106	[4641]	GETGLOBAL	R0 K0 ; R0 := _T
	107	[4641]	CLOSURE  	R1 21 ; R1 := closure(Function #22)
	108	[4641]	GETUPVAL 	R0 U0 ; R0 := U0
	109	[4641]	GETUPVAL 	R0 U20 ; R0 := U20
	110	[4641]	SETTABLE 	R0 K22 R1 ; R0["SetAbilityCharge"] := R1
	111	[4643]	GETGLOBAL	R0 K0 ; R0 := _T
	112	[4643]	CLOSURE  	R1 22 ; R1 := closure(Function #23)
	113	[4643]	GETUPVAL 	R0 U0 ; R0 := U0
	114	[4643]	GETUPVAL 	R0 U21 ; R0 := U21
	115	[4643]	SETTABLE 	R0 K23 R1 ; R0["PulseAbilityFx"] := R1
	116	[4646]	GETUPVAL 	R0 U22 ; R0 := U22
	117	[4646]	LOADK    	R1 K24 ; R1 := "SetAbilityTimer"
	118	[4646]	GETUPVAL 	R2 U23 ; R2 := U23
	119	[4646]	CALL     	R0 3 1 ; R0(R1,R2)
	120	[4647]	GETUPVAL 	R0 U22 ; R0 := U22
	121	[4647]	LOADK    	R1 K25 ; R1 := "AddAbilityTimer"
	122	[4647]	GETUPVAL 	R2 U24 ; R2 := U24
	123	[4647]	CALL     	R0 3 1 ; R0(R1,R2)
	124	[4648]	GETUPVAL 	R0 U22 ; R0 := U22
	125	[4648]	LOADK    	R1 K26 ; R1 := "HUD_GetAnchorMgr"
	126	[4648]	CLOSURE  	R2 23 ; R2 := closure(Function #24)
	127	[4648]	GETUPVAL 	R0 U25 ; R0 := U25
	128	[4648]	CALL     	R0 3 1 ; R0(R1,R2)
	129	[4649]	GETUPVAL 	R0 U22 ; R0 := U22
	130	[4649]	LOADK    	R1 K27 ; R1 := "GetHudCustomizationColor"
	131	[4649]	GETUPVAL 	R2 U26 ; R2 := U26
	132	[4649]	CALL     	R0 3 1 ; R0(R1,R2)
	133	[4650]	GETUPVAL 	R0 U22 ; R0 := U22
	134	[4650]	LOADK    	R1 K28 ; R1 := "AddHudTracker"
	135	[4650]	GETUPVAL 	R2 U27 ; R2 := U27
	136	[4650]	GETTABLE 	R2 R2 K28 ; R2 := R2["AddHudTracker"]
	137	[4650]	CALL     	R0 3 1 ; R0(R1,R2)
	138	[4651]	GETUPVAL 	R0 U22 ; R0 := U22
	139	[4651]	LOADK    	R1 K29 ; R1 := "GetHudTracker"
	140	[4651]	GETUPVAL 	R2 U27 ; R2 := U27
	141	[4651]	GETTABLE 	R2 R2 K29 ; R2 := R2["GetHudTracker"]
	142	[4651]	CALL     	R0 3 1 ; R0(R1,R2)
	143	[4652]	GETUPVAL 	R0 U22 ; R0 := U22
	144	[4652]	LOADK    	R1 K30 ; R1 := "GetHudScale"
	145	[4652]	CLOSURE  	R2 24 ; R2 := closure(Function #25)
	146	[4652]	GETUPVAL 	R0 U28 ; R0 := U28
	147	[4652]	CALL     	R0 3 1 ; R0(R1,R2)
	148	[4653]	RETURN   	R0 1 ; return 

function #140 <?:4655,4752> (511 instructions, 2044 bytes at 000002117ED15800)
0 params, 6 slots, 4 upvalues, 0 locals, 93 constants, 0 functions
	1	[4656]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[4656]	GETUPVAL 	R1 U1 ; R1 := U1
	3	[4656]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x5d10207d]
	4	[4656]	LOADK    	R2 := 2.000000
	5	[4656]	OP_LOADBOOL	R3 1 0 ; R3 := true
	6	[4656]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	7	[4656]	SETTABLE 	R0 K0 R1 ; R0["Background1"] := R1
	8	[4657]	GETUPVAL 	R0 U0 ; R0 := U0
	9	[4657]	GETUPVAL 	R1 U1 ; R1 := U1
	10	[4657]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x5d10207d]
	11	[4657]	LOADK    	R2 := 9.000000
	12	[4657]	OP_LOADBOOL	R3 1 0 ; R3 := true
	13	[4657]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	14	[4657]	SETTABLE 	R0 K3 R1 ; R0["FloatingContent"] := R1
	15	[4658]	GETUPVAL 	R0 U0 ; R0 := U0
	16	[4658]	GETUPVAL 	R1 U1 ; R1 := U1
	17	[4658]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x5d10207d]
	18	[4658]	LOADK    	R2 := 10.000000
	19	[4658]	OP_LOADBOOL	R3 1 0 ; R3 := true
	20	[4658]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	21	[4658]	SETTABLE 	R0 K4 R1 ; R0["FloatingContentHighlight"] := R1
	22	[4659]	GETUPVAL 	R0 U0 ; R0 := U0
	23	[4659]	GETUPVAL 	R1 U1 ; R1 := U1
	24	[4659]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x5d10207d]
	25	[4659]	LOADK    	R2 := 12.000000
	26	[4659]	OP_LOADBOOL	R3 1 0 ; R3 := true
	27	[4659]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	28	[4659]	SETTABLE 	R0 K5 R1 ; R0["Negative"] := R1
	29	[4660]	GETUPVAL 	R0 U0 ; R0 := U0
	30	[4660]	GETUPVAL 	R1 U2 ; R1 := U2
	31	[4660]	GETTABLE 	R1 R1 K7 ; R1 := R1[0x9f57dd7d]
	32	[4660]	GETUPVAL 	R2 U0 ; R2 := U0
	33	[4660]	GETTABLE 	R2 R2 K3 ; R2 := R2["FloatingContent"]
	34	[4660]	CALL     	R1 2 2 ; R1 := R1(R2)
	35	[4660]	SETTABLE 	R0 K6 R1 ; R0["FloatingContentHex"] := R1
	36	[4661]	GETUPVAL 	R0 U0 ; R0 := U0
	37	[4661]	GETUPVAL 	R1 U2 ; R1 := U2
	38	[4661]	GETTABLE 	R1 R1 K7 ; R1 := R1[0x9f57dd7d]
	39	[4661]	GETUPVAL 	R2 U0 ; R2 := U0
	40	[4661]	GETTABLE 	R2 R2 K4 ; R2 := R2["FloatingContentHighlight"]
	41	[4661]	CALL     	R1 2 2 ; R1 := R1(R2)
	42	[4661]	SETTABLE 	R0 K8 R1 ; R0["FloatingContentHighlightHex"] := R1
	43	[4663]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	44	[4663]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	45	[4663]	LOADK    	R2 K11 ; R2 := "RevivePanel.HoldProgress.Backer"
	46	[4663]	LOADK    	R3 := 9.000000
	47	[4663]	GETUPVAL 	R4 U0 ; R4 := U0
	48	[4663]	GETTABLE 	R4 R4 K3 ; R4 := R4["FloatingContent"]
	49	[4663]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	50	[4664]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	51	[4664]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	52	[4664]	LOADK    	R2 K11 ; R2 := "RevivePanel.HoldProgress.Backer"
	53	[4664]	LOADK    	R3 := 10.000000
	54	[4664]	LOADK    	R4 := 40.000000
	55	[4664]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	56	[4665]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	57	[4665]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	58	[4665]	LOADK    	R2 K12 ; R2 := "RevivePanel.HoldProgress.Diamond"
	59	[4665]	LOADK    	R3 := 9.000000
	60	[4665]	GETUPVAL 	R4 U0 ; R4 := U0
	61	[4665]	GETTABLE 	R4 R4 K0 ; R4 := R4["Background1"]
	62	[4665]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	63	[4666]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	64	[4666]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	65	[4666]	LOADK    	R2 K12 ; R2 := "RevivePanel.HoldProgress.Diamond"
	66	[4666]	LOADK    	R3 := 10.000000
	67	[4666]	LOADK    	R4 := 80.000000
	68	[4666]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	69	[4667]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	70	[4667]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	71	[4667]	LOADK    	R2 K13 ; R2 := "RevivePanel.Shadow"
	72	[4667]	LOADK    	R3 := 9.000000
	73	[4667]	GETUPVAL 	R4 U0 ; R4 := U0
	74	[4667]	GETTABLE 	R4 R4 K0 ; R4 := R4["Background1"]
	75	[4667]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	76	[4669]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	77	[4669]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	78	[4669]	LOADK    	R2 K14 ; R2 := "RevivePanel.RevivesLeft"
	79	[4669]	LOADK    	R3 := 36.000000
	80	[4669]	GETUPVAL 	R4 U0 ; R4 := U0
	81	[4669]	GETTABLE 	R4 R4 K4 ; R4 := R4["FloatingContentHighlight"]
	82	[4669]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	83	[4670]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	84	[4670]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	85	[4670]	LOADK    	R2 K15 ; R2 := "RevivePanel.Callout"
	86	[4670]	LOADK    	R3 := 9.000000
	87	[4670]	GETUPVAL 	R4 U0 ; R4 := U0
	88	[4670]	GETTABLE 	R4 R4 K3 ; R4 := R4["FloatingContent"]
	89	[4670]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	90	[4672]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	91	[4672]	SELF     	R0 R0 K16 ; R1 := R0; R0 := R0[0xaade900e]
	92	[4672]	LOADK    	R2 K14 ; R2 := "RevivePanel.RevivesLeft"
	93	[4672]	LOADK    	R3 := 11.000000
	94	[4672]	OP_LOADBOOL	R4 1 0 ; R4 := true
	95	[4672]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	96	[4673]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	97	[4673]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	98	[4673]	LOADK    	R2 K17 ; R2 := "RevivePanel.HoldProgress.Fill"
	99	[4673]	LOADK    	R3 := 9.000000
	100	[4673]	GETUPVAL 	R4 U0 ; R4 := U0
	101	[4673]	GETTABLE 	R4 R4 K4 ; R4 := R4["FloatingContentHighlight"]
	102	[4673]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	103	[4674]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	104	[4674]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	105	[4674]	LOADK    	R2 K18 ; R2 := "RevivePanel.HoldProgress.IconContainer.Icon"
	106	[4674]	LOADK    	R3 := 9.000000
	107	[4674]	GETUPVAL 	R4 U0 ; R4 := U0
	108	[4674]	GETTABLE 	R4 R4 K4 ; R4 := R4["FloatingContentHighlight"]
	109	[4674]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	110	[4675]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	111	[4675]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	112	[4675]	LOADK    	R2 K19 ; R2 := "RevivePanel.HoldProgress.IconContainer.Blur"
	113	[4675]	LOADK    	R3 := 9.000000
	114	[4675]	GETUPVAL 	R4 U0 ; R4 := U0
	115	[4675]	GETTABLE 	R4 R4 K4 ; R4 := R4["FloatingContentHighlight"]
	116	[4675]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	117	[4676]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	118	[4676]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	119	[4676]	LOADK    	R2 K20 ; R2 := "RevivePanel.HoldProgress.IconContainer.IconShadow"
	120	[4676]	LOADK    	R3 := 9.000000
	121	[4676]	GETUPVAL 	R4 U0 ; R4 := U0
	122	[4676]	GETTABLE 	R4 R4 K0 ; R4 := R4["Background1"]
	123	[4676]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	124	[4677]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	125	[4677]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	126	[4677]	LOADK    	R2 K20 ; R2 := "RevivePanel.HoldProgress.IconContainer.IconShadow"
	127	[4677]	LOADK    	R3 := 10.000000
	128	[4677]	LOADK    	R4 := 80.000000
	129	[4677]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	130	[4679]	GETGLOBAL	R0 K21 ; R0 := 0xe72d2edb
	131	[4679]	EQ       	0 R0 K22 ; if R0 ~= 1.000000 then PC := 260
	132	[4679]	JMP      	260 ; PC := 260
	133	[4680]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	134	[4680]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	135	[4680]	LOADK    	R2 K23 ; R2 := "GrineerDeco"
	136	[4680]	LOADK    	R3 := 9.000000
	137	[4680]	LOADK    	R4 K24 ; R4 := 15954454.000000
	138	[4680]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	139	[4681]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	140	[4681]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	141	[4681]	LOADK    	R2 K25 ; R2 := "MiniMapContainer.MapBorders"
	142	[4681]	LOADK    	R3 := 9.000000
	143	[4681]	LOADK    	R4 K24 ; R4 := 15954454.000000
	144	[4681]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	145	[4682]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	146	[4682]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	147	[4682]	LOADK    	R2 K26 ; R2 := "ImpactMessage.DetailRight"
	148	[4682]	LOADK    	R3 := 9.000000
	149	[4682]	LOADK    	R4 K24 ; R4 := 15954454.000000
	150	[4682]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	151	[4683]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	152	[4683]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	153	[4683]	LOADK    	R2 K27 ; R2 := "ImpactMessage.DetailLeft"
	154	[4683]	LOADK    	R3 := 9.000000
	155	[4683]	LOADK    	R4 K24 ; R4 := 15954454.000000
	156	[4683]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	157	[4684]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	158	[4684]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	159	[4684]	LOADK    	R2 K28 ; R2 := "HealthAndShield.HeartRateBacker"
	160	[4684]	LOADK    	R3 := 9.000000
	161	[4684]	LOADK    	R4 K29 ; R4 := 11025182.000000
	162	[4684]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	163	[4685]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	164	[4685]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	165	[4685]	LOADK    	R2 K30 ; R2 := "HealthAndShield.HealthBacker"
	166	[4685]	LOADK    	R3 := 9.000000
	167	[4685]	LOADK    	R4 K24 ; R4 := 15954454.000000
	168	[4685]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	169	[4686]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	170	[4686]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	171	[4686]	LOADK    	R2 K31 ; R2 := "HealthAndShield.HealthFrame"
	172	[4686]	LOADK    	R3 := 9.000000
	173	[4686]	LOADK    	R4 K24 ; R4 := 15954454.000000
	174	[4686]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	175	[4687]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	176	[4687]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	177	[4687]	LOADK    	R2 K32 ; R2 := "HealthAndShield.PlayerHealth"
	178	[4687]	LOADK    	R3 := 9.000000
	179	[4687]	LOADK    	R4 K33 ; R4 := 15844670.000000
	180	[4687]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	181	[4688]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	182	[4688]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	183	[4688]	LOADK    	R2 K34 ; R2 := "WeaponFrame.WeaponFrame"
	184	[4688]	LOADK    	R3 := 9.000000
	185	[4688]	LOADK    	R4 K24 ; R4 := 15954454.000000
	186	[4688]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	187	[4689]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	188	[4689]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	189	[4689]	LOADK    	R2 K35 ; R2 := "WeaponFrame.WeaponBacker"
	190	[4689]	LOADK    	R3 := 9.000000
	191	[4689]	LOADK    	R4 K24 ; R4 := 15954454.000000
	192	[4689]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	193	[4690]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	194	[4690]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	195	[4690]	LOADK    	R2 K36 ; R2 := "WeaponFrame.AmmoBar.Fill"
	196	[4690]	LOADK    	R3 := 9.000000
	197	[4690]	LOADK    	R4 K24 ; R4 := 15954454.000000
	198	[4690]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	199	[4691]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	200	[4691]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	201	[4691]	LOADK    	R2 K37 ; R2 := "WeaponFrame.AmmoBar.Bg"
	202	[4691]	LOADK    	R3 := 9.000000
	203	[4691]	LOADK    	R4 K38 ; R4 := 10197915.000000
	204	[4691]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	205	[4692]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	206	[4692]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	207	[4692]	LOADK    	R2 K39 ; R2 := "WeaponFrame.AmmoAvailable"
	208	[4692]	LOADK    	R3 := 9.000000
	209	[4692]	LOADK    	R4 K24 ; R4 := 15954454.000000
	210	[4692]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	211	[4693]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	212	[4693]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	213	[4693]	LOADK    	R2 K40 ; R2 := "WeaponFrame.AmmoRemaining"
	214	[4693]	LOADK    	R3 := 9.000000
	215	[4693]	LOADK    	R4 K33 ; R4 := 15844670.000000
	216	[4693]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	217	[4694]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	218	[4694]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	219	[4694]	LOADK    	R2 K41 ; R2 := "GrenadeComponent.Grenade"
	220	[4694]	LOADK    	R3 := 9.000000
	221	[4694]	LOADK    	R4 K33 ; R4 := 15844670.000000
	222	[4694]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	223	[4695]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	224	[4695]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	225	[4695]	LOADK    	R2 K42 ; R2 := "GrenadeComponent.Grenade1.Fill"
	226	[4695]	LOADK    	R3 := 9.000000
	227	[4695]	LOADK    	R4 K33 ; R4 := 15844670.000000
	228	[4695]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	229	[4696]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	230	[4696]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	231	[4696]	LOADK    	R2 K43 ; R2 := "GrenadeComponent.Grenade2.Fill"
	232	[4696]	LOADK    	R3 := 9.000000
	233	[4696]	LOADK    	R4 K33 ; R4 := 15844670.000000
	234	[4696]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	235	[4697]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	236	[4697]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	237	[4697]	LOADK    	R2 K44 ; R2 := "GrenadeComponent.Grenade3.Fill"
	238	[4697]	LOADK    	R3 := 9.000000
	239	[4697]	LOADK    	R4 K33 ; R4 := 15844670.000000
	240	[4697]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	241	[4698]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	242	[4698]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	243	[4698]	LOADK    	R2 K45 ; R2 := "GrenadeComponent.Grenade4.Fill"
	244	[4698]	LOADK    	R3 := 9.000000
	245	[4698]	LOADK    	R4 K33 ; R4 := 15844670.000000
	246	[4698]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	247	[4699]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	248	[4699]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	249	[4699]	LOADK    	R2 K46 ; R2 := "CoverPanel.Divider"
	250	[4699]	LOADK    	R3 := 9.000000
	251	[4699]	LOADK    	R4 K24 ; R4 := 15954454.000000
	252	[4699]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	253	[4700]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	254	[4700]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	255	[4700]	LOADK    	R2 K47 ; R2 := "CoverPanel.Cover"
	256	[4700]	LOADK    	R3 := 9.000000
	257	[4700]	LOADK    	R4 K33 ; R4 := 15844670.000000
	258	[4700]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	259	[4700]	JMP      	511 ; PC := 511
	260	[4701]	GETGLOBAL	R0 K21 ; R0 := 0xe72d2edb
	261	[4701]	EQ       	0 R0 K48 ; if R0 ~= 3.000000 then PC := 339
	262	[4701]	JMP      	339 ; PC := 339
	263	[4702]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	264	[4702]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	265	[4702]	LOADK    	R2 K49 ; R2 := "TeshinDeco"
	266	[4702]	LOADK    	R3 := 9.000000
	267	[4702]	LOADK    	R4 K50 ; R4 := 8942416.000000
	268	[4702]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	269	[4703]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	270	[4703]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	271	[4703]	LOADK    	R2 K25 ; R2 := "MiniMapContainer.MapBorders"
	272	[4703]	LOADK    	R3 := 9.000000
	273	[4703]	LOADK    	R4 K50 ; R4 := 8942416.000000
	274	[4703]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	275	[4704]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	276	[4704]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	277	[4704]	LOADK    	R2 K31 ; R2 := "HealthAndShield.HealthFrame"
	278	[4704]	LOADK    	R3 := 9.000000
	279	[4704]	LOADK    	R4 K50 ; R4 := 8942416.000000
	280	[4704]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	281	[4705]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	282	[4705]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	283	[4705]	LOADK    	R2 K32 ; R2 := "HealthAndShield.PlayerHealth"
	284	[4705]	LOADK    	R3 := 9.000000
	285	[4705]	LOADK    	R4 K51 ; R4 := 9150127.000000
	286	[4705]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	287	[4706]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	288	[4706]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	289	[4706]	LOADK    	R2 K52 ; R2 := "HealthAndShield.PlayerShield"
	290	[4706]	LOADK    	R3 := 9.000000
	291	[4706]	LOADK    	R4 K53 ; R4 := 16769169.000000
	292	[4706]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	293	[4707]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	294	[4707]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	295	[4707]	LOADK    	R2 K54 ; R2 := "HealthAndShield.HealthLeafDeco"
	296	[4707]	LOADK    	R3 := 9.000000
	297	[4707]	LOADK    	R4 K51 ; R4 := 9150127.000000
	298	[4707]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	299	[4708]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	300	[4708]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	301	[4708]	LOADK    	R2 K55 ; R2 := "HealthAndShield.ShieldLeafDeco"
	302	[4708]	LOADK    	R3 := 9.000000
	303	[4708]	LOADK    	R4 K53 ; R4 := 16769169.000000
	304	[4708]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	305	[4717]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	306	[4717]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	307	[4717]	LOADK    	R2 K56 ; R2 := "StancePanel.Details"
	308	[4717]	LOADK    	R3 := 9.000000
	309	[4717]	LOADK    	R4 K50 ; R4 := 8942416.000000
	310	[4717]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	311	[4718]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	312	[4718]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	313	[4718]	LOADK    	R2 K57 ; R2 := "ReloadTimer.ReloadRing"
	314	[4718]	LOADK    	R3 := 10.000000
	315	[4718]	LOADK    	R4 := 70.000000
	316	[4718]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	317	[4719]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	318	[4719]	SELF     	R0 R0 K58 ; R1 := R0; R0 := R0[0xf64b7262]
	319	[4719]	LOADK    	R2 K59 ; R2 := "StancePanel.StanceComponent.Stance1"
	320	[4719]	LOADK    	R3 K60 ; R3 := "IconGlow"
	321	[4719]	LOADK    	R4 := 9.000000
	322	[4719]	LOADK    	R5 K61 ; R5 := 15299384.000000
	323	[4719]	CALL     	R0 6 1 ; R0(R1,R2,R3,R4,R5)
	324	[4720]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	325	[4720]	SELF     	R0 R0 K58 ; R1 := R0; R0 := R0[0xf64b7262]
	326	[4720]	LOADK    	R2 K62 ; R2 := "StancePanel.StanceComponent.Stance2"
	327	[4720]	LOADK    	R3 K60 ; R3 := "IconGlow"
	328	[4720]	LOADK    	R4 := 9.000000
	329	[4720]	LOADK    	R5 K63 ; R5 := 10081506.000000
	330	[4720]	CALL     	R0 6 1 ; R0(R1,R2,R3,R4,R5)
	331	[4721]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	332	[4721]	SELF     	R0 R0 K58 ; R1 := R0; R0 := R0[0xf64b7262]
	333	[4721]	LOADK    	R2 K64 ; R2 := "StancePanel.StanceComponent.Stance3"
	334	[4721]	LOADK    	R3 K60 ; R3 := "IconGlow"
	335	[4721]	LOADK    	R4 := 9.000000
	336	[4721]	LOADK    	R5 K65 ; R5 := 12032498.000000
	337	[4721]	CALL     	R0 6 1 ; R0(R1,R2,R3,R4,R5)
	338	[4721]	JMP      	511 ; PC := 511
	339	[4722]	GETGLOBAL	R0 K21 ; R0 := 0xe72d2edb
	340	[4722]	EQ       	0 R0 K66 ; if R0 ~= 2.000000 then PC := 476
	341	[4722]	JMP      	476 ; PC := 476
	342	[4723]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	343	[4723]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	344	[4723]	LOADK    	R2 K67 ; R2 := "CorpusDeco"
	345	[4723]	LOADK    	R3 := 9.000000
	346	[4723]	LOADK    	R4 K68 ; R4 := 2779007.000000
	347	[4723]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	348	[4724]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	349	[4724]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	350	[4724]	LOADK    	R2 K69 ; R2 := "Reticle"
	351	[4724]	LOADK    	R3 := 9.000000
	352	[4724]	GETUPVAL 	R4 U3 ; R4 := U3
	353	[4724]	GETTABLE 	R4 R4 K69 ; R4 := R4["Reticle"]
	354	[4724]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	355	[4725]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	356	[4725]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	357	[4725]	LOADK    	R2 K25 ; R2 := "MiniMapContainer.MapBorders"
	358	[4725]	LOADK    	R3 := 9.000000
	359	[4725]	LOADK    	R4 K68 ; R4 := 2779007.000000
	360	[4725]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	361	[4726]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	362	[4726]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	363	[4726]	LOADK    	R2 K32 ; R2 := "HealthAndShield.PlayerHealth"
	364	[4726]	LOADK    	R3 := 9.000000
	365	[4726]	LOADK    	R4 K70 ; R4 := 12284689.000000
	366	[4726]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	367	[4727]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	368	[4727]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	369	[4727]	LOADK    	R2 K52 ; R2 := "HealthAndShield.PlayerShield"
	370	[4727]	LOADK    	R3 := 9.000000
	371	[4727]	LOADK    	R4 K71 ; R4 := 65535.000000
	372	[4727]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	373	[4728]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	374	[4728]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	375	[4728]	LOADK    	R2 K31 ; R2 := "HealthAndShield.HealthFrame"
	376	[4728]	LOADK    	R3 := 9.000000
	377	[4728]	LOADK    	R4 K68 ; R4 := 2779007.000000
	378	[4728]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	379	[4729]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	380	[4729]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	381	[4729]	LOADK    	R2 K72 ; R2 := "HealthAndShield.HealthEquals"
	382	[4729]	LOADK    	R3 := 9.000000
	383	[4729]	LOADK    	R4 K71 ; R4 := 65535.000000
	384	[4729]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	385	[4730]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	386	[4730]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	387	[4730]	LOADK    	R2 K35 ; R2 := "WeaponFrame.WeaponBacker"
	388	[4730]	LOADK    	R3 := 9.000000
	389	[4730]	LOADK    	R4 K68 ; R4 := 2779007.000000
	390	[4730]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	391	[4731]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	392	[4731]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	393	[4731]	LOADK    	R2 K36 ; R2 := "WeaponFrame.AmmoBar.Fill"
	394	[4731]	LOADK    	R3 := 9.000000
	395	[4731]	LOADK    	R4 K70 ; R4 := 12284689.000000
	396	[4731]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	397	[4732]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	398	[4732]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	399	[4732]	LOADK    	R2 K37 ; R2 := "WeaponFrame.AmmoBar.Bg"
	400	[4732]	LOADK    	R3 := 9.000000
	401	[4732]	LOADK    	R4 K71 ; R4 := 65535.000000
	402	[4732]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	403	[4733]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	404	[4733]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	405	[4733]	LOADK    	R2 K39 ; R2 := "WeaponFrame.AmmoAvailable"
	406	[4733]	LOADK    	R3 := 9.000000
	407	[4733]	LOADK    	R4 K71 ; R4 := 65535.000000
	408	[4733]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	409	[4734]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	410	[4734]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	411	[4734]	LOADK    	R2 K40 ; R2 := "WeaponFrame.AmmoRemaining"
	412	[4734]	LOADK    	R3 := 9.000000
	413	[4734]	LOADK    	R4 K70 ; R4 := 12284689.000000
	414	[4734]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	415	[4735]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	416	[4735]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	417	[4735]	LOADK    	R2 K73 ; R2 := "StockTicker.Numbers"
	418	[4735]	LOADK    	R3 := 9.000000
	419	[4735]	LOADK    	R4 K71 ; R4 := 65535.000000
	420	[4735]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	421	[4736]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	422	[4736]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	423	[4736]	LOADK    	R2 K74 ; R2 := "StockTicker.Backer"
	424	[4736]	LOADK    	R3 := 9.000000
	425	[4736]	LOADK    	R4 K75 ; R4 := 5277377.000000
	426	[4736]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	427	[4737]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	428	[4737]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	429	[4737]	LOADK    	R2 K76 ; R2 := "MoaComponent.MoaCompContainer"
	430	[4737]	LOADK    	R3 := 9.000000
	431	[4737]	LOADK    	R4 K77 ; R4 := 4287645.000000
	432	[4737]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	433	[4738]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	434	[4738]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	435	[4738]	LOADK    	R2 K78 ; R2 := "MoaComponent.MoaCompDetails"
	436	[4738]	LOADK    	R3 := 9.000000
	437	[4738]	LOADK    	R4 K79 ; R4 := 6147545.000000
	438	[4738]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	439	[4739]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	440	[4739]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	441	[4739]	LOADK    	R2 K80 ; R2 := "MoaComponent.SummonMoa1.Icon"
	442	[4739]	LOADK    	R3 := 9.000000
	443	[4739]	LOADK    	R4 K79 ; R4 := 6147545.000000
	444	[4739]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	445	[4740]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	446	[4740]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	447	[4740]	LOADK    	R2 K81 ; R2 := "MoaComponent.SummonMoa2.Icon"
	448	[4740]	LOADK    	R3 := 9.000000
	449	[4740]	LOADK    	R4 K79 ; R4 := 6147545.000000
	450	[4740]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	451	[4741]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	452	[4741]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	453	[4741]	LOADK    	R2 K82 ; R2 := "MoaComponent.SummonMoa3.Icon"
	454	[4741]	LOADK    	R3 := 9.000000
	455	[4741]	LOADK    	R4 K79 ; R4 := 6147545.000000
	456	[4741]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	457	[4742]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	458	[4742]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	459	[4742]	LOADK    	R2 K83 ; R2 := "MoaComponent.SummonMoa1.IconGlow"
	460	[4742]	LOADK    	R3 := 9.000000
	461	[4742]	LOADK    	R4 K77 ; R4 := 4287645.000000
	462	[4742]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	463	[4743]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	464	[4743]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	465	[4743]	LOADK    	R2 K84 ; R2 := "MoaComponent.SummonMoa2.IconGlow"
	466	[4743]	LOADK    	R3 := 9.000000
	467	[4743]	LOADK    	R4 K77 ; R4 := 4287645.000000
	468	[4743]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	469	[4744]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	470	[4744]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	471	[4744]	LOADK    	R2 K85 ; R2 := "MoaComponent.SummonMoa3.IconGlow"
	472	[4744]	LOADK    	R3 := 9.000000
	473	[4744]	LOADK    	R4 K77 ; R4 := 4287645.000000
	474	[4744]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	475	[4744]	JMP      	511 ; PC := 511
	476	[4745]	GETGLOBAL	R0 K21 ; R0 := 0xe72d2edb
	477	[4745]	EQ       	0 R0 K86 ; if R0 ~= 4.000000 then PC := 511
	478	[4745]	JMP      	511 ; PC := 511
	479	[4746]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	480	[4746]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	481	[4746]	LOADK    	R2 K25 ; R2 := "MiniMapContainer.MapBorders"
	482	[4746]	LOADK    	R3 := 9.000000
	483	[4746]	LOADK    	R4 K87 ; R4 := 6377812.000000
	484	[4746]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	485	[4747]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	486	[4747]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	487	[4747]	LOADK    	R2 K31 ; R2 := "HealthAndShield.HealthFrame"
	488	[4747]	LOADK    	R3 := 9.000000
	489	[4747]	LOADK    	R4 K87 ; R4 := 6377812.000000
	490	[4747]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	491	[4748]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	492	[4748]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	493	[4748]	LOADK    	R2 K88 ; R2 := "AbilityPanel.Details"
	494	[4748]	LOADK    	R3 := 9.000000
	495	[4748]	LOADK    	R4 K87 ; R4 := 6377812.000000
	496	[4748]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	497	[4749]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	498	[4749]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	499	[4749]	LOADK    	R2 K89 ; R2 := "HealthAndShield.PlayerShield.Container"
	500	[4749]	LOADK    	R3 := 9.000000
	501	[4749]	GETUPVAL 	R4 U3 ; R4 := U3
	502	[4749]	GETTABLE 	R4 R4 K90 ; R4 := R4["Shield"]
	503	[4749]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	504	[4750]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	505	[4750]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x67bc869f]
	506	[4750]	LOADK    	R2 K91 ; R2 := "HealthAndShield.PlayerHealth.Container"
	507	[4750]	LOADK    	R3 := 9.000000
	508	[4750]	GETUPVAL 	R4 U3 ; R4 := U3
	509	[4750]	GETTABLE 	R4 R4 K92 ; R4 := R4["Health"]
	510	[4750]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	511	[4752]	RETURN   	R0 1 ; return 

function #141 <?:4755,4792> (166 instructions, 664 bytes at 0000021192093840)
4 params, 14 slots, 4 upvalues, 0 locals, 38 constants, 0 functions
	1	[4756]	GETGLOBAL	R4 K0 ; R4 := 0x03f57322
	2	[4756]	MOVE     	R5 R2 ; R5 := R2
	3	[4756]	CALL     	R4 2 2 ; R4 := R4(R5)
	4	[4756]	LT       	1 K1 R4 ; if 0.000000 < R4 then PC := 7
	5	[4756]	JMP      	7 ; PC := 7
	6	[4756]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 7
	7	[4756]	OP_LOADBOOL	R4 1 0 ; R4 := true
	8	[4757]	OP_LOADBOOL	R5 1 0 ; R5 := true
	9	[4758]	GETGLOBAL	R6 K2 ; R6 := 0x7b998233
	10	[4758]	GETUPVAL 	R7 U0 ; R7 := U0
	11	[4758]	GETTABLE 	R7 R7 K3 ; R7 := R7["ptr"]
	12	[4758]	CALL     	R6 2 2 ; R6 := R6(R7)
	13	[4758]	TEST     	R6 0 ; if not R6 then PC := 17
	14	[4758]	JMP      	17 ; PC := 17
	15	[4759]	GETUPVAL 	R6 U1 ; R6 := U1
	16	[4759]	CALL     	R6 1 1 ; R6()
	17	[4763]	GETGLOBAL	R6 K2 ; R6 := 0x7b998233
	18	[4763]	GETUPVAL 	R7 U0 ; R7 := U0
	19	[4763]	GETTABLE 	R7 R7 K3 ; R7 := R7["ptr"]
	20	[4763]	CALL     	R6 2 2 ; R6 := R6(R7)
	21	[4763]	TEST     	R6 1 ; if R6 then PC := 40
	22	[4763]	JMP      	40 ; PC := 40
	23	[4764]	GETUPVAL 	R6 U0 ; R6 := U0
	24	[4764]	GETTABLE 	R6 R6 K3 ; R6 := R6["ptr"]
	25	[4764]	SELF     	R6 R6 K4 ; R7 := R6; R6 := R6[0x870e163a]
	26	[4764]	CALL     	R6 2 2 ; R6 := R6(R7)
	27	[4765]	SELF     	R7 R6 K5 ; R8 := R6; R7 := R6[0x9f4a6b68]
	28	[4765]	CALL     	R7 2 2 ; R7 := R7(R8)
	29	[4765]	TEST     	R7 0 ; if not R7 then PC := 39
	30	[4765]	JMP      	39 ; PC := 39
	31	[4765]	SELF     	R7 R6 K6 ; R8 := R6; R7 := R6[0x25932e14]
	32	[4765]	CALL     	R7 2 2 ; R7 := R7(R8)
	33	[4765]	EQ       	0 R7 K7 ; if R7 ~= nil then PC := 40
	34	[4765]	JMP      	40 ; PC := 40
	35	[4765]	SELF     	R7 R6 K8 ; R8 := R6; R7 := R6[0x92df6357]
	36	[4765]	CALL     	R7 2 2 ; R7 := R7(R8)
	37	[4765]	EQ       	0 R7 K1 ; if R7 ~= 0.000000 then PC := 40
	38	[4765]	JMP      	40 ; PC := 40
	39	[4766]	OP_LOADBOOL	R5 0 0 ; R5 := false
	40	[4770]	GETGLOBAL	R7 K9 ; R7 := 0xae91e43b
	41	[4770]	SELF     	R7 R7 K10 ; R8 := R7; R7 := R7[0xaade900e]
	42	[4770]	LOADK    	R9 K11 ; R9 := "WeaponFrame.AmmoAvailable"
	43	[4770]	LOADK    	R10 := 11.000000
	44	[4770]	TESTSET  	R11 R4 0 ; if not R4 then PC := 47 else R11 := R4 
	45	[4770]	JMP      	47 ; PC := 47
	46	[4770]	MOVE     	R11 R5 ; R11 := R5
	47	[4770]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	48	[4771]	GETGLOBAL	R7 K12 ; R7 := 0xe72d2edb
	49	[4771]	EQ       	0 R7 K14 ; if R7 ~= 4.000000 then PC := 86
	50	[4771]	JMP      	86 ; PC := 86
	51	[4772]	GETUPVAL 	R7 U2 ; R7 := U2
	52	[4772]	LOADK    	R8 K15 ; R8 := "AmmoRemaining"
	53	[4772]	LOADK    	R9 K16 ; R9 := "WeaponFrame.AmmoRemaining"
	54	[4772]	GETUPVAL 	R10 U3 ; R10 := U3
	55	[4772]	GETTABLE 	R10 R10 K17 ; R10 := R10[0x06d055f9]
	56	[4772]	MOVE     	R11 R4 ; R11 := R4
	57	[4772]	MOVE     	R12 R0 ; R12 := R0
	58	[4772]	MOVE     	R13 R1 ; R13 := R1
	59	[4772]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	60	[4772]	LOADNIL  	R11 R12 ; R11 := R12 := nil
	61	[4772]	TEST     	R5 1 ; if R5 then PC := 65
	62	[4772]	JMP      	65 ; PC := 65
	63	[4772]	NOT      	R13 R4 ; R13 := not R4
	64	[4772]	JMP      	67 ; PC := 67
	65	[4772]	OP_LOADBOOL	R13 0 1 ; R13 := false; PC := 66
	66	[4772]	OP_LOADBOOL	R13 1 0 ; R13 := true
	67	[4772]	CALL     	R7 7 1 ; R7(R8,R9,R10,R11,R12,R13)
	68	[4773]	GETUPVAL 	R7 U2 ; R7 := U2
	69	[4773]	LOADK    	R8 K18 ; R8 := "AmmoRemainingBlur"
	70	[4773]	LOADK    	R9 K19 ; R9 := "WeaponFrame.AmmoRemainingBlur"
	71	[4773]	GETUPVAL 	R10 U3 ; R10 := U3
	72	[4773]	GETTABLE 	R10 R10 K17 ; R10 := R10[0x06d055f9]
	73	[4773]	MOVE     	R11 R4 ; R11 := R4
	74	[4773]	MOVE     	R12 R0 ; R12 := R0
	75	[4773]	MOVE     	R13 R1 ; R13 := R1
	76	[4773]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	77	[4773]	LOADNIL  	R11 R12 ; R11 := R12 := nil
	78	[4773]	TEST     	R5 1 ; if R5 then PC := 82
	79	[4773]	JMP      	82 ; PC := 82
	80	[4773]	NOT      	R13 R4 ; R13 := not R4
	81	[4773]	JMP      	84 ; PC := 84
	82	[4773]	OP_LOADBOOL	R13 0 1 ; R13 := false; PC := 83
	83	[4773]	OP_LOADBOOL	R13 1 0 ; R13 := true
	84	[4773]	CALL     	R7 7 1 ; R7(R8,R9,R10,R11,R12,R13)
	85	[4773]	JMP      	104 ; PC := 104
	86	[4775]	GETGLOBAL	R7 K9 ; R7 := 0xae91e43b
	87	[4775]	SELF     	R7 R7 K10 ; R8 := R7; R7 := R7[0xaade900e]
	88	[4775]	LOADK    	R9 K16 ; R9 := "WeaponFrame.AmmoRemaining"
	89	[4775]	LOADK    	R10 := 11.000000
	90	[4775]	TESTSET  	R11 R4 0 ; if not R4 then PC := 93 else R11 := R4 
	91	[4775]	JMP      	93 ; PC := 93
	92	[4775]	MOVE     	R11 R5 ; R11 := R5
	93	[4775]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	94	[4776]	GETUPVAL 	R7 U2 ; R7 := U2
	95	[4776]	LOADK    	R8 K15 ; R8 := "AmmoRemaining"
	96	[4776]	LOADK    	R9 K16 ; R9 := "WeaponFrame.AmmoRemaining"
	97	[4776]	GETUPVAL 	R10 U3 ; R10 := U3
	98	[4776]	GETTABLE 	R10 R10 K17 ; R10 := R10[0x06d055f9]
	99	[4776]	MOVE     	R11 R4 ; R11 := R4
	100	[4776]	MOVE     	R12 R0 ; R12 := R0
	101	[4776]	MOVE     	R13 R1 ; R13 := R1
	102	[4776]	CALL     	R10 4 0 ; R10,... := R10(R11,R12,R13)
	103	[4776]	CALL     	R7 0 1 ; R7(R8,...)
	104	[4778]	GETUPVAL 	R7 U2 ; R7 := U2
	105	[4778]	LOADK    	R8 K20 ; R8 := "AmmoAvailable"
	106	[4778]	LOADK    	R9 K11 ; R9 := "WeaponFrame.AmmoAvailable"
	107	[4778]	MOVE     	R10 R1 ; R10 := R1
	108	[4778]	LOADNIL  	R11 R12 ; R11 := R12 := nil
	109	[4778]	MOVE     	R13 R3 ; R13 := R3
	110	[4778]	CALL     	R7 7 1 ; R7(R8,R9,R10,R11,R12,R13)
	111	[4779]	DIV      	R7 R0 R2 ; R7 := R0 / R2
	112	[4780]	GETGLOBAL	R8 K21 ; R8 := 0x5bced4c4
	113	[4780]	GETTABLE 	R8 R8 K22 ; R8 := R8[0x55f27c30]
	114	[4780]	MUL      	R9 K23 R7 ; R9 := 59.000000 * R7
	115	[4780]	CALL     	R8 2 2 ; R8 := R8(R9)
	116	[4780]	SUB      	R8 K24 R8 ; R8 := 60.000000 - R8
	117	[4781]	GETGLOBAL	R9 K25 ; R9 := 0x38f10e85
	118	[4781]	GETGLOBAL	R10 K9 ; R10 := 0xae91e43b
	119	[4781]	LOADK    	R11 K26 ; R11 := "WeaponFrame.AmmoBar.gotoAndStop"
	120	[4781]	MOVE     	R12 R8 ; R12 := R8
	121	[4781]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	122	[4782]	GETGLOBAL	R9 K12 ; R9 := 0xe72d2edb
	123	[4782]	EQ       	0 R9 K27 ; if R9 ~= 3.000000 then PC := 138
	124	[4782]	JMP      	138 ; PC := 138
	125	[4783]	GETGLOBAL	R9 K9 ; R9 := 0xae91e43b
	126	[4783]	SELF     	R9 R9 K28 ; R10 := R9; R9 := R9[0x67bc869f]
	127	[4783]	LOADK    	R11 K29 ; R11 := "WeaponFrame.AmmoBar.Fill"
	128	[4783]	LOADK    	R12 := 9.000000
	129	[4783]	LOADK    	R13 K30 ; R13 := 9150127.000000
	130	[4783]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	131	[4784]	GETGLOBAL	R9 K9 ; R9 := 0xae91e43b
	132	[4784]	SELF     	R9 R9 K28 ; R10 := R9; R9 := R9[0x67bc869f]
	133	[4784]	LOADK    	R11 K31 ; R11 := "WeaponFrame.AmmoBar.Bg"
	134	[4784]	LOADK    	R12 := 9.000000
	135	[4784]	LOADK    	R13 K32 ; R13 := 6970169.000000
	136	[4784]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	137	[4784]	JMP      	166 ; PC := 166
	138	[4785]	GETGLOBAL	R9 K12 ; R9 := 0xe72d2edb
	139	[4785]	EQ       	0 R9 K33 ; if R9 ~= 2.000000 then PC := 154
	140	[4785]	JMP      	154 ; PC := 154
	141	[4786]	GETGLOBAL	R9 K9 ; R9 := 0xae91e43b
	142	[4786]	SELF     	R9 R9 K28 ; R10 := R9; R9 := R9[0x67bc869f]
	143	[4786]	LOADK    	R11 K29 ; R11 := "WeaponFrame.AmmoBar.Fill"
	144	[4786]	LOADK    	R12 := 9.000000
	145	[4786]	LOADK    	R13 K34 ; R13 := 12284689.000000
	146	[4786]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	147	[4787]	GETGLOBAL	R9 K9 ; R9 := 0xae91e43b
	148	[4787]	SELF     	R9 R9 K28 ; R10 := R9; R9 := R9[0x67bc869f]
	149	[4787]	LOADK    	R11 K31 ; R11 := "WeaponFrame.AmmoBar.Bg"
	150	[4787]	LOADK    	R12 := 9.000000
	151	[4787]	LOADK    	R13 K35 ; R13 := 65535.000000
	152	[4787]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	153	[4787]	JMP      	166 ; PC := 166
	154	[4789]	GETGLOBAL	R9 K9 ; R9 := 0xae91e43b
	155	[4789]	SELF     	R9 R9 K28 ; R10 := R9; R9 := R9[0x67bc869f]
	156	[4789]	LOADK    	R11 K29 ; R11 := "WeaponFrame.AmmoBar.Fill"
	157	[4789]	LOADK    	R12 := 9.000000
	158	[4789]	LOADK    	R13 K36 ; R13 := 15954454.000000
	159	[4789]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	160	[4790]	GETGLOBAL	R9 K9 ; R9 := 0xae91e43b
	161	[4790]	SELF     	R9 R9 K28 ; R10 := R9; R9 := R9[0x67bc869f]
	162	[4790]	LOADK    	R11 K31 ; R11 := "WeaponFrame.AmmoBar.Bg"
	163	[4790]	LOADK    	R12 := 9.000000
	164	[4790]	LOADK    	R13 K37 ; R13 := 10197915.000000
	165	[4790]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	166	[4792]	RETURN   	R0 1 ; return 

function #142 <?:4794,4797> (11 instructions, 44 bytes at 00000211920938D0)
4 params, 9 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[4795]	EQ       	1 R3 K0 ; if R3 == "true" then PC := 4
	2	[4795]	JMP      	4 ; PC := 4
	3	[4795]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 4
	4	[4795]	OP_LOADBOOL	R3 1 0 ; R3 := true
	5	[4796]	GETUPVAL 	R4 U0 ; R4 := U0
	6	[4796]	MOVE     	R5 R0 ; R5 := R0
	7	[4796]	MOVE     	R6 R1 ; R6 := R1
	8	[4796]	MOVE     	R7 R2 ; R7 := R2
	9	[4796]	MOVE     	R8 R3 ; R8 := R3
	10	[4796]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	11	[4797]	RETURN   	R0 1 ; return 

function #143 <?:4799,4857> (352 instructions, 1408 bytes at 0000021192093960)
0 params, 26 slots, 5 upvalues, 0 locals, 74 constants, 0 functions
	1	[4800]	GETGLOBAL	R0 K0 ; R0 := 0xe72d2edb
	2	[4800]	EQ       	0 R0 K2 ; if R0 ~= 1.000000 then PC := 110
	3	[4800]	JMP      	110 ; PC := 110
	4	[4801]	GETUPVAL 	R0 U0 ; R0 := U0
	5	[4801]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x20ff29f7]
	6	[4801]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	7	[4801]	LOADK    	R3 K5 ; R3 := "GrenadeComponent"
	8	[4801]	NEWTABLE 	R4 2 0 ; R4 := {}
	9	[4801]	GETUPVAL 	R5 U0 ; R5 := U0
	10	[4801]	GETTABLE 	R5 R5 K6 ; R5 := R5["ANCHOR_V_BOTTOM"]
	11	[4801]	GETUPVAL 	R6 U0 ; R6 := U0
	12	[4801]	GETTABLE 	R6 R6 K7 ; R6 := R6["ANCHOR_H_RIGHT"]
	13	[4801]	SETLIST  	R4 2 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
	14	[4801]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	15	[4802]	GETUPVAL 	R0 U0 ; R0 := U0
	16	[4802]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x20ff29f7]
	17	[4802]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	18	[4802]	LOADK    	R3 K8 ; R3 := "CoverPanel"
	19	[4802]	NEWTABLE 	R4 2 0 ; R4 := {}
	20	[4802]	GETUPVAL 	R5 U0 ; R5 := U0
	21	[4802]	GETTABLE 	R5 R5 K6 ; R5 := R5["ANCHOR_V_BOTTOM"]
	22	[4802]	GETUPVAL 	R6 U0 ; R6 := U0
	23	[4802]	GETTABLE 	R6 R6 K7 ; R6 := R6["ANCHOR_H_RIGHT"]
	24	[4802]	SETLIST  	R4 2 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
	25	[4802]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	26	[4803]	GETUPVAL 	R0 U0 ; R0 := U0
	27	[4803]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x20ff29f7]
	28	[4803]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	29	[4803]	LOADK    	R3 K9 ; R3 := "GrineerDeco.BottomLeftCorner"
	30	[4803]	NEWTABLE 	R4 2 0 ; R4 := {}
	31	[4803]	GETUPVAL 	R5 U0 ; R5 := U0
	32	[4803]	GETTABLE 	R5 R5 K6 ; R5 := R5["ANCHOR_V_BOTTOM"]
	33	[4803]	GETUPVAL 	R6 U0 ; R6 := U0
	34	[4803]	GETTABLE 	R6 R6 K10 ; R6 := R6["ANCHOR_H_LEFT"]
	35	[4803]	SETLIST  	R4 2 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
	36	[4803]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	37	[4804]	GETUPVAL 	R0 U0 ; R0 := U0
	38	[4804]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x20ff29f7]
	39	[4804]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	40	[4804]	LOADK    	R3 K11 ; R3 := "GrineerDeco.BottomRightCorner"
	41	[4804]	NEWTABLE 	R4 2 0 ; R4 := {}
	42	[4804]	GETUPVAL 	R5 U0 ; R5 := U0
	43	[4804]	GETTABLE 	R5 R5 K6 ; R5 := R5["ANCHOR_V_BOTTOM"]
	44	[4804]	GETUPVAL 	R6 U0 ; R6 := U0
	45	[4804]	GETTABLE 	R6 R6 K7 ; R6 := R6["ANCHOR_H_RIGHT"]
	46	[4804]	SETLIST  	R4 2 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
	47	[4804]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	48	[4805]	GETUPVAL 	R0 U0 ; R0 := U0
	49	[4805]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x20ff29f7]
	50	[4805]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	51	[4805]	LOADK    	R3 K12 ; R3 := "GrineerDeco.TopFlourish"
	52	[4805]	NEWTABLE 	R4 2 0 ; R4 := {}
	53	[4805]	GETUPVAL 	R5 U0 ; R5 := U0
	54	[4805]	GETTABLE 	R5 R5 K13 ; R5 := R5["ANCHOR_V_TOP"]
	55	[4805]	GETUPVAL 	R6 U0 ; R6 := U0
	56	[4805]	GETTABLE 	R6 R6 K14 ; R6 := R6["ANCHOR_H_CENTRE"]
	57	[4805]	SETLIST  	R4 2 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
	58	[4805]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	59	[4806]	GETUPVAL 	R0 U0 ; R0 := U0
	60	[4806]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x20ff29f7]
	61	[4806]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	62	[4806]	LOADK    	R3 K15 ; R3 := "WeaponReticuleDot"
	63	[4806]	NEWTABLE 	R4 2 0 ; R4 := {}
	64	[4806]	GETUPVAL 	R5 U0 ; R5 := U0
	65	[4806]	GETTABLE 	R5 R5 K16 ; R5 := R5["ANCHOR_V_CENTRE"]
	66	[4806]	GETUPVAL 	R6 U0 ; R6 := U0
	67	[4806]	GETTABLE 	R6 R6 K14 ; R6 := R6["ANCHOR_H_CENTRE"]
	68	[4806]	SETLIST  	R4 2 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 2
	69	[4806]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	70	[4807]	GETUPVAL 	R0 U0 ; R0 := U0
	71	[4807]	SELF     	R0 R0 K17 ; R1 := R0; R0 := R0[0xfaa69527]
	72	[4807]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	73	[4807]	SELF     	R2 R2 K18 ; R3 := R2; R2 := R2[0x6b837788]
	74	[4807]	CALL     	R2 2 2 ; R2 := R2(R3)
	75	[4807]	GETGLOBAL	R3 K4 ; R3 := 0xae91e43b
	76	[4807]	SELF     	R3 R3 K19 ; R4 := R3; R3 := R3[0xaf9fda9f]
	77	[4807]	CALL     	R3 2 2 ; R3 := R3(R4)
	78	[4807]	OP_LOADBOOL	R4 1 0 ; R4 := true
	79	[4807]	GETUPVAL 	R5 U1 ; R5 := U1
	80	[4807]	GETTABLE 	R5 R5 K20 ; R5 := R5["HudScalePadding"]
	81	[4807]	CALL     	R0 6 1 ; R0(R1,R2,R3,R4,R5)
	82	[4809]	NEWTABLE 	R0 2 0 ; R0 := {}
	83	[4809]	LOADK    	R1 K5 ; R1 := "GrenadeComponent"
	84	[4809]	LOADK    	R2 K8 ; R2 := "CoverPanel"
	85	[4809]	SETLIST  	R0 2 1 ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 2
	86	[4810]	GETGLOBAL	R1 K21 ; R1 := 0xc8802016
	87	[4810]	MOVE     	R2 R0 ; R2 := R0
	88	[4810]	CALL     	R1 2 4 ; R1,R2,R3 := R1(R2)
	89	[4810]	JMP      	101 ; PC := 101
	90	[4811]	GETGLOBAL	R6 K4 ; R6 := 0xae91e43b
	91	[4811]	SELF     	R6 R6 K22 ; R7 := R6; R6 := R6[0x67bc869f]
	92	[4811]	MOVE     	R8 R5 ; R8 := R5
	93	[4811]	LOADK    	R9 := 15.000000
	94	[4811]	LOADK    	R10 := 25.000000
	95	[4811]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	96	[4812]	GETGLOBAL	R6 K23 ; R6 := _T
	97	[4812]	GETTABLE 	R6 R6 K24 ; R6 := R6[0x6b23d28b]
	98	[4812]	GETGLOBAL	R7 K4 ; R7 := 0xae91e43b
	99	[4812]	MOVE     	R8 R5 ; R8 := R5
	100	[4812]	CALL     	R6 3 1 ; R6(R7,R8)
	101	[4810]	TFORLOOP 	R1 2 ; R4,R5 := R1(R2,R3); if R4 ~= nil then begin PC = 90; R3 := R4 end
	102	[4812]	JMP      	90 ; PC := 90
	103	[4815]	GETUPVAL 	R6 U2 ; R6 := U2
	104	[4815]	SETTABLE 	R6 K25 K2 ; R6["HeartRateFactor"] := 1.000000
	105	[4816]	GETUPVAL 	R6 U2 ; R6 := U2
	106	[4816]	SETTABLE 	R6 K26 K2 ; R6["HeartRateCurrFrame"] := 1.000000
	107	[4817]	GETUPVAL 	R6 U2 ; R6 := U2
	108	[4817]	SETTABLE 	R6 K27 K28 ; R6["HeartRateMaxFrame"] := 35.000000
	109	[4817]	JMP      	317 ; PC := 317
	110	[4818]	GETGLOBAL	R6 K0 ; R6 := 0xe72d2edb
	111	[4818]	EQ       	0 R6 K29 ; if R6 ~= 3.000000 then PC := 176
	112	[4818]	JMP      	176 ; PC := 176
	113	[4819]	GETUPVAL 	R6 U0 ; R6 := U0
	114	[4819]	SELF     	R6 R6 K3 ; R7 := R6; R6 := R6[0x20ff29f7]
	115	[4819]	GETGLOBAL	R8 K4 ; R8 := 0xae91e43b
	116	[4819]	LOADK    	R9 K30 ; R9 := "TeshinDeco"
	117	[4819]	NEWTABLE 	R10 2 0 ; R10 := {}
	118	[4819]	GETUPVAL 	R11 U0 ; R11 := U0
	119	[4819]	GETTABLE 	R11 R11 K13 ; R11 := R11["ANCHOR_V_TOP"]
	120	[4819]	GETUPVAL 	R12 U0 ; R12 := U0
	121	[4819]	GETTABLE 	R12 R12 K14 ; R12 := R12["ANCHOR_H_CENTRE"]
	122	[4819]	SETLIST  	R10 2 1 ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 2
	123	[4819]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	124	[4820]	GETUPVAL 	R6 U0 ; R6 := U0
	125	[4820]	SELF     	R6 R6 K3 ; R7 := R6; R6 := R6[0x20ff29f7]
	126	[4820]	GETGLOBAL	R8 K4 ; R8 := 0xae91e43b
	127	[4820]	LOADK    	R9 K31 ; R9 := "StancePanel"
	128	[4820]	NEWTABLE 	R10 2 0 ; R10 := {}
	129	[4820]	GETUPVAL 	R11 U0 ; R11 := U0
	130	[4820]	GETTABLE 	R11 R11 K6 ; R11 := R11["ANCHOR_V_BOTTOM"]
	131	[4820]	GETUPVAL 	R12 U0 ; R12 := U0
	132	[4820]	GETTABLE 	R12 R12 K7 ; R12 := R12["ANCHOR_H_RIGHT"]
	133	[4820]	SETLIST  	R10 2 1 ; R10[(1-1)*FPF+i] := R(10+i), 1 <= i <= 2
	134	[4820]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	135	[4821]	GETUPVAL 	R6 U0 ; R6 := U0
	136	[4821]	SELF     	R6 R6 K17 ; R7 := R6; R6 := R6[0xfaa69527]
	137	[4821]	GETGLOBAL	R8 K4 ; R8 := 0xae91e43b
	138	[4821]	SELF     	R8 R8 K18 ; R9 := R8; R8 := R8[0x6b837788]
	139	[4821]	CALL     	R8 2 2 ; R8 := R8(R9)
	140	[4821]	GETGLOBAL	R9 K4 ; R9 := 0xae91e43b
	141	[4821]	SELF     	R9 R9 K19 ; R10 := R9; R9 := R9[0xaf9fda9f]
	142	[4821]	CALL     	R9 2 2 ; R9 := R9(R10)
	143	[4821]	OP_LOADBOOL	R10 1 0 ; R10 := true
	144	[4821]	GETUPVAL 	R11 U1 ; R11 := U1
	145	[4821]	GETTABLE 	R11 R11 K20 ; R11 := R11["HudScalePadding"]
	146	[4821]	CALL     	R6 6 1 ; R6(R7,R8,R9,R10,R11)
	147	[4823]	NEWTABLE 	R6 1 0 ; R6 := {}
	148	[4823]	LOADK    	R7 K31 ; R7 := "StancePanel"
	149	[4823]	SETLIST  	R6 1 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
	150	[4824]	GETGLOBAL	R7 K21 ; R7 := 0xc8802016
	151	[4824]	MOVE     	R8 R6 ; R8 := R6
	152	[4824]	CALL     	R7 2 4 ; R7,R8,R9 := R7(R8)
	153	[4824]	JMP      	159 ; PC := 159
	154	[4825]	GETGLOBAL	R12 K23 ; R12 := _T
	155	[4825]	GETTABLE 	R12 R12 K24 ; R12 := R12[0x6b23d28b]
	156	[4825]	GETGLOBAL	R13 K4 ; R13 := 0xae91e43b
	157	[4825]	MOVE     	R14 R11 ; R14 := R11
	158	[4825]	CALL     	R12 3 1 ; R12(R13,R14)
	159	[4824]	TFORLOOP 	R7 2 ; R10,R11 := R7(R8,R9); if R10 ~= nil then begin PC = 154; R9 := R10 end
	160	[4825]	JMP      	154 ; PC := 154
	161	[4828]	GETUPVAL 	R12 U2 ; R12 := U2
	162	[4828]	NEWTABLE 	R13 3 0 ; R13 := {}
	163	[4828]	LOADK    	R14 K33 ; R14 := 15299384.000000
	164	[4828]	LOADK    	R15 K34 ; R15 := 10081506.000000
	165	[4828]	LOADK    	R16 K35 ; R16 := 12032498.000000
	166	[4828]	SETLIST  	R13 3 1 ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 3
	167	[4828]	SETTABLE 	R12 K32 R13 ; R12["TeshinStanceActiveColors"] := R13
	168	[4829]	GETUPVAL 	R12 U2 ; R12 := U2
	169	[4829]	NEWTABLE 	R13 3 0 ; R13 := {}
	170	[4829]	LOADK    	R14 K37 ; R14 := 8031129.000000
	171	[4829]	LOADK    	R15 K37 ; R15 := 8031129.000000
	172	[4829]	LOADK    	R16 K37 ; R16 := 8031129.000000
	173	[4829]	SETLIST  	R13 3 1 ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 3
	174	[4829]	SETTABLE 	R12 K36 R13 ; R12["TeshinStanceInactiveColors"] := R13
	175	[4829]	JMP      	317 ; PC := 317
	176	[4830]	GETGLOBAL	R12 K0 ; R12 := 0xe72d2edb
	177	[4830]	EQ       	0 R12 K38 ; if R12 ~= 2.000000 then PC := 295
	178	[4830]	JMP      	295 ; PC := 295
	179	[4831]	GETUPVAL 	R12 U0 ; R12 := U0
	180	[4831]	SELF     	R12 R12 K3 ; R13 := R12; R12 := R12[0x20ff29f7]
	181	[4831]	GETGLOBAL	R14 K4 ; R14 := 0xae91e43b
	182	[4831]	LOADK    	R15 K39 ; R15 := "CorpusDeco.BottomLeftCorner"
	183	[4831]	NEWTABLE 	R16 2 0 ; R16 := {}
	184	[4831]	GETUPVAL 	R17 U0 ; R17 := U0
	185	[4831]	GETTABLE 	R17 R17 K6 ; R17 := R17["ANCHOR_V_BOTTOM"]
	186	[4831]	GETUPVAL 	R18 U0 ; R18 := U0
	187	[4831]	GETTABLE 	R18 R18 K10 ; R18 := R18["ANCHOR_H_LEFT"]
	188	[4831]	SETLIST  	R16 2 1 ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 2
	189	[4831]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	190	[4832]	GETUPVAL 	R12 U0 ; R12 := U0
	191	[4832]	SELF     	R12 R12 K3 ; R13 := R12; R12 := R12[0x20ff29f7]
	192	[4832]	GETGLOBAL	R14 K4 ; R14 := 0xae91e43b
	193	[4832]	LOADK    	R15 K40 ; R15 := "CorpusDeco.BottomRightCorner"
	194	[4832]	NEWTABLE 	R16 2 0 ; R16 := {}
	195	[4832]	GETUPVAL 	R17 U0 ; R17 := U0
	196	[4832]	GETTABLE 	R17 R17 K6 ; R17 := R17["ANCHOR_V_BOTTOM"]
	197	[4832]	GETUPVAL 	R18 U0 ; R18 := U0
	198	[4832]	GETTABLE 	R18 R18 K7 ; R18 := R18["ANCHOR_H_RIGHT"]
	199	[4832]	SETLIST  	R16 2 1 ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 2
	200	[4832]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	201	[4833]	GETUPVAL 	R12 U0 ; R12 := U0
	202	[4833]	SELF     	R12 R12 K3 ; R13 := R12; R12 := R12[0x20ff29f7]
	203	[4833]	GETGLOBAL	R14 K4 ; R14 := 0xae91e43b
	204	[4833]	LOADK    	R15 K41 ; R15 := "CorpusDeco.TopFlourish"
	205	[4833]	NEWTABLE 	R16 2 0 ; R16 := {}
	206	[4833]	GETUPVAL 	R17 U0 ; R17 := U0
	207	[4833]	GETTABLE 	R17 R17 K13 ; R17 := R17["ANCHOR_V_TOP"]
	208	[4833]	GETUPVAL 	R18 U0 ; R18 := U0
	209	[4833]	GETTABLE 	R18 R18 K14 ; R18 := R18["ANCHOR_H_CENTRE"]
	210	[4833]	SETLIST  	R16 2 1 ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 2
	211	[4833]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	212	[4834]	GETUPVAL 	R12 U0 ; R12 := U0
	213	[4834]	SELF     	R12 R12 K3 ; R13 := R12; R12 := R12[0x20ff29f7]
	214	[4834]	GETGLOBAL	R14 K4 ; R14 := 0xae91e43b
	215	[4834]	LOADK    	R15 K42 ; R15 := "CorpusDeco.BottomFlourish"
	216	[4834]	NEWTABLE 	R16 2 0 ; R16 := {}
	217	[4834]	GETUPVAL 	R17 U0 ; R17 := U0
	218	[4834]	GETTABLE 	R17 R17 K6 ; R17 := R17["ANCHOR_V_BOTTOM"]
	219	[4834]	GETUPVAL 	R18 U0 ; R18 := U0
	220	[4834]	GETTABLE 	R18 R18 K14 ; R18 := R18["ANCHOR_H_CENTRE"]
	221	[4834]	SETLIST  	R16 2 1 ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 2
	222	[4834]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	223	[4835]	GETUPVAL 	R12 U0 ; R12 := U0
	224	[4835]	SELF     	R12 R12 K3 ; R13 := R12; R12 := R12[0x20ff29f7]
	225	[4835]	GETGLOBAL	R14 K4 ; R14 := 0xae91e43b
	226	[4835]	LOADK    	R15 K43 ; R15 := "CorpusDeco.LeftFlourish"
	227	[4835]	NEWTABLE 	R16 2 0 ; R16 := {}
	228	[4835]	GETUPVAL 	R17 U0 ; R17 := U0
	229	[4835]	GETTABLE 	R17 R17 K16 ; R17 := R17["ANCHOR_V_CENTRE"]
	230	[4835]	GETUPVAL 	R18 U0 ; R18 := U0
	231	[4835]	GETTABLE 	R18 R18 K10 ; R18 := R18["ANCHOR_H_LEFT"]
	232	[4835]	SETLIST  	R16 2 1 ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 2
	233	[4835]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	234	[4836]	GETUPVAL 	R12 U0 ; R12 := U0
	235	[4836]	SELF     	R12 R12 K3 ; R13 := R12; R12 := R12[0x20ff29f7]
	236	[4836]	GETGLOBAL	R14 K4 ; R14 := 0xae91e43b
	237	[4836]	LOADK    	R15 K44 ; R15 := "CorpusDeco.RightFlourish"
	238	[4836]	NEWTABLE 	R16 2 0 ; R16 := {}
	239	[4836]	GETUPVAL 	R17 U0 ; R17 := U0
	240	[4836]	GETTABLE 	R17 R17 K16 ; R17 := R17["ANCHOR_V_CENTRE"]
	241	[4836]	GETUPVAL 	R18 U0 ; R18 := U0
	242	[4836]	GETTABLE 	R18 R18 K7 ; R18 := R18["ANCHOR_H_RIGHT"]
	243	[4836]	SETLIST  	R16 2 1 ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 2
	244	[4836]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	245	[4837]	GETUPVAL 	R12 U0 ; R12 := U0
	246	[4837]	SELF     	R12 R12 K3 ; R13 := R12; R12 := R12[0x20ff29f7]
	247	[4837]	GETGLOBAL	R14 K4 ; R14 := 0xae91e43b
	248	[4837]	LOADK    	R15 K45 ; R15 := "MoaComponent"
	249	[4837]	NEWTABLE 	R16 2 0 ; R16 := {}
	250	[4837]	GETUPVAL 	R17 U0 ; R17 := U0
	251	[4837]	GETTABLE 	R17 R17 K6 ; R17 := R17["ANCHOR_V_BOTTOM"]
	252	[4837]	GETUPVAL 	R18 U0 ; R18 := U0
	253	[4837]	GETTABLE 	R18 R18 K7 ; R18 := R18["ANCHOR_H_RIGHT"]
	254	[4837]	SETLIST  	R16 2 1 ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 2
	255	[4837]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	256	[4838]	GETUPVAL 	R12 U0 ; R12 := U0
	257	[4838]	SELF     	R12 R12 K3 ; R13 := R12; R12 := R12[0x20ff29f7]
	258	[4838]	GETGLOBAL	R14 K4 ; R14 := 0xae91e43b
	259	[4838]	LOADK    	R15 K46 ; R15 := "StockTicker"
	260	[4838]	NEWTABLE 	R16 2 0 ; R16 := {}
	261	[4838]	GETUPVAL 	R17 U0 ; R17 := U0
	262	[4838]	GETTABLE 	R17 R17 K13 ; R17 := R17["ANCHOR_V_TOP"]
	263	[4838]	GETUPVAL 	R18 U0 ; R18 := U0
	264	[4838]	GETTABLE 	R18 R18 K7 ; R18 := R18["ANCHOR_H_RIGHT"]
	265	[4838]	SETLIST  	R16 2 1 ; R16[(1-1)*FPF+i] := R(16+i), 1 <= i <= 2
	266	[4838]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	267	[4839]	GETUPVAL 	R12 U0 ; R12 := U0
	268	[4839]	SELF     	R12 R12 K17 ; R13 := R12; R12 := R12[0xfaa69527]
	269	[4839]	GETGLOBAL	R14 K4 ; R14 := 0xae91e43b
	270	[4839]	SELF     	R14 R14 K18 ; R15 := R14; R14 := R14[0x6b837788]
	271	[4839]	CALL     	R14 2 2 ; R14 := R14(R15)
	272	[4839]	GETGLOBAL	R15 K4 ; R15 := 0xae91e43b
	273	[4839]	SELF     	R15 R15 K19 ; R16 := R15; R15 := R15[0xaf9fda9f]
	274	[4839]	CALL     	R15 2 2 ; R15 := R15(R16)
	275	[4839]	OP_LOADBOOL	R16 1 0 ; R16 := true
	276	[4839]	GETUPVAL 	R17 U1 ; R17 := U1
	277	[4839]	GETTABLE 	R17 R17 K20 ; R17 := R17["HudScalePadding"]
	278	[4839]	CALL     	R12 6 1 ; R12(R13,R14,R15,R16,R17)
	279	[4841]	NEWTABLE 	R12 2 0 ; R12 := {}
	280	[4841]	LOADK    	R13 K45 ; R13 := "MoaComponent"
	281	[4841]	LOADK    	R14 K46 ; R14 := "StockTicker"
	282	[4841]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	283	[4842]	GETGLOBAL	R13 K21 ; R13 := 0xc8802016
	284	[4842]	MOVE     	R14 R12 ; R14 := R12
	285	[4842]	CALL     	R13 2 4 ; R13,R14,R15 := R13(R14)
	286	[4842]	JMP      	292 ; PC := 292
	287	[4843]	GETGLOBAL	R18 K23 ; R18 := _T
	288	[4843]	GETTABLE 	R18 R18 K24 ; R18 := R18[0x6b23d28b]
	289	[4843]	GETGLOBAL	R19 K4 ; R19 := 0xae91e43b
	290	[4843]	MOVE     	R20 R17 ; R20 := R17
	291	[4843]	CALL     	R18 3 1 ; R18(R19,R20)
	292	[4842]	TFORLOOP 	R13 2 ; R16,R17 := R13(R14,R15); if R16 ~= nil then begin PC = 287; R15 := R16 end
	293	[4843]	JMP      	287 ; PC := 287
	294	[4844]	JMP      	317 ; PC := 317
	295	[4845]	GETGLOBAL	R18 K0 ; R18 := 0xe72d2edb
	296	[4845]	EQ       	0 R18 K47 ; if R18 ~= 4.000000 then PC := 317
	297	[4845]	JMP      	317 ; PC := 317
	298	[4846]	NEWTABLE 	R18 4 0 ; R18 := {}
	299	[4846]	NEWTABLE 	R19 0 3 ; R19 := {}
	300	[4846]	SETTABLE 	R19 K48 K49 ; R19["X"] := -154.300003
	301	[4846]	SETTABLE 	R19 K50 K51 ; R19["Y"] := 18.000000
	302	[4846]	SETTABLE 	R19 K52 K53 ; R19["Ability"] := "ACTIVATE_ABILITY_MENU_0"
	303	[4846]	NEWTABLE 	R20 0 3 ; R20 := {}
	304	[4846]	SETTABLE 	R20 K48 K54 ; R20["X"] := -98.900002
	305	[4846]	SETTABLE 	R20 K50 K51 ; R20["Y"] := 18.000000
	306	[4846]	SETTABLE 	R20 K52 K55 ; R20["Ability"] := "ACTIVATE_ABILITY_MENU_1"
	307	[4846]	NEWTABLE 	R21 0 3 ; R21 := {}
	308	[4846]	SETTABLE 	R21 K48 K56 ; R21["X"] := -42.750000
	309	[4846]	SETTABLE 	R21 K50 K51 ; R21["Y"] := 18.000000
	310	[4846]	SETTABLE 	R21 K52 K57 ; R21["Ability"] := "ACTIVATE_ABILITY_MENU_2"
	311	[4846]	NEWTABLE 	R22 0 3 ; R22 := {}
	312	[4846]	SETTABLE 	R22 K48 K58 ; R22["X"] := 12.250000
	313	[4846]	SETTABLE 	R22 K50 K51 ; R22["Y"] := 18.000000
	314	[4846]	SETTABLE 	R22 K52 K59 ; R22["Ability"] := "ACTIVATE_ABILITY_MENU_3"
	315	[4846]	SETLIST  	R18 4 1 ; R18[(1-1)*FPF+i] := R(18+i), 1 <= i <= 4
	316	[4846]	SETUPVAL 	R18 U3 ; U3 := R18
	317	[4849]	GETGLOBAL	R18 K60 ; R18 := 0x89326c93
	318	[4849]	SELF     	R18 R18 K61 ; R19 := R18; R18 := R18[0x78298275]
	319	[4849]	CALL     	R18 2 2 ; R18 := R18(R19)
	320	[4850]	GETGLOBAL	R19 K62 ; R19 := 0x7b998233
	321	[4850]	MOVE     	R20 R18 ; R20 := R18
	322	[4850]	CALL     	R19 2 2 ; R19 := R19(R20)
	323	[4850]	TEST     	R19 1 ; if R19 then PC := 352
	324	[4850]	JMP      	352 ; PC := 352
	325	[4851]	SELF     	R19 R18 K63 ; R20 := R18; R19 := R18[0xde321e6f]
	326	[4851]	CALL     	R19 2 2 ; R19 := R19(R20)
	327	[4851]	SELF     	R19 R19 K64 ; R20 := R19; R19 := R19[0x881b6b90]
	328	[4851]	LOADK    	R21 := 0.000000
	329	[4851]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	330	[4852]	GETGLOBAL	R20 K62 ; R20 := 0x7b998233
	331	[4852]	MOVE     	R21 R19 ; R21 := R19
	332	[4852]	CALL     	R20 2 2 ; R20 := R20(R21)
	333	[4852]	TEST     	R20 1 ; if R20 then PC := 352
	334	[4852]	JMP      	352 ; PC := 352
	335	[4853]	SELF     	R20 R19 K66 ; R21 := R19; R20 := R19[0x3279baa3]
	336	[4853]	OP_LOADBOOL	R22 1 0 ; R22 := true
	337	[4853]	CALL     	R20 3 1 ; R20(R21,R22)
	338	[4854]	GETUPVAL 	R20 U4 ; R20 := U4
	339	[4854]	SELF     	R21 R19 K67 ; R22 := R19; R21 := R19[0x7a7373f5]
	340	[4854]	CALL     	R21 2 2 ; R21 := R21(R22)
	341	[4854]	GETGLOBAL	R22 K68 ; R22 := 0x5bced4c4
	342	[4854]	GETTABLE 	R22 R22 K69 ; R22 := R22[0xac1b386a]
	343	[4854]	LOADK    	R23 K70 ; R23 := 9999.000000
	344	[4854]	SELF     	R24 R19 K71 ; R25 := R19; R24 := R19[0x094b3a83]
	345	[4854]	CALL     	R24 2 0 ; R24,... := R24(R25)
	346	[4854]	CALL     	R22 0 2 ; R22 := R22(R23,...)
	347	[4854]	SELF     	R23 R19 K72 ; R24 := R19; R23 := R19[0xd6bd1155]
	348	[4854]	CALL     	R23 2 2 ; R23 := R23(R24)
	349	[4854]	SELF     	R24 R19 K73 ; R25 := R19; R24 := R19[0xa63336e7]
	350	[4854]	CALL     	R24 2 0 ; R24,... := R24(R25)
	351	[4854]	CALL     	R20 0 1 ; R20(R21,...)
	352	[4857]	RETURN   	R0 1 ; return 

function #144 <?:4859,5325> (1776 instructions, 7104 bytes at 00000211920939F0)
0 params, 56 slots, 40 upvalues, 0 locals, 313 constants, 4 functions
	1	[4860]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[4860]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x67bc869f]
	3	[4860]	LOADK    	R2 K2 ; R2 := "_root"
	4	[4860]	LOADK    	R3 := 10.000000
	5	[4860]	LOADK    	R4 := 0.000000
	6	[4860]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	7	[4861]	GETUPVAL 	R0 U0 ; R0 := U0
	8	[4861]	SETTABLE 	R0 K3 K4 ; R0["Fade"] := 1.000000
	9	[4862]	GETUPVAL 	R0 U0 ; R0 := U0
	10	[4862]	SETTABLE 	R0 K5 K6 ; R0["WaitingForProgressMovie"] := true
	11	[4864]	GETGLOBAL	R0 K7 ; R0 := 0x38f10e85
	12	[4864]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	13	[4864]	LOADK    	R2 K8 ; R2 := "MiniMapContainer.MiniMap.setMask"
	14	[4864]	LOADK    	R3 K9 ; R3 := "MiniMapContainer.Mask"
	15	[4864]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	16	[4865]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	17	[4865]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0xaade900e]
	18	[4865]	LOADK    	R2 K11 ; R2 := "TargetStatus.Name"
	19	[4865]	LOADK    	R3 := 11.000000
	20	[4865]	OP_LOADBOOL	R4 0 0 ; R4 := false
	21	[4865]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	22	[4866]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	23	[4866]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0xaade900e]
	24	[4866]	LOADK    	R2 K12 ; R2 := "TargetStatus.Desc"
	25	[4866]	LOADK    	R3 := 11.000000
	26	[4866]	OP_LOADBOOL	R4 0 0 ; R4 := false
	27	[4866]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	28	[4868]	GETGLOBAL	R0 K13 ; R0 := _T
	29	[4868]	GETGLOBAL	R1 K15 ; R1 := 0xe72d2edb
	30	[4868]	SETTABLE 	R0 K14 R1 ; R0[0xa94df70b] := R1
	31	[4870]	GETGLOBAL	R0 K16 ; R0 := 0x7b998233
	32	[4870]	GETGLOBAL	R1 K17 ; R1 := 0x9d6c77be
	33	[4870]	CALL     	R0 2 2 ; R0 := R0(R1)
	34	[4870]	TEST     	R0 1 ; if R0 then PC := 39
	35	[4870]	JMP      	39 ; PC := 39
	36	[4871]	GETUPVAL 	R0 U1 ; R0 := U1
	37	[4871]	GETGLOBAL	R1 K17 ; R1 := 0x9d6c77be
	38	[4871]	CALL     	R0 2 1 ; R0(R1)
	39	[4874]	GETGLOBAL	R0 K16 ; R0 := 0x7b998233
	40	[4874]	GETGLOBAL	R1 K18 ; R1 := 0x4c5fdf9c
	41	[4874]	CALL     	R0 2 2 ; R0 := R0(R1)
	42	[4874]	TEST     	R0 1 ; if R0 then PC := 48
	43	[4874]	JMP      	48 ; PC := 48
	44	[4875]	GETGLOBAL	R0 K19 ; R0 := 0x9ba7909f
	45	[4875]	SELF     	R0 R0 K20 ; R1 := R0; R0 := R0[0x6dd7aa66]
	46	[4875]	GETGLOBAL	R2 K18 ; R2 := 0x4c5fdf9c
	47	[4875]	CALL     	R0 3 1 ; R0(R1,R2)
	48	[4878]	GETGLOBAL	R0 K16 ; R0 := 0x7b998233
	49	[4878]	GETGLOBAL	R1 K21 ; R1 := 0x13d86d46
	50	[4878]	CALL     	R0 2 2 ; R0 := R0(R1)
	51	[4878]	TEST     	R0 1 ; if R0 then PC := 84
	52	[4878]	JMP      	84 ; PC := 84
	53	[4879]	GETUPVAL 	R0 U2 ; R0 := U2
	54	[4879]	GETGLOBAL	R1 K19 ; R1 := 0x9ba7909f
	55	[4879]	SELF     	R1 R1 K23 ; R2 := R1; R1 := R1[0xbcfb64ab]
	56	[4879]	GETGLOBAL	R3 K21 ; R3 := 0x13d86d46
	57	[4879]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	58	[4879]	SETTABLE 	R0 K22 R1 ; R0["mHudMarkersMovie"] := R1
	59	[4880]	GETGLOBAL	R0 K16 ; R0 := 0x7b998233
	60	[4880]	GETUPVAL 	R1 U2 ; R1 := U2
	61	[4880]	GETTABLE 	R1 R1 K22 ; R1 := R1["mHudMarkersMovie"]
	62	[4880]	CALL     	R0 2 2 ; R0 := R0(R1)
	63	[4880]	TEST     	R0 0 ; if not R0 then PC := 84
	64	[4880]	JMP      	84 ; PC := 84
	65	[4881]	GETUPVAL 	R0 U2 ; R0 := U2
	66	[4881]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	67	[4881]	SELF     	R1 R1 K24 ; R2 := R1; R1 := R1[0x1fd6abd0]
	68	[4881]	GETGLOBAL	R3 K21 ; R3 := 0x13d86d46
	69	[4881]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	70	[4881]	SETTABLE 	R0 K22 R1 ; R0["mHudMarkersMovie"] := R1
	71	[4882]	GETGLOBAL	R0 K16 ; R0 := 0x7b998233
	72	[4882]	GETUPVAL 	R1 U2 ; R1 := U2
	73	[4882]	GETTABLE 	R1 R1 K22 ; R1 := R1["mHudMarkersMovie"]
	74	[4882]	CALL     	R0 2 2 ; R0 := R0(R1)
	75	[4882]	TEST     	R0 1 ; if R0 then PC := 84
	76	[4882]	JMP      	84 ; PC := 84
	77	[4883]	GETUPVAL 	R0 U2 ; R0 := U2
	78	[4883]	GETTABLE 	R0 R0 K22 ; R0 := R0["mHudMarkersMovie"]
	79	[4883]	SELF     	R0 R0 K25 ; R1 := R0; R0 := R0[0x263a3cc2]
	80	[4883]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	81	[4883]	SELF     	R2 R2 K26 ; R3 := R2; R2 := R2[0xcd73323e]
	82	[4883]	CALL     	R2 2 0 ; R2,... := R2(R3)
	83	[4883]	CALL     	R0 0 1 ; R0(R1,...)
	84	[4888]	GETUPVAL 	R0 U2 ; R0 := U2
	85	[4888]	GETGLOBAL	R1 K19 ; R1 := 0x9ba7909f
	86	[4888]	SELF     	R1 R1 K28 ; R2 := R1; R1 := R1[0xbf9494fc]
	87	[4888]	LOADK    	R3 K29 ; R3 := "HUD.UseAlternateHud"
	88	[4888]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	89	[4888]	SETTABLE 	R0 K27 R1 ; R0["IsAlternateHud"] := R1
	90	[4889]	GETUPVAL 	R0 U2 ; R0 := U2
	91	[4889]	GETTABLE 	R0 R0 K27 ; R0 := R0["IsAlternateHud"]
	92	[4889]	TEST     	R0 0 ; if not R0 then PC := 106
	93	[4889]	JMP      	106 ; PC := 106
	94	[4890]	GETGLOBAL	R0 K19 ; R0 := 0x9ba7909f
	95	[4890]	SELF     	R0 R0 K20 ; R1 := R0; R0 := R0[0x6dd7aa66]
	96	[4890]	GETGLOBAL	R2 K30 ; R2 := 0x4e5d03d3
	97	[4890]	CALL     	R0 3 1 ; R0(R1,R2)
	98	[4892]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	99	[4892]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x67bc869f]
	100	[4892]	LOADK    	R2 K2 ; R2 := "_root"
	101	[4892]	LOADK    	R3 := 10.000000
	102	[4892]	LOADK    	R4 := 100.000000
	103	[4892]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	104	[4893]	GETUPVAL 	R0 U0 ; R0 := U0
	105	[4893]	SETTABLE 	R0 K3 K31 ; R0["Fade"] := 0.000000
	106	[4896]	LOADK    	R0 := 25.000000
	107	[4898]	GETUPVAL 	R1 U3 ; R1 := U3
	108	[4898]	OP_LOADBOOL	R2 1 0 ; R2 := true
	109	[4898]	CALL     	R1 2 1 ; R1(R2)
	110	[4899]	GETUPVAL 	R1 U2 ; R1 := U2
	111	[4899]	GETUPVAL 	R2 U4 ; R2 := U4
	112	[4899]	SELF     	R2 R2 K33 ; R3 := R2; R2 := R2[0x1a8ce866]
	113	[4899]	CALL     	R2 2 2 ; R2 := R2(R3)
	114	[4899]	SETTABLE 	R1 K32 R2 ; R1["IsInConclave"] := R2
	115	[4901]	GETUPVAL 	R1 U5 ; R1 := U5
	116	[4901]	CALL     	R1 1 1 ; R1()
	117	[4903]	GETUPVAL 	R1 U6 ; R1 := U6
	118	[4903]	GETTABLE 	R1 R1 K34 ; R1 := R1[0xca6539f4]
	119	[4903]	CALL     	R1 1 1 ; R1()
	120	[4905]	GETGLOBAL	R1 K35 ; R1 := 0x76ea806b
	121	[4905]	SELF     	R1 R1 K36 ; R2 := R1; R1 := R1[0x8792aaab]
	122	[4905]	CALL     	R1 2 2 ; R1 := R1(R2)
	123	[4905]	TEST     	R1 0 ; if not R1 then PC := 134
	124	[4905]	JMP      	134 ; PC := 134
	125	[4907]	GETGLOBAL	R1 K37 ; R1 := 0x11a19c5e
	126	[4907]	GETGLOBAL	R2 K35 ; R2 := 0x76ea806b
	127	[4907]	SELF     	R2 R2 K38 ; R3 := R2; R2 := R2[0x3f3ae64c]
	128	[4907]	LOADK    	R4 := 0.000000
	129	[4907]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	130	[4907]	SELF     	R2 R2 K39 ; R3 := R2; R2 := R2[0x80563238]
	131	[4907]	CALL     	R2 2 2 ; R2 := R2(R3)
	132	[4907]	LOADK    	R3 K40 ; R3 := "OnProfileSaved"
	133	[4907]	CALL     	R1 3 1 ; R1(R2,R3)
	134	[4911]	NEWTABLE 	R1 9 0 ; R1 := {}
	135	[4911]	LOADK    	R2 K41 ; R2 := "ProgressBar"
	136	[4911]	LOADK    	R3 K42 ; R3 := "Timer"
	137	[4911]	LOADK    	R4 K43 ; R4 := "HealthTracker"
	138	[4911]	LOADK    	R5 K44 ; R5 := "OpponentBar"
	139	[4911]	LOADK    	R6 K45 ; R6 := "Label"
	140	[4911]	LOADK    	R7 K46 ; R7 := "IconBar"
	141	[4911]	LOADK    	R8 K47 ; R8 := "TemperatureBar"
	142	[4911]	LOADK    	R9 K48 ; R9 := "CorruptionMeter"
	143	[4911]	LOADK    	R10 K49 ; R10 := "NodeConflictBar"
	144	[4911]	SETLIST  	R1 9 1 ; R1[(1-1)*FPF+i] := R(1+i), 1 <= i <= 9
	145	[4912]	GETGLOBAL	R2 K50 ; R2 := 0xc8802016
	146	[4912]	MOVE     	R3 R1 ; R3 := R1
	147	[4912]	CALL     	R2 2 4 ; R2,R3,R4 := R2(R3)
	148	[4912]	JMP      	156 ; PC := 156
	149	[4913]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	150	[4913]	SELF     	R7 R7 K51 ; R8 := R7; R7 := R7[0xc0a3774b]
	151	[4913]	LOADK    	R9 K52 ; R9 := "HudTracker.Trackers"
	152	[4913]	MOVE     	R10 R6 ; R10 := R6
	153	[4913]	LOADK    	R11 := 11.000000
	154	[4913]	OP_LOADBOOL	R12 0 0 ; R12 := false
	155	[4913]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	156	[4912]	TFORLOOP 	R2 2 ; R5,R6 := R2(R3,R4); if R5 ~= nil then begin PC = 149; R4 := R5 end
	157	[4913]	JMP      	149 ; PC := 149
	158	[4915]	GETGLOBAL	R7 K53 ; R7 := 0x34291f5c
	159	[4915]	GETTABLE 	R7 R7 K54 ; R7 := R7[0xa7a2e381]
	160	[4915]	CALL     	R7 1 2 ; R7 := R7()
	161	[4915]	TEST     	R7 0 ; if not R7 then PC := 177
	162	[4915]	JMP      	177 ; PC := 177
	163	[4917]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	164	[4917]	SELF     	R7 R7 K55 ; R8 := R7; R7 := R7[0xe261aa96]
	165	[4917]	LOADK    	R9 K52 ; R9 := "HudTracker.Trackers"
	166	[4917]	LOADK    	R10 K45 ; R10 := "Label"
	167	[4917]	LOADK    	R11 := 41.000000
	168	[4917]	LOADK    	R12 K56 ; R12 := "Arial Unicode MS"
	169	[4917]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	170	[4919]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	171	[4919]	SELF     	R7 R7 K55 ; R8 := R7; R7 := R7[0xe261aa96]
	172	[4919]	LOADK    	R9 K57 ; R9 := "HudTracker.Trackers.HealthTracker"
	173	[4919]	LOADK    	R10 K58 ; R10 := "Name"
	174	[4919]	LOADK    	R11 := 41.000000
	175	[4919]	LOADK    	R12 K56 ; R12 := "Arial Unicode MS"
	176	[4919]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	177	[4922]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	178	[4922]	SELF     	R7 R7 K10 ; R8 := R7; R7 := R7[0xaade900e]
	179	[4922]	LOADK    	R9 K59 ; R9 := "MiniMapContainer.BroadcastMessage"
	180	[4922]	LOADK    	R10 := 11.000000
	181	[4922]	OP_LOADBOOL	R11 0 0 ; R11 := false
	182	[4922]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	183	[4924]	GETUPVAL 	R7 U4 ; R7 := U4
	184	[4924]	SELF     	R7 R7 K60 ; R8 := R7; R7 := R7[0xf2deaf69]
	185	[4924]	GETGLOBAL	R9 K61 ; R9 := gLotusBaseGameRulesType
	186	[4924]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	187	[4924]	TEST     	R7 0 ; if not R7 then PC := 217
	188	[4924]	JMP      	217 ; PC := 217
	189	[4925]	GETUPVAL 	R7 U4 ; R7 := U4
	190	[4925]	SELF     	R7 R7 K62 ; R8 := R7; R7 := R7[0xef893aec]
	191	[4925]	CALL     	R7 2 2 ; R7 := R7(R8)
	192	[4926]	GETUPVAL 	R8 U7 ; R8 := U7
	193	[4926]	GETTABLE 	R9 R7 K64 ; R9 := R7["location"]
	194	[4926]	GETUPVAL 	R10 U6 ; R10 := U6
	195	[4926]	GETTABLE 	R10 R10 K65 ; R10 := R10["CETUS_NODE_TAG"]
	196	[4926]	EQ       	1 R9 R10 ; if R9 == R10 then PC := 202
	197	[4926]	JMP      	202 ; PC := 202
	198	[4926]	GETTABLE 	R9 R7 K66 ; R9 := R7["missionType"]
	199	[4926]	EQ       	1 R9 K68 ; if R9 == 28.000000 then PC := 202
	200	[4926]	JMP      	202 ; PC := 202
	201	[4926]	OP_LOADBOOL	R9 0 1 ; R9 := false; PC := 202
	202	[4926]	OP_LOADBOOL	R9 1 0 ; R9 := true
	203	[4926]	SETTABLE 	R8 K63 R9 ; R8["Active"] := R9
	204	[4927]	GETUPVAL 	R8 U7 ; R8 := U7
	205	[4927]	GETTABLE 	R9 R7 K66 ; R9 := R7["missionType"]
	206	[4927]	EQ       	1 R9 K68 ; if R9 == 28.000000 then PC := 209
	207	[4927]	JMP      	209 ; PC := 209
	208	[4927]	OP_LOADBOOL	R9 0 1 ; R9 := false; PC := 209
	209	[4927]	OP_LOADBOOL	R9 1 0 ; R9 := true
	210	[4927]	SETTABLE 	R8 K69 R9 ; R8["Landscape"] := R9
	211	[4928]	GETUPVAL 	R8 U7 ; R8 := U7
	212	[4928]	SETTABLE 	R8 K70 K71 ; R8["Visible"] := false
	213	[4929]	GETUPVAL 	R8 U7 ; R8 := U7
	214	[4929]	SETTABLE 	R8 K72 K31 ; R8["DayCount"] := 0.000000
	215	[4930]	GETUPVAL 	R8 U7 ; R8 := U7
	216	[4930]	SETTABLE 	R8 K73 K31 ; R8["GameTimeAtDusk"] := 0.000000
	217	[4932]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	218	[4932]	SELF     	R8 R8 K10 ; R9 := R8; R8 := R8[0xaade900e]
	219	[4932]	LOADK    	R10 K74 ; R10 := "MiniMapContainer.Clock"
	220	[4932]	LOADK    	R11 := 11.000000
	221	[4932]	GETUPVAL 	R12 U7 ; R12 := U7
	222	[4932]	GETTABLE 	R12 R12 K70 ; R12 := R12["Visible"]
	223	[4932]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	224	[4933]	GETUPVAL 	R8 U7 ; R8 := U7
	225	[4933]	GETTABLE 	R8 R8 K70 ; R8 := R8["Visible"]
	226	[4933]	TEST     	R8 0 ; if not R8 then PC := 258
	227	[4933]	JMP      	258 ; PC := 258
	228	[4934]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	229	[4934]	SELF     	R8 R8 K75 ; R9 := R8; R8 := R8[0xef99134f]
	230	[4934]	LOADK    	R10 K76 ; R10 := "MiniMapContainer.Clock.Spinner.Day"
	231	[4934]	GETGLOBAL	R11 K77 ; R11 := 0x3d08cdc8
	232	[4934]	GETTABLE 	R11 R11 K4 ; R11 := R11[1.000000]
	233	[4934]	GETGLOBAL	R12 K78 ; R12 := 0x0032441c
	234	[4934]	GETTABLE 	R12 R12 K79 ; R12 := R12["UIMaterial_Plain"]
	235	[4934]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	236	[4935]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	237	[4935]	SELF     	R8 R8 K1 ; R9 := R8; R8 := R8[0x67bc869f]
	238	[4935]	LOADK    	R10 K76 ; R10 := "MiniMapContainer.Clock.Spinner.Day"
	239	[4935]	LOADK    	R11 := 9.000000
	240	[4935]	GETGLOBAL	R12 K78 ; R12 := 0x0032441c
	241	[4935]	GETTABLE 	R12 R12 K80 ; R12 := R12["UIColor_PvpTeamOne"]
	242	[4935]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	243	[4936]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	244	[4936]	SELF     	R8 R8 K75 ; R9 := R8; R8 := R8[0xef99134f]
	245	[4936]	LOADK    	R10 K81 ; R10 := "MiniMapContainer.Clock.Spinner.Night"
	246	[4936]	GETGLOBAL	R11 K77 ; R11 := 0x3d08cdc8
	247	[4936]	GETTABLE 	R11 R11 K82 ; R11 := R11[2.000000]
	248	[4936]	GETGLOBAL	R12 K78 ; R12 := 0x0032441c
	249	[4936]	GETTABLE 	R12 R12 K79 ; R12 := R12["UIMaterial_Plain"]
	250	[4936]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	251	[4937]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	252	[4937]	SELF     	R8 R8 K1 ; R9 := R8; R8 := R8[0x67bc869f]
	253	[4937]	LOADK    	R10 K81 ; R10 := "MiniMapContainer.Clock.Spinner.Night"
	254	[4937]	LOADK    	R11 := 9.000000
	255	[4937]	GETGLOBAL	R12 K78 ; R12 := 0x0032441c
	256	[4937]	GETTABLE 	R12 R12 K83 ; R12 := R12["UIColor_PvpTeamTwo"]
	257	[4937]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	258	[4941]	GETUPVAL 	R8 U8 ; R8 := U8
	259	[4941]	GETGLOBAL	R9 K0 ; R9 := 0xae91e43b
	260	[4941]	SELF     	R9 R9 K85 ; R10 := R9; R9 := R9[0x42b04007]
	261	[4941]	LOADK    	R11 K86 ; R11 := "/Lotus/Language/Menu/VoidTearProgressTitle"
	262	[4941]	OP_LOADBOOL	R12 1 0 ; R12 := true
	263	[4941]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	264	[4941]	SETTABLE 	R8 K84 R9 ; R8["Message"] := R9
	265	[4942]	GETUPVAL 	R8 U8 ; R8 := U8
	266	[4942]	GETGLOBAL	R9 K88 ; R9 := 0xb2f21425
	267	[4942]	SETTABLE 	R8 K87 R9 ; R8["Icon"] := R9
	268	[4943]	GETUPVAL 	R8 U8 ; R8 := U8
	269	[4943]	SETTABLE 	R8 K89 K6 ; R8["UpdateOverrides"] := true
	270	[4944]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	271	[4944]	SELF     	R8 R8 K1 ; R9 := R8; R8 := R8[0x67bc869f]
	272	[4944]	LOADK    	R10 K90 ; R10 := "MiniMapContainer.VoidTearProgress"
	273	[4944]	LOADK    	R11 := 10.000000
	274	[4944]	LOADK    	R12 := 0.000000
	275	[4944]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	276	[4946]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	277	[4946]	SELF     	R8 R8 K1 ; R9 := R8; R8 := R8[0x67bc869f]
	278	[4946]	LOADK    	R10 K91 ; R10 := "Card"
	279	[4946]	LOADK    	R11 := 1.000000
	280	[4946]	LOADK    	R12 := 360.000000
	281	[4946]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	282	[4948]	GETGLOBAL	R8 K0 ; R8 := 0xae91e43b
	283	[4948]	SELF     	R8 R8 K10 ; R9 := R8; R8 := R8[0xaade900e]
	284	[4948]	LOADK    	R10 K92 ; R10 := "MiniMapContainer.VoidTearProgress.List"
	285	[4948]	LOADK    	R11 := 11.000000
	286	[4948]	OP_LOADBOOL	R12 0 0 ; R12 := false
	287	[4948]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	288	[4950]	GETUPVAL 	R8 U9 ; R8 := U9
	289	[4950]	CALL     	R8 1 1 ; R8()
	290	[4952]	GETUPVAL 	R8 U10 ; R8 := U10
	291	[4952]	CALL     	R8 1 1 ; R8()
	292	[4953]	GETUPVAL 	R8 U12 ; R8 := U12
	293	[4953]	GETTABLE 	R8 R8 K93 ; R8 := R8[0xae6791ba]
	294	[4953]	GETGLOBAL	R9 K0 ; R9 := 0xae91e43b
	295	[4953]	CALL     	R8 2 2 ; R8 := R8(R9)
	296	[4953]	SETUPVAL 	R8 U11 ; U11 := R8
	297	[4954]	GETUPVAL 	R8 U11 ; R8 := U11
	298	[4954]	GETUPVAL 	R9 U13 ; R9 := U13
	299	[4954]	GETTABLE 	R9 R9 K95 ; R9 := R9["HudScalePadding"]
	300	[4954]	SETTABLE 	R8 K94 R9 ; R8["mHudScalePadding"] := R9
	301	[4955]	GETUPVAL 	R8 U11 ; R8 := U11
	302	[4955]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	303	[4955]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	304	[4955]	LOADK    	R11 K97 ; R11 := "LogMessageContainer"
	305	[4955]	NEWTABLE 	R12 2 0 ; R12 := {}
	306	[4955]	GETUPVAL 	R13 U11 ; R13 := U11
	307	[4955]	GETTABLE 	R13 R13 K98 ; R13 := R13["ANCHOR_V_BOTTOM"]
	308	[4955]	GETUPVAL 	R14 U11 ; R14 := U11
	309	[4955]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	310	[4955]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	311	[4955]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	312	[4956]	GETUPVAL 	R8 U11 ; R8 := U11
	313	[4956]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	314	[4956]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	315	[4956]	LOADK    	R11 K91 ; R11 := "Card"
	316	[4956]	NEWTABLE 	R12 2 0 ; R12 := {}
	317	[4956]	GETUPVAL 	R13 U11 ; R13 := U11
	318	[4956]	GETTABLE 	R13 R13 K100 ; R13 := R13["ANCHOR_V_CENTRE"]
	319	[4956]	GETUPVAL 	R14 U11 ; R14 := U11
	320	[4956]	GETTABLE 	R14 R14 K101 ; R14 := R14["ANCHOR_H_RIGHT"]
	321	[4956]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	322	[4956]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	323	[4957]	GETUPVAL 	R8 U11 ; R8 := U11
	324	[4957]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	325	[4957]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	326	[4957]	LOADK    	R11 K102 ; R11 := "HealthAndShield"
	327	[4957]	NEWTABLE 	R12 2 0 ; R12 := {}
	328	[4957]	GETUPVAL 	R13 U11 ; R13 := U11
	329	[4957]	GETTABLE 	R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
	330	[4957]	GETUPVAL 	R14 U11 ; R14 := U11
	331	[4957]	GETTABLE 	R14 R14 K101 ; R14 := R14["ANCHOR_H_RIGHT"]
	332	[4957]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	333	[4957]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	334	[4958]	GETUPVAL 	R8 U11 ; R8 := U11
	335	[4958]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	336	[4958]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	337	[4958]	LOADK    	R11 K104 ; R11 := "WeaponFrame"
	338	[4958]	NEWTABLE 	R12 2 0 ; R12 := {}
	339	[4958]	GETUPVAL 	R13 U11 ; R13 := U11
	340	[4958]	GETTABLE 	R13 R13 K98 ; R13 := R13["ANCHOR_V_BOTTOM"]
	341	[4958]	GETUPVAL 	R14 U11 ; R14 := U11
	342	[4958]	GETTABLE 	R14 R14 K101 ; R14 := R14["ANCHOR_H_RIGHT"]
	343	[4958]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	344	[4958]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	345	[4959]	GETUPVAL 	R8 U11 ; R8 := U11
	346	[4959]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	347	[4959]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	348	[4959]	LOADK    	R11 K105 ; R11 := "QuestMessage"
	349	[4959]	NEWTABLE 	R12 2 0 ; R12 := {}
	350	[4959]	GETUPVAL 	R13 U11 ; R13 := U11
	351	[4959]	GETTABLE 	R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
	352	[4959]	GETUPVAL 	R14 U11 ; R14 := U11
	353	[4959]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	354	[4959]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	355	[4959]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	356	[4960]	GETUPVAL 	R8 U11 ; R8 := U11
	357	[4960]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	358	[4960]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	359	[4960]	LOADK    	R11 K106 ; R11 := "AbilityPanel"
	360	[4960]	NEWTABLE 	R12 2 0 ; R12 := {}
	361	[4960]	GETUPVAL 	R13 U11 ; R13 := U11
	362	[4960]	GETTABLE 	R13 R13 K98 ; R13 := R13["ANCHOR_V_BOTTOM"]
	363	[4960]	GETUPVAL 	R14 U11 ; R14 := U11
	364	[4960]	GETTABLE 	R14 R14 K101 ; R14 := R14["ANCHOR_H_RIGHT"]
	365	[4960]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	366	[4960]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	367	[4961]	GETUPVAL 	R8 U11 ; R8 := U11
	368	[4961]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	369	[4961]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	370	[4961]	LOADK    	R11 K107 ; R11 := "MiniMapContainer"
	371	[4961]	NEWTABLE 	R12 2 0 ; R12 := {}
	372	[4961]	GETUPVAL 	R13 U11 ; R13 := U11
	373	[4961]	GETTABLE 	R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
	374	[4961]	GETUPVAL 	R14 U11 ; R14 := U11
	375	[4961]	GETTABLE 	R14 R14 K108 ; R14 := R14["ANCHOR_H_LEFT"]
	376	[4961]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	377	[4961]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	378	[4962]	GETUPVAL 	R8 U11 ; R8 := U11
	379	[4962]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	380	[4962]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	381	[4962]	LOADK    	R11 K109 ; R11 := "MiniMapOverlayMsg"
	382	[4962]	NEWTABLE 	R12 2 0 ; R12 := {}
	383	[4962]	GETUPVAL 	R13 U11 ; R13 := U11
	384	[4962]	GETTABLE 	R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
	385	[4962]	GETUPVAL 	R14 U11 ; R14 := U11
	386	[4962]	GETTABLE 	R14 R14 K108 ; R14 := R14["ANCHOR_H_LEFT"]
	387	[4962]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	388	[4962]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	389	[4963]	GETUPVAL 	R8 U11 ; R8 := U11
	390	[4963]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	391	[4963]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	392	[4963]	LOADK    	R11 K110 ; R11 := "HudTracker"
	393	[4963]	NEWTABLE 	R12 2 0 ; R12 := {}
	394	[4963]	GETUPVAL 	R13 U11 ; R13 := U11
	395	[4963]	GETTABLE 	R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
	396	[4963]	GETUPVAL 	R14 U11 ; R14 := U11
	397	[4963]	GETTABLE 	R14 R14 K108 ; R14 := R14["ANCHOR_H_LEFT"]
	398	[4963]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	399	[4963]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	400	[4964]	GETUPVAL 	R8 U11 ; R8 := U11
	401	[4964]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	402	[4964]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	403	[4964]	LOADK    	R11 K111 ; R11 := "Reticle"
	404	[4964]	NEWTABLE 	R12 2 0 ; R12 := {}
	405	[4964]	GETUPVAL 	R13 U11 ; R13 := U11
	406	[4964]	GETTABLE 	R13 R13 K100 ; R13 := R13["ANCHOR_V_CENTRE"]
	407	[4964]	GETUPVAL 	R14 U11 ; R14 := U11
	408	[4964]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	409	[4964]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	410	[4964]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	411	[4965]	GETUPVAL 	R8 U11 ; R8 := U11
	412	[4965]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	413	[4965]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	414	[4965]	LOADK    	R11 K112 ; R11 := "ReticleCustom"
	415	[4965]	NEWTABLE 	R12 2 0 ; R12 := {}
	416	[4965]	GETUPVAL 	R13 U11 ; R13 := U11
	417	[4965]	GETTABLE 	R13 R13 K100 ; R13 := R13["ANCHOR_V_CENTRE"]
	418	[4965]	GETUPVAL 	R14 U11 ; R14 := U11
	419	[4965]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	420	[4965]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	421	[4965]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	422	[4966]	GETUPVAL 	R8 U11 ; R8 := U11
	423	[4966]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	424	[4966]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	425	[4966]	LOADK    	R11 K113 ; R11 := "AbilityDots"
	426	[4966]	NEWTABLE 	R12 2 0 ; R12 := {}
	427	[4966]	GETUPVAL 	R13 U11 ; R13 := U11
	428	[4966]	GETTABLE 	R13 R13 K100 ; R13 := R13["ANCHOR_V_CENTRE"]
	429	[4966]	GETUPVAL 	R14 U11 ; R14 := U11
	430	[4966]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	431	[4966]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	432	[4966]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	433	[4967]	GETUPVAL 	R8 U11 ; R8 := U11
	434	[4967]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	435	[4967]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	436	[4967]	LOADK    	R11 K114 ; R11 := "Stamina"
	437	[4967]	NEWTABLE 	R12 2 0 ; R12 := {}
	438	[4967]	GETUPVAL 	R13 U11 ; R13 := U11
	439	[4967]	GETTABLE 	R13 R13 K100 ; R13 := R13["ANCHOR_V_CENTRE"]
	440	[4967]	GETUPVAL 	R14 U11 ; R14 := U11
	441	[4967]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	442	[4967]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	443	[4967]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	444	[4968]	GETUPVAL 	R8 U11 ; R8 := U11
	445	[4968]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	446	[4968]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	447	[4968]	LOADK    	R11 K115 ; R11 := "SuccessfulHitNotification"
	448	[4968]	NEWTABLE 	R12 2 0 ; R12 := {}
	449	[4968]	GETUPVAL 	R13 U11 ; R13 := U11
	450	[4968]	GETTABLE 	R13 R13 K100 ; R13 := R13["ANCHOR_V_CENTRE"]
	451	[4968]	GETUPVAL 	R14 U11 ; R14 := U11
	452	[4968]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	453	[4968]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	454	[4968]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	455	[4969]	GETUPVAL 	R8 U11 ; R8 := U11
	456	[4969]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	457	[4969]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	458	[4969]	LOADK    	R11 K116 ; R11 := "Notification"
	459	[4969]	NEWTABLE 	R12 2 0 ; R12 := {}
	460	[4969]	GETUPVAL 	R13 U11 ; R13 := U11
	461	[4969]	GETTABLE 	R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
	462	[4969]	GETUPVAL 	R14 U11 ; R14 := U11
	463	[4969]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	464	[4969]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	465	[4969]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	466	[4970]	GETUPVAL 	R8 U11 ; R8 := U11
	467	[4970]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	468	[4970]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	469	[4970]	LOADK    	R11 K117 ; R11 := "SlamIndicator"
	470	[4970]	NEWTABLE 	R12 2 0 ; R12 := {}
	471	[4970]	GETUPVAL 	R13 U11 ; R13 := U11
	472	[4970]	GETTABLE 	R13 R13 K100 ; R13 := R13["ANCHOR_V_CENTRE"]
	473	[4970]	GETUPVAL 	R14 U11 ; R14 := U11
	474	[4970]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	475	[4970]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	476	[4970]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	477	[4971]	GETUPVAL 	R8 U11 ; R8 := U11
	478	[4971]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	479	[4971]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	480	[4971]	LOADK    	R11 K118 ; R11 := "SyndicatePower"
	481	[4971]	NEWTABLE 	R12 2 0 ; R12 := {}
	482	[4971]	GETUPVAL 	R13 U11 ; R13 := U11
	483	[4971]	GETTABLE 	R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
	484	[4971]	GETUPVAL 	R14 U11 ; R14 := U11
	485	[4971]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	486	[4971]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	487	[4971]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	488	[4972]	GETUPVAL 	R8 U11 ; R8 := U11
	489	[4972]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	490	[4972]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	491	[4972]	LOADK    	R11 K119 ; R11 := "reloadTimer"
	492	[4972]	NEWTABLE 	R12 2 0 ; R12 := {}
	493	[4972]	GETUPVAL 	R13 U11 ; R13 := U11
	494	[4972]	GETTABLE 	R13 R13 K100 ; R13 := R13["ANCHOR_V_CENTRE"]
	495	[4972]	GETUPVAL 	R14 U11 ; R14 := U11
	496	[4972]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	497	[4972]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	498	[4972]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	499	[4973]	GETUPVAL 	R8 U11 ; R8 := U11
	500	[4973]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	501	[4973]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	502	[4973]	LOADK    	R11 K120 ; R11 := "AbilityChargeProgress"
	503	[4973]	NEWTABLE 	R12 2 0 ; R12 := {}
	504	[4973]	GETUPVAL 	R13 U11 ; R13 := U11
	505	[4973]	GETTABLE 	R13 R13 K100 ; R13 := R13["ANCHOR_V_CENTRE"]
	506	[4973]	GETUPVAL 	R14 U11 ; R14 := U11
	507	[4973]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	508	[4973]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	509	[4973]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	510	[4974]	GETUPVAL 	R8 U11 ; R8 := U11
	511	[4974]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	512	[4974]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	513	[4974]	LOADK    	R11 K121 ; R11 := "DamageIndicator"
	514	[4974]	NEWTABLE 	R12 2 0 ; R12 := {}
	515	[4974]	GETUPVAL 	R13 U11 ; R13 := U11
	516	[4974]	GETTABLE 	R13 R13 K100 ; R13 := R13["ANCHOR_V_CENTRE"]
	517	[4974]	GETUPVAL 	R14 U11 ; R14 := U11
	518	[4974]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	519	[4974]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	520	[4974]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	521	[4975]	GETUPVAL 	R8 U11 ; R8 := U11
	522	[4975]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	523	[4975]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	524	[4975]	LOADK    	R11 K122 ; R11 := "Prompt"
	525	[4975]	NEWTABLE 	R12 2 0 ; R12 := {}
	526	[4975]	GETUPVAL 	R13 U11 ; R13 := U11
	527	[4975]	GETTABLE 	R13 R13 K98 ; R13 := R13["ANCHOR_V_BOTTOM"]
	528	[4975]	GETUPVAL 	R14 U11 ; R14 := U11
	529	[4975]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	530	[4975]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	531	[4975]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	532	[4976]	GETUPVAL 	R8 U11 ; R8 := U11
	533	[4976]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	534	[4976]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	535	[4976]	LOADK    	R11 K123 ; R11 := "BorderBox"
	536	[4976]	NEWTABLE 	R12 2 0 ; R12 := {}
	537	[4976]	GETUPVAL 	R13 U11 ; R13 := U11
	538	[4976]	GETTABLE 	R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
	539	[4976]	GETUPVAL 	R14 U11 ; R14 := U11
	540	[4976]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	541	[4976]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	542	[4976]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	543	[4977]	GETUPVAL 	R8 U11 ; R8 := U11
	544	[4977]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	545	[4977]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	546	[4977]	LOADK    	R11 K124 ; R11 := "GenericMessage"
	547	[4977]	NEWTABLE 	R12 2 0 ; R12 := {}
	548	[4977]	GETUPVAL 	R13 U11 ; R13 := U11
	549	[4977]	GETTABLE 	R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
	550	[4977]	GETUPVAL 	R14 U11 ; R14 := U11
	551	[4977]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	552	[4977]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	553	[4977]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	554	[4978]	GETUPVAL 	R8 U11 ; R8 := U11
	555	[4978]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	556	[4978]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	557	[4978]	LOADK    	R11 K125 ; R11 := "ImpactMessage"
	558	[4978]	NEWTABLE 	R12 2 0 ; R12 := {}
	559	[4978]	GETUPVAL 	R13 U11 ; R13 := U11
	560	[4978]	GETTABLE 	R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
	561	[4978]	GETUPVAL 	R14 U11 ; R14 := U11
	562	[4978]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	563	[4978]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	564	[4978]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	565	[4979]	GETUPVAL 	R8 U11 ; R8 := U11
	566	[4979]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	567	[4979]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	568	[4979]	LOADK    	R11 K126 ; R11 := "GameplayMessage"
	569	[4979]	NEWTABLE 	R12 2 0 ; R12 := {}
	570	[4979]	GETUPVAL 	R13 U11 ; R13 := U11
	571	[4979]	GETTABLE 	R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
	572	[4979]	GETUPVAL 	R14 U11 ; R14 := U11
	573	[4979]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	574	[4979]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	575	[4979]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	576	[4980]	GETUPVAL 	R8 U11 ; R8 := U11
	577	[4980]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	578	[4980]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	579	[4980]	LOADK    	R11 K127 ; R11 := "MiniGameScore"
	580	[4980]	NEWTABLE 	R12 2 0 ; R12 := {}
	581	[4980]	GETUPVAL 	R13 U11 ; R13 := U11
	582	[4980]	GETTABLE 	R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
	583	[4980]	GETUPVAL 	R14 U11 ; R14 := U11
	584	[4980]	GETTABLE 	R14 R14 K108 ; R14 := R14["ANCHOR_H_LEFT"]
	585	[4980]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	586	[4980]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	587	[4981]	GETUPVAL 	R8 U11 ; R8 := U11
	588	[4981]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	589	[4981]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	590	[4981]	LOADK    	R11 K128 ; R11 := "StandingGain"
	591	[4981]	NEWTABLE 	R12 2 0 ; R12 := {}
	592	[4981]	GETUPVAL 	R13 U11 ; R13 := U11
	593	[4981]	GETTABLE 	R13 R13 K100 ; R13 := R13["ANCHOR_V_CENTRE"]
	594	[4981]	GETUPVAL 	R14 U11 ; R14 := U11
	595	[4981]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	596	[4981]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	597	[4981]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	598	[4982]	GETUPVAL 	R8 U11 ; R8 := U11
	599	[4982]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	600	[4982]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	601	[4982]	LOADK    	R11 K129 ; R11 := "PvPHeldFlagTimer"
	602	[4982]	NEWTABLE 	R12 2 0 ; R12 := {}
	603	[4982]	GETUPVAL 	R13 U11 ; R13 := U11
	604	[4982]	GETTABLE 	R13 R13 K100 ; R13 := R13["ANCHOR_V_CENTRE"]
	605	[4982]	GETUPVAL 	R14 U11 ; R14 := U11
	606	[4982]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	607	[4982]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	608	[4982]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	609	[4983]	GETUPVAL 	R8 U11 ; R8 := U11
	610	[4983]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	611	[4983]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	612	[4983]	LOADK    	R11 K130 ; R11 := "RevivePanel"
	613	[4983]	NEWTABLE 	R12 2 0 ; R12 := {}
	614	[4983]	GETUPVAL 	R13 U11 ; R13 := U11
	615	[4983]	GETTABLE 	R13 R13 K98 ; R13 := R13["ANCHOR_V_BOTTOM"]
	616	[4983]	GETUPVAL 	R14 U11 ; R14 := U11
	617	[4983]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	618	[4983]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	619	[4983]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	620	[4984]	GETUPVAL 	R8 U11 ; R8 := U11
	621	[4984]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	622	[4984]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	623	[4984]	LOADK    	R11 K131 ; R11 := "Spinner"
	624	[4984]	NEWTABLE 	R12 2 0 ; R12 := {}
	625	[4984]	GETUPVAL 	R13 U11 ; R13 := U11
	626	[4984]	GETTABLE 	R13 R13 K108 ; R13 := R13["ANCHOR_H_LEFT"]
	627	[4984]	GETUPVAL 	R14 U11 ; R14 := U11
	628	[4984]	GETTABLE 	R14 R14 K98 ; R14 := R14["ANCHOR_V_BOTTOM"]
	629	[4984]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	630	[4984]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	631	[4985]	GETUPVAL 	R8 U11 ; R8 := U11
	632	[4985]	SELF     	R8 R8 K96 ; R9 := R8; R8 := R8[0x20ff29f7]
	633	[4985]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	634	[4985]	LOADK    	R11 K132 ; R11 := "TargetStatus"
	635	[4985]	NEWTABLE 	R12 2 0 ; R12 := {}
	636	[4985]	GETUPVAL 	R13 U11 ; R13 := U11
	637	[4985]	GETTABLE 	R13 R13 K103 ; R13 := R13["ANCHOR_V_TOP"]
	638	[4985]	GETUPVAL 	R14 U11 ; R14 := U11
	639	[4985]	GETTABLE 	R14 R14 K99 ; R14 := R14["ANCHOR_H_CENTRE"]
	640	[4985]	SETLIST  	R12 2 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 2
	641	[4985]	CALL     	R8 5 1 ; R8(R9,R10,R11,R12)
	642	[4987]	GETGLOBAL	R8 K133 ; R8 := 0x2d0fad09
	643	[4987]	LOADK    	R9 K134 ; R9 := "Lotus.Interface.Components.ThemedSpinner"
	644	[4987]	CALL     	R8 2 2 ; R8 := R8(R9)
	645	[4988]	GETTABLE 	R9 R8 K93 ; R9 := R8[0xae6791ba]
	646	[4988]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	647	[4988]	LOADK    	R11 K131 ; R11 := "Spinner"
	648	[4988]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	649	[4988]	SETUPVAL 	R9 U14 ; U14 := R9
	650	[4989]	GETUPVAL 	R9 U14 ; R9 := U14
	651	[4989]	SETTABLE 	R9 K135 K6 ; R9["mApplyThemes"] := true
	652	[4991]	GETGLOBAL	R9 K16 ; R9 := 0x7b998233
	653	[4991]	GETUPVAL 	R10 U4 ; R10 := U4
	654	[4991]	CALL     	R9 2 2 ; R9 := R9(R10)
	655	[4991]	TEST     	R9 1 ; if R9 then PC := 689
	656	[4991]	JMP      	689 ; PC := 689
	657	[4991]	GETUPVAL 	R9 U4 ; R9 := U4
	658	[4991]	SELF     	R9 R9 K60 ; R10 := R9; R9 := R9[0xf2deaf69]
	659	[4991]	GETGLOBAL	R11 K136 ; R11 := gLotusBasePvpGameRulesType
	660	[4991]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	661	[4991]	TEST     	R9 1 ; if R9 then PC := 689
	662	[4991]	JMP      	689 ; PC := 689
	663	[4992]	LOADK    	R9 K129 ; R9 := "PvPHeldFlagTimer"
	664	[4993]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	665	[4993]	SELF     	R10 R10 K1 ; R11 := R10; R10 := R10[0x67bc869f]
	666	[4993]	MOVE     	R12 R9 ; R12 := R9
	667	[4993]	LOADK    	R13 := 5.000000
	668	[4993]	LOADK    	R14 := 50.000000
	669	[4993]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	670	[4994]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	671	[4994]	SELF     	R10 R10 K1 ; R11 := R10; R10 := R10[0x67bc869f]
	672	[4994]	MOVE     	R12 R9 ; R12 := R9
	673	[4994]	LOADK    	R13 := 6.000000
	674	[4994]	LOADK    	R14 := 50.000000
	675	[4994]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	676	[4995]	GETUPVAL 	R10 U11 ; R10 := U11
	677	[4995]	SELF     	R10 R10 K137 ; R11 := R10; R10 := R10[0x4bc5dc8b]
	678	[4995]	MOVE     	R12 R9 ; R12 := R9
	679	[4995]	LOADK    	R13 := 612.000000
	680	[4995]	LOADK    	R14 := 562.000000
	681	[4995]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	682	[4996]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	683	[4996]	SELF     	R10 R10 K1 ; R11 := R10; R10 := R10[0x67bc869f]
	684	[4996]	MOVE     	R12 R9 ; R12 := R9
	685	[4996]	LOADK    	R13 := 36.000000
	686	[4996]	GETGLOBAL	R14 K78 ; R14 := 0x0032441c
	687	[4996]	GETTABLE 	R14 R14 K138 ; R14 := R14["UIColor_White"]
	688	[4996]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	689	[4999]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	690	[4999]	SELF     	R10 R10 K139 ; R11 := R10; R10 := R10[0x91a24e4b]
	691	[4999]	LOADK    	R12 K125 ; R12 := "ImpactMessage"
	692	[4999]	LOADK    	R13 := 1.000000
	693	[4999]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	694	[4999]	SETUPVAL 	R10 U15 ; U15 := R10
	695	[5001]	GETUPVAL 	R10 U11 ; R10 := U11
	696	[5001]	SELF     	R10 R10 K140 ; R11 := R10; R10 := R10[0xfaa69527]
	697	[5001]	GETGLOBAL	R12 K0 ; R12 := 0xae91e43b
	698	[5001]	SELF     	R12 R12 K141 ; R13 := R12; R12 := R12[0x6b837788]
	699	[5001]	CALL     	R12 2 2 ; R12 := R12(R13)
	700	[5001]	GETGLOBAL	R13 K0 ; R13 := 0xae91e43b
	701	[5001]	SELF     	R13 R13 K142 ; R14 := R13; R13 := R13[0xaf9fda9f]
	702	[5001]	CALL     	R13 2 2 ; R13 := R13(R14)
	703	[5001]	OP_LOADBOOL	R14 1 0 ; R14 := true
	704	[5001]	GETUPVAL 	R15 U13 ; R15 := U13
	705	[5001]	GETTABLE 	R15 R15 K95 ; R15 := R15["HudScalePadding"]
	706	[5001]	CALL     	R10 6 1 ; R10(R11,R12,R13,R14,R15)
	707	[5003]	GETUPVAL 	R10 U16 ; R10 := U16
	708	[5003]	CALL     	R10 1 1 ; R10()
	709	[5005]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	710	[5005]	SELF     	R10 R10 K10 ; R11 := R10; R10 := R10[0xaade900e]
	711	[5005]	LOADK    	R12 K118 ; R12 := "SyndicatePower"
	712	[5005]	LOADK    	R13 := 11.000000
	713	[5005]	OP_LOADBOOL	R14 0 0 ; R14 := false
	714	[5005]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	715	[5006]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	716	[5006]	SELF     	R10 R10 K10 ; R11 := R10; R10 := R10[0xaade900e]
	717	[5006]	LOADK    	R12 K114 ; R12 := "Stamina"
	718	[5006]	LOADK    	R13 := 11.000000
	719	[5006]	OP_LOADBOOL	R14 0 0 ; R14 := false
	720	[5006]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	721	[5008]	GETGLOBAL	R10 K0 ; R10 := 0xae91e43b
	722	[5008]	SELF     	R10 R10 K143 ; R11 := R10; R10 := R10[0x52943844]
	723	[5008]	GETGLOBAL	R12 K0 ; R12 := 0xae91e43b
	724	[5008]	SELF     	R12 R12 K144 ; R13 := R12; R12 := R12[0x09839320]
	725	[5008]	LOADK    	R14 K145 ; R14 := "TargetHit1"
	726	[5008]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	727	[5008]	LOADK    	R13 := 11.000000
	728	[5008]	OP_LOADBOOL	R14 0 0 ; R14 := false
	729	[5008]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	730	[5010]	GETGLOBAL	R10 K16 ; R10 := 0x7b998233
	731	[5010]	GETGLOBAL	R11 K146 ; R11 := 0x2c15a601
	732	[5010]	CALL     	R10 2 2 ; R10 := R10(R11)
	733	[5010]	TEST     	R10 1 ; if R10 then PC := 755
	734	[5010]	JMP      	755 ; PC := 755
	735	[5010]	GETGLOBAL	R10 K19 ; R10 := 0x9ba7909f
	736	[5010]	SELF     	R10 R10 K28 ; R11 := R10; R10 := R10[0xbf9494fc]
	737	[5010]	LOADK    	R12 K147 ; R12 := "HUD.ShowInWorldContextActions"
	738	[5010]	OP_LOADBOOL	R13 1 0 ; R13 := true
	739	[5010]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	740	[5010]	TEST     	R10 0 ; if not R10 then PC := 755
	741	[5010]	JMP      	755 ; PC := 755
	742	[5011]	GETGLOBAL	R10 K19 ; R10 := 0x9ba7909f
	743	[5011]	SELF     	R10 R10 K23 ; R11 := R10; R10 := R10[0xbcfb64ab]
	744	[5011]	GETGLOBAL	R12 K146 ; R12 := 0x2c15a601
	745	[5011]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	746	[5012]	GETGLOBAL	R11 K16 ; R11 := 0x7b998233
	747	[5012]	MOVE     	R12 R10 ; R12 := R10
	748	[5012]	CALL     	R11 2 2 ; R11 := R11(R12)
	749	[5012]	TEST     	R11 0 ; if not R11 then PC := 755
	750	[5012]	JMP      	755 ; PC := 755
	751	[5013]	GETGLOBAL	R11 K0 ; R11 := 0xae91e43b
	752	[5013]	SELF     	R11 R11 K24 ; R12 := R11; R11 := R11[0x1fd6abd0]
	753	[5013]	GETGLOBAL	R13 K146 ; R13 := 0x2c15a601
	754	[5013]	CALL     	R11 3 1 ; R11(R12,R13)
	755	[5018]	GETUPVAL 	R11 U17 ; R11 := U17
	756	[5018]	CALL     	R11 1 1 ; R11()
	757	[5019]	GETUPVAL 	R11 U18 ; R11 := U18
	758	[5019]	CALL     	R11 1 1 ; R11()
	759	[5021]	GETGLOBAL	R11 K0 ; R11 := 0xae91e43b
	760	[5021]	SELF     	R11 R11 K148 ; R12 := R11; R11 := R11[0x5ee2cc30]
	761	[5021]	LOADK    	R13 K126 ; R13 := "GameplayMessage"
	762	[5021]	LOADK    	R14 K149 ; R14 := "OnFrameEnter"
	763	[5021]	CALL     	R11 4 1 ; R11(R12,R13,R14)
	764	[5022]	GETGLOBAL	R11 K0 ; R11 := 0xae91e43b
	765	[5022]	SELF     	R11 R11 K148 ; R12 := R11; R11 := R11[0x5ee2cc30]
	766	[5022]	LOADK    	R13 K150 ; R13 := "Reticle.Arm1"
	767	[5022]	LOADK    	R14 K149 ; R14 := "OnFrameEnter"
	768	[5022]	CALL     	R11 4 1 ; R11(R12,R13,R14)
	769	[5024]	LOADK    	R11 := 1.000000
	770	[5024]	LOADK    	R12 := 4.000000
	771	[5024]	LOADK    	R13 := 1.000000
	772	[5024]	FORPREP  	R11 790 ; R11 -= R13; PC := 790
	773	[5025]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	774	[5025]	SELF     	R15 R15 K51 ; R16 := R15; R15 := R15[0xc0a3774b]
	775	[5025]	LOADK    	R17 K151 ; R17 := "AbilityPanel.Ability"
	776	[5025]	MOVE     	R18 R14 ; R18 := R14
	777	[5025]	CONCAT   	R17 R17 R18 ; R17 := R17 .. R18
	778	[5025]	LOADK    	R18 K152 ; R18 := "ActiveAnim"
	779	[5025]	LOADK    	R19 := 11.000000
	780	[5025]	OP_LOADBOOL	R20 0 0 ; R20 := false
	781	[5025]	CALL     	R15 6 1 ; R15(R16,R17,R18,R19,R20)
	782	[5026]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	783	[5026]	SELF     	R15 R15 K148 ; R16 := R15; R15 := R15[0x5ee2cc30]
	784	[5026]	LOADK    	R17 K151 ; R17 := "AbilityPanel.Ability"
	785	[5026]	MOVE     	R18 R14 ; R18 := R14
	786	[5026]	LOADK    	R19 K153 ; R19 := ".Blocked"
	787	[5026]	CONCAT   	R17 R17 R19 ; R17 := R17 .. R18 .. R19
	788	[5026]	LOADK    	R18 K149 ; R18 := "OnFrameEnter"
	789	[5026]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	790	[5024]	FORLOOP  	R11 773 ; R11 += R13; if R11 <= R12 then begin PC := 773; R14 := R11 end
	791	[5028]	GETUPVAL 	R15 U20 ; R15 := U20
	792	[5028]	GETTABLE 	R15 R15 K154 ; R15 := R15[0x4c3dfdb3]
	793	[5028]	LOADNIL  	R16 R16 ; R16 := nil
	794	[5036]	CLOSURE  	R17 0 ; R17 := closure(Function #1)
	795	[5028]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	796	[5036]	SETUPVAL 	R15 U19 ; U19 := R15
	797	[5038]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	798	[5038]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	799	[5038]	LOADK    	R17 K111 ; R17 := "Reticle"
	800	[5038]	LOADK    	R18 := 10.000000
	801	[5038]	LOADK    	R19 := 0.000000
	802	[5038]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	803	[5039]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	804	[5039]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	805	[5039]	LOADK    	R17 K112 ; R17 := "ReticleCustom"
	806	[5039]	LOADK    	R18 := 10.000000
	807	[5039]	LOADK    	R19 := 0.000000
	808	[5039]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	809	[5041]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	810	[5041]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	811	[5041]	LOADK    	R17 K117 ; R17 := "SlamIndicator"
	812	[5041]	LOADK    	R18 := 10.000000
	813	[5041]	LOADK    	R19 := 0.000000
	814	[5041]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	815	[5043]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	816	[5043]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	817	[5043]	LOADK    	R17 K119 ; R17 := "reloadTimer"
	818	[5043]	LOADK    	R18 := 10.000000
	819	[5043]	LOADK    	R19 := 0.000000
	820	[5043]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	821	[5044]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	822	[5044]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	823	[5044]	LOADK    	R17 K155 ; R17 := "reloadTimer.RangeBrackets"
	824	[5044]	LOADK    	R18 := 10.000000
	825	[5044]	LOADK    	R19 := 0.000000
	826	[5044]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	827	[5045]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	828	[5045]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	829	[5045]	LOADK    	R17 K156 ; R17 := "reloadTimer.RangeGradients"
	830	[5045]	LOADK    	R18 := 10.000000
	831	[5045]	LOADK    	R19 := 0.000000
	832	[5045]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	833	[5046]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	834	[5046]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	835	[5046]	LOADK    	R17 K157 ; R17 := "reloadTimer.ChargeCap"
	836	[5046]	LOADK    	R18 := 10.000000
	837	[5046]	LOADK    	R19 := 0.000000
	838	[5046]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	839	[5047]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	840	[5047]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	841	[5047]	LOADK    	R17 K120 ; R17 := "AbilityChargeProgress"
	842	[5047]	LOADK    	R18 := 10.000000
	843	[5047]	LOADK    	R19 := 0.000000
	844	[5047]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	845	[5049]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	846	[5049]	SELF     	R15 R15 K10 ; R16 := R15; R15 := R15[0xaade900e]
	847	[5049]	LOADK    	R17 K121 ; R17 := "DamageIndicator"
	848	[5049]	LOADK    	R18 := 11.000000
	849	[5049]	OP_LOADBOOL	R19 0 0 ; R19 := false
	850	[5049]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	851	[5050]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	852	[5050]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	853	[5050]	LOADK    	R17 K158 ; R17 := "MiniMapContainer.StatusEffect"
	854	[5050]	LOADK    	R18 := 10.000000
	855	[5050]	LOADK    	R19 := 0.000000
	856	[5050]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	857	[5052]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	858	[5052]	SELF     	R15 R15 K10 ; R16 := R15; R15 := R15[0xaade900e]
	859	[5052]	LOADK    	R17 K159 ; R17 := "MiniMapContainer.FlareLoader"
	860	[5052]	LOADK    	R18 := 11.000000
	861	[5052]	OP_LOADBOOL	R19 0 0 ; R19 := false
	862	[5052]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	863	[5055]	GETGLOBAL	R15 K16 ; R15 := 0x7b998233
	864	[5055]	GETGLOBAL	R16 K160 ; R16 := 0x6ad62b02
	865	[5055]	CALL     	R15 2 2 ; R15 := R15(R16)
	866	[5055]	TEST     	R15 1 ; if R15 then PC := 878
	867	[5055]	JMP      	878 ; PC := 878
	868	[5056]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	869	[5056]	SELF     	R15 R15 K161 ; R16 := R15; R15 := R15[0xd5181643]
	870	[5056]	LOADK    	R17 K107 ; R17 := "MiniMapContainer"
	871	[5056]	GETGLOBAL	R18 K160 ; R18 := 0x6ad62b02
	872	[5056]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	873	[5057]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	874	[5057]	SELF     	R15 R15 K161 ; R16 := R15; R15 := R15[0xd5181643]
	875	[5057]	LOADK    	R17 K110 ; R17 := "HudTracker"
	876	[5057]	GETGLOBAL	R18 K160 ; R18 := 0x6ad62b02
	877	[5057]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	878	[5059]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	879	[5059]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	880	[5059]	LOADK    	R17 K162 ; R17 := "MiniMapContainer.MiniMap"
	881	[5059]	LOADK    	R18 := 10.000000
	882	[5059]	LOADK    	R19 := 0.000000
	883	[5059]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	884	[5060]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	885	[5060]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	886	[5060]	LOADK    	R17 K109 ; R17 := "MiniMapOverlayMsg"
	887	[5060]	LOADK    	R18 := 10.000000
	888	[5060]	LOADK    	R19 := 0.000000
	889	[5060]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	890	[5061]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	891	[5061]	SELF     	R15 R15 K161 ; R16 := R15; R15 := R15[0xd5181643]
	892	[5061]	LOADK    	R17 K163 ; R17 := "MiniMapOverlayMsg.Bg"
	893	[5061]	GETGLOBAL	R18 K78 ; R18 := 0x0032441c
	894	[5061]	GETTABLE 	R18 R18 K164 ; R18 := R18["UIMaterial_RectangleNoDepth"]
	895	[5061]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	896	[5062]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	897	[5062]	SELF     	R15 R15 K165 ; R16 := R15; R15 := R15[0x91e13703]
	898	[5062]	LOADK    	R17 K163 ; R17 := "MiniMapOverlayMsg.Bg"
	899	[5062]	LOADK    	R18 K166 ; R18 := "RectInnerColor"
	900	[5062]	GETGLOBAL	R19 K78 ; R19 := 0x0032441c
	901	[5062]	GETTABLE 	R19 R19 K167 ; R19 := R19["UIColorObject_Black"]
	902	[5062]	GETTABLE 	R19 R19 K168 ; R19 := R19["r"]
	903	[5062]	GETGLOBAL	R20 K78 ; R20 := 0x0032441c
	904	[5062]	GETTABLE 	R20 R20 K167 ; R20 := R20["UIColorObject_Black"]
	905	[5062]	GETTABLE 	R20 R20 K169 ; R20 := R20["g"]
	906	[5062]	GETGLOBAL	R21 K78 ; R21 := 0x0032441c
	907	[5062]	GETTABLE 	R21 R21 K167 ; R21 := R21["UIColorObject_Black"]
	908	[5062]	GETTABLE 	R21 R21 K170 ; R21 := R21["b"]
	909	[5062]	LOADK    	R22 K171 ; R22 := 0.400000
	910	[5062]	CALL     	R15 8 1 ; R15(R16,R17,R18,R19,R20,R21,R22)
	911	[5063]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	912	[5063]	SELF     	R15 R15 K165 ; R16 := R15; R15 := R15[0x91e13703]
	913	[5063]	LOADK    	R17 K163 ; R17 := "MiniMapOverlayMsg.Bg"
	914	[5063]	LOADK    	R18 K172 ; R18 := "RectEdgeColor"
	915	[5063]	GETGLOBAL	R19 K78 ; R19 := 0x0032441c
	916	[5063]	GETTABLE 	R19 R19 K167 ; R19 := R19["UIColorObject_Black"]
	917	[5063]	GETTABLE 	R19 R19 K168 ; R19 := R19["r"]
	918	[5063]	GETGLOBAL	R20 K78 ; R20 := 0x0032441c
	919	[5063]	GETTABLE 	R20 R20 K167 ; R20 := R20["UIColorObject_Black"]
	920	[5063]	GETTABLE 	R20 R20 K169 ; R20 := R20["g"]
	921	[5063]	GETGLOBAL	R21 K78 ; R21 := 0x0032441c
	922	[5063]	GETTABLE 	R21 R21 K167 ; R21 := R21["UIColorObject_Black"]
	923	[5063]	GETTABLE 	R21 R21 K170 ; R21 := R21["b"]
	924	[5063]	LOADK    	R22 K171 ; R22 := 0.400000
	925	[5063]	CALL     	R15 8 1 ; R15(R16,R17,R18,R19,R20,R21,R22)
	926	[5064]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	927	[5064]	SELF     	R15 R15 K173 ; R16 := R15; R15 := R15[0x20b98db3]
	928	[5064]	LOADK    	R17 K174 ; R17 := "MiniMapOverlayMsg.Label.text"
	929	[5064]	LOADK    	R18 K175 ; R18 := "/Lotus/Language/SystemMessages/MapJammed"
	930	[5064]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	931	[5065]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	932	[5065]	SELF     	R15 R15 K10 ; R16 := R15; R15 := R15[0xaade900e]
	933	[5065]	LOADK    	R17 K176 ; R17 := "MiniMapContainer.MiniMapMarkers.Marker1"
	934	[5065]	LOADK    	R18 := 11.000000
	935	[5065]	OP_LOADBOOL	R19 0 0 ; R19 := false
	936	[5065]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	937	[5066]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	938	[5066]	SELF     	R15 R15 K10 ; R16 := R15; R15 := R15[0xaade900e]
	939	[5066]	LOADK    	R17 K177 ; R17 := "MiniMapContainer.Map"
	940	[5066]	LOADK    	R18 := 11.000000
	941	[5066]	OP_LOADBOOL	R19 0 0 ; R19 := false
	942	[5066]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	943	[5067]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	944	[5067]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	945	[5067]	LOADK    	R17 K116 ; R17 := "Notification"
	946	[5067]	LOADK    	R18 := 10.000000
	947	[5067]	LOADK    	R19 := 0.000000
	948	[5067]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	949	[5069]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	950	[5069]	SELF     	R15 R15 K10 ; R16 := R15; R15 := R15[0xaade900e]
	951	[5069]	LOADK    	R17 K178 ; R17 := "WeaponFrame.Rage"
	952	[5069]	LOADK    	R18 := 11.000000
	953	[5069]	OP_LOADBOOL	R19 0 0 ; R19 := false
	954	[5069]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	955	[5070]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	956	[5070]	SELF     	R15 R15 K10 ; R16 := R15; R15 := R15[0xaade900e]
	957	[5070]	LOADK    	R17 K179 ; R17 := "WeaponFrame.Rage.ComboLabelA"
	958	[5070]	LOADK    	R18 := 11.000000
	959	[5070]	OP_LOADBOOL	R19 0 0 ; R19 := false
	960	[5070]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	961	[5071]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	962	[5071]	SELF     	R15 R15 K10 ; R16 := R15; R15 := R15[0xaade900e]
	963	[5071]	LOADK    	R17 K180 ; R17 := "WeaponFrame.Rage.ComboLabelB"
	964	[5071]	LOADK    	R18 := 11.000000
	965	[5071]	OP_LOADBOOL	R19 0 0 ; R19 := false
	966	[5071]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	967	[5072]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	968	[5072]	SELF     	R15 R15 K10 ; R16 := R15; R15 := R15[0xaade900e]
	969	[5072]	LOADK    	R17 K181 ; R17 := "WeaponFrame.Rage.ComboLabelMiddle"
	970	[5072]	LOADK    	R18 := 11.000000
	971	[5072]	OP_LOADBOOL	R19 0 0 ; R19 := false
	972	[5072]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	973	[5073]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	974	[5073]	SELF     	R15 R15 K161 ; R16 := R15; R15 := R15[0xd5181643]
	975	[5073]	LOADK    	R17 K181 ; R17 := "WeaponFrame.Rage.ComboLabelMiddle"
	976	[5073]	GETGLOBAL	R18 K78 ; R18 := 0x0032441c
	977	[5073]	GETTABLE 	R18 R18 K182 ; R18 := R18["UIMaterial_SmoothEdgeNoDepthTest"]
	978	[5073]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	979	[5074]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	980	[5074]	SELF     	R15 R15 K10 ; R16 := R15; R15 := R15[0xaade900e]
	981	[5074]	LOADK    	R17 K183 ; R17 := "WeaponFrame.ComboLabelA"
	982	[5074]	LOADK    	R18 := 11.000000
	983	[5074]	OP_LOADBOOL	R19 0 0 ; R19 := false
	984	[5074]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	985	[5075]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	986	[5075]	SELF     	R15 R15 K10 ; R16 := R15; R15 := R15[0xaade900e]
	987	[5075]	LOADK    	R17 K184 ; R17 := "WeaponFrame.ComboLabelB"
	988	[5075]	LOADK    	R18 := 11.000000
	989	[5075]	OP_LOADBOOL	R19 0 0 ; R19 := false
	990	[5075]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	991	[5076]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	992	[5076]	SELF     	R15 R15 K10 ; R16 := R15; R15 := R15[0xaade900e]
	993	[5076]	LOADK    	R17 K185 ; R17 := "WeaponFrame.ComboLabelMiddle"
	994	[5076]	LOADK    	R18 := 11.000000
	995	[5076]	OP_LOADBOOL	R19 0 0 ; R19 := false
	996	[5076]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	997	[5077]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	998	[5077]	SELF     	R15 R15 K10 ; R16 := R15; R15 := R15[0xaade900e]
	999	[5077]	LOADK    	R17 K186 ; R17 := "WeaponFrame.ComboLabelTimer"
	1000	[5077]	LOADK    	R18 := 11.000000
	1001	[5077]	OP_LOADBOOL	R19 0 0 ; R19 := false
	1002	[5077]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	1003	[5078]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1004	[5078]	SELF     	R15 R15 K10 ; R16 := R15; R15 := R15[0xaade900e]
	1005	[5078]	LOADK    	R17 K187 ; R17 := "WeaponFrame.ComboTitle"
	1006	[5078]	LOADK    	R18 := 11.000000
	1007	[5078]	OP_LOADBOOL	R19 0 0 ; R19 := false
	1008	[5078]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	1009	[5079]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1010	[5079]	SELF     	R15 R15 K173 ; R16 := R15; R15 := R15[0x20b98db3]
	1011	[5079]	LOADK    	R17 K188 ; R17 := "WeaponFrame.ComboTitle.text"
	1012	[5079]	LOADK    	R18 K189 ; R18 := "/Lotus/Language/Menu/Combo"
	1013	[5079]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	1014	[5081]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1015	[5081]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	1016	[5081]	LOADK    	R17 K190 ; R17 := "WeaponFrame.ComboLabelTimer.Fill"
	1017	[5081]	LOADK    	R18 := 10.000000
	1018	[5081]	LOADK    	R19 := 50.000000
	1019	[5081]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	1020	[5082]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1021	[5082]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	1022	[5082]	LOADK    	R17 K191 ; R17 := "WeaponFrame.LabelTimer.Fill"
	1023	[5082]	LOADK    	R18 := 10.000000
	1024	[5082]	LOADK    	R19 := 50.000000
	1025	[5082]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	1026	[5083]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1027	[5083]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	1028	[5083]	LOADK    	R17 K192 ; R17 := "WeaponFrame.ComboLabelTimer.Bg"
	1029	[5083]	LOADK    	R18 := 10.000000
	1030	[5083]	LOADK    	R19 := 30.000000
	1031	[5083]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	1032	[5084]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1033	[5084]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	1034	[5084]	LOADK    	R17 K193 ; R17 := "WeaponFrame.LabelTimer.Bg"
	1035	[5084]	LOADK    	R18 := 10.000000
	1036	[5084]	LOADK    	R19 := 30.000000
	1037	[5084]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	1038	[5085]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1039	[5085]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	1040	[5085]	LOADK    	R17 K192 ; R17 := "WeaponFrame.ComboLabelTimer.Bg"
	1041	[5085]	LOADK    	R18 := 9.000000
	1042	[5085]	LOADK    	R19 := 0.000000
	1043	[5085]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	1044	[5086]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1045	[5086]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	1046	[5086]	LOADK    	R17 K193 ; R17 := "WeaponFrame.LabelTimer.Bg"
	1047	[5086]	LOADK    	R18 := 9.000000
	1048	[5086]	LOADK    	R19 := 0.000000
	1049	[5086]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	1050	[5088]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1051	[5088]	SELF     	R15 R15 K194 ; R16 := R15; R15 := R15[0x5f56eeab]
	1052	[5088]	LOADK    	R17 K195 ; R17 := "WeaponFrame.Name"
	1053	[5088]	LOADK    	R18 := 29.000000
	1054	[5088]	LOADK    	R19 K196 ; R19 := ""
	1055	[5088]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	1056	[5090]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1057	[5090]	SELF     	R15 R15 K173 ; R16 := R15; R15 := R15[0x20b98db3]
	1058	[5090]	LOADK    	R17 K197 ; R17 := "Notification.Message.text"
	1059	[5090]	LOADK    	R18 K198 ; R18 := "/Lotus/Language/Menu/LevelUp"
	1060	[5090]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	1061	[5092]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1062	[5092]	SELF     	R15 R15 K199 ; R16 := R15; R15 := R15[0x1cb415c1]
	1063	[5092]	LOADK    	R17 K115 ; R17 := "SuccessfulHitNotification"
	1064	[5092]	GETGLOBAL	R18 K200 ; R18 := 0x90e76fe1
	1065	[5092]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	1066	[5093]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1067	[5093]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	1068	[5093]	LOADK    	R17 K115 ; R17 := "SuccessfulHitNotification"
	1069	[5093]	LOADK    	R18 := 10.000000
	1070	[5093]	LOADK    	R19 := 0.000000
	1071	[5093]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	1072	[5095]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1073	[5095]	SELF     	R15 R15 K161 ; R16 := R15; R15 := R15[0xd5181643]
	1074	[5095]	LOADK    	R17 K201 ; R17 := "reloadTimer.Fill"
	1075	[5095]	GETGLOBAL	R18 K202 ; R18 := 0x2545668b
	1076	[5095]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	1077	[5096]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1078	[5096]	SELF     	R15 R15 K161 ; R16 := R15; R15 := R15[0xd5181643]
	1079	[5096]	LOADK    	R17 K203 ; R17 := "AbilityChargeProgress.Progress"
	1080	[5096]	GETGLOBAL	R18 K202 ; R18 := 0x2545668b
	1081	[5096]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	1082	[5098]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1083	[5098]	SELF     	R15 R15 K161 ; R16 := R15; R15 := R15[0xd5181643]
	1084	[5098]	LOADK    	R17 K204 ; R17 := "RevivePanel.HoldProgress.Backer"
	1085	[5098]	GETGLOBAL	R18 K205 ; R18 := 0x1211e3e3
	1086	[5098]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	1087	[5099]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1088	[5099]	SELF     	R15 R15 K161 ; R16 := R15; R15 := R15[0xd5181643]
	1089	[5099]	LOADK    	R17 K206 ; R17 := "RevivePanel.HoldProgress.Fill"
	1090	[5099]	GETGLOBAL	R18 K207 ; R18 := 0xeebb769c
	1091	[5099]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	1092	[5100]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1093	[5100]	SELF     	R15 R15 K161 ; R16 := R15; R15 := R15[0xd5181643]
	1094	[5100]	LOADK    	R17 K208 ; R17 := "RevivePanel.HoldProgress.IconContainer.Icon"
	1095	[5100]	GETGLOBAL	R18 K209 ; R18 := 0xb2028b83
	1096	[5100]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	1097	[5101]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1098	[5101]	SELF     	R15 R15 K161 ; R16 := R15; R15 := R15[0xd5181643]
	1099	[5101]	LOADK    	R17 K210 ; R17 := "RevivePanel.HoldProgress.Diamond"
	1100	[5101]	GETGLOBAL	R18 K78 ; R18 := 0x0032441c
	1101	[5101]	GETTABLE 	R18 R18 K79 ; R18 := R18["UIMaterial_Plain"]
	1102	[5101]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	1103	[5102]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1104	[5102]	SELF     	R15 R15 K161 ; R16 := R15; R15 := R15[0xd5181643]
	1105	[5102]	LOADK    	R17 K211 ; R17 := "RevivePanel.HoldProgress.IconContainer.IconShadow"
	1106	[5102]	GETGLOBAL	R18 K78 ; R18 := 0x0032441c
	1107	[5102]	GETTABLE 	R18 R18 K79 ; R18 := R18["UIMaterial_Plain"]
	1108	[5102]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	1109	[5103]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1110	[5103]	SELF     	R15 R15 K161 ; R16 := R15; R15 := R15[0xd5181643]
	1111	[5103]	LOADK    	R17 K212 ; R17 := "RevivePanel.HoldProgress.IconContainer.Blur"
	1112	[5103]	GETGLOBAL	R18 K78 ; R18 := 0x0032441c
	1113	[5103]	GETTABLE 	R18 R18 K79 ; R18 := R18["UIMaterial_Plain"]
	1114	[5103]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	1115	[5104]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1116	[5104]	SELF     	R15 R15 K165 ; R16 := R15; R15 := R15[0x91e13703]
	1117	[5104]	LOADK    	R17 K206 ; R17 := "RevivePanel.HoldProgress.Fill"
	1118	[5104]	LOADK    	R18 K213 ; R18 := "AlphaTestThreshold"
	1119	[5104]	LOADK    	R19 := 0.000000
	1120	[5104]	LOADK    	R20 := 0.000000
	1121	[5104]	LOADK    	R21 := 0.000000
	1122	[5104]	LOADK    	R22 := 0.000000
	1123	[5104]	CALL     	R15 8 1 ; R15(R16,R17,R18,R19,R20,R21,R22)
	1124	[5105]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1125	[5105]	SELF     	R15 R15 K165 ; R16 := R15; R15 := R15[0x91e13703]
	1126	[5105]	LOADK    	R17 K204 ; R17 := "RevivePanel.HoldProgress.Backer"
	1127	[5105]	LOADK    	R18 K214 ; R18 := "CircleSettings"
	1128	[5105]	LOADK    	R19 K215 ; R19 := 0.485000
	1129	[5105]	LOADK    	R20 K216 ; R20 := 0.200000
	1130	[5105]	LOADK    	R21 K217 ; R21 := 0.650000
	1131	[5105]	LOADK    	R22 := 0.000000
	1132	[5105]	CALL     	R15 8 1 ; R15(R16,R17,R18,R19,R20,R21,R22)
	1133	[5106]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1134	[5106]	SELF     	R15 R15 K165 ; R16 := R15; R15 := R15[0x91e13703]
	1135	[5106]	LOADK    	R17 K206 ; R17 := "RevivePanel.HoldProgress.Fill"
	1136	[5106]	LOADK    	R18 K214 ; R18 := "CircleSettings"
	1137	[5106]	LOADK    	R19 K215 ; R19 := 0.485000
	1138	[5106]	LOADK    	R20 K216 ; R20 := 0.200000
	1139	[5106]	LOADK    	R21 K217 ; R21 := 0.650000
	1140	[5106]	LOADK    	R22 := 0.000000
	1141	[5106]	CALL     	R15 8 1 ; R15(R16,R17,R18,R19,R20,R21,R22)
	1142	[5107]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1143	[5107]	SELF     	R15 R15 K1 ; R16 := R15; R15 := R15[0x67bc869f]
	1144	[5107]	LOADK    	R17 K130 ; R17 := "RevivePanel"
	1145	[5107]	LOADK    	R18 := 10.000000
	1146	[5107]	LOADK    	R19 := 0.000000
	1147	[5107]	CALL     	R15 5 1 ; R15(R16,R17,R18,R19)
	1148	[5109]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1149	[5109]	SELF     	R15 R15 K161 ; R16 := R15; R15 := R15[0xd5181643]
	1150	[5109]	LOADK    	R17 K218 ; R17 := "AbilityPanel.Focus.FocusFx"
	1151	[5109]	GETGLOBAL	R18 K219 ; R18 := 0x7d6d96e1
	1152	[5109]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	1153	[5111]	GETGLOBAL	R15 K0 ; R15 := 0xae91e43b
	1154	[5111]	SELF     	R15 R15 K26 ; R16 := R15; R15 := R15[0xcd73323e]
	1155	[5111]	CALL     	R15 2 2 ; R15 := R15(R16)
	1156	[5112]	GETGLOBAL	R16 K16 ; R16 := 0x7b998233
	1157	[5112]	MOVE     	R17 R15 ; R17 := R15
	1158	[5112]	CALL     	R16 2 2 ; R16 := R16(R17)
	1159	[5112]	TEST     	R16 1 ; if R16 then PC := 1204
	1160	[5112]	JMP      	1204 ; PC := 1204
	1161	[5113]	SELF     	R16 R15 K220 ; R17 := R15; R16 := R15[0x6d7bfacb]
	1162	[5113]	CALL     	R16 2 2 ; R16 := R16(R17)
	1163	[5113]	SETUPVAL 	R16 U21 ; U21 := R16
	1164	[5114]	GETGLOBAL	R16 K16 ; R16 := 0x7b998233
	1165	[5114]	GETUPVAL 	R17 U21 ; R17 := U21
	1166	[5114]	CALL     	R16 2 2 ; R16 := R16(R17)
	1167	[5114]	TEST     	R16 1 ; if R16 then PC := 1204
	1168	[5114]	JMP      	1204 ; PC := 1204
	1169	[5115]	GETGLOBAL	R16 K15 ; R16 := 0xe72d2edb
	1170	[5115]	EQ       	1 R16 K31 ; if R16 == 0.000000 then PC := 1176
	1171	[5115]	JMP      	1176 ; PC := 1176
	1172	[5116]	GETUPVAL 	R16 U21 ; R16 := U21
	1173	[5116]	SELF     	R16 R16 K221 ; R17 := R16; R16 := R16[0xeaef69de]
	1174	[5116]	GETGLOBAL	R18 K15 ; R18 := 0xe72d2edb
	1175	[5116]	CALL     	R16 3 1 ; R16(R17,R18)
	1176	[5118]	GETUPVAL 	R16 U21 ; R16 := U21
	1177	[5118]	SELF     	R16 R16 K222 ; R17 := R16; R16 := R16[0x1e9695e9]
	1178	[5118]	MOVE     	R18 R15 ; R18 := R15
	1179	[5118]	CALL     	R16 3 1 ; R16(R17,R18)
	1180	[5119]	GETUPVAL 	R16 U21 ; R16 := U21
	1181	[5119]	SELF     	R16 R16 K223 ; R17 := R16; R16 := R16[0xe9aecb88]
	1182	[5119]	CALL     	R16 2 1 ; R16(R17)
	1183	[5120]	GETUPVAL 	R16 U21 ; R16 := U21
	1184	[5120]	SELF     	R16 R16 K224 ; R17 := R16; R16 := R16[0xdae5251c]
	1185	[5120]	GETUPVAL 	R18 U11 ; R18 := U11
	1186	[5120]	SELF     	R18 R18 K225 ; R19 := R18; R18 := R18[0x2de3d774]
	1187	[5120]	LOADK    	R20 K116 ; R20 := "Notification"
	1188	[5120]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	1189	[5120]	GETTABLE 	R18 R18 K226 ; R18 := R18["y"]
	1190	[5120]	CALL     	R16 3 1 ; R16(R17,R18)
	1191	[5121]	GETUPVAL 	R16 U2 ; R16 := U2
	1192	[5121]	GETGLOBAL	R17 K78 ; R17 := 0x0032441c
	1193	[5121]	GETTABLE 	R17 R17 K227 ; R17 := R17["StalkerMode"]
	1194	[5121]	EQ       	0 R17 K228 ; if R17 ~= nil then PC := 1197
	1195	[5121]	JMP      	1197 ; PC := 1197
	1196	[5121]	OP_LOADBOOL	R17 0 1 ; R17 := false; PC := 1197
	1197	[5121]	OP_LOADBOOL	R17 1 0 ; R17 := true
	1198	[5121]	SETTABLE 	R16 K227 R17 ; R16["StalkerMode"] := R17
	1199	[5122]	GETUPVAL 	R16 U21 ; R16 := U21
	1200	[5122]	SELF     	R16 R16 K229 ; R17 := R16; R16 := R16[0x9b069215]
	1201	[5122]	GETUPVAL 	R18 U2 ; R18 := U2
	1202	[5122]	GETTABLE 	R18 R18 K227 ; R18 := R18["StalkerMode"]
	1203	[5122]	CALL     	R16 3 1 ; R16(R17,R18)
	1204	[5126]	GETGLOBAL	R16 K13 ; R16 := _T
	1205	[5126]	GETGLOBAL	R17 K231 ; R17 := 0xa421af95
	1206	[5126]	CALL     	R17 1 2 ; R17 := R17()
	1207	[5126]	SETTABLE 	R16 K230 R17 ; R16["velocityCoords"] := R17
	1208	[5146]	CLOSURE  	R16 1 ; R16 := closure(Function #2)
	1209	[5146]	GETUPVAL 	R0 U11 ; R0 := U11
	1210	[5146]	GETUPVAL 	R0 U22 ; R0 := U22
	1211	[5146]	GETUPVAL 	R0 U21 ; R0 := U21
	1212	[5146]	GETUPVAL 	R0 U23 ; R0 := U23
	1213	[5146]	GETUPVAL 	R0 U13 ; R0 := U13
	1214	[5146]	GETUPVAL 	R0 U24 ; R0 := U24
	1215	[5146]	GETUPVAL 	R0 U25 ; R0 := U25
	1216	[5155]	CLOSURE  	R17 2 ; R17 := closure(Function #3)
	1217	[5155]	GETUPVAL 	R0 U11 ; R0 := U11
	1218	[5155]	GETUPVAL 	R0 U21 ; R0 := U21
	1219	[5167]	CLOSURE  	R18 3 ; R18 := closure(Function #4)
	1220	[5167]	GETUPVAL 	R0 U21 ; R0 := U21
	1221	[5167]	GETUPVAL 	R0 U22 ; R0 := U22
	1222	[5169]	GETGLOBAL	R19 K13 ; R19 := _T
	1223	[5169]	SETTABLE 	R19 K232 R16 ; R19["HUD_AddMotionClip"] := R16
	1224	[5170]	GETGLOBAL	R19 K13 ; R19 := _T
	1225	[5170]	SETTABLE 	R19 K233 R17 ; R19["HUD_UpdateMotionClip"] := R17
	1226	[5171]	GETGLOBAL	R19 K13 ; R19 := _T
	1227	[5171]	SETTABLE 	R19 K234 R18 ; R19["HUD_RemoveMotionClip"] := R18
	1228	[5173]	LOADNIL  	R19 R19 ; R19 := nil
	1229	[5174]	GETGLOBAL	R20 K53 ; R20 := 0x34291f5c
	1230	[5174]	GETTABLE 	R20 R20 K235 ; R20 := R20[0xe6b41adb]
	1231	[5174]	CALL     	R20 1 2 ; R20 := R20()
	1232	[5174]	TEST     	R20 0 ; if not R20 then PC := 1237
	1233	[5174]	JMP      	1237 ; PC := 1237
	1234	[5175]	NEWTABLE 	R20 0 0 ; R20 := {}
	1235	[5175]	MOVE     	R19 R20 ; R19 := R20
	1236	[5175]	JMP      	1243 ; PC := 1243
	1237	[5177]	NEWTABLE 	R20 3 0 ; R20 := {}
	1238	[5177]	LOADK    	R21 K102 ; R21 := "HealthAndShield"
	1239	[5177]	LOADK    	R22 K104 ; R22 := "WeaponFrame"
	1240	[5177]	LOADK    	R23 K106 ; R23 := "AbilityPanel"
	1241	[5177]	SETLIST  	R20 3 1 ; R20[(1-1)*FPF+i] := R(20+i), 1 <= i <= 3
	1242	[5177]	MOVE     	R19 R20 ; R19 := R20
	1243	[5180]	GETGLOBAL	R20 K50 ; R20 := 0xc8802016
	1244	[5180]	MOVE     	R21 R19 ; R21 := R19
	1245	[5180]	CALL     	R20 2 4 ; R20,R21,R22 := R20(R21)
	1246	[5180]	JMP      	1260 ; PC := 1260
	1247	[5181]	GETGLOBAL	R25 K15 ; R25 := 0xe72d2edb
	1248	[5181]	EQ       	1 R25 K82 ; if R25 == 2.000000 then PC := 1256
	1249	[5181]	JMP      	1256 ; PC := 1256
	1250	[5182]	GETGLOBAL	R25 K0 ; R25 := 0xae91e43b
	1251	[5182]	SELF     	R25 R25 K1 ; R26 := R25; R25 := R25[0x67bc869f]
	1252	[5182]	MOVE     	R27 R24 ; R27 := R24
	1253	[5182]	LOADK    	R28 := 15.000000
	1254	[5182]	MOVE     	R29 R0 ; R29 := R0
	1255	[5182]	CALL     	R25 5 1 ; R25(R26,R27,R28,R29)
	1256	[5184]	MOVE     	R25 R16 ; R25 := R16
	1257	[5184]	GETGLOBAL	R26 K0 ; R26 := 0xae91e43b
	1258	[5184]	MOVE     	R27 R24 ; R27 := R24
	1259	[5184]	CALL     	R25 3 1 ; R25(R26,R27)
	1260	[5180]	TFORLOOP 	R20 2 ; R23,R24 := R20(R21,R22); if R23 ~= nil then begin PC = 1247; R22 := R23 end
	1261	[5184]	JMP      	1247 ; PC := 1247
	1262	[5187]	LOADNIL  	R25 R25 ; R25 := nil
	1263	[5188]	GETGLOBAL	R26 K53 ; R26 := 0x34291f5c
	1264	[5188]	GETTABLE 	R26 R26 K235 ; R26 := R26[0xe6b41adb]
	1265	[5188]	CALL     	R26 1 2 ; R26 := R26()
	1266	[5188]	TEST     	R26 0 ; if not R26 then PC := 1271
	1267	[5188]	JMP      	1271 ; PC := 1271
	1268	[5189]	NEWTABLE 	R26 0 0 ; R26 := {}
	1269	[5189]	MOVE     	R25 R26 ; R25 := R26
	1270	[5189]	JMP      	1277 ; PC := 1277
	1271	[5191]	NEWTABLE 	R26 3 0 ; R26 := {}
	1272	[5191]	LOADK    	R27 K107 ; R27 := "MiniMapContainer"
	1273	[5191]	LOADK    	R28 K110 ; R28 := "HudTracker"
	1274	[5191]	LOADK    	R29 K109 ; R29 := "MiniMapOverlayMsg"
	1275	[5191]	SETLIST  	R26 3 1 ; R26[(1-1)*FPF+i] := R(26+i), 1 <= i <= 3
	1276	[5191]	MOVE     	R25 R26 ; R25 := R26
	1277	[5193]	GETGLOBAL	R26 K50 ; R26 := 0xc8802016
	1278	[5193]	MOVE     	R27 R25 ; R27 := R25
	1279	[5193]	CALL     	R26 2 4 ; R26,R27,R28 := R26(R27)
	1280	[5193]	JMP      	1294 ; PC := 1294
	1281	[5194]	GETGLOBAL	R31 K15 ; R31 := 0xe72d2edb
	1282	[5194]	EQ       	1 R31 K82 ; if R31 == 2.000000 then PC := 1290
	1283	[5194]	JMP      	1290 ; PC := 1290
	1284	[5195]	GETGLOBAL	R31 K0 ; R31 := 0xae91e43b
	1285	[5195]	SELF     	R31 R31 K1 ; R32 := R31; R31 := R31[0x67bc869f]
	1286	[5195]	MOVE     	R33 R30 ; R33 := R30
	1287	[5195]	LOADK    	R34 := 15.000000
	1288	[5195]	UNM      	R35 R0 ; R35 := ^ R0
	1289	[5195]	CALL     	R31 5 1 ; R31(R32,R33,R34,R35)
	1290	[5197]	MOVE     	R31 R16 ; R31 := R16
	1291	[5197]	GETGLOBAL	R32 K0 ; R32 := 0xae91e43b
	1292	[5197]	MOVE     	R33 R30 ; R33 := R30
	1293	[5197]	CALL     	R31 3 1 ; R31(R32,R33)
	1294	[5193]	TFORLOOP 	R26 2 ; R29,R30 := R26(R27,R28); if R29 ~= nil then begin PC = 1281; R28 := R29 end
	1295	[5197]	JMP      	1281 ; PC := 1281
	1296	[5200]	GETGLOBAL	R31 K0 ; R31 := 0xae91e43b
	1297	[5200]	SELF     	R31 R31 K194 ; R32 := R31; R31 := R31[0x5f56eeab]
	1298	[5200]	LOADK    	R33 K236 ; R33 := "HealthAndShield.SentinelName"
	1299	[5200]	LOADK    	R34 := 29.000000
	1300	[5200]	LOADK    	R35 K196 ; R35 := ""
	1301	[5200]	CALL     	R31 5 1 ; R31(R32,R33,R34,R35)
	1302	[5201]	GETGLOBAL	R31 K0 ; R31 := 0xae91e43b
	1303	[5201]	SELF     	R31 R31 K1 ; R32 := R31; R31 := R31[0x67bc869f]
	1304	[5201]	LOADK    	R33 K237 ; R33 := "HealthAndShield.SentinelAffinity"
	1305	[5201]	LOADK    	R34 := 10.000000
	1306	[5201]	LOADK    	R35 := 0.000000
	1307	[5201]	CALL     	R31 5 1 ; R31(R32,R33,R34,R35)
	1308	[5202]	GETGLOBAL	R31 K0 ; R31 := 0xae91e43b
	1309	[5202]	SELF     	R31 R31 K194 ; R32 := R31; R31 := R31[0x5f56eeab]
	1310	[5202]	LOADK    	R33 K238 ; R33 := "HealthAndShield.SentinelHealth"
	1311	[5202]	LOADK    	R34 := 29.000000
	1312	[5202]	LOADK    	R35 K196 ; R35 := ""
	1313	[5202]	CALL     	R31 5 1 ; R31(R32,R33,R34,R35)
	1314	[5203]	GETGLOBAL	R31 K0 ; R31 := 0xae91e43b
	1315	[5203]	SELF     	R31 R31 K10 ; R32 := R31; R31 := R31[0xaade900e]
	1316	[5203]	LOADK    	R33 K239 ; R33 := "HealthAndShield.Sentinel"
	1317	[5203]	LOADK    	R34 := 11.000000
	1318	[5203]	OP_LOADBOOL	R35 0 0 ; R35 := false
	1319	[5203]	CALL     	R31 5 1 ; R31(R32,R33,R34,R35)
	1320	[5205]	GETGLOBAL	R31 K133 ; R31 := 0x2d0fad09
	1321	[5205]	LOADK    	R32 K240 ; R32 := "Lotus.Interface.Libs.TimerMgr"
	1322	[5205]	CALL     	R31 2 2 ; R31 := R31(R32)
	1323	[5206]	GETTABLE 	R32 R31 K241 ; R32 := R31[0xde474187]
	1324	[5206]	CALL     	R32 1 2 ; R32 := R32()
	1325	[5206]	SETUPVAL 	R32 U26 ; U26 := R32
	1326	[5208]	NEWTABLE 	R32 0 12 ; R32 := {}
	1327	[5210]	GETGLOBAL	R33 K243 ; R33 := 0x2b66e51f
	1328	[5210]	SETTABLE 	R32 K242 R33 ; R32["defaultBroadcastIcon"] := R33
	1329	[5211]	GETGLOBAL	R33 K245 ; R33 := 0x0bbd2f35
	1330	[5211]	SETTABLE 	R32 K244 R33 ; R32["healthShieldDisplayType"] := R33
	1331	[5212]	GETGLOBAL	R33 K247 ; R33 := 0x2771cec5
	1332	[5212]	SETTABLE 	R32 K246 R33 ; R32["defenseTargetNearDeath"] := R33
	1333	[5213]	GETGLOBAL	R33 K249 ; R33 := 0xcc8ae35b
	1334	[5213]	SETTABLE 	R32 K248 R33 ; R32["timeLostFx"] := R33
	1335	[5214]	GETGLOBAL	R33 K202 ; R33 := 0x2545668b
	1336	[5214]	SETTABLE 	R32 K250 R33 ; R32["radialProgressMaterial"] := R33
	1337	[5215]	GETGLOBAL	R33 K252 ; R33 := 0x64fdab78
	1338	[5215]	SETTABLE 	R32 K251 R33 ; R32["temperatureSegmentMaterial"] := R33
	1339	[5216]	GETGLOBAL	R33 K254 ; R33 := 0x5e370047
	1340	[5216]	SETTABLE 	R32 K253 R33 ; R32["corruptionFillMaterial"] := R33
	1341	[5217]	GETGLOBAL	R33 K205 ; R33 := 0x1211e3e3
	1342	[5217]	SETTABLE 	R32 K255 R33 ; R32["diamondMaterial"] := R33
	1343	[5218]	LOADK    	R33 K256 ; R33 := "diamondProgressMaterial"
	1344	[5218]	GETGLOBAL	R34 K207 ; R34 := 0xeebb769c
	1345	[5218]	SETTABLE 	R32 R33 R34 ; R32[R33] := R34
	1346	[5219]	LOADK    	R33 K257 ; R33 := "nodeConflictMaterial"
	1347	[5219]	GETGLOBAL	R34 K258 ; R34 := 0x96a390c1
	1348	[5219]	SETTABLE 	R32 R33 R34 ; R32[R33] := R34
	1349	[5220]	LOADK    	R33 K259 ; R33 := "nodeConflictFx"
	1350	[5220]	GETGLOBAL	R34 K260 ; R34 := 0x53ca0986
	1351	[5220]	SETTABLE 	R32 R33 R34 ; R32[R33] := R34
	1352	[5221]	LOADK    	R33 K261 ; R33 := "nodeConflictBgMaterial"
	1353	[5221]	GETGLOBAL	R34 K262 ; R34 := 0xf821d6b2
	1354	[5221]	SETTABLE 	R32 R33 R34 ; R32[R33] := R34
	1355	[5223]	GETUPVAL 	R33 U25 ; R33 := U25
	1356	[5223]	LOADK    	R34 K263 ; R34 := true
	1357	[5223]	GETTABLE 	R33 R33 R34 ; R33 := R33[R34]
	1358	[5223]	GETGLOBAL	R34 K0 ; R34 := 0xae91e43b
	1359	[5223]	GETUPVAL 	R35 U27 ; R35 := U27
	1360	[5223]	GETUPVAL 	R36 U26 ; R36 := U26
	1361	[5223]	MOVE     	R37 R32 ; R37 := R32
	1362	[5223]	GETUPVAL 	R38 U28 ; R38 := U28
	1363	[5223]	GETUPVAL 	R39 U28 ; R39 := U28
	1364	[5223]	GETUPVAL 	R40 U29 ; R40 := U29
	1365	[5223]	CALL     	R33 8 1 ; R33(R34,R35,R36,R37,R38,R39,R40)
	1366	[5225]	GETGLOBAL	R33 K16 ; R33 := 0x7b998233
	1367	[5225]	GETGLOBAL	R34 K13 ; R34 := _T
	1368	[5225]	LOADK    	R35 K264 ; R35 := "affinity"
	1369	[5225]	GETTABLE 	R34 R34 R35 ; R34 := R34[R35]
	1370	[5225]	CALL     	R33 2 2 ; R33 := R33(R34)
	1371	[5225]	TEST     	R33 0 ; if not R33 then PC := 1377
	1372	[5225]	JMP      	1377 ; PC := 1377
	1373	[5226]	GETGLOBAL	R33 K13 ; R33 := _T
	1374	[5226]	LOADK    	R34 K264 ; R34 := "affinity"
	1375	[5226]	LOADK    	R35 := 0.000000
	1376	[5226]	SETTABLE 	R33 R34 R35 ; R33[R34] := R35
	1377	[5229]	GETUPVAL 	R33 U30 ; R33 := U30
	1378	[5229]	CALL     	R33 1 1 ; R33()
	1379	[5231]	GETGLOBAL	R33 K0 ; R33 := 0xae91e43b
	1380	[5231]	SELF     	R33 R33 K1 ; R34 := R33; R33 := R33[0x67bc869f]
	1381	[5231]	LOADK    	R35 K265 ; R35 := "KillNumber1"
	1382	[5231]	LOADK    	R36 := 10.000000
	1383	[5231]	LOADK    	R37 := 0.000000
	1384	[5231]	CALL     	R33 5 1 ; R33(R34,R35,R36,R37)
	1385	[5233]	GETGLOBAL	R33 K0 ; R33 := 0xae91e43b
	1386	[5233]	SELF     	R33 R33 K1 ; R34 := R33; R33 := R33[0x67bc869f]
	1387	[5233]	LOADK    	R35 K105 ; R35 := "QuestMessage"
	1388	[5233]	LOADK    	R36 := 10.000000
	1389	[5233]	LOADK    	R37 := 0.000000
	1390	[5233]	CALL     	R33 5 1 ; R33(R34,R35,R36,R37)
	1391	[5234]	GETGLOBAL	R33 K0 ; R33 := 0xae91e43b
	1392	[5234]	SELF     	R33 R33 K1 ; R34 := R33; R33 := R33[0x67bc869f]
	1393	[5234]	LOADK    	R35 K266 ; R35 := "QuestMessage.Background"
	1394	[5234]	LOADK    	R36 := 10.000000
	1395	[5234]	LOADK    	R37 := 0.000000
	1396	[5234]	CALL     	R33 5 1 ; R33(R34,R35,R36,R37)
	1397	[5236]	GETGLOBAL	R33 K267 ; R33 := 0x89326c93
	1398	[5236]	LOADK    	R35 K268 ; R35 := true
	1399	[5236]	SELF     	R33 R33 R35 ; R34 := R33; R33 := R33[R35]
	1400	[5236]	CALL     	R33 2 2 ; R33 := R33(R34)
	1401	[5236]	LOADK    	R34 K269 ; R34 := "level"
	1402	[5236]	GETTABLE 	R33 R33 R34 ; R33 := R33[R34]
	1403	[5237]	GETGLOBAL	R34 K270 ; R34 := 0xa94df70b
	1404	[5237]	LOADK    	R36 K271 ; R36 := true
	1405	[5237]	SELF     	R34 R34 R36 ; R35 := R34; R34 := R34[R36]
	1406	[5237]	MOVE     	R36 R33 ; R36 := R33
	1407	[5237]	CALL     	R34 3 2 ; R34 := R34(R35,R36)
	1408	[5237]	TEST     	R34 1 ; if R34 then PC := 1430
	1409	[5237]	JMP      	1430 ; PC := 1430
	1410	[5238]	GETGLOBAL	R34 K19 ; R34 := 0x9ba7909f
	1411	[5238]	SELF     	R34 R34 K23 ; R35 := R34; R34 := R34[0xbcfb64ab]
	1412	[5238]	GETUPVAL 	R36 U20 ; R36 := U20
	1413	[5238]	LOADK    	R37 K272 ; R37 := true
	1414	[5238]	GETTABLE 	R36 R36 R37 ; R36 := R36[R37]
	1415	[5238]	CALL     	R36 1 0 ; R36,... := R36()
	1416	[5238]	CALL     	R34 0 2 ; R34 := R34(R35,...)
	1417	[5239]	GETGLOBAL	R35 K16 ; R35 := 0x7b998233
	1418	[5239]	MOVE     	R36 R34 ; R36 := R34
	1419	[5239]	CALL     	R35 2 2 ; R35 := R35(R36)
	1420	[5239]	TEST     	R35 0 ; if not R35 then PC := 1430
	1421	[5239]	JMP      	1430 ; PC := 1430
	1422	[5240]	GETGLOBAL	R35 K19 ; R35 := 0x9ba7909f
	1423	[5240]	SELF     	R35 R35 K20 ; R36 := R35; R35 := R35[0x6dd7aa66]
	1424	[5240]	GETUPVAL 	R37 U20 ; R37 := U20
	1425	[5240]	LOADK    	R38 K272 ; R38 := true
	1426	[5240]	GETTABLE 	R37 R37 R38 ; R37 := R37[R38]
	1427	[5240]	CALL     	R37 1 0 ; R37,... := R37()
	1428	[5240]	CALL     	R35 0 2 ; R35 := R35(R36,...)
	1429	[5240]	MOVE     	R34 R35 ; R34 := R35
	1430	[5244]	GETUPVAL 	R35 U31 ; R35 := U31
	1431	[5244]	CALL     	R35 1 1 ; R35()
	1432	[5246]	GETGLOBAL	R35 K0 ; R35 := 0xae91e43b
	1433	[5246]	SELF     	R35 R35 K194 ; R36 := R35; R35 := R35[0x5f56eeab]
	1434	[5246]	LOADK    	R37 K273 ; R37 := "GenericMessage.Text"
	1435	[5246]	LOADK    	R38 := 29.000000
	1436	[5246]	LOADK    	R39 K196 ; R39 := ""
	1437	[5246]	CALL     	R35 5 1 ; R35(R36,R37,R38,R39)
	1438	[5247]	GETUPVAL 	R35 U20 ; R35 := U20
	1439	[5247]	GETTABLE 	R35 R35 K154 ; R35 := R35[0x4c3dfdb3]
	1440	[5247]	LOADK    	R36 K196 ; R36 := ""
	1441	[5247]	GETUPVAL 	R37 U33 ; R37 := U33
	1442	[5247]	CALL     	R35 3 2 ; R35 := R35(R36,R37)
	1443	[5247]	SETUPVAL 	R35 U32 ; U32 := R35
	1444	[5249]	GETGLOBAL	R35 K0 ; R35 := 0xae91e43b
	1445	[5249]	SELF     	R35 R35 K161 ; R36 := R35; R35 := R35[0xd5181643]
	1446	[5249]	LOADK    	R37 K274 ; R37 := "PainTop"
	1447	[5249]	GETGLOBAL	R38 K275 ; R38 := 0x6f18e067
	1448	[5249]	CALL     	R35 4 1 ; R35(R36,R37,R38)
	1449	[5250]	GETGLOBAL	R35 K0 ; R35 := 0xae91e43b
	1450	[5250]	SELF     	R35 R35 K161 ; R36 := R35; R35 := R35[0xd5181643]
	1451	[5250]	LOADK    	R37 K276 ; R37 := "PainBottom"
	1452	[5250]	GETGLOBAL	R38 K275 ; R38 := 0x6f18e067
	1453	[5250]	CALL     	R35 4 1 ; R35(R36,R37,R38)
	1454	[5251]	GETGLOBAL	R35 K0 ; R35 := 0xae91e43b
	1455	[5251]	SELF     	R35 R35 K161 ; R36 := R35; R35 := R35[0xd5181643]
	1456	[5251]	LOADK    	R37 K277 ; R37 := "PainLeft"
	1457	[5251]	GETGLOBAL	R38 K275 ; R38 := 0x6f18e067
	1458	[5251]	CALL     	R35 4 1 ; R35(R36,R37,R38)
	1459	[5252]	GETGLOBAL	R35 K0 ; R35 := 0xae91e43b
	1460	[5252]	SELF     	R35 R35 K161 ; R36 := R35; R35 := R35[0xd5181643]
	1461	[5252]	LOADK    	R37 K278 ; R37 := "PainRight"
	1462	[5252]	GETGLOBAL	R38 K275 ; R38 := 0x6f18e067
	1463	[5252]	CALL     	R35 4 1 ; R35(R36,R37,R38)
	1464	[5253]	GETGLOBAL	R35 K0 ; R35 := 0xae91e43b
	1465	[5253]	SELF     	R35 R35 K161 ; R36 := R35; R35 := R35[0xd5181643]
	1466	[5253]	LOADK    	R37 K279 ; R37 := "ReticleSniper.bg"
	1467	[5253]	GETGLOBAL	R38 K275 ; R38 := 0x6f18e067
	1468	[5253]	CALL     	R35 4 1 ; R35(R36,R37,R38)
	1469	[5255]	GETGLOBAL	R35 K0 ; R35 := 0xae91e43b
	1470	[5255]	SELF     	R35 R35 K10 ; R36 := R35; R35 := R35[0xaade900e]
	1471	[5255]	LOADK    	R37 K91 ; R37 := "Card"
	1472	[5255]	LOADK    	R38 := 11.000000
	1473	[5255]	OP_LOADBOOL	R39 0 0 ; R39 := false
	1474	[5255]	CALL     	R35 5 1 ; R35(R36,R37,R38,R39)
	1475	[5256]	GETGLOBAL	R35 K0 ; R35 := 0xae91e43b
	1476	[5256]	SELF     	R35 R35 K1 ; R36 := R35; R35 := R35[0x67bc869f]
	1477	[5256]	LOADK    	R37 K280 ; R37 := "Card.Card"
	1478	[5256]	LOADK    	R38 := 10.000000
	1479	[5256]	LOADK    	R39 := 0.000000
	1480	[5256]	CALL     	R35 5 1 ; R35(R36,R37,R38,R39)
	1481	[5258]	GETUPVAL 	R35 U34 ; R35 := U34
	1482	[5258]	LOADK    	R36 K281 ; R36 := "LEVEL_ABBREV"
	1483	[5258]	GETGLOBAL	R37 K0 ; R37 := 0xae91e43b
	1484	[5258]	SELF     	R37 R37 K85 ; R38 := R37; R37 := R37[0x42b04007]
	1485	[5258]	LOADK    	R39 K282 ; R39 := "/Lotus/Language/Menu/LevelAbbreviation"
	1486	[5258]	OP_LOADBOOL	R40 0 0 ; R40 := false
	1487	[5258]	CALL     	R37 4 2 ; R37 := R37(R38,R39,R40)
	1488	[5258]	SETTABLE 	R35 R36 R37 ; R35[R36] := R37
	1489	[5259]	GETUPVAL 	R35 U35 ; R35 := U35
	1490	[5259]	CALL     	R35 1 1 ; R35()
	1491	[5262]	LOADK    	R35 := 1.000000
	1492	[5262]	GETUPVAL 	R36 U36 ; R36 := U36
	1493	[5262]	LEN      	R36 R36 ; R36 := # R36
	1494	[5262]	LOADK    	R37 := 1.000000
	1495	[5262]	FORPREP  	R35 1524 ; R35 -= R37; PC := 1524
	1496	[5263]	GETUPVAL 	R39 U36 ; R39 := U36
	1497	[5263]	NEWTABLE 	R40 0 3 ; R40 := {}
	1498	[5263]	LOADK    	R41 K283 ; R41 := "Tag"
	1499	[5263]	GETUPVAL 	R42 U36 ; R42 := U36
	1500	[5263]	GETTABLE 	R42 R42 R38 ; R42 := R42[R38]
	1501	[5263]	SETTABLE 	R40 R41 R42 ; R40[R41] := R42
	1502	[5263]	LOADK    	R41 K284 ; R41 := "NameTag"
	1503	[5263]	GETGLOBAL	R42 K0 ; R42 := 0xae91e43b
	1504	[5263]	SELF     	R42 R42 K85 ; R43 := R42; R42 := R42[0x42b04007]
	1505	[5263]	LOADK    	R44 K285 ; R44 := "/Lotus/Language/Game/"
	1506	[5263]	GETUPVAL 	R45 U36 ; R45 := U36
	1507	[5263]	GETTABLE 	R45 R45 R38 ; R45 := R45[R38]
	1508	[5263]	LOADK    	R46 K286 ; R46 := "_NoIcon"
	1509	[5263]	CONCAT   	R44 R44 R46 ; R44 := R44 .. R45 .. R46
	1510	[5263]	OP_LOADBOOL	R45 0 0 ; R45 := false
	1511	[5263]	CALL     	R42 4 2 ; R42 := R42(R43,R44,R45)
	1512	[5263]	SETTABLE 	R40 R41 R42 ; R40[R41] := R42
	1513	[5263]	GETGLOBAL	R41 K0 ; R41 := 0xae91e43b
	1514	[5263]	SELF     	R41 R41 K85 ; R42 := R41; R41 := R41[0x42b04007]
	1515	[5263]	LOADK    	R43 K287 ; R43 := "<"
	1516	[5263]	GETUPVAL 	R44 U36 ; R44 := U36
	1517	[5263]	GETTABLE 	R44 R44 R38 ; R44 := R44[R38]
	1518	[5263]	LOADK    	R45 K288 ; R45 := ">"
	1519	[5263]	CONCAT   	R43 R43 R45 ; R43 := R43 .. R44 .. R45
	1520	[5263]	OP_LOADBOOL	R44 1 0 ; R44 := true
	1521	[5263]	CALL     	R41 4 2 ; R41 := R41(R42,R43,R44)
	1522	[5263]	SETTABLE 	R40 K87 R41 ; R40["Icon"] := R41
	1523	[5263]	SETTABLE 	R39 R38 R40 ; R39[R38] := R40
	1524	[5262]	FORLOOP  	R35 1496 ; R35 += R37; if R35 <= R36 then begin PC := 1496; R38 := R35 end
	1525	[5266]	GETUPVAL 	R39 U37 ; R39 := U37
	1526	[5266]	CALL     	R39 1 1 ; R39()
	1527	[5268]	NEWTABLE 	R39 0 0 ; R39 := {}
	1528	[5269]	GETUPVAL 	R40 U2 ; R40 := U2
	1529	[5269]	LOADK    	R41 K289 ; R41 := "UIMode"
	1530	[5269]	GETTABLE 	R40 R40 R41 ; R40 := R40[R41]
	1531	[5269]	GETUPVAL 	R41 U6 ; R41 := U6
	1532	[5269]	LOADK    	R42 K290 ; R42 := "UI_MODE_IN_DOJO"
	1533	[5269]	GETTABLE 	R41 R41 R42 ; R41 := R41[R42]
	1534	[5269]	EQ       	1 R40 R41 ; if R40 == R41 then PC := 1541
	1535	[5269]	JMP      	1541 ; PC := 1541
	1536	[5269]	GETGLOBAL	R40 K13 ; R40 := _T
	1537	[5269]	LOADK    	R41 K291 ; R41 := "SecretMiniGameActive"
	1538	[5269]	GETTABLE 	R40 R40 R41 ; R40 := R40[R41]
	1539	[5269]	TEST     	R40 0 ; if not R40 then PC := 1546
	1540	[5269]	JMP      	1546 ; PC := 1546
	1541	[5270]	NEWTABLE 	R40 2 0 ; R40 := {}
	1542	[5270]	LOADK    	R41 K104 ; R41 := "WeaponFrame"
	1543	[5270]	LOADK    	R42 K106 ; R42 := "AbilityPanel"
	1544	[5270]	SETLIST  	R40 2 1 ; R40[(1-1)*FPF+i] := R(40+i), 1 <= i <= 2
	1545	[5270]	MOVE     	R39 R40 ; R39 := R40
	1546	[5272]	LOADK    	R40 := 1.000000
	1547	[5272]	LEN      	R41 R39 ; R41 := # R39
	1548	[5272]	LOADK    	R42 := 1.000000
	1549	[5272]	FORPREP  	R40 1556 ; R40 -= R42; PC := 1556
	1550	[5273]	GETGLOBAL	R44 K0 ; R44 := 0xae91e43b
	1551	[5273]	SELF     	R44 R44 K10 ; R45 := R44; R44 := R44[0xaade900e]
	1552	[5273]	GETTABLE 	R46 R39 R43 ; R46 := R39[R43]
	1553	[5273]	LOADK    	R47 := 11.000000
	1554	[5273]	OP_LOADBOOL	R48 0 0 ; R48 := false
	1555	[5273]	CALL     	R44 5 1 ; R44(R45,R46,R47,R48)
	1556	[5272]	FORLOOP  	R40 1550 ; R40 += R42; if R40 <= R41 then begin PC := 1550; R43 := R40 end
	1557	[5277]	GETGLOBAL	R44 K13 ; R44 := _T
	1558	[5277]	LOADK    	R45 K292 ; R45 := "ShowTerritoryProgress"
	1559	[5277]	OP_LOADBOOL	R46 1 0 ; R46 := true
	1560	[5277]	SETTABLE 	R44 R45 R46 ; R44[R45] := R46
	1561	[5278]	GETUPVAL 	R44 U38 ; R44 := U38
	1562	[5278]	CALL     	R44 1 1 ; R44()
	1563	[5280]	GETUPVAL 	R44 U2 ; R44 := U2
	1564	[5280]	LOADK    	R45 K293 ; R45 := "mTransOnRightSide"
	1565	[5280]	OP_LOADBOOL	R46 0 0 ; R46 := false
	1566	[5280]	SETTABLE 	R44 R45 R46 ; R44[R45] := R46
	1567	[5281]	GETUPVAL 	R44 U21 ; R44 := U21
	1568	[5281]	LOADK    	R46 K294 ; R46 := true
	1569	[5281]	SELF     	R44 R44 R46 ; R45 := R44; R44 := R44[R46]
	1570	[5281]	OP_LOADBOOL	R46 0 0 ; R46 := false
	1571	[5281]	CALL     	R44 3 1 ; R44(R45,R46)
	1572	[5283]	GETGLOBAL	R44 K0 ; R44 := 0xae91e43b
	1573	[5283]	SELF     	R44 R44 K10 ; R45 := R44; R44 := R44[0xaade900e]
	1574	[5283]	LOADK    	R46 K295 ; R46 := "ArialAnchor"
	1575	[5283]	LOADK    	R47 := 11.000000
	1576	[5283]	OP_LOADBOOL	R48 0 0 ; R48 := false
	1577	[5283]	CALL     	R44 5 1 ; R44(R45,R46,R47,R48)
	1578	[5285]	GETGLOBAL	R44 K0 ; R44 := 0xae91e43b
	1579	[5285]	SELF     	R44 R44 K194 ; R45 := R44; R44 := R44[0x5f56eeab]
	1580	[5285]	LOADK    	R46 K296 ; R46 := "ImpactMessage.Label"
	1581	[5285]	LOADK    	R47 := 29.000000
	1582	[5285]	LOADK    	R48 K196 ; R48 := ""
	1583	[5285]	CALL     	R44 5 1 ; R44(R45,R46,R47,R48)
	1584	[5286]	GETGLOBAL	R44 K53 ; R44 := 0x34291f5c
	1585	[5286]	GETTABLE 	R44 R44 K54 ; R44 := R44[0xa7a2e381]
	1586	[5286]	CALL     	R44 1 2 ; R44 := R44()
	1587	[5286]	TEST     	R44 0 ; if not R44 then PC := 1693
	1588	[5286]	JMP      	1693 ; PC := 1693
	1589	[5288]	GETGLOBAL	R44 K0 ; R44 := 0xae91e43b
	1590	[5288]	SELF     	R44 R44 K194 ; R45 := R44; R44 := R44[0x5f56eeab]
	1591	[5288]	LOADK    	R46 K296 ; R46 := "ImpactMessage.Label"
	1592	[5288]	LOADK    	R47 := 41.000000
	1593	[5288]	LOADK    	R48 K56 ; R48 := "Arial Unicode MS"
	1594	[5288]	CALL     	R44 5 1 ; R44(R45,R46,R47,R48)
	1595	[5289]	GETGLOBAL	R44 K0 ; R44 := 0xae91e43b
	1596	[5289]	SELF     	R44 R44 K1 ; R45 := R44; R44 := R44[0x67bc869f]
	1597	[5289]	LOADK    	R46 K296 ; R46 := "ImpactMessage.Label"
	1598	[5289]	LOADK    	R47 := 42.000000
	1599	[5289]	LOADK    	R48 := 18.000000
	1600	[5289]	CALL     	R44 5 1 ; R44(R45,R46,R47,R48)
	1601	[5291]	LOADK    	R44 := 1.500000
	1602	[5292]	GETGLOBAL	R45 K0 ; R45 := 0xae91e43b
	1603	[5292]	SELF     	R45 R45 K139 ; R46 := R45; R45 := R45[0x91a24e4b]
	1604	[5292]	LOADK    	R47 K296 ; R47 := "ImpactMessage.Label"
	1605	[5292]	LOADK    	R48 := 12.000000
	1606	[5292]	CALL     	R45 4 2 ; R45 := R45(R46,R47,R48)
	1607	[5293]	MUL      	R46 R45 R44 ; R46 := R45 * R44
	1608	[5294]	GETGLOBAL	R47 K0 ; R47 := 0xae91e43b
	1609	[5294]	SELF     	R47 R47 K139 ; R48 := R47; R47 := R47[0x91a24e4b]
	1610	[5294]	LOADK    	R49 K296 ; R49 := "ImpactMessage.Label"
	1611	[5294]	LOADK    	R50 := 0.000000
	1612	[5294]	CALL     	R47 4 2 ; R47 := R47(R48,R49,R50)
	1613	[5295]	GETGLOBAL	R48 K0 ; R48 := 0xae91e43b
	1614	[5295]	SELF     	R48 R48 K1 ; R49 := R48; R48 := R48[0x67bc869f]
	1615	[5295]	LOADK    	R50 K296 ; R50 := "ImpactMessage.Label"
	1616	[5295]	LOADK    	R51 := 5.000000
	1617	[5295]	LOADK    	R52 := 100.000000
	1618	[5295]	MUL      	R52 R44 R52 ; R52 := R44 * R52
	1619	[5295]	CALL     	R48 5 1 ; R48(R49,R50,R51,R52)
	1620	[5296]	GETGLOBAL	R48 K0 ; R48 := 0xae91e43b
	1621	[5296]	SELF     	R48 R48 K1 ; R49 := R48; R48 := R48[0x67bc869f]
	1622	[5296]	LOADK    	R50 K296 ; R50 := "ImpactMessage.Label"
	1623	[5296]	LOADK    	R51 := 6.000000
	1624	[5296]	LOADK    	R52 := 100.000000
	1625	[5296]	MUL      	R52 R44 R52 ; R52 := R44 * R52
	1626	[5296]	CALL     	R48 5 1 ; R48(R49,R50,R51,R52)
	1627	[5297]	GETGLOBAL	R48 K0 ; R48 := 0xae91e43b
	1628	[5297]	SELF     	R48 R48 K1 ; R49 := R48; R48 := R48[0x67bc869f]
	1629	[5297]	LOADK    	R50 K296 ; R50 := "ImpactMessage.Label"
	1630	[5297]	LOADK    	R51 := 0.000000
	1631	[5297]	SUB      	R52 R46 R45 ; R52 := R46 - R45
	1632	[5297]	LOADK    	R53 := 2.000000
	1633	[5297]	DIV      	R52 R52 R53 ; R52 := R52 / R53
	1634	[5297]	SUB      	R52 R47 R52 ; R52 := R47 - R52
	1635	[5297]	CALL     	R48 5 1 ; R48(R49,R50,R51,R52)
	1636	[5298]	GETGLOBAL	R48 K0 ; R48 := 0xae91e43b
	1637	[5298]	SELF     	R48 R48 K1 ; R49 := R48; R48 := R48[0x67bc869f]
	1638	[5298]	LOADK    	R50 K296 ; R50 := "ImpactMessage.Label"
	1639	[5298]	LOADK    	R51 := 1.000000
	1640	[5298]	LOADK    	R52 := -22.000000
	1641	[5298]	CALL     	R48 5 1 ; R48(R49,R50,R51,R52)
	1642	[5299]	GETGLOBAL	R48 K0 ; R48 := 0xae91e43b
	1643	[5299]	SELF     	R48 R48 K161 ; R49 := R48; R48 := R48[0xd5181643]
	1644	[5299]	LOADK    	R50 K296 ; R50 := "ImpactMessage.Label"
	1645	[5299]	GETGLOBAL	R51 K78 ; R51 := 0x0032441c
	1646	[5299]	LOADK    	R52 K297 ; R52 := "UIMaterial_FontSharpen"
	1647	[5299]	GETTABLE 	R51 R51 R52 ; R51 := R51[R52]
	1648	[5299]	CALL     	R48 4 1 ; R48(R49,R50,R51)
	1649	[5301]	GETGLOBAL	R48 K0 ; R48 := 0xae91e43b
	1650	[5301]	SELF     	R48 R48 K1 ; R49 := R48; R48 := R48[0x67bc869f]
	1651	[5301]	LOADK    	R50 K298 ; R50 := "ImpactMessage.Bg"
	1652	[5301]	LOADK    	R51 := 12.000000
	1653	[5301]	GETGLOBAL	R52 K0 ; R52 := 0xae91e43b
	1654	[5301]	SELF     	R52 R52 K139 ; R53 := R52; R52 := R52[0x91a24e4b]
	1655	[5301]	LOADK    	R54 K296 ; R54 := "ImpactMessage.Label"
	1656	[5301]	LOADK    	R55 := 33.000000
	1657	[5301]	CALL     	R52 4 2 ; R52 := R52(R53,R54,R55)
	1658	[5301]	LOADK    	R53 := 20.000000
	1659	[5301]	ADD      	R52 R52 R53 ; R52 := R52 + R53
	1660	[5301]	CALL     	R48 5 1 ; R48(R49,R50,R51,R52)
	1661	[5302]	GETGLOBAL	R48 K0 ; R48 := 0xae91e43b
	1662	[5302]	SELF     	R48 R48 K1 ; R49 := R48; R48 := R48[0x67bc869f]
	1663	[5302]	LOADK    	R50 K298 ; R50 := "ImpactMessage.Bg"
	1664	[5302]	LOADK    	R51 := 13.000000
	1665	[5302]	GETGLOBAL	R52 K0 ; R52 := 0xae91e43b
	1666	[5302]	SELF     	R52 R52 K139 ; R53 := R52; R52 := R52[0x91a24e4b]
	1667	[5302]	LOADK    	R54 K296 ; R54 := "ImpactMessage.Label"
	1668	[5302]	LOADK    	R55 := 34.000000
	1669	[5302]	CALL     	R52 4 2 ; R52 := R52(R53,R54,R55)
	1670	[5302]	LOADK    	R53 := 8.000000
	1671	[5302]	ADD      	R52 R52 R53 ; R52 := R52 + R53
	1672	[5302]	CALL     	R48 5 1 ; R48(R49,R50,R51,R52)
	1673	[5303]	GETGLOBAL	R48 K0 ; R48 := 0xae91e43b
	1674	[5303]	SELF     	R48 R48 K1 ; R49 := R48; R48 := R48[0x67bc869f]
	1675	[5303]	LOADK    	R50 K298 ; R50 := "ImpactMessage.Bg"
	1676	[5303]	LOADK    	R51 := 0.000000
	1677	[5303]	GETGLOBAL	R52 K0 ; R52 := 0xae91e43b
	1678	[5303]	SELF     	R52 R52 K139 ; R53 := R52; R52 := R52[0x91a24e4b]
	1679	[5303]	LOADK    	R54 K296 ; R54 := "ImpactMessage.Label"
	1680	[5303]	LOADK    	R55 := 0.000000
	1681	[5303]	CALL     	R52 4 0 ; R52,... := R52(R53,R54,R55)
	1682	[5303]	CALL     	R48 0 1 ; R48(R49,...)
	1683	[5304]	GETGLOBAL	R48 K0 ; R48 := 0xae91e43b
	1684	[5304]	SELF     	R48 R48 K1 ; R49 := R48; R48 := R48[0x67bc869f]
	1685	[5304]	LOADK    	R50 K298 ; R50 := "ImpactMessage.Bg"
	1686	[5304]	LOADK    	R51 := 1.000000
	1687	[5304]	GETGLOBAL	R52 K0 ; R52 := 0xae91e43b
	1688	[5304]	SELF     	R52 R52 K139 ; R53 := R52; R52 := R52[0x91a24e4b]
	1689	[5304]	LOADK    	R54 K296 ; R54 := "ImpactMessage.Label"
	1690	[5304]	LOADK    	R55 := 1.000000
	1691	[5304]	CALL     	R52 4 0 ; R52,... := R52(R53,R54,R55)
	1692	[5304]	CALL     	R48 0 1 ; R48(R49,...)
	1693	[5307]	GETGLOBAL	R48 K0 ; R48 := 0xae91e43b
	1694	[5307]	SELF     	R48 R48 K1 ; R49 := R48; R48 := R48[0x67bc869f]
	1695	[5307]	LOADK    	R50 K128 ; R50 := "StandingGain"
	1696	[5307]	LOADK    	R51 := 10.000000
	1697	[5307]	LOADK    	R52 := 0.000000
	1698	[5307]	CALL     	R48 5 1 ; R48(R49,R50,R51,R52)
	1699	[5308]	GETGLOBAL	R48 K0 ; R48 := 0xae91e43b
	1700	[5308]	SELF     	R48 R48 K10 ; R49 := R48; R48 := R48[0xaade900e]
	1701	[5308]	LOADK    	R50 K299 ; R50 := "StandingGain.Label"
	1702	[5308]	LOADK    	R51 := 75.000000
	1703	[5308]	OP_LOADBOOL	R52 1 0 ; R52 := true
	1704	[5308]	CALL     	R48 5 1 ; R48(R49,R50,R51,R52)
	1705	[5310]	GETGLOBAL	R48 K0 ; R48 := 0xae91e43b
	1706	[5310]	SELF     	R48 R48 K1 ; R49 := R48; R48 := R48[0x67bc869f]
	1707	[5310]	LOADK    	R50 K129 ; R50 := "PvPHeldFlagTimer"
	1708	[5310]	LOADK    	R51 := 10.000000
	1709	[5310]	LOADK    	R52 := 0.000000
	1710	[5310]	CALL     	R48 5 1 ; R48(R49,R50,R51,R52)
	1711	[5312]	GETUPVAL 	R48 U39 ; R48 := U39
	1712	[5312]	LOADK    	R49 K300 ; R49 := "PhotoBooth"
	1713	[5312]	GETGLOBAL	R50 K16 ; R50 := 0x7b998233
	1714	[5312]	GETUPVAL 	R51 U4 ; R51 := U4
	1715	[5312]	CALL     	R50 2 2 ; R50 := R50(R51)
	1716	[5312]	TEST     	R50 1 ; if R50 then PC := 1723
	1717	[5312]	JMP      	1723 ; PC := 1723
	1718	[5312]	GETUPVAL 	R50 U4 ; R50 := U4
	1719	[5312]	SELF     	R50 R50 K60 ; R51 := R50; R50 := R50[0xf2deaf69]
	1720	[5312]	GETGLOBAL	R52 K301 ; R52 := gLotusPhotoBoothGameRulesType
	1721	[5312]	CALL     	R50 3 2 ; R50 := R50(R51,R52)
	1722	[5312]	JMP      	1725 ; PC := 1725
	1723	[5312]	OP_LOADBOOL	R50 0 1 ; R50 := false; PC := 1724
	1724	[5312]	OP_LOADBOOL	R50 1 0 ; R50 := true
	1725	[5312]	SETTABLE 	R48 R49 R50 ; R48[R49] := R50
	1726	[5314]	GETGLOBAL	R48 K13 ; R48 := _T
	1727	[5314]	LOADK    	R49 K302 ; R49 := "LocationTrackerAddedCallbacks"
	1728	[5314]	NEWTABLE 	R50 0 0 ; R50 := {}
	1729	[5314]	SETTABLE 	R48 R49 R50 ; R48[R49] := R50
	1730	[5316]	GETUPVAL 	R48 U2 ; R48 := U2
	1731	[5316]	LOADK    	R49 K303 ; R49 := "Initialized"
	1732	[5316]	OP_LOADBOOL	R50 1 0 ; R50 := true
	1733	[5316]	SETTABLE 	R48 R49 R50 ; R48[R49] := R50
	1734	[5318]	GETGLOBAL	R48 K304 ; R48 := 0x0db48b5b
	1735	[5318]	LOADK    	R50 K305 ; R50 := true
	1736	[5318]	SELF     	R48 R48 R50 ; R49 := R48; R48 := R48[R50]
	1737	[5318]	CALL     	R48 2 2 ; R48 := R48(R49)
	1738	[5318]	TEST     	R48 1 ; if R48 then PC := 1746
	1739	[5318]	JMP      	1746 ; PC := 1746
	1740	[5318]	GETGLOBAL	R48 K304 ; R48 := 0x0db48b5b
	1741	[5318]	LOADK    	R50 K306 ; R50 := true
	1742	[5318]	SELF     	R48 R48 R50 ; R49 := R48; R48 := R48[R50]
	1743	[5318]	CALL     	R48 2 2 ; R48 := R48(R49)
	1744	[5318]	TEST     	R48 0 ; if not R48 then PC := 1772
	1745	[5318]	JMP      	1772 ; PC := 1772
	1746	[5318]	GETGLOBAL	R48 K16 ; R48 := 0x7b998233
	1747	[5318]	GETGLOBAL	R49 K307 ; R49 := 0xe7f2b02f
	1748	[5318]	LOADK    	R51 K308 ; R51 := true
	1749	[5318]	SELF     	R49 R49 R51 ; R50 := R49; R49 := R49[R51]
	1750	[5318]	CALL     	R49 2 0 ; R49,... := R49(R50)
	1751	[5318]	CALL     	R48 0 2 ; R48 := R48(R49,...)
	1752	[5318]	TEST     	R48 1 ; if R48 then PC := 1772
	1753	[5318]	JMP      	1772 ; PC := 1772
	1754	[5318]	GETGLOBAL	R48 K307 ; R48 := 0xe7f2b02f
	1755	[5318]	LOADK    	R50 K308 ; R50 := true
	1756	[5318]	SELF     	R48 R48 R50 ; R49 := R48; R48 := R48[R50]
	1757	[5318]	CALL     	R48 2 2 ; R48 := R48(R49)
	1758	[5318]	LOADK    	R50 K309 ; R50 := true
	1759	[5318]	SELF     	R48 R48 R50 ; R49 := R48; R48 := R48[R50]
	1760	[5318]	CALL     	R48 2 2 ; R48 := R48(R49)
	1761	[5318]	TEST     	R48 0 ; if not R48 then PC := 1772
	1762	[5318]	JMP      	1772 ; PC := 1772
	1763	[5319]	GETGLOBAL	R48 K13 ; R48 := _T
	1764	[5319]	LOADK    	R49 K310 ; R49 := true
	1765	[5319]	GETTABLE 	R48 R48 R49 ; R48 := R48[R49]
	1766	[5319]	LOADK    	R49 K311 ; R49 := "PROXY CONNECTION DETECTED\r\n\r\nCheck Network Config"
	1767	[5319]	LOADK    	R50 := -1.000000
	1768	[5319]	OP_LOADBOOL	R51 0 0 ; R51 := false
	1769	[5319]	LOADNIL  	R52 R52 ; R52 := nil
	1770	[5319]	OP_LOADBOOL	R53 0 0 ; R53 := false
	1771	[5319]	CALL     	R48 6 1 ; R48(R49,R50,R51,R52,R53)
	1772	[5322]	GETGLOBAL	R48 K13 ; R48 := _T
	1773	[5322]	LOADK    	R49 K312 ; R49 := "HudInitialized"
	1774	[5322]	GETGLOBAL	R50 K0 ; R50 := 0xae91e43b
	1775	[5322]	SETTABLE 	R48 R49 R50 ; R48[R49] := R50
	1776	[5325]	RETURN   	R0 1 ; return 

function #145 <?:5327,5329> (3 instructions, 12 bytes at 0000021191E929B0)
1 param, 2 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[5328]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[5328]	SETTABLE 	R1 K0 K1 ; R1["mScreenDuck"] := 2.000000
	3	[5329]	RETURN   	R0 1 ; return 

function #146 <?:5331,5341> (20 instructions, 80 bytes at 0000021191E92A40)
1 param, 6 slots, 1 upvalue, 0 locals, 9 constants, 0 functions
	1	[5332]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[5332]	SETTABLE 	R1 K0 K1 ; R1["hasCheckedForStatusEffects"] := false
	3	[5333]	EQ       	0 R0 K2 ; if R0 ~= nil then PC := 8
	4	[5333]	JMP      	8 ; PC := 8
	5	[5334]	GETUPVAL 	R1 U0 ; R1 := U0
	6	[5334]	SETTABLE 	R1 K3 K2 ; R1["effectOverride"] := nil
	7	[5335]	RETURN   	R0 1 ; return 
	8	[5337]	NEWTABLE 	R1 4 0 ; R1 := {}
	9	[5337]	LOADK    	R2 K4 ; R2 := "ShieldDebuffKey"
	10	[5337]	LOADK    	R3 K5 ; R3 := "HealthDebuffKey"
	11	[5337]	LOADK    	R4 K6 ; R4 := "SpeedDebuffKey"
	12	[5337]	LOADK    	R5 K7 ; R5 := "DamageDebuffKey"
	13	[5337]	SETLIST  	R1 4 1 ; R1[(1-1)*FPF+i] := R(1+i), 1 <= i <= 4
	14	[5340]	GETUPVAL 	R2 U0 ; R2 := U0
	15	[5340]	GETGLOBAL	R3 K8 ; R3 := 0x03f57322
	16	[5340]	MOVE     	R4 R0 ; R4 := R0
	17	[5340]	CALL     	R3 2 2 ; R3 := R3(R4)
	18	[5340]	GETTABLE 	R3 R1 R3 ; R3 := R1[R3]
	19	[5340]	SETTABLE 	R2 K3 R3 ; R2["effectOverride"] := R3
	20	[5341]	RETURN   	R0 1 ; return 

function #147 <?:5343,5346> (3 instructions, 12 bytes at 00000211298D0820)
0 params, 2 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[5345]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5345]	SETTABLE 	R0 K0 K1 ; R0["hasCheckedForStatusEffects"] := false
	3	[5346]	RETURN   	R0 1 ; return 

function #148 <?:5348,5363> (33 instructions, 132 bytes at 00000211298D08B0)
0 params, 3 slots, 2 upvalues, 0 locals, 9 constants, 0 functions
	1	[5349]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5349]	EQ       	1 R0 K0 ; if R0 == nil then PC := 33
	3	[5349]	JMP      	33 ; PC := 33
	4	[5350]	GETUPVAL 	R0 U1 ; R0 := U1
	5	[5350]	GETTABLE 	R0 R0 K1 ; R0 := R0["HidePlayerPanel"]
	6	[5350]	EQ       	1 R0 K0 ; if R0 == nil then PC := 12
	7	[5350]	JMP      	12 ; PC := 12
	8	[5350]	GETUPVAL 	R0 U1 ; R0 := U1
	9	[5350]	GETTABLE 	R0 R0 K1 ; R0 := R0["HidePlayerPanel"]
	10	[5350]	EQ       	0 R0 K2 ; if R0 ~= 0.000000 then PC := 13
	11	[5350]	JMP      	13 ; PC := 13
	12	[5350]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 13
	13	[5350]	OP_LOADBOOL	R0 1 0 ; R0 := true
	14	[5351]	GETUPVAL 	R1 U0 ; R1 := U0
	15	[5351]	GETTABLE 	R1 R1 K3 ; R1 := R1["mVisible"]
	16	[5351]	TEST     	R1 1 ; if R1 then PC := 26
	17	[5351]	JMP      	26 ; PC := 26
	18	[5352]	GETUPVAL 	R1 U1 ; R1 := U1
	19	[5352]	SETTABLE 	R1 K4 K5 ; R1["mCanControlPlayerPanel"] := true
	20	[5353]	TEST     	R0 1 ; if R0 then PC := 33
	21	[5353]	JMP      	33 ; PC := 33
	22	[5354]	GETUPVAL 	R1 U0 ; R1 := U0
	23	[5354]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x587aa683]
	24	[5354]	CALL     	R1 2 1 ; R1(R2)
	25	[5355]	JMP      	33 ; PC := 33
	26	[5357]	TEST     	R0 1 ; if R0 then PC := 30
	27	[5357]	JMP      	30 ; PC := 30
	28	[5358]	GETUPVAL 	R1 U1 ; R1 := U1
	29	[5358]	SETTABLE 	R1 K4 K7 ; R1["mCanControlPlayerPanel"] := false
	30	[5360]	GETUPVAL 	R1 U0 ; R1 := U0
	31	[5360]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xe0f7ce9e]
	32	[5360]	CALL     	R1 2 1 ; R1(R2)
	33	[5363]	RETURN   	R0 1 ; return 

function #149 <?:5365,5377> (50 instructions, 200 bytes at 0000021137AE1EB0)
0 params, 12 slots, 4 upvalues, 0 locals, 15 constants, 0 functions
	1	[5366]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[5366]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	3	[5366]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[5366]	TEST     	R0 1 ; if R0 then PC := 50
	5	[5366]	JMP      	50 ; PC := 50
	6	[5366]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	7	[5366]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[5366]	CALL     	R0 2 2 ; R0 := R0(R1)
	9	[5366]	TEST     	R0 1 ; if R0 then PC := 50
	10	[5366]	JMP      	50 ; PC := 50
	11	[5367]	GETUPVAL 	R0 U0 ; R0 := U0
	12	[5367]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xfaa69527]
	13	[5367]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	14	[5367]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0x6b837788]
	15	[5367]	CALL     	R2 2 2 ; R2 := R2(R3)
	16	[5367]	GETGLOBAL	R3 K1 ; R3 := 0xae91e43b
	17	[5367]	SELF     	R3 R3 K4 ; R4 := R3; R3 := R3[0xaf9fda9f]
	18	[5367]	CALL     	R3 2 2 ; R3 := R3(R4)
	19	[5367]	OP_LOADBOOL	R4 1 0 ; R4 := true
	20	[5367]	GETUPVAL 	R5 U1 ; R5 := U1
	21	[5367]	GETTABLE 	R5 R5 K5 ; R5 := R5["HudScalePadding"]
	22	[5367]	CALL     	R0 6 1 ; R0(R1,R2,R3,R4,R5)
	23	[5369]	LOADNIL  	R0 R0 ; R0 := nil
	24	[5370]	GETGLOBAL	R1 K6 ; R1 := 0xcfc01047
	25	[5370]	GETUPVAL 	R2 U2 ; R2 := U2
	26	[5370]	CALL     	R1 2 4 ; R1,R2,R3 := R1(R2)
	27	[5370]	JMP      	40 ; PC := 40
	28	[5371]	GETUPVAL 	R6 U0 ; R6 := U0
	29	[5371]	SELF     	R6 R6 K7 ; R7 := R6; R6 := R6[0x2de3d774]
	30	[5371]	GETTABLE 	R8 R5 K8 ; R8 := R5["Clip"]
	31	[5371]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	32	[5371]	MOVE     	R0 R6 ; R0 := R6
	33	[5372]	GETUPVAL 	R6 U3 ; R6 := U3
	34	[5372]	SELF     	R6 R6 K9 ; R7 := R6; R6 := R6[0x31669273]
	35	[5372]	GETTABLE 	R8 R5 K10 ; R8 := R5["Movie"]
	36	[5372]	GETTABLE 	R9 R5 K8 ; R9 := R5["Clip"]
	37	[5372]	GETTABLE 	R10 R0 K11 ; R10 := R0["x"]
	38	[5372]	GETTABLE 	R11 R0 K12 ; R11 := R0["y"]
	39	[5372]	CALL     	R6 6 1 ; R6(R7,R8,R9,R10,R11)
	40	[5370]	TFORLOOP 	R1 2 ; R4,R5 := R1(R2,R3); if R4 ~= nil then begin PC = 28; R3 := R4 end
	41	[5372]	JMP      	28 ; PC := 28
	42	[5375]	GETUPVAL 	R6 U3 ; R6 := U3
	43	[5375]	SELF     	R6 R6 K13 ; R7 := R6; R6 := R6[0xdae5251c]
	44	[5375]	GETUPVAL 	R8 U0 ; R8 := U0
	45	[5375]	SELF     	R8 R8 K7 ; R9 := R8; R8 := R8[0x2de3d774]
	46	[5375]	LOADK    	R10 K14 ; R10 := "Notification"
	47	[5375]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	48	[5375]	GETTABLE 	R8 R8 K12 ; R8 := R8["y"]
	49	[5375]	CALL     	R6 3 1 ; R6(R7,R8)
	50	[5377]	RETURN   	R0 1 ; return 

function #150 <?:5379,5389> (31 instructions, 124 bytes at 000002111FF92080)
0 params, 10 slots, 1 upvalue, 0 locals, 8 constants, 0 functions
	1	[5380]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[5380]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[5380]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[5380]	TEST     	R0 1 ; if R0 then PC := 31
	5	[5380]	JMP      	31 ; PC := 31
	6	[5381]	LOADK    	R0 := 1.000000
	7	[5381]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[5381]	GETTABLE 	R1 R1 K1 ; R1 := R1["list"]
	9	[5381]	LEN      	R1 R1 ; R1 := # R1
	10	[5381]	LOADK    	R2 := 1.000000
	11	[5381]	FORPREP  	R0 30 ; R0 -= R2; PC := 30
	12	[5382]	GETUPVAL 	R4 U0 ; R4 := U0
	13	[5382]	GETTABLE 	R4 R4 K1 ; R4 := R4["list"]
	14	[5382]	GETTABLE 	R4 R4 R3 ; R4 := R4[R3]
	15	[5383]	GETTABLE 	R5 R4 K2 ; R5 := R4["clip"]
	16	[5383]	EQ       	1 R5 K3 ; if R5 == "ImpactMessage" then PC := 30
	17	[5383]	JMP      	30 ; PC := 30
	18	[5384]	GETGLOBAL	R5 K4 ; R5 := 0xae91e43b
	19	[5384]	SELF     	R5 R5 K5 ; R6 := R5; R5 := R5[0xaade900e]
	20	[5384]	GETTABLE 	R7 R4 K2 ; R7 := R4["clip"]
	21	[5384]	LOADK    	R8 := 11.000000
	22	[5384]	OP_LOADBOOL	R9 0 0 ; R9 := false
	23	[5384]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	24	[5385]	GETGLOBAL	R5 K4 ; R5 := 0xae91e43b
	25	[5385]	SELF     	R5 R5 K6 ; R6 := R5; R5 := R5[0x67bc869f]
	26	[5385]	GETTABLE 	R7 R4 K2 ; R7 := R4["clip"]
	27	[5385]	LOADK    	R8 := 5.000000
	28	[5385]	LOADK    	R9 K7 ; R9 := 0.010000
	29	[5385]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	30	[5381]	FORLOOP  	R0 12 ; R0 += R2; if R0 <= R1 then begin PC := 12; R3 := R0 end
	31	[5389]	RETURN   	R0 1 ; return 

function #151 <?:5391,5401> (25 instructions, 100 bytes at 000002112622CAE0)
3 params, 6 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[5392]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[5392]	GETTABLE 	R3 R3 K0 ; R3 := R3["Faded"]
	3	[5392]	GETTABLE 	R3 R3 R0 ; R3 := R3[R0]
	4	[5392]	TEST     	R3 0 ; if not R3 then PC := 25
	5	[5392]	JMP      	25 ; PC := 25
	6	[5393]	TEST     	R1 0 ; if not R1 then PC := 15
	7	[5393]	JMP      	15 ; PC := 15
	8	[5394]	GETUPVAL 	R3 U0 ; R3 := U0
	9	[5394]	GETTABLE 	R3 R3 K0 ; R3 := R3["Faded"]
	10	[5394]	GETTABLE 	R3 R3 R0 ; R3 := R3[R0]
	11	[5394]	GETGLOBAL	R4 K2 ; R4 := 0x03f57322
	12	[5394]	MOVE     	R5 R1 ; R5 := R1
	13	[5394]	CALL     	R4 2 2 ; R4 := R4(R5)
	14	[5394]	SETTABLE 	R3 K1 R4 ; R3["Alpha"] := R4
	15	[5397]	TEST     	R2 0 ; if not R2 then PC := 25
	16	[5397]	JMP      	25 ; PC := 25
	17	[5398]	GETUPVAL 	R3 U0 ; R3 := U0
	18	[5398]	GETTABLE 	R3 R3 K0 ; R3 := R3["Faded"]
	19	[5398]	GETTABLE 	R3 R3 R0 ; R3 := R3[R0]
	20	[5398]	EQ       	1 R2 K4 ; if R2 == "true" then PC := 23
	21	[5398]	JMP      	23 ; PC := 23
	22	[5398]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 23
	23	[5398]	OP_LOADBOOL	R4 1 0 ; R4 := true
	24	[5398]	SETTABLE 	R3 K3 R4 ; R3["Visible"] := R4
	25	[5401]	RETURN   	R0 1 ; return 

function #152 <?:5403,5433> (96 instructions, 384 bytes at 000002112CD899A0)
3 params, 15 slots, 4 upvalues, 0 locals, 20 constants, 0 functions
	1	[5404]	GETGLOBAL	R3 K0 ; R3 := 0x85f2fca8
	2	[5405]	GETGLOBAL	R4 K1 ; R4 := 0x03f57322
	3	[5405]	MOVE     	R5 R0 ; R5 := R0
	4	[5405]	CALL     	R4 2 2 ; R4 := R4(R5)
	5	[5405]	MOVE     	R0 R4 ; R0 := R4
	6	[5406]	LT       	0 K2 R0 ; if 0.000000 >= R0 then PC := 60
	7	[5406]	JMP      	60 ; PC := 60
	8	[5407]	GETGLOBAL	R3 K3 ; R3 := 0x13eb61e9
	9	[5408]	GETGLOBAL	R4 K4 ; R4 := 0xae91e43b
	10	[5408]	SELF     	R4 R4 K5 ; R5 := R4; R4 := R4[0x67bc869f]
	11	[5408]	MOVE     	R6 R1 ; R6 := R1
	12	[5408]	LOADK    	R7 := 5.000000
	13	[5408]	LOADK    	R8 := 400.000000
	14	[5408]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	15	[5409]	GETGLOBAL	R4 K4 ; R4 := 0xae91e43b
	16	[5409]	SELF     	R4 R4 K5 ; R5 := R4; R4 := R4[0x67bc869f]
	17	[5409]	MOVE     	R6 R1 ; R6 := R1
	18	[5409]	LOADK    	R7 := 6.000000
	19	[5409]	LOADK    	R8 := 400.000000
	20	[5409]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	21	[5410]	GETGLOBAL	R4 K6 ; R4 := 0x25312c9b
	22	[5410]	GETGLOBAL	R5 K4 ; R5 := 0xae91e43b
	23	[5410]	MOVE     	R6 R1 ; R6 := R1
	24	[5410]	LOADK    	R7 := 7.000000
	25	[5410]	NEWTABLE 	R8 2 0 ; R8 := {}
	26	[5410]	LOADK    	R9 := 5.000000
	27	[5410]	LOADK    	R10 := 6.000000
	28	[5410]	SETLIST  	R8 2 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 2
	29	[5410]	NEWTABLE 	R9 2 0 ; R9 := {}
	30	[5410]	LOADK    	R10 := 100.000000
	31	[5410]	LOADK    	R11 := 100.000000
	32	[5410]	SETLIST  	R9 2 1 ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 2
	33	[5410]	LOADK    	R10 := 0.500000
	34	[5410]	LOADK    	R11 := 0.000000
	35	[5410]	CALL     	R4 8 1 ; R4(R5,R6,R7,R8,R9,R10,R11)
	36	[5412]	GETGLOBAL	R4 K8 ; R4 := 0x5bced4c4
	37	[5412]	GETTABLE 	R4 R4 K9 ; R4 := R4[0x55f27c30]
	38	[5412]	MOVE     	R5 R0 ; R5 := R0
	39	[5412]	CALL     	R4 2 2 ; R4 := R4(R5)
	40	[5413]	EQ       	0 R4 R0 ; if R4 ~= R0 then PC := 58
	41	[5413]	JMP      	58 ; PC := 58
	42	[5413]	GETUPVAL 	R5 U0 ; R5 := U0
	43	[5413]	LT       	0 R5 R4 ; if R5 >= R4 then PC := 58
	44	[5413]	JMP      	58 ; PC := 58
	45	[5414]	GETGLOBAL	R5 K8 ; R5 := 0x5bced4c4
	46	[5414]	GETTABLE 	R5 R5 K10 ; R5 := R5[0xac1b386a]
	47	[5414]	MOVE     	R6 R4 ; R6 := R4
	48	[5414]	GETGLOBAL	R7 K11 ; R7 := 0x0785e5dc
	49	[5414]	LEN      	R7 R7 ; R7 := # R7
	50	[5414]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	51	[5415]	GETGLOBAL	R6 K11 ; R6 := 0x0785e5dc
	52	[5415]	GETTABLE 	R6 R6 R5 ; R6 := R6[R5]
	53	[5416]	GETUPVAL 	R7 U2 ; R7 := U2
	54	[5416]	GETTABLE 	R7 R7 K12 ; R7 := R7[0x659d451f]
	55	[5416]	MOVE     	R8 R6 ; R8 := R6
	56	[5416]	CALL     	R7 2 2 ; R7 := R7(R8)
	57	[5416]	SETUPVAL 	R7 U1 ; U1 := R7
	58	[5418]	SETUPVAL 	R4 U0 ; U0 := R4
	59	[5418]	JMP      	78 ; PC := 78
	60	[5420]	GETGLOBAL	R7 K13 ; R7 := 0x7b998233
	61	[5420]	GETUPVAL 	R8 U1 ; R8 := U1
	62	[5420]	CALL     	R7 2 2 ; R7 := R7(R8)
	63	[5420]	TEST     	R7 1 ; if R7 then PC := 69
	64	[5420]	JMP      	69 ; PC := 69
	65	[5421]	GETUPVAL 	R7 U1 ; R7 := U1
	66	[5421]	SELF     	R7 R7 K14 ; R8 := R7; R7 := R7[0x6cf1e476]
	67	[5421]	OP_LOADBOOL	R9 1 0 ; R9 := true
	68	[5421]	CALL     	R7 3 1 ; R7(R8,R9)
	69	[5423]	GETUPVAL 	R7 U0 ; R7 := U0
	70	[5423]	LT       	0 K2 R7 ; if 0.000000 >= R7 then PC := 76
	71	[5423]	JMP      	76 ; PC := 76
	72	[5424]	GETUPVAL 	R7 U2 ; R7 := U2
	73	[5424]	GETTABLE 	R7 R7 K12 ; R7 := R7[0x659d451f]
	74	[5424]	GETGLOBAL	R8 K15 ; R8 := 0x50fa377d
	75	[5424]	CALL     	R7 2 1 ; R7(R8)
	76	[5426]	LOADK    	R7 := 0.000000
	77	[5426]	SETUPVAL 	R7 U0 ; U0 := R7
	78	[5428]	GETGLOBAL	R7 K4 ; R7 := 0xae91e43b
	79	[5428]	SELF     	R7 R7 K16 ; R8 := R7; R7 := R7[0xa7ec3e8a]
	80	[5428]	MOVE     	R9 R2 ; R9 := R2
	81	[5428]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	82	[5429]	TEST     	R7 0 ; if not R7 then PC := 96
	83	[5429]	JMP      	96 ; PC := 96
	84	[5430]	GETUPVAL 	R8 U3 ; R8 := U3
	85	[5430]	GETTABLE 	R8 R8 K17 ; R8 := R8[0xb5be5d4a]
	86	[5430]	GETGLOBAL	R9 K4 ; R9 := 0xae91e43b
	87	[5430]	MOVE     	R10 R2 ; R10 := R2
	88	[5430]	CALL     	R8 3 3 ; R8,R9 := R8(R9,R10)
	89	[5431]	GETUPVAL 	R10 U3 ; R10 := U3
	90	[5431]	GETTABLE 	R10 R10 K18 ; R10 := R10[0x5a22d251]
	91	[5431]	GETGLOBAL	R11 K4 ; R11 := 0xae91e43b
	92	[5431]	MOVE     	R12 R3 ; R12 := R3
	93	[5431]	SUB      	R13 R8 K19 ; R13 := R8 - 35.000000
	94	[5431]	MOVE     	R14 R9 ; R14 := R9
	95	[5431]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	96	[5433]	RETURN   	R0 1 ; return 

function #153 <?:5441,5443> (3 instructions, 12 bytes at 0000021132892560)
1 param, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[5442]	OP_LOADBOOL	R1 0 0 ; R1 := false
	2	[5442]	SETUPVAL 	R1 U0 ; U0 := R1
	3	[5443]	RETURN   	R0 1 ; return 

function #154 <?:5445,5450> (11 instructions, 44 bytes at 0000021131FF7040)
0 params, 2 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[5446]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[5446]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[5446]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[5446]	TEST     	R0 1 ; if R0 then PC := 11
	5	[5446]	JMP      	11 ; PC := 11
	6	[5447]	GETUPVAL 	R0 U0 ; R0 := U0
	7	[5447]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x32302b4a]
	8	[5447]	CALL     	R0 2 1 ; R0(R1)
	9	[5448]	LOADNIL  	R0 R0 ; R0 := nil
	10	[5448]	SETUPVAL 	R0 U0 ; U0 := R0
	11	[5450]	RETURN   	R0 1 ; return 

function #155 <?:5452,5478> (58 instructions, 232 bytes at 0000021123D409E0)
1 param, 8 slots, 4 upvalues, 0 locals, 19 constants, 0 functions
	1	[5454]	GETGLOBAL	R1 K0 ; R1 := 0x3d106989
	2	[5454]	LOADK    	R2 K1 ; R2 := "HUD_OnFindExternalSessionComplete("
	3	[5454]	GETGLOBAL	R3 K2 ; R3 := 0x64fb1586
	4	[5454]	MOVE     	R4 R0 ; R4 := R0
	5	[5454]	CALL     	R3 2 2 ; R3 := R3(R4)
	6	[5454]	LOADK    	R4 K3 ; R4 := ")"
	7	[5454]	CONCAT   	R2 R2 R4 ; R2 := R2 .. R3 .. R4
	8	[5454]	CALL     	R1 2 1 ; R1(R2)
	9	[5458]	GETUPVAL 	R1 U0 ; R1 := U0
	10	[5458]	GETTABLE 	R1 R1 K4 ; R1 := R1[0x756837f0]
	11	[5458]	MOVE     	R2 R0 ; R2 := R0
	12	[5458]	OP_LOADBOOL	R3 1 0 ; R3 := true
	13	[5458]	LOADNIL  	R4 R5 ; R4 := R5 := nil
	14	[5458]	GETGLOBAL	R6 K5 ; R6 := 0xae91e43b
	15	[5458]	LOADK    	R7 K6 ; R7 := "HUD_OnFindExternalSessionComplete"
	16	[5458]	CALL     	R1 7 3 ; R1,R2 := R1(R2,R3,R4,R5,R6,R7)
	17	[5460]	GETGLOBAL	R3 K7 ; R3 := 0x0b96777e
	18	[5460]	MOVE     	R4 R1 ; R4 := R1
	19	[5460]	CALL     	R3 2 2 ; R3 := R3(R4)
	20	[5460]	EQ       	0 R3 K8 ; if R3 ~= "string" then PC := 42
	21	[5460]	JMP      	42 ; PC := 42
	22	[5461]	GETUPVAL 	R3 U1 ; R3 := U1
	23	[5461]	CALL     	R3 1 1 ; R3()
	24	[5462]	TEST     	R2 0 ; if not R2 then PC := 35
	25	[5462]	JMP      	35 ; PC := 35
	26	[5462]	GETTABLE 	R3 R2 K9 ; R3 := R2[0x65b64ecd]
	27	[5462]	CALL     	R3 1 2 ; R3 := R3()
	28	[5462]	TEST     	R3 0 ; if not R3 then PC := 35
	29	[5462]	JMP      	35 ; PC := 35
	30	[5463]	GETTABLE 	R3 R2 K9 ; R3 := R2[0x65b64ecd]
	31	[5463]	CALL     	R3 1 1 ; R3()
	32	[5464]	OP_LOADBOOL	R3 0 0 ; R3 := false
	33	[5464]	SETUPVAL 	R3 U2 ; U2 := R3
	34	[5464]	JMP      	41 ; PC := 41
	35	[5466]	GETUPVAL 	R3 U3 ; R3 := U3
	36	[5466]	GETTABLE 	R3 R3 K10 ; R3 := R3[0xe0cba3ca]
	37	[5466]	MOVE     	R4 R1 ; R4 := R1
	38	[5466]	LOADK    	R5 K11 ; R5 := "Close_Dialog"
	39	[5466]	LOADK    	R6 := 0.000000
	40	[5466]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	41	[5468]	RETURN   	R0 1 ; return 
	42	[5471]	GETGLOBAL	R3 K13 ; R3 := 0x7b998233
	43	[5471]	GETGLOBAL	R4 K14 ; R4 := 0x89326c93
	44	[5471]	CALL     	R3 2 2 ; R3 := R3(R4)
	45	[5471]	TEST     	R3 1 ; if R3 then PC := 56
	46	[5471]	JMP      	56 ; PC := 56
	47	[5472]	GETGLOBAL	R3 K15 ; R3 := 0xbe190284
	48	[5473]	GETGLOBAL	R4 K0 ; R4 := 0x3d106989
	49	[5473]	LOADK    	R5 K16 ; R5 := "HudRedux.lua - OnFindSessionComplete, connect to lobby"
	50	[5473]	CALL     	R4 2 1 ; R4(R5)
	51	[5474]	SELF     	R4 R3 K17 ; R5 := R3; R4 := R3[0xdf0ee4f3]
	52	[5474]	SELF     	R6 R1 K18 ; R7 := R1; R6 := R1[0x7259ce13]
	53	[5474]	CALL     	R6 2 0 ; R6,... := R6(R7)
	54	[5474]	CALL     	R4 0 1 ; R4(R5,...)
	55	[5474]	JMP      	58 ; PC := 58
	56	[5476]	GETUPVAL 	R4 U1 ; R4 := U1
	57	[5476]	CALL     	R4 1 1 ; R4()
	58	[5478]	RETURN   	R0 1 ; return 

function #156 <?:5480,5494> (32 instructions, 128 bytes at 0000021123D40B70)
0 params, 6 slots, 3 upvalues, 0 locals, 13 constants, 0 functions
	1	[5481]	GETGLOBAL	R0 K0 ; R0 := 0x3d106989
	2	[5481]	LOADK    	R1 K1 ; R1 := "HUD - External game ready"
	3	[5481]	CALL     	R0 2 1 ; R0(R1)
	4	[5483]	GETGLOBAL	R0 K2 ; R0 := 0x76ea806b
	5	[5483]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x3f3ae64c]
	6	[5483]	LOADK    	R2 := 0.000000
	7	[5483]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	8	[5484]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	9	[5484]	MOVE     	R2 R0 ; R2 := R0
	10	[5484]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[5484]	TEST     	R1 1 ; if R1 then PC := 32
	12	[5484]	JMP      	32 ; PC := 32
	13	[5484]	GETUPVAL 	R1 U0 ; R1 := U0
	14	[5484]	TEST     	R1 1 ; if R1 then PC := 32
	15	[5484]	JMP      	32 ; PC := 32
	16	[5486]	GETGLOBAL	R1 K5 ; R1 := 0x34291f5c
	17	[5486]	GETTABLE 	R1 R1 K6 ; R1 := R1[0xe27b35bb]
	18	[5486]	CALL     	R1 1 2 ; R1 := R1()
	19	[5487]	SETTABLE 	R1 K7 K8 ; R1["locString"] := "/Lotus/Language/Menu/NavBar_QuickMatchPleaseWait"
	20	[5488]	GETUPVAL 	R2 U2 ; R2 := U2
	21	[5488]	GETTABLE 	R2 R2 K9 ; R2 := R2[0xe99b84e7]
	22	[5488]	MOVE     	R3 R1 ; R3 := R1
	23	[5488]	CALL     	R2 2 2 ; R2 := R2(R3)
	24	[5488]	SETUPVAL 	R2 U1 ; U1 := R2
	25	[5490]	OP_LOADBOOL	R2 1 0 ; R2 := true
	26	[5490]	SETUPVAL 	R2 U0 ; U0 := R2
	27	[5492]	GETGLOBAL	R2 K10 ; R2 := 0xe7f2b02f
	28	[5492]	SELF     	R2 R2 K11 ; R3 := R2; R2 := R2[0x682f563c]
	29	[5492]	MOVE     	R4 R0 ; R4 := R0
	30	[5492]	LOADK    	R5 K12 ; R5 := "HUD_OnFindExternalSessionComplete"
	31	[5492]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	32	[5494]	RETURN   	R0 1 ; return 

function #157 <?:5496,5514> (46 instructions, 184 bytes at 0000021135E915D0)
1 param, 11 slots, 1 upvalue, 0 locals, 9 constants, 0 functions
	1	[5497]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[5497]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[5497]	GETTABLE 	R2 R2 K1 ; R2 := R2["CameraController"]
	4	[5497]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[5497]	TEST     	R1 0 ; if not R1 then PC := 8
	6	[5497]	JMP      	8 ; PC := 8
	7	[5498]	RETURN   	R0 1 ; return 
	8	[5500]	OP_LOADBOOL	R1 0 0 ; R1 := false
	9	[5501]	GETGLOBAL	R2 K2 ; R2 := 0x89326c93
	10	[5501]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0x7d108ddb]
	11	[5501]	CALL     	R2 2 2 ; R2 := R2(R3)
	12	[5502]	LEN      	R3 R2 ; R3 := # R2
	13	[5502]	LT       	0 R3 K4 ; if R3 >= 2.000000 then PC := 16
	14	[5502]	JMP      	16 ; PC := 16
	15	[5503]	RETURN   	R0 1 ; return 
	16	[5506]	LOADK    	R3 := 1.000000
	17	[5506]	LEN      	R4 R2 ; R4 := # R2
	18	[5506]	LOADK    	R5 := 1.000000
	19	[5506]	FORPREP  	R3 45 ; R3 -= R5; PC := 45
	20	[5507]	GETUPVAL 	R7 U0 ; R7 := U0
	21	[5507]	GETTABLE 	R7 R7 K1 ; R7 := R7["CameraController"]
	22	[5507]	SELF     	R7 R7 K5 ; R8 := R7; R7 := R7[0x122ed2ac]
	23	[5507]	CALL     	R7 2 2 ; R7 := R7(R8)
	24	[5508]	TEST     	R1 1 ; if R1 then PC := 44
	25	[5508]	JMP      	44 ; PC := 44
	26	[5508]	TEST     	R7 0 ; if not R7 then PC := 44
	27	[5508]	JMP      	44 ; PC := 44
	28	[5508]	SELF     	R8 R7 K6 ; R9 := R7; R8 := R7[0x5e651723]
	29	[5508]	CALL     	R8 2 2 ; R8 := R8(R9)
	30	[5508]	TEST     	R8 0 ; if not R8 then PC := 44
	31	[5508]	JMP      	44 ; PC := 44
	32	[5508]	SELF     	R8 R7 K6 ; R9 := R7; R8 := R7[0x5e651723]
	33	[5508]	CALL     	R8 2 2 ; R8 := R8(R9)
	34	[5508]	SELF     	R8 R8 K7 ; R9 := R8; R8 := R8[0x5ca33548]
	35	[5508]	CALL     	R8 2 2 ; R8 := R8(R9)
	36	[5508]	EQ       	1 R8 R0 ; if R8 == R0 then PC := 44
	37	[5508]	JMP      	44 ; PC := 44
	38	[5509]	GETUPVAL 	R8 U0 ; R8 := U0
	39	[5509]	GETTABLE 	R8 R8 K1 ; R8 := R8["CameraController"]
	40	[5509]	SELF     	R8 R8 K8 ; R9 := R8; R8 := R8[0x431d29bf]
	41	[5509]	LOADK    	R10 := 1.000000
	42	[5509]	CALL     	R8 3 1 ; R8(R9,R10)
	43	[5509]	JMP      	45 ; PC := 45
	44	[5511]	OP_LOADBOOL	R1 1 0 ; R1 := true
	45	[5506]	FORLOOP  	R3 20 ; R3 += R5; if R3 <= R4 then begin PC := 20; R6 := R3 end
	46	[5514]	RETURN   	R0 1 ; return 

function #158 <?:5516,5518> (3 instructions, 12 bytes at 0000021131039290)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[5517]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5517]	CALL     	R0 1 1 ; R0()
	3	[5518]	RETURN   	R0 1 ; return 

function #159 <?:5520,5522> (11 instructions, 44 bytes at 0000021131039320)
1 param, 8 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[5521]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	2	[5521]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x20b98db3]
	3	[5521]	LOADK    	R3 K2 ; R3 := "MiniGameScore.Score.text"
	4	[5521]	LOADK    	R4 K3 ; R4 := "/Lotus/Language/Menu/MiniGameScore"
	5	[5521]	NEWTABLE 	R5 0 1 ; R5 := {}
	6	[5521]	GETGLOBAL	R6 K5 ; R6 := 0x64fb1586
	7	[5521]	MOVE     	R7 R0 ; R7 := R0
	8	[5521]	CALL     	R6 2 2 ; R6 := R6(R7)
	9	[5521]	SETTABLE 	R5 K4 R6 ; R5["SCORE"] := R6
	10	[5521]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	11	[5522]	RETURN   	R0 1 ; return 

function #160 <?:5524,5541> (79 instructions, 316 bytes at 000002112622D040)
1 param, 6 slots, 1 upvalue, 0 locals, 16 constants, 0 functions
	1	[5525]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	2	[5525]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xaade900e]
	3	[5525]	LOADK    	R3 K2 ; R3 := "AbilityDots"
	4	[5525]	LOADK    	R4 := 11.000000
	5	[5525]	OP_LOADBOOL	R5 0 0 ; R5 := false
	6	[5525]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	7	[5526]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	8	[5526]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xaade900e]
	9	[5526]	LOADK    	R3 K3 ; R3 := "Stamina"
	10	[5526]	LOADK    	R4 := 11.000000
	11	[5526]	OP_LOADBOOL	R5 0 0 ; R5 := false
	12	[5526]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	13	[5527]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	14	[5527]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xaade900e]
	15	[5527]	LOADK    	R3 K4 ; R3 := "HealthAndShield.SuitName"
	16	[5527]	LOADK    	R4 := 11.000000
	17	[5527]	OP_LOADBOOL	R5 0 0 ; R5 := false
	18	[5527]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	19	[5528]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	20	[5528]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xaade900e]
	21	[5528]	LOADK    	R3 K5 ; R3 := "HealthAndShield.MarkerID"
	22	[5528]	LOADK    	R4 := 11.000000
	23	[5528]	OP_LOADBOOL	R5 0 0 ; R5 := false
	24	[5528]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	25	[5529]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	26	[5529]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xaade900e]
	27	[5529]	LOADK    	R3 K6 ; R3 := "HealthAndShield.SuitAffinity"
	28	[5529]	LOADK    	R4 := 11.000000
	29	[5529]	OP_LOADBOOL	R5 0 0 ; R5 := false
	30	[5529]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	31	[5530]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	32	[5530]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xaade900e]
	33	[5530]	LOADK    	R3 K7 ; R3 := "MiniMapContainer"
	34	[5530]	LOADK    	R4 := 11.000000
	35	[5530]	OP_LOADBOOL	R5 0 0 ; R5 := false
	36	[5530]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	37	[5531]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	38	[5531]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xaade900e]
	39	[5531]	LOADK    	R3 K8 ; R3 := "MiniMapOverlayMsg"
	40	[5531]	LOADK    	R4 := 11.000000
	41	[5531]	OP_LOADBOOL	R5 0 0 ; R5 := false
	42	[5531]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	43	[5532]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	44	[5532]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xaade900e]
	45	[5532]	LOADK    	R3 K9 ; R3 := "HealthAndShield"
	46	[5532]	LOADK    	R4 := 11.000000
	47	[5532]	OP_LOADBOOL	R5 0 0 ; R5 := false
	48	[5532]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	49	[5533]	GETUPVAL 	R1 U0 ; R1 := U0
	50	[5533]	SELF     	R1 R1 K10 ; R2 := R1; R1 := R1[0xe95b7a4b]
	51	[5533]	OP_LOADBOOL	R3 0 0 ; R3 := false
	52	[5533]	CALL     	R1 3 1 ; R1(R2,R3)
	53	[5535]	EQ       	1 R0 K11 ; if R0 == "wareframe" then PC := 79
	54	[5535]	JMP      	79 ; PC := 79
	55	[5536]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	56	[5536]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xaade900e]
	57	[5536]	LOADK    	R3 K12 ; R3 := "AbilityPanel.EnergyBar.Flare"
	58	[5536]	LOADK    	R4 := 11.000000
	59	[5536]	OP_LOADBOOL	R5 0 0 ; R5 := false
	60	[5536]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	61	[5537]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	62	[5537]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xaade900e]
	63	[5537]	LOADK    	R3 K13 ; R3 := "HudTracker"
	64	[5537]	LOADK    	R4 := 11.000000
	65	[5537]	OP_LOADBOOL	R5 0 0 ; R5 := false
	66	[5537]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	67	[5538]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	68	[5538]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xaade900e]
	69	[5538]	LOADK    	R3 K14 ; R3 := "Reticle"
	70	[5538]	LOADK    	R4 := 11.000000
	71	[5538]	OP_LOADBOOL	R5 0 0 ; R5 := false
	72	[5538]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	73	[5539]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	74	[5539]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0xaade900e]
	75	[5539]	LOADK    	R3 K15 ; R3 := "ReticleSniper"
	76	[5539]	LOADK    	R4 := 11.000000
	77	[5539]	OP_LOADBOOL	R5 0 0 ; R5 := false
	78	[5539]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	79	[5541]	RETURN   	R0 1 ; return 

function #161 <?:5543,5545> (5 instructions, 20 bytes at 00000211380311E0)
1 param, 4 slots, 2 upvalues, 0 locals, 0 constants, 0 functions
	1	[5544]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[5544]	GETUPVAL 	R2 U1 ; R2 := U1
	3	[5544]	MOVE     	R3 R0 ; R3 := R0
	4	[5544]	CALL     	R1 3 1 ; R1(R2,R3)
	5	[5545]	RETURN   	R0 1 ; return 

function #162 <?:5547,5549> (4 instructions, 16 bytes at 0000021115CC69D0)
0 params, 2 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[5548]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5548]	GETTABLE 	R0 R0 K0 ; R0 := R0["isEnabled"]
	3	[5548]	RETURN   	R0 2 ; return R0 
	4	[5549]	RETURN   	R0 1 ; return 

function #163 <?:5551,5553> (3 instructions, 12 bytes at 0000021115CC6A60)
1 param, 2 slots, 0 upvalues, 0 locals, 2 constants, 0 functions
	1	[5552]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[5552]	SETTABLE 	R1 K1 R0 ; R1["ForceOpenScreen"] := R0
	3	[5553]	RETURN   	R0 1 ; return 

function #164 <?:5555,5575> (57 instructions, 228 bytes at 0000021118F636A0)
1 param, 6 slots, 2 upvalues, 0 locals, 12 constants, 0 functions
	1	[5556]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[5556]	GETGLOBAL	R2 K1 ; R2 := _T
	3	[5556]	GETTABLE 	R2 R2 K2 ; R2 := R2["RailjackHud_Movie"]
	4	[5556]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[5556]	TEST     	R1 1 ; if R1 then PC := 14
	6	[5556]	JMP      	14 ; PC := 14
	7	[5557]	GETGLOBAL	R1 K1 ; R1 := _T
	8	[5557]	GETTABLE 	R1 R1 K2 ; R1 := R1["RailjackHud_Movie"]
	9	[5557]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xe4162eed]
	10	[5557]	LOADK    	R3 K4 ; R3 := "OnPowerModifierHeld"
	11	[5557]	MOVE     	R4 R0 ; R4 := R0
	12	[5557]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	13	[5558]	RETURN   	R0 1 ; return 
	14	[5561]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	15	[5561]	GETGLOBAL	R2 K1 ; R2 := _T
	16	[5561]	GETTABLE 	R2 R2 K5 ; R2 := R2["MechHud_Movie"]
	17	[5561]	CALL     	R1 2 2 ; R1 := R1(R2)
	18	[5561]	TEST     	R1 1 ; if R1 then PC := 27
	19	[5561]	JMP      	27 ; PC := 27
	20	[5562]	GETGLOBAL	R1 K1 ; R1 := _T
	21	[5562]	GETTABLE 	R1 R1 K5 ; R1 := R1["MechHud_Movie"]
	22	[5562]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xe4162eed]
	23	[5562]	LOADK    	R3 K4 ; R3 := "OnPowerModifierHeld"
	24	[5562]	MOVE     	R4 R0 ; R4 := R0
	25	[5562]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	26	[5563]	RETURN   	R0 1 ; return 
	27	[5566]	GETGLOBAL	R1 K6 ; R1 := 0x9ba7909f
	28	[5566]	SELF     	R1 R1 K7 ; R2 := R1; R1 := R1[0xbcfb64ab]
	29	[5566]	GETGLOBAL	R3 K8 ; R3 := 0x96bd0a18
	30	[5566]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	31	[5567]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	32	[5567]	MOVE     	R3 R1 ; R3 := R1
	33	[5567]	CALL     	R2 2 2 ; R2 := R2(R3)
	34	[5567]	TEST     	R2 1 ; if R2 then PC := 41
	35	[5567]	JMP      	41 ; PC := 41
	36	[5568]	SELF     	R2 R1 K3 ; R3 := R1; R2 := R1[0xe4162eed]
	37	[5568]	LOADK    	R4 K4 ; R4 := "OnPowerModifierHeld"
	38	[5568]	MOVE     	R5 R0 ; R5 := R0
	39	[5568]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	40	[5568]	JMP      	57 ; PC := 57
	41	[5570]	GETUPVAL 	R2 U0 ; R2 := U0
	42	[5570]	EQ       	1 R0 K9 ; if R0 == "true" then PC := 45
	43	[5570]	JMP      	45 ; PC := 45
	44	[5570]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 45
	45	[5570]	OP_LOADBOOL	R3 1 0 ; R3 := true
	46	[5570]	CALL     	R2 2 1 ; R2(R3)
	47	[5571]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	48	[5571]	GETUPVAL 	R3 U1 ; R3 := U1
	49	[5571]	CALL     	R2 2 2 ; R2 := R2(R3)
	50	[5571]	TEST     	R2 1 ; if R2 then PC := 57
	51	[5571]	JMP      	57 ; PC := 57
	52	[5572]	GETUPVAL 	R2 U1 ; R2 := U1
	53	[5572]	SELF     	R2 R2 K10 ; R3 := R2; R2 := R2[0xc9dd135d]
	54	[5572]	LOADK    	R4 K11 ; R4 := "OnPowerModifiedHeld"
	55	[5572]	MOVE     	R5 R0 ; R5 := R0
	56	[5572]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	57	[5575]	RETURN   	R0 1 ; return 

function #165 <?:5577,5588> (28 instructions, 112 bytes at 0000021118F63830)
0 params, 6 slots, 1 upvalue, 0 locals, 10 constants, 0 functions
	1	[5578]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5578]	GETTABLE 	R0 R0 K0 ; R0 := R0[0xcf1fcba4]
	3	[5578]	CALL     	R0 1 2 ; R0 := R0()
	4	[5578]	TEST     	R0 0 ; if not R0 then PC := 28
	5	[5578]	JMP      	28 ; PC := 28
	6	[5579]	GETGLOBAL	R0 K1 ; R0 := 0x76ea806b
	7	[5579]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x3f3ae64c]
	8	[5579]	LOADK    	R2 := 0.000000
	9	[5579]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	10	[5579]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x80563238]
	11	[5579]	CALL     	R0 2 2 ; R0 := R0(R1)
	12	[5580]	GETGLOBAL	R1 K4 ; R1 := 0xbe190284
	13	[5581]	SELF     	R2 R1 K5 ; R3 := R1; R2 := R1[0xf9bfc5d9]
	14	[5581]	LOADK    	R4 := 2.000000
	15	[5581]	LOADK    	R5 := 0.000000
	16	[5581]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	17	[5582]	SELF     	R2 R1 K7 ; R3 := R1; R2 := R1[0x4414661f]
	18	[5582]	CALL     	R2 2 2 ; R2 := R2(R3)
	19	[5582]	TEST     	R2 0 ; if not R2 then PC := 25
	20	[5582]	JMP      	25 ; PC := 25
	21	[5583]	SELF     	R2 R0 K8 ; R3 := R0; R2 := R0[0xd40ba817]
	22	[5583]	LOADK    	R4 := 6.000000
	23	[5583]	CALL     	R2 3 1 ; R2(R3,R4)
	24	[5583]	JMP      	28 ; PC := 28
	25	[5585]	SELF     	R2 R0 K8 ; R3 := R0; R2 := R0[0xd40ba817]
	26	[5585]	LOADK    	R4 := 0.000000
	27	[5585]	CALL     	R2 3 1 ; R2(R3,R4)
	28	[5588]	RETURN   	R0 1 ; return 

function #166 <?:5590,5594> (8 instructions, 32 bytes at 0000021128978AB0)
1 param, 3 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[5591]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[5591]	MOVE     	R2 R0 ; R2 := R0
	3	[5591]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[5591]	TEST     	R1 1 ; if R1 then PC := 8
	5	[5591]	JMP      	8 ; PC := 8
	6	[5592]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[5592]	SETTABLE 	R1 K1 R0 ; R1["mProfileMovie"] := R0
	8	[5594]	RETURN   	R0 1 ; return 

function #167 <?:5596,5616> (90 instructions, 360 bytes at 00000211269E89A0)
0 params, 8 slots, 8 upvalues, 0 locals, 22 constants, 0 functions
	1	[5597]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5597]	SELF     	R0 R0 K0 ; R1 := R0; R0 := R0[0x59a9b745]
	3	[5597]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[5598]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	5	[5598]	MOVE     	R2 R0 ; R2 := R0
	6	[5598]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[5598]	TEST     	R1 1 ; if R1 then PC := 90
	8	[5598]	JMP      	90 ; PC := 90
	9	[5598]	GETTABLE 	R1 R0 K2 ; R1 := R0["mActive"]
	10	[5598]	TEST     	R1 0 ; if not R1 then PC := 90
	11	[5598]	JMP      	90 ; PC := 90
	12	[5598]	GETUPVAL 	R1 U1 ; R1 := U1
	13	[5598]	GETTABLE 	R1 R1 K3 ; R1 := R1["valid"]
	14	[5598]	TEST     	R1 0 ; if not R1 then PC := 90
	15	[5598]	JMP      	90 ; PC := 90
	16	[5599]	GETTABLE 	R1 R0 K4 ; R1 := R0["mAvatar"]
	17	[5600]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	18	[5600]	MOVE     	R3 R1 ; R3 := R1
	19	[5600]	CALL     	R2 2 2 ; R2 := R2(R3)
	20	[5600]	TEST     	R2 1 ; if R2 then PC := 90
	21	[5600]	JMP      	90 ; PC := 90
	22	[5601]	LOADNIL  	R2 R2 ; R2 := nil
	23	[5602]	GETUPVAL 	R3 U2 ; R3 := U2
	24	[5602]	CALL     	R3 1 2 ; R3 := R3()
	25	[5602]	TEST     	R3 1 ; if R3 then PC := 33
	26	[5602]	JMP      	33 ; PC := 33
	27	[5602]	GETUPVAL 	R3 U3 ; R3 := U3
	28	[5602]	GETTABLE 	R3 R3 K5 ; R3 := R3["UIMode"]
	29	[5602]	GETUPVAL 	R4 U4 ; R4 := U4
	30	[5602]	GETTABLE 	R4 R4 K6 ; R4 := R4["UI_MODE_IN_DOJO"]
	31	[5602]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 47
	32	[5602]	JMP      	47 ; PC := 47
	33	[5602]	GETTABLE 	R3 R0 K7 ; R3 := R0["mName"]
	34	[5602]	EQ       	1 R3 K8 ; if R3 == "" then PC := 47
	35	[5602]	JMP      	47 ; PC := 47
	36	[5602]	GETUPVAL 	R3 U5 ; R3 := U5
	37	[5602]	MOVE     	R4 R1 ; R4 := R1
	38	[5602]	CALL     	R3 2 2 ; R3 := R3(R4)
	39	[5602]	TEST     	R3 0 ; if not R3 then PC := 47
	40	[5602]	JMP      	47 ; PC := 47
	41	[5603]	GETUPVAL 	R3 U6 ; R3 := U6
	42	[5603]	SELF     	R3 R3 K9 ; R4 := R3; R3 := R3[0x6566f2d4]
	43	[5603]	MOVE     	R5 R1 ; R5 := R1
	44	[5603]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	45	[5603]	MOVE     	R2 R3 ; R2 := R3
	46	[5603]	JMP      	58 ; PC := 58
	47	[5604]	GETGLOBAL	R3 K1 ; R3 := 0x7b998233
	48	[5604]	SELF     	R4 R1 K10 ; R5 := R1; R4 := R1[0x5e651723]
	49	[5604]	CALL     	R4 2 0 ; R4,... := R4(R5)
	50	[5604]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	51	[5604]	TEST     	R3 1 ; if R3 then PC := 58
	52	[5604]	JMP      	58 ; PC := 58
	53	[5605]	SELF     	R3 R1 K10 ; R4 := R1; R3 := R1[0x5e651723]
	54	[5605]	CALL     	R3 2 2 ; R3 := R3(R4)
	55	[5605]	SELF     	R3 R3 K11 ; R4 := R3; R3 := R3[0x1020015e]
	56	[5605]	CALL     	R3 2 2 ; R3 := R3(R4)
	57	[5605]	MOVE     	R2 R3 ; R2 := R3
	58	[5608]	GETGLOBAL	R3 K1 ; R3 := 0x7b998233
	59	[5608]	GETGLOBAL	R4 K12 ; R4 := _T
	60	[5608]	GETTABLE 	R4 R4 K13 ; R4 := R4["OpenScreen"]
	61	[5608]	CALL     	R3 2 2 ; R3 := R3(R4)
	62	[5608]	TEST     	R3 1 ; if R3 then PC := 90
	63	[5608]	JMP      	90 ; PC := 90
	64	[5608]	GETGLOBAL	R3 K1 ; R3 := 0x7b998233
	65	[5608]	MOVE     	R4 R2 ; R4 := R2
	66	[5608]	CALL     	R3 2 2 ; R3 := R3(R4)
	67	[5608]	TEST     	R3 1 ; if R3 then PC := 90
	68	[5608]	JMP      	90 ; PC := 90
	69	[5608]	EQ       	1 R2 K8 ; if R2 == "" then PC := 90
	70	[5608]	JMP      	90 ; PC := 90
	71	[5608]	GETTABLE 	R3 R0 K7 ; R3 := R0["mName"]
	72	[5608]	GETUPVAL 	R4 U4 ; R4 := U4
	73	[5608]	GETTABLE 	R4 R4 K14 ; R4 := R4["HIDDEN_PLAYER_NAME"]
	74	[5608]	EQ       	1 R3 R4 ; if R3 == R4 then PC := 90
	75	[5608]	JMP      	90 ; PC := 90
	76	[5609]	GETGLOBAL	R3 K12 ; R3 := _T
	77	[5609]	SETTABLE 	R3 K15 K16 ; R3["SelectedIsGuild"] := false
	78	[5610]	GETGLOBAL	R3 K12 ; R3 := _T
	79	[5610]	GETTABLE 	R4 R0 K7 ; R4 := R0["mName"]
	80	[5610]	SETTABLE 	R3 K17 R4 ; R3["SelectedProfileName"] := R4
	81	[5611]	GETGLOBAL	R3 K12 ; R3 := _T
	82	[5611]	SETTABLE 	R3 K18 R2 ; R3["SelectedProfileId"] := R2
	83	[5612]	GETGLOBAL	R3 K12 ; R3 := _T
	84	[5612]	GETTABLE 	R3 R3 K19 ; R3 := R3[0x32bb15a6]
	85	[5612]	LOADK    	R4 K20 ; R4 := "Profile"
	86	[5612]	GETGLOBAL	R5 K21 ; R5 := 0xae91e43b
	87	[5612]	OP_LOADBOOL	R6 0 0 ; R6 := false
	88	[5612]	GETUPVAL 	R7 U7 ; R7 := U7
	89	[5612]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	90	[5616]	RETURN   	R0 1 ; return 

function #168 <?:5618,5624> (19 instructions, 76 bytes at 000002112E68F100)
0 params, 9 slots, 0 upvalues, 0 locals, 4 constants, 1 function
	1	[5619]	GETGLOBAL	R0 K0 ; R0 := 0x25312c9b
	2	[5619]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	3	[5619]	LOADK    	R2 K2 ; R2 := "SyndicatePower"
	4	[5619]	LOADK    	R3 := 8.000000
	5	[5619]	NEWTABLE 	R4 3 0 ; R4 := {}
	6	[5619]	LOADK    	R5 := 5.000000
	7	[5619]	LOADK    	R6 := 6.000000
	8	[5619]	LOADK    	R7 := 10.000000
	9	[5619]	SETLIST  	R4 3 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 3
	10	[5619]	NEWTABLE 	R5 3 0 ; R5 := {}
	11	[5619]	LOADK    	R6 := 500.000000
	12	[5619]	LOADK    	R7 := 500.000000
	13	[5619]	LOADK    	R8 := 0.000000
	14	[5619]	SETLIST  	R5 3 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 3
	15	[5619]	LOADK    	R6 := 0.500000
	16	[5619]	LOADK    	R7 := 0.000000
	17	[5622]	CLOSURE  	R8 0 ; R8 := closure(Function #1)
	18	[5619]	CALL     	R0 9 1 ; R0(R1,R2,R3,R4,R5,R6,R7,R8)
	19	[5624]	RETURN   	R0 1 ; return 

function #169 <?:5626,5629> (13 instructions, 52 bytes at 000002112AC3DD60)
0 params, 7 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[5627]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5627]	GETTABLE 	R0 R0 K0 ; R0 := R0[0xb5be5d4a]
	3	[5627]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	4	[5627]	LOADK    	R2 K2 ; R2 := "WeaponFrame.SyndicatePower.Back"
	5	[5627]	CALL     	R0 3 3 ; R0,R1 := R0(R1,R2)
	6	[5628]	GETUPVAL 	R2 U0 ; R2 := U0
	7	[5628]	GETTABLE 	R2 R2 K3 ; R2 := R2[0x5a22d251]
	8	[5628]	GETGLOBAL	R3 K1 ; R3 := 0xae91e43b
	9	[5628]	GETGLOBAL	R4 K4 ; R4 := 0x0b8bd48f
	10	[5628]	ADD      	R5 R0 K5 ; R5 := R0 + 10.000000
	11	[5628]	MOVE     	R6 R1 ; R6 := R1
	12	[5628]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	13	[5629]	RETURN   	R0 1 ; return 

function #170 <?:5631,5642> (59 instructions, 236 bytes at 000002112AC3DE90)
0 params, 11 slots, 3 upvalues, 0 locals, 13 constants, 0 functions
	1	[5632]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[5632]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xaade900e]
	3	[5632]	LOADK    	R2 K2 ; R2 := "SyndicatePower"
	4	[5632]	LOADK    	R3 := 11.000000
	5	[5632]	OP_LOADBOOL	R4 1 0 ; R4 := true
	6	[5632]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	7	[5634]	GETUPVAL 	R0 U0 ; R0 := U0
	8	[5634]	GETTABLE 	R0 R0 K3 ; R0 := R0[0xb5be5d4a]
	9	[5634]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	10	[5634]	LOADK    	R2 K4 ; R2 := "WeaponFrame.SyndicatePower.Back"
	11	[5634]	CALL     	R0 3 3 ; R0,R1 := R0(R1,R2)
	12	[5635]	GETUPVAL 	R2 U0 ; R2 := U0
	13	[5635]	GETTABLE 	R2 R2 K5 ; R2 := R2[0x5a22d251]
	14	[5635]	GETGLOBAL	R3 K0 ; R3 := 0xae91e43b
	15	[5635]	GETGLOBAL	R4 K6 ; R4 := 0xe130ba9a
	16	[5635]	ADD      	R5 R0 K7 ; R5 := R0 + 10.000000
	17	[5635]	MOVE     	R6 R1 ; R6 := R1
	18	[5635]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	19	[5637]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	20	[5637]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0x67bc869f]
	21	[5637]	LOADK    	R4 K2 ; R4 := "SyndicatePower"
	22	[5637]	LOADK    	R5 := 10.000000
	23	[5637]	LOADK    	R6 := 0.000000
	24	[5637]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	25	[5638]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	26	[5638]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0x67bc869f]
	27	[5638]	LOADK    	R4 K2 ; R4 := "SyndicatePower"
	28	[5638]	LOADK    	R5 := 5.000000
	29	[5638]	LOADK    	R6 := 500.000000
	30	[5638]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	31	[5639]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	32	[5639]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0x67bc869f]
	33	[5639]	LOADK    	R4 K2 ; R4 := "SyndicatePower"
	34	[5639]	LOADK    	R5 := 6.000000
	35	[5639]	LOADK    	R6 := 500.000000
	36	[5639]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	37	[5640]	GETGLOBAL	R2 K9 ; R2 := 0x25312c9b
	38	[5640]	GETGLOBAL	R3 K0 ; R3 := 0xae91e43b
	39	[5640]	LOADK    	R4 K2 ; R4 := "SyndicatePower"
	40	[5640]	LOADK    	R5 := 8.000000
	41	[5640]	NEWTABLE 	R6 3 0 ; R6 := {}
	42	[5640]	LOADK    	R7 := 5.000000
	43	[5640]	LOADK    	R8 := 6.000000
	44	[5640]	LOADK    	R9 := 10.000000
	45	[5640]	SETLIST  	R6 3 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 3
	46	[5640]	NEWTABLE 	R7 3 0 ; R7 := {}
	47	[5640]	LOADK    	R8 := 200.000000
	48	[5640]	LOADK    	R9 := 200.000000
	49	[5640]	LOADK    	R10 := 30.000000
	50	[5640]	SETLIST  	R7 3 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 3
	51	[5640]	LOADK    	R8 K11 ; R8 := 0.350000
	52	[5640]	LOADK    	R9 := 0.750000
	53	[5640]	CALL     	R2 8 1 ; R2(R3,R4,R5,R6,R7,R8,R9)
	54	[5641]	GETUPVAL 	R2 U1 ; R2 := U1
	55	[5641]	SELF     	R2 R2 K12 ; R3 := R2; R2 := R2[0xbd2e96ea]
	56	[5641]	LOADK    	R4 := 3.000000
	57	[5641]	GETUPVAL 	R5 U2 ; R5 := U2
	58	[5641]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	59	[5642]	RETURN   	R0 1 ; return 

function #171 <?:5644,5653> (39 instructions, 156 bytes at 000002111318D9C0)
2 params, 11 slots, 0 upvalues, 0 locals, 5 constants, 1 function
	1	[5645]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	2	[5645]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0x67bc869f]
	3	[5645]	MOVE     	R4 R0 ; R4 := R0
	4	[5645]	LOADK    	R5 := 10.000000
	5	[5645]	LOADK    	R6 := 0.000000
	6	[5645]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	7	[5646]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	8	[5646]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0x67bc869f]
	9	[5646]	MOVE     	R4 R0 ; R4 := R0
	10	[5646]	LOADK    	R5 := 5.000000
	11	[5646]	LOADK    	R6 := 200.000000
	12	[5646]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	13	[5647]	GETGLOBAL	R2 K0 ; R2 := 0xae91e43b
	14	[5647]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0x67bc869f]
	15	[5647]	MOVE     	R4 R0 ; R4 := R0
	16	[5647]	LOADK    	R5 := 6.000000
	17	[5647]	LOADK    	R6 := 200.000000
	18	[5647]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	19	[5649]	GETGLOBAL	R2 K2 ; R2 := 0x25312c9b
	20	[5649]	GETGLOBAL	R3 K0 ; R3 := 0xae91e43b
	21	[5649]	MOVE     	R4 R0 ; R4 := R0
	22	[5649]	LOADK    	R5 := 2.000000
	23	[5649]	NEWTABLE 	R6 3 0 ; R6 := {}
	24	[5649]	LOADK    	R7 := 10.000000
	25	[5649]	LOADK    	R8 := 5.000000
	26	[5649]	LOADK    	R9 := 6.000000
	27	[5649]	SETLIST  	R6 3 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 3
	28	[5649]	NEWTABLE 	R7 3 0 ; R7 := {}
	29	[5649]	LOADK    	R8 := 100.000000
	30	[5649]	LOADK    	R9 := 100.000000
	31	[5649]	LOADK    	R10 := 100.000000
	32	[5649]	SETLIST  	R7 3 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 3
	33	[5649]	LOADK    	R8 K4 ; R8 := 0.150000
	34	[5649]	LOADK    	R9 := 0.000000
	35	[5652]	CLOSURE  	R10 0 ; R10 := closure(Function #1)
	36	[5652]	MOVE     	R0 R0 ; R0 := R0
	37	[5652]	MOVE     	R0 R1 ; R0 := R1
	38	[5649]	CALL     	R2 9 1 ; R2(R3,R4,R5,R6,R7,R8,R9,R10)
	39	[5653]	RETURN   	R0 1 ; return 

function #172 <?:5655,5672> (44 instructions, 176 bytes at 000002112E077A70)
0 params, 6 slots, 0 upvalues, 0 locals, 19 constants, 0 functions
	1	[5656]	LOADK    	R0 := 0.000000
	2	[5657]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	3	[5657]	GETGLOBAL	R2 K1 ; R2 := 0xbe190284
	4	[5657]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[5657]	TEST     	R1 1 ; if R1 then PC := 18
	6	[5657]	JMP      	18 ; PC := 18
	7	[5657]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	8	[5657]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xf2deaf69]
	9	[5657]	GETGLOBAL	R3 K3 ; R3 := gLotusGameRulesType
	10	[5657]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	11	[5657]	TEST     	R1 0 ; if not R1 then PC := 18
	12	[5657]	JMP      	18 ; PC := 18
	13	[5657]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	14	[5657]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xd37c53ce]
	15	[5657]	CALL     	R1 2 2 ; R1 := R1(R2)
	16	[5657]	EQ       	1 R1 K6 ; if R1 == 6.000000 then PC := 28
	17	[5657]	JMP      	28 ; PC := 28
	18	[5658]	GETGLOBAL	R1 K7 ; R1 := 0xcbd666e1
	19	[5658]	LOADK    	R2 := 0.000000
	20	[5658]	CALL     	R1 2 1 ; R1(R2)
	21	[5659]	GETGLOBAL	R1 K8 ; R1 := 0x67652851
	22	[5659]	CALL     	R1 1 2 ; R1 := R1()
	23	[5659]	ADD      	R0 R0 R1 ; R0 := R0 + R1
	24	[5660]	LT       	0 K9 R0 ; if 5.000000 >= R0 then PC := 2
	25	[5660]	JMP      	2 ; PC := 2
	26	[5661]	RETURN   	R0 1 ; return 
	27	[5662]	JMP      	2 ; PC := 2
	28	[5665]	GETGLOBAL	R1 K10 ; R1 := _T
	29	[5665]	GETTABLE 	R1 R1 K11 ; R1 := R1["SimarisScanChallengeHack"]
	30	[5665]	TEST     	R1 0 ; if not R1 then PC := 33
	31	[5665]	JMP      	33 ; PC := 33
	32	[5666]	RETURN   	R0 1 ; return 
	33	[5669]	GETGLOBAL	R1 K10 ; R1 := _T
	34	[5669]	SETTABLE 	R1 K11 K12 ; R1["SimarisScanChallengeHack"] := true
	35	[5671]	GETGLOBAL	R1 K13 ; R1 := 0xba7dfcd2
	36	[5671]	SELF     	R1 R1 K14 ; R2 := R1; R1 := R1[0xf056b179]
	37	[5671]	GETGLOBAL	R3 K15 ; R3 := 0x89326c93
	38	[5671]	SELF     	R3 R3 K16 ; R4 := R3; R3 := R3[0xfb64e76c]
	39	[5671]	CALL     	R3 2 2 ; R3 := R3(R4)
	40	[5671]	GETGLOBAL	R4 K17 ; R4 := 0x0469f296
	41	[5671]	LOADK    	R5 K18 ; R5 := "SIMARIS_TARGET_SCANNED"
	42	[5671]	CALL     	R4 2 0 ; R4,... := R4(R5)
	43	[5671]	CALL     	R1 0 1 ; R1(R2,...)
	44	[5672]	RETURN   	R0 1 ; return 

function #173 <?:5674,5714> (119 instructions, 476 bytes at 000002112DDAF9A0)
3 params, 19 slots, 2 upvalues, 0 locals, 29 constants, 0 functions
	1	[5675]	GETGLOBAL	R3 K0 ; R3 := 0x03f57322
	2	[5675]	MOVE     	R4 R0 ; R4 := R0
	3	[5675]	CALL     	R3 2 2 ; R3 := R3(R4)
	4	[5675]	MOVE     	R0 R3 ; R0 := R3
	5	[5677]	LOADK    	R3 K1 ; R3 := ""
	6	[5679]	TEST     	R2 1 ; if R2 then PC := 54
	7	[5679]	JMP      	54 ; PC := 54
	8	[5680]	GETGLOBAL	R4 K2 ; R4 := 0x76ea806b
	9	[5680]	SELF     	R4 R4 K3 ; R5 := R4; R4 := R4[0x3f3ae64c]
	10	[5680]	LOADK    	R6 := 0.000000
	11	[5680]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	12	[5681]	GETGLOBAL	R5 K4 ; R5 := 0x7b998233
	13	[5681]	MOVE     	R6 R4 ; R6 := R4
	14	[5681]	CALL     	R5 2 2 ; R5 := R5(R6)
	15	[5681]	TEST     	R5 1 ; if R5 then PC := 54
	16	[5681]	JMP      	54 ; PC := 54
	17	[5682]	SELF     	R5 R4 K5 ; R6 := R4; R5 := R4[0x80563238]
	18	[5682]	CALL     	R5 2 2 ; R5 := R5(R6)
	19	[5683]	GETGLOBAL	R6 K4 ; R6 := 0x7b998233
	20	[5683]	MOVE     	R7 R5 ; R7 := R5
	21	[5683]	CALL     	R6 2 2 ; R6 := R6(R7)
	22	[5683]	TEST     	R6 1 ; if R6 then PC := 54
	23	[5683]	JMP      	54 ; PC := 54
	24	[5684]	GETGLOBAL	R6 K6 ; R6 := 0x89326c93
	25	[5684]	SELF     	R6 R6 K7 ; R7 := R6; R6 := R6[0x78298275]
	26	[5684]	CALL     	R6 2 2 ; R6 := R6(R7)
	27	[5685]	GETGLOBAL	R7 K4 ; R7 := 0x7b998233
	28	[5685]	MOVE     	R8 R6 ; R8 := R6
	29	[5685]	CALL     	R7 2 2 ; R7 := R7(R8)
	30	[5685]	TEST     	R7 1 ; if R7 then PC := 54
	31	[5685]	JMP      	54 ; PC := 54
	32	[5686]	SELF     	R7 R5 K8 ; R8 := R5; R7 := R5[0xf5b0abc2]
	33	[5686]	LOADK    	R9 := 3.000000
	34	[5686]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	35	[5687]	SELF     	R8 R6 K10 ; R9 := R6; R8 := R6[0xde321e6f]
	36	[5687]	CALL     	R8 2 2 ; R8 := R8(R9)
	37	[5687]	SELF     	R8 R8 K11 ; R9 := R8; R8 := R8[0x74fb9ffe]
	38	[5687]	CALL     	R8 2 2 ; R8 := R8(R9)
	39	[5688]	ADD      	R9 R8 R0 ; R9 := R8 + R0
	40	[5688]	LE       	0 R7 R9 ; if R7 > R9 then PC := 54
	41	[5688]	JMP      	54 ; PC := 54
	42	[5689]	LT       	0 R8 R7 ; if R8 >= R7 then PC := 46
	43	[5689]	JMP      	46 ; PC := 46
	44	[5690]	SUB      	R0 R7 R8 ; R0 := R7 - R8
	45	[5690]	JMP      	47 ; PC := 47
	46	[5692]	LOADK    	R0 := 0.000000
	47	[5694]	LOADK    	R9 K12 ; R9 := " - "
	48	[5694]	GETGLOBAL	R10 K13 ; R10 := 0xae91e43b
	49	[5694]	SELF     	R10 R10 K14 ; R11 := R10; R10 := R10[0x42b04007]
	50	[5694]	LOADK    	R12 K15 ; R12 := "/Lotus/Language/Syndicates/DailyAffiliationReached"
	51	[5694]	OP_LOADBOOL	R13 0 0 ; R13 := false
	52	[5694]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	53	[5694]	CONCAT   	R3 R9 R10 ; R3 := R9 .. R10
	54	[5701]	GETGLOBAL	R9 K4 ; R9 := 0x7b998233
	55	[5701]	GETGLOBAL	R10 K16 ; R10 := 0xbe190284
	56	[5701]	CALL     	R9 2 2 ; R9 := R9(R10)
	57	[5701]	TEST     	R9 1 ; if R9 then PC := 85
	58	[5701]	JMP      	85 ; PC := 85
	59	[5701]	GETGLOBAL	R9 K16 ; R9 := 0xbe190284
	60	[5701]	SELF     	R9 R9 K17 ; R10 := R9; R9 := R9[0xf2deaf69]
	61	[5701]	GETGLOBAL	R11 K18 ; R11 := gLotusGameRulesType
	62	[5701]	CALL     	R9 3 2 ; R9 := R9(R10,R11)
	63	[5701]	TEST     	R9 0 ; if not R9 then PC := 85
	64	[5701]	JMP      	85 ; PC := 85
	65	[5701]	GETGLOBAL	R9 K19 ; R9 := _T
	66	[5701]	GETTABLE 	R9 R9 K20 ; R9 := R9["SimarisScanChallengeHack"]
	67	[5701]	TEST     	R9 1 ; if R9 then PC := 85
	68	[5701]	JMP      	85 ; PC := 85
	69	[5701]	GETGLOBAL	R9 K4 ; R9 := 0x7b998233
	70	[5701]	GETGLOBAL	R10 K6 ; R10 := 0x89326c93
	71	[5701]	SELF     	R10 R10 K7 ; R11 := R10; R10 := R10[0x78298275]
	72	[5701]	CALL     	R10 2 0 ; R10,... := R10(R11)
	73	[5701]	CALL     	R9 0 2 ; R9 := R9(R10,...)
	74	[5701]	TEST     	R9 1 ; if R9 then PC := 85
	75	[5701]	JMP      	85 ; PC := 85
	76	[5702]	GETGLOBAL	R9 K6 ; R9 := 0x89326c93
	77	[5702]	SELF     	R9 R9 K7 ; R10 := R9; R9 := R9[0x78298275]
	78	[5702]	CALL     	R9 2 2 ; R9 := R9(R10)
	79	[5702]	SELF     	R9 R9 K21 ; R10 := R9; R9 := R9[0xd5f7912b]
	80	[5702]	GETGLOBAL	R11 K22 ; R11 := 0x0469f296
	81	[5702]	LOADK    	R12 K20 ; R12 := "SimarisScanChallengeHack"
	82	[5702]	CALL     	R11 2 2 ; R11 := R11(R12)
	83	[5702]	OP_LOADBOOL	R12 0 0 ; R12 := false
	84	[5702]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	85	[5705]	GETGLOBAL	R9 K13 ; R9 := 0xae91e43b
	86	[5705]	SELF     	R9 R9 K14 ; R10 := R9; R9 := R9[0x42b04007]
	87	[5705]	LOADK    	R11 K23 ; R11 := "<REPUTATION>"
	88	[5705]	OP_LOADBOOL	R12 1 0 ; R12 := true
	89	[5705]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	90	[5706]	GETGLOBAL	R10 K13 ; R10 := 0xae91e43b
	91	[5706]	SELF     	R10 R10 K24 ; R11 := R10; R10 := R10[0x5f56eeab]
	92	[5706]	LOADK    	R12 K25 ; R12 := "StandingGain.Label"
	93	[5706]	LOADK    	R13 := 29.000000
	94	[5706]	LOADK    	R14 K26 ; R14 := "+"
	95	[5706]	MOVE     	R15 R9 ; R15 := R9
	96	[5706]	GETUPVAL 	R16 U0 ; R16 := U0
	97	[5706]	GETTABLE 	R16 R16 K27 ; R16 := R16[0x1142c7a8]
	98	[5706]	MOVE     	R17 R0 ; R17 := R0
	99	[5706]	LOADK    	R18 := 0.000000
	100	[5706]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	101	[5706]	MOVE     	R17 R3 ; R17 := R3
	102	[5706]	CONCAT   	R14 R14 R17 ; R14 := R14 .. R15 .. R16 .. R17
	103	[5706]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	104	[5708]	GETGLOBAL	R10 K4 ; R10 := 0x7b998233
	105	[5708]	MOVE     	R11 R1 ; R11 := R1
	106	[5708]	CALL     	R10 2 2 ; R10 := R10(R11)
	107	[5708]	TEST     	R10 0 ; if not R10 then PC := 111
	108	[5708]	JMP      	111 ; PC := 111
	109	[5709]	LOADK    	R1 := 1.000000
	110	[5709]	JMP      	115 ; PC := 115
	111	[5711]	GETGLOBAL	R10 K0 ; R10 := 0x03f57322
	112	[5711]	MOVE     	R11 R1 ; R11 := R1
	113	[5711]	CALL     	R10 2 2 ; R10 := R10(R11)
	114	[5711]	MOVE     	R1 R10 ; R1 := R10
	115	[5713]	GETUPVAL 	R10 U1 ; R10 := U1
	116	[5713]	LOADK    	R11 K28 ; R11 := "StandingGain"
	117	[5713]	MOVE     	R12 R1 ; R12 := R1
	118	[5713]	CALL     	R10 3 1 ; R10(R11,R12)
	119	[5714]	RETURN   	R0 1 ; return 

function #174 <?:5716,5732> (61 instructions, 244 bytes at 000002112B1A8960)
0 params, 11 slots, 5 upvalues, 0 locals, 13 constants, 0 functions
	1	[5718]	LOADK    	R0 := 1.000000
	2	[5718]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[5718]	LEN      	R1 R1 ; R1 := # R1
	4	[5718]	LOADK    	R2 := 1.000000
	5	[5718]	FORPREP  	R0 24 ; R0 -= R2; PC := 24
	6	[5719]	GETUPVAL 	R4 U0 ; R4 := U0
	7	[5719]	GETTABLE 	R4 R4 R3 ; R4 := R4[R3]
	8	[5719]	GETTABLE 	R4 R4 K0 ; R4 := R4["Tag"]
	9	[5719]	EQ       	1 R4 K1 ; if R4 == nil then PC := 24
	10	[5719]	JMP      	24 ; PC := 24
	11	[5720]	GETUPVAL 	R4 U0 ; R4 := U0
	12	[5720]	GETTABLE 	R4 R4 R3 ; R4 := R4[R3]
	13	[5720]	GETGLOBAL	R5 K3 ; R5 := 0xae91e43b
	14	[5720]	SELF     	R5 R5 K4 ; R6 := R5; R5 := R5[0x42b04007]
	15	[5720]	LOADK    	R7 K5 ; R7 := "<"
	16	[5720]	GETUPVAL 	R8 U0 ; R8 := U0
	17	[5720]	GETTABLE 	R8 R8 R3 ; R8 := R8[R3]
	18	[5720]	GETTABLE 	R8 R8 K0 ; R8 := R8["Tag"]
	19	[5720]	LOADK    	R9 K6 ; R9 := ">"
	20	[5720]	CONCAT   	R7 R7 R9 ; R7 := R7 .. R8 .. R9
	21	[5720]	OP_LOADBOOL	R8 1 0 ; R8 := true
	22	[5720]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	23	[5720]	SETTABLE 	R4 K2 R5 ; R4["Icon"] := R5
	24	[5718]	FORLOOP  	R0 6 ; R0 += R2; if R0 <= R1 then begin PC := 6; R3 := R0 end
	25	[5724]	GETGLOBAL	R4 K3 ; R4 := 0xae91e43b
	26	[5724]	TEST     	R4 0 ; if not R4 then PC := 61
	27	[5724]	JMP      	61 ; PC := 61
	28	[5724]	GETUPVAL 	R4 U1 ; R4 := U1
	29	[5724]	GETTABLE 	R4 R4 K7 ; R4 := R4["mSpaceMode"]
	30	[5724]	TEST     	R4 0 ; if not R4 then PC := 61
	31	[5724]	JMP      	61 ; PC := 61
	32	[5725]	GETUPVAL 	R4 U2 ; R4 := U2
	33	[5725]	TEST     	R4 0 ; if not R4 then PC := 44
	34	[5725]	JMP      	44 ; PC := 44
	35	[5726]	GETGLOBAL	R4 K3 ; R4 := 0xae91e43b
	36	[5726]	SELF     	R4 R4 K8 ; R5 := R4; R4 := R4[0x5f56eeab]
	37	[5726]	LOADK    	R6 K9 ; R6 := "HealthAndShield.SuitName"
	38	[5726]	LOADK    	R7 := 29.000000
	39	[5726]	GETUPVAL 	R8 U3 ; R8 := U3
	40	[5726]	SELF     	R8 R8 K10 ; R9 := R8; R8 := R8[0x067cd84c]
	41	[5726]	GETUPVAL 	R10 U2 ; R10 := U2
	42	[5726]	CALL     	R8 3 0 ; R8,... := R8(R9,R10)
	43	[5726]	CALL     	R4 0 1 ; R4(R5,...)
	44	[5728]	GETUPVAL 	R4 U4 ; R4 := U4
	45	[5728]	TEST     	R4 0 ; if not R4 then PC := 61
	46	[5728]	JMP      	61 ; PC := 61
	47	[5728]	GETUPVAL 	R4 U4 ; R4 := U4
	48	[5728]	GETTABLE 	R4 R4 K11 ; R4 := R4["ptr"]
	49	[5728]	TEST     	R4 0 ; if not R4 then PC := 61
	50	[5728]	JMP      	61 ; PC := 61
	51	[5729]	GETGLOBAL	R4 K3 ; R4 := 0xae91e43b
	52	[5729]	SELF     	R4 R4 K8 ; R5 := R4; R4 := R4[0x5f56eeab]
	53	[5729]	LOADK    	R6 K12 ; R6 := "WeaponFrame.Name"
	54	[5729]	LOADK    	R7 := 29.000000
	55	[5729]	GETUPVAL 	R8 U3 ; R8 := U3
	56	[5729]	SELF     	R8 R8 K10 ; R9 := R8; R8 := R8[0x067cd84c]
	57	[5729]	GETUPVAL 	R10 U4 ; R10 := U4
	58	[5729]	GETTABLE 	R10 R10 K11 ; R10 := R10["ptr"]
	59	[5729]	CALL     	R8 3 0 ; R8,... := R8(R9,R10)
	60	[5729]	CALL     	R4 0 1 ; R4(R5,...)
	61	[5732]	RETURN   	R0 1 ; return 

function #175 <?:5734,5738> (27 instructions, 108 bytes at 000002112B1A8B00)
1 param, 8 slots, 3 upvalues, 0 locals, 7 constants, 0 functions
	1	[5735]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[5735]	GETUPVAL 	R2 U1 ; R2 := U1
	3	[5735]	LOADK    	R3 K1 ; R3 := "TreasureHuntTimer"
	4	[5735]	GETUPVAL 	R4 U2 ; R4 := U2
	5	[5735]	GETTABLE 	R4 R4 K2 ; R4 := R4["HT_TIMER"]
	6	[5735]	LOADK    	R5 := 0.250000
	7	[5735]	OP_LOADBOOL	R6 0 0 ; R6 := false
	8	[5735]	OP_LOADBOOL	R7 0 0 ; R7 := false
	9	[5735]	CALL     	R2 6 2 ; R2 := R2(R3,R4,R5,R6,R7)
	10	[5735]	SETTABLE 	R1 K0 R2 ; R1["TreasureHuntTracker"] := R2
	11	[5736]	GETUPVAL 	R1 U0 ; R1 := U0
	12	[5736]	GETTABLE 	R1 R1 K0 ; R1 := R1["TreasureHuntTracker"]
	13	[5736]	GETTABLE 	R1 R1 K3 ; R1 := R1[0xe0cba3ca]
	14	[5736]	LOADK    	R2 K4 ; R2 := "/Lotus/Language/Game/TreasureHuntTimeLimit"
	15	[5736]	LOADK    	R3 := 5.000000
	16	[5736]	CALL     	R1 3 1 ; R1(R2,R3)
	17	[5737]	GETUPVAL 	R1 U0 ; R1 := U0
	18	[5737]	GETTABLE 	R1 R1 K0 ; R1 := R1["TreasureHuntTracker"]
	19	[5737]	GETTABLE 	R1 R1 K5 ; R1 := R1[0xa9136b2f]
	20	[5737]	GETGLOBAL	R2 K6 ; R2 := 0x03f57322
	21	[5737]	MOVE     	R3 R0 ; R3 := R0
	22	[5737]	CALL     	R2 2 2 ; R2 := R2(R3)
	23	[5737]	OP_LOADBOOL	R3 0 0 ; R3 := false
	24	[5737]	OP_LOADBOOL	R4 1 0 ; R4 := true
	25	[5737]	OP_LOADBOOL	R5 0 0 ; R5 := false
	26	[5737]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	27	[5738]	RETURN   	R0 1 ; return 

function #176 <?:5740,5743> (6 instructions, 24 bytes at 0000021128405B70)
0 params, 2 slots, 2 upvalues, 0 locals, 3 constants, 0 functions
	1	[5741]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5741]	LOADK    	R1 K0 ; R1 := "TreasureHuntTimer"
	3	[5741]	CALL     	R0 2 1 ; R0(R1)
	4	[5742]	GETUPVAL 	R0 U1 ; R0 := U1
	5	[5742]	SETTABLE 	R0 K1 K2 ; R0["TreasureHuntTracker"] := nil
	6	[5743]	RETURN   	R0 1 ; return 

function #177 <?:5745,5778> (128 instructions, 512 bytes at 0000021128405C00)
0 params, 22 slots, 3 upvalues, 0 locals, 31 constants, 0 functions
	1	[5747]	GETGLOBAL	R0 K0 ; R0 := 0x89326c93
	2	[5747]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x78298275]
	3	[5747]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[5748]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	5	[5748]	MOVE     	R2 R0 ; R2 := R0
	6	[5748]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[5748]	TEST     	R1 1 ; if R1 then PC := 14
	8	[5748]	JMP      	14 ; PC := 14
	9	[5748]	SELF     	R1 R0 K3 ; R2 := R0; R1 := R0[0xf2deaf69]
	10	[5748]	GETGLOBAL	R3 K4 ; R3 := gLotusVehicleAvatarType
	11	[5748]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	12	[5748]	TEST     	R1 0 ; if not R1 then PC := 15
	13	[5748]	JMP      	15 ; PC := 15
	14	[5749]	RETURN   	R0 1 ; return 
	15	[5751]	SELF     	R1 R0 K5 ; R2 := R0; R1 := R0[0xde321e6f]
	16	[5751]	CALL     	R1 2 2 ; R1 := R1(R2)
	17	[5753]	SELF     	R2 R1 K6 ; R3 := R1; R2 := R1[0xb6731115]
	18	[5753]	LOADK    	R4 := 0.000000
	19	[5753]	LOADK    	R5 := 0.000000
	20	[5753]	OP_LOADBOOL	R6 0 0 ; R6 := false
	21	[5753]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	22	[5754]	SELF     	R3 R1 K6 ; R4 := R1; R3 := R1[0xb6731115]
	23	[5754]	LOADK    	R5 := 0.000000
	24	[5754]	LOADK    	R6 := 1.000000
	25	[5754]	OP_LOADBOOL	R7 0 0 ; R7 := false
	26	[5754]	CALL     	R3 5 2 ; R3 := R3(R4,R5,R6,R7)
	27	[5755]	SELF     	R4 R1 K6 ; R5 := R1; R4 := R1[0xb6731115]
	28	[5755]	LOADK    	R6 := 0.000000
	29	[5755]	LOADK    	R7 := 2.000000
	30	[5755]	OP_LOADBOOL	R8 0 0 ; R8 := false
	31	[5755]	CALL     	R4 5 2 ; R4 := R4(R5,R6,R7,R8)
	32	[5756]	SELF     	R5 R1 K6 ; R6 := R1; R5 := R1[0xb6731115]
	33	[5756]	LOADK    	R7 := 0.000000
	34	[5756]	LOADK    	R8 := 3.000000
	35	[5756]	OP_LOADBOOL	R9 0 0 ; R9 := false
	36	[5756]	CALL     	R5 5 2 ; R5 := R5(R6,R7,R8,R9)
	37	[5757]	SELF     	R6 R1 K8 ; R7 := R1; R6 := R1[0xad6e6461]
	38	[5757]	OP_LOADBOOL	R8 0 0 ; R8 := false
	39	[5757]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	40	[5758]	SELF     	R7 R1 K9 ; R8 := R1; R7 := R1[0x80a96711]
	41	[5758]	OP_LOADBOOL	R9 0 0 ; R9 := false
	42	[5758]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	43	[5760]	SELF     	R8 R1 K6 ; R9 := R1; R8 := R1[0xb6731115]
	44	[5760]	LOADK    	R10 := 2.000000
	45	[5760]	LOADK    	R11 := 0.000000
	46	[5760]	OP_LOADBOOL	R12 0 0 ; R12 := false
	47	[5760]	CALL     	R8 5 2 ; R8 := R8(R9,R10,R11,R12)
	48	[5761]	SELF     	R9 R1 K6 ; R10 := R1; R9 := R1[0xb6731115]
	49	[5761]	LOADK    	R11 := 2.000000
	50	[5761]	LOADK    	R12 := 2.000000
	51	[5761]	OP_LOADBOOL	R13 0 0 ; R13 := false
	52	[5761]	CALL     	R9 5 2 ; R9 := R9(R10,R11,R12,R13)
	53	[5762]	SELF     	R10 R1 K6 ; R11 := R1; R10 := R1[0xb6731115]
	54	[5762]	LOADK    	R12 := 2.000000
	55	[5762]	LOADK    	R13 := 3.000000
	56	[5762]	OP_LOADBOOL	R14 0 0 ; R14 := false
	57	[5762]	CALL     	R10 5 2 ; R10 := R10(R11,R12,R13,R14)
	58	[5764]	ADD      	R11 R2 R3 ; R11 := R2 + R3
	59	[5764]	ADD      	R11 R11 R4 ; R11 := R11 + R4
	60	[5764]	ADD      	R11 R11 R5 ; R11 := R11 + R5
	61	[5764]	ADD      	R11 R11 R6 ; R11 := R11 + R6
	62	[5764]	ADD      	R11 R11 R7 ; R11 := R11 + R7
	63	[5764]	ADD      	R11 R11 R8 ; R11 := R11 + R8
	64	[5764]	ADD      	R11 R11 R9 ; R11 := R11 + R9
	65	[5764]	ADD      	R11 R11 R10 ; R11 := R11 + R10
	66	[5765]	SELF     	R12 R0 K5 ; R13 := R0; R12 := R0[0xde321e6f]
	67	[5765]	CALL     	R12 2 2 ; R12 := R12(R13)
	68	[5765]	SELF     	R12 R12 K10 ; R13 := R12; R12 := R12[0xc2e869a4]
	69	[5765]	CALL     	R12 2 2 ; R12 := R12(R13)
	70	[5766]	GETGLOBAL	R13 K11 ; R13 := 0xae91e43b
	71	[5766]	SELF     	R13 R13 K12 ; R14 := R13; R13 := R13[0x42b04007]
	72	[5766]	LOADK    	R15 K13 ; R15 := "/Lotus/Language/SystemMessages/AffinityCostInfo"
	73	[5766]	OP_LOADBOOL	R16 0 0 ; R16 := false
	74	[5766]	NEWTABLE 	R17 0 4 ; R17 := {}
	75	[5767]	LOADK    	R18 K15 ; R18 := "<font color=\""
	76	[5767]	GETUPVAL 	R19 U0 ; R19 := U0
	77	[5767]	GETTABLE 	R19 R19 K16 ; R19 := R19["FloatingContentHighlightHex"]
	78	[5767]	LOADK    	R20 K17 ; R20 := "\">"
	79	[5767]	CONCAT   	R18 R18 R20 ; R18 := R18 .. R19 .. R20
	80	[5767]	SETTABLE 	R17 K14 R18 ; R17["OPEN_COLOR"] := R18
	81	[5768]	SETTABLE 	R17 K18 K19 ; R17["CLOSE_COLOR"] := "</font>"
	82	[5769]	GETUPVAL 	R18 U1 ; R18 := U1
	83	[5769]	GETTABLE 	R18 R18 K21 ; R18 := R18[0x1142c7a8]
	84	[5769]	MOVE     	R19 R12 ; R19 := R12
	85	[5769]	LOADK    	R20 := 0.000000
	86	[5769]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	87	[5769]	SETTABLE 	R17 K20 R18 ; R17["COST"] := R18
	88	[5770]	GETUPVAL 	R18 U1 ; R18 := U1
	89	[5770]	GETTABLE 	R18 R18 K21 ; R18 := R18[0x1142c7a8]
	90	[5770]	MOVE     	R19 R11 ; R19 := R11
	91	[5770]	LOADK    	R20 := 0.000000
	92	[5770]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	93	[5770]	SETTABLE 	R17 K22 R18 ; R17["TOTAL"] := R18
	94	[5766]	CALL     	R13 5 2 ; R13 := R13(R14,R15,R16,R17)
	95	[5771]	LOADK    	R14 K23 ; R14 := "<p><font color=\""
	96	[5771]	GETUPVAL 	R15 U0 ; R15 := U0
	97	[5771]	GETTABLE 	R15 R15 K24 ; R15 := R15["FloatingContentHex"]
	98	[5771]	LOADK    	R16 K17 ; R16 := "\">"
	99	[5771]	MOVE     	R17 R13 ; R17 := R13
	100	[5771]	LOADK    	R18 K19 ; R18 := "</font>"
	101	[5771]	CONCAT   	R14 R14 R18 ; R14 := R14 .. R15 .. R16 .. R17 .. R18
	102	[5772]	GETUPVAL 	R15 U2 ; R15 := U2
	103	[5772]	LEN      	R15 R15 ; R15 := # R15
	104	[5772]	LT       	0 K25 R15 ; if 1.000000 >= R15 then PC := 119
	105	[5772]	JMP      	119 ; PC := 119
	106	[5773]	GETGLOBAL	R15 K11 ; R15 := 0xae91e43b
	107	[5773]	SELF     	R15 R15 K12 ; R16 := R15; R15 := R15[0x42b04007]
	108	[5773]	LOADK    	R17 K26 ; R17 := "/Lotus/Language/SystemMessages/NoReviveHint"
	109	[5773]	OP_LOADBOOL	R18 0 0 ; R18 := false
	110	[5773]	CALL     	R15 4 2 ; R15 := R15(R16,R17,R18)
	111	[5774]	MOVE     	R16 R14 ; R16 := R14
	112	[5774]	LOADK    	R17 K15 ; R17 := "<font color=\""
	113	[5774]	GETUPVAL 	R18 U0 ; R18 := U0
	114	[5774]	GETTABLE 	R18 R18 K16 ; R18 := R18["FloatingContentHighlightHex"]
	115	[5774]	LOADK    	R19 K27 ; R19 := "\"><br>"
	116	[5774]	MOVE     	R20 R15 ; R20 := R15
	117	[5774]	LOADK    	R21 K19 ; R21 := "</font>"
	118	[5774]	CONCAT   	R14 R16 R21 ; R14 := R16 .. R17 .. R18 .. R19 .. R20 .. R21
	119	[5776]	MOVE     	R16 R14 ; R16 := R14
	120	[5776]	LOADK    	R17 K28 ; R17 := "</p>"
	121	[5776]	CONCAT   	R14 R16 R17 ; R14 := R16 .. R17
	122	[5777]	GETGLOBAL	R16 K11 ; R16 := 0xae91e43b
	123	[5777]	SELF     	R16 R16 K29 ; R17 := R16; R16 := R16[0x5f56eeab]
	124	[5777]	LOADK    	R18 K30 ; R18 := "RevivePanel.Status"
	125	[5777]	LOADK    	R19 := 29.000000
	126	[5777]	MOVE     	R20 R14 ; R20 := R14
	127	[5777]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	128	[5778]	RETURN   	R0 1 ; return 

function #178 <?:5780,5787> (21 instructions, 84 bytes at 0000021123C7ABB0)
0 params, 6 slots, 2 upvalues, 0 locals, 6 constants, 0 functions
	1	[5781]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[5781]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[5781]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[5781]	TEST     	R0 1 ; if R0 then PC := 21
	5	[5781]	JMP      	21 ; PC := 21
	6	[5782]	GETUPVAL 	R0 U0 ; R0 := U0
	7	[5782]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x603d617e]
	8	[5782]	CALL     	R0 2 2 ; R0 := R0(R1)
	9	[5783]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	10	[5783]	MOVE     	R2 R0 ; R2 := R0
	11	[5783]	CALL     	R1 2 2 ; R1 := R1(R2)
	12	[5783]	TEST     	R1 1 ; if R1 then PC := 21
	13	[5783]	JMP      	21 ; PC := 21
	14	[5784]	SELF     	R1 R0 K2 ; R2 := R0; R1 := R0[0xe4162eed]
	15	[5784]	LOADK    	R3 K3 ; R3 := "HandleHudScale"
	16	[5784]	GETGLOBAL	R4 K4 ; R4 := 0x64fb1586
	17	[5784]	GETUPVAL 	R5 U1 ; R5 := U1
	18	[5784]	GETTABLE 	R5 R5 K5 ; R5 := R5["HudScale"]
	19	[5784]	CALL     	R4 2 0 ; R4,... := R4(R5)
	20	[5784]	CALL     	R1 0 1 ; R1(R2,...)
	21	[5787]	RETURN   	R0 1 ; return 

function #179 <?:5789,5803> (64 instructions, 256 bytes at 0000021123C7AD20)
2 params, 8 slots, 0 upvalues, 0 locals, 17 constants, 0 functions
	1	[5790]	EQ       	0 R1 K0 ; if R1 ~= "GoToLoop" then PC := 11
	2	[5790]	JMP      	11 ; PC := 11
	3	[5791]	GETGLOBAL	R2 K1 ; R2 := 0x38f10e85
	4	[5791]	GETGLOBAL	R3 K2 ; R3 := 0xae91e43b
	5	[5791]	MOVE     	R4 R0 ; R4 := R0
	6	[5791]	LOADK    	R5 K3 ; R5 := ".gotoAndPlay"
	7	[5791]	CONCAT   	R4 R4 R5 ; R4 := R4 .. R5
	8	[5791]	LOADK    	R5 K4 ; R5 := "Loop"
	9	[5791]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	10	[5791]	JMP      	64 ; PC := 64
	11	[5792]	EQ       	0 R1 K5 ; if R1 ~= "GoToHip" then PC := 21
	12	[5792]	JMP      	21 ; PC := 21
	13	[5793]	GETGLOBAL	R2 K1 ; R2 := 0x38f10e85
	14	[5793]	GETGLOBAL	R3 K2 ; R3 := 0xae91e43b
	15	[5793]	MOVE     	R4 R0 ; R4 := R0
	16	[5793]	LOADK    	R5 K6 ; R5 := ".gotoAndStop"
	17	[5793]	CONCAT   	R4 R4 R5 ; R4 := R4 .. R5
	18	[5793]	LOADK    	R5 K7 ; R5 := "Hip"
	19	[5793]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	20	[5793]	JMP      	64 ; PC := 64
	21	[5794]	EQ       	0 R1 K8 ; if R1 ~= "ClearMsg" then PC := 31
	22	[5794]	JMP      	31 ; PC := 31
	23	[5795]	GETGLOBAL	R2 K2 ; R2 := 0xae91e43b
	24	[5795]	SELF     	R2 R2 K9 ; R3 := R2; R2 := R2[0xe261aa96]
	25	[5795]	MOVE     	R4 R0 ; R4 := R0
	26	[5795]	LOADK    	R5 K10 ; R5 := "MsgContainer.Msg"
	27	[5795]	LOADK    	R6 := 29.000000
	28	[5795]	LOADK    	R7 K11 ; R7 := ""
	29	[5795]	CALL     	R2 6 1 ; R2(R3,R4,R5,R6,R7)
	30	[5795]	JMP      	64 ; PC := 64
	31	[5796]	EQ       	0 R1 K12 ; if R1 ~= "TalkLoop" then PC := 41
	32	[5796]	JMP      	41 ; PC := 41
	33	[5797]	GETGLOBAL	R2 K1 ; R2 := 0x38f10e85
	34	[5797]	GETGLOBAL	R3 K2 ; R3 := 0xae91e43b
	35	[5797]	MOVE     	R4 R0 ; R4 := R0
	36	[5797]	LOADK    	R5 K3 ; R5 := ".gotoAndPlay"
	37	[5797]	CONCAT   	R4 R4 R5 ; R4 := R4 .. R5
	38	[5797]	LOADK    	R5 := 10.000000
	39	[5797]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	40	[5797]	JMP      	64 ; PC := 64
	41	[5798]	EQ       	0 R1 K13 ; if R1 ~= "EndAimToHip" then PC := 64
	42	[5798]	JMP      	64 ; PC := 64
	43	[5799]	GETGLOBAL	R2 K1 ; R2 := 0x38f10e85
	44	[5799]	GETGLOBAL	R3 K2 ; R3 := 0xae91e43b
	45	[5799]	MOVE     	R4 R0 ; R4 := R0
	46	[5799]	LOADK    	R5 K6 ; R5 := ".gotoAndStop"
	47	[5799]	CONCAT   	R4 R4 R5 ; R4 := R4 .. R5
	48	[5799]	LOADK    	R5 K7 ; R5 := "Hip"
	49	[5799]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	50	[5800]	GETGLOBAL	R2 K2 ; R2 := 0xae91e43b
	51	[5800]	SELF     	R2 R2 K14 ; R3 := R2; R2 := R2[0xc0a3774b]
	52	[5800]	MOVE     	R4 R0 ; R4 := R0
	53	[5800]	LOADK    	R5 K15 ; R5 := "HipMelee"
	54	[5800]	LOADK    	R6 := 11.000000
	55	[5800]	OP_LOADBOOL	R7 0 0 ; R7 := false
	56	[5800]	CALL     	R2 6 1 ; R2(R3,R4,R5,R6,R7)
	57	[5801]	GETGLOBAL	R2 K2 ; R2 := 0xae91e43b
	58	[5801]	SELF     	R2 R2 K14 ; R3 := R2; R2 := R2[0xc0a3774b]
	59	[5801]	MOVE     	R4 R0 ; R4 := R0
	60	[5801]	LOADK    	R5 K16 ; R5 := "MeleeOnly"
	61	[5801]	LOADK    	R6 := 11.000000
	62	[5801]	OP_LOADBOOL	R7 0 0 ; R7 := false
	63	[5801]	CALL     	R2 6 1 ; R2(R3,R4,R5,R6,R7)
	64	[5803]	RETURN   	R0 1 ; return 

function #180 <?:5805,5813> (43 instructions, 172 bytes at 000002112E076190)
2 params, 12 slots, 3 upvalues, 0 locals, 13 constants, 0 functions
	1	[5806]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[5806]	GETGLOBAL	R3 K1 ; R3 := 0xb7882bac
	3	[5806]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[5806]	TEST     	R2 1 ; if R2 then PC := 43
	5	[5806]	JMP      	43 ; PC := 43
	6	[5807]	ADD      	R2 R0 R1 ; R2 := R0 + R1
	7	[5807]	DIV      	R2 R2 K2 ; R2 := R2 / 2.000000
	8	[5808]	GETUPVAL 	R3 U0 ; R3 := U0
	9	[5808]	GETTABLE 	R3 R3 K3 ; R3 := R3[0xb5be5d4a]
	10	[5808]	GETGLOBAL	R4 K4 ; R4 := 0xae91e43b
	11	[5808]	LOADK    	R5 K5 ; R5 := "reloadTimer"
	12	[5808]	OP_LOADBOOL	R6 1 0 ; R6 := true
	13	[5808]	CALL     	R3 4 3 ; R3,R4 := R3(R4,R5,R6)
	14	[5809]	GETGLOBAL	R5 K6 ; R5 := 0x5bced4c4
	15	[5809]	GETTABLE 	R5 R5 K7 ; R5 := R5[0x3eda26fc]
	16	[5809]	MUL      	R6 R2 K2 ; R6 := R2 * 2.000000
	17	[5809]	MUL      	R6 R6 K8 ; R6 := R6 * 3.141593
	18	[5809]	CALL     	R5 2 2 ; R5 := R5(R6)
	19	[5809]	GETGLOBAL	R6 K9 ; R6 := 0x1c8bfe5a
	20	[5809]	MUL      	R5 R5 R6 ; R5 := R5 * R6
	21	[5809]	GETUPVAL 	R6 U1 ; R6 := U1
	22	[5809]	GETTABLE 	R6 R6 K10 ; R6 := R6["HudScale"]
	23	[5809]	MUL      	R5 R5 R6 ; R5 := R5 * R6
	24	[5809]	ADD      	R5 R3 R5 ; R5 := R3 + R5
	25	[5810]	GETGLOBAL	R6 K6 ; R6 := 0x5bced4c4
	26	[5810]	GETTABLE 	R6 R6 K11 ; R6 := R6[0x00fa6bf1]
	27	[5810]	MUL      	R7 R2 K2 ; R7 := R2 * 2.000000
	28	[5810]	MUL      	R7 R7 K8 ; R7 := R7 * 3.141593
	29	[5810]	CALL     	R6 2 2 ; R6 := R6(R7)
	30	[5810]	GETGLOBAL	R7 K9 ; R7 := 0x1c8bfe5a
	31	[5810]	MUL      	R6 R6 R7 ; R6 := R6 * R7
	32	[5810]	GETUPVAL 	R7 U1 ; R7 := U1
	33	[5810]	GETTABLE 	R7 R7 K10 ; R7 := R7["HudScale"]
	34	[5810]	MUL      	R6 R6 R7 ; R6 := R6 * R7
	35	[5810]	SUB      	R6 R4 R6 ; R6 := R4 - R6
	36	[5811]	GETUPVAL 	R7 U2 ; R7 := U2
	37	[5811]	GETTABLE 	R7 R7 K12 ; R7 := R7[0x5a22d251]
	38	[5811]	GETGLOBAL	R8 K4 ; R8 := 0xae91e43b
	39	[5811]	GETGLOBAL	R9 K1 ; R9 := 0xb7882bac
	40	[5811]	MOVE     	R10 R5 ; R10 := R5
	41	[5811]	MOVE     	R11 R6 ; R11 := R6
	42	[5811]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	43	[5813]	RETURN   	R0 1 ; return 

function #181 <?:5815,5820> (12 instructions, 48 bytes at 0000021192027420)
1 param, 5 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[5816]	EQ       	1 R0 K0 ; if R0 == "true" then PC := 4
	2	[5816]	JMP      	4 ; PC := 4
	3	[5816]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 4
	4	[5816]	OP_LOADBOOL	R0 1 0 ; R0 := true
	5	[5818]	GETUPVAL 	R1 U0 ; R1 := U0
	6	[5818]	CALL     	R1 1 1 ; R1()
	7	[5819]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	8	[5819]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0x20b98db3]
	9	[5819]	LOADK    	R3 K3 ; R3 := "RevivePanel.Callout.text"
	10	[5819]	LOADK    	R4 K4 ; R4 := "/Lotus/Language/SystemMessages/RevivePrompt"
	11	[5819]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	12	[5820]	RETURN   	R0 1 ; return 

function #182 <?:5822,5827> (6 instructions, 24 bytes at 00000211920274B0)
2 params, 4 slots, 1 upvalue, 0 locals, 0 constants, 1 function
	1	[5823]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[5826]	CLOSURE  	R3 0 ; R3 := closure(Function #1)
	3	[5826]	MOVE     	R0 R0 ; R0 := R0
	4	[5826]	MOVE     	R0 R1 ; R0 := R1
	5	[5823]	CALL     	R2 2 1 ; R2(R3)
	6	[5827]	RETURN   	R0 1 ; return 
