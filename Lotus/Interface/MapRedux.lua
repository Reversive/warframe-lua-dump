
main <?:0,0> (1567 instructions, 6268 bytes at 0000021121360120)
0+ params, 178 slots, 0 upvalues, 0 locals, 381 constants, 195 functions
	1	[120]	SETGLOBALHASH	R0 K0 ; mAnchorMgr := R0
	2	[122]	LOADNIL  	R0 R0 ; R0 := nil
	3	[122]	SETGLOBALHASH	R0 K1 ; mRadialSolarMap := R0
	4	[123]	LOADNIL  	R0 R0 ; R0 := nil
	5	[123]	SETGLOBALHASH	R0 K2 ; mRegions := R0
	6	[124]	NEWTABLE 	R0 0 0 ; R0 := {}
	7	[124]	SETGLOBALHASH	R0 K3 ; mRegionInstances := R0
	8	[125]	NEWTABLE 	R0 0 0 ; R0 := {}
	9	[125]	SETGLOBALHASH	R0 K4 ; mRegionLabels := R0
	10	[126]	LOADNIL  	R0 R0 ; R0 := nil
	11	[126]	SETGLOBALHASH	R0 K5 ; mMapNodes := R0
	12	[127]	LOADNIL  	R0 R0 ; R0 := nil
	13	[127]	SETGLOBALHASH	R0 K6 ; mMapEdges := R0
	14	[128]	LOADNIL  	R0 R0 ; R0 := nil
	15	[128]	SETGLOBALHASH	R0 K7 ; mSuperRegions := R0
	16	[129]	NEWTABLE 	R0 0 0 ; R0 := {}
	17	[129]	SETGLOBALHASH	R0 K8 ; mSuperPoly := R0
	18	[130]	GETGLOBAL	R0 K10 ; R0 := 0xb009bbc6
	19	[130]	LOADK    	R1 K11 ; R1 := "/Lotus/Types/Lore/PrimaryCodexManifest"
	20	[130]	CALL     	R0 2 2 ; R0 := R0(R1)
	21	[130]	SETGLOBALHASH	R0 K9 ; mCodexManifest := R0
	22	[131]	NEWTABLE 	R0 0 7 ; R0 := {}
	23	[132]	GETGLOBAL	R1 K13 ; R1 := 0x7ed0a956
	24	[132]	LOADK    	R2 K14 ; R2 := "/Lotus/Types/Keys/VeyHekKey"
	25	[132]	CALL     	R1 2 2 ; R1 := R1(R2)
	26	[132]	SETTABLE 	R0 K12 R1 ; R0[0x60130201] := R1
	27	[133]	GETGLOBAL	R1 K13 ; R1 := 0x7ed0a956
	28	[133]	LOADK    	R2 K16 ; R2 := "/Lotus/Types/Keys/VorsPrize/VorsPrizeQuestKeyChain"
	29	[133]	CALL     	R1 2 2 ; R1 := R1(R2)
	30	[133]	SETTABLE 	R0 K15 R1 ; R0["vorsPrizeQuestKey"] := R1
	31	[134]	GETGLOBAL	R1 K13 ; R1 := 0x7ed0a956
	32	[134]	LOADK    	R2 K18 ; R2 := "/Lotus/Types/Keys/SolarisQuest/SolarisQuestKeyChain"
	33	[134]	CALL     	R1 2 2 ; R1 := R1(R2)
	34	[134]	SETTABLE 	R0 K17 R1 ; R0["solarisIntroQuest"] := R1
	35	[135]	NEWTABLE 	R1 0 2 ; R1 := {}
	36	[135]	GETGLOBAL	R2 K13 ; R2 := 0x7ed0a956
	37	[135]	LOADK    	R3 K21 ; R3 := "/Lotus/Types/Keys/InfestedMicroplanetQuest/InfestedMicroplanetQuestKeyChain"
	38	[135]	CALL     	R2 2 2 ; R2 := R2(R3)
	39	[135]	SETTABLE 	R1 K20 R2 ; R1["quest"] := R2
	40	[135]	GETGLOBAL	R2 K13 ; R2 := 0x7ed0a956
	41	[135]	LOADK    	R3 K23 ; R3 := "/Lotus/Levels/Proc/Infestation/InfestedMicroplanetLandscapeQuest"
	42	[135]	CALL     	R2 2 2 ; R2 := R2(R3)
	43	[135]	SETTABLE 	R1 K22 R2 ; R1["level"] := R2
	44	[135]	SETTABLE 	R0 K19 R1 ; R0["deimosIntroQuestInfo"] := R1
	45	[136]	GETGLOBAL	R1 K13 ; R1 := 0x7ed0a956
	46	[136]	LOADK    	R2 K25 ; R2 := "/Lotus/Types/Keys/MirageQuest/MirageQuestKeyChain"
	47	[136]	CALL     	R1 2 2 ; R1 := R1(R2)
	48	[136]	SETTABLE 	R0 K24 R1 ; R0["mirageQuestKey"] := R1
	49	[137]	GETGLOBAL	R1 K13 ; R1 := 0x7ed0a956
	50	[137]	LOADK    	R2 K27 ; R2 := "/Lotus/Types/Keys/RaidKeys/BaseRaidKey"
	51	[137]	CALL     	R1 2 2 ; R1 := R1(R2)
	52	[137]	SETTABLE 	R0 K26 R1 ; R0["baseRaidKeyType"] := R1
	53	[138]	GETGLOBAL	R1 K13 ; R1 := 0x7ed0a956
	54	[138]	LOADK    	R2 K29 ; R2 := "/Lotus/Types/Keys/ZarimanQuest/ZarimanQuestKeyChain"
	55	[138]	CALL     	R1 2 2 ; R1 := R1(R2)
	56	[138]	SETTABLE 	R0 K28 R1 ; R0["zarimanIntroQuest"] := R1
	57	[140]	GETGLOBAL	R1 K13 ; R1 := 0x7ed0a956
	58	[140]	LOADK    	R2 K30 ; R2 := "/Lotus/Levels/Proc/Hub/RelayStationHubMain"
	59	[140]	CALL     	R1 2 2 ; R1 := R1(R2)
	60	[142]	NEWTABLE 	R2 0 9 ; R2 := {}
	61	[142]	SETTABLE 	R2 K31 K32 ; R2["forceUpdate3dElements"] := false
	62	[142]	NEWTABLE 	R3 0 0 ; R3 := {}
	63	[142]	SETTABLE 	R2 K33 R3 ; R2["sky"] := R3
	64	[142]	SETTABLE 	R2 K34 K35 ; R2["cameraSpot"] := nil
	65	[142]	GETGLOBAL	R3 K37 ; R3 := 0xa421af95
	66	[142]	CALL     	R3 1 2 ; R3 := R3()
	67	[142]	SETTABLE 	R2 K36 R3 ; R2["pos"] := R3
	68	[142]	GETGLOBAL	R3 K37 ; R3 := 0xa421af95
	69	[142]	CALL     	R3 1 2 ; R3 := R3()
	70	[142]	SETTABLE 	R2 K38 R3 ; R2["oldPos"] := R3
	71	[142]	GETGLOBAL	R3 K37 ; R3 := 0xa421af95
	72	[142]	CALL     	R3 1 2 ; R3 := R3()
	73	[142]	SETTABLE 	R2 K39 R3 ; R2["originPos"] := R3
	74	[142]	GETGLOBAL	R3 K37 ; R3 := 0xa421af95
	75	[142]	CALL     	R3 1 2 ; R3 := R3()
	76	[142]	SETTABLE 	R2 K40 R3 ; R2["origFacing"] := R3
	77	[142]	GETGLOBAL	R3 K37 ; R3 := 0xa421af95
	78	[142]	CALL     	R3 1 2 ; R3 := R3()
	79	[142]	SETTABLE 	R2 K41 R3 ; R2["skyOrigin"] := R3
	80	[142]	SETTABLE 	R2 K42 K43 ; R2["zoomLevel"] := 0.000000
	81	[143]	NEWTABLE 	R3 0 4 ; R3 := {}
	82	[143]	SETTABLE 	R3 K44 K35 ; R3["Movie"] := nil
	83	[143]	SETTABLE 	R3 K45 K32 ; R3["Open"] := false
	84	[143]	SETTABLE 	R3 K46 K32 ; R3["DioOpen"] := false
	85	[143]	SETTABLE 	R3 K47 K35 ; R3["mBossInfo"] := nil
	86	[145]	NEWTABLE 	R4 0 8 ; R4 := {}
	87	[145]	SETTABLE 	R4 K48 K35 ; R4["EpisodeStatus"] := nil
	88	[145]	SETTABLE 	R4 K49 K35 ; R4["ResourceDrone"] := nil
	89	[145]	SETTABLE 	R4 K50 K35 ; R4["Invasion"] := nil
	90	[145]	SETTABLE 	R4 K51 K35 ; R4["VoidProjection"] := nil
	91	[145]	SETTABLE 	R4 K52 K35 ; R4["Nightmare"] := nil
	92	[145]	SETTABLE 	R4 K53 K35 ; R4["SoloMission"] := nil
	93	[145]	SETTABLE 	R4 K54 K35 ; R4["JunctionTasks"] := nil
	94	[145]	SETTABLE 	R4 K55 K35 ; R4["MultiMissionSelector"] := nil
	95	[147]	OP_LOADBOOL	R5 0 0 ; R5 := false
	96	[149]	NEWTABLE 	R6 0 0 ; R6 := {}
	97	[150]	NEWTABLE 	R7 0 0 ; R7 := {}
	98	[151]	NEWTABLE 	R8 0 0 ; R8 := {}
	99	[152]	NEWTABLE 	R9 0 0 ; R9 := {}
	100	[153]	GETGLOBAL	R10 K56 ; R10 := EMPTY_SYMBOL
	101	[155]	NEWTABLE 	R11 0 0 ; R11 := {}
	102	[156]	NEWTABLE 	R12 0 0 ; R12 := {}
	103	[157]	NEWTABLE 	R13 0 0 ; R13 := {}
	104	[159]	NEWTABLE 	R14 0 4 ; R14 := {}
	105	[159]	SETTABLE 	R14 K58 K59 ; R14["STARTING_ZOOM"] := -8.000000
	106	[159]	SETTABLE 	R14 K60 K61 ; R14["MAX_ZOOM"] := 4.500000
	107	[159]	SETTABLE 	R14 K62 K63 ; R14["MIN_ZOOM"] := -15.000000
	108	[159]	SETTABLE 	R14 K64 K59 ; R14["ZOOM_OUT_THRESHOLD"] := -8.000000
	109	[159]	SETGLOBALHASH	R14 K57 ; Zoom := R14
	110	[160]	OP_LOADBOOL	R14 0 0 ; R14 := false
	111	[160]	SETGLOBALHASH	R14 K65 ; mInputBlocked := R14
	112	[161]	LOADNIL  	R14 R14 ; R14 := nil
	113	[161]	SETGLOBALHASH	R14 K66 ; mMapLoader := R14
	114	[162]	LOADNIL  	R14 R14 ; R14 := nil
	115	[162]	SETGLOBALHASH	R14 K67 ; mResLoader := R14
	116	[163]	LOADNIL  	R14 R14 ; R14 := nil
	117	[163]	SETGLOBALHASH	R14 K68 ; mDrag := R14
	118	[164]	GETGLOBAL	R14 K70 ; R14 := 0x78ca68a2
	119	[164]	LOADK    	R15 := 0.500000
	120	[164]	LOADK    	R16 K71 ; R16 := 0.150000
	121	[164]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	122	[164]	SETGLOBALHASH	R14 K69 ; mSmoothX := R14
	123	[165]	GETGLOBAL	R14 K70 ; R14 := 0x78ca68a2
	124	[165]	LOADK    	R15 := 0.500000
	125	[165]	LOADK    	R16 K71 ; R16 := 0.150000
	126	[165]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	127	[165]	SETGLOBALHASH	R14 K72 ; mSmoothY := R14
	128	[166]	GETGLOBAL	R14 K70 ; R14 := 0x78ca68a2
	129	[166]	GETGLOBAL	R15 K57 ; R15 := Zoom
	130	[166]	GETTABLE 	R15 R15 K58 ; R15 := R15["STARTING_ZOOM"]
	131	[166]	LOADK    	R16 K71 ; R16 := 0.150000
	132	[166]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	133	[166]	SETGLOBALHASH	R14 K73 ; mSmoothZoom := R14
	134	[167]	LOADNIL  	R14 R15 ; R14 := R15 := nil
	135	[168]	SETGLOBALHASH	R15 K74 ; mPreviousZoom := R15
	136	[169]	NEWTABLE 	R15 0 0 ; R15 := {}
	137	[169]	SETGLOBALHASH	R15 K75 ; mPreviousDrag := R15
	138	[170]	NEWTABLE 	R15 0 2 ; R15 := {}
	139	[170]	SETTABLE 	R15 K77 K78 ; R15["Alpha"] := 1.000000
	140	[170]	SETTABLE 	R15 K79 K35 ; R15["Node"] := nil
	141	[170]	SETGLOBALHASH	R15 K76 ; mPreviousNodeDuck := R15
	142	[171]	NEWTABLE 	R15 0 2 ; R15 := {}
	143	[171]	SETTABLE 	R15 K77 K78 ; R15["Alpha"] := 1.000000
	144	[171]	SETTABLE 	R15 K81 K35 ; R15["Region"] := nil
	145	[171]	SETGLOBALHASH	R15 K80 ; mPreviousRegionDuck := R15
	146	[173]	LOADNIL  	R15 R15 ; R15 := nil
	147	[173]	SETGLOBALHASH	R15 K82 ; mZoomedRegion := R15
	148	[174]	LOADNIL  	R15 R15 ; R15 := nil
	149	[174]	SETGLOBALHASH	R15 K83 ; mZoomedSuper := R15
	150	[175]	NEWTABLE 	R15 0 7 ; R15 := {}
	151	[175]	SETTABLE 	R15 K85 K32 ; R15["InSelectClick"] := false
	152	[175]	SETTABLE 	R15 K81 K35 ; R15["Region"] := nil
	153	[175]	SETTABLE 	R15 K86 K35 ; R15["RegionLabel"] := nil
	154	[175]	SETTABLE 	R15 K79 K35 ; R15["Node"] := nil
	155	[175]	SETTABLE 	R15 K87 K35 ; R15["UpdateTimer"] := nil
	156	[175]	SETTABLE 	R15 K88 K35 ; R15["NodeTime"] := nil
	157	[175]	SETTABLE 	R15 K89 K35 ; R15["mPrevHoverNode"] := nil
	158	[175]	SETGLOBALHASH	R15 K84 ; mHover := R15
	159	[176]	LOADNIL  	R15 R15 ; R15 := nil
	160	[176]	SETGLOBALHASH	R15 K90 ; mPriorHoverNode := R15
	161	[177]	LOADK    	R15 := 12.000000
	162	[177]	SETGLOBALHASH	R15 K91 ; dragScale := R15
	163	[178]	NEWTABLE 	R15 0 2 ; R15 := {}
	164	[178]	SETTABLE 	R15 K93 K43 ; R15["NodeLayerAlpha"] := 0.000000
	165	[178]	SETTABLE 	R15 K94 K95 ; R15["MinNodeAlphaToClick"] := 50.000000
	166	[178]	SETGLOBALHASH	R15 K92 ; mNodeAlphaValues := R15
	167	[179]	LOADNIL  	R15 R15 ; R15 := nil
	168	[179]	SETGLOBALHASH	R15 K96 ; mMissionInfo := R15
	169	[180]	NEWTABLE 	R15 0 2 ; R15 := {}
	170	[180]	SETTABLE 	R15 K79 K35 ; R15["Node"] := nil
	171	[180]	SETTABLE 	R15 K98 K35 ; R15["SectorName"] := nil
	172	[180]	SETGLOBALHASH	R15 K97 ; mCachedSoloMission := R15
	173	[181]	LOADNIL  	R15 R15 ; R15 := nil
	174	[182]	NEWTABLE 	R16 0 5 ; R16 := {}
	175	[182]	SETTABLE 	R16 K100 K35 ; R16["CountdownFx"] := nil
	176	[182]	NEWTABLE 	R17 0 0 ; R17 := {}
	177	[182]	SETTABLE 	R16 K101 R17 ; R16["PendingFx"] := R17
	178	[182]	NEWTABLE 	R17 0 0 ; R17 := {}
	179	[182]	SETTABLE 	R16 K102 R17 ; R16["QuestFx"] := R17
	180	[182]	NEWTABLE 	R17 0 0 ; R17 := {}
	181	[182]	SETTABLE 	R16 K103 R17 ; R16["SentientFx"] := R17
	182	[182]	NEWTABLE 	R17 0 0 ; R17 := {}
	183	[182]	SETTABLE 	R16 K104 R17 ; R16["InvasionFx"] := R17
	184	[182]	SETGLOBALHASH	R16 K99 ; mParticles := R16
	185	[183]	NEWTABLE 	R16 0 2 ; R16 := {}
	186	[183]	SETTABLE 	R16 K98 K106 ; R16["SectorName"] := ""
	187	[183]	SETTABLE 	R16 K107 K106 ; R16["MissionTier"] := ""
	188	[183]	SETGLOBALHASH	R16 K105 ; mVoidTear := R16
	189	[184]	NEWTABLE 	R16 0 3 ; R16 := {}
	190	[184]	SETTABLE 	R16 K98 K106 ; R16["SectorName"] := ""
	191	[184]	SETTABLE 	R16 K109 K43 ; R16["Difficulty"] := 0.000000
	192	[184]	SETTABLE 	R16 K110 K35 ; R16["MovieInst"] := nil
	193	[184]	SETGLOBALHASH	R16 K108 ; mWagerMission := R16
	194	[185]	LOADNIL  	R16 R16 ; R16 := nil
	195	[185]	SETGLOBALHASH	R16 K111 ; mStichStart := R16
	196	[186]	NEWTABLE 	R16 0 0 ; R16 := {}
	197	[186]	SETGLOBALHASH	R16 K112 ; mInfoTip := R16
	198	[187]	NEWTABLE 	R16 0 0 ; R16 := {}
	199	[187]	SETGLOBALHASH	R16 K113 ; mRegionRadius := R16
	200	[188]	NEWTABLE 	R16 0 0 ; R16 := {}
	201	[188]	SETGLOBALHASH	R16 K114 ; mRegionRings := R16
	202	[190]	NEWTABLE 	R16 0 8 ; R16 := {}
	203	[191]	NEWTABLE 	R17 0 0 ; R17 := {}
	204	[191]	SETTABLE 	R16 K115 R17 ; R16["Settings"] := R17
	205	[192]	SETTABLE 	R16 K116 K78 ; R16["CurrentIndex"] := 1.000000
	206	[193]	SETTABLE 	R16 K117 K43 ; R16["CurrentTier"] := 0.000000
	207	[194]	SETTABLE 	R16 K118 K35 ; R16["SelectorList"] := nil
	208	[195]	SETTABLE 	R16 K119 K43 ; R16["InitY"] := 0.000000
	209	[196]	SETTABLE 	R16 K120 K35 ; R16["ExpansionTimerId"] := nil
	210	[197]	SETTABLE 	R16 K121 K32 ; R16["Expanded"] := false
	211	[198]	SETTABLE 	R16 K122 K32 ; R16["EnableDifficultySelector"] := false
	212	[201]	NEWTABLE 	R17 0 0 ; R17 := {}
	213	[201]	SETGLOBALHASH	R17 K123 ; mFlatEdges := R17
	214	[202]	NEWTABLE 	R17 0 0 ; R17 := {}
	215	[202]	SETGLOBALHASH	R17 K124 ; mMovingEdgeIndices := R17
	216	[203]	OP_LOADBOOL	R17 0 0 ; R17 := false
	217	[203]	SETGLOBALHASH	R17 K125 ; mDebugUnlockAllMissions := R17
	218	[204]	OP_LOADBOOL	R17 0 0 ; R17 := false
	219	[204]	SETGLOBALHASH	R17 K126 ; mInvitePopupShowing := R17
	220	[205]	OP_LOADBOOL	R17 0 0 ; R17 := false
	221	[205]	SETGLOBALHASH	R17 K127 ; mNewWarMode := R17
	222	[206]	OP_LOADBOOL	R17 0 0 ; R17 := false
	223	[206]	SETGLOBALHASH	R17 K128 ; mConfirmSoloMissionQueued := R17
	224	[207]	NEWTABLE 	R17 0 4 ; R17 := {}
	225	[207]	SETTABLE 	R17 K130 K106 ; R17["sectorName"] := ""
	226	[207]	SETTABLE 	R17 K131 K106 ; R17["sectorLoc"] := ""
	227	[207]	SETTABLE 	R17 K132 K133 ; R17["mBusyPlayerLoad"] := 0.700000
	228	[207]	SETTABLE 	R17 K134 K135 ; R17["mAutoJoinIfNotBusy"] := true
	229	[207]	SETGLOBALHASH	R17 K129 ; mPendingHubInstances := R17
	230	[208]	OP_LOADBOOL	R17 1 0 ; R17 := true
	231	[208]	SETGLOBALHASH	R17 K136 ; mVisibleTags := R17
	232	[209]	NEWTABLE 	R17 0 0 ; R17 := {}
	233	[209]	SETGLOBALHASH	R17 K137 ; mShip := R17
	234	[210]	NEWTABLE 	R17 0 2 ; R17 := {}
	235	[210]	SETTABLE 	R17 K79 K35 ; R17["Node"] := nil
	236	[210]	SETTABLE 	R17 K139 K140 ; R17["Timer"] := -1.000000
	237	[210]	SETGLOBALHASH	R17 K138 ; mCountDown := R17
	238	[211]	NEWTABLE 	R17 0 3 ; R17 := {}
	239	[211]	SETTABLE 	R17 K142 K35 ; R17["Previous"] := nil
	240	[211]	SETTABLE 	R17 K143 K35 ; R17["Target"] := nil
	241	[211]	GETGLOBAL	R18 K70 ; R18 := 0x78ca68a2
	242	[211]	LOADK    	R19 := 1.000000
	243	[211]	LOADK    	R20 K145 ; R20 := 0.200000
	244	[211]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	245	[211]	SETTABLE 	R17 K144 R18 ; R17["Prop"] := R18
	246	[211]	SETGLOBALHASH	R17 K141 ; mPlayerPos := R17
	247	[212]	NEWTABLE 	R17 0 0 ; R17 := {}
	248	[212]	SETGLOBALHASH	R17 K146 ; mVoidTrader := R17
	249	[213]	GETGLOBAL	R17 K70 ; R17 := 0x78ca68a2
	250	[213]	LOADK    	R18 := 1.000000
	251	[213]	LOADK    	R19 K148 ; R19 := 0.175000
	252	[213]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	253	[213]	SETGLOBALHASH	R17 K147 ; mNodeDuck := R17
	254	[214]	GETGLOBAL	R17 K70 ; R17 := 0x78ca68a2
	255	[214]	LOADK    	R18 := 0.000000
	256	[214]	LOADK    	R19 K148 ; R19 := 0.175000
	257	[214]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	258	[214]	SETGLOBALHASH	R17 K149 ; mRegionConnectionsDuck := R17
	259	[215]	NEWTABLE 	R17 0 4 ; R17 := {}
	260	[215]	SETTABLE 	R17 K151 K152 ; R17["NotificationTime"] := 10.000000
	261	[215]	NEWTABLE 	R18 0 0 ; R18 := {}
	262	[215]	SETTABLE 	R17 K153 R18 ; R17["Pending"] := R18
	263	[215]	NEWTABLE 	R18 0 0 ; R18 := {}
	264	[215]	SETTABLE 	R17 K154 R18 ; R17["Quest"] := R18
	265	[215]	NEWTABLE 	R18 0 0 ; R18 := {}
	266	[215]	SETTABLE 	R17 K50 R18 ; R17["Invasion"] := R18
	267	[215]	SETGLOBALHASH	R17 K150 ; mFxNodes := R17
	268	[216]	LOADNIL  	R17 R17 ; R17 := nil
	269	[216]	SETGLOBALHASH	R17 K155 ; mConstructionProjectNodes := R17
	270	[217]	LOADK    	R17 K106 ; R17 := ""
	271	[217]	SETGLOBALHASH	R17 K156 ; mLockIcon := R17
	272	[218]	OP_LOADBOOL	R17 0 0 ; R17 := false
	273	[218]	SETGLOBALHASH	R17 K157 ; mAggregationInProgress := R17
	274	[219]	LOADNIL  	R17 R17 ; R17 := nil
	275	[219]	SETGLOBALHASH	R17 K158 ; mVorsPrizeQuestActiveNode := R17
	276	[220]	LOADNIL  	R17 R17 ; R17 := nil
	277	[221]	NEWTABLE 	R18 0 6 ; R18 := {}
	278	[221]	SETTABLE 	R18 K160 K32 ; R18["Active"] := false
	279	[221]	SETTABLE 	R18 K161 K35 ; R18["SelectionNode"] := nil
	280	[221]	SETTABLE 	R18 K162 K35 ; R18["Button"] := nil
	281	[221]	NEWTABLE 	R19 0 0 ; R19 := {}
	282	[221]	SETTABLE 	R18 K163 R19 ; R18["Regions"] := R19
	283	[221]	SETTABLE 	R18 K164 K32 ; R18["CanHost"] := false
	284	[221]	SETTABLE 	R18 K165 K32 ; R18["NameNodeMapRebuildQueued"] := false
	285	[221]	SETGLOBALHASH	R18 K159 ; mRailJack := R18
	286	[222]	NEWTABLE 	R18 0 0 ; R18 := {}
	287	[222]	SETGLOBALHASH	R18 K166 ; mColors := R18
	288	[224]	NEWTABLE 	R18 0 23 ; R18 := {}
	289	[225]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	290	[225]	CALL     	R19 1 2 ; R19 := R19()
	291	[225]	SETTABLE 	R18 K167 R19 ; R18["EMPTY"] := R19
	292	[227]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	293	[227]	LOADK    	R20 K170 ; R20 := "AlphaAtten"
	294	[227]	CALL     	R19 2 2 ; R19 := R19(R20)
	295	[227]	SETTABLE 	R18 K169 R19 ; R18["ALPHA_ATTEN"] := R19
	296	[228]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	297	[228]	LOADK    	R20 K172 ; R20 := "DESTROYED"
	298	[228]	CALL     	R19 2 2 ; R19 := R19(R20)
	299	[228]	SETTABLE 	R18 K171 R19 ; R18["DESTROYED_NODE_TAG"] := R19
	300	[229]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	301	[229]	LOADK    	R20 K174 ; R20 := "RECONSTRUCTION"
	302	[229]	CALL     	R19 2 2 ; R19 := R19(R20)
	303	[229]	SETTABLE 	R18 K173 R19 ; R18["RECONSTRUCTION_NODE_TAG"] := R19
	304	[230]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	305	[230]	LOADK    	R20 K176 ; R20 := "UnderConstruction"
	306	[230]	CALL     	R19 2 2 ; R19 := R19(R20)
	307	[230]	SETTABLE 	R18 K175 R19 ; R18["UNDER_CONSTRUCTION_NODE_TAG"] := R19
	308	[231]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	309	[231]	LOADK    	R20 K178 ; R20 := "EarthToMoonShortcut"
	310	[231]	CALL     	R19 2 2 ; R19 := R19(R20)
	311	[231]	SETTABLE 	R18 K177 R19 ; R18["MOON_SHORTCUT_TAG"] := R19
	312	[232]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	313	[232]	LOADK    	R20 K180 ; R20 := "SentientShip"
	314	[232]	CALL     	R19 2 2 ; R19 := R19(R20)
	315	[232]	SETTABLE 	R18 K179 R19 ; R18["SENTIENT_SHIP_TAG"] := R19
	316	[233]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	317	[233]	LOADK    	R20 K182 ; R20 := "UnlitAtten"
	318	[233]	CALL     	R19 2 2 ; R19 := R19(R20)
	319	[233]	SETTABLE 	R18 K181 R19 ; R18["UNLIT_ATTEN"] := R19
	320	[235]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	321	[235]	LOADK    	R20 K184 ; R20 := "StarChartRoot"
	322	[235]	CALL     	R19 2 2 ; R19 := R19(R20)
	323	[235]	SETTABLE 	R18 K183 R19 ; R18["STAR_CHART_ROOT"] := R19
	324	[236]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	325	[236]	LOADK    	R20 K186 ; R20 := "Player"
	326	[236]	CALL     	R19 2 2 ; R19 := R19(R20)
	327	[236]	SETTABLE 	R18 K185 R19 ; R18["PLAYER"] := R19
	328	[237]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	329	[237]	LOADK    	R20 K188 ; R20 := "PlayerOperator"
	330	[237]	CALL     	R19 2 2 ; R19 := R19(R20)
	331	[237]	SETTABLE 	R18 K187 R19 ; R18["PLAYER_OPERATOR"] := R19
	332	[238]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	333	[238]	LOADK    	R20 K190 ; R20 := "PlayerLight"
	334	[238]	CALL     	R19 2 2 ; R19 := R19(R20)
	335	[238]	SETTABLE 	R18 K189 R19 ; R18["PLAYER_LIGHT"] := R19
	336	[239]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	337	[239]	LOADK    	R20 K192 ; R20 := "SkyCube"
	338	[239]	CALL     	R19 2 2 ; R19 := R19(R20)
	339	[239]	SETTABLE 	R18 K191 R19 ; R18["SKY_CUBE"] := R19
	340	[240]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	341	[240]	LOADK    	R20 K194 ; R20 := "VoidT2"
	342	[240]	CALL     	R19 2 2 ; R19 := R19(R20)
	343	[240]	SETTABLE 	R18 K193 R19 ; R18["VOIDT2"] := R19
	344	[241]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	345	[241]	LOADK    	R20 K196 ; R20 := "VoidT3"
	346	[241]	CALL     	R19 2 2 ; R19 := R19(R20)
	347	[241]	SETTABLE 	R18 K195 R19 ; R18["VOIDT3"] := R19
	348	[242]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	349	[242]	LOADK    	R20 K198 ; R20 := "VoidT4"
	350	[242]	CALL     	R19 2 2 ; R19 := R19(R20)
	351	[242]	SETTABLE 	R18 K197 R19 ; R18["VOIDT4"] := R19
	352	[243]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	353	[243]	LOADK    	R20 K200 ; R20 := "VoidT5"
	354	[243]	CALL     	R19 2 2 ; R19 := R19(R20)
	355	[243]	SETTABLE 	R18 K199 R19 ; R18["VOIDT5"] := R19
	356	[244]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	357	[244]	LOADK    	R20 K201 ; R20 := "GAME_C1_HEAD1"
	358	[244]	CALL     	R19 2 2 ; R19 := R19(R20)
	359	[244]	SETTABLE 	R18 K201 R19 ; R18["GAME_C1_HEAD1"] := R19
	360	[246]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	361	[246]	LOADK    	R20 K203 ; R20 := "MacheteMayhem"
	362	[246]	CALL     	R19 2 2 ; R19 := R19(R20)
	363	[246]	SETTABLE 	R18 K202 R19 ; R18["MACHETE_MAYHEM"] := R19
	364	[248]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	365	[248]	LOADK    	R20 K205 ; R20 := "TennoConRelay"
	366	[248]	CALL     	R19 2 2 ; R19 := R19(R20)
	367	[248]	SETTABLE 	R18 K204 R19 ; R18["TENNOCON_RELAY"] := R19
	368	[249]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	369	[249]	LOADK    	R20 K207 ; R20 := "TennoConRelayB"
	370	[249]	CALL     	R19 2 2 ; R19 := R19(R20)
	371	[249]	SETTABLE 	R18 K206 R19 ; R18["TENNOCON_RELAY_B"] := R19
	372	[250]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	373	[250]	LOADK    	R20 K209 ; R20 := "TennoConBHUB6"
	374	[250]	CALL     	R19 2 2 ; R19 := R19(R20)
	375	[250]	SETTABLE 	R18 K208 R19 ; R18["TENNOCON_RELAY_B_NODE"] := R19
	376	[252]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	377	[252]	LOADK    	R20 K211 ; R20 := "DevStreamRelay"
	378	[252]	CALL     	R19 2 2 ; R19 := R19(R20)
	379	[252]	SETTABLE 	R18 K210 R19 ; R18["DEVSTREAM_RELAY"] := R19
	380	[254]	NEWTABLE 	R19 0 0 ; R19 := {}
	381	[254]	SETTABLE 	R18 K212 R19 ; R18["INFLUENCE_MAP"] := R19
	382	[255]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	383	[255]	LOADK    	R20 K214 ; R20 := "SolNode973"
	384	[255]	CALL     	R19 2 2 ; R19 := R19(R20)
	385	[255]	SETTABLE 	R18 K213 R19 ; R18["FIGHT_NODE_TAG"] := R19
	386	[257]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	387	[257]	LOADK    	R20 K216 ; R20 := "SquadLinkEvent"
	388	[257]	CALL     	R19 2 2 ; R19 := R19(R20)
	389	[257]	SETTABLE 	R18 K215 R19 ; R18["SQUAD_LINK_EVENT"] := R19
	390	[259]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	391	[259]	LOADK    	R20 K218 ; R20 := "NemesisShowdown"
	392	[259]	CALL     	R19 2 2 ; R19 := R19(R20)
	393	[259]	SETTABLE 	R18 K217 R19 ; R18["NEMESIS_SHOWDOWN"] := R19
	394	[261]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	395	[261]	LOADK    	R20 K220 ; R20 := "PrimeVaultTrader"
	396	[261]	CALL     	R19 2 2 ; R19 := R19(R20)
	397	[261]	SETTABLE 	R18 K219 R19 ; R18["PRIME_VAULT_TRADER_GOAL"] := R19
	398	[262]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	399	[262]	LOADK    	R20 K222 ; R20 := "TradeHUB1"
	400	[262]	CALL     	R19 2 2 ; R19 := R19(R20)
	401	[262]	SETTABLE 	R18 K221 R19 ; R18["PRIME_VAULT_TRADER_LOCATION"] := R19
	402	[265]	NEWTABLE 	R19 0 14 ; R19 := {}
	403	[266]	GETGLOBAL	R20 K224 ; R20 := 0xb7cbd06b
	404	[266]	LOADK    	R21 := 0.000000
	405	[266]	LOADK    	R22 := 8.000000
	406	[266]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	407	[266]	SETTABLE 	R19 K223 R20 ; R19["LINE_CULL_DISTANCE"] := R20
	408	[267]	GETGLOBAL	R20 K224 ; R20 := 0xb7cbd06b
	409	[267]	LOADK    	R21 := 0.000000
	410	[267]	LOADK    	R22 := 17.000000
	411	[267]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	412	[267]	SETTABLE 	R19 K225 R20 ; R19["SHORTCUT_CULL_DISTANCE"] := R20
	413	[269]	SETTABLE 	R19 K226 K227 ; R19["PLANET_UNIT_MULTIPLIER"] := 0.142600
	414	[271]	SETTABLE 	R19 K228 K229 ; R19["INACTIVE_NODE_ALPHA"] := 100.000000
	415	[272]	SETTABLE 	R19 K230 K229 ; R19["LABEL_ALPHA"] := 100.000000
	416	[274]	SETTABLE 	R19 K231 K232 ; R19["DECO_SCALE_MULTIPLIER"] := 2.000000
	417	[275]	GETGLOBAL	R20 K224 ; R20 := 0xb7cbd06b
	418	[275]	LOADK    	R21 := -2.000000
	419	[275]	LOADK    	R22 := -0.000000
	420	[275]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	421	[275]	SETTABLE 	R19 K233 R20 ; R19["LAYER_1_RANGE"] := R20
	422	[276]	GETGLOBAL	R20 K224 ; R20 := 0xb7cbd06b
	423	[276]	LOADK    	R21 := -2.000000
	424	[276]	LOADK    	R22 := 2.000000
	425	[276]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	426	[276]	SETTABLE 	R19 K234 R20 ; R19["LAYER_2_RANGE"] := R20
	427	[277]	GETGLOBAL	R20 K224 ; R20 := 0xb7cbd06b
	428	[277]	LOADK    	R21 := -12.000000
	429	[277]	LOADK    	R22 := -0.000000
	430	[277]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	431	[277]	SETTABLE 	R19 K235 R20 ; R19["SHORTCUT_RANGE"] := R20
	432	[278]	GETGLOBAL	R20 K224 ; R20 := 0xb7cbd06b
	433	[278]	LOADK    	R21 := -20.000000
	434	[278]	LOADK    	R22 := 0.000000
	435	[278]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	436	[278]	SETTABLE 	R19 K236 R20 ; R19["PLANET_VIS_RANGE"] := R20
	437	[280]	GETGLOBAL	R20 K37 ; R20 := 0xa421af95
	438	[280]	LOADK    	R21 := 0.000000
	439	[280]	LOADK    	R22 := 0.500000
	440	[280]	LOADK    	R23 := 0.000000
	441	[280]	CALL     	R20 4 2 ; R20 := R20(R21,R22,R23)
	442	[280]	SETTABLE 	R19 K237 R20 ; R19["CAMERA_OFFSET"] := R20
	443	[281]	GETGLOBAL	R20 K37 ; R20 := 0xa421af95
	444	[281]	LOADK    	R21 := 0.000000
	445	[281]	LOADK    	R22 := 0.000000
	446	[281]	LOADK    	R23 := 1.000000
	447	[281]	CALL     	R20 4 2 ; R20 := R20(R21,R22,R23)
	448	[281]	SETTABLE 	R19 K238 R20 ; R19["CAMERA_FOCUS_DIR"] := R20
	449	[283]	GETGLOBAL	R20 K240 ; R20 := 0x00046924
	450	[283]	LOADK    	R21 := 0.000000
	451	[283]	LOADK    	R22 := 90.000000
	452	[283]	LOADK    	R23 := 0.000000
	453	[283]	CALL     	R20 4 2 ; R20 := R20(R21,R22,R23)
	454	[283]	SETTABLE 	R19 K239 R20 ; R19["RING_ROTATION"] := R20
	455	[284]	SETTABLE 	R19 K241 K242 ; R19["MAX_SHADER_INFLUENCES"] := 32.000000
	456	[288]	LOADNIL  	R20 R21 ; R20 := R21 := nil
	457	[291]	NEWTABLE 	R22 0 3 ; R22 := {}
	458	[292]	SETTABLE 	R22 K243 K32 ; R22["mShiftDown"] := false
	459	[293]	SETTABLE 	R22 K244 K32 ; R22["mControlDown"] := false
	460	[294]	SETTABLE 	R22 K245 K32 ; R22["mAltDown"] := false
	461	[297]	OP_LOADBOOL	R23 0 0 ; R23 := false
	462	[299]	NEWTABLE 	R24 0 8 ; R24 := {}
	463	[299]	SETTABLE 	R24 K246 K78 ; R24["READ_ONLY"] := 1.000000
	464	[299]	SETTABLE 	R24 K247 K232 ; R24["EDIT_NODES"] := 2.000000
	465	[299]	SETTABLE 	R24 K248 K249 ; R24["EDIT_EDGES"] := 3.000000
	466	[299]	SETTABLE 	R24 K250 K251 ; R24["EDIT_NODE_DECOS"] := 4.000000
	467	[299]	SETTABLE 	R24 K252 K253 ; R24["EDIT_REGIONS"] := 5.000000
	468	[299]	SETTABLE 	R24 K254 K255 ; R24["EDIT_REGION_FRAMING"] := 6.000000
	469	[299]	LOADK    	R25 K256 ; R25 := "EDIT_SHORTCUT_CONTROL_POINTS"
	470	[299]	LOADK    	R26 := 7.000000
	471	[299]	SETTABLE 	R24 R25 R26 ; R24[R25] := R26
	472	[299]	LOADK    	R25 K257 ; R25 := "MAX_VALUE"
	473	[299]	LOADK    	R26 := 8.000000
	474	[299]	SETTABLE 	R24 R25 R26 ; R24[R25] := R26
	475	[300]	GETTABLE 	R25 R24 K246 ; R25 := R24["READ_ONLY"]
	476	[302]	LOADNIL  	R26 R26 ; R26 := nil
	477	[304]	GETGLOBAL	R27 K258 ; R27 := 0x2d0fad09
	478	[304]	LOADK    	R28 K259 ; R28 := "EE.Interface.Utilities"
	479	[304]	CALL     	R27 2 2 ; R27 := R27(R28)
	480	[305]	GETGLOBAL	R28 K258 ; R28 := 0x2d0fad09
	481	[305]	LOADK    	R29 K260 ; R29 := "Lotus.Interface.UIUtilities"
	482	[305]	CALL     	R28 2 2 ; R28 := R28(R29)
	483	[306]	GETGLOBAL	R29 K258 ; R29 := 0x2d0fad09
	484	[306]	LOADK    	R30 K261 ; R30 := "Lotus.Interface.LotusUtilities"
	485	[306]	CALL     	R29 2 2 ; R29 := R29(R30)
	486	[307]	GETGLOBAL	R30 K258 ; R30 := 0x2d0fad09
	487	[307]	LOADK    	R31 K262 ; R31 := "Lotus.Interface.Libs.DioramaLoader"
	488	[307]	CALL     	R30 2 2 ; R30 := R30(R31)
	489	[308]	GETGLOBAL	R31 K258 ; R31 := 0x2d0fad09
	490	[308]	LOADK    	R32 K263 ; R32 := "Lotus.Interface.LotusNetworkUtilities"
	491	[308]	CALL     	R31 2 2 ; R31 := R31(R32)
	492	[309]	GETGLOBAL	R32 K258 ; R32 := 0x2d0fad09
	493	[309]	LOADK    	R33 K264 ; R33 := "Lotus.Interface.MissionRequirementUtilities"
	494	[309]	CALL     	R32 2 2 ; R32 := R32(R33)
	495	[310]	GETGLOBAL	R33 K258 ; R33 := 0x2d0fad09
	496	[310]	LOADK    	R34 K265 ; R34 := "Lotus.Scripts.Nemesis.NemesisGenerator"
	497	[310]	CALL     	R33 2 2 ; R33 := R33(R34)
	498	[311]	GETGLOBAL	R34 K258 ; R34 := 0x2d0fad09
	499	[311]	LOADK    	R35 K266 ; R35 := "Lotus.Interface.WorldStateUtilities"
	500	[311]	CALL     	R34 2 2 ; R34 := R34(R35)
	501	[312]	GETGLOBAL	R35 K258 ; R35 := 0x2d0fad09
	502	[312]	LOADK    	R36 K267 ; R36 := "Lotus.Interface.MapNodeTipUtilities"
	503	[312]	CALL     	R35 2 2 ; R35 := R35(R36)
	504	[313]	LOADNIL  	R36 R38 ; R36 := R37 := R38 := nil
	505	[316]	GETGLOBAL	R39 K70 ; R39 := 0x78ca68a2
	506	[316]	LOADK    	R40 := 0.000000
	507	[316]	LOADK    	R41 K71 ; R41 := 0.150000
	508	[316]	CALL     	R39 3 2 ; R39 := R39(R40,R41)
	509	[317]	GETGLOBAL	R40 K70 ; R40 := 0x78ca68a2
	510	[317]	LOADK    	R41 := 0.000000
	511	[317]	LOADK    	R42 K71 ; R42 := 0.150000
	512	[317]	CALL     	R40 3 2 ; R40 := R40(R41,R42)
	513	[318]	LOADNIL  	R41 R41 ; R41 := nil
	514	[319]	NEWTABLE 	R42 2 0 ; R42 := {}
	515	[319]	GETGLOBAL	R43 K70 ; R43 := 0x78ca68a2
	516	[319]	LOADK    	R44 := 0.000000
	517	[319]	LOADK    	R45 := 1.000000
	518	[319]	CALL     	R43 3 2 ; R43 := R43(R44,R45)
	519	[319]	GETGLOBAL	R44 K70 ; R44 := 0x78ca68a2
	520	[319]	LOADK    	R45 := 0.000000
	521	[319]	LOADK    	R46 := 1.000000
	522	[319]	CALL     	R44 3 2 ; R44 := R44(R45,R46)
	523	[319]	GETGLOBAL	R45 K70 ; R45 := 0x78ca68a2
	524	[319]	LOADK    	R46 := 0.000000
	525	[319]	LOADK    	R47 := 1.000000
	526	[319]	CALL     	R45 3 0 ; R45,... := R45(R46,R47)
	527	[319]	SETLIST  	R42 0 1 ; R42[(1-1)*FPF+i] := R(42+i), 1 <= i <= 0
	528	[320]	GETGLOBAL	R43 K268 ; R43 := 0x60130201
	529	[320]	CALL     	R43 1 2 ; R43 := R43()
	530	[321]	LOADNIL  	R44 R45 ; R44 := R45 := nil
	531	[323]	LOADK    	R46 := 0.000000
	532	[325]	OP_LOADBOOL	R47 0 0 ; R47 := false
	533	[327]	LOADNIL  	R48 R56 ; R48 := R49 := R50 := R51 := R52 := R53 := R54 := R55 := R56 := nil
	534	[337]	NEWTABLE 	R57 0 9 ; R57 := {}
	535	[337]	LOADK    	R58 K269 ; R58 := "IsVisible"
	536	[337]	OP_LOADBOOL	R59 0 0 ; R59 := false
	537	[337]	SETTABLE 	R57 R58 R59 ; R57[R58] := R59
	538	[337]	LOADK    	R58 K270 ; R58 := "X"
	539	[337]	LOADK    	R59 := 0.000000
	540	[337]	SETTABLE 	R57 R58 R59 ; R57[R58] := R59
	541	[337]	LOADK    	R58 K271 ; R58 := "Y"
	542	[337]	LOADK    	R59 := 0.000000
	543	[337]	SETTABLE 	R57 R58 R59 ; R57[R58] := R59
	544	[337]	LOADK    	R58 K272 ; R58 := "SpeedMultiplier"
	545	[337]	LOADK    	R59 := 1.000000
	546	[337]	SETTABLE 	R57 R58 R59 ; R57[R58] := R59
	547	[337]	LOADK    	R58 K273 ; R58 := "MinX"
	548	[337]	LOADK    	R59 := 0.000000
	549	[337]	SETTABLE 	R57 R58 R59 ; R57[R58] := R59
	550	[337]	LOADK    	R58 K274 ; R58 := "MinY"
	551	[337]	LOADK    	R59 := 0.000000
	552	[337]	SETTABLE 	R57 R58 R59 ; R57[R58] := R59
	553	[337]	LOADK    	R58 K275 ; R58 := "MaxX"
	554	[337]	LOADK    	R59 := 0.000000
	555	[337]	SETTABLE 	R57 R58 R59 ; R57[R58] := R59
	556	[337]	LOADK    	R58 K276 ; R58 := "MaxY"
	557	[337]	LOADK    	R59 := 0.000000
	558	[337]	SETTABLE 	R57 R58 R59 ; R57[R58] := R59
	559	[337]	LOADK    	R58 K277 ; R58 := "MouseMoves"
	560	[337]	LOADK    	R59 := 0.000000
	561	[337]	SETTABLE 	R57 R58 R59 ; R57[R58] := R59
	562	[339]	LOADNIL  	R58 R61 ; R58 := R59 := R60 := R61 := nil
	563	[344]	NEWTABLE 	R62 0 5 ; R62 := {}
	564	[344]	LOADK    	R63 K278 ; R63 := "SpaceMultiplier"
	565	[344]	LOADK    	R64 K279 ; R64 := 0.360000
	566	[344]	SETTABLE 	R62 R63 R64 ; R62[R63] := R64
	567	[344]	LOADK    	R63 K280 ; R63 := "ZoomedMultiplier"
	568	[344]	LOADK    	R64 K281 ; R64 := 0.280000
	569	[344]	SETTABLE 	R62 R63 R64 ; R62[R63] := R64
	570	[344]	LOADK    	R63 K282 ; R63 := "SpaceHoveringMultiplier"
	571	[344]	LOADK    	R64 K71 ; R64 := 0.150000
	572	[344]	SETTABLE 	R62 R63 R64 ; R62[R63] := R64
	573	[344]	LOADK    	R63 K283 ; R63 := "ZoomedHoveringMultiplier"
	574	[344]	LOADK    	R64 K284 ; R64 := 0.100000
	575	[344]	SETTABLE 	R62 R63 R64 ; R62[R63] := R64
	576	[344]	LOADK    	R63 K285 ; R63 := "AspectRatio"
	577	[344]	LOADK    	R64 := 1.000000
	578	[344]	SETTABLE 	R62 R63 R64 ; R62[R63] := R64
	579	[346]	NEWTABLE 	R63 0 10 ; R63 := {}
	580	[346]	LOADK    	R64 K286 ; R64 := "Velocity"
	581	[346]	LOADK    	R65 := 0.000000
	582	[346]	SETTABLE 	R63 R64 R65 ; R63[R64] := R65
	583	[346]	LOADK    	R64 K287 ; R64 := "LoopTime"
	584	[346]	LOADK    	R65 K288 ; R65 := 192800.000000
	585	[346]	SETTABLE 	R63 R64 R65 ; R63[R64] := R65
	586	[346]	LOADK    	R64 K289 ; R64 := "Tag"
	587	[346]	LOADK    	R65 K290 ; R65 := "/Lotus/Language/Locations/Fortress"
	588	[346]	SETTABLE 	R63 R64 R65 ; R63[R64] := R65
	589	[346]	LOADNIL  	R64 R64 ; R64 := nil
	590	[346]	SETTABLE 	R63 K81 R64 ; R63["Region"] := R64
	591	[346]	LOADK    	R64 K291 ; R64 := "ShowPath"
	592	[346]	OP_LOADBOOL	R65 0 0 ; R65 := false
	593	[346]	SETTABLE 	R63 R64 R65 ; R63[R64] := R65
	594	[346]	LOADK    	R64 K292 ; R64 := "Splines"
	595	[346]	NEWTABLE 	R65 0 0 ; R65 := {}
	596	[346]	SETTABLE 	R63 R64 R65 ; R63[R64] := R65
	597	[346]	LOADK    	R64 K293 ; R64 := "Sectors"
	598	[346]	NEWTABLE 	R65 0 0 ; R65 := {}
	599	[346]	SETTABLE 	R63 R64 R65 ; R63[R64] := R65
	600	[346]	LOADK    	R64 K294 ; R64 := "Nodes"
	601	[346]	NEWTABLE 	R65 0 0 ; R65 := {}
	602	[346]	SETTABLE 	R63 R64 R65 ; R63[R64] := R65
	603	[346]	LOADK    	R64 K295 ; R64 := "SubLabelIndex"
	604	[346]	LOADNIL  	R65 R65 ; R65 := nil
	605	[346]	SETTABLE 	R63 R64 R65 ; R63[R64] := R65
	606	[346]	LOADK    	R64 K296 ; R64 := "SplinePoints"
	607	[346]	LOADNIL  	R65 R65 ; R65 := nil
	608	[346]	SETTABLE 	R63 R64 R65 ; R63[R64] := R65
	609	[348]	OP_LOADBOOL	R64 0 0 ; R64 := false
	610	[350]	NEWTABLE 	R65 0 0 ; R65 := {}
	611	[351]	NEWTABLE 	R66 0 0 ; R66 := {}
	612	[354]	NEWTABLE 	R67 6 6 ; R67 := {}
	613	[354]	LOADK    	R68 K297 ; R68 := "isLMBDown"
	614	[354]	OP_LOADBOOL	R69 0 0 ; R69 := false
	615	[354]	SETTABLE 	R67 R68 R69 ; R67[R68] := R69
	616	[356]	GETGLOBAL	R68 K298 ; R68 := NodeClick
	617	[357]	GETGLOBAL	R69 K299 ; R69 := MapZoom
	618	[358]	GETGLOBAL	R70 K300 ; R70 := HandleMenuClick
	619	[359]	GETGLOBAL	R71 K301 ; R71 := ShowInfoTip
	620	[360]	GETGLOBAL	R72 K302 ; R72 := HideInfoTip
	621	[361]	GETGLOBAL	R73 K303 ; R73 := CloseJunctionDialog
	622	[361]	LOADK    	R74 K304 ; R74 := "mNodeVisible"
	623	[361]	OP_LOADBOOL	R75 0 0 ; R75 := false
	624	[361]	SETTABLE 	R67 R74 R75 ; R67[R74] := R75
	625	[362]	LOADK    	R74 K305 ; R74 := "JunctionDrag"
	626	[362]	OP_LOADBOOL	R75 0 0 ; R75 := false
	627	[362]	SETTABLE 	R67 R74 R75 ; R67[R74] := R75
	628	[363]	LOADK    	R74 K306 ; R74 := "mHandleJunctionClick"
	629	[363]	LOADNIL  	R75 R75 ; R75 := nil
	630	[363]	SETTABLE 	R67 R74 R75 ; R67[R74] := R75
	631	[364]	LOADK    	R74 K307 ; R74 := "mHandleMouseUp"
	632	[364]	OP_LOADBOOL	R75 0 0 ; R75 := false
	633	[364]	SETTABLE 	R67 R74 R75 ; R67[R74] := R75
	634	[365]	LOADK    	R74 K308 ; R74 := "TooltipNode"
	635	[365]	LOADNIL  	R75 R75 ; R75 := nil
	636	[365]	SETTABLE 	R67 R74 R75 ; R67[R74] := R75
	637	[366]	SETLIST  	R67 6 1 ; R67[(1-1)*FPF+i] := R(67+i), 1 <= i <= 6
	638	[401]	CLOSURE  	R68 0 ; R68 := closure(Function #1)
	639	[401]	MOVE     	R0 R27 ; R0 := R27
	640	[401]	MOVE     	R0 R62 ; R0 := R62
	641	[401]	MOVE     	R0 R57 ; R0 := R57
	642	[408]	CLOSURE  	R69 1 ; R69 := closure(Function #2)
	643	[437]	CLOSURE  	R70 2 ; R70 := closure(Function #3)
	644	[437]	MOVE     	R0 R57 ; R0 := R57
	645	[437]	MOVE     	R0 R27 ; R0 := R27
	646	[437]	MOVE     	R0 R69 ; R0 := R69
	647	[437]	MOVE     	R0 R62 ; R0 := R62
	648	[443]	CLOSURE  	R71 3 ; R71 := closure(Function #4)
	649	[463]	CLOSURE  	R72 4 ; R72 := closure(Function #5)
	650	[463]	MOVE     	R0 R27 ; R0 := R27
	651	[478]	CLOSURE  	R73 5 ; R73 := closure(Function #6)
	652	[495]	CLOSURE  	R74 6 ; R74 := closure(Function #7)
	653	[531]	CLOSURE  	R75 7 ; R75 := closure(Function #8)
	654	[531]	MOVE     	R0 R25 ; R0 := R25
	655	[531]	MOVE     	R0 R24 ; R0 := R24
	656	[531]	MOVE     	R0 R26 ; R0 := R26
	657	[531]	MOVE     	R0 R22 ; R0 := R22
	658	[531]	MOVE     	R0 R18 ; R0 := R18
	659	[538]	CLOSURE  	R76 8 ; R76 := closure(Function #9)
	660	[538]	MOVE     	R0 R7 ; R0 := R7
	661	[538]	MOVE     	R0 R75 ; R0 := R75
	662	[544]	CLOSURE  	R77 9 ; R77 := closure(Function #10)
	663	[540]	SETGLOBAL	R77 K309 ; OnTransmissionDone := R77
	664	[583]	CLOSURE  	R77 10 ; R77 := closure(Function #11)
	665	[583]	MOVE     	R0 R36 ; R0 := R36
	666	[583]	MOVE     	R0 R77 ; R0 := R77
	667	[583]	MOVE     	R0 R3 ; R0 := R3
	668	[583]	MOVE     	R0 R27 ; R0 := R27
	669	[595]	CLOSURE  	R78 11 ; R78 := closure(Function #12)
	670	[595]	MOVE     	R0 R26 ; R0 := R26
	671	[624]	CLOSURE  	R79 12 ; R79 := closure(Function #13)
	672	[624]	MOVE     	R0 R19 ; R0 := R19
	673	[624]	MOVE     	R0 R25 ; R0 := R25
	674	[624]	MOVE     	R0 R24 ; R0 := R24
	675	[624]	MOVE     	R0 R26 ; R0 := R26
	676	[624]	MOVE     	R0 R78 ; R0 := R78
	677	[641]	CLOSURE  	R80 13 ; R80 := closure(Function #14)
	678	[641]	MOVE     	R0 R19 ; R0 := R19
	679	[657]	CLOSURE  	R81 14 ; R81 := closure(Function #15)
	680	[657]	MOVE     	R0 R25 ; R0 := R25
	681	[657]	MOVE     	R0 R24 ; R0 := R24
	682	[657]	MOVE     	R0 R80 ; R0 := R80
	683	[657]	MOVE     	R0 R79 ; R0 := R79
	684	[657]	MOVE     	R0 R76 ; R0 := R76
	685	[747]	CLOSURE  	R82 15 ; R82 := closure(Function #16)
	686	[747]	MOVE     	R0 R12 ; R0 := R12
	687	[747]	MOVE     	R0 R13 ; R0 := R13
	688	[747]	MOVE     	R0 R29 ; R0 := R29
	689	[747]	MOVE     	R0 R27 ; R0 := R27
	690	[747]	MOVE     	R0 R16 ; R0 := R16
	691	[747]	MOVE     	R0 R23 ; R0 := R23
	692	[747]	MOVE     	R0 R8 ; R0 := R8
	693	[759]	CLOSURE  	R83 16 ; R83 := closure(Function #17)
	694	[761]	NEWTABLE 	R84 0 0 ; R84 := {}
	695	[810]	CLOSURE  	R85 17 ; R85 := closure(Function #18)
	696	[810]	MOVE     	R0 R18 ; R0 := R18
	697	[810]	MOVE     	R0 R19 ; R0 := R19
	698	[810]	MOVE     	R0 R84 ; R0 := R84
	699	[810]	MOVE     	R0 R33 ; R0 := R33
	700	[810]	MOVE     	R0 R27 ; R0 := R27
	701	[810]	MOVE     	R0 R8 ; R0 := R8
	702	[890]	CLOSURE  	R86 18 ; R86 := closure(Function #19)
	703	[890]	MOVE     	R0 R27 ; R0 := R27
	704	[890]	MOVE     	R0 R84 ; R0 := R84
	705	[890]	MOVE     	R0 R19 ; R0 := R19
	706	[890]	MOVE     	R0 R18 ; R0 := R18
	707	[894]	CLOSURE  	R87 19 ; R87 := closure(Function #20)
	708	[913]	CLOSURE  	R88 20 ; R88 := closure(Function #21)
	709	[985]	CLOSURE  	R89 21 ; R89 := closure(Function #22)
	710	[985]	MOVE     	R0 R35 ; R0 := R35
	711	[985]	MOVE     	R0 R36 ; R0 := R36
	712	[985]	MOVE     	R0 R29 ; R0 := R29
	713	[985]	MOVE     	R0 R53 ; R0 := R53
	714	[985]	MOVE     	R0 R54 ; R0 := R54
	715	[985]	MOVE     	R0 R8 ; R0 := R8
	716	[985]	MOVE     	R0 R0 ; R0 := R0
	717	[985]	MOVE     	R0 R32 ; R0 := R32
	718	[985]	MOVE     	R0 R4 ; R0 := R4
	719	[985]	MOVE     	R0 R27 ; R0 := R27
	720	[985]	MOVE     	R0 R55 ; R0 := R55
	721	[1025]	CLOSURE  	R90 22 ; R90 := closure(Function #23)
	722	[1025]	MOVE     	R0 R16 ; R0 := R16
	723	[1025]	MOVE     	R0 R60 ; R0 := R60
	724	[1025]	MOVE     	R0 R61 ; R0 := R61
	725	[1025]	MOVE     	R0 R3 ; R0 := R3
	726	[1025]	MOVE     	R0 R35 ; R0 := R35
	727	[1025]	MOVE     	R0 R36 ; R0 := R36
	728	[1025]	MOVE     	R0 R29 ; R0 := R29
	729	[1033]	CLOSURE  	R91 23 ; R91 := closure(Function #24)
	730	[1033]	MOVE     	R0 R16 ; R0 := R16
	731	[1234]	CLOSURE  	R92 24 ; R92 := closure(Function #25)
	732	[1234]	MOVE     	R0 R29 ; R0 := R29
	733	[1234]	MOVE     	R0 R87 ; R0 := R87
	734	[1234]	MOVE     	R0 R17 ; R0 := R17
	735	[1234]	MOVE     	R0 R27 ; R0 := R27
	736	[1234]	MOVE     	R0 R51 ; R0 := R51
	737	[1234]	MOVE     	R0 R23 ; R0 := R23
	738	[1234]	MOVE     	R0 R63 ; R0 := R63
	739	[1234]	MOVE     	R0 R11 ; R0 := R11
	740	[1234]	MOVE     	R0 R0 ; R0 := R0
	741	[1234]	MOVE     	R0 R36 ; R0 := R36
	742	[1234]	MOVE     	R0 R70 ; R0 := R70
	743	[1234]	MOVE     	R0 R82 ; R0 := R82
	744	[1234]	MOVE     	R0 R3 ; R0 := R3
	745	[1234]	MOVE     	R0 R88 ; R0 := R88
	746	[1234]	MOVE     	R0 R89 ; R0 := R89
	747	[1234]	MOVE     	R0 R16 ; R0 := R16
	748	[1234]	MOVE     	R0 R90 ; R0 := R90
	749	[1234]	MOVE     	R0 R81 ; R0 := R81
	750	[1234]	MOVE     	R0 R24 ; R0 := R24
	751	[1234]	MOVE     	R0 R83 ; R0 := R83
	752	[1234]	MOVE     	R0 R58 ; R0 := R58
	753	[1240]	CLOSURE  	R93 25 ; R93 := closure(Function #26)
	754	[1240]	MOVE     	R0 R92 ; R0 := R92
	755	[1236]	SETGLOBAL	R93 K310 ; Initialize := R93
	756	[1264]	CLOSURE  	R93 26 ; R93 := closure(Function #27)
	757	[1264]	MOVE     	R0 R29 ; R0 := R29
	758	[1329]	CLOSURE  	R94 27 ; R94 := closure(Function #28)
	759	[1329]	MOVE     	R0 R3 ; R0 := R3
	760	[1329]	MOVE     	R0 R93 ; R0 := R93
	761	[1329]	MOVE     	R0 R4 ; R0 := R4
	762	[1329]	MOVE     	R0 R27 ; R0 := R27
	763	[1329]	MOVE     	R0 R29 ; R0 := R29
	764	[1339]	CLOSURE  	R95 28 ; R95 := closure(Function #29)
	765	[1339]	MOVE     	R0 R87 ; R0 := R87
	766	[1372]	CLOSURE  	R17 29 ; R17 := closure(Function #30)
	767	[1372]	MOVE     	R0 R29 ; R0 := R29
	768	[1372]	MOVE     	R0 R95 ; R0 := R95
	769	[1372]	MOVE     	R0 R51 ; R0 := R51
	770	[1372]	MOVE     	R0 R94 ; R0 := R94
	771	[1372]	MOVE     	R0 R27 ; R0 := R27
	772	[1372]	MOVE     	R0 R92 ; R0 := R92
	773	[1376]	CLOSURE  	R96 30 ; R96 := closure(Function #31)
	774	[1376]	MOVE     	R0 R17 ; R0 := R17
	775	[1374]	SETGLOBAL	R96 K311 ; ToggleRailJack := R96
	776	[1384]	CLOSURE  	R96 31 ; R96 := closure(Function #32)
	777	[1388]	CLOSURE  	R97 32 ; R97 := closure(Function #33)
	778	[1388]	MOVE     	R0 R96 ; R0 := R96
	779	[1386]	SETGLOBAL	R97 K312 ; FindAnyRailjackMission := R97
	780	[1459]	CLOSURE  	R60 33 ; R60 := closure(Function #34)
	781	[1459]	MOVE     	R0 R67 ; R0 := R67
	782	[1459]	MOVE     	R0 R4 ; R0 := R4
	783	[1459]	MOVE     	R0 R29 ; R0 := R29
	784	[1459]	MOVE     	R0 R52 ; R0 := R52
	785	[1459]	MOVE     	R0 R3 ; R0 := R3
	786	[1459]	MOVE     	R0 R27 ; R0 := R27
	787	[1459]	MOVE     	R0 R72 ; R0 := R72
	788	[1459]	MOVE     	R0 R71 ; R0 := R71
	789	[1459]	MOVE     	R0 R51 ; R0 := R51
	790	[1459]	MOVE     	R0 R23 ; R0 := R23
	791	[1463]	CLOSURE  	R97 34 ; R97 := closure(Function #35)
	792	[1463]	MOVE     	R0 R60 ; R0 := R60
	793	[1461]	SETGLOBAL	R97 K313 ; UpdateButtons := R97
	794	[1468]	CLOSURE  	R52 35 ; R52 := closure(Function #36)
	795	[1468]	MOVE     	R0 R60 ; R0 := R60
	796	[1486]	CLOSURE  	R97 36 ; R97 := closure(Function #37)
	797	[1490]	CLOSURE  	R98 37 ; R98 := closure(Function #38)
	798	[1498]	CLOSURE  	R99 38 ; R99 := closure(Function #39)
	799	[1498]	MOVE     	R0 R19 ; R0 := R19
	800	[1514]	CLOSURE  	R100 39 ; R100 := closure(Function #40)
	801	[1569]	CLOSURE  	R101 40 ; R101 := closure(Function #41)
	802	[1569]	MOVE     	R0 R97 ; R0 := R97
	803	[1569]	MOVE     	R0 R6 ; R0 := R6
	804	[1569]	MOVE     	R0 R100 ; R0 := R100
	805	[1569]	MOVE     	R0 R27 ; R0 := R27
	806	[1569]	MOVE     	R0 R63 ; R0 := R63
	807	[1569]	MOVE     	R0 R19 ; R0 := R19
	808	[1593]	CLOSURE  	R102 41 ; R102 := closure(Function #42)
	809	[1593]	MOVE     	R0 R29 ; R0 := R29
	810	[1593]	MOVE     	R0 R1 ; R0 := R1
	811	[1646]	CLOSURE  	R103 42 ; R103 := closure(Function #43)
	812	[1646]	MOVE     	R0 R91 ; R0 := R91
	813	[1646]	MOVE     	R0 R29 ; R0 := R29
	814	[1646]	MOVE     	R0 R18 ; R0 := R18
	815	[1646]	MOVE     	R0 R23 ; R0 := R23
	816	[1646]	MOVE     	R0 R102 ; R0 := R102
	817	[1699]	CLOSURE  	R104 43 ; R104 := closure(Function #44)
	818	[1699]	MOVE     	R0 R27 ; R0 := R27
	819	[1699]	MOVE     	R0 R18 ; R0 := R18
	820	[1699]	MOVE     	R0 R29 ; R0 := R29
	821	[1699]	MOVE     	R0 R16 ; R0 := R16
	822	[1846]	CLOSURE  	R105 44 ; R105 := closure(Function #45)
	823	[1846]	MOVE     	R0 R73 ; R0 := R73
	824	[1846]	MOVE     	R0 R37 ; R0 := R37
	825	[1846]	MOVE     	R0 R18 ; R0 := R18
	826	[1846]	MOVE     	R0 R38 ; R0 := R38
	827	[1846]	MOVE     	R0 R30 ; R0 := R30
	828	[1846]	MOVE     	R0 R45 ; R0 := R45
	829	[1846]	MOVE     	R0 R41 ; R0 := R41
	830	[1846]	MOVE     	R0 R43 ; R0 := R43
	831	[1846]	MOVE     	R0 R44 ; R0 := R44
	832	[1846]	MOVE     	R0 R19 ; R0 := R19
	833	[1858]	CLOSURE  	R106 45 ; R106 := closure(Function #46)
	834	[1976]	CLOSURE  	R107 46 ; R107 := closure(Function #47)
	835	[1976]	MOVE     	R0 R98 ; R0 := R98
	836	[1976]	MOVE     	R0 R6 ; R0 := R6
	837	[1976]	MOVE     	R0 R63 ; R0 := R63
	838	[1976]	MOVE     	R0 R106 ; R0 := R106
	839	[1976]	MOVE     	R0 R73 ; R0 := R73
	840	[1976]	MOVE     	R0 R11 ; R0 := R11
	841	[1976]	MOVE     	R0 R19 ; R0 := R19
	842	[1976]	MOVE     	R0 R27 ; R0 := R27
	843	[1976]	MOVE     	R0 R101 ; R0 := R101
	844	[1980]	CLOSURE  	R108 47 ; R108 := closure(Function #48)
	845	[1978]	SETGLOBAL	R108 K314 ; RollOverRegionLabel := R108
	846	[1984]	CLOSURE  	R108 48 ; R108 := closure(Function #49)
	847	[1982]	SETGLOBAL	R108 K315 ; RollOutRegionLabel := R108
	848	[1998]	CLOSURE  	R108 49 ; R108 := closure(Function #50)
	849	[1998]	MOVE     	R0 R105 ; R0 := R105
	850	[1998]	MOVE     	R0 R107 ; R0 := R107
	851	[1998]	MOVE     	R0 R19 ; R0 := R19
	852	[2015]	CLOSURE  	R109 50 ; R109 := closure(Function #51)
	853	[2022]	CLOSURE  	R110 51 ; R110 := closure(Function #52)
	854	[2205]	CLOSURE  	R111 52 ; R111 := closure(Function #53)
	855	[2205]	MOVE     	R0 R91 ; R0 := R91
	856	[2205]	MOVE     	R0 R8 ; R0 := R8
	857	[2205]	MOVE     	R0 R29 ; R0 := R29
	858	[2205]	MOVE     	R0 R0 ; R0 := R0
	859	[2205]	MOVE     	R0 R38 ; R0 := R38
	860	[2205]	MOVE     	R0 R44 ; R0 := R44
	861	[2205]	MOVE     	R0 R27 ; R0 := R27
	862	[2205]	MOVE     	R0 R50 ; R0 := R50
	863	[2205]	MOVE     	R0 R36 ; R0 := R36
	864	[2205]	MOVE     	R0 R49 ; R0 := R49
	865	[2205]	MOVE     	R0 R48 ; R0 := R48
	866	[2205]	MOVE     	R0 R60 ; R0 := R60
	867	[2205]	MOVE     	R0 R110 ; R0 := R110
	868	[2205]	MOVE     	R0 R6 ; R0 := R6
	869	[2219]	CLOSURE  	R112 53 ; R112 := closure(Function #54)
	870	[2359]	CLOSURE  	R113 54 ; R113 := closure(Function #55)
	871	[2359]	MOVE     	R0 R29 ; R0 := R29
	872	[2359]	MOVE     	R0 R18 ; R0 := R18
	873	[2359]	MOVE     	R0 R23 ; R0 := R23
	874	[2359]	MOVE     	R0 R102 ; R0 := R102
	875	[2359]	MOVE     	R0 R11 ; R0 := R11
	876	[2359]	MOVE     	R0 R32 ; R0 := R32
	877	[2671]	CLOSURE  	R114 55 ; R114 := closure(Function #56)
	878	[2671]	MOVE     	R0 R113 ; R0 := R113
	879	[2671]	MOVE     	R0 R29 ; R0 := R29
	880	[2671]	MOVE     	R0 R0 ; R0 := R0
	881	[2671]	MOVE     	R0 R10 ; R0 := R10
	882	[2671]	MOVE     	R0 R18 ; R0 := R18
	883	[2671]	MOVE     	R0 R97 ; R0 := R97
	884	[2671]	MOVE     	R0 R7 ; R0 := R7
	885	[2671]	MOVE     	R0 R8 ; R0 := R8
	886	[2671]	MOVE     	R0 R112 ; R0 := R112
	887	[2671]	MOVE     	R0 R19 ; R0 := R19
	888	[2671]	MOVE     	R0 R99 ; R0 := R99
	889	[2671]	MOVE     	R0 R13 ; R0 := R13
	890	[2793]	CLOSURE  	R115 56 ; R115 := closure(Function #57)
	891	[2793]	MOVE     	R0 R35 ; R0 := R35
	892	[2793]	MOVE     	R0 R91 ; R0 := R91
	893	[2793]	MOVE     	R0 R103 ; R0 := R103
	894	[2793]	MOVE     	R0 R104 ; R0 := R104
	895	[2793]	MOVE     	R0 R27 ; R0 := R27
	896	[2793]	MOVE     	R0 R8 ; R0 := R8
	897	[2793]	MOVE     	R0 R18 ; R0 := R18
	898	[2793]	MOVE     	R0 R75 ; R0 := R75
	899	[2908]	CLOSURE  	R116 57 ; R116 := closure(Function #58)
	900	[2908]	MOVE     	R0 R29 ; R0 := R29
	901	[2908]	MOVE     	R0 R8 ; R0 := R8
	902	[2908]	MOVE     	R0 R66 ; R0 := R66
	903	[2908]	MOVE     	R0 R9 ; R0 := R9
	904	[2908]	MOVE     	R0 R27 ; R0 := R27
	905	[2926]	CLOSURE  	R117 58 ; R117 := closure(Function #59)
	906	[2926]	MOVE     	R0 R116 ; R0 := R116
	907	[2926]	MOVE     	R0 R7 ; R0 := R7
	908	[2926]	MOVE     	R0 R115 ; R0 := R115
	909	[2926]	MOVE     	R0 R82 ; R0 := R82
	910	[2935]	CLOSURE  	R118 59 ; R118 := closure(Function #60)
	911	[2935]	MOVE     	R0 R27 ; R0 := R27
	912	[2961]	CLOSURE  	R119 60 ; R119 := closure(Function #61)
	913	[2961]	MOVE     	R0 R91 ; R0 := R91
	914	[2961]	MOVE     	R0 R7 ; R0 := R7
	915	[2961]	MOVE     	R0 R118 ; R0 := R118
	916	[2989]	CLOSURE  	R120 61 ; R120 := closure(Function #62)
	917	[2989]	MOVE     	R0 R91 ; R0 := R91
	918	[2989]	MOVE     	R0 R7 ; R0 := R7
	919	[2989]	MOVE     	R0 R29 ; R0 := R29
	920	[2989]	MOVE     	R0 R115 ; R0 := R115
	921	[2989]	MOVE     	R0 R18 ; R0 := R18
	922	[3013]	CLOSURE  	R121 62 ; R121 := closure(Function #63)
	923	[3013]	MOVE     	R0 R7 ; R0 := R7
	924	[3013]	MOVE     	R0 R27 ; R0 := R27
	925	[3029]	CLOSURE  	R122 63 ; R122 := closure(Function #64)
	926	[3466]	CLOSURE  	R123 64 ; R123 := closure(Function #65)
	927	[3466]	MOVE     	R0 R7 ; R0 := R7
	928	[3466]	MOVE     	R0 R8 ; R0 := R8
	929	[3466]	MOVE     	R0 R98 ; R0 := R98
	930	[3466]	MOVE     	R0 R29 ; R0 := R29
	931	[3466]	MOVE     	R0 R0 ; R0 := R0
	932	[3466]	MOVE     	R0 R10 ; R0 := R10
	933	[3466]	MOVE     	R0 R63 ; R0 := R63
	934	[3466]	MOVE     	R0 R16 ; R0 := R16
	935	[3466]	MOVE     	R0 R114 ; R0 := R114
	936	[3466]	MOVE     	R0 R11 ; R0 := R11
	937	[3466]	MOVE     	R0 R27 ; R0 := R27
	938	[3466]	MOVE     	R0 R122 ; R0 := R122
	939	[3466]	MOVE     	R0 R56 ; R0 := R56
	940	[3466]	MOVE     	R0 R76 ; R0 := R76
	941	[3476]	CLOSURE  	R124 65 ; R124 := closure(Function #66)
	942	[3488]	CLOSURE  	R125 66 ; R125 := closure(Function #67)
	943	[3525]	CLOSURE  	R126 67 ; R126 := closure(Function #68)
	944	[3525]	MOVE     	R0 R8 ; R0 := R8
	945	[3559]	CLOSURE  	R127 68 ; R127 := closure(Function #69)
	946	[3559]	MOVE     	R0 R124 ; R0 := R124
	947	[3559]	MOVE     	R0 R126 ; R0 := R126
	948	[3559]	MOVE     	R0 R125 ; R0 := R125
	949	[3632]	CLOSURE  	R128 69 ; R128 := closure(Function #70)
	950	[3632]	MOVE     	R0 R8 ; R0 := R8
	951	[3632]	MOVE     	R0 R63 ; R0 := R63
	952	[3632]	MOVE     	R0 R23 ; R0 := R23
	953	[3674]	CLOSURE  	R129 70 ; R129 := closure(Function #71)
	954	[3674]	MOVE     	R0 R27 ; R0 := R27
	955	[3674]	MOVE     	R0 R19 ; R0 := R19
	956	[3674]	MOVE     	R0 R127 ; R0 := R127
	957	[3725]	CLOSURE  	R130 71 ; R130 := closure(Function #72)
	958	[3725]	MOVE     	R0 R27 ; R0 := R27
	959	[3735]	CLOSURE  	R131 72 ; R131 := closure(Function #73)
	960	[3735]	MOVE     	R0 R27 ; R0 := R27
	961	[3735]	MOVE     	R0 R7 ; R0 := R7
	962	[3745]	CLOSURE  	R132 73 ; R132 := closure(Function #74)
	963	[3850]	CLOSURE  	R133 74 ; R133 := closure(Function #75)
	964	[3850]	MOVE     	R0 R27 ; R0 := R27
	965	[3850]	MOVE     	R0 R2 ; R0 := R2
	966	[3850]	MOVE     	R0 R18 ; R0 := R18
	967	[3850]	MOVE     	R0 R63 ; R0 := R63
	968	[3850]	MOVE     	R0 R132 ; R0 := R132
	969	[3850]	MOVE     	R0 R108 ; R0 := R108
	970	[3850]	MOVE     	R0 R123 ; R0 := R123
	971	[3850]	MOVE     	R0 R128 ; R0 := R128
	972	[3850]	MOVE     	R0 R131 ; R0 := R131
	973	[3850]	MOVE     	R0 R85 ; R0 := R85
	974	[3850]	MOVE     	R0 R8 ; R0 := R8
	975	[3850]	MOVE     	R0 R61 ; R0 := R61
	976	[3850]	MOVE     	R0 R130 ; R0 := R130
	977	[3850]	MOVE     	R0 R111 ; R0 := R111
	978	[3850]	MOVE     	R0 R93 ; R0 := R93
	979	[3872]	CLOSURE  	R134 75 ; R134 := closure(Function #76)
	980	[3872]	MOVE     	R0 R133 ; R0 := R133
	981	[3872]	MOVE     	R0 R27 ; R0 := R27
	982	[3889]	CLOSURE  	R135 76 ; R135 := closure(Function #77)
	983	[3889]	MOVE     	R0 R30 ; R0 := R30
	984	[3898]	CLOSURE  	R136 77 ; R136 := closure(Function #78)
	985	[3906]	CLOSURE  	R137 78 ; R137 := closure(Function #79)
	986	[3962]	CLOSURE  	R138 79 ; R138 := closure(Function #80)
	987	[3962]	MOVE     	R0 R137 ; R0 := R137
	988	[3962]	MOVE     	R0 R29 ; R0 := R29
	989	[3962]	MOVE     	R0 R136 ; R0 := R136
	990	[3962]	MOVE     	R0 R113 ; R0 := R113
	991	[3989]	CLOSURE  	R139 80 ; R139 := closure(Function #81)
	992	[3989]	MOVE     	R0 R15 ; R0 := R15
	993	[4003]	CLOSURE  	R140 81 ; R140 := closure(Function #82)
	994	[4003]	MOVE     	R0 R26 ; R0 := R26
	995	[4013]	CLOSURE  	R141 82 ; R141 := closure(Function #83)
	996	[4013]	MOVE     	R0 R22 ; R0 := R22
	997	[4013]	MOVE     	R0 R26 ; R0 := R26
	998	[4029]	CLOSURE  	R142 83 ; R142 := closure(Function #84)
	999	[4029]	MOVE     	R0 R29 ; R0 := R29
	1000	[4038]	CLOSURE  	R143 84 ; R143 := closure(Function #85)
	1001	[4038]	MOVE     	R0 R142 ; R0 := R142
	1002	[4031]	SETGLOBAL	R143 K316 ; AbortConfirm := R143
	1003	[4042]	CLOSURE  	R143 85 ; R143 := closure(Function #86)
	1004	[4042]	MOVE     	R0 R27 ; R0 := R27
	1005	[4040]	SETGLOBAL	R143 K317 ; ShowQuestConfirm := R143
	1006	[4050]	CLOSURE  	R143 86 ; R143 := closure(Function #87)
	1007	[4044]	SETGLOBAL	R143 K318 ; CanOpenRailJackMissionInCrewship := R143
	1008	[4053]	CLOSURE  	R143 87 ; R143 := closure(Function #88)
	1009	[4057]	CLOSURE  	R144 88 ; R144 := closure(Function #89)
	1010	[4057]	MOVE     	R0 R143 ; R0 := R143
	1011	[4055]	SETGLOBAL	R144 K319 ; OnUpdateSessionSettings := R144
	1012	[4064]	CLOSURE  	R144 89 ; R144 := closure(Function #90)
	1013	[4064]	MOVE     	R0 R87 ; R0 := R87
	1014	[4095]	CLOSURE  	R145 90 ; R145 := closure(Function #91)
	1015	[4095]	MOVE     	R0 R29 ; R0 := R29
	1016	[4095]	MOVE     	R0 R27 ; R0 := R27
	1017	[4208]	CLOSURE  	R55 91 ; R55 := closure(Function #92)
	1018	[4208]	MOVE     	R0 R32 ; R0 := R32
	1019	[4208]	MOVE     	R0 R29 ; R0 := R29
	1020	[4208]	MOVE     	R0 R145 ; R0 := R145
	1021	[4208]	MOVE     	R0 R144 ; R0 := R144
	1022	[4208]	MOVE     	R0 R31 ; R0 := R31
	1023	[4208]	MOVE     	R0 R143 ; R0 := R143
	1024	[4208]	MOVE     	R0 R51 ; R0 := R51
	1025	[4208]	MOVE     	R0 R142 ; R0 := R142
	1026	[4226]	CLOSURE  	R53 92 ; R53 := closure(Function #93)
	1027	[4226]	MOVE     	R0 R4 ; R0 := R4
	1028	[4239]	CLOSURE  	R146 93 ; R146 := closure(Function #94)
	1029	[4239]	MOVE     	R0 R4 ; R0 := R4
	1030	[4239]	MOVE     	R0 R55 ; R0 := R55
	1031	[4228]	SETGLOBAL	R146 K320 ; ConfirmInvasionFaction := R146
	1032	[4285]	CLOSURE  	R54 94 ; R54 := closure(Function #95)
	1033	[4285]	MOVE     	R0 R3 ; R0 := R3
	1034	[4285]	MOVE     	R0 R4 ; R0 := R4
	1035	[4285]	MOVE     	R0 R145 ; R0 := R145
	1036	[4285]	MOVE     	R0 R29 ; R0 := R29
	1037	[4306]	CLOSURE  	R146 95 ; R146 := closure(Function #96)
	1038	[4306]	MOVE     	R0 R4 ; R0 := R4
	1039	[4306]	MOVE     	R0 R3 ; R0 := R3
	1040	[4306]	MOVE     	R0 R55 ; R0 := R55
	1041	[4306]	MOVE     	R0 R29 ; R0 := R29
	1042	[4287]	SETGLOBAL	R146 K321 ; OnVoidProjectionChosen := R146
	1043	[4309]	CLOSURE  	R146 96 ; R146 := closure(Function #97)
	1044	[4308]	SETGLOBAL	R146 K322 ; ConfirmIncompatibleOnlineMode := R146
	1045	[4331]	CLOSURE  	R146 97 ; R146 := closure(Function #98)
	1046	[4331]	MOVE     	R0 R4 ; R0 := R4
	1047	[4331]	MOVE     	R0 R27 ; R0 := R27
	1048	[4331]	MOVE     	R0 R67 ; R0 := R67
	1049	[4352]	CLOSURE  	R147 98 ; R147 := closure(Function #99)
	1050	[4352]	MOVE     	R0 R4 ; R0 := R4
	1051	[4352]	MOVE     	R0 R29 ; R0 := R29
	1052	[4352]	MOVE     	R0 R55 ; R0 := R55
	1053	[4333]	SETGLOBAL	R147 K323 ; ConfirmNightmare := R147
	1054	[4355]	CLOSURE  	R147 99 ; R147 := closure(Function #100)
	1055	[4354]	SETGLOBAL	R147 K324 ; ConfirmRaidSelection := R147
	1056	[4382]	CLOSURE  	R147 100 ; R147 := closure(Function #101)
	1057	[4382]	MOVE     	R0 R3 ; R0 := R3
	1058	[4382]	MOVE     	R0 R29 ; R0 := R29
	1059	[4411]	CLOSURE  	R148 101 ; R148 := closure(Function #102)
	1060	[4411]	MOVE     	R0 R3 ; R0 := R3
	1061	[4411]	MOVE     	R0 R16 ; R0 := R16
	1062	[4411]	MOVE     	R0 R29 ; R0 := R29
	1063	[4411]	MOVE     	R0 R55 ; R0 := R55
	1064	[4384]	SETGLOBAL	R148 K325 ; ConfirmWagerSelection := R148
	1065	[4468]	CLOSURE  	R148 102 ; R148 := closure(Function #103)
	1066	[4468]	MOVE     	R0 R29 ; R0 := R29
	1067	[4468]	MOVE     	R0 R16 ; R0 := R16
	1068	[4468]	MOVE     	R0 R27 ; R0 := R27
	1069	[4468]	MOVE     	R0 R31 ; R0 := R31
	1070	[4413]	SETGLOBAL	R148 K326 ; OpenSoloMission := R148
	1071	[4486]	CLOSURE  	R148 103 ; R148 := closure(Function #104)
	1072	[4486]	MOVE     	R0 R4 ; R0 := R4
	1073	[4470]	SETGLOBAL	R148 K327 ; ConfirmSoloMission := R148
	1074	[4731]	CLOSURE  	R148 104 ; R148 := closure(Function #105)
	1075	[4731]	MOVE     	R0 R29 ; R0 := R29
	1076	[4731]	MOVE     	R0 R4 ; R0 := R4
	1077	[4731]	MOVE     	R0 R27 ; R0 := R27
	1078	[4731]	MOVE     	R0 R55 ; R0 := R55
	1079	[4731]	MOVE     	R0 R23 ; R0 := R23
	1080	[4731]	MOVE     	R0 R67 ; R0 := R67
	1081	[4488]	SETGLOBAL	R148 K328 ; GotHubInstances := R148
	1082	[4756]	CLOSURE  	R148 105 ; R148 := closure(Function #106)
	1083	[4756]	MOVE     	R0 R29 ; R0 := R29
	1084	[4777]	CLOSURE  	R149 106 ; R149 := closure(Function #107)
	1085	[4777]	MOVE     	R0 R29 ; R0 := R29
	1086	[4777]	MOVE     	R0 R27 ; R0 := R27
	1087	[4790]	CLOSURE  	R150 107 ; R150 := closure(Function #108)
	1088	[4790]	MOVE     	R0 R31 ; R0 := R31
	1089	[4826]	CLOSURE  	R151 108 ; R151 := closure(Function #109)
	1090	[4826]	MOVE     	R0 R150 ; R0 := R150
	1091	[4826]	MOVE     	R0 R27 ; R0 := R27
	1092	[4849]	CLOSURE  	R152 109 ; R152 := closure(Function #110)
	1093	[4849]	MOVE     	R0 R36 ; R0 := R36
	1094	[5105]	CLOSURE  	R153 110 ; R153 := closure(Function #111)
	1095	[5105]	MOVE     	R0 R29 ; R0 := R29
	1096	[5105]	MOVE     	R0 R0 ; R0 := R0
	1097	[5105]	MOVE     	R0 R27 ; R0 := R27
	1098	[5105]	MOVE     	R0 R152 ; R0 := R152
	1099	[5105]	MOVE     	R0 R151 ; R0 := R151
	1100	[5105]	MOVE     	R0 R144 ; R0 := R144
	1101	[5105]	MOVE     	R0 R149 ; R0 := R149
	1102	[5105]	MOVE     	R0 R55 ; R0 := R55
	1103	[5105]	MOVE     	R0 R16 ; R0 := R16
	1104	[5105]	MOVE     	R0 R103 ; R0 := R103
	1105	[5105]	MOVE     	R0 R35 ; R0 := R35
	1106	[5105]	MOVE     	R0 R54 ; R0 := R54
	1107	[5105]	MOVE     	R0 R53 ; R0 := R53
	1108	[5105]	MOVE     	R0 R147 ; R0 := R147
	1109	[5105]	MOVE     	R0 R67 ; R0 := R67
	1110	[5105]	MOVE     	R0 R146 ; R0 := R146
	1111	[5105]	MOVE     	R0 R148 ; R0 := R148
	1112	[5105]	MOVE     	R0 R91 ; R0 := R91
	1113	[5105]	MOVE     	R0 R32 ; R0 := R32
	1114	[5105]	MOVE     	R0 R4 ; R0 := R4
	1115	[5114]	CLOSURE  	R154 111 ; R154 := closure(Function #112)
	1116	[5114]	MOVE     	R0 R153 ; R0 := R153
	1117	[5114]	MOVE     	R0 R67 ; R0 := R67
	1118	[5107]	SETGLOBAL	R154 K329 ; StartMissioniOS := R154
	1119	[5118]	CLOSURE  	R154 112 ; R154 := closure(Function #113)
	1120	[5118]	MOVE     	R0 R95 ; R0 := R95
	1121	[5116]	SETGLOBAL	R154 K330 ; InitializeRailJackMap := R154
	1122	[5122]	CLOSURE  	R154 113 ; R154 := closure(Function #114)
	1123	[5122]	MOVE     	R0 R27 ; R0 := R27
	1124	[5120]	SETGLOBAL	R154 K331 ; InitialFade := R154
	1125	[5187]	CLOSURE  	R154 114 ; R154 := closure(Function #115)
	1126	[5187]	MOVE     	R0 R29 ; R0 := R29
	1127	[5187]	MOVE     	R0 R0 ; R0 := R0
	1128	[5187]	MOVE     	R0 R3 ; R0 := R3
	1129	[5187]	MOVE     	R0 R4 ; R0 := R4
	1130	[5187]	MOVE     	R0 R135 ; R0 := R135
	1131	[5187]	MOVE     	R0 R138 ; R0 := R138
	1132	[5187]	MOVE     	R0 R74 ; R0 := R74
	1133	[5187]	MOVE     	R0 R139 ; R0 := R139
	1134	[5187]	MOVE     	R0 R140 ; R0 := R140
	1135	[5187]	MOVE     	R0 R16 ; R0 := R16
	1136	[5187]	MOVE     	R0 R60 ; R0 := R60
	1137	[5124]	SETGLOBAL	R154 K332 ; InitializeMore := R154
	1138	[5191]	CLOSURE  	R154 115 ; R154 := closure(Function #116)
	1139	[5191]	MOVE     	R0 R94 ; R0 := R94
	1140	[5189]	SETGLOBAL	R154 K333 ; Shutdown := R154
	1141	[5205]	CLOSURE  	R154 116 ; R154 := closure(Function #117)
	1142	[5205]	MOVE     	R0 R2 ; R0 := R2
	1143	[5215]	CLOSURE  	R155 117 ; R155 := closure(Function #118)
	1144	[5215]	MOVE     	R0 R27 ; R0 := R27
	1145	[5238]	CLOSURE  	R156 118 ; R156 := closure(Function #119)
	1146	[5238]	MOVE     	R0 R27 ; R0 := R27
	1147	[5238]	MOVE     	R0 R6 ; R0 := R6
	1148	[5396]	CLOSURE  	R157 119 ; R157 := closure(Function #120)
	1149	[5396]	MOVE     	R0 R57 ; R0 := R57
	1150	[5396]	MOVE     	R0 R11 ; R0 := R11
	1151	[5396]	MOVE     	R0 R19 ; R0 := R19
	1152	[5396]	MOVE     	R0 R156 ; R0 := R156
	1153	[5396]	MOVE     	R0 R27 ; R0 := R27
	1154	[5396]	MOVE     	R0 R6 ; R0 := R6
	1155	[5416]	CLOSURE  	R158 120 ; R158 := closure(Function #121)
	1156	[5416]	MOVE     	R0 R38 ; R0 := R38
	1157	[5416]	MOVE     	R0 R46 ; R0 := R46
	1158	[5753]	CLOSURE  	R159 121 ; R159 := closure(Function #122)
	1159	[5753]	MOVE     	R0 R25 ; R0 := R25
	1160	[5753]	MOVE     	R0 R24 ; R0 := R24
	1161	[5753]	MOVE     	R0 R26 ; R0 := R26
	1162	[5753]	MOVE     	R0 R155 ; R0 := R155
	1163	[5753]	MOVE     	R0 R7 ; R0 := R7
	1164	[5753]	MOVE     	R0 R112 ; R0 := R112
	1165	[5753]	MOVE     	R0 R127 ; R0 := R127
	1166	[5753]	MOVE     	R0 R157 ; R0 := R157
	1167	[5753]	MOVE     	R0 R22 ; R0 := R22
	1168	[5753]	MOVE     	R0 R27 ; R0 := R27
	1169	[5753]	MOVE     	R0 R75 ; R0 := R75
	1170	[5753]	MOVE     	R0 R124 ; R0 := R124
	1171	[5753]	MOVE     	R0 R19 ; R0 := R19
	1172	[5753]	MOVE     	R0 R14 ; R0 := R14
	1173	[5753]	MOVE     	R0 R110 ; R0 := R110
	1174	[5753]	MOVE     	R0 R2 ; R0 := R2
	1175	[5753]	MOVE     	R0 R38 ; R0 := R38
	1176	[5753]	MOVE     	R0 R44 ; R0 := R44
	1177	[5753]	MOVE     	R0 R45 ; R0 := R45
	1178	[5753]	MOVE     	R0 R46 ; R0 := R46
	1179	[5753]	MOVE     	R0 R158 ; R0 := R158
	1180	[5753]	MOVE     	R0 R18 ; R0 := R18
	1181	[5753]	MOVE     	R0 R47 ; R0 := R47
	1182	[5767]	CLOSURE  	R160 122 ; R160 := closure(Function #123)
	1183	[5767]	MOVE     	R0 R27 ; R0 := R27
	1184	[5805]	CLOSURE  	R161 123 ; R161 := closure(Function #124)
	1185	[5805]	MOVE     	R0 R63 ; R0 := R63
	1186	[5805]	MOVE     	R0 R50 ; R0 := R50
	1187	[5805]	MOVE     	R0 R73 ; R0 := R73
	1188	[5805]	MOVE     	R0 R6 ; R0 := R6
	1189	[5805]	MOVE     	R0 R19 ; R0 := R19
	1190	[5805]	MOVE     	R0 R127 ; R0 := R127
	1191	[5832]	CLOSURE  	R162 124 ; R162 := closure(Function #125)
	1192	[5832]	MOVE     	R0 R4 ; R0 := R4
	1193	[5832]	MOVE     	R0 R83 ; R0 := R83
	1194	[5839]	CLOSURE  	R163 125 ; R163 := closure(Function #126)
	1195	[5839]	MOVE     	R0 R27 ; R0 := R27
	1196	[6229]	CLOSURE  	R164 126 ; R164 := closure(Function #127)
	1197	[6229]	MOVE     	R0 R2 ; R0 := R2
	1198	[6229]	MOVE     	R0 R25 ; R0 := R25
	1199	[6229]	MOVE     	R0 R24 ; R0 := R24
	1200	[6229]	MOVE     	R0 R19 ; R0 := R19
	1201	[6229]	MOVE     	R0 R6 ; R0 := R6
	1202	[6229]	MOVE     	R0 R59 ; R0 := R59
	1203	[6229]	MOVE     	R0 R7 ; R0 := R7
	1204	[6229]	MOVE     	R0 R47 ; R0 := R47
	1205	[6229]	MOVE     	R0 R67 ; R0 := R67
	1206	[6229]	MOVE     	R0 R163 ; R0 := R163
	1207	[6229]	MOVE     	R0 R18 ; R0 := R18
	1208	[6229]	MOVE     	R0 R86 ; R0 := R86
	1209	[6229]	MOVE     	R0 R162 ; R0 := R162
	1210	[6229]	MOVE     	R0 R63 ; R0 := R63
	1211	[6229]	MOVE     	R0 R27 ; R0 := R27
	1212	[6229]	MOVE     	R0 R160 ; R0 := R160
	1213	[6229]	MOVE     	R0 R11 ; R0 := R11
	1214	[6229]	MOVE     	R0 R29 ; R0 := R29
	1215	[6229]	MOVE     	R0 R161 ; R0 := R161
	1216	[6229]	MOVE     	R0 R38 ; R0 := R38
	1217	[6231]	GETGLOBAL	R165 K37 ; R165 := 0xa421af95
	1218	[6231]	CALL     	R165 1 2 ; R165 := R165()
	1219	[6242]	CLOSURE  	R166 127 ; R166 := closure(Function #128)
	1220	[6242]	MOVE     	R0 R20 ; R0 := R20
	1221	[6242]	MOVE     	R0 R22 ; R0 := R22
	1222	[6242]	MOVE     	R0 R155 ; R0 := R155
	1223	[6242]	MOVE     	R0 R165 ; R0 := R165
	1224	[6254]	CLOSURE  	R58 128 ; R58 := closure(Function #129)
	1225	[6254]	MOVE     	R0 R57 ; R0 := R57
	1226	[6254]	MOVE     	R0 R7 ; R0 := R7
	1227	[6254]	MOVE     	R0 R27 ; R0 := R27
	1228	[6266]	CLOSURE  	R167 129 ; R167 := closure(Function #130)
	1229	[6266]	MOVE     	R0 R4 ; R0 := R4
	1230	[6266]	MOVE     	R0 R27 ; R0 := R27
	1231	[6279]	CLOSURE  	R168 130 ; R168 := closure(Function #131)
	1232	[6279]	MOVE     	R0 R7 ; R0 := R7
	1233	[6281]	GETGLOBAL	R169 K159 ; R169 := mRailJack
	1234	[6281]	LOADK    	R170 K334 ; R170 := "IntersectVoidPlane"
	1235	[6293]	CLOSURE  	R171 131 ; R171 := closure(Function #132)
	1236	[6293]	MOVE     	R0 R27 ; R0 := R27
	1237	[6293]	SETTABLE 	R169 R170 R171 ; R169[R170] := R171
	1238	[6295]	GETGLOBAL	R169 K159 ; R169 := mRailJack
	1239	[6295]	LOADK    	R170 K335 ; R170 := "SetDistortions"
	1240	[6309]	CLOSURE  	R171 132 ; R171 := closure(Function #133)
	1241	[6309]	SETTABLE 	R169 R170 R171 ; R169[R170] := R171
	1242	[6768]	CLOSURE  	R169 133 ; R169 := closure(Function #134)
	1243	[6768]	MOVE     	R0 R36 ; R0 := R36
	1244	[6768]	MOVE     	R0 R2 ; R0 := R2
	1245	[6768]	MOVE     	R0 R7 ; R0 := R7
	1246	[6768]	MOVE     	R0 R34 ; R0 := R34
	1247	[6768]	MOVE     	R0 R27 ; R0 := R27
	1248	[6768]	MOVE     	R0 R41 ; R0 := R41
	1249	[6768]	MOVE     	R0 R42 ; R0 := R42
	1250	[6768]	MOVE     	R0 R4 ; R0 := R4
	1251	[6768]	MOVE     	R0 R5 ; R0 := R5
	1252	[6768]	MOVE     	R0 R3 ; R0 := R3
	1253	[6768]	MOVE     	R0 R68 ; R0 := R68
	1254	[6768]	MOVE     	R0 R8 ; R0 := R8
	1255	[6768]	MOVE     	R0 R91 ; R0 := R91
	1256	[6768]	MOVE     	R0 R167 ; R0 := R167
	1257	[6768]	MOVE     	R0 R16 ; R0 := R16
	1258	[6768]	MOVE     	R0 R153 ; R0 := R153
	1259	[6768]	MOVE     	R0 R11 ; R0 := R11
	1260	[6768]	MOVE     	R0 R48 ; R0 := R48
	1261	[6768]	MOVE     	R0 R49 ; R0 := R49
	1262	[6768]	MOVE     	R0 R32 ; R0 := R32
	1263	[6768]	MOVE     	R0 R134 ; R0 := R134
	1264	[6768]	MOVE     	R0 R159 ; R0 := R159
	1265	[6768]	MOVE     	R0 R154 ; R0 := R154
	1266	[6768]	MOVE     	R0 R164 ; R0 := R164
	1267	[6768]	MOVE     	R0 R166 ; R0 := R166
	1268	[6768]	MOVE     	R0 R79 ; R0 := R79
	1269	[6768]	MOVE     	R0 R38 ; R0 := R38
	1270	[6768]	MOVE     	R0 R19 ; R0 := R19
	1271	[6768]	MOVE     	R0 R18 ; R0 := R18
	1272	[6768]	MOVE     	R0 R121 ; R0 := R121
	1273	[6768]	MOVE     	R0 R39 ; R0 := R39
	1274	[6768]	MOVE     	R0 R40 ; R0 := R40
	1275	[6768]	MOVE     	R0 R35 ; R0 := R35
	1276	[6768]	MOVE     	R0 R64 ; R0 := R64
	1277	[6768]	MOVE     	R0 R168 ; R0 := R168
	1278	[6768]	MOVE     	R0 R60 ; R0 := R60
	1279	[6768]	MOVE     	R0 R67 ; R0 := R67
	1280	[6768]	MOVE     	R0 R15 ; R0 := R15
	1281	[6768]	MOVE     	R0 R56 ; R0 := R56
	1282	[6311]	SETGLOBAL	R169 K336 ; Update := R169
	1283	[6855]	CLOSURE  	R51 134 ; R51 := closure(Function #135)
	1284	[6855]	MOVE     	R0 R3 ; R0 := R3
	1285	[6855]	MOVE     	R0 R59 ; R0 := R59
	1286	[6855]	MOVE     	R0 R4 ; R0 := R4
	1287	[6855]	MOVE     	R0 R25 ; R0 := R25
	1288	[6855]	MOVE     	R0 R24 ; R0 := R24
	1289	[6855]	MOVE     	R0 R81 ; R0 := R81
	1290	[6855]	MOVE     	R0 R27 ; R0 := R27
	1291	[6855]	MOVE     	R0 R150 ; R0 := R150
	1292	[6855]	MOVE     	R0 R38 ; R0 := R38
	1293	[6855]	MOVE     	R0 R44 ; R0 := R44
	1294	[6855]	MOVE     	R0 R151 ; R0 := R151
	1295	[6859]	CLOSURE  	R169 135 ; R169 := closure(Function #136)
	1296	[6859]	MOVE     	R0 R51 ; R0 := R51
	1297	[6857]	SETGLOBAL	R169 K337 ; TransitionOut := R169
	1298	[6873]	CLOSURE  	R169 136 ; R169 := closure(Function #137)
	1299	[6923]	CLOSURE  	R170 137 ; R170 := closure(Function #138)
	1300	[6923]	MOVE     	R0 R67 ; R0 := R67
	1301	[6923]	MOVE     	R0 R4 ; R0 := R4
	1302	[6923]	MOVE     	R0 R27 ; R0 := R27
	1303	[6923]	MOVE     	R0 R15 ; R0 := R15
	1304	[6923]	MOVE     	R0 R20 ; R0 := R20
	1305	[6923]	MOVE     	R0 R25 ; R0 := R25
	1306	[6923]	MOVE     	R0 R24 ; R0 := R24
	1307	[6923]	MOVE     	R0 R26 ; R0 := R26
	1308	[6927]	CLOSURE  	R171 138 ; R171 := closure(Function #139)
	1309	[6927]	MOVE     	R0 R170 ; R0 := R170
	1310	[6925]	SETGLOBAL	R171 K338 ; onKeyUp_MENU_CLICK := R171
	1311	[6949]	CLOSURE  	R50 139 ; R50 := closure(Function #140)
	1312	[6974]	CLOSURE  	R171 140 ; R171 := closure(Function #141)
	1313	[6986]	CLOSURE  	R172 141 ; R172 := closure(Function #142)
	1314	[6986]	MOVE     	R0 R109 ; R0 := R109
	1315	[7047]	CLOSURE  	R49 142 ; R49 := closure(Function #143)
	1316	[7047]	MOVE     	R0 R156 ; R0 := R156
	1317	[7047]	MOVE     	R0 R172 ; R0 := R172
	1318	[7047]	MOVE     	R0 R50 ; R0 := R50
	1319	[7047]	MOVE     	R0 R14 ; R0 := R14
	1320	[7047]	MOVE     	R0 R27 ; R0 := R27
	1321	[7047]	MOVE     	R0 R60 ; R0 := R60
	1322	[7047]	MOVE     	R0 R42 ; R0 := R42
	1323	[7047]	MOVE     	R0 R33 ; R0 := R33
	1324	[7115]	CLOSURE  	R48 143 ; R48 := closure(Function #144)
	1325	[7115]	MOVE     	R0 R156 ; R0 := R156
	1326	[7115]	MOVE     	R0 R172 ; R0 := R172
	1327	[7115]	MOVE     	R0 R27 ; R0 := R27
	1328	[7115]	MOVE     	R0 R50 ; R0 := R50
	1329	[7115]	MOVE     	R0 R42 ; R0 := R42
	1330	[7123]	CLOSURE  	R173 144 ; R173 := closure(Function #145)
	1331	[7117]	SETGLOBAL	R173 K339 ; OnEmblemReady := R173
	1332	[7127]	CLOSURE  	R173 145 ; R173 := closure(Function #146)
	1333	[7125]	SETGLOBAL	R173 K340 ; LoadClanEmblem := R173
	1334	[7214]	CLOSURE  	R173 146 ; R173 := closure(Function #147)
	1335	[7214]	MOVE     	R0 R99 ; R0 := R99
	1336	[7214]	MOVE     	R0 R7 ; R0 := R7
	1337	[7214]	MOVE     	R0 R25 ; R0 := R25
	1338	[7214]	MOVE     	R0 R24 ; R0 := R24
	1339	[7214]	MOVE     	R0 R77 ; R0 := R77
	1340	[7214]	MOVE     	R0 R36 ; R0 := R36
	1341	[7214]	MOVE     	R0 R152 ; R0 := R152
	1342	[7214]	MOVE     	R0 R27 ; R0 := R27
	1343	[7214]	MOVE     	R0 R91 ; R0 := R91
	1344	[7214]	MOVE     	R0 R167 ; R0 := R167
	1345	[7214]	MOVE     	R0 R35 ; R0 := R35
	1346	[7214]	MOVE     	R0 R16 ; R0 := R16
	1347	[7214]	MOVE     	R0 R8 ; R0 := R8
	1348	[7214]	MOVE     	R0 R13 ; R0 := R13
	1349	[7214]	MOVE     	R0 R67 ; R0 := R67
	1350	[7275]	CLOSURE  	R59 147 ; R59 := closure(Function #148)
	1351	[7275]	MOVE     	R0 R67 ; R0 := R67
	1352	[7275]	MOVE     	R0 R7 ; R0 := R7
	1353	[7275]	MOVE     	R0 R99 ; R0 := R99
	1354	[7275]	MOVE     	R0 R36 ; R0 := R36
	1355	[7275]	MOVE     	R0 R19 ; R0 := R19
	1356	[7275]	MOVE     	R0 R4 ; R0 := R4
	1357	[7285]	CLOSURE  	R174 148 ; R174 := closure(Function #149)
	1358	[7285]	MOVE     	R0 R67 ; R0 := R67
	1359	[7287]	LOADK    	R175 K300 ; R175 := "HandleMenuClick"
	1360	[7500]	CLOSURE  	R176 149 ; R176 := closure(Function #150)
	1361	[7500]	MOVE     	R0 R3 ; R0 := R3
	1362	[7500]	MOVE     	R0 R29 ; R0 := R29
	1363	[7500]	MOVE     	R0 R102 ; R0 := R102
	1364	[7500]	MOVE     	R0 R18 ; R0 := R18
	1365	[7500]	MOVE     	R0 R27 ; R0 := R27
	1366	[7500]	MOVE     	R0 R4 ; R0 := R4
	1367	[7500]	MOVE     	R0 R67 ; R0 := R67
	1368	[7500]	MOVE     	R0 R59 ; R0 := R59
	1369	[7500]	MOVE     	R0 R25 ; R0 := R25
	1370	[7500]	MOVE     	R0 R24 ; R0 := R24
	1371	[7500]	MOVE     	R0 R26 ; R0 := R26
	1372	[7500]	MOVE     	R0 R155 ; R0 := R155
	1373	[7500]	MOVE     	R0 R7 ; R0 := R7
	1374	[7500]	MOVE     	R0 R22 ; R0 := R22
	1375	[7500]	MOVE     	R0 R78 ; R0 := R78
	1376	[7500]	MOVE     	R0 R20 ; R0 := R20
	1377	[7500]	MOVE     	R0 R21 ; R0 := R21
	1378	[7500]	MOVE     	R0 R169 ; R0 := R169
	1379	[7500]	MOVE     	R0 R49 ; R0 := R49
	1380	[7500]	MOVE     	R0 R15 ; R0 := R15
	1381	[7500]	MOVE     	R0 R57 ; R0 := R57
	1382	[7500]	SETTABLE 	R67 R175 R176 ; R67[R175] := R176
	1383	[7503]	LOADK    	R175 K303 ; R175 := "CloseJunctionDialog"
	1384	[7510]	CLOSURE  	R176 150 ; R176 := closure(Function #151)
	1385	[7510]	MOVE     	R0 R4 ; R0 := R4
	1386	[7510]	MOVE     	R0 R67 ; R0 := R67
	1387	[7510]	SETTABLE 	R67 R175 R176 ; R67[R175] := R176
	1388	[7513]	LOADK    	R175 K301 ; R175 := "ShowInfoTip"
	1389	[7524]	CLOSURE  	R176 151 ; R176 := closure(Function #152)
	1390	[7524]	MOVE     	R0 R167 ; R0 := R167
	1391	[7524]	MOVE     	R0 R67 ; R0 := R67
	1392	[7524]	MOVE     	R0 R60 ; R0 := R60
	1393	[7524]	SETTABLE 	R67 R175 R176 ; R67[R175] := R176
	1394	[7527]	LOADK    	R175 K302 ; R175 := "HideInfoTip"
	1395	[7544]	CLOSURE  	R176 152 ; R176 := closure(Function #153)
	1396	[7544]	MOVE     	R0 R4 ; R0 := R4
	1397	[7544]	MOVE     	R0 R67 ; R0 := R67
	1398	[7544]	MOVE     	R0 R60 ; R0 := R60
	1399	[7544]	SETTABLE 	R67 R175 R176 ; R67[R175] := R176
	1400	[7546]	LOADK    	R175 K299 ; R175 := "MapZoom"
	1401	[7588]	CLOSURE  	R176 153 ; R176 := closure(Function #154)
	1402	[7588]	MOVE     	R0 R25 ; R0 := R25
	1403	[7588]	MOVE     	R0 R24 ; R0 := R24
	1404	[7588]	MOVE     	R0 R69 ; R0 := R69
	1405	[7588]	MOVE     	R0 R27 ; R0 := R27
	1406	[7588]	MOVE     	R0 R49 ; R0 := R49
	1407	[7588]	MOVE     	R0 R51 ; R0 := R51
	1408	[7588]	SETTABLE 	R67 R175 R176 ; R67[R175] := R176
	1409	[7590]	LOADK    	R175 K298 ; R175 := "NodeClick"
	1410	[7612]	CLOSURE  	R176 154 ; R176 := closure(Function #155)
	1411	[7612]	MOVE     	R0 R23 ; R0 := R23
	1412	[7612]	MOVE     	R0 R48 ; R0 := R48
	1413	[7612]	MOVE     	R0 R27 ; R0 := R27
	1414	[7612]	MOVE     	R0 R67 ; R0 := R67
	1415	[7612]	MOVE     	R0 R153 ; R0 := R153
	1416	[7612]	SETTABLE 	R67 R175 R176 ; R67[R175] := R176
	1417	[7616]	CLOSURE  	R175 155 ; R175 := closure(Function #156)
	1418	[7616]	MOVE     	R0 R174 ; R0 := R174
	1419	[7614]	SETGLOBAL	R175 K341 ; onKeyDown_MENU_CLICK := R175
	1420	[7628]	CLOSURE  	R175 156 ; R175 := closure(Function #157)
	1421	[7628]	MOVE     	R0 R174 ; R0 := R174
	1422	[7618]	SETGLOBAL	R175 K342 ; onKeyDown_MENU_SELECT := R175
	1423	[7637]	CLOSURE  	R175 157 ; R175 := closure(Function #158)
	1424	[7637]	MOVE     	R0 R170 ; R0 := R170
	1425	[7630]	SETGLOBAL	R175 K343 ; onKeyUp_MENU_SELECT := R175
	1426	[7647]	CLOSURE  	R175 158 ; R175 := closure(Function #159)
	1427	[7647]	MOVE     	R0 R20 ; R0 := R20
	1428	[7639]	SETGLOBAL	R175 K344 ; onKeyUp_MENU_RIGHT_CLICK := R175
	1429	[7651]	CLOSURE  	R175 159 ; R175 := closure(Function #160)
	1430	[7649]	SETGLOBAL	R175 K345 ; onKeyDown_HIDE_PAUSE_MENU := R175
	1431	[7696]	CLOSURE  	R175 160 ; R175 := closure(Function #161)
	1432	[7696]	MOVE     	R0 R3 ; R0 := R3
	1433	[7696]	MOVE     	R0 R20 ; R0 := R20
	1434	[7696]	MOVE     	R0 R27 ; R0 := R27
	1435	[7696]	MOVE     	R0 R156 ; R0 := R156
	1436	[7696]	MOVE     	R0 R67 ; R0 := R67
	1437	[7696]	MOVE     	R0 R59 ; R0 := R59
	1438	[7696]	MOVE     	R0 R42 ; R0 := R42
	1439	[7696]	MOVE     	R0 R43 ; R0 := R43
	1440	[7696]	MOVE     	R0 R60 ; R0 := R60
	1441	[7653]	SETGLOBAL	R175 K346 ; onKeyDown_MENU_RIGHT_CLICK := R175
	1442	[7700]	CLOSURE  	R175 161 ; R175 := closure(Function #162)
	1443	[7698]	SETGLOBAL	R175 K347 ; onKeyUp_NEXT_MENU := R175
	1444	[7704]	CLOSURE  	R175 162 ; R175 := closure(Function #163)
	1445	[7702]	SETGLOBAL	R175 K348 ; onKeyDown_NEXT_MENU := R175
	1446	[7708]	CLOSURE  	R175 163 ; R175 := closure(Function #164)
	1447	[7708]	MOVE     	R0 R67 ; R0 := R67
	1448	[7706]	SETGLOBAL	R175 K349 ; onKeyDown_MENU_MOUSE_Z := R175
	1449	[7713]	CLOSURE  	R175 164 ; R175 := closure(Function #165)
	1450	[7713]	MOVE     	R0 R67 ; R0 := R67
	1451	[7710]	SETGLOBAL	R175 K350 ; onKeyDown_MENU_PINCH_DELTA := R175
	1452	[7826]	CLOSURE  	R175 165 ; R175 := closure(Function #166)
	1453	[7826]	MOVE     	R0 R27 ; R0 := R27
	1454	[7826]	MOVE     	R0 R67 ; R0 := R67
	1455	[7826]	MOVE     	R0 R23 ; R0 := R23
	1456	[7826]	MOVE     	R0 R22 ; R0 := R22
	1457	[7826]	MOVE     	R0 R25 ; R0 := R25
	1458	[7826]	MOVE     	R0 R24 ; R0 := R24
	1459	[7826]	MOVE     	R0 R141 ; R0 := R141
	1460	[7826]	MOVE     	R0 R76 ; R0 := R76
	1461	[7826]	MOVE     	R0 R81 ; R0 := R81
	1462	[7826]	MOVE     	R0 R26 ; R0 := R26
	1463	[7826]	MOVE     	R0 R78 ; R0 := R78
	1464	[7826]	MOVE     	R0 R129 ; R0 := R129
	1465	[7826]	MOVE     	R0 R49 ; R0 := R49
	1466	[7826]	MOVE     	R0 R79 ; R0 := R79
	1467	[7826]	MOVE     	R0 R3 ; R0 := R3
	1468	[7715]	SETGLOBAL	R175 K351 ; onRawInputEvent := R175
	1469	[7830]	CLOSURE  	R175 166 ; R175 := closure(Function #167)
	1470	[7830]	MOVE     	R0 R173 ; R0 := R173
	1471	[7828]	SETGLOBAL	R175 K352 ; NodeRollOver := R175
	1472	[7834]	CLOSURE  	R175 167 ; R175 := closure(Function #168)
	1473	[7834]	MOVE     	R0 R59 ; R0 := R59
	1474	[7832]	SETGLOBAL	R175 K353 ; NodeRollOut := R175
	1475	[7845]	CLOSURE  	R175 168 ; R175 := closure(Function #169)
	1476	[7845]	MOVE     	R0 R7 ; R0 := R7
	1477	[7836]	SETGLOBAL	R175 K354 ; NodeSelect := R175
	1478	[7850]	CLOSURE  	R175 169 ; R175 := closure(Function #170)
	1479	[7850]	MOVE     	R0 R3 ; R0 := R3
	1480	[7847]	SETGLOBAL	R175 K355 ; WorldStateWindowVisChanged := R175
	1481	[7856]	CLOSURE  	R175 170 ; R175 := closure(Function #171)
	1482	[7856]	MOVE     	R0 R3 ; R0 := R3
	1483	[7856]	MOVE     	R0 R60 ; R0 := R60
	1484	[7852]	SETGLOBAL	R175 K356 ; WSWDioramaChanged := R175
	1485	[7864]	CLOSURE  	R175 171 ; R175 := closure(Function #172)
	1486	[7864]	MOVE     	R0 R70 ; R0 := R70
	1487	[7864]	MOVE     	R0 R2 ; R0 := R2
	1488	[7864]	MOVE     	R0 R164 ; R0 := R164
	1489	[7858]	SETGLOBAL	R175 K357 ; onViewportSizeChanged := R175
	1490	[7871]	CLOSURE  	R175 172 ; R175 := closure(Function #173)
	1491	[7871]	MOVE     	R0 R36 ; R0 := R36
	1492	[7871]	MOVE     	R0 R2 ; R0 := R2
	1493	[7866]	SETGLOBAL	R175 K358 ; ForceUpdate3DElements := R175
	1494	[7875]	CLOSURE  	R175 173 ; R175 := closure(Function #174)
	1495	[7873]	SETGLOBAL	R175 K359 ; IsInputBlocked := R175
	1496	[7880]	CLOSURE  	R175 174 ; R175 := closure(Function #175)
	1497	[7877]	SETGLOBAL	R175 K360 ; SetTrigger := R175
	1498	[7905]	CLOSURE  	R175 175 ; R175 := closure(Function #176)
	1499	[7905]	MOVE     	R0 R29 ; R0 := R29
	1500	[7905]	MOVE     	R0 R7 ; R0 := R7
	1501	[7905]	MOVE     	R0 R61 ; R0 := R61
	1502	[7882]	SETGLOBAL	R175 K361 ; OnQuestsChanged := R175
	1503	[7929]	CLOSURE  	R175 176 ; R175 := closure(Function #177)
	1504	[7929]	MOVE     	R0 R8 ; R0 := R8
	1505	[7929]	MOVE     	R0 R115 ; R0 := R115
	1506	[7907]	SETGLOBAL	R175 K362 ; OnWorldStateChanged := R175
	1507	[7951]	CLOSURE  	R175 177 ; R175 := closure(Function #178)
	1508	[7951]	MOVE     	R0 R8 ; R0 := R8
	1509	[7931]	SETGLOBAL	R175 K363 ; PulseInvasionNodes := R175
	1510	[7953]	GETGLOBAL	R175 K364 ; R175 := _T
	1511	[7953]	LOADK    	R176 K365 ; R176 := "RadialSolarMapFade"
	1512	[8007]	CLOSURE  	R177 178 ; R177 := closure(Function #179)
	1513	[8007]	MOVE     	R0 R171 ; R0 := R171
	1514	[8007]	MOVE     	R0 R2 ; R0 := R2
	1515	[8007]	MOVE     	R0 R38 ; R0 := R38
	1516	[8007]	SETTABLE 	R175 R176 R177 ; R175[R176] := R177
	1517	[8014]	CLOSURE  	R175 179 ; R175 := closure(Function #180)
	1518	[8014]	MOVE     	R0 R60 ; R0 := R60
	1519	[8009]	SETGLOBAL	R175 K366 ; PlayersChanged := R175
	1520	[8018]	CLOSURE  	R175 180 ; R175 := closure(Function #181)
	1521	[8018]	MOVE     	R0 R64 ; R0 := R64
	1522	[8016]	SETGLOBAL	R175 K367 ; OnSquadMissionChanged := R175
	1523	[8033]	CLOSURE  	R175 181 ; R175 := closure(Function #182)
	1524	[8033]	MOVE     	R0 R27 ; R0 := R27
	1525	[8020]	SETGLOBAL	R175 K368 ; OnLoadoutChanged := R175
	1526	[8038]	CLOSURE  	R175 182 ; R175 := closure(Function #183)
	1527	[8038]	MOVE     	R0 R60 ; R0 := R60
	1528	[8038]	MOVE     	R0 R131 ; R0 := R131
	1529	[8035]	SETGLOBAL	R175 K369 ; OnGamepadTransition := R175
	1530	[8042]	CLOSURE  	R175 183 ; R175 := closure(Function #184)
	1531	[8040]	SETGLOBAL	R175 K370 ; SupportsThemes := R175
	1532	[8046]	CLOSURE  	R175 184 ; R175 := closure(Function #185)
	1533	[8044]	SETGLOBAL	R175 K371 ; OnMatchMakingModeChanged := R175
	1534	[8052]	CLOSURE  	R175 185 ; R175 := closure(Function #186)
	1535	[8048]	SETGLOBAL	R175 K372 ; EntryFocused := R175
	1536	[8058]	CLOSURE  	R175 186 ; R175 := closure(Function #187)
	1537	[8054]	SETGLOBAL	R175 K373 ; EntryUnfocused := R175
	1538	[8064]	CLOSURE  	R175 187 ; R175 := closure(Function #188)
	1539	[8060]	SETGLOBAL	R175 K374 ; EntryPressed := R175
	1540	[8070]	CLOSURE  	R175 188 ; R175 := closure(Function #189)
	1541	[8070]	MOVE     	R0 R16 ; R0 := R16
	1542	[8066]	SETGLOBAL	R175 K375 ; DifficultySelectorFocused := R175
	1543	[8076]	CLOSURE  	R175 189 ; R175 := closure(Function #190)
	1544	[8076]	MOVE     	R0 R16 ; R0 := R16
	1545	[8072]	SETGLOBAL	R175 K376 ; DifficultySelectorUnfocused := R175
	1546	[8082]	CLOSURE  	R175 190 ; R175 := closure(Function #191)
	1547	[8082]	MOVE     	R0 R16 ; R0 := R16
	1548	[8078]	SETGLOBAL	R175 K377 ; DifficultySelectorPressed := R175
	1549	[8087]	CLOSURE  	R175 191 ; R175 := closure(Function #192)
	1550	[8087]	MOVE     	R0 R36 ; R0 := R36
	1551	[8087]	MOVE     	R0 R16 ; R0 := R16
	1552	[8087]	MOVE     	R0 R35 ; R0 := R35
	1553	[8084]	SETGLOBAL	R175 K378 ; DifficultySelectorExpand := R175
	1554	[8092]	CLOSURE  	R175 192 ; R175 := closure(Function #193)
	1555	[8092]	MOVE     	R0 R36 ; R0 := R36
	1556	[8092]	MOVE     	R0 R16 ; R0 := R16
	1557	[8092]	MOVE     	R0 R35 ; R0 := R35
	1558	[8089]	SETGLOBAL	R175 K379 ; DifficultySelectorCollapse := R175
	1559	[8100]	CLOSURE  	R175 193 ; R175 := closure(Function #194)
	1560	[8100]	MOVE     	R0 R59 ; R0 := R59
	1561	[8094]	SETGLOBAL	R175 K380 ; ClickBlockerClicked := R175
	1562	[8107]	CLOSURE  	R61 194 ; R61 := closure(Function #195)
	1563	[8107]	MOVE     	R0 R117 ; R0 := R117
	1564	[8107]	MOVE     	R0 R119 ; R0 := R119
	1565	[8107]	MOVE     	R0 R120 ; R0 := R120
	1566	[8107]	MOVE     	R0 R129 ; R0 := R129
	1567	[8107]	RETURN   	R0 1 ; return 


function #1 <?:369,401> (124 instructions, 496 bytes at 000002111F3ACCC0)
0 params, 18 slots, 3 upvalues, 0 locals, 32 constants, 0 functions
	1	[370]	GETGLOBAL	R0 K0 ; R0 := mHover
	2	[370]	GETTABLE 	R0 R0 K1 ; R0 := R0["Node"]
	3	[370]	EQ       	0 R0 K2 ; if R0 ~= nil then PC := 10
	4	[370]	JMP      	10 ; PC := 10
	5	[370]	GETGLOBAL	R0 K0 ; R0 := mHover
	6	[370]	GETTABLE 	R0 R0 K3 ; R0 := R0["Region"]
	7	[370]	EQ       	0 R0 K2 ; if R0 ~= nil then PC := 10
	8	[370]	JMP      	10 ; PC := 10
	9	[370]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 10
	10	[370]	OP_LOADBOOL	R0 1 0 ; R0 := true
	11	[371]	GETGLOBAL	R1 K4 ; R1 := 0xa421af95
	12	[371]	CALL     	R1 1 2 ; R1 := R1()
	13	[373]	GETGLOBAL	R2 K0 ; R2 := mHover
	14	[373]	GETTABLE 	R2 R2 K1 ; R2 := R2["Node"]
	15	[373]	EQ       	1 R2 K2 ; if R2 == nil then PC := 32
	16	[373]	JMP      	32 ; PC := 32
	17	[374]	GETUPVAL 	R2 U0 ; R2 := U0
	18	[374]	GETTABLE 	R2 R2 K5 ; R2 := R2[0xb5be5d4a]
	19	[374]	GETGLOBAL	R3 K6 ; R3 := 0xae91e43b
	20	[374]	GETGLOBAL	R4 K0 ; R4 := mHover
	21	[374]	GETTABLE 	R4 R4 K1 ; R4 := R4["Node"]
	22	[374]	GETTABLE 	R4 R4 K7 ; R4 := R4["clipName"]
	23	[374]	CALL     	R2 3 3 ; R2,R3 := R2(R3,R4)
	24	[375]	GETUPVAL 	R4 U0 ; R4 := U0
	25	[375]	GETTABLE 	R4 R4 K8 ; R4 := R4[0x6d7e6810]
	26	[375]	GETGLOBAL	R5 K6 ; R5 := 0xae91e43b
	27	[375]	NEWTABLE 	R6 0 2 ; R6 := {}
	28	[375]	SETTABLE 	R6 K9 R2 ; R6["x"] := R2
	29	[375]	SETTABLE 	R6 K10 R3 ; R6["y"] := R3
	30	[375]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	31	[375]	MOVE     	R1 R4 ; R1 := R4
	32	[378]	GETGLOBAL	R4 K0 ; R4 := mHover
	33	[378]	GETTABLE 	R4 R4 K3 ; R4 := R4["Region"]
	34	[378]	EQ       	1 R4 K2 ; if R4 == nil then PC := 62
	35	[378]	JMP      	62 ; PC := 62
	36	[378]	GETGLOBAL	R4 K11 ; R4 := 0x7b998233
	37	[378]	GETGLOBAL	R5 K0 ; R5 := mHover
	38	[378]	GETTABLE 	R5 R5 K3 ; R5 := R5["Region"]
	39	[378]	GETTABLE 	R5 R5 K12 ; R5 := R5["instance"]
	40	[378]	CALL     	R4 2 2 ; R4 := R4(R5)
	41	[378]	TEST     	R4 1 ; if R4 then PC := 62
	42	[378]	JMP      	62 ; PC := 62
	43	[379]	GETGLOBAL	R4 K0 ; R4 := mHover
	44	[379]	GETTABLE 	R4 R4 K3 ; R4 := R4["Region"]
	45	[379]	GETTABLE 	R4 R4 K12 ; R4 := R4["instance"]
	46	[379]	SELF     	R4 R4 K13 ; R5 := R4; R4 := R4[0xd1586535]
	47	[379]	CALL     	R4 2 2 ; R4 := R4(R5)
	48	[380]	GETGLOBAL	R5 K6 ; R5 := 0xae91e43b
	49	[380]	SELF     	R5 R5 K14 ; R6 := R5; R5 := R5[0x28209ddc]
	50	[380]	MOVE     	R7 R4 ; R7 := R4
	51	[380]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	52	[381]	GETUPVAL 	R6 U0 ; R6 := U0
	53	[381]	GETTABLE 	R6 R6 K8 ; R6 := R6[0x6d7e6810]
	54	[381]	GETGLOBAL	R7 K6 ; R7 := 0xae91e43b
	55	[381]	NEWTABLE 	R8 0 2 ; R8 := {}
	56	[381]	GETTABLE 	R9 R5 K9 ; R9 := R5["x"]
	57	[381]	SETTABLE 	R8 K9 R9 ; R8["x"] := R9
	58	[381]	GETTABLE 	R9 R5 K10 ; R9 := R5["y"]
	59	[381]	SETTABLE 	R8 K10 R9 ; R8["y"] := R9
	60	[381]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	61	[381]	MOVE     	R1 R6 ; R1 := R6
	62	[384]	NEWTABLE 	R6 0 2 ; R6 := {}
	63	[384]	SETTABLE 	R6 K15 K16 ; R6["outer"] := 0.060000
	64	[384]	SETTABLE 	R6 K17 K18 ; R6["inner"] := 0.020000
	65	[385]	LOADK    	R7 := 0.000000
	66	[386]	GETUPVAL 	R8 U0 ; R8 := U0
	67	[386]	GETTABLE 	R8 R8 K19 ; R8 := R8[0x06d055f9]
	68	[386]	GETGLOBAL	R9 K20 ; R9 := mZoomedRegion
	69	[386]	GETUPVAL 	R10 U1 ; R10 := U1
	70	[386]	GETTABLE 	R10 R10 K21 ; R10 := R10["ZoomedMultiplier"]
	71	[386]	GETUPVAL 	R11 U1 ; R11 := U1
	72	[386]	GETTABLE 	R11 R11 K22 ; R11 := R11["SpaceMultiplier"]
	73	[386]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	74	[388]	GETUPVAL 	R9 U2 ; R9 := U2
	75	[388]	SETTABLE 	R9 K23 R8 ; R9["SpeedMultiplier"] := R8
	76	[389]	TEST     	R0 0 ; if not R0 then PC := 124
	77	[389]	JMP      	124 ; PC := 124
	78	[390]	GETUPVAL 	R9 U0 ; R9 := U0
	79	[390]	GETTABLE 	R9 R9 K19 ; R9 := R9[0x06d055f9]
	80	[390]	GETGLOBAL	R10 K20 ; R10 := mZoomedRegion
	81	[390]	GETUPVAL 	R11 U1 ; R11 := U1
	82	[390]	GETTABLE 	R11 R11 K24 ; R11 := R11["ZoomedHoveringMultiplier"]
	83	[390]	GETUPVAL 	R12 U1 ; R12 := U1
	84	[390]	GETTABLE 	R12 R12 K25 ; R12 := R12["SpaceHoveringMultiplier"]
	85	[390]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	86	[391]	GETUPVAL 	R10 U0 ; R10 := U0
	87	[391]	GETTABLE 	R10 R10 K26 ; R10 := R10[0xfa9785e4]
	88	[391]	GETGLOBAL	R11 K6 ; R11 := 0xae91e43b
	89	[391]	CALL     	R10 2 2 ; R10 := R10(R11)
	90	[392]	GETUPVAL 	R11 U0 ; R11 := U0
	91	[392]	GETTABLE 	R11 R11 K8 ; R11 := R11[0x6d7e6810]
	92	[392]	GETGLOBAL	R12 K6 ; R12 := 0xae91e43b
	93	[392]	NEWTABLE 	R13 0 2 ; R13 := {}
	94	[392]	GETTABLE 	R14 R10 K9 ; R14 := R10["x"]
	95	[392]	SETTABLE 	R13 K9 R14 ; R13["x"] := R14
	96	[392]	GETTABLE 	R14 R10 K10 ; R14 := R10["y"]
	97	[392]	SETTABLE 	R13 K10 R14 ; R13["y"] := R14
	98	[392]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	99	[394]	GETGLOBAL	R12 K27 ; R12 := 0x5bced4c4
	100	[394]	GETTABLE 	R12 R12 K28 ; R12 := R12[0xb62ecfe0]
	101	[394]	GETGLOBAL	R13 K29 ; R13 := 0x03ea2485
	102	[394]	MOVE     	R14 R11 ; R14 := R11
	103	[394]	MOVE     	R15 R1 ; R15 := R1
	104	[394]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	105	[394]	GETTABLE 	R14 R6 K17 ; R14 := R6["inner"]
	106	[394]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	107	[394]	MOVE     	R7 R12 ; R7 := R12
	108	[396]	GETTABLE 	R12 R6 K15 ; R12 := R6["outer"]
	109	[396]	LE       	0 R7 R12 ; if R7 > R12 then PC := 124
	110	[396]	JMP      	124 ; PC := 124
	111	[397]	GETTABLE 	R12 R6 K17 ; R12 := R6["inner"]
	112	[397]	SUB      	R12 R7 R12 ; R12 := R7 - R12
	113	[397]	GETTABLE 	R13 R6 K15 ; R13 := R6["outer"]
	114	[397]	GETTABLE 	R14 R6 K17 ; R14 := R6["inner"]
	115	[397]	SUB      	R13 R13 R14 ; R13 := R13 - R14
	116	[397]	DIV      	R12 R12 R13 ; R12 := R12 / R13
	117	[398]	GETUPVAL 	R13 U2 ; R13 := U2
	118	[398]	GETGLOBAL	R14 K30 ; R14 := 0x9bafffe3
	119	[398]	MOVE     	R15 R8 ; R15 := R8
	120	[398]	MOVE     	R16 R9 ; R16 := R9
	121	[398]	SUB      	R17 K31 R12 ; R17 := 1.000000 - R12
	122	[398]	CALL     	R14 4 2 ; R14 := R14(R15,R16,R17)
	123	[398]	SETTABLE 	R13 K23 R14 ; R13["SpeedMultiplier"] := R14
	124	[401]	RETURN   	R0 1 ; return 

function #2 <?:403,408> (17 instructions, 68 bytes at 000002111F3AD3C0)
2 params, 6 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[404]	GETGLOBAL	R2 K0 ; R2 := _T
	2	[404]	GETTABLE 	R2 R2 K1 ; R2 := R2["MapInitLockCursor"]
	3	[404]	TEST     	R2 1 ; if R2 then PC := 17
	4	[404]	JMP      	17 ; PC := 17
	5	[405]	GETGLOBAL	R2 K2 ; R2 := 0x89326c93
	6	[405]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0xfb64e76c]
	7	[405]	CALL     	R2 2 2 ; R2 := R2(R3)
	8	[405]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0x014fd8c7]
	9	[405]	MOVE     	R4 R0 ; R4 := R0
	10	[405]	MOVE     	R5 R1 ; R5 := R1
	11	[405]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	12	[406]	GETGLOBAL	R2 K5 ; R2 := 0x9ba7909f
	13	[406]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0xab457eac]
	14	[406]	MOVE     	R4 R0 ; R4 := R0
	15	[406]	MOVE     	R5 R1 ; R5 := R1
	16	[406]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	17	[408]	RETURN   	R0 1 ; return 

function #3 <?:410,437> (133 instructions, 532 bytes at 000002111F3AD590)
0 params, 7 slots, 4 upvalues, 0 locals, 27 constants, 0 functions
	1	[411]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[411]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	3	[411]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0x091c120e]
	4	[411]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[411]	SETTABLE 	R0 K0 R1 ; R0["MaxX"] := R1
	6	[412]	GETUPVAL 	R0 U0 ; R0 := U0
	7	[412]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	8	[412]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x2cc9d281]
	9	[412]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[412]	SETTABLE 	R0 K3 R1 ; R0["MaxY"] := R1
	11	[413]	GETUPVAL 	R0 U0 ; R0 := U0
	12	[413]	GETGLOBAL	R1 K5 ; R1 := 0x5bced4c4
	13	[413]	GETTABLE 	R1 R1 K6 ; R1 := R1[0xb62ecfe0]
	14	[413]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	15	[413]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0x6b837788]
	16	[413]	CALL     	R2 2 2 ; R2 := R2(R3)
	17	[413]	GETUPVAL 	R3 U0 ; R3 := U0
	18	[413]	GETTABLE 	R3 R3 K0 ; R3 := R3["MaxX"]
	19	[413]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	20	[413]	SETTABLE 	R0 K0 R1 ; R0["MaxX"] := R1
	21	[414]	GETUPVAL 	R0 U0 ; R0 := U0
	22	[414]	GETGLOBAL	R1 K5 ; R1 := 0x5bced4c4
	23	[414]	GETTABLE 	R1 R1 K6 ; R1 := R1[0xb62ecfe0]
	24	[414]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	25	[414]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0xaf9fda9f]
	26	[414]	CALL     	R2 2 2 ; R2 := R2(R3)
	27	[414]	GETUPVAL 	R3 U0 ; R3 := U0
	28	[414]	GETTABLE 	R3 R3 K3 ; R3 := R3["MaxY"]
	29	[414]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	30	[414]	SETTABLE 	R0 K3 R1 ; R0["MaxY"] := R1
	31	[415]	GETUPVAL 	R0 U0 ; R0 := U0
	32	[415]	GETUPVAL 	R1 U1 ; R1 := U1
	33	[415]	GETTABLE 	R1 R1 K10 ; R1 := R1[0x74a11ec6]
	34	[415]	GETUPVAL 	R2 U0 ; R2 := U0
	35	[415]	GETTABLE 	R2 R2 K0 ; R2 := R2["MaxX"]
	36	[415]	GETGLOBAL	R3 K11 ; R3 := 0x03f57322
	37	[415]	GETUPVAL 	R4 U0 ; R4 := U0
	38	[415]	GETTABLE 	R4 R4 K12 ; R4 := R4["MinX"]
	39	[415]	CALL     	R3 2 2 ; R3 := R3(R4)
	40	[415]	SUB      	R2 R2 R3 ; R2 := R2 - R3
	41	[415]	DIV      	R2 R2 K13 ; R2 := R2 / 2.000000
	42	[415]	CALL     	R1 2 2 ; R1 := R1(R2)
	43	[415]	SETTABLE 	R0 K9 R1 ; R0["X"] := R1
	44	[416]	GETUPVAL 	R0 U0 ; R0 := U0
	45	[416]	GETUPVAL 	R1 U1 ; R1 := U1
	46	[416]	GETTABLE 	R1 R1 K10 ; R1 := R1[0x74a11ec6]
	47	[416]	GETUPVAL 	R2 U0 ; R2 := U0
	48	[416]	GETTABLE 	R2 R2 K3 ; R2 := R2["MaxY"]
	49	[416]	GETGLOBAL	R3 K11 ; R3 := 0x03f57322
	50	[416]	GETUPVAL 	R4 U0 ; R4 := U0
	51	[416]	GETTABLE 	R4 R4 K15 ; R4 := R4["MinY"]
	52	[416]	CALL     	R3 2 2 ; R3 := R3(R4)
	53	[416]	SUB      	R2 R2 R3 ; R2 := R2 - R3
	54	[416]	DIV      	R2 R2 K13 ; R2 := R2 / 2.000000
	55	[416]	CALL     	R1 2 2 ; R1 := R1(R2)
	56	[416]	SETTABLE 	R0 K14 R1 ; R0["Y"] := R1
	57	[418]	GETGLOBAL	R0 K1 ; R0 := 0xae91e43b
	58	[418]	SELF     	R0 R0 K16 ; R1 := R0; R0 := R0[0x67bc869f]
	59	[418]	LOADK    	R2 K17 ; R2 := "Reticle"
	60	[418]	LOADK    	R3 := 0.000000
	61	[418]	GETUPVAL 	R4 U0 ; R4 := U0
	62	[418]	GETTABLE 	R4 R4 K9 ; R4 := R4["X"]
	63	[418]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	64	[419]	GETGLOBAL	R0 K1 ; R0 := 0xae91e43b
	65	[419]	SELF     	R0 R0 K16 ; R1 := R0; R0 := R0[0x67bc869f]
	66	[419]	LOADK    	R2 K17 ; R2 := "Reticle"
	67	[419]	LOADK    	R3 := 1.000000
	68	[419]	GETUPVAL 	R4 U0 ; R4 := U0
	69	[419]	GETTABLE 	R4 R4 K14 ; R4 := R4["Y"]
	70	[419]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	71	[421]	GETGLOBAL	R0 K1 ; R0 := 0xae91e43b
	72	[421]	SELF     	R0 R0 K18 ; R1 := R0; R0 := R0[0xaade900e]
	73	[421]	LOADK    	R2 K17 ; R2 := "Reticle"
	74	[421]	LOADK    	R3 := 11.000000
	75	[421]	GETUPVAL 	R4 U0 ; R4 := U0
	76	[421]	GETTABLE 	R4 R4 K19 ; R4 := R4["IsVisible"]
	77	[421]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	78	[423]	GETUPVAL 	R0 U2 ; R0 := U2
	79	[423]	GETUPVAL 	R1 U0 ; R1 := U0
	80	[423]	GETTABLE 	R1 R1 K9 ; R1 := R1["X"]
	81	[423]	GETUPVAL 	R2 U0 ; R2 := U0
	82	[423]	GETTABLE 	R2 R2 K14 ; R2 := R2["Y"]
	83	[423]	CALL     	R0 3 1 ; R0(R1,R2)
	84	[425]	GETGLOBAL	R0 K20 ; R0 := 0x7b998233
	85	[425]	GETGLOBAL	R1 K21 ; R1 := mAnchorMgr
	86	[425]	CALL     	R0 2 2 ; R0 := R0(R1)
	87	[425]	TEST     	R0 1 ; if R0 then PC := 98
	88	[425]	JMP      	98 ; PC := 98
	89	[426]	GETGLOBAL	R0 K21 ; R0 := mAnchorMgr
	90	[426]	SELF     	R0 R0 K22 ; R1 := R0; R0 := R0[0xfaa69527]
	91	[426]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	92	[426]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0x6b837788]
	93	[426]	CALL     	R2 2 2 ; R2 := R2(R3)
	94	[426]	GETGLOBAL	R3 K1 ; R3 := 0xae91e43b
	95	[426]	SELF     	R3 R3 K8 ; R4 := R3; R3 := R3[0xaf9fda9f]
	96	[426]	CALL     	R3 2 0 ; R3,... := R3(R4)
	97	[426]	CALL     	R0 0 1 ; R0(R1,...)
	98	[429]	GETUPVAL 	R0 U3 ; R0 := U3
	99	[429]	GETUPVAL 	R1 U0 ; R1 := U0
	100	[429]	GETTABLE 	R1 R1 K0 ; R1 := R1["MaxX"]
	101	[429]	GETUPVAL 	R2 U0 ; R2 := U0
	102	[429]	GETTABLE 	R2 R2 K3 ; R2 := R2["MaxY"]
	103	[429]	DIV      	R1 R1 R2 ; R1 := R1 / R2
	104	[429]	SETTABLE 	R0 K23 R1 ; R0["AspectRatio"] := R1
	105	[431]	GETUPVAL 	R0 U1 ; R0 := U1
	106	[431]	GETTABLE 	R0 R0 K24 ; R0 := R0[0x44537adf]
	107	[431]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	108	[431]	CALL     	R0 2 3 ; R0,R1 := R0(R1)
	109	[432]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	110	[432]	SELF     	R2 R2 K16 ; R3 := R2; R2 := R2[0x67bc869f]
	111	[432]	LOADK    	R4 K25 ; R4 := "InfluenceMap"
	112	[432]	LOADK    	R5 := 12.000000
	113	[432]	MOVE     	R6 R0 ; R6 := R0
	114	[432]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	115	[433]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	116	[433]	SELF     	R2 R2 K16 ; R3 := R2; R2 := R2[0x67bc869f]
	117	[433]	LOADK    	R4 K25 ; R4 := "InfluenceMap"
	118	[433]	LOADK    	R5 := 13.000000
	119	[433]	MOVE     	R6 R1 ; R6 := R1
	120	[433]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	121	[435]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	122	[435]	SELF     	R2 R2 K16 ; R3 := R2; R2 := R2[0x67bc869f]
	123	[435]	LOADK    	R4 K26 ; R4 := "ClickBlocker"
	124	[435]	LOADK    	R5 := 12.000000
	125	[435]	MOVE     	R6 R0 ; R6 := R0
	126	[435]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	127	[436]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	128	[436]	SELF     	R2 R2 K16 ; R3 := R2; R2 := R2[0x67bc869f]
	129	[436]	LOADK    	R4 K26 ; R4 := "ClickBlocker"
	130	[436]	LOADK    	R5 := 13.000000
	131	[436]	MOVE     	R6 R1 ; R6 := R1
	132	[436]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	133	[437]	RETURN   	R0 1 ; return 

function #4 <?:439,443> (13 instructions, 52 bytes at 000002111F3ADC80)
0 params, 4 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[440]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[440]	GETGLOBAL	R1 K1 ; R1 := _T
	3	[440]	GETTABLE 	R1 R1 K2 ; R1 := R1["SquadOverlay"]
	4	[440]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[440]	TEST     	R0 1 ; if R0 then PC := 13
	6	[440]	JMP      	13 ; PC := 13
	7	[441]	GETGLOBAL	R0 K1 ; R0 := _T
	8	[441]	GETTABLE 	R0 R0 K2 ; R0 := R0["SquadOverlay"]
	9	[441]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0xe4162eed]
	10	[441]	LOADK    	R2 K4 ; R2 := "OpenInvite"
	11	[441]	LOADK    	R3 K5 ; R3 := ""
	12	[441]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	13	[443]	RETURN   	R0 1 ; return 

function #5 <?:445,463> (17 instructions, 68 bytes at 000002111F3ADE20)
0 params, 3 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[446]	GETGLOBAL	R0 K0 ; R0 := 0x0032441c
	2	[446]	GETTABLE 	R0 R0 K1 ; R0 := R0["StalkerMode"]
	3	[446]	TEST     	R0 0 ; if not R0 then PC := 6
	4	[446]	JMP      	6 ; PC := 6
	5	[456]	RETURN   	R0 1 ; return 
	6	[459]	GETUPVAL 	R0 U0 ; R0 := U0
	7	[459]	GETTABLE 	R0 R0 K2 ; R0 := R0[0xa9882367]
	8	[459]	LOADK    	R1 K3 ; R1 := "SwitchLoadout"
	9	[459]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[460]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	11	[460]	MOVE     	R2 R0 ; R2 := R0
	12	[460]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[460]	TEST     	R1 1 ; if R1 then PC := 17
	14	[460]	JMP      	17 ; PC := 17
	15	[461]	SELF     	R1 R0 K5 ; R2 := R0; R1 := R0[0xd91e1179]
	16	[461]	CALL     	R1 2 1 ; R1(R2)
	17	[463]	RETURN   	R0 1 ; return 

function #6 <?:465,478> (20 instructions, 80 bytes at 000002111F3AE020)
1 param, 6 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[466]	GETGLOBAL	R1 K0 ; R1 := 0xa421af95
	2	[466]	GETTABLE 	R2 R0 K1 ; R2 := R0["x"]
	3	[466]	GETTABLE 	R3 R0 K2 ; R3 := R0["y"]
	4	[466]	GETTABLE 	R4 R0 K3 ; R4 := R0["z"]
	5	[466]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	6	[467]	LOADK    	R2 := 1.000000
	7	[468]	LOADK    	R3 := 1.000000
	8	[472]	LOADK    	R4 := 1.000000
	9	[473]	GETTABLE 	R5 R1 K1 ; R5 := R1["x"]
	10	[473]	MUL      	R5 R5 R4 ; R5 := R5 * R4
	11	[473]	MUL      	R5 R5 R2 ; R5 := R5 * R2
	12	[473]	SETTABLE 	R1 K1 R5 ; R1["x"] := R5
	13	[474]	GETTABLE 	R5 R1 K2 ; R5 := R1["y"]
	14	[474]	MUL      	R5 R5 R2 ; R5 := R5 * R2
	15	[474]	SETTABLE 	R1 K2 R5 ; R1["y"] := R5
	16	[475]	GETTABLE 	R5 R1 K3 ; R5 := R1["z"]
	17	[475]	MUL      	R5 R5 R3 ; R5 := R5 * R3
	18	[475]	SETTABLE 	R1 K3 R5 ; R1["z"] := R5
	19	[477]	RETURN   	R1 2 ; return R1 
	20	[478]	RETURN   	R0 1 ; return 

function #7 <?:480,495> (30 instructions, 120 bytes at 000002111F3AE1C0)
0 params, 14 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[481]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[481]	GETGLOBAL	R1 K1 ; R1 := 0x3ad911b3
	3	[481]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[481]	TEST     	R0 0 ; if not R0 then PC := 7
	5	[481]	JMP      	7 ; PC := 7
	6	[482]	RETURN   	R0 1 ; return 
	7	[485]	LOADK    	R0 := 0.000000
	8	[485]	LOADK    	R1 := 63.000000
	9	[485]	LOADK    	R2 := 1.000000
	10	[485]	FORPREP  	R0 25 ; R0 -= R2; PC := 25
	11	[486]	LOADK    	R4 := 0.000000
	12	[486]	LOADK    	R5 := 63.000000
	13	[486]	LOADK    	R6 := 1.000000
	14	[486]	FORPREP  	R4 24 ; R4 -= R6; PC := 24
	15	[488]	LOADK    	R8 := 255.000000
	16	[489]	GETGLOBAL	R9 K1 ; R9 := 0x3ad911b3
	17	[489]	SELF     	R9 R9 K2 ; R10 := R9; R9 := R9[0x41f69f92]
	18	[489]	MOVE     	R11 R8 ; R11 := R8
	19	[489]	MOVE     	R12 R3 ; R12 := R3
	20	[489]	MOVE     	R13 R7 ; R13 := R7
	21	[489]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	22	[490]	GETGLOBAL	R9 K3 ; R9 := 0xce225efa
	23	[490]	CALL     	R9 1 1 ; R9()
	24	[486]	FORLOOP  	R4 15 ; R4 += R6; if R4 <= R5 then begin PC := 15; R7 := R4 end
	25	[485]	FORLOOP  	R0 11 ; R0 += R2; if R0 <= R1 then begin PC := 11; R3 := R0 end
	26	[494]	GETGLOBAL	R9 K4 ; R9 := 0x9ba7909f
	27	[494]	SELF     	R9 R9 K5 ; R10 := R9; R9 := R9[0xa085e6e7]
	28	[494]	GETGLOBAL	R11 K1 ; R11 := 0x3ad911b3
	29	[494]	CALL     	R9 3 1 ; R9(R10,R11)
	30	[495]	RETURN   	R0 1 ; return 

function #8 <?:497,531> (149 instructions, 596 bytes at 000002111F3AE3E0)
1 param, 11 slots, 5 upvalues, 0 locals, 45 constants, 0 functions
	1	[498]	LOADK    	R1 K0 ; R1 := ""
	2	[499]	GETTABLE 	R2 R0 K1 ; R2 := R0["guildId"]
	3	[499]	EQ       	0 R2 K2 ; if R2 ~= nil then PC := 127
	4	[499]	JMP      	127 ; PC := 127
	5	[500]	GETTABLE 	R1 R0 K3 ; R1 := R0["locName"]
	6	[501]	GETUPVAL 	R2 U0 ; R2 := U0
	7	[501]	GETUPVAL 	R3 U1 ; R3 := U1
	8	[501]	GETTABLE 	R3 R3 K4 ; R3 := R3["EDIT_NODES"]
	9	[501]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 16
	10	[501]	JMP      	16 ; PC := 16
	11	[501]	GETUPVAL 	R2 U0 ; R2 := U0
	12	[501]	GETUPVAL 	R3 U1 ; R3 := U1
	13	[501]	GETTABLE 	R3 R3 K5 ; R3 := R3["EDIT_EDGES"]
	14	[501]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 50
	15	[501]	JMP      	50 ; PC := 50
	16	[502]	MOVE     	R2 R1 ; R2 := R1
	17	[502]	LOADK    	R3 K6 ; R3 := "\r["
	18	[502]	GETGLOBAL	R4 K7 ; R4 := 0x64fb1586
	19	[502]	GETTABLE 	R5 R0 K8 ; R5 := R0["name"]
	20	[502]	CALL     	R4 2 2 ; R4 := R4(R5)
	21	[502]	LOADK    	R5 K9 ; R5 := "]"
	22	[502]	CONCAT   	R1 R2 R5 ; R1 := R2 .. R3 .. R4 .. R5
	23	[504]	GETGLOBAL	R2 K10 ; R2 := 0x7b998233
	24	[504]	GETTABLE 	R3 R0 K11 ; R3 := R0["radialSector"]
	25	[504]	GETTABLE 	R3 R3 K12 ; R3 := R3["mission"]
	26	[504]	GETTABLE 	R3 R3 K13 ; R3 := R3["levelOverride"]
	27	[504]	CALL     	R2 2 2 ; R2 := R2(R3)
	28	[504]	TEST     	R2 1 ; if R2 then PC := 107
	29	[504]	JMP      	107 ; PC := 107
	30	[504]	GETUPVAL 	R2 U0 ; R2 := U0
	31	[504]	GETUPVAL 	R3 U1 ; R3 := U1
	32	[504]	GETTABLE 	R3 R3 K5 ; R3 := R3["EDIT_EDGES"]
	33	[504]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 107
	34	[504]	JMP      	107 ; PC := 107
	35	[505]	GETTABLE 	R2 R0 K11 ; R2 := R0["radialSector"]
	36	[505]	GETTABLE 	R2 R2 K12 ; R2 := R2["mission"]
	37	[505]	GETTABLE 	R2 R2 K13 ; R2 := R2["levelOverride"]
	38	[505]	SELF     	R2 R2 K14 ; R3 := R2; R2 := R2[0xed4e0128]
	39	[505]	CALL     	R2 2 2 ; R2 := R2(R3)
	40	[506]	GETGLOBAL	R3 K15 ; R3 := 0x7f5022cf
	41	[506]	GETTABLE 	R3 R3 K16 ; R3 := R3[0x348c01f7]
	42	[506]	MOVE     	R4 R2 ; R4 := R2
	43	[506]	LOADK    	R5 K17 ; R5 := ".*/(.*)"
	44	[506]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	45	[507]	MOVE     	R4 R1 ; R4 := R1
	46	[507]	LOADK    	R5 K18 ; R5 := "\r"
	47	[507]	MOVE     	R6 R3 ; R6 := R3
	48	[507]	CONCAT   	R1 R4 R6 ; R1 := R4 .. R5 .. R6
	49	[508]	JMP      	107 ; PC := 107
	50	[509]	GETUPVAL 	R4 U0 ; R4 := U0
	51	[509]	GETUPVAL 	R5 U1 ; R5 := U1
	52	[509]	GETTABLE 	R5 R5 K19 ; R5 := R5["EDIT_NODE_DECOS"]
	53	[509]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 107
	54	[509]	JMP      	107 ; PC := 107
	55	[509]	GETTABLE 	R4 R0 K20 ; R4 := R0["deco"]
	56	[509]	EQ       	1 R4 K2 ; if R4 == nil then PC := 107
	57	[509]	JMP      	107 ; PC := 107
	58	[510]	GETUPVAL 	R4 U2 ; R4 := U2
	59	[510]	GETTABLE 	R4 R4 K21 ; R4 := R4["mEditingRotation"]
	60	[510]	TEST     	R4 1 ; if R4 then PC := 70
	61	[510]	JMP      	70 ; PC := 70
	62	[510]	GETUPVAL 	R4 U3 ; R4 := U3
	63	[510]	GETTABLE 	R4 R4 K22 ; R4 := R4["mShiftDown"]
	64	[510]	TEST     	R4 1 ; if R4 then PC := 70
	65	[510]	JMP      	70 ; PC := 70
	66	[510]	GETUPVAL 	R4 U3 ; R4 := U3
	67	[510]	GETTABLE 	R4 R4 K23 ; R4 := R4["mControlDown"]
	68	[510]	TEST     	R4 0 ; if not R4 then PC := 84
	69	[510]	JMP      	84 ; PC := 84
	70	[511]	MOVE     	R4 R1 ; R4 := R1
	71	[511]	LOADK    	R5 K18 ; R5 := "\r"
	72	[511]	GETUPVAL 	R6 U2 ; R6 := U2
	73	[511]	GETTABLE 	R6 R6 K24 ; R6 := R6["mRotationAxis"]
	74	[511]	LOADK    	R7 K25 ; R7 := "="
	75	[511]	GETGLOBAL	R8 K7 ; R8 := 0x64fb1586
	76	[511]	GETTABLE 	R9 R0 K20 ; R9 := R0["deco"]
	77	[511]	GETTABLE 	R9 R9 K26 ; R9 := R9["mRotation"]
	78	[511]	GETUPVAL 	R10 U2 ; R10 := U2
	79	[511]	GETTABLE 	R10 R10 K24 ; R10 := R10["mRotationAxis"]
	80	[511]	GETTABLE 	R9 R9 R10 ; R9 := R9[R10]
	81	[511]	CALL     	R8 2 2 ; R8 := R8(R9)
	82	[511]	CONCAT   	R1 R4 R8 ; R1 := R4 .. R5 .. R6 .. R7 .. R8
	83	[511]	JMP      	107 ; PC := 107
	84	[512]	GETUPVAL 	R4 U2 ; R4 := U2
	85	[512]	GETTABLE 	R4 R4 K27 ; R4 := R4["mEditingScale"]
	86	[512]	TEST     	R4 1 ; if R4 then PC := 92
	87	[512]	JMP      	92 ; PC := 92
	88	[512]	GETUPVAL 	R4 U3 ; R4 := U3
	89	[512]	GETTABLE 	R4 R4 K28 ; R4 := R4["mAltDown"]
	90	[512]	TEST     	R4 0 ; if not R4 then PC := 100
	91	[512]	JMP      	100 ; PC := 100
	92	[513]	MOVE     	R4 R1 ; R4 := R1
	93	[513]	LOADK    	R5 K29 ; R5 := "\rScale="
	94	[513]	GETGLOBAL	R6 K7 ; R6 := 0x64fb1586
	95	[513]	GETTABLE 	R7 R0 K20 ; R7 := R0["deco"]
	96	[513]	GETTABLE 	R7 R7 K30 ; R7 := R7["mScale"]
	97	[513]	CALL     	R6 2 2 ; R6 := R6(R7)
	98	[513]	CONCAT   	R1 R4 R6 ; R1 := R4 .. R5 .. R6
	99	[513]	JMP      	107 ; PC := 107
	100	[515]	MOVE     	R4 R1 ; R4 := R1
	101	[515]	LOADK    	R5 K18 ; R5 := "\r"
	102	[515]	GETGLOBAL	R6 K7 ; R6 := 0x64fb1586
	103	[515]	GETTABLE 	R7 R0 K20 ; R7 := R0["deco"]
	104	[515]	GETTABLE 	R7 R7 K31 ; R7 := R7["mOffset"]
	105	[515]	CALL     	R6 2 2 ; R6 := R6(R7)
	106	[515]	CONCAT   	R1 R4 R6 ; R1 := R4 .. R5 .. R6
	107	[519]	GETTABLE 	R4 R0 K32 ; R4 := R0["locationEnabled"]
	108	[519]	TEST     	R4 1 ; if R4 then PC := 118
	109	[519]	JMP      	118 ; PC := 118
	110	[519]	GETTABLE 	R4 R0 K11 ; R4 := R0["radialSector"]
	111	[519]	GETTABLE 	R4 R4 K33 ; R4 := R4["missionTag"]
	112	[519]	GETUPVAL 	R5 U4 ; R5 := U4
	113	[519]	GETTABLE 	R5 R5 K34 ; R5 := R5["DESTROYED_NODE_TAG"]
	114	[519]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 118
	115	[519]	JMP      	118 ; PC := 118
	116	[520]	LOADK    	R1 K0 ; R1 := ""
	117	[520]	JMP      	127 ; PC := 127
	118	[521]	GETTABLE 	R4 R0 K35 ; R4 := R0["locked"]
	119	[521]	TEST     	R4 0 ; if not R4 then PC := 127
	120	[521]	JMP      	127 ; PC := 127
	121	[521]	GETTABLE 	R4 R0 K32 ; R4 := R0["locationEnabled"]
	122	[521]	TEST     	R4 0 ; if not R4 then PC := 127
	123	[521]	JMP      	127 ; PC := 127
	124	[522]	GETGLOBAL	R4 K36 ; R4 := mLockIcon
	125	[522]	MOVE     	R5 R1 ; R5 := R1
	126	[522]	CONCAT   	R1 R4 R5 ; R1 := R4 .. R5
	127	[526]	GETGLOBAL	R4 K37 ; R4 := 0xae91e43b
	128	[526]	SELF     	R4 R4 K38 ; R5 := R4; R4 := R4[0xe261aa96]
	129	[526]	GETTABLE 	R6 R0 K39 ; R6 := R0["clipName"]
	130	[526]	LOADK    	R7 K40 ; R7 := "Name.Label"
	131	[526]	LOADK    	R8 := 29.000000
	132	[526]	MOVE     	R9 R1 ; R9 := R1
	133	[526]	CALL     	R4 6 1 ; R4(R5,R6,R7,R8,R9)
	134	[527]	GETGLOBAL	R4 K37 ; R4 := 0xae91e43b
	135	[527]	SELF     	R4 R4 K41 ; R5 := R4; R4 := R4[0x2ce15376]
	136	[527]	GETTABLE 	R6 R0 K39 ; R6 := R0["clipName"]
	137	[527]	LOADK    	R7 K40 ; R7 := "Name.Label"
	138	[527]	LOADK    	R8 := 33.000000
	139	[527]	CALL     	R4 5 2 ; R4 := R4(R5,R6,R7,R8)
	140	[528]	TEST     	R4 0 ; if not R4 then PC := 149
	141	[528]	JMP      	149 ; PC := 149
	142	[529]	GETGLOBAL	R5 K37 ; R5 := 0xae91e43b
	143	[529]	SELF     	R5 R5 K42 ; R6 := R5; R5 := R5[0xf64b7262]
	144	[529]	GETTABLE 	R7 R0 K39 ; R7 := R0["clipName"]
	145	[529]	LOADK    	R8 K43 ; R8 := "Name.Bg"
	146	[529]	LOADK    	R9 := 12.000000
	147	[529]	ADD      	R10 R4 K44 ; R10 := R4 + 7.000000
	148	[529]	CALL     	R5 6 1 ; R5(R6,R7,R8,R9,R10)
	149	[531]	RETURN   	R0 1 ; return 

function #9 <?:533,538> (13 instructions, 52 bytes at 0000021110D47DF0)
0 params, 6 slots, 2 upvalues, 0 locals, 1 constant, 0 functions
	1	[534]	LOADK    	R0 := 1.000000
	2	[534]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[534]	LEN      	R1 R1 ; R1 := # R1
	4	[534]	LOADK    	R2 := 1.000000
	5	[534]	FORPREP  	R0 12 ; R0 -= R2; PC := 12
	6	[535]	GETGLOBAL	R4 K0 ; R4 := 0xce225efa
	7	[535]	CALL     	R4 1 1 ; R4()
	8	[536]	GETUPVAL 	R4 U1 ; R4 := U1
	9	[536]	GETUPVAL 	R5 U0 ; R5 := U0
	10	[536]	GETTABLE 	R5 R5 R3 ; R5 := R5[R3]
	11	[536]	CALL     	R4 2 1 ; R4(R5)
	12	[534]	FORLOOP  	R0 6 ; R0 += R2; if R0 <= R1 then begin PC := 6; R3 := R0 end
	13	[538]	RETURN   	R0 1 ; return 

function #10 <?:540,544> (9 instructions, 36 bytes at 0000021110D47F20)
0 params, 2 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[541]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[541]	GETGLOBAL	R1 K1 ; R1 := mInfoTip
	3	[541]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[541]	TEST     	R0 1 ; if R0 then PC := 9
	5	[541]	JMP      	9 ; PC := 9
	6	[542]	GETGLOBAL	R0 K1 ; R0 := mInfoTip
	7	[542]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x4203b007]
	8	[542]	CALL     	R0 2 1 ; R0(R1)
	9	[544]	RETURN   	R0 1 ; return 

function #11 <?:546,583> (101 instructions, 404 bytes at 0000021110D48070)
1 param, 15 slots, 4 upvalues, 0 locals, 31 constants, 1 function
	1	[547]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[547]	GETTABLE 	R1 R1 K1 ; R1 := R1["CustomStarChartNodeFilter"]
	3	[547]	EQ       	1 R1 K2 ; if R1 == nil then PC := 35
	4	[547]	JMP      	35 ; PC := 35
	5	[547]	GETGLOBAL	R1 K0 ; R1 := _T
	6	[547]	GETTABLE 	R1 R1 K1 ; R1 := R1["CustomStarChartNodeFilter"]
	7	[547]	GETTABLE 	R1 R1 K3 ; R1 := R1["NewWarMode"]
	8	[547]	TEST     	R1 0 ; if not R1 then PC := 35
	9	[547]	JMP      	35 ; PC := 35
	10	[548]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	11	[548]	GETTABLE 	R2 R0 K5 ; R2 := R0["radialSector"]
	12	[548]	GETTABLE 	R2 R2 K6 ; R2 := R2["mission"]
	13	[548]	GETTABLE 	R2 R2 K7 ; R2 := R2["levelKeyName"]
	14	[548]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[548]	TEST     	R1 1 ; if R1 then PC := 34
	16	[548]	JMP      	34 ; PC := 34
	17	[549]	GETGLOBAL	R1 K8 ; R1 := 0xb009bbc6
	18	[549]	GETTABLE 	R2 R0 K5 ; R2 := R0["radialSector"]
	19	[549]	GETTABLE 	R2 R2 K6 ; R2 := R2["mission"]
	20	[549]	GETTABLE 	R2 R2 K7 ; R2 := R2["levelKeyName"]
	21	[549]	CALL     	R1 2 2 ; R1 := R1(R2)
	22	[550]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	23	[550]	MOVE     	R3 R1 ; R3 := R1
	24	[550]	CALL     	R2 2 2 ; R2 := R2(R3)
	25	[550]	TEST     	R2 1 ; if R2 then PC := 34
	26	[550]	JMP      	34 ; PC := 34
	27	[551]	GETGLOBAL	R2 K9 ; R2 := mInfoTip
	28	[551]	SELF     	R2 R2 K10 ; R3 := R2; R2 := R2[0x49dbe0b0]
	29	[551]	MOVE     	R4 R0 ; R4 := R0
	30	[551]	SELF     	R5 R1 K11 ; R6 := R1; R5 := R1[0x10c9eef2]
	31	[551]	CALL     	R5 2 2 ; R5 := R5(R6)
	32	[551]	GETGLOBAL	R6 K12 ; R6 := 0x649e8f83
	33	[551]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	34	[554]	RETURN   	R0 1 ; return 
	35	[557]	GETGLOBAL	R2 K13 ; R2 := 0x9ba7909f
	36	[557]	SELF     	R2 R2 K14 ; R3 := R2; R2 := R2[0xbcfb64ab]
	37	[557]	GETGLOBAL	R4 K15 ; R4 := 0x0032441c
	38	[557]	GETTABLE 	R4 R4 K16 ; R4 := R4["UIMovie_TransmissionMovie"]
	39	[557]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	40	[558]	GETGLOBAL	R3 K4 ; R3 := 0x7b998233
	41	[558]	MOVE     	R4 R2 ; R4 := R2
	42	[558]	CALL     	R3 2 2 ; R3 := R3(R4)
	43	[558]	TEST     	R3 1 ; if R3 then PC := 53
	44	[558]	JMP      	53 ; PC := 53
	45	[559]	GETUPVAL 	R3 U0 ; R3 := U0
	46	[559]	SELF     	R3 R3 K17 ; R4 := R3; R3 := R3[0xbd2e96ea]
	47	[559]	LOADK    	R5 := 2.000000
	48	[564]	CLOSURE  	R6 0 ; R6 := closure(Function #1)
	49	[564]	MOVE     	R0 R0 ; R0 := R0
	50	[564]	GETUPVAL 	R0 U1 ; R0 := U1
	51	[559]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	52	[565]	RETURN   	R0 1 ; return 
	53	[568]	GETGLOBAL	R3 K18 ; R3 := 0x64fb1586
	54	[568]	GETTABLE 	R4 R0 K19 ; R4 := R0["name"]
	55	[568]	CALL     	R3 2 2 ; R3 := R3(R4)
	56	[569]	GETGLOBAL	R4 K0 ; R4 := _T
	57	[569]	GETTABLE 	R4 R4 K20 ; R4 := R4["CachedInvasionInfo"]
	58	[569]	GETTABLE 	R4 R4 R3 ; R4 := R4[R3]
	59	[569]	TEST     	R4 0 ; if not R4 then PC := 69
	60	[569]	JMP      	69 ; PC := 69
	61	[569]	GETGLOBAL	R4 K0 ; R4 := _T
	62	[569]	GETTABLE 	R4 R4 K20 ; R4 := R4["CachedInvasionInfo"]
	63	[569]	GETTABLE 	R4 R4 R3 ; R4 := R4[R3]
	64	[569]	GETTABLE 	R4 R4 K21 ; R4 := R4["mDefenderMissionInfo"]
	65	[569]	GETTABLE 	R4 R4 K22 ; R4 := R4["uniqueName"]
	66	[569]	EQ       	0 R4 K23 ; if R4 ~= "/Lotus/Language/Bosses/BossPhorid" then PC := 69
	67	[569]	JMP      	69 ; PC := 69
	68	[570]	LOADK    	R3 K24 ; R3 := "/Lotus/Types/Keys/SortieBossKeyPhorid"
	69	[575]	LOADK    	R4 := 0.000000
	70	[575]	LOADK    	R5 := 17.000000
	71	[575]	LOADK    	R6 := 1.000000
	72	[575]	FORPREP  	R4 100 ; R4 -= R6; PC := 100
	73	[576]	GETUPVAL 	R8 U2 ; R8 := U2
	74	[576]	GETTABLE 	R8 R8 K26 ; R8 := R8["mBossInfo"]
	75	[576]	GETTABLE 	R8 R8 R7 ; R8 := R8[R7]
	76	[577]	GETGLOBAL	R9 K4 ; R9 := 0x7b998233
	77	[577]	MOVE     	R10 R8 ; R10 := R8
	78	[577]	CALL     	R9 2 2 ; R9 := R9(R10)
	79	[577]	TEST     	R9 1 ; if R9 then PC := 100
	80	[577]	JMP      	100 ; PC := 100
	81	[577]	GETTABLE 	R9 R8 K27 ; R9 := R8["BossNode"]
	82	[577]	EQ       	0 R9 R3 ; if R9 ~= R3 then PC := 100
	83	[577]	JMP      	100 ; PC := 100
	84	[578]	GETUPVAL 	R9 U3 ; R9 := U3
	85	[578]	GETTABLE 	R9 R9 K28 ; R9 := R9[0x06d055f9]
	86	[578]	GETGLOBAL	R10 K4 ; R10 := 0x7b998233
	87	[578]	GETTABLE 	R11 R8 K29 ; R11 := R8["BossNodeTransmission"]
	88	[578]	CALL     	R10 2 2 ; R10 := R10(R11)
	89	[578]	NOT      	R10 R10 ; R10 := not R10
	90	[578]	GETTABLE 	R11 R8 K29 ; R11 := R8["BossNodeTransmission"]
	91	[578]	GETTABLE 	R12 R8 K30 ; R12 := R8["Transmission"]
	92	[578]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	93	[579]	GETGLOBAL	R10 K9 ; R10 := mInfoTip
	94	[579]	SELF     	R10 R10 K10 ; R11 := R10; R10 := R10[0x49dbe0b0]
	95	[579]	MOVE     	R12 R0 ; R12 := R0
	96	[579]	MOVE     	R13 R9 ; R13 := R9
	97	[579]	GETGLOBAL	R14 K12 ; R14 := 0x649e8f83
	98	[579]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	99	[580]	JMP      	101 ; PC := 101
	100	[575]	FORLOOP  	R4 73 ; R4 += R6; if R4 <= R5 then begin PC := 73; R7 := R4 end
	101	[583]	RETURN   	R0 1 ; return 

function #12 <?:585,595> (37 instructions, 148 bytes at 0000021110D48820)
0 params, 5 slots, 1 upvalue, 0 locals, 12 constants, 0 functions
	1	[586]	LOADK    	R0 K0 ; R0 := ""
	2	[587]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	3	[587]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[587]	GETTABLE 	R2 R2 K2 ; R2 := R2["mEdgeNode1"]
	5	[587]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[587]	TEST     	R1 1 ; if R1 then PC := 32
	7	[587]	JMP      	32 ; PC := 32
	8	[588]	LOADK    	R1 K3 ; R1 := ": "
	9	[588]	GETGLOBAL	R2 K4 ; R2 := 0x64fb1586
	10	[588]	GETUPVAL 	R3 U0 ; R3 := U0
	11	[588]	GETTABLE 	R3 R3 K2 ; R3 := R3["mEdgeNode1"]
	12	[588]	GETTABLE 	R3 R3 K5 ; R3 := R3["radialSector"]
	13	[588]	GETTABLE 	R3 R3 K6 ; R3 := R3["name"]
	14	[588]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[588]	CONCAT   	R0 R1 R2 ; R0 := R1 .. R2
	16	[589]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	17	[589]	GETUPVAL 	R2 U0 ; R2 := U0
	18	[589]	GETTABLE 	R2 R2 K7 ; R2 := R2["mEdgeNode2"]
	19	[589]	CALL     	R1 2 2 ; R1 := R1(R2)
	20	[589]	TEST     	R1 1 ; if R1 then PC := 32
	21	[589]	JMP      	32 ; PC := 32
	22	[590]	MOVE     	R1 R0 ; R1 := R0
	23	[590]	LOADK    	R2 K8 ; R2 := " TO "
	24	[590]	GETGLOBAL	R3 K4 ; R3 := 0x64fb1586
	25	[590]	GETUPVAL 	R4 U0 ; R4 := U0
	26	[590]	GETTABLE 	R4 R4 K7 ; R4 := R4["mEdgeNode2"]
	27	[590]	GETTABLE 	R4 R4 K5 ; R4 := R4["radialSector"]
	28	[590]	GETTABLE 	R4 R4 K6 ; R4 := R4["name"]
	29	[590]	CALL     	R3 2 2 ; R3 := R3(R4)
	30	[590]	LOADK    	R4 K9 ; R4 := " (A)dd or (D)elete?"
	31	[590]	CONCAT   	R0 R1 R4 ; R0 := R1 .. R2 .. R3 .. R4
	32	[593]	LOADK    	R1 K10 ; R1 := "EDITING EDGES"
	33	[593]	MOVE     	R2 R0 ; R2 := R0
	34	[593]	LOADK    	R3 K11 ; R3 := "\r >CTRL=Multi-select"
	35	[593]	CONCAT   	R1 R1 R3 ; R1 := R1 .. R2 .. R3
	36	[594]	RETURN   	R1 2 ; return R1 
	37	[595]	RETURN   	R0 1 ; return 

function #13 <?:597,624> (89 instructions, 356 bytes at 0000021110D48C50)
0 params, 8 slots, 5 upvalues, 0 locals, 30 constants, 0 functions
	1	[598]	LOADK    	R0 K0 ; R0 := ""
	2	[599]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[599]	SETTABLE 	R1 K1 K2 ; R1["INACTIVE_NODE_ALPHA"] := 0.000000
	4	[600]	GETUPVAL 	R1 U1 ; R1 := U1
	5	[600]	GETUPVAL 	R2 U2 ; R2 := U2
	6	[600]	GETTABLE 	R2 R2 K3 ; R2 := R2["EDIT_REGIONS"]
	7	[600]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 11
	8	[600]	JMP      	11 ; PC := 11
	9	[601]	LOADK    	R0 K4 ; R0 := "EDITING REGIONS"
	10	[601]	JMP      	83 ; PC := 83
	11	[602]	GETUPVAL 	R1 U1 ; R1 := U1
	12	[602]	GETUPVAL 	R2 U2 ; R2 := U2
	13	[602]	GETTABLE 	R2 R2 K5 ; R2 := R2["EDIT_REGION_FRAMING"]
	14	[602]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 37
	15	[602]	JMP      	37 ; PC := 37
	16	[603]	GETGLOBAL	R1 K6 ; R1 := mRegions
	17	[603]	GETUPVAL 	R2 U3 ; R2 := U3
	18	[603]	GETTABLE 	R2 R2 K7 ; R2 := R2["mFramingRegion"]
	19	[603]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	20	[604]	LOADK    	R2 K8 ; R2 := "NONE"
	21	[605]	EQ       	1 R1 K9 ; if R1 == nil then PC := 32
	22	[605]	JMP      	32 ; PC := 32
	23	[606]	GETGLOBAL	R3 K10 ; R3 := 0x7f5022cf
	24	[606]	GETTABLE 	R3 R3 K11 ; R3 := R3[0x3f3e4d12]
	25	[606]	GETGLOBAL	R4 K12 ; R4 := 0xae91e43b
	26	[606]	SELF     	R4 R4 K13 ; R5 := R4; R4 := R4[0x42b04007]
	27	[606]	GETTABLE 	R6 R1 K14 ; R6 := R1["name"]
	28	[606]	OP_LOADBOOL	R7 0 0 ; R7 := false
	29	[606]	CALL     	R4 4 0 ; R4,... := R4(R5,R6,R7)
	30	[606]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	31	[606]	MOVE     	R2 R3 ; R2 := R3
	32	[608]	LOADK    	R3 K15 ; R3 := "EDITING REGION FRAMING ["
	33	[608]	MOVE     	R4 R2 ; R4 := R2
	34	[608]	LOADK    	R5 K16 ; R5 := "]\r >R=Toggle"
	35	[608]	CONCAT   	R0 R3 R5 ; R0 := R3 .. R4 .. R5
	36	[608]	JMP      	83 ; PC := 83
	37	[609]	GETUPVAL 	R3 U1 ; R3 := U1
	38	[609]	GETUPVAL 	R4 U2 ; R4 := U2
	39	[609]	GETTABLE 	R4 R4 K17 ; R4 := R4["EDIT_NODES"]
	40	[609]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 46
	41	[609]	JMP      	46 ; PC := 46
	42	[610]	LOADK    	R0 K18 ; R0 := "EDITING NODES\r >SHIFT=Z Depth"
	43	[611]	GETUPVAL 	R3 U0 ; R3 := U0
	44	[611]	SETTABLE 	R3 K1 K19 ; R3["INACTIVE_NODE_ALPHA"] := 20.000000
	45	[611]	JMP      	83 ; PC := 83
	46	[612]	GETUPVAL 	R3 U1 ; R3 := U1
	47	[612]	GETUPVAL 	R4 U2 ; R4 := U2
	48	[612]	GETTABLE 	R4 R4 K20 ; R4 := R4["EDIT_EDGES"]
	49	[612]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 57
	50	[612]	JMP      	57 ; PC := 57
	51	[613]	GETUPVAL 	R3 U4 ; R3 := U4
	52	[613]	CALL     	R3 1 2 ; R3 := R3()
	53	[613]	MOVE     	R0 R3 ; R0 := R3
	54	[614]	GETUPVAL 	R3 U0 ; R3 := U0
	55	[614]	SETTABLE 	R3 K1 K19 ; R3["INACTIVE_NODE_ALPHA"] := 20.000000
	56	[614]	JMP      	83 ; PC := 83
	57	[615]	GETUPVAL 	R3 U1 ; R3 := U1
	58	[615]	GETUPVAL 	R4 U2 ; R4 := U2
	59	[615]	GETTABLE 	R4 R4 K21 ; R4 := R4["EDIT_NODE_DECOS"]
	60	[615]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 64
	61	[615]	JMP      	64 ; PC := 64
	62	[616]	LOADK    	R0 K22 ; R0 := "EDITING NODE DECOS \r >ALT=Scale\r >SHIFT=Heading\r >CTRL=Pitch\r >SHIFT+CTRL=Bank"
	63	[616]	JMP      	83 ; PC := 83
	64	[617]	GETUPVAL 	R3 U1 ; R3 := U1
	65	[617]	GETUPVAL 	R4 U2 ; R4 := U2
	66	[617]	GETTABLE 	R4 R4 K23 ; R4 := R4["EDIT_SHORTCUT_CONTROL_POINTS"]
	67	[617]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 71
	68	[617]	JMP      	71 ; PC := 71
	69	[618]	LOADK    	R0 K24 ; R0 := "EDITING EDGE CONTROL POINTS \r >SHIFT=Z Depth"
	70	[618]	JMP      	83 ; PC := 83
	71	[619]	GETGLOBAL	R3 K25 ; R3 := _T
	72	[619]	GETTABLE 	R3 R3 K26 ; R3 := R3["WareframeChallenge"]
	73	[619]	TEST     	R3 0 ; if not R3 then PC := 83
	74	[619]	JMP      	83 ; PC := 83
	75	[619]	GETGLOBAL	R3 K25 ; R3 := _T
	76	[619]	GETTABLE 	R3 R3 K26 ; R3 := R3["WareframeChallenge"]
	77	[619]	GETTABLE 	R3 R3 K27 ; R3 := R3["StarChartLabel"]
	78	[619]	TEST     	R3 0 ; if not R3 then PC := 83
	79	[619]	JMP      	83 ; PC := 83
	80	[620]	GETGLOBAL	R3 K25 ; R3 := _T
	81	[620]	GETTABLE 	R3 R3 K26 ; R3 := R3["WareframeChallenge"]
	82	[620]	GETTABLE 	R0 R3 K27 ; R0 := R3["StarChartLabel"]
	83	[623]	GETGLOBAL	R3 K12 ; R3 := 0xae91e43b
	84	[623]	SELF     	R3 R3 K28 ; R4 := R3; R3 := R3[0x5f56eeab]
	85	[623]	LOADK    	R5 K29 ; R5 := "ScreenModeLabel"
	86	[623]	LOADK    	R6 := 29.000000
	87	[623]	MOVE     	R7 R0 ; R7 := R0
	88	[623]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	89	[624]	RETURN   	R0 1 ; return 

function #14 <?:626,641> (58 instructions, 232 bytes at 0000021110D49490)
1 param, 17 slots, 1 upvalue, 0 locals, 18 constants, 0 functions
	1	[627]	LOADK    	R1 := 1.000000
	2	[627]	GETGLOBAL	R2 K0 ; R2 := mFlatEdges
	3	[627]	LEN      	R2 R2 ; R2 := # R2
	4	[627]	LOADK    	R3 := 1.000000
	5	[627]	FORPREP  	R1 57 ; R1 -= R3; PC := 57
	6	[628]	GETGLOBAL	R5 K0 ; R5 := mFlatEdges
	7	[628]	GETTABLE 	R5 R5 R4 ; R5 := R5[R4]
	8	[628]	GETTABLE 	R5 R5 K1 ; R5 := R5["IsShortcut"]
	9	[628]	TEST     	R5 0 ; if not R5 then PC := 57
	10	[628]	JMP      	57 ; PC := 57
	11	[629]	GETGLOBAL	R5 K2 ; R5 := 0xc8802016
	12	[629]	NEWTABLE 	R6 2 0 ; R6 := {}
	13	[629]	GETGLOBAL	R7 K0 ; R7 := mFlatEdges
	14	[629]	GETTABLE 	R7 R7 R4 ; R7 := R7[R4]
	15	[629]	GETTABLE 	R7 R7 K3 ; R7 := R7["controlPointA"]
	16	[629]	GETGLOBAL	R8 K0 ; R8 := mFlatEdges
	17	[629]	GETTABLE 	R8 R8 R4 ; R8 := R8[R4]
	18	[629]	GETTABLE 	R8 R8 K4 ; R8 := R8["controlPointB"]
	19	[629]	SETLIST  	R6 2 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
	20	[629]	CALL     	R5 2 4 ; R5,R6,R7 := R5(R6)
	21	[629]	JMP      	55 ; PC := 55
	22	[630]	TEST     	R0 0 ; if not R0 then PC := 51
	23	[630]	JMP      	51 ; PC := 51
	24	[631]	GETGLOBAL	R10 K6 ; R10 := 0x1211d00f
	25	[631]	SELF     	R10 R10 K7 ; R11 := R10; R10 := R10[0x05909209]
	26	[631]	GETGLOBAL	R12 K8 ; R12 := 0x5a16eeaa
	27	[631]	GETTABLE 	R13 R9 K9 ; R13 := R9["position"]
	28	[631]	GETUPVAL 	R14 U0 ; R14 := U0
	29	[631]	GETTABLE 	R14 R14 K10 ; R14 := R14["RING_ROTATION"]
	30	[631]	CALL     	R10 5 2 ; R10 := R10(R11,R12,R13,R14)
	31	[631]	SETTABLE 	R9 K5 R10 ; R9["ringInstance"] := R10
	32	[632]	GETTABLE 	R10 R9 K5 ; R10 := R9["ringInstance"]
	33	[632]	SELF     	R10 R10 K11 ; R11 := R10; R10 := R10[0xc2b4e597]
	34	[632]	GETGLOBAL	R12 K12 ; R12 := 0x60130201
	35	[632]	LOADK    	R13 := 0.000000
	36	[632]	LOADK    	R14 := 255.000000
	37	[632]	LOADK    	R15 := 0.000000
	38	[632]	LOADK    	R16 := 255.000000
	39	[632]	CALL     	R12 5 0 ; R12,... := R12(R13,R14,R15,R16)
	40	[632]	CALL     	R10 0 1 ; R10(R11,...)
	41	[633]	GETTABLE 	R10 R9 K5 ; R10 := R9["ringInstance"]
	42	[633]	SELF     	R10 R10 K13 ; R11 := R10; R10 := R10[0x1b50cf3b]
	43	[633]	LOADK    	R12 K14 ; R12 := 0.025000
	44	[633]	LOADK    	R13 K14 ; R13 := 0.025000
	45	[633]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	46	[634]	GETTABLE 	R10 R9 K5 ; R10 := R9["ringInstance"]
	47	[634]	SELF     	R10 R10 K15 ; R11 := R10; R10 := R10[0xce1fc190]
	48	[634]	LOADK    	R12 K16 ; R12 := 0.200000
	49	[634]	CALL     	R10 3 1 ; R10(R11,R12)
	50	[634]	JMP      	55 ; PC := 55
	51	[636]	GETGLOBAL	R10 K6 ; R10 := 0x1211d00f
	52	[636]	SELF     	R10 R10 K17 ; R11 := R10; R10 := R10[0x59c96e77]
	53	[636]	GETTABLE 	R12 R9 K5 ; R12 := R9["ringInstance"]
	54	[636]	CALL     	R10 3 1 ; R10(R11,R12)
	55	[629]	TFORLOOP 	R5 2 ; R8,R9 := R5(R6,R7); if R8 ~= nil then begin PC = 22; R7 := R8 end
	56	[637]	JMP      	22 ; PC := 22
	57	[627]	FORLOOP  	R1 6 ; R1 += R3; if R1 <= R2 then begin PC := 6; R4 := R1 end
	58	[641]	RETURN   	R0 1 ; return 

function #15 <?:643,657> (23 instructions, 92 bytes at 0000021110D49950)
1 param, 4 slots, 5 upvalues, 0 locals, 1 constant, 0 functions
	1	[644]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[646]	SETUPVAL 	R0 U0 ; U0 := R0
	3	[648]	GETUPVAL 	R2 U1 ; R2 := U1
	4	[648]	GETTABLE 	R2 R2 K0 ; R2 := R2["EDIT_SHORTCUT_CONTROL_POINTS"]
	5	[648]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 11
	6	[648]	JMP      	11 ; PC := 11
	7	[649]	GETUPVAL 	R2 U2 ; R2 := U2
	8	[649]	OP_LOADBOOL	R3 0 0 ; R3 := false
	9	[649]	CALL     	R2 2 1 ; R2(R3)
	10	[649]	JMP      	19 ; PC := 19
	11	[650]	GETUPVAL 	R2 U0 ; R2 := U0
	12	[650]	GETUPVAL 	R3 U1 ; R3 := U1
	13	[650]	GETTABLE 	R3 R3 K0 ; R3 := R3["EDIT_SHORTCUT_CONTROL_POINTS"]
	14	[650]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 19
	15	[650]	JMP      	19 ; PC := 19
	16	[651]	GETUPVAL 	R2 U2 ; R2 := U2
	17	[651]	OP_LOADBOOL	R3 1 0 ; R3 := true
	18	[651]	CALL     	R2 2 1 ; R2(R3)
	19	[654]	GETUPVAL 	R2 U3 ; R2 := U3
	20	[654]	CALL     	R2 1 1 ; R2()
	21	[656]	GETUPVAL 	R2 U4 ; R2 := U4
	22	[656]	CALL     	R2 1 1 ; R2()
	23	[657]	RETURN   	R0 1 ; return 

function #16 <?:659,747> (249 instructions, 996 bytes at 0000021110D49AE0)
0 params, 33 slots, 7 upvalues, 0 locals, 58 constants, 1 function
	1	[661]	NEWTABLE 	R0 0 0 ; R0 := {}
	2	[661]	SETUPVAL 	R0 U0 ; U0 := R0
	3	[662]	NEWTABLE 	R0 0 0 ; R0 := {}
	4	[662]	SETUPVAL 	R0 U1 ; U1 := R0
	5	[663]	OP_LOADBOOL	R0 0 0 ; R0 := false
	6	[663]	SETGLOBALHASH	R0 K0 ; mAggregationInProgress := R0
	7	[665]	GETGLOBAL	R0 K1 ; R0 := 0x7b998233
	8	[665]	GETGLOBAL	R1 K2 ; R1 := mRadialSolarMap
	9	[665]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[665]	TEST     	R0 0 ; if not R0 then PC := 13
	11	[665]	JMP      	13 ; PC := 13
	12	[666]	RETURN   	R0 1 ; return 
	13	[669]	NEWTABLE 	R0 10 0 ; R0 := {}
	14	[669]	GETUPVAL 	R1 U2 ; R1 := U2
	15	[669]	GETTABLE 	R1 R1 K3 ; R1 := R1["ALERT_FLAG"]
	16	[669]	GETUPVAL 	R2 U2 ; R2 := U2
	17	[669]	GETTABLE 	R2 R2 K4 ; R2 := R2["EVENT_FLAG"]
	18	[669]	GETUPVAL 	R3 U2 ; R3 := U2
	19	[669]	GETTABLE 	R3 R3 K5 ; R3 := R3["PVP_FLAG"]
	20	[669]	GETUPVAL 	R4 U2 ; R4 := U2
	21	[669]	GETTABLE 	R4 R4 K6 ; R4 := R4["NIGHTMARE_FLAG"]
	22	[669]	GETUPVAL 	R5 U2 ; R5 := U2
	23	[669]	GETTABLE 	R5 R5 K7 ; R5 := R5["INVASION_ATTACKER_FLAG"]
	24	[669]	GETUPVAL 	R6 U2 ; R6 := U2
	25	[669]	GETTABLE 	R6 R6 K8 ; R6 := R6["INVASION_DEFENDER_FLAG"]
	26	[669]	GETUPVAL 	R7 U2 ; R7 := U2
	27	[669]	GETTABLE 	R7 R7 K9 ; R7 := R7["SORTIE_MISSION_FLAG"]
	28	[669]	GETUPVAL 	R8 U2 ; R8 := U2
	29	[669]	GETTABLE 	R8 R8 K10 ; R8 := R8["SYNDICATE_MISSION_FLAG"]
	30	[669]	GETUPVAL 	R9 U2 ; R9 := U2
	31	[669]	GETTABLE 	R9 R9 K11 ; R9 := R9["ACTIVE_MISSION_FLAG"]
	32	[669]	GETUPVAL 	R10 U2 ; R10 := U2
	33	[669]	GETTABLE 	R10 R10 K12 ; R10 := R10["KUVA_TOWER_MISSION_FLAG"]
	34	[669]	SETLIST  	R0 10 1 ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 10
	35	[683]	CLOSURE  	R1 0 ; R1 := closure(Function #1)
	36	[683]	MOVE     	R0 R0 ; R0 := R0
	37	[685]	GETGLOBAL	R2 K13 ; R2 := 0xe7f2b02f
	38	[685]	SELF     	R2 R2 K14 ; R3 := R2; R2 := R2[0xcf705dd6]
	39	[685]	CALL     	R2 2 2 ; R2 := R2(R3)
	40	[686]	OP_LOADBOOL	R3 0 0 ; R3 := false
	41	[686]	TEST     	R3 0 ; if not R3 then PC := 59
	42	[686]	JMP      	59 ; PC := 59
	43	[687]	GETGLOBAL	R3 K15 ; R3 := 0x3d106989
	44	[687]	LOADK    	R4 K16 ; R4 := "Aggregation Results:"
	45	[687]	CALL     	R3 2 1 ; R3(R4)
	46	[688]	GETGLOBAL	R3 K17 ; R3 := 0xcfc01047
	47	[688]	MOVE     	R4 R2 ; R4 := R2
	48	[688]	CALL     	R3 2 4 ; R3,R4,R5 := R3(R4)
	49	[688]	JMP      	57 ; PC := 57
	50	[689]	GETGLOBAL	R8 K15 ; R8 := 0x3d106989
	51	[689]	LOADK    	R9 K18 ; R9 := "gameModeId="
	52	[689]	GETTABLE 	R10 R7 K19 ; R10 := R7["gameModeId"]
	53	[689]	LOADK    	R11 K20 ; R11 := ", count="
	54	[689]	GETTABLE 	R12 R7 K21 ; R12 := R7["count"]
	55	[689]	CONCAT   	R9 R9 R12 ; R9 := R9 .. R10 .. R11 .. R12
	56	[689]	CALL     	R8 2 1 ; R8(R9)
	57	[688]	TFORLOOP 	R3 2 ; R6,R7 := R3(R4,R5); if R6 ~= nil then begin PC = 50; R5 := R6 end
	58	[689]	JMP      	50 ; PC := 50
	59	[693]	LOADNIL  	R8 R10 ; R8 := R9 := R10 := nil
	60	[694]	GETUPVAL 	R11 U3 ; R11 := U3
	61	[694]	GETTABLE 	R11 R11 K22 ; R11 := R11[0x06d055f9]
	62	[694]	GETUPVAL 	R12 U4 ; R12 := U4
	63	[694]	GETTABLE 	R12 R12 K23 ; R12 := R12["CurrentTier"]
	64	[694]	LT       	1 K24 R12 ; if 0.000000 < R12 then PC := 67
	65	[694]	JMP      	67 ; PC := 67
	66	[694]	OP_LOADBOOL	R12 0 1 ; R12 := false; PC := 67
	67	[694]	OP_LOADBOOL	R12 1 0 ; R12 := true
	68	[694]	GETUPVAL 	R13 U2 ; R13 := U2
	69	[694]	GETTABLE 	R13 R13 K25 ; R13 := R13["HARD_MODE_FLAG"]
	70	[694]	LOADK    	R14 := 0.000000
	71	[694]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	72	[697]	GETGLOBAL	R12 K17 ; R12 := 0xcfc01047
	73	[697]	GETGLOBAL	R13 K26 ; R13 := mMapNodes
	74	[697]	CALL     	R12 2 4 ; R12,R13,R14 := R12(R13)
	75	[697]	JMP      	247 ; PC := 247
	76	[698]	GETGLOBAL	R17 K27 ; R17 := 0xce225efa
	77	[698]	LOADK    	R18 := 0.000000
	78	[698]	CALL     	R17 2 1 ; R17(R18)
	79	[700]	GETTABLE 	R17 R16 K28 ; R17 := R16["nodeType"]
	80	[700]	EQ       	1 R17 K30 ; if R17 == 5.000000 then PC := 247
	81	[700]	JMP      	247 ; PC := 247
	82	[702]	GETTABLE 	R17 R16 K31 ; R17 := R16["region"]
	83	[702]	ADD      	R8 R17 K32 ; R8 := R17 + 1.000000
	84	[703]	GETGLOBAL	R17 K33 ; R17 := 0x64fb1586
	85	[703]	GETTABLE 	R18 R16 K34 ; R18 := R16["name"]
	86	[703]	CALL     	R17 2 2 ; R17 := R17(R18)
	87	[703]	MOVE     	R9 R17 ; R9 := R17
	88	[704]	GETUPVAL 	R17 U2 ; R17 := U2
	89	[704]	GETTABLE 	R17 R17 K35 ; R17 := R17[0x7155f039]
	90	[704]	MOVE     	R18 R9 ; R18 := R9
	91	[704]	GETGLOBAL	R19 K2 ; R19 := mRadialSolarMap
	92	[704]	MOVE     	R20 R16 ; R20 := R16
	93	[704]	CALL     	R17 4 2 ; R17 := R17(R18,R19,R20)
	94	[704]	ADD      	R10 R17 R11 ; R10 := R17 + R11
	95	[706]	GETUPVAL 	R17 U1 ; R17 := U1
	96	[706]	SETTABLE 	R17 R10 K24 ; R17[R10] := 0.000000
	97	[708]	GETGLOBAL	R17 K17 ; R17 := 0xcfc01047
	98	[708]	MOVE     	R18 R2 ; R18 := R2
	99	[708]	CALL     	R17 2 4 ; R17,R18,R19 := R17(R18)
	100	[708]	JMP      	137 ; PC := 137
	101	[709]	GETGLOBAL	R22 K36 ; R22 := 0x0032441c
	102	[709]	GETTABLE 	R22 R22 K37 ; R22 := R22["StalkerMode"]
	103	[709]	TEST     	R22 0 ; if not R22 then PC := 125
	104	[709]	JMP      	125 ; PC := 125
	105	[711]	GETTABLE 	R22 R21 K19 ; R22 := R21["gameModeId"]
	106	[711]	EQ       	0 R22 R10 ; if R22 ~= R10 then PC := 137
	107	[711]	JMP      	137 ; PC := 137
	108	[712]	GETTABLE 	R22 R16 K28 ; R22 := R16["nodeType"]
	109	[712]	EQ       	1 R22 K24 ; if R22 == 0.000000 then PC := 114
	110	[712]	JMP      	114 ; PC := 114
	111	[712]	GETTABLE 	R22 R16 K28 ; R22 := R16["nodeType"]
	112	[712]	EQ       	0 R22 K38 ; if R22 ~= 4.000000 then PC := 137
	113	[712]	JMP      	137 ; PC := 137
	114	[712]	GETTABLE 	R22 R16 K39 ; R22 := R16["mission"]
	115	[712]	GETTABLE 	R22 R22 K40 ; R22 := R22["archwingRequired"]
	116	[712]	TEST     	R22 1 ; if R22 then PC := 137
	117	[712]	JMP      	137 ; PC := 137
	118	[713]	GETUPVAL 	R22 U1 ; R22 := U1
	119	[713]	GETUPVAL 	R23 U1 ; R23 := U1
	120	[713]	GETTABLE 	R23 R23 R10 ; R23 := R23[R10]
	121	[713]	GETTABLE 	R24 R21 K21 ; R24 := R21["count"]
	122	[713]	ADD      	R23 R23 R24 ; R23 := R23 + R24
	123	[713]	SETTABLE 	R22 R10 R23 ; R22[R10] := R23
	124	[715]	JMP      	137 ; PC := 137
	125	[716]	MOVE     	R22 R1 ; R22 := R1
	126	[716]	GETTABLE 	R23 R21 K19 ; R23 := R21["gameModeId"]
	127	[716]	MOVE     	R24 R10 ; R24 := R10
	128	[716]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	129	[716]	TEST     	R22 0 ; if not R22 then PC := 137
	130	[716]	JMP      	137 ; PC := 137
	131	[717]	GETUPVAL 	R22 U1 ; R22 := U1
	132	[717]	GETUPVAL 	R23 U1 ; R23 := U1
	133	[717]	GETTABLE 	R23 R23 R10 ; R23 := R23[R10]
	134	[717]	GETTABLE 	R24 R21 K21 ; R24 := R21["count"]
	135	[717]	ADD      	R23 R23 R24 ; R23 := R23 + R24
	136	[717]	SETTABLE 	R22 R10 R23 ; R22[R10] := R23
	137	[708]	TFORLOOP 	R17 2 ; R20,R21 := R17(R18,R19); if R20 ~= nil then begin PC = 101; R19 := R20 end
	138	[718]	JMP      	101 ; PC := 101
	139	[722]	GETUPVAL 	R22 U0 ; R22 := U0
	140	[722]	GETTABLE 	R22 R22 R8 ; R22 := R22[R8]
	141	[722]	EQ       	0 R22 K41 ; if R22 ~= nil then PC := 145
	142	[722]	JMP      	145 ; PC := 145
	143	[723]	GETUPVAL 	R22 U0 ; R22 := U0
	144	[723]	SETTABLE 	R22 R8 K24 ; R22[R8] := 0.000000
	145	[726]	GETUPVAL 	R22 U1 ; R22 := U1
	146	[726]	GETTABLE 	R22 R22 R10 ; R22 := R22[R10]
	147	[726]	EQ       	1 R22 K41 ; if R22 == nil then PC := 156
	148	[726]	JMP      	156 ; PC := 156
	149	[727]	GETUPVAL 	R22 U0 ; R22 := U0
	150	[727]	GETUPVAL 	R23 U0 ; R23 := U0
	151	[727]	GETTABLE 	R23 R23 R8 ; R23 := R23[R8]
	152	[727]	GETUPVAL 	R24 U1 ; R24 := U1
	153	[727]	GETTABLE 	R24 R24 R10 ; R24 := R24[R10]
	154	[727]	ADD      	R23 R23 R24 ; R23 := R23 + R24
	155	[727]	SETTABLE 	R22 R8 R23 ; R22[R8] := R23
	156	[730]	GETGLOBAL	R22 K36 ; R22 := 0x0032441c
	157	[730]	GETTABLE 	R22 R22 K37 ; R22 := R22["StalkerMode"]
	158	[730]	TEST     	R22 0 ; if not R22 then PC := 247
	159	[730]	JMP      	247 ; PC := 247
	160	[731]	GETUPVAL 	R22 U5 ; R22 := U5
	161	[731]	TEST     	R22 0 ; if not R22 then PC := 195
	162	[731]	JMP      	195 ; PC := 195
	163	[732]	EQ       	0 R15 K32 ; if R15 ~= 1.000000 then PC := 170
	164	[732]	JMP      	170 ; PC := 170
	165	[733]	GETGLOBAL	R22 K15 ; R22 := 0x3d106989
	166	[733]	LOADK    	R23 K42 ; R23 := "Total nodes with open squads: "
	167	[733]	LEN      	R24 R2 ; R24 := # R2
	168	[733]	CONCAT   	R23 R23 R24 ; R23 := R23 .. R24
	169	[733]	CALL     	R22 2 1 ; R22(R23)
	170	[735]	GETUPVAL 	R22 U1 ; R22 := U1
	171	[735]	GETTABLE 	R22 R22 R10 ; R22 := R22[R10]
	172	[735]	LT       	0 K24 R22 ; if 0.000000 >= R22 then PC := 195
	173	[735]	JMP      	195 ; PC := 195
	174	[736]	GETGLOBAL	R22 K15 ; R22 := 0x3d106989
	175	[736]	GETGLOBAL	R23 K33 ; R23 := 0x64fb1586
	176	[736]	GETTABLE 	R24 R16 K34 ; R24 := R16["name"]
	177	[736]	CALL     	R23 2 2 ; R23 := R23(R24)
	178	[736]	LOADK    	R24 K43 ; R24 := " ("
	179	[736]	GETGLOBAL	R25 K44 ; R25 := 0x603636ad
	180	[736]	GETGLOBAL	R26 K33 ; R26 := 0x64fb1586
	181	[736]	GETTABLE 	R27 R16 K45 ; R27 := R16["locTag"]
	182	[736]	CALL     	R26 2 2 ; R26 := R26(R27)
	183	[736]	OP_LOADBOOL	R27 0 0 ; R27 := false
	184	[736]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	185	[736]	LOADK    	R26 K46 ; R26 := ")"
	186	[736]	LOADK    	R27 K47 ; R27 := ", matchmakingName="
	187	[736]	MOVE     	R28 R9 ; R28 := R9
	188	[736]	LOADK    	R29 K48 ; R29 := ", matchMakingId="
	189	[736]	MOVE     	R30 R10 ; R30 := R10
	190	[736]	LOADK    	R31 K49 ; R31 := ", sessionsFound="
	191	[736]	GETUPVAL 	R32 U1 ; R32 := U1
	192	[736]	GETTABLE 	R32 R32 R10 ; R32 := R32[R10]
	193	[736]	CONCAT   	R23 R23 R32 ; R23 := R23 .. R24 .. R25 .. R26 .. R27 .. R28 .. R29 .. R30 .. R31 .. R32
	194	[736]	CALL     	R22 2 1 ; R22(R23)
	195	[740]	GETGLOBAL	R22 K1 ; R22 := 0x7b998233
	196	[740]	GETGLOBAL	R23 K50 ; R23 := 0xae91e43b
	197	[740]	CALL     	R22 2 2 ; R22 := R22(R23)
	198	[740]	TEST     	R22 1 ; if R22 then PC := 247
	199	[740]	JMP      	247 ; PC := 247
	200	[740]	GETUPVAL 	R22 U6 ; R22 := U6
	201	[740]	TEST     	R22 0 ; if not R22 then PC := 247
	202	[740]	JMP      	247 ; PC := 247
	203	[740]	GETUPVAL 	R22 U6 ; R22 := U6
	204	[740]	GETTABLE 	R22 R22 R9 ; R22 := R22[R9]
	205	[740]	TEST     	R22 0 ; if not R22 then PC := 247
	206	[740]	JMP      	247 ; PC := 247
	207	[741]	GETGLOBAL	R22 K50 ; R22 := 0xae91e43b
	208	[741]	SELF     	R22 R22 K51 ; R23 := R22; R22 := R22[0xaade900e]
	209	[741]	GETUPVAL 	R24 U6 ; R24 := U6
	210	[741]	GETTABLE 	R24 R24 R9 ; R24 := R24[R9]
	211	[741]	GETTABLE 	R24 R24 K52 ; R24 := R24["clipName"]
	212	[741]	LOADK    	R25 := 11.000000
	213	[741]	GETUPVAL 	R26 U1 ; R26 := U1
	214	[741]	TEST     	R26 0 ; if not R26 then PC := 226
	215	[741]	JMP      	226 ; PC := 226
	216	[741]	GETUPVAL 	R26 U1 ; R26 := U1
	217	[741]	GETTABLE 	R26 R26 R10 ; R26 := R26[R10]
	218	[741]	TEST     	R26 0 ; if not R26 then PC := 226
	219	[741]	JMP      	226 ; PC := 226
	220	[741]	GETUPVAL 	R26 U1 ; R26 := U1
	221	[741]	GETTABLE 	R26 R26 R10 ; R26 := R26[R10]
	222	[741]	LT       	1 K24 R26 ; if 0.000000 < R26 then PC := 225
	223	[741]	JMP      	225 ; PC := 225
	224	[741]	OP_LOADBOOL	R26 0 1 ; R26 := false; PC := 225
	225	[741]	OP_LOADBOOL	R26 1 0 ; R26 := true
	226	[741]	CALL     	R22 5 1 ; R22(R23,R24,R25,R26)
	227	[742]	GETGLOBAL	R22 K50 ; R22 := 0xae91e43b
	228	[742]	SELF     	R22 R22 K53 ; R23 := R22; R22 := R22[0x5f56eeab]
	229	[742]	GETGLOBAL	R24 K54 ; R24 := mRegionLabels
	230	[742]	GETTABLE 	R24 R24 R8 ; R24 := R24[R8]
	231	[742]	LOADK    	R25 K55 ; R25 := ".Name"
	232	[742]	CONCAT   	R24 R24 R25 ; R24 := R24 .. R25
	233	[742]	LOADK    	R25 := 29.000000
	234	[742]	GETGLOBAL	R26 K44 ; R26 := 0x603636ad
	235	[742]	GETGLOBAL	R27 K33 ; R27 := 0x64fb1586
	236	[742]	GETGLOBAL	R28 K56 ; R28 := mRegions
	237	[742]	GETTABLE 	R28 R28 R8 ; R28 := R28[R8]
	238	[742]	GETTABLE 	R28 R28 K34 ; R28 := R28["name"]
	239	[742]	CALL     	R27 2 2 ; R27 := R27(R28)
	240	[742]	OP_LOADBOOL	R28 0 0 ; R28 := false
	241	[742]	CALL     	R26 3 2 ; R26 := R26(R27,R28)
	242	[742]	LOADK    	R27 K57 ; R27 := " "
	243	[742]	GETUPVAL 	R28 U0 ; R28 := U0
	244	[742]	GETTABLE 	R28 R28 R8 ; R28 := R28[R8]
	245	[742]	CONCAT   	R26 R26 R28 ; R26 := R26 .. R27 .. R28
	246	[742]	CALL     	R22 5 1 ; R22(R23,R24,R25,R26)
	247	[697]	TFORLOOP 	R12 2 ; R15,R16 := R12(R13,R14); if R15 ~= nil then begin PC = 76; R14 := R15 end
	248	[745]	JMP      	76 ; PC := 76
	249	[747]	RETURN   	R0 1 ; return 

function #17 <?:749,759> (25 instructions, 100 bytes at 0000021110D4AA80)
1 param, 8 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[750]	EQ       	1 R0 K0 ; if R0 == true then PC := 4
	2	[750]	JMP      	4 ; PC := 4
	3	[751]	RETURN   	R0 1 ; return 
	4	[754]	TEST     	R0 0 ; if not R0 then PC := 13
	5	[754]	JMP      	13 ; PC := 13
	6	[755]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	7	[755]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0x67bc869f]
	8	[755]	LOADK    	R3 K3 ; R3 := "RegionInfo"
	9	[755]	LOADK    	R4 := 10.000000
	10	[755]	LOADK    	R5 := 0.000000
	11	[755]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	12	[755]	JMP      	25 ; PC := 25
	13	[757]	GETGLOBAL	R1 K4 ; R1 := 0x25312c9b
	14	[757]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	15	[757]	LOADK    	R3 K3 ; R3 := "RegionInfo"
	16	[757]	LOADK    	R4 := 8.000000
	17	[757]	NEWTABLE 	R5 1 0 ; R5 := {}
	18	[757]	LOADK    	R6 K6 ; R6 := "_alpha"
	19	[757]	SETLIST  	R5 1 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
	20	[757]	NEWTABLE 	R6 1 0 ; R6 := {}
	21	[757]	LOADK    	R7 := 0.000000
	22	[757]	SETLIST  	R6 1 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
	23	[757]	LOADK    	R7 K7 ; R7 := 0.200000
	24	[757]	CALL     	R1 7 1 ; R1(R2,R3,R4,R5,R6,R7)
	25	[759]	RETURN   	R0 1 ; return 

function #18 <?:763,810> (200 instructions, 800 bytes at 0000021110D4ACE0)
0 params, 31 slots, 6 upvalues, 0 locals, 57 constants, 0 functions
	1	[764]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[764]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xd5181643]
	3	[764]	LOADK    	R2 K2 ; R2 := "InfluenceMap"
	4	[764]	GETGLOBAL	R3 K3 ; R3 := 0x6bd536f8
	5	[764]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	6	[766]	GETUPVAL 	R0 U0 ; R0 := U0
	7	[766]	NEWTABLE 	R1 0 0 ; R1 := {}
	8	[766]	SETTABLE 	R0 K4 R1 ; R0["INFLUENCE_MAP"] := R1
	9	[768]	LOADK    	R0 := 0.000000
	10	[768]	GETUPVAL 	R1 U1 ; R1 := U1
	11	[768]	GETTABLE 	R1 R1 K5 ; R1 := R1["MAX_SHADER_INFLUENCES"]
	12	[768]	SUB      	R1 R1 K6 ; R1 := R1 - 1.000000
	13	[768]	LOADK    	R2 := 1.000000
	14	[768]	FORPREP  	R0 25 ; R0 -= R2; PC := 25
	15	[769]	GETGLOBAL	R4 K7 ; R4 := 0x33bdd652
	16	[769]	GETTABLE 	R4 R4 K8 ; R4 := R4[0x23d5322f]
	17	[769]	GETUPVAL 	R5 U0 ; R5 := U0
	18	[769]	GETTABLE 	R5 R5 K4 ; R5 := R5["INFLUENCE_MAP"]
	19	[769]	GETGLOBAL	R6 K9 ; R6 := 0x0469f296
	20	[769]	LOADK    	R7 K10 ; R7 := "Influence"
	21	[769]	MOVE     	R8 R3 ; R8 := R3
	22	[769]	CONCAT   	R7 R7 R8 ; R7 := R7 .. R8
	23	[769]	CALL     	R6 2 0 ; R6,... := R6(R7)
	24	[769]	CALL     	R4 0 1 ; R4(R5,...)
	25	[768]	FORLOOP  	R0 15 ; R0 += R2; if R0 <= R1 then begin PC := 15; R3 := R0 end
	26	[772]	NEWTABLE 	R4 0 0 ; R4 := {}
	27	[772]	SETUPVAL 	R4 U2 ; U2 := R4
	28	[774]	GETGLOBAL	R4 K11 ; R4 := 0x25d99d89
	29	[774]	SELF     	R4 R4 K12 ; R5 := R4; R4 := R4[0x600a0ad6]
	30	[774]	CALL     	R4 2 2 ; R4 := R4(R5)
	31	[775]	SELF     	R5 R4 K13 ; R6 := R4; R5 := R4[0xd8140b94]
	32	[775]	CALL     	R5 2 2 ; R5 := R5(R6)
	33	[775]	TEST     	R5 0 ; if not R5 then PC := 184
	34	[775]	JMP      	184 ; PC := 184
	35	[775]	GETGLOBAL	R5 K14 ; R5 := _T
	36	[775]	GETTABLE 	R5 R5 K15 ; R5 := R5["CustomStarChartNodeFilter"]
	37	[775]	EQ       	0 R5 K16 ; if R5 ~= nil then PC := 184
	38	[775]	JMP      	184 ; PC := 184
	39	[776]	GETTABLE 	R5 R4 K17 ; R5 := R4["mInfluenceNodes"]
	40	[777]	LOADK    	R6 := 1.000000
	41	[777]	LEN      	R7 R5 ; R7 := # R5
	42	[777]	LOADK    	R8 := 1.000000
	43	[777]	FORPREP  	R6 61 ; R6 -= R8; PC := 61
	44	[778]	GETGLOBAL	R10 K18 ; R10 := 0x9bafffe3
	45	[778]	LOADK    	R11 := 0.500000
	46	[778]	LOADK    	R12 K19 ; R12 := 1.200000
	47	[778]	GETTABLE 	R13 R5 R9 ; R13 := R5[R9]
	48	[778]	GETTABLE 	R13 R13 K20 ; R13 := R13["mInfluence"]
	49	[778]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	50	[779]	GETGLOBAL	R11 K7 ; R11 := 0x33bdd652
	51	[779]	GETTABLE 	R11 R11 K8 ; R11 := R11[0x23d5322f]
	52	[779]	GETUPVAL 	R12 U2 ; R12 := U2
	53	[779]	NEWTABLE 	R13 0 2 ; R13 := {}
	54	[779]	GETTABLE 	R14 R5 R9 ; R14 := R5[R9]
	55	[779]	GETTABLE 	R14 R14 K22 ; R14 := R14["mNode"]
	56	[779]	SELF     	R14 R14 K23 ; R15 := R14; R14 := R14[0x6d604ba7]
	57	[779]	CALL     	R14 2 2 ; R14 := R14(R15)
	58	[779]	SETTABLE 	R13 K21 R14 ; R13["Node"] := R14
	59	[779]	SETTABLE 	R13 K10 R10 ; R13["Influence"] := R10
	60	[779]	CALL     	R11 3 1 ; R11(R12,R13)
	61	[777]	FORLOOP  	R6 44 ; R6 += R8; if R6 <= R7 then begin PC := 44; R9 := R6 end
	62	[782]	NEWTABLE 	R11 0 0 ; R11 := {}
	63	[783]	GETUPVAL 	R12 U3 ; R12 := U3
	64	[783]	GETTABLE 	R12 R12 K24 ; R12 := R12[0x22e50a9c]
	65	[783]	GETUPVAL 	R13 U3 ; R13 := U3
	66	[783]	GETTABLE 	R13 R13 K25 ; R13 := R13[0x6a965652]
	67	[783]	MOVE     	R14 R4 ; R14 := R4
	68	[783]	CALL     	R13 2 0 ; R13,... := R13(R14)
	69	[783]	CALL     	R12 0 2 ; R12 := R12(R13,...)
	70	[784]	GETGLOBAL	R13 K0 ; R13 := 0xae91e43b
	71	[784]	SELF     	R13 R13 K26 ; R14 := R13; R13 := R13[0x42b04007]
	72	[784]	GETUPVAL 	R15 U4 ; R15 := U4
	73	[784]	GETTABLE 	R15 R15 K27 ; R15 := R15[0x06d055f9]
	74	[784]	EQ       	1 R12 K6 ; if R12 == 1.000000 then PC := 77
	75	[784]	JMP      	77 ; PC := 77
	76	[784]	OP_LOADBOOL	R16 0 1 ; R16 := false; PC := 77
	77	[784]	OP_LOADBOOL	R16 1 0 ; R16 := true
	78	[784]	LOADK    	R17 K28 ; R17 := "<KUVA_LICH>"
	79	[784]	LOADK    	R18 K29 ; R18 := "<CORPUS_LICH>"
	80	[784]	CALL     	R15 4 2 ; R15 := R15(R16,R17,R18)
	81	[784]	OP_LOADBOOL	R16 1 0 ; R16 := true
	82	[784]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	83	[785]	EQ       	0 R12 K30 ; if R12 ~= 2.000000 then PC := 90
	84	[785]	JMP      	90 ; PC := 90
	85	[786]	GETGLOBAL	R14 K0 ; R14 := 0xae91e43b
	86	[786]	SELF     	R14 R14 K1 ; R15 := R14; R14 := R14[0xd5181643]
	87	[786]	LOADK    	R16 K2 ; R16 := "InfluenceMap"
	88	[786]	GETGLOBAL	R17 K31 ; R17 := 0x6ac0e7a4
	89	[786]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	90	[788]	LOADK    	R14 := 1.000000
	91	[788]	GETUPVAL 	R15 U2 ; R15 := U2
	92	[788]	LEN      	R15 R15 ; R15 := # R15
	93	[788]	LOADK    	R16 := 1.000000
	94	[788]	FORPREP  	R14 149 ; R14 -= R16; PC := 149
	95	[789]	GETUPVAL 	R18 U5 ; R18 := U5
	96	[789]	GETUPVAL 	R19 U2 ; R19 := U2
	97	[789]	GETTABLE 	R19 R19 R17 ; R19 := R19[R17]
	98	[789]	GETTABLE 	R19 R19 K21 ; R19 := R19["Node"]
	99	[789]	GETTABLE 	R18 R18 R19 ; R18 := R18[R19]
	100	[790]	GETGLOBAL	R19 K32 ; R19 := 0x7b998233
	101	[790]	MOVE     	R20 R18 ; R20 := R18
	102	[790]	CALL     	R19 2 2 ; R19 := R19(R20)
	103	[790]	TEST     	R19 1 ; if R19 then PC := 149
	104	[790]	JMP      	149 ; PC := 149
	105	[791]	GETUPVAL 	R19 U2 ; R19 := U2
	106	[791]	GETTABLE 	R19 R19 R17 ; R19 := R19[R17]
	107	[791]	SETTABLE 	R19 K33 R18 ; R19["NodeData"] := R18
	108	[792]	MOVE     	R19 R13 ; R19 := R13
	109	[792]	GETTABLE 	R20 R18 K34 ; R20 := R18["locName"]
	110	[792]	CONCAT   	R19 R19 R20 ; R19 := R19 .. R20
	111	[792]	SETTABLE 	R18 K34 R19 ; R18["locName"] := R19
	112	[794]	GETTABLE 	R19 R18 K35 ; R19 := R18["radialSector"]
	113	[795]	GETTABLE 	R20 R19 K36 ; R20 := R19["region"]
	114	[795]	ADD      	R20 R20 K6 ; R20 := R20 + 1.000000
	115	[796]	GETUPVAL 	R21 U4 ; R21 := U4
	116	[796]	GETTABLE 	R21 R21 K37 ; R21 := R21[0xcf49d84c]
	117	[796]	MOVE     	R22 R11 ; R22 := R11
	118	[796]	MOVE     	R23 R20 ; R23 := R20
	119	[796]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	120	[796]	TEST     	R21 1 ; if R21 then PC := 149
	121	[796]	JMP      	149 ; PC := 149
	122	[797]	GETGLOBAL	R21 K7 ; R21 := 0x33bdd652
	123	[797]	GETTABLE 	R21 R21 K8 ; R21 := R21[0x23d5322f]
	124	[797]	MOVE     	R22 R11 ; R22 := R11
	125	[797]	MOVE     	R23 R20 ; R23 := R20
	126	[797]	CALL     	R21 3 1 ; R21(R22,R23)
	127	[798]	MOVE     	R21 R13 ; R21 := R13
	128	[798]	GETGLOBAL	R22 K38 ; R22 := 0x7f5022cf
	129	[798]	GETTABLE 	R22 R22 K39 ; R22 := R22[0x3f3e4d12]
	130	[798]	GETGLOBAL	R23 K40 ; R23 := 0x603636ad
	131	[798]	GETGLOBAL	R24 K41 ; R24 := 0x64fb1586
	132	[798]	GETGLOBAL	R25 K42 ; R25 := mRegions
	133	[798]	GETTABLE 	R25 R25 R20 ; R25 := R25[R20]
	134	[798]	GETTABLE 	R25 R25 K43 ; R25 := R25["name"]
	135	[798]	CALL     	R24 2 2 ; R24 := R24(R25)
	136	[798]	OP_LOADBOOL	R25 0 0 ; R25 := false
	137	[798]	CALL     	R23 3 0 ; R23,... := R23(R24,R25)
	138	[798]	CALL     	R22 0 2 ; R22 := R22(R23,...)
	139	[798]	CONCAT   	R21 R21 R22 ; R21 := R21 .. R22
	140	[799]	GETGLOBAL	R22 K0 ; R22 := 0xae91e43b
	141	[799]	SELF     	R22 R22 K44 ; R23 := R22; R22 := R22[0x5f56eeab]
	142	[799]	GETGLOBAL	R24 K45 ; R24 := mRegionLabels
	143	[799]	GETTABLE 	R24 R24 R20 ; R24 := R24[R20]
	144	[799]	LOADK    	R25 K46 ; R25 := ".Name"
	145	[799]	CONCAT   	R24 R24 R25 ; R24 := R24 .. R25
	146	[799]	LOADK    	R25 := 29.000000
	147	[799]	MOVE     	R26 R21 ; R26 := R21
	148	[799]	CALL     	R22 5 1 ; R22(R23,R24,R25,R26)
	149	[788]	FORLOOP  	R14 95 ; R14 += R16; if R14 <= R15 then begin PC := 95; R17 := R14 end
	150	[803]	GETUPVAL 	R22 U2 ; R22 := U2
	151	[803]	LEN      	R22 R22 ; R22 := # R22
	152	[803]	LT       	0 K47 R22 ; if 0.000000 >= R22 then PC := 184
	153	[803]	JMP      	184 ; PC := 184
	154	[803]	GETTABLE 	R22 R4 K48 ; R22 := R4["mWeakened"]
	155	[803]	TEST     	R22 0 ; if not R22 then PC := 184
	156	[803]	JMP      	184 ; PC := 184
	157	[803]	GETGLOBAL	R22 K32 ; R22 := 0x7b998233
	158	[803]	GETGLOBAL	R23 K49 ; R23 := mRailJack
	159	[803]	GETTABLE 	R23 R23 K50 ; R23 := R23["Button"]
	160	[803]	CALL     	R22 2 2 ; R22 := R22(R23)
	161	[803]	TEST     	R22 1 ; if R22 then PC := 184
	162	[803]	JMP      	184 ; PC := 184
	163	[804]	GETUPVAL 	R22 U4 ; R22 := U4
	164	[804]	GETTABLE 	R22 R22 K27 ; R22 := R22[0x06d055f9]
	165	[804]	EQ       	1 R12 K6 ; if R12 == 1.000000 then PC := 168
	166	[804]	JMP      	168 ; PC := 168
	167	[804]	OP_LOADBOOL	R23 0 1 ; R23 := false; PC := 168
	168	[804]	OP_LOADBOOL	R23 1 0 ; R23 := true
	169	[804]	GETGLOBAL	R24 K51 ; R24 := 0xb49168b6
	170	[804]	GETGLOBAL	R25 K52 ; R25 := 0xe2f3f0f7
	171	[804]	CALL     	R22 4 2 ; R22 := R22(R23,R24,R25)
	172	[805]	GETGLOBAL	R23 K49 ; R23 := mRailJack
	173	[805]	GETTABLE 	R23 R23 K50 ; R23 := R23["Button"]
	174	[805]	SELF     	R23 R23 K53 ; R24 := R23; R23 := R23[0x188d45da]
	175	[805]	MOVE     	R25 R22 ; R25 := R22
	176	[805]	CALL     	R23 3 1 ; R23(R24,R25)
	177	[806]	GETGLOBAL	R23 K49 ; R23 := mRailJack
	178	[806]	GETTABLE 	R23 R23 K50 ; R23 := R23["Button"]
	179	[806]	SELF     	R23 R23 K54 ; R24 := R23; R23 := R23[0x46610c50]
	180	[806]	GETGLOBAL	R25 K49 ; R25 := mRailJack
	181	[806]	GETTABLE 	R25 R25 K55 ; R25 := R25["Active"]
	182	[806]	OP_LOADBOOL	R26 1 0 ; R26 := true
	183	[806]	CALL     	R23 4 1 ; R23(R24,R25,R26)
	184	[809]	GETGLOBAL	R23 K0 ; R23 := 0xae91e43b
	185	[809]	SELF     	R23 R23 K56 ; R24 := R23; R23 := R23[0x67bc869f]
	186	[809]	LOADK    	R25 K2 ; R25 := "InfluenceMap"
	187	[809]	LOADK    	R26 := 10.000000
	188	[809]	GETUPVAL 	R27 U4 ; R27 := U4
	189	[809]	GETTABLE 	R27 R27 K27 ; R27 := R27[0x06d055f9]
	190	[809]	GETUPVAL 	R28 U2 ; R28 := U2
	191	[809]	LEN      	R28 R28 ; R28 := # R28
	192	[809]	LT       	1 K47 R28 ; if 0.000000 < R28 then PC := 195
	193	[809]	JMP      	195 ; PC := 195
	194	[809]	OP_LOADBOOL	R28 0 1 ; R28 := false; PC := 195
	195	[809]	OP_LOADBOOL	R28 1 0 ; R28 := true
	196	[809]	LOADK    	R29 := 100.000000
	197	[809]	LOADK    	R30 := 0.000000
	198	[809]	CALL     	R27 4 0 ; R27,... := R27(R28,R29,R30)
	199	[809]	CALL     	R23 0 1 ; R23(R24,...)
	200	[810]	RETURN   	R0 1 ; return 

function #19 <?:812,890> (269 instructions, 1076 bytes at 0000021110D4B8B0)
0 params, 39 slots, 4 upvalues, 0 locals, 48 constants, 0 functions
	1	[813]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[813]	GETTABLE 	R0 R0 K0 ; R0 := R0[0x44537adf]
	3	[813]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	4	[813]	CALL     	R0 2 3 ; R0,R1 := R0(R1)
	5	[815]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	6	[815]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0x091c120e]
	7	[815]	CALL     	R2 2 2 ; R2 := R2(R3)
	8	[815]	SUB      	R2 R0 R2 ; R2 := R0 - R2
	9	[815]	MUL      	R2 R2 K3 ; R2 := R2 * 0.500000
	10	[816]	GETGLOBAL	R3 K1 ; R3 := 0xae91e43b
	11	[816]	SELF     	R3 R3 K4 ; R4 := R3; R3 := R3[0x2cc9d281]
	12	[816]	CALL     	R3 2 2 ; R3 := R3(R4)
	13	[816]	SUB      	R3 R1 R3 ; R3 := R1 - R3
	14	[816]	MUL      	R3 R3 K3 ; R3 := R3 * 0.500000
	15	[817]	GETGLOBAL	R4 K5 ; R4 := 0xb7cbd06b
	16	[817]	GETGLOBAL	R5 K6 ; R5 := Zoom
	17	[817]	GETTABLE 	R5 R5 K7 ; R5 := R5["MIN_ZOOM"]
	18	[817]	GETGLOBAL	R6 K6 ; R6 := Zoom
	19	[817]	GETTABLE 	R6 R6 K8 ; R6 := R6["MAX_ZOOM"]
	20	[817]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	21	[818]	GETGLOBAL	R5 K9 ; R5 := 0x42dcc9f5
	22	[818]	GETGLOBAL	R6 K10 ; R6 := mSmoothZoom
	23	[818]	GETTABLE 	R6 R6 K11 ; R6 := R6["mCurVal"]
	24	[818]	GETTABLE 	R7 R4 K12 ; R7 := R4["minValue"]
	25	[818]	GETTABLE 	R8 R4 K13 ; R8 := R4["maxValue"]
	26	[818]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	27	[819]	SELF     	R6 R4 K14 ; R7 := R4; R6 := R4[0x3b93153d]
	28	[819]	MOVE     	R8 R5 ; R8 := R5
	29	[819]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	30	[819]	MOVE     	R5 R6 ; R5 := R6
	31	[820]	MUL      	R5 R5 R5 ; R5 := R5 * R5
	32	[822]	LOADK    	R6 K15 ; R6 := 0.400000
	33	[823]	LOADK    	R7 K16 ; R7 := 0.940000
	34	[824]	MOVE     	R8 R5 ; R8 := R5
	35	[826]	LE       	0 R8 R6 ; if R8 > R6 then PC := 39
	36	[826]	JMP      	39 ; PC := 39
	37	[827]	MOVE     	R8 R6 ; R8 := R6
	38	[827]	JMP      	50 ; PC := 50
	39	[828]	LE       	0 R7 R8 ; if R7 > R8 then PC := 43
	40	[828]	JMP      	43 ; PC := 43
	41	[829]	MOVE     	R8 R7 ; R8 := R7
	42	[829]	JMP      	50 ; PC := 50
	43	[831]	SUB      	R9 R8 R6 ; R9 := R8 - R6
	44	[831]	SUB      	R10 R7 R6 ; R10 := R7 - R6
	45	[831]	DIV      	R8 R9 R10 ; R8 := R9 / R10
	46	[832]	MUL      	R9 R8 R8 ; R9 := R8 * R8
	47	[832]	MUL      	R10 K17 R8 ; R10 := 2.000000 * R8
	48	[832]	SUB      	R10 K18 R10 ; R10 := 3.000000 - R10
	49	[832]	MUL      	R8 R9 R10 ; R8 := R9 * R10
	50	[835]	MUL      	R9 K19 R8 ; R9 := 0.200000 * R8
	51	[835]	ADD      	R9 K3 R9 ; R9 := 0.500000 + R9
	52	[837]	LOADNIL  	R10 R12 ; R10 := R11 := R12 := nil
	53	[838]	LOADK    	R13 := 1.000000
	54	[839]	LOADK    	R14 := 0.000000
	55	[840]	LOADK    	R15 := 1.000000
	56	[841]	LOADK    	R16 := 0.000000
	57	[842]	DIV      	R17 R1 R0 ; R17 := R1 / R0
	58	[844]	NEWTABLE 	R18 0 0 ; R18 := {}
	59	[846]	LOADK    	R19 := 1.000000
	60	[846]	GETUPVAL 	R20 U1 ; R20 := U1
	61	[846]	LEN      	R20 R20 ; R20 := # R20
	62	[846]	LOADK    	R21 := 1.000000
	63	[846]	FORPREP  	R19 149 ; R19 -= R21; PC := 149
	64	[847]	LOADK    	R10 := 0.000000
	65	[848]	LOADK    	R11 := 0.000000
	66	[849]	LOADK    	R12 := 0.000000
	67	[850]	GETUPVAL 	R23 U1 ; R23 := U1
	68	[850]	GETTABLE 	R23 R23 R22 ; R23 := R23[R22]
	69	[850]	EQ       	1 R23 K20 ; if R23 == nil then PC := 149
	70	[850]	JMP      	149 ; PC := 149
	71	[850]	GETGLOBAL	R23 K21 ; R23 := 0x7b998233
	72	[850]	GETUPVAL 	R24 U1 ; R24 := U1
	73	[850]	GETTABLE 	R24 R24 R22 ; R24 := R24[R22]
	74	[850]	GETTABLE 	R24 R24 K22 ; R24 := R24["NodeData"]
	75	[850]	CALL     	R23 2 2 ; R23 := R23(R24)
	76	[850]	TEST     	R23 1 ; if R23 then PC := 149
	77	[850]	JMP      	149 ; PC := 149
	78	[851]	GETUPVAL 	R23 U1 ; R23 := U1
	79	[851]	GETTABLE 	R23 R23 R22 ; R23 := R23[R22]
	80	[851]	GETTABLE 	R23 R23 K23 ; R23 := R23["Influence"]
	81	[851]	MUL      	R12 R23 R5 ; R12 := R23 * R5
	82	[852]	GETUPVAL 	R23 U0 ; R23 := U0
	83	[852]	GETTABLE 	R23 R23 K24 ; R23 := R23[0xb5be5d4a]
	84	[852]	GETGLOBAL	R24 K1 ; R24 := 0xae91e43b
	85	[852]	GETUPVAL 	R25 U1 ; R25 := U1
	86	[852]	GETTABLE 	R25 R25 R22 ; R25 := R25[R22]
	87	[852]	GETTABLE 	R25 R25 K22 ; R25 := R25["NodeData"]
	88	[852]	GETTABLE 	R25 R25 K25 ; R25 := R25["clipName"]
	89	[852]	CALL     	R23 3 3 ; R23,R24 := R23(R24,R25)
	90	[852]	MOVE     	R11 R24 ; R11 := R24
	91	[852]	MOVE     	R10 R23 ; R10 := R23
	92	[854]	ADD      	R23 R10 R2 ; R23 := R10 + R2
	93	[854]	DIV      	R10 R23 R0 ; R10 := R23 / R0
	94	[855]	ADD      	R23 R11 R3 ; R23 := R11 + R3
	95	[855]	DIV      	R11 R23 R1 ; R11 := R23 / R1
	96	[857]	GETGLOBAL	R23 K26 ; R23 := 0x5bced4c4
	97	[857]	GETTABLE 	R23 R23 K27 ; R23 := R23[0xb62ecfe0]
	98	[857]	LOADK    	R24 K28 ; R24 := 0.010000
	99	[857]	MUL      	R25 R12 K29 ; R25 := R12 * 0.100000
	100	[857]	MUL      	R25 R25 R9 ; R25 := R25 * R9
	101	[857]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	102	[860]	UNM      	R24 R23 ; R24 := ^ R23
	103	[860]	LE       	0 R24 R10 ; if R24 > R10 then PC := 149
	104	[860]	JMP      	149 ; PC := 149
	105	[860]	ADD      	R24 K30 R23 ; R24 := 1.000000 + R23
	106	[860]	LE       	0 R10 R24 ; if R10 > R24 then PC := 149
	107	[860]	JMP      	149 ; PC := 149
	108	[860]	UNM      	R24 R23 ; R24 := ^ R23
	109	[860]	LE       	0 R24 R11 ; if R24 > R11 then PC := 149
	110	[860]	JMP      	149 ; PC := 149
	111	[860]	ADD      	R24 K30 R23 ; R24 := 1.000000 + R23
	112	[860]	LE       	0 R11 R24 ; if R11 > R24 then PC := 149
	113	[860]	JMP      	149 ; PC := 149
	114	[861]	GETGLOBAL	R24 K31 ; R24 := 0x33bdd652
	115	[861]	GETTABLE 	R24 R24 K32 ; R24 := R24[0x23d5322f]
	116	[861]	MOVE     	R25 R18 ; R25 := R18
	117	[861]	GETGLOBAL	R26 K33 ; R26 := 0xa421af95
	118	[861]	MOVE     	R27 R10 ; R27 := R10
	119	[861]	MOVE     	R28 R11 ; R28 := R11
	120	[861]	MOVE     	R29 R23 ; R29 := R23
	121	[861]	CALL     	R26 4 0 ; R26,... := R26(R27,R28,R29)
	122	[861]	CALL     	R24 0 1 ; R24(R25,...)
	123	[862]	GETGLOBAL	R24 K26 ; R24 := 0x5bced4c4
	124	[862]	GETTABLE 	R24 R24 K34 ; R24 := R24[0xac1b386a]
	125	[862]	MOVE     	R25 R13 ; R25 := R13
	126	[862]	MUL      	R26 R23 R17 ; R26 := R23 * R17
	127	[862]	SUB      	R26 R10 R26 ; R26 := R10 - R26
	128	[862]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	129	[862]	MOVE     	R13 R24 ; R13 := R24
	130	[863]	GETGLOBAL	R24 K26 ; R24 := 0x5bced4c4
	131	[863]	GETTABLE 	R24 R24 K27 ; R24 := R24[0xb62ecfe0]
	132	[863]	MOVE     	R25 R14 ; R25 := R14
	133	[863]	MUL      	R26 R23 R17 ; R26 := R23 * R17
	134	[863]	ADD      	R26 R10 R26 ; R26 := R10 + R26
	135	[863]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	136	[863]	MOVE     	R14 R24 ; R14 := R24
	137	[864]	GETGLOBAL	R24 K26 ; R24 := 0x5bced4c4
	138	[864]	GETTABLE 	R24 R24 K34 ; R24 := R24[0xac1b386a]
	139	[864]	MOVE     	R25 R15 ; R25 := R15
	140	[864]	SUB      	R26 R11 R23 ; R26 := R11 - R23
	141	[864]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	142	[864]	MOVE     	R15 R24 ; R15 := R24
	143	[865]	GETGLOBAL	R24 K26 ; R24 := 0x5bced4c4
	144	[865]	GETTABLE 	R24 R24 K27 ; R24 := R24[0xb62ecfe0]
	145	[865]	MOVE     	R25 R16 ; R25 := R16
	146	[865]	ADD      	R26 R11 R23 ; R26 := R11 + R23
	147	[865]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	148	[865]	MOVE     	R16 R24 ; R16 := R24
	149	[846]	FORLOOP  	R19 64 ; R19 += R21; if R19 <= R20 then begin PC := 64; R22 := R19 end
	150	[870]	LEN      	R24 R18 ; R24 := # R18
	151	[870]	GETUPVAL 	R25 U2 ; R25 := U2
	152	[870]	GETTABLE 	R25 R25 K35 ; R25 := R25["MAX_SHADER_INFLUENCES"]
	153	[870]	LT       	0 R25 R24 ; if R25 >= R24 then PC := 161
	154	[870]	JMP      	161 ; PC := 161
	155	[871]	GETGLOBAL	R24 K36 ; R24 := 0xc228b3a9
	156	[871]	MOVE     	R25 R18 ; R25 := R18
	157	[871]	GETUPVAL 	R26 U2 ; R26 := U2
	158	[871]	GETTABLE 	R26 R26 K35 ; R26 := R26["MAX_SHADER_INFLUENCES"]
	159	[871]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	160	[871]	MOVE     	R18 R24 ; R18 := R24
	161	[874]	LOADK    	R24 := 1.000000
	162	[874]	GETGLOBAL	R25 K26 ; R25 := 0x5bced4c4
	163	[874]	GETTABLE 	R25 R25 K34 ; R25 := R25[0xac1b386a]
	164	[874]	GETUPVAL 	R26 U2 ; R26 := U2
	165	[874]	GETTABLE 	R26 R26 K35 ; R26 := R26["MAX_SHADER_INFLUENCES"]
	166	[874]	LEN      	R27 R18 ; R27 := # R18
	167	[874]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	168	[874]	LOADK    	R26 := 1.000000
	169	[874]	FORPREP  	R24 196 ; R24 -= R26; PC := 196
	170	[875]	GETGLOBAL	R28 K37 ; R28 := 0x6bd536f8
	171	[875]	SELF     	R28 R28 K38 ; R29 := R28; R28 := R28[0x830eea67]
	172	[875]	GETUPVAL 	R30 U3 ; R30 := U3
	173	[875]	GETTABLE 	R30 R30 K39 ; R30 := R30["INFLUENCE_MAP"]
	174	[875]	GETTABLE 	R30 R30 R27 ; R30 := R30[R27]
	175	[875]	GETTABLE 	R31 R18 R27 ; R31 := R18[R27]
	176	[875]	GETTABLE 	R31 R31 K40 ; R31 := R31["x"]
	177	[875]	GETTABLE 	R32 R18 R27 ; R32 := R18[R27]
	178	[875]	GETTABLE 	R32 R32 K41 ; R32 := R32["y"]
	179	[875]	LOADK    	R33 := 0.000000
	180	[875]	GETTABLE 	R34 R18 R27 ; R34 := R18[R27]
	181	[875]	GETTABLE 	R34 R34 K42 ; R34 := R34["z"]
	182	[875]	CALL     	R28 7 1 ; R28(R29,R30,R31,R32,R33,R34)
	183	[876]	GETGLOBAL	R28 K43 ; R28 := 0x6ac0e7a4
	184	[876]	SELF     	R28 R28 K38 ; R29 := R28; R28 := R28[0x830eea67]
	185	[876]	GETUPVAL 	R30 U3 ; R30 := U3
	186	[876]	GETTABLE 	R30 R30 K39 ; R30 := R30["INFLUENCE_MAP"]
	187	[876]	GETTABLE 	R30 R30 R27 ; R30 := R30[R27]
	188	[876]	GETTABLE 	R31 R18 R27 ; R31 := R18[R27]
	189	[876]	GETTABLE 	R31 R31 K40 ; R31 := R31["x"]
	190	[876]	GETTABLE 	R32 R18 R27 ; R32 := R18[R27]
	191	[876]	GETTABLE 	R32 R32 K41 ; R32 := R32["y"]
	192	[876]	LOADK    	R33 := 0.000000
	193	[876]	GETTABLE 	R34 R18 R27 ; R34 := R18[R27]
	194	[876]	GETTABLE 	R34 R34 K42 ; R34 := R34["z"]
	195	[876]	CALL     	R28 7 1 ; R28(R29,R30,R31,R32,R33,R34)
	196	[874]	FORLOOP  	R24 170 ; R24 += R26; if R24 <= R25 then begin PC := 170; R27 := R24 end
	197	[879]	LEN      	R28 R18 ; R28 := # R18
	198	[879]	ADD      	R28 R28 K30 ; R28 := R28 + 1.000000
	199	[879]	GETUPVAL 	R29 U2 ; R29 := U2
	200	[879]	GETTABLE 	R29 R29 K35 ; R29 := R29["MAX_SHADER_INFLUENCES"]
	201	[879]	LOADK    	R30 := 1.000000
	202	[879]	FORPREP  	R28 228 ; R28 -= R30; PC := 228
	203	[880]	GETUPVAL 	R32 U3 ; R32 := U3
	204	[880]	GETTABLE 	R32 R32 K39 ; R32 := R32["INFLUENCE_MAP"]
	205	[880]	GETTABLE 	R32 R32 R31 ; R32 := R32[R31]
	206	[880]	TEST     	R32 0 ; if not R32 then PC := 228
	207	[880]	JMP      	228 ; PC := 228
	208	[881]	GETGLOBAL	R32 K37 ; R32 := 0x6bd536f8
	209	[881]	SELF     	R32 R32 K38 ; R33 := R32; R32 := R32[0x830eea67]
	210	[881]	GETUPVAL 	R34 U3 ; R34 := U3
	211	[881]	GETTABLE 	R34 R34 K39 ; R34 := R34["INFLUENCE_MAP"]
	212	[881]	GETTABLE 	R34 R34 R31 ; R34 := R34[R31]
	213	[881]	LOADK    	R35 := 0.000000
	214	[881]	LOADK    	R36 := 0.000000
	215	[881]	LOADK    	R37 := 0.000000
	216	[881]	LOADK    	R38 := 0.000000
	217	[881]	CALL     	R32 7 1 ; R32(R33,R34,R35,R36,R37,R38)
	218	[882]	GETGLOBAL	R32 K43 ; R32 := 0x6ac0e7a4
	219	[882]	SELF     	R32 R32 K38 ; R33 := R32; R32 := R32[0x830eea67]
	220	[882]	GETUPVAL 	R34 U3 ; R34 := U3
	221	[882]	GETTABLE 	R34 R34 K39 ; R34 := R34["INFLUENCE_MAP"]
	222	[882]	GETTABLE 	R34 R34 R31 ; R34 := R34[R31]
	223	[882]	LOADK    	R35 := 0.000000
	224	[882]	LOADK    	R36 := 0.000000
	225	[882]	LOADK    	R37 := 0.000000
	226	[882]	LOADK    	R38 := 0.000000
	227	[882]	CALL     	R32 7 1 ; R32(R33,R34,R35,R36,R37,R38)
	228	[879]	FORLOOP  	R28 203 ; R28 += R30; if R28 <= R29 then begin PC := 203; R31 := R28 end
	229	[886]	GETGLOBAL	R32 K37 ; R32 := 0x6bd536f8
	230	[886]	SELF     	R32 R32 K38 ; R33 := R32; R32 := R32[0x830eea67]
	231	[886]	GETGLOBAL	R34 K44 ; R34 := 0x0469f296
	232	[886]	LOADK    	R35 K45 ; R35 := "ZoomValue_NumNodes"
	233	[886]	CALL     	R34 2 2 ; R34 := R34(R35)
	234	[886]	MOVE     	R35 R5 ; R35 := R5
	235	[886]	LOADK    	R36 := 0.000000
	236	[886]	LOADK    	R37 := 0.000000
	237	[886]	LOADK    	R38 := 0.000000
	238	[886]	CALL     	R32 7 1 ; R32(R33,R34,R35,R36,R37,R38)
	239	[887]	GETGLOBAL	R32 K37 ; R32 := 0x6bd536f8
	240	[887]	SELF     	R32 R32 K38 ; R33 := R32; R32 := R32[0x830eea67]
	241	[887]	GETGLOBAL	R34 K44 ; R34 := 0x0469f296
	242	[887]	LOADK    	R35 K46 ; R35 := "Bounds"
	243	[887]	CALL     	R34 2 2 ; R34 := R34(R35)
	244	[887]	SUB      	R35 R13 K47 ; R35 := R13 - 0.020000
	245	[887]	ADD      	R36 R14 K47 ; R36 := R14 + 0.020000
	246	[887]	SUB      	R37 R15 K47 ; R37 := R15 - 0.020000
	247	[887]	ADD      	R38 R16 K47 ; R38 := R16 + 0.020000
	248	[887]	CALL     	R32 7 1 ; R32(R33,R34,R35,R36,R37,R38)
	249	[888]	GETGLOBAL	R32 K43 ; R32 := 0x6ac0e7a4
	250	[888]	SELF     	R32 R32 K38 ; R33 := R32; R32 := R32[0x830eea67]
	251	[888]	GETGLOBAL	R34 K44 ; R34 := 0x0469f296
	252	[888]	LOADK    	R35 K45 ; R35 := "ZoomValue_NumNodes"
	253	[888]	CALL     	R34 2 2 ; R34 := R34(R35)
	254	[888]	MOVE     	R35 R5 ; R35 := R5
	255	[888]	LOADK    	R36 := 0.000000
	256	[888]	LOADK    	R37 := 0.000000
	257	[888]	LOADK    	R38 := 0.000000
	258	[888]	CALL     	R32 7 1 ; R32(R33,R34,R35,R36,R37,R38)
	259	[889]	GETGLOBAL	R32 K43 ; R32 := 0x6ac0e7a4
	260	[889]	SELF     	R32 R32 K38 ; R33 := R32; R32 := R32[0x830eea67]
	261	[889]	GETGLOBAL	R34 K44 ; R34 := 0x0469f296
	262	[889]	LOADK    	R35 K46 ; R35 := "Bounds"
	263	[889]	CALL     	R34 2 2 ; R34 := R34(R35)
	264	[889]	SUB      	R35 R13 K47 ; R35 := R13 - 0.020000
	265	[889]	ADD      	R36 R14 K47 ; R36 := R14 + 0.020000
	266	[889]	SUB      	R37 R15 K47 ; R37 := R15 - 0.020000
	267	[889]	ADD      	R38 R16 K47 ; R38 := R16 + 0.020000
	268	[889]	CALL     	R32 7 1 ; R32(R33,R34,R35,R36,R37,R38)
	269	[890]	RETURN   	R0 1 ; return 

function #20 <?:892,894> (17 instructions, 68 bytes at 0000021110D4C530)
1 param, 4 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[893]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[893]	MOVE     	R2 R0 ; R2 := R0
	3	[893]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[893]	TEST     	R1 1 ; if R1 then PC := 14
	5	[893]	JMP      	14 ; PC := 14
	6	[893]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	7	[893]	SELF     	R2 R0 K1 ; R3 := R0; R2 := R0[0xde321e6f]
	8	[893]	CALL     	R2 2 2 ; R2 := R2(R3)
	9	[893]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0x33c6e9d3]
	10	[893]	CALL     	R2 2 0 ; R2,... := R2(R3)
	11	[893]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	12	[893]	NOT      	R1 R1 ; R1 := not R1
	13	[893]	JMP      	16 ; PC := 16
	14	[893]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 15
	15	[893]	OP_LOADBOOL	R1 1 0 ; R1 := true
	16	[893]	RETURN   	R1 2 ; return R1 
	17	[894]	RETURN   	R0 1 ; return 

function #21 <?:896,913> (95 instructions, 380 bytes at 0000021110D4C6C0)
0 params, 6 slots, 0 upvalues, 0 locals, 25 constants, 0 functions
	1	[897]	GETGLOBAL	R0 K0 ; R0 := 0x2d0fad09
	2	[897]	LOADK    	R1 K1 ; R1 := "Lotus.Interface.UIStyleUtilities"
	3	[897]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[899]	GETGLOBAL	R1 K2 ; R1 := mColors
	5	[899]	GETTABLE 	R2 R0 K4 ; R2 := R0[0x5d10207d]
	6	[899]	LOADK    	R3 := 9.000000
	7	[899]	OP_LOADBOOL	R4 0 0 ; R4 := false
	8	[899]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	9	[899]	SETTABLE 	R1 K3 R2 ; R1["FloatingContentObject"] := R2
	10	[900]	GETGLOBAL	R1 K2 ; R1 := mColors
	11	[900]	GETGLOBAL	R2 K2 ; R2 := mColors
	12	[900]	GETTABLE 	R2 R2 K3 ; R2 := R2["FloatingContentObject"]
	13	[900]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0xa5d5c8f6]
	14	[900]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[900]	SETTABLE 	R1 K6 R2 ; R1["FloatingContent"] := R2
	16	[901]	GETGLOBAL	R1 K2 ; R1 := mColors
	17	[901]	LOADK    	R2 K9 ; R2 := "#"
	18	[901]	GETGLOBAL	R3 K10 ; R3 := 0x7f5022cf
	19	[901]	GETTABLE 	R3 R3 K11 ; R3 := R3[0xe8072ded]
	20	[901]	LOADK    	R4 K12 ; R4 := "%X"
	21	[901]	GETGLOBAL	R5 K2 ; R5 := mColors
	22	[901]	GETTABLE 	R5 R5 K6 ; R5 := R5["FloatingContent"]
	23	[901]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	24	[901]	CONCAT   	R2 R2 R3 ; R2 := R2 .. R3
	25	[901]	SETTABLE 	R1 K8 R2 ; R1["FloatingContentHtml"] := R2
	26	[902]	GETGLOBAL	R1 K2 ; R1 := mColors
	27	[902]	GETTABLE 	R2 R0 K4 ; R2 := R0[0x5d10207d]
	28	[902]	LOADK    	R3 := 10.000000
	29	[902]	OP_LOADBOOL	R4 0 0 ; R4 := false
	30	[902]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	31	[902]	SETTABLE 	R1 K13 R2 ; R1["FloatingContentHighlightObject"] := R2
	32	[903]	GETGLOBAL	R1 K2 ; R1 := mColors
	33	[903]	GETGLOBAL	R2 K2 ; R2 := mColors
	34	[903]	GETTABLE 	R2 R2 K13 ; R2 := R2["FloatingContentHighlightObject"]
	35	[903]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0xa5d5c8f6]
	36	[903]	CALL     	R2 2 2 ; R2 := R2(R3)
	37	[903]	SETTABLE 	R1 K14 R2 ; R1["FloatingContentHighlight"] := R2
	38	[904]	GETGLOBAL	R1 K2 ; R1 := mColors
	39	[904]	LOADK    	R2 K9 ; R2 := "#"
	40	[904]	GETGLOBAL	R3 K10 ; R3 := 0x7f5022cf
	41	[904]	GETTABLE 	R3 R3 K11 ; R3 := R3[0xe8072ded]
	42	[904]	LOADK    	R4 K12 ; R4 := "%X"
	43	[904]	GETGLOBAL	R5 K2 ; R5 := mColors
	44	[904]	GETTABLE 	R5 R5 K14 ; R5 := R5["FloatingContentHighlight"]
	45	[904]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	46	[904]	CONCAT   	R2 R2 R3 ; R2 := R2 .. R3
	47	[904]	SETTABLE 	R1 K15 R2 ; R1["FloatingContentHighlightHtml"] := R2
	48	[905]	GETGLOBAL	R1 K2 ; R1 := mColors
	49	[905]	GETTABLE 	R2 R0 K4 ; R2 := R0[0x5d10207d]
	50	[905]	LOADK    	R3 := 6.000000
	51	[905]	OP_LOADBOOL	R4 1 0 ; R4 := true
	52	[905]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	53	[905]	SETTABLE 	R1 K16 R2 ; R1["Content"] := R2
	54	[906]	GETGLOBAL	R1 K2 ; R1 := mColors
	55	[906]	LOADK    	R2 K9 ; R2 := "#"
	56	[906]	GETGLOBAL	R3 K10 ; R3 := 0x7f5022cf
	57	[906]	GETTABLE 	R3 R3 K11 ; R3 := R3[0xe8072ded]
	58	[906]	LOADK    	R4 K12 ; R4 := "%X"
	59	[906]	GETGLOBAL	R5 K2 ; R5 := mColors
	60	[906]	GETTABLE 	R5 R5 K16 ; R5 := R5["Content"]
	61	[906]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	62	[906]	CONCAT   	R2 R2 R3 ; R2 := R2 .. R3
	63	[906]	SETTABLE 	R1 K17 R2 ; R1["ContentHtml"] := R2
	64	[907]	GETGLOBAL	R1 K2 ; R1 := mColors
	65	[907]	GETTABLE 	R2 R0 K4 ; R2 := R0[0x5d10207d]
	66	[907]	LOADK    	R3 := 7.000000
	67	[907]	OP_LOADBOOL	R4 1 0 ; R4 := true
	68	[907]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	69	[907]	SETTABLE 	R1 K18 R2 ; R1["ContentHighlight"] := R2
	70	[908]	GETGLOBAL	R1 K2 ; R1 := mColors
	71	[908]	GETTABLE 	R2 R0 K4 ; R2 := R0[0x5d10207d]
	72	[908]	LOADK    	R3 := 2.000000
	73	[908]	OP_LOADBOOL	R4 0 0 ; R4 := false
	74	[908]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	75	[908]	SETTABLE 	R1 K19 R2 ; R1["Background1Object"] := R2
	76	[909]	GETGLOBAL	R1 K2 ; R1 := mColors
	77	[909]	GETGLOBAL	R2 K2 ; R2 := mColors
	78	[909]	GETTABLE 	R2 R2 K19 ; R2 := R2["Background1Object"]
	79	[909]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0xa5d5c8f6]
	80	[909]	CALL     	R2 2 2 ; R2 := R2(R3)
	81	[909]	SETTABLE 	R1 K20 R2 ; R1["Background1"] := R2
	82	[910]	GETGLOBAL	R1 K2 ; R1 := mColors
	83	[910]	GETTABLE 	R2 R0 K4 ; R2 := R0[0x5d10207d]
	84	[910]	LOADK    	R3 := 1.000000
	85	[910]	OP_LOADBOOL	R4 1 0 ; R4 := true
	86	[910]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	87	[910]	SETTABLE 	R1 K21 R2 ; R1["BackerHighlight"] := R2
	88	[912]	GETGLOBAL	R1 K22 ; R1 := 0xae91e43b
	89	[912]	SELF     	R1 R1 K23 ; R2 := R1; R1 := R1[0x67bc869f]
	90	[912]	LOADK    	R3 K24 ; R3 := "ClickBlocker"
	91	[912]	LOADK    	R4 := 9.000000
	92	[912]	GETGLOBAL	R5 K2 ; R5 := mColors
	93	[912]	GETTABLE 	R5 R5 K20 ; R5 := R5["Background1"]
	94	[912]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	95	[913]	RETURN   	R0 1 ; return 

function #22 <?:915,985> (27 instructions, 108 bytes at 0000021110D4CA80)
0 params, 10 slots, 11 upvalues, 0 locals, 12 constants, 1 function
	1	[916]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[916]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x41376e53]
	3	[916]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	4	[916]	LOADK    	R2 K3 ; R2 := "InfoTip"
	5	[916]	GETUPVAL 	R3 U1 ; R3 := U1
	6	[916]	GETGLOBAL	R4 K4 ; R4 := 0xd918e45a
	7	[916]	GETGLOBAL	R5 K5 ; R5 := 0xa31b86df
	8	[916]	GETGLOBAL	R6 K6 ; R6 := 0xb3f08a76
	9	[916]	GETGLOBAL	R7 K7 ; R7 := 0x188b225c
	10	[916]	GETGLOBAL	R8 K8 ; R8 := 0xcbb66c2a
	11	[916]	GETGLOBAL	R9 K9 ; R9 := 0xe60ebba5
	12	[916]	CALL     	R0 10 2 ; R0 := R0(R1,R2,R3,R4,R5,R6,R7,R8,R9)
	13	[916]	SETGLOBALHASH	R0 K0 ; mInfoTip := R0
	14	[917]	GETGLOBAL	R0 K0 ; R0 := mInfoTip
	15	[917]	GETTABLE 	R0 R0 K10 ; R0 := R0["NodeMissionList"]
	16	[984]	CLOSURE  	R1 0 ; R1 := closure(Function #1)
	17	[984]	GETUPVAL 	R0 U2 ; R0 := U2
	18	[984]	GETUPVAL 	R0 U3 ; R0 := U3
	19	[984]	GETUPVAL 	R0 U4 ; R0 := U4
	20	[984]	GETUPVAL 	R0 U5 ; R0 := U5
	21	[984]	GETUPVAL 	R0 U6 ; R0 := U6
	22	[984]	GETUPVAL 	R0 U7 ; R0 := U7
	23	[984]	GETUPVAL 	R0 U8 ; R0 := U8
	24	[984]	GETUPVAL 	R0 U9 ; R0 := U9
	25	[984]	GETUPVAL 	R0 U10 ; R0 := U10
	26	[984]	SETTABLE 	R0 K11 R1 ; R0["mOnSelectedCallback"] := R1
	27	[985]	RETURN   	R0 1 ; return 

function #23 <?:987,1025> (55 instructions, 220 bytes at 000002112A0E7B60)
0 params, 11 slots, 7 upvalues, 0 locals, 19 constants, 2 functions
	1	[988]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[988]	GETTABLE 	R0 R0 K0 ; R0 := R0["Settings"]
	3	[988]	LEN      	R0 R0 ; R0 := # R0
	4	[988]	LT       	0 K1 R0 ; if 0.000000 >= R0 then PC := 15
	5	[988]	JMP      	15 ; PC := 15
	6	[990]	GETGLOBAL	R0 K2 ; R0 := 0xae91e43b
	7	[990]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0xaade900e]
	8	[990]	LOADK    	R2 K4 ; R2 := "DifficultySelector"
	9	[990]	LOADK    	R3 := 11.000000
	10	[990]	GETGLOBAL	R4 K5 ; R4 := mRailJack
	11	[990]	GETTABLE 	R4 R4 K6 ; R4 := R4["Active"]
	12	[990]	NOT      	R4 R4 ; R4 := not R4
	13	[990]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	14	[991]	RETURN   	R0 1 ; return 
	15	[994]	GETUPVAL 	R0 U0 ; R0 := U0
	16	[1005]	CLOSURE  	R1 0 ; R1 := closure(Function #1)
	17	[1005]	GETUPVAL 	R0 U1 ; R0 := U1
	18	[1005]	GETUPVAL 	R0 U2 ; R0 := U2
	19	[1005]	GETUPVAL 	R0 U3 ; R0 := U3
	20	[1005]	SETTABLE 	R0 K7 R1 ; R0["OnDifficultyChanged"] := R1
	21	[1007]	GETUPVAL 	R0 U4 ; R0 := U4
	22	[1007]	GETTABLE 	R0 R0 K8 ; R0 := R0[0xde12f95c]
	23	[1007]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	24	[1007]	GETUPVAL 	R2 U5 ; R2 := U5
	25	[1007]	GETGLOBAL	R3 K5 ; R3 := mRailJack
	26	[1007]	GETGLOBAL	R4 K9 ; R4 := mColors
	27	[1007]	GETGLOBAL	R5 K10 ; R5 := 0xe3ed59f3
	28	[1007]	GETUPVAL 	R6 U0 ; R6 := U0
	29	[1007]	CALL     	R0 7 1 ; R0(R1,R2,R3,R4,R5,R6)
	30	[1010]	GETGLOBAL	R0 K5 ; R0 := mRailJack
	31	[1010]	GETTABLE 	R0 R0 K6 ; R0 := R0["Active"]
	32	[1010]	TEST     	R0 1 ; if R0 then PC := 55
	33	[1010]	JMP      	55 ; PC := 55
	34	[1010]	GETUPVAL 	R0 U0 ; R0 := U0
	35	[1010]	GETTABLE 	R0 R0 K11 ; R0 := R0["CurrentTier"]
	36	[1010]	EQ       	0 R0 K1 ; if R0 ~= 0.000000 then PC := 55
	37	[1010]	JMP      	55 ; PC := 55
	38	[1010]	GETGLOBAL	R0 K12 ; R0 := 0x0032441c
	39	[1010]	GETTABLE 	R0 R0 K13 ; R0 := R0["DifficultySelectorPulse"]
	40	[1010]	EQ       	0 R0 K14 ; if R0 ~= nil then PC := 55
	41	[1010]	JMP      	55 ; PC := 55
	42	[1011]	GETUPVAL 	R0 U6 ; R0 := U6
	43	[1011]	GETTABLE 	R0 R0 K15 ; R0 := R0[0x7fa20839]
	44	[1011]	CALL     	R0 1 7 ; R0,R1,R2,R3,R4,R5 := R0()
	45	[1012]	EQ       	0 R3 K1 ; if R3 ~= 0.000000 then PC := 55
	46	[1012]	JMP      	55 ; PC := 55
	47	[1013]	GETGLOBAL	R6 K12 ; R6 := 0x0032441c
	48	[1013]	SETTABLE 	R6 K13 K16 ; R6["DifficultySelectorPulse"] := true
	49	[1014]	GETUPVAL 	R6 U5 ; R6 := U5
	50	[1014]	SELF     	R6 R6 K17 ; R7 := R6; R6 := R6[0xbd2e96ea]
	51	[1014]	LOADK    	R8 K18 ; R8 := 0.050000
	52	[1021]	CLOSURE  	R9 1 ; R9 := closure(Function #2)
	53	[1022]	OP_LOADBOOL	R10 1 0 ; R10 := true
	54	[1014]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	55	[1025]	RETURN   	R0 1 ; return 

function #24 <?:1027,1033> (10 instructions, 40 bytes at 000002112A0E83E0)
0 params, 2 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[1028]	GETGLOBAL	R0 K0 ; R0 := mRailJack
	2	[1028]	GETTABLE 	R0 R0 K1 ; R0 := R0["Active"]
	3	[1028]	TEST     	R0 0 ; if not R0 then PC := 7
	4	[1028]	JMP      	7 ; PC := 7
	5	[1030]	LOADK    	R0 := 0.000000
	6	[1030]	RETURN   	R0 2 ; return R0 
	7	[1032]	GETUPVAL 	R0 U0 ; R0 := U0
	8	[1032]	GETTABLE 	R0 R0 K2 ; R0 := R0["CurrentTier"]
	9	[1032]	RETURN   	R0 2 ; return R0 
	10	[1033]	RETURN   	R0 1 ; return 

function #25 <?:1035,1234> (603 instructions, 2412 bytes at 000002112A0E8530)
1 param, 25 slots, 21 upvalues, 0 locals, 145 constants, 3 functions
	1	[1036]	GETGLOBAL	R1 K0 ; R1 := 0x34291f5c
	2	[1036]	GETTABLE 	R1 R1 K1 ; R1 := R1[0xe6b41adb]
	3	[1036]	CALL     	R1 1 2 ; R1 := R1()
	4	[1036]	TEST     	R1 0 ; if not R1 then PC := 12
	5	[1036]	JMP      	12 ; PC := 12
	6	[1037]	GETGLOBAL	R1 K2 ; R1 := 0x89326c93
	7	[1037]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xfb64e76c]
	8	[1037]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[1037]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x97c4ff93]
	10	[1037]	OP_LOADBOOL	R3 1 0 ; R3 := true
	11	[1037]	CALL     	R1 3 1 ; R1(R2,R3)
	12	[1039]	GETGLOBAL	R1 K5 ; R1 := 0xae91e43b
	13	[1039]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0xaade900e]
	14	[1039]	LOADK    	R3 K7 ; R3 := "VoidTrader"
	15	[1039]	LOADK    	R4 := 11.000000
	16	[1039]	OP_LOADBOOL	R5 0 0 ; R5 := false
	17	[1039]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	18	[1041]	GETGLOBAL	R1 K5 ; R1 := 0xae91e43b
	19	[1041]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0xaade900e]
	20	[1041]	LOADK    	R3 K8 ; R3 := "Nodes.Node"
	21	[1041]	LOADK    	R4 := 11.000000
	22	[1041]	OP_LOADBOOL	R5 0 0 ; R5 := false
	23	[1041]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	24	[1042]	GETGLOBAL	R1 K5 ; R1 := 0xae91e43b
	25	[1042]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0xaade900e]
	26	[1042]	LOADK    	R3 K9 ; R3 := "NodeNotification"
	27	[1042]	LOADK    	R4 := 11.000000
	28	[1042]	OP_LOADBOOL	R5 0 0 ; R5 := false
	29	[1042]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	30	[1043]	GETGLOBAL	R1 K5 ; R1 := 0xae91e43b
	31	[1043]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0xaade900e]
	32	[1043]	LOADK    	R3 K10 ; R3 := "SubLabel"
	33	[1043]	LOADK    	R4 := 11.000000
	34	[1043]	OP_LOADBOOL	R5 0 0 ; R5 := false
	35	[1043]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	36	[1045]	TEST     	R0 0 ; if not R0 then PC := 58
	37	[1045]	JMP      	58 ; PC := 58
	38	[1046]	GETGLOBAL	R1 K11 ; R1 := 0x2d0fad09
	39	[1046]	LOADK    	R2 K12 ; R2 := "Lotus.Interface.Components.ThemedButton"
	40	[1046]	CALL     	R1 2 2 ; R1 := R1(R2)
	41	[1047]	GETTABLE 	R2 R1 K13 ; R2 := R1[0xae6791ba]
	42	[1047]	GETGLOBAL	R3 K5 ; R3 := 0xae91e43b
	43	[1047]	LOADK    	R4 K14 ; R4 := "SubLabel.JoinBtn"
	44	[1047]	LOADK    	R5 K15 ; R5 := ""
	45	[1047]	LOADK    	R6 K15 ; R6 := ""
	46	[1047]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	47	[1048]	SELF     	R3 R2 K16 ; R4 := R2; R3 := R2[0x4e86c602]
	48	[1048]	OP_LOADBOOL	R5 1 0 ; R5 := true
	49	[1048]	CALL     	R3 3 1 ; R3(R4,R5)
	50	[1049]	SELF     	R3 R2 K17 ; R4 := R2; R3 := R2[0x46610c50]
	51	[1049]	OP_LOADBOOL	R5 0 0 ; R5 := false
	52	[1049]	CALL     	R3 3 1 ; R3(R4,R5)
	53	[1050]	SELF     	R3 R2 K18 ; R4 := R2; R3 := R2[0x368ad758]
	54	[1050]	OP_LOADBOOL	R5 0 0 ; R5 := false
	55	[1050]	CALL     	R3 3 1 ; R3(R4,R5)
	56	[1051]	SELF     	R3 R2 K19 ; R4 := R2; R3 := R2[0x71e9ac81]
	57	[1051]	CALL     	R3 2 1 ; R3(R4)
	58	[1054]	GETGLOBAL	R3 K5 ; R3 := 0xae91e43b
	59	[1054]	SELF     	R3 R3 K6 ; R4 := R3; R3 := R3[0xaade900e]
	60	[1054]	LOADK    	R5 K20 ; R5 := "NodeTransmission"
	61	[1054]	LOADK    	R6 := 11.000000
	62	[1054]	OP_LOADBOOL	R7 0 0 ; R7 := false
	63	[1054]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	64	[1055]	GETGLOBAL	R3 K5 ; R3 := 0xae91e43b
	65	[1055]	SELF     	R3 R3 K21 ; R4 := R3; R3 := R3[0x67bc869f]
	66	[1055]	LOADK    	R5 K22 ; R5 := "InfluenceMap"
	67	[1055]	LOADK    	R6 := 10.000000
	68	[1055]	LOADK    	R7 := 0.000000
	69	[1055]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	70	[1057]	GETGLOBAL	R3 K5 ; R3 := 0xae91e43b
	71	[1057]	SELF     	R3 R3 K21 ; R4 := R3; R3 := R3[0x67bc869f]
	72	[1057]	LOADK    	R5 K23 ; R5 := "ClickBlocker"
	73	[1057]	LOADK    	R6 := 10.000000
	74	[1057]	LOADK    	R7 := 0.000000
	75	[1057]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	76	[1058]	GETGLOBAL	R3 K5 ; R3 := 0xae91e43b
	77	[1058]	SELF     	R3 R3 K6 ; R4 := R3; R3 := R3[0xaade900e]
	78	[1058]	LOADK    	R5 K23 ; R5 := "ClickBlocker"
	79	[1058]	LOADK    	R6 := 59.000000
	80	[1058]	OP_LOADBOOL	R7 0 0 ; R7 := false
	81	[1058]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	82	[1060]	GETGLOBAL	R3 K5 ; R3 := 0xae91e43b
	83	[1060]	SELF     	R3 R3 K6 ; R4 := R3; R3 := R3[0xaade900e]
	84	[1060]	LOADK    	R5 K24 ; R5 := "DifficultySelector"
	85	[1060]	LOADK    	R6 := 11.000000
	86	[1060]	OP_LOADBOOL	R7 0 0 ; R7 := false
	87	[1060]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	88	[1061]	GETGLOBAL	R3 K5 ; R3 := 0xae91e43b
	89	[1061]	SELF     	R3 R3 K21 ; R4 := R3; R3 := R3[0x67bc869f]
	90	[1061]	LOADK    	R5 K24 ; R5 := "DifficultySelector"
	91	[1061]	LOADK    	R6 := 10.000000
	92	[1061]	LOADK    	R7 := 0.000000
	93	[1061]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	94	[1063]	GETGLOBAL	R3 K25 ; R3 := 0x76ea806b
	95	[1063]	SELF     	R3 R3 K26 ; R4 := R3; R3 := R3[0x3f3ae64c]
	96	[1063]	LOADK    	R5 := 0.000000
	97	[1063]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	98	[1063]	SELF     	R3 R3 K27 ; R4 := R3; R3 := R3[0x80563238]
	99	[1063]	CALL     	R3 2 2 ; R3 := R3(R4)
	100	[1064]	SELF     	R4 R3 K28 ; R5 := R3; R4 := R3[0x62c81b76]
	101	[1064]	CALL     	R4 2 2 ; R4 := R4(R5)
	102	[1065]	GETGLOBAL	R5 K2 ; R5 := 0x89326c93
	103	[1065]	SELF     	R5 R5 K3 ; R6 := R5; R5 := R5[0xfb64e76c]
	104	[1065]	CALL     	R5 2 2 ; R5 := R5(R6)
	105	[1065]	SELF     	R5 R5 K28 ; R6 := R5; R5 := R5[0x62c81b76]
	106	[1065]	CALL     	R5 2 2 ; R5 := R5(R6)
	107	[1065]	GETTABLE 	R5 R5 K29 ; R5 := R5["mCrewShipLoadOut"]
	108	[1066]	SELF     	R6 R4 K30 ; R7 := R4; R6 := R4[0xb61abfd2]
	109	[1066]	LOADK    	R8 := 2.000000
	110	[1066]	LOADK    	R9 := 0.000000
	111	[1066]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	112	[1067]	SELF     	R7 R4 K30 ; R8 := R4; R7 := R4[0xb61abfd2]
	113	[1067]	LOADK    	R9 := 2.000000
	114	[1067]	LOADK    	R10 := 2.000000
	115	[1067]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	116	[1068]	SELF     	R8 R4 K30 ; R9 := R4; R8 := R4[0xb61abfd2]
	117	[1068]	LOADK    	R10 := 2.000000
	118	[1068]	LOADK    	R11 := 3.000000
	119	[1068]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	120	[1069]	GETGLOBAL	R9 K32 ; R9 := 0x7b998233
	121	[1069]	GETTABLE 	R10 R6 K33 ; R10 := R6["mItemType"]
	122	[1069]	CALL     	R9 2 2 ; R9 := R9(R10)
	123	[1069]	TEST     	R9 1 ; if R9 then PC := 135
	124	[1069]	JMP      	135 ; PC := 135
	125	[1069]	GETGLOBAL	R9 K32 ; R9 := 0x7b998233
	126	[1069]	GETTABLE 	R10 R7 K33 ; R10 := R7["mItemType"]
	127	[1069]	CALL     	R9 2 2 ; R9 := R9(R10)
	128	[1069]	TEST     	R9 1 ; if R9 then PC := 135
	129	[1069]	JMP      	135 ; PC := 135
	130	[1069]	GETGLOBAL	R9 K32 ; R9 := 0x7b998233
	131	[1069]	GETTABLE 	R10 R8 K33 ; R10 := R8["mItemType"]
	132	[1069]	CALL     	R9 2 2 ; R9 := R9(R10)
	133	[1069]	NOT      	R9 R9 ; R9 := not R9
	134	[1069]	JMP      	137 ; PC := 137
	135	[1069]	OP_LOADBOOL	R9 0 1 ; R9 := false; PC := 136
	136	[1069]	OP_LOADBOOL	R9 1 0 ; R9 := true
	137	[1070]	SELF     	R10 R3 K34 ; R11 := R3; R10 := R3[0xc192c12e]
	138	[1070]	CALL     	R10 2 2 ; R10 := R10(R11)
	139	[1072]	GETGLOBAL	R11 K36 ; R11 := _T
	140	[1072]	GETTABLE 	R11 R11 K37 ; R11 := R11["CustomStarChartNodeFilter"]
	141	[1072]	EQ       	1 R11 K38 ; if R11 == nil then PC := 147
	142	[1072]	JMP      	147 ; PC := 147
	143	[1072]	GETGLOBAL	R11 K36 ; R11 := _T
	144	[1072]	GETTABLE 	R11 R11 K37 ; R11 := R11["CustomStarChartNodeFilter"]
	145	[1072]	GETTABLE 	R11 R11 K39 ; R11 := R11["NewWarMode"]
	146	[1072]	JMP      	149 ; PC := 149
	147	[1072]	OP_LOADBOOL	R11 0 1 ; R11 := false; PC := 148
	148	[1072]	OP_LOADBOOL	R11 1 0 ; R11 := true
	149	[1072]	SETGLOBALHASH	R11 K35 ; mNewWarMode := R11
	150	[1074]	GETGLOBAL	R11 K40 ; R11 := mRailJack
	151	[1074]	GETGLOBAL	R12 K32 ; R12 := 0x7b998233
	152	[1074]	GETGLOBAL	R13 K36 ; R13 := _T
	153	[1074]	GETTABLE 	R13 R13 K42 ; R13 := R13["InRailJackMode"]
	154	[1074]	CALL     	R12 2 2 ; R12 := R12(R13)
	155	[1074]	TEST     	R12 1 ; if R12 then PC := 160
	156	[1074]	JMP      	160 ; PC := 160
	157	[1074]	GETGLOBAL	R12 K36 ; R12 := _T
	158	[1074]	GETTABLE 	R12 R12 K42 ; R12 := R12["InRailJackMode"]
	159	[1074]	JMP      	162 ; PC := 162
	160	[1074]	OP_LOADBOOL	R12 0 1 ; R12 := false; PC := 161
	161	[1074]	OP_LOADBOOL	R12 1 0 ; R12 := true
	162	[1074]	SETTABLE 	R11 K41 R12 ; R11["Active"] := R12
	163	[1075]	GETGLOBAL	R11 K40 ; R11 := mRailJack
	164	[1077]	TESTSET  	R12 R10 0 ; if not R10 then PC := 196 else R12 := R10 
	165	[1077]	JMP      	196 ; PC := 196
	166	[1078]	GETGLOBAL	R12 K32 ; R12 := 0x7b998233
	167	[1078]	MOVE     	R13 R5 ; R13 := R5
	168	[1078]	CALL     	R12 2 2 ; R12 := R12(R13)
	169	[1078]	TEST     	R12 1 ; if R12 then PC := 194
	170	[1078]	JMP      	194 ; PC := 194
	171	[1079]	GETGLOBAL	R12 K32 ; R12 := 0x7b998233
	172	[1079]	GETTABLE 	R13 R5 K44 ; R13 := R5["mShip"]
	173	[1079]	CALL     	R12 2 2 ; R12 := R12(R13)
	174	[1079]	TEST     	R12 1 ; if R12 then PC := 194
	175	[1079]	JMP      	194 ; PC := 194
	176	[1080]	GETTABLE 	R12 R5 K44 ; R12 := R5["mShip"]
	177	[1080]	GETTABLE 	R12 R12 K45 ; R12 := R12["mItemId"]
	178	[1080]	GETTABLE 	R12 R12 K46 ; R12 := R12["mId"]
	179	[1080]	GETGLOBAL	R13 K31 ; R13 := 0x6c97a788
	180	[1080]	GETTABLE 	R13 R13 K47 ; R13 := R13["InvalidItemID"]
	181	[1080]	EQ       	1 R12 R13 ; if R12 == R13 then PC := 194
	182	[1080]	JMP      	194 ; PC := 194
	183	[1081]	GETGLOBAL	R12 K48 ; R12 := 0x25d99d89
	184	[1081]	SELF     	R12 R12 K49 ; R13 := R12; R12 := R12[0x4ae54c32]
	185	[1081]	GETUPVAL 	R14 U0 ; R14 := U0
	186	[1081]	GETTABLE 	R14 R14 K50 ; R14 := R14["SF_RAILJACK_KEY"]
	187	[1081]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	188	[1081]	TEST     	R12 0 ; if not R12 then PC := 196
	189	[1081]	JMP      	196 ; PC := 196
	190	[1082]	GETUPVAL 	R12 U0 ; R12 := U0
	191	[1082]	GETTABLE 	R12 R12 K51 ; R12 := R12[0xc00479a5]
	192	[1082]	CALL     	R12 1 2 ; R12 := R12()
	193	[1083]	JMP      	196 ; PC := 196
	194	[1083]	OP_LOADBOOL	R12 0 1 ; R12 := false; PC := 195
	195	[1083]	OP_LOADBOOL	R12 1 0 ; R12 := true
	196	[1083]	SETTABLE 	R11 K43 R12 ; R11["CanHost"] := R12
	197	[1085]	GETGLOBAL	R11 K40 ; R11 := mRailJack
	198	[1085]	GETTABLE 	R11 R11 K52 ; R11 := R11["Button"]
	199	[1085]	EQ       	0 R11 K38 ; if R11 ~= nil then PC := 215
	200	[1085]	JMP      	215 ; PC := 215
	201	[1086]	GETGLOBAL	R11 K11 ; R11 := 0x2d0fad09
	202	[1086]	LOADK    	R12 K53 ; R12 := "Lotus.Interface.Components.RailjackModeButton"
	203	[1086]	CALL     	R11 2 2 ; R11 := R11(R12)
	204	[1087]	GETGLOBAL	R12 K40 ; R12 := mRailJack
	205	[1087]	GETTABLE 	R13 R11 K13 ; R13 := R11[0xae6791ba]
	206	[1087]	GETGLOBAL	R14 K5 ; R14 := 0xae91e43b
	207	[1087]	LOADK    	R15 K54 ; R15 := "RailjackBtn"
	208	[1087]	GETUPVAL 	R16 U1 ; R16 := U1
	209	[1087]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	210	[1087]	SETTABLE 	R12 K52 R13 ; R12["Button"] := R13
	211	[1088]	GETGLOBAL	R12 K40 ; R12 := mRailJack
	212	[1088]	GETTABLE 	R12 R12 K52 ; R12 := R12["Button"]
	213	[1088]	GETUPVAL 	R13 U2 ; R13 := U2
	214	[1088]	SETTABLE 	R12 K55 R13 ; R12["mOnPressedCallback"] := R13
	215	[1090]	GETGLOBAL	R12 K40 ; R12 := mRailJack
	216	[1090]	GETTABLE 	R12 R12 K52 ; R12 := R12["Button"]
	217	[1090]	SELF     	R12 R12 K17 ; R13 := R12; R12 := R12[0x46610c50]
	218	[1090]	GETGLOBAL	R14 K40 ; R14 := mRailJack
	219	[1090]	GETTABLE 	R14 R14 K41 ; R14 := R14["Active"]
	220	[1090]	MOVE     	R15 R0 ; R15 := R0
	221	[1090]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	222	[1091]	GETGLOBAL	R12 K56 ; R12 := 0xe7f2b02f
	223	[1091]	SELF     	R12 R12 K57 ; R13 := R12; R12 := R12[0xca33534d]
	224	[1091]	CALL     	R12 2 2 ; R12 := R12(R13)
	225	[1091]	NOT      	R12 R12 ; R12 := not R12
	226	[1092]	GETGLOBAL	R13 K40 ; R13 := mRailJack
	227	[1092]	GETTABLE 	R13 R13 K52 ; R13 := R13["Button"]
	228	[1092]	SELF     	R13 R13 K18 ; R14 := R13; R13 := R13[0x368ad758]
	229	[1092]	MOVE     	R15 R12 ; R15 := R12
	230	[1092]	CALL     	R13 3 1 ; R13(R14,R15)
	231	[1094]	GETGLOBAL	R13 K40 ; R13 := mRailJack
	232	[1101]	CLOSURE  	R14 0 ; R14 := closure(Function #1)
	233	[1101]	MOVE     	R0 R9 ; R0 := R9
	234	[1101]	MOVE     	R0 R10 ; R0 := R10
	235	[1101]	SETTABLE 	R13 K58 R14 ; R13["UpdateButtonVisibility"] := R14
	236	[1102]	GETGLOBAL	R13 K40 ; R13 := mRailJack
	237	[1102]	GETTABLE 	R13 R13 K59 ; R13 := R13[0xa2cabe13]
	238	[1102]	CALL     	R13 1 1 ; R13()
	239	[1104]	GETGLOBAL	R13 K60 ; R13 := 0xa94df70b
	240	[1104]	SELF     	R13 R13 K61 ; R14 := R13; R13 := R13[0xf87f9433]
	241	[1104]	CALL     	R13 2 2 ; R13 := R13(R14)
	242	[1104]	TEST     	R13 0 ; if not R13 then PC := 259
	243	[1104]	JMP      	259 ; PC := 259
	244	[1104]	GETGLOBAL	R13 K40 ; R13 := mRailJack
	245	[1104]	GETTABLE 	R13 R13 K41 ; R13 := R13["Active"]
	246	[1104]	TEST     	R13 1 ; if R13 then PC := 259
	247	[1104]	JMP      	259 ; PC := 259
	248	[1105]	GETUPVAL 	R13 U3 ; R13 := U3
	249	[1105]	GETTABLE 	R13 R13 K62 ; R13 := R13[0xe0cba3ca]
	250	[1105]	GETGLOBAL	R14 K5 ; R14 := 0xae91e43b
	251	[1105]	SELF     	R14 R14 K63 ; R15 := R14; R14 := R14[0x42b04007]
	252	[1105]	LOADK    	R16 K64 ; R16 := "/Lotus/Language/Menu/MainMenu_NewBuildMissionsBlocked"
	253	[1105]	OP_LOADBOOL	R17 0 0 ; R17 := false
	254	[1105]	CALL     	R14 4 0 ; R14,... := R14(R15,R16,R17)
	255	[1105]	CALL     	R13 0 1 ; R13(R14,...)
	256	[1106]	GETUPVAL 	R13 U4 ; R13 := U4
	257	[1106]	CALL     	R13 1 1 ; R13()
	258	[1107]	RETURN   	R0 1 ; return 
	259	[1110]	GETGLOBAL	R13 K36 ; R13 := _T
	260	[1110]	SETTABLE 	R13 K65 K66 ; R13["RadialSolarMapOpen"] := true
	261	[1111]	GETUPVAL 	R13 U0 ; R13 := U0
	262	[1111]	GETTABLE 	R13 R13 K67 ; R13 := R13[0x9e3d3434]
	263	[1111]	OP_LOADBOOL	R14 1 0 ; R14 := true
	264	[1111]	CALL     	R13 2 1 ; R13(R14)
	265	[1112]	GETGLOBAL	R13 K36 ; R13 := _T
	266	[1112]	GETTABLE 	R13 R13 K69 ; R13 := R13["WareframeChallenge"]
	267	[1112]	EQ       	0 R13 K38 ; if R13 ~= nil then PC := 270
	268	[1112]	JMP      	270 ; PC := 270
	269	[1112]	OP_LOADBOOL	R13 0 1 ; R13 := false; PC := 270
	270	[1112]	OP_LOADBOOL	R13 1 0 ; R13 := true
	271	[1112]	SETGLOBALHASH	R13 K68 ; mDebugUnlockAllMissions := R13
	272	[1113]	OP_LOADBOOL	R13 0 0 ; R13 := false
	273	[1113]	SETUPVAL 	R13 U5 ; U5 := R13
	274	[1115]	GETGLOBAL	R13 K11 ; R13 := 0x2d0fad09
	275	[1115]	LOADK    	R14 K70 ; R14 := "Lotus.Interface.FortressUtilities"
	276	[1115]	CALL     	R13 2 2 ; R13 := R13(R14)
	277	[1116]	GETUPVAL 	R14 U6 ; R14 := U6
	278	[1116]	GETTABLE 	R15 R13 K72 ; R15 := R13[0x7fe6f080]
	279	[1116]	CALL     	R15 1 2 ; R15 := R15()
	280	[1116]	SETTABLE 	R14 K71 R15 ; R14["SplinePoints"] := R15
	281	[1118]	GETGLOBAL	R14 K68 ; R14 := mDebugUnlockAllMissions
	282	[1118]	TEST     	R14 1 ; if R14 then PC := 331
	283	[1118]	JMP      	331 ; PC := 331
	284	[1118]	GETGLOBAL	R14 K32 ; R14 := 0x7b998233
	285	[1118]	GETGLOBAL	R15 K48 ; R15 := 0x25d99d89
	286	[1118]	CALL     	R14 2 2 ; R14 := R14(R15)
	287	[1118]	TEST     	R14 1 ; if R14 then PC := 331
	288	[1118]	JMP      	331 ; PC := 331
	289	[1119]	GETGLOBAL	R14 K48 ; R14 := 0x25d99d89
	290	[1119]	SELF     	R14 R14 K73 ; R15 := R14; R14 := R14[0x5735520e]
	291	[1119]	CALL     	R14 2 2 ; R14 := R14(R15)
	292	[1119]	TEST     	R14 1 ; if R14 then PC := 298
	293	[1119]	JMP      	298 ; PC := 298
	294	[1120]	GETUPVAL 	R14 U7 ; R14 := U7
	295	[1120]	GETUPVAL 	R15 U0 ; R15 := U0
	296	[1120]	GETTABLE 	R15 R15 K74 ; R15 := R15["REGION_ID_MOON"]
	297	[1120]	SETTABLE 	R14 R15 K66 ; R14[R15] := true
	298	[1123]	GETGLOBAL	R14 K48 ; R14 := 0x25d99d89
	299	[1123]	SELF     	R14 R14 K75 ; R15 := R14; R14 := R14[0x5baf7a39]
	300	[1123]	CALL     	R14 2 2 ; R14 := R14(R15)
	301	[1123]	TEST     	R14 1 ; if R14 then PC := 307
	302	[1123]	JMP      	307 ; PC := 307
	303	[1124]	GETUPVAL 	R14 U7 ; R14 := U7
	304	[1124]	GETUPVAL 	R15 U0 ; R15 := U0
	305	[1124]	GETTABLE 	R15 R15 K76 ; R15 := R15["REGION_ID_FORTRESS"]
	306	[1124]	SETTABLE 	R14 R15 K66 ; R14[R15] := true
	307	[1127]	GETUPVAL 	R14 U0 ; R14 := U0
	308	[1127]	GETTABLE 	R14 R14 K77 ; R14 := R14[0x52fb05b3]
	309	[1127]	GETUPVAL 	R15 U8 ; R15 := U8
	310	[1127]	GETTABLE 	R15 R15 K78 ; R15 := R15["zarimanIntroQuest"]
	311	[1127]	CALL     	R14 2 2 ; R14 := R14(R15)
	312	[1127]	TEST     	R14 1 ; if R14 then PC := 327
	313	[1127]	JMP      	327 ; PC := 327
	314	[1127]	GETGLOBAL	R14 K48 ; R14 := 0x25d99d89
	315	[1127]	SELF     	R14 R14 K79 ; R15 := R14; R14 := R14[0x25a6e75e]
	316	[1127]	CALL     	R14 2 2 ; R14 := R14(R15)
	317	[1127]	SELF     	R14 R14 K80 ; R15 := R14; R14 := R14[0x8e7c3b5e]
	318	[1127]	CALL     	R14 2 2 ; R14 := R14(R15)
	319	[1127]	GETUPVAL 	R15 U8 ; R15 := U8
	320	[1127]	GETTABLE 	R15 R15 K78 ; R15 := R15["zarimanIntroQuest"]
	321	[1127]	EQ       	1 R14 R15 ; if R14 == R15 then PC := 327
	322	[1127]	JMP      	327 ; PC := 327
	323	[1128]	GETUPVAL 	R14 U7 ; R14 := U7
	324	[1128]	GETUPVAL 	R15 U0 ; R15 := U0
	325	[1128]	GETTABLE 	R15 R15 K81 ; R15 := R15["REGION_ID_ZARIMAN"]
	326	[1128]	SETTABLE 	R14 R15 K66 ; R14[R15] := true
	327	[1131]	GETUPVAL 	R14 U7 ; R14 := U7
	328	[1131]	GETUPVAL 	R15 U0 ; R15 := U0
	329	[1131]	GETTABLE 	R15 R15 K82 ; R15 := R15["REGION_ID_DARK_SECTOR"]
	330	[1131]	SETTABLE 	R14 R15 K66 ; R14[R15] := true
	331	[1134]	GETUPVAL 	R14 U7 ; R14 := U7
	332	[1134]	GETUPVAL 	R15 U0 ; R15 := U0
	333	[1134]	GETTABLE 	R15 R15 K83 ; R15 := R15["REGION_ID_DEEP_SPACE"]
	334	[1134]	GETGLOBAL	R16 K40 ; R16 := mRailJack
	335	[1134]	GETTABLE 	R16 R16 K41 ; R16 := R16["Active"]
	336	[1134]	NOT      	R16 R16 ; R16 := not R16
	337	[1134]	SETTABLE 	R14 R15 R16 ; R14[R15] := R16
	338	[1136]	GETGLOBAL	R14 K5 ; R14 := 0xae91e43b
	339	[1136]	SELF     	R14 R14 K84 ; R15 := R14; R14 := R14[0xc6a10ab1]
	340	[1136]	LOADK    	R16 := 0.000000
	341	[1136]	CALL     	R14 3 1 ; R14(R15,R16)
	342	[1138]	GETGLOBAL	R14 K11 ; R14 := 0x2d0fad09
	343	[1138]	LOADK    	R15 K85 ; R15 := "Lotus.Interface.Libs.TimerMgr"
	344	[1138]	CALL     	R14 2 2 ; R14 := R14(R15)
	345	[1139]	GETTABLE 	R15 R14 K86 ; R15 := R14[0xde474187]
	346	[1139]	CALL     	R15 1 2 ; R15 := R15()
	347	[1139]	SETUPVAL 	R15 U9 ; U9 := R15
	348	[1140]	GETGLOBAL	R15 K87 ; R15 := mAnchorMgr
	349	[1140]	EQ       	0 R15 K38 ; if R15 ~= nil then PC := 391
	350	[1140]	JMP      	391 ; PC := 391
	351	[1141]	GETGLOBAL	R15 K11 ; R15 := 0x2d0fad09
	352	[1141]	LOADK    	R16 K88 ; R16 := "EE.Interface.AnchorMgr"
	353	[1141]	CALL     	R15 2 2 ; R15 := R15(R16)
	354	[1142]	GETTABLE 	R16 R15 K13 ; R16 := R15[0xae6791ba]
	355	[1142]	GETGLOBAL	R17 K5 ; R17 := 0xae91e43b
	356	[1142]	CALL     	R16 2 2 ; R16 := R16(R17)
	357	[1142]	SETGLOBALHASH	R16 K87 ; mAnchorMgr := R16
	358	[1143]	GETGLOBAL	R16 K87 ; R16 := mAnchorMgr
	359	[1143]	SELF     	R16 R16 K89 ; R17 := R16; R16 := R16[0x20ff29f7]
	360	[1143]	GETGLOBAL	R18 K5 ; R18 := 0xae91e43b
	361	[1143]	LOADK    	R19 K90 ; R19 := "RegionInfo"
	362	[1143]	NEWTABLE 	R20 2 0 ; R20 := {}
	363	[1143]	GETGLOBAL	R21 K87 ; R21 := mAnchorMgr
	364	[1143]	GETTABLE 	R21 R21 K91 ; R21 := R21["ANCHOR_H_RIGHT"]
	365	[1143]	GETGLOBAL	R22 K87 ; R22 := mAnchorMgr
	366	[1143]	GETTABLE 	R22 R22 K92 ; R22 := R22["ANCHOR_V_TOP"]
	367	[1143]	SETLIST  	R20 2 1 ; R20[(1-1)*FPF+i] := R(20+i), 1 <= i <= 2
	368	[1143]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	369	[1144]	GETGLOBAL	R16 K87 ; R16 := mAnchorMgr
	370	[1144]	SELF     	R16 R16 K89 ; R17 := R16; R16 := R16[0x20ff29f7]
	371	[1144]	GETGLOBAL	R18 K5 ; R18 := 0xae91e43b
	372	[1144]	LOADK    	R19 K93 ; R19 := "RailJackBtn"
	373	[1144]	NEWTABLE 	R20 2 0 ; R20 := {}
	374	[1144]	GETGLOBAL	R21 K87 ; R21 := mAnchorMgr
	375	[1144]	GETTABLE 	R21 R21 K91 ; R21 := R21["ANCHOR_H_RIGHT"]
	376	[1144]	GETGLOBAL	R22 K87 ; R22 := mAnchorMgr
	377	[1144]	GETTABLE 	R22 R22 K92 ; R22 := R22["ANCHOR_V_TOP"]
	378	[1144]	SETLIST  	R20 2 1 ; R20[(1-1)*FPF+i] := R(20+i), 1 <= i <= 2
	379	[1144]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	380	[1145]	GETGLOBAL	R16 K87 ; R16 := mAnchorMgr
	381	[1145]	SELF     	R16 R16 K89 ; R17 := R16; R16 := R16[0x20ff29f7]
	382	[1145]	GETGLOBAL	R18 K5 ; R18 := 0xae91e43b
	383	[1145]	LOADK    	R19 K24 ; R19 := "DifficultySelector"
	384	[1145]	NEWTABLE 	R20 2 0 ; R20 := {}
	385	[1145]	GETGLOBAL	R21 K87 ; R21 := mAnchorMgr
	386	[1145]	GETTABLE 	R21 R21 K91 ; R21 := R21["ANCHOR_H_RIGHT"]
	387	[1145]	GETGLOBAL	R22 K87 ; R22 := mAnchorMgr
	388	[1145]	GETTABLE 	R22 R22 K94 ; R22 := R22["ANCHOR_V_CENTRE"]
	389	[1145]	SETLIST  	R20 2 1 ; R20[(1-1)*FPF+i] := R(20+i), 1 <= i <= 2
	390	[1145]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	391	[1148]	TEST     	R0 0 ; if not R0 then PC := 416
	392	[1148]	JMP      	416 ; PC := 416
	393	[1149]	GETUPVAL 	R16 U10 ; R16 := U10
	394	[1149]	CALL     	R16 1 1 ; R16()
	395	[1150]	GETGLOBAL	R16 K5 ; R16 := 0xae91e43b
	396	[1150]	SELF     	R16 R16 K21 ; R17 := R16; R16 := R16[0x67bc869f]
	397	[1150]	LOADK    	R18 K95 ; R18 := "Reticle"
	398	[1150]	LOADK    	R19 := 0.000000
	399	[1150]	GETGLOBAL	R20 K5 ; R20 := 0xae91e43b
	400	[1150]	SELF     	R20 R20 K96 ; R21 := R20; R20 := R20[0x091c120e]
	401	[1150]	CALL     	R20 2 2 ; R20 := R20(R21)
	402	[1150]	MUL      	R20 R20 K97 ; R20 := R20 * 0.500000
	403	[1150]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	404	[1151]	GETGLOBAL	R16 K5 ; R16 := 0xae91e43b
	405	[1151]	SELF     	R16 R16 K21 ; R17 := R16; R16 := R16[0x67bc869f]
	406	[1151]	LOADK    	R18 K95 ; R18 := "Reticle"
	407	[1151]	LOADK    	R19 := 1.000000
	408	[1151]	GETGLOBAL	R20 K5 ; R20 := 0xae91e43b
	409	[1151]	SELF     	R20 R20 K98 ; R21 := R20; R20 := R20[0x2cc9d281]
	410	[1151]	CALL     	R20 2 2 ; R20 := R20(R21)
	411	[1151]	MUL      	R20 R20 K97 ; R20 := R20 * 0.500000
	412	[1151]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	413	[1152]	GETGLOBAL	R16 K36 ; R16 := _T
	414	[1152]	SETTABLE 	R16 K99 K38 ; R16["MapInitLockCursor"] := nil
	415	[1152]	JMP      	418 ; PC := 418
	416	[1154]	GETGLOBAL	R16 K100 ; R16 := mPlayerPos
	417	[1154]	SETTABLE 	R16 K101 K102 ; R16["Locked"] := false
	418	[1157]	GETGLOBAL	R16 K36 ; R16 := _T
	419	[1157]	GETUPVAL 	R17 U11 ; R17 := U11
	420	[1157]	SETTABLE 	R16 K103 R17 ; R16["RadialSolarMap_OnAggregateResults"] := R17
	421	[1159]	GETGLOBAL	R16 K5 ; R16 := 0xae91e43b
	422	[1159]	SELF     	R16 R16 K63 ; R17 := R16; R16 := R16[0x42b04007]
	423	[1159]	LOADK    	R18 K105 ; R18 := "<LOCKED>"
	424	[1159]	OP_LOADBOOL	R19 1 0 ; R19 := true
	425	[1159]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	426	[1159]	SETGLOBALHASH	R16 K104 ; mLockIcon := R16
	427	[1161]	GETGLOBAL	R16 K11 ; R16 := 0x2d0fad09
	428	[1161]	LOADK    	R17 K106 ; R17 := "Lotus.Interface.Libs.SortieGenerator"
	429	[1161]	CALL     	R16 2 2 ; R16 := R16(R17)
	430	[1162]	GETUPVAL 	R17 U12 ; R17 := U12
	431	[1162]	GETTABLE 	R18 R16 K108 ; R18 := R16[0xe2c1afa7]
	432	[1162]	CALL     	R18 1 2 ; R18 := R18()
	433	[1162]	SETTABLE 	R17 K107 R18 ; R17["mBossInfo"] := R18
	434	[1164]	TEST     	R0 0 ; if not R0 then PC := 440
	435	[1164]	JMP      	440 ; PC := 440
	436	[1165]	GETUPVAL 	R17 U3 ; R17 := U3
	437	[1165]	GETTABLE 	R17 R17 K109 ; R17 := R17[0x659d451f]
	438	[1165]	GETGLOBAL	R18 K110 ; R18 := 0x0856e17d
	439	[1165]	CALL     	R17 2 1 ; R17(R18)
	440	[1167]	GETUPVAL 	R17 U13 ; R17 := U13
	441	[1167]	CALL     	R17 1 1 ; R17()
	442	[1169]	GETUPVAL 	R17 U14 ; R17 := U14
	443	[1169]	CALL     	R17 1 1 ; R17()
	444	[1170]	GETGLOBAL	R17 K111 ; R17 := mInfoTip
	445	[1170]	GETGLOBAL	R18 K35 ; R18 := mNewWarMode
	446	[1170]	SETTABLE 	R17 K35 R18 ; R17["mNewWarMode"] := R18
	447	[1171]	GETGLOBAL	R17 K111 ; R17 := mInfoTip
	448	[1171]	GETGLOBAL	R18 K36 ; R18 := _T
	449	[1171]	GETTABLE 	R18 R18 K37 ; R18 := R18["CustomStarChartNodeFilter"]
	450	[1171]	EQ       	0 R18 K38 ; if R18 ~= nil then PC := 453
	451	[1171]	JMP      	453 ; PC := 453
	452	[1171]	OP_LOADBOOL	R18 0 1 ; R18 := false; PC := 453
	453	[1171]	OP_LOADBOOL	R18 1 0 ; R18 := true
	454	[1171]	SETTABLE 	R17 K112 R18 ; R17["mBorderVisible"] := R18
	455	[1173]	GETUPVAL 	R17 U15 ; R17 := U15
	456	[1173]	GETGLOBAL	R18 K35 ; R18 := mNewWarMode
	457	[1173]	TEST     	R18 1 ; if R18 then PC := 470
	458	[1173]	JMP      	470 ; PC := 470
	459	[1173]	GETUPVAL 	R18 U0 ; R18 := U0
	460	[1173]	GETTABLE 	R18 R18 K114 ; R18 := R18[0x1b0c4985]
	461	[1173]	CALL     	R18 1 2 ; R18 := R18()
	462	[1173]	TEST     	R18 0 ; if not R18 then PC := 472
	463	[1173]	JMP      	472 ; PC := 472
	464	[1173]	GETUPVAL 	R18 U0 ; R18 := U0
	465	[1173]	GETTABLE 	R18 R18 K115 ; R18 := R18[0x293ec9c4]
	466	[1173]	GETGLOBAL	R19 K48 ; R19 := 0x25d99d89
	467	[1173]	CALL     	R18 2 2 ; R18 := R18(R19)
	468	[1173]	NOT      	R18 R18 ; R18 := not R18
	469	[1173]	JMP      	472 ; PC := 472
	470	[1173]	OP_LOADBOOL	R18 0 1 ; R18 := false; PC := 471
	471	[1173]	OP_LOADBOOL	R18 1 0 ; R18 := true
	472	[1173]	SETTABLE 	R17 K113 R18 ; R17["EnableDifficultySelector"] := R18
	473	[1175]	GETUPVAL 	R17 U15 ; R17 := U15
	474	[1175]	GETTABLE 	R17 R17 K113 ; R17 := R17["EnableDifficultySelector"]
	475	[1175]	TEST     	R17 0 ; if not R17 then PC := 479
	476	[1175]	JMP      	479 ; PC := 479
	477	[1176]	GETUPVAL 	R17 U16 ; R17 := U16
	478	[1176]	CALL     	R17 1 1 ; R17()
	479	[1179]	OP_LOADBOOL	R17 1 0 ; R17 := true
	480	[1179]	SETGLOBALHASH	R17 K116 ; mInputBlocked := R17
	481	[1181]	GETGLOBAL	R17 K117 ; R17 := 0xbe190284
	482	[1181]	SELF     	R17 R17 K118 ; R18 := R17; R17 := R17[0x33307f92]
	483	[1181]	CALL     	R17 2 2 ; R17 := R17(R18)
	484	[1182]	GETGLOBAL	R18 K32 ; R18 := 0x7b998233
	485	[1182]	MOVE     	R19 R17 ; R19 := R17
	486	[1182]	CALL     	R18 2 2 ; R18 := R18(R19)
	487	[1182]	TEST     	R18 1 ; if R18 then PC := 492
	488	[1182]	JMP      	492 ; PC := 492
	489	[1183]	SELF     	R18 R17 K18 ; R19 := R17; R18 := R17[0x368ad758]
	490	[1183]	OP_LOADBOOL	R20 0 0 ; R20 := false
	491	[1183]	CALL     	R18 3 1 ; R18(R19,R20)
	492	[1185]	GETGLOBAL	R18 K5 ; R18 := 0xae91e43b
	493	[1185]	SELF     	R18 R18 K119 ; R19 := R18; R18 := R18[0x767c0947]
	494	[1185]	OP_LOADBOOL	R20 1 0 ; R20 := true
	495	[1185]	CALL     	R18 3 1 ; R18(R19,R20)
	496	[1187]	GETUPVAL 	R18 U17 ; R18 := U17
	497	[1187]	GETUPVAL 	R19 U18 ; R19 := U18
	498	[1187]	GETTABLE 	R19 R19 K120 ; R19 := R19["READ_ONLY"]
	499	[1187]	CALL     	R18 2 1 ; R18(R19)
	500	[1189]	GETGLOBAL	R18 K121 ; R18 := 0x38f10e85
	501	[1189]	GETGLOBAL	R19 K5 ; R19 := 0xae91e43b
	502	[1189]	LOADK    	R20 K122 ; R20 := "Reticle.swapDepths"
	503	[1189]	LOADK    	R21 := 605.000000
	504	[1189]	CALL     	R18 4 1 ; R18(R19,R20,R21)
	505	[1190]	GETGLOBAL	R18 K121 ; R18 := 0x38f10e85
	506	[1190]	GETGLOBAL	R19 K5 ; R19 := 0xae91e43b
	507	[1190]	LOADK    	R20 K123 ; R20 := "NodeTransmission.swapDepths"
	508	[1190]	LOADK    	R21 := 480.000000
	509	[1190]	CALL     	R18 4 1 ; R18(R19,R20,R21)
	510	[1192]	GETUPVAL 	R18 U19 ; R18 := U19
	511	[1192]	OP_LOADBOOL	R19 1 0 ; R19 := true
	512	[1192]	CALL     	R18 2 1 ; R18(R19)
	513	[1194]	GETGLOBAL	R18 K36 ; R18 := _T
	514	[1194]	GETTABLE 	R18 R18 K124 ; R18 := R18["MAP_HideExtraUI"]
	515	[1194]	TEST     	R18 1 ; if R18 then PC := 521
	516	[1194]	JMP      	521 ; PC := 521
	517	[1195]	GETGLOBAL	R18 K36 ; R18 := _T
	518	[1195]	GETTABLE 	R18 R18 K125 ; R18 := R18[0x3b0face1]
	519	[1195]	OP_LOADBOOL	R19 1 0 ; R19 := true
	520	[1195]	CALL     	R18 2 1 ; R18(R19)
	521	[1198]	GETGLOBAL	R18 K126 ; R18 := 0x9ba7909f
	522	[1198]	SELF     	R18 R18 K127 ; R19 := R18; R18 := R18[0xbcfb64ab]
	523	[1198]	GETUPVAL 	R20 U3 ; R20 := U3
	524	[1198]	GETTABLE 	R20 R20 K128 ; R20 := R20[0xc472e470]
	525	[1198]	CALL     	R20 1 0 ; R20,... := R20()
	526	[1198]	CALL     	R18 0 2 ; R18 := R18(R19,...)
	527	[1199]	GETGLOBAL	R19 K32 ; R19 := 0x7b998233
	528	[1199]	MOVE     	R20 R18 ; R20 := R18
	529	[1199]	CALL     	R19 2 2 ; R19 := R19(R20)
	530	[1199]	TEST     	R19 1 ; if R19 then PC := 535
	531	[1199]	JMP      	535 ; PC := 535
	532	[1200]	SELF     	R19 R18 K129 ; R20 := R18; R19 := R18[0x2002e1dc]
	533	[1200]	OP_LOADBOOL	R21 1 0 ; R21 := true
	534	[1200]	CALL     	R19 3 1 ; R19(R20,R21)
	535	[1203]	GETGLOBAL	R19 K5 ; R19 := 0xae91e43b
	536	[1203]	SELF     	R19 R19 K119 ; R20 := R19; R19 := R19[0x767c0947]
	537	[1203]	OP_LOADBOOL	R21 1 0 ; R21 := true
	538	[1203]	CALL     	R19 3 1 ; R19(R20,R21)
	539	[1205]	GETGLOBAL	R19 K2 ; R19 := 0x89326c93
	540	[1205]	SELF     	R19 R19 K130 ; R20 := R19; R19 := R19[0x78298275]
	541	[1205]	CALL     	R19 2 2 ; R19 := R19(R20)
	542	[1206]	TEST     	R0 0 ; if not R0 then PC := 558
	543	[1206]	JMP      	558 ; PC := 558
	544	[1206]	GETGLOBAL	R20 K40 ; R20 := mRailJack
	545	[1206]	GETTABLE 	R20 R20 K41 ; R20 := R20["Active"]
	546	[1206]	TEST     	R20 1 ; if R20 then PC := 558
	547	[1206]	JMP      	558 ; PC := 558
	548	[1206]	GETGLOBAL	R20 K32 ; R20 := 0x7b998233
	549	[1206]	MOVE     	R21 R19 ; R21 := R19
	550	[1206]	CALL     	R20 2 2 ; R20 := R20(R21)
	551	[1206]	TEST     	R20 1 ; if R20 then PC := 558
	552	[1206]	JMP      	558 ; PC := 558
	553	[1207]	SELF     	R20 R19 K131 ; R21 := R19; R20 := R19[0xb2532845]
	554	[1207]	GETGLOBAL	R22 K132 ; R22 := 0x0469f296
	555	[1207]	LOADK    	R23 K133 ; R23 := "InstantKneel"
	556	[1207]	CALL     	R22 2 0 ; R22,... := R22(R23)
	557	[1207]	CALL     	R20 0 1 ; R20(R21,...)
	558	[1210]	GETUPVAL 	R20 U9 ; R20 := U9
	559	[1210]	SELF     	R20 R20 K134 ; R21 := R20; R20 := R20[0xbd2e96ea]
	560	[1210]	LOADK    	R22 K135 ; R22 := 0.300000
	561	[1213]	CLOSURE  	R23 1 ; R23 := closure(Function #2)
	562	[1210]	CALL     	R20 4 1 ; R20(R21,R22,R23)
	563	[1215]	GETUPVAL 	R20 U9 ; R20 := U9
	564	[1215]	SELF     	R20 R20 K134 ; R21 := R20; R20 := R20[0xbd2e96ea]
	565	[1215]	LOADK    	R22 K136 ; R22 := 0.600000
	566	[1220]	CLOSURE  	R23 2 ; R23 := closure(Function #3)
	567	[1215]	CALL     	R20 4 1 ; R20(R21,R22,R23)
	568	[1222]	GETGLOBAL	R20 K32 ; R20 := 0x7b998233
	569	[1222]	GETGLOBAL	R21 K137 ; R21 := 0xcb79539e
	570	[1222]	CALL     	R20 2 2 ; R20 := R20(R21)
	571	[1222]	TEST     	R20 1 ; if R20 then PC := 580
	572	[1222]	JMP      	580 ; PC := 580
	573	[1223]	GETGLOBAL	R20 K137 ; R20 := 0xcb79539e
	574	[1223]	SELF     	R20 R20 K138 ; R21 := R20; R20 := R20[0xa9136b2f]
	575	[1223]	GETGLOBAL	R22 K132 ; R22 := 0x0469f296
	576	[1223]	LOADK    	R23 K139 ; R23 := "IN_SHIP_VIEW_TIME"
	577	[1223]	CALL     	R22 2 2 ; R22 := R22(R23)
	578	[1223]	LOADK    	R23 K140 ; R23 := "STARCHART"
	579	[1223]	CALL     	R20 4 1 ; R20(R21,R22,R23)
	580	[1226]	GETUPVAL 	R20 U20 ; R20 := U20
	581	[1226]	OP_LOADBOOL	R21 0 0 ; R21 := false
	582	[1226]	CALL     	R20 2 1 ; R20(R21)
	583	[1227]	GETGLOBAL	R20 K36 ; R20 := _T
	584	[1227]	SETTABLE 	R20 K141 K38 ; R20["RadialMapInitialized"] := nil
	585	[1228]	GETGLOBAL	R20 K32 ; R20 := 0x7b998233
	586	[1228]	GETGLOBAL	R21 K142 ; R21 := 0xf5e16f12
	587	[1228]	CALL     	R20 2 2 ; R20 := R20(R21)
	588	[1228]	TEST     	R20 1 ; if R20 then PC := 603
	589	[1228]	JMP      	603 ; PC := 603
	590	[1229]	GETGLOBAL	R20 K126 ; R20 := 0x9ba7909f
	591	[1229]	SELF     	R20 R20 K127 ; R21 := R20; R20 := R20[0xbcfb64ab]
	592	[1229]	GETGLOBAL	R22 K142 ; R22 := 0xf5e16f12
	593	[1229]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	594	[1230]	GETGLOBAL	R21 K32 ; R21 := 0x7b998233
	595	[1230]	MOVE     	R22 R20 ; R22 := R20
	596	[1230]	CALL     	R21 2 2 ; R21 := R21(R22)
	597	[1230]	TEST     	R21 1 ; if R21 then PC := 603
	598	[1230]	JMP      	603 ; PC := 603
	599	[1231]	SELF     	R21 R20 K143 ; R22 := R20; R21 := R20[0xe4162eed]
	600	[1231]	LOADK    	R23 K144 ; R23 := "Close"
	601	[1231]	LOADK    	R24 K15 ; R24 := ""
	602	[1231]	CALL     	R21 4 1 ; R21(R22,R23,R24)
	603	[1234]	RETURN   	R0 1 ; return 

function #26 <?:1236,1240> (11 instructions, 44 bytes at 000002112A0EAAC0)
0 params, 7 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[1237]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[1237]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x1e5b5cfe]
	3	[1237]	LOADK    	R2 K2 ; R2 := "ClickBlocker"
	4	[1237]	LOADNIL  	R3 R4 ; R3 := R4 := nil
	5	[1237]	LOADK    	R5 K3 ; R5 := "ClickBlockerClicked"
	6	[1237]	LOADNIL  	R6 R6 ; R6 := nil
	7	[1237]	CALL     	R0 7 1 ; R0(R1,R2,R3,R4,R5,R6)
	8	[1239]	GETUPVAL 	R0 U0 ; R0 := U0
	9	[1239]	OP_LOADBOOL	R1 1 0 ; R1 := true
	10	[1239]	CALL     	R0 2 1 ; R0(R1)
	11	[1240]	RETURN   	R0 1 ; return 

function #27 <?:1242,1264> (57 instructions, 228 bytes at 000002112A0EAC20)
0 params, 7 slots, 1 upvalue, 0 locals, 13 constants, 0 functions
	1	[1244]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[1244]	GETTABLE 	R0 R0 K1 ; R0 := R0["gPendingMission"]
	3	[1244]	EQ       	0 R0 K2 ; if R0 ~= nil then PC := 7
	4	[1244]	JMP      	7 ; PC := 7
	5	[1245]	OP_LOADBOOL	R0 0 0 ; R0 := false
	6	[1245]	RETURN   	R0 2 ; return R0 
	7	[1248]	GETGLOBAL	R0 K0 ; R0 := _T
	8	[1248]	GETTABLE 	R0 R0 K1 ; R0 := R0["gPendingMission"]
	9	[1248]	GETTABLE 	R0 R0 K3 ; R0 := R0["quest"]
	10	[1248]	EQ       	1 R0 K2 ; if R0 == nil then PC := 19
	11	[1248]	JMP      	19 ; PC := 19
	12	[1248]	GETGLOBAL	R0 K0 ; R0 := _T
	13	[1248]	GETTABLE 	R0 R0 K1 ; R0 := R0["gPendingMission"]
	14	[1248]	GETTABLE 	R0 R0 K3 ; R0 := R0["quest"]
	15	[1248]	EQ       	1 R0 K4 ; if R0 == "" then PC := 19
	16	[1248]	JMP      	19 ; PC := 19
	17	[1249]	OP_LOADBOOL	R0 1 0 ; R0 := true
	18	[1249]	RETURN   	R0 2 ; return R0 
	19	[1252]	GETGLOBAL	R0 K5 ; R0 := 0x0032441c
	20	[1252]	GETTABLE 	R0 R0 K6 ; R0 := R0["QuestNodeNames"]
	21	[1252]	EQ       	1 R0 K2 ; if R0 == nil then PC := 55
	22	[1252]	JMP      	55 ; PC := 55
	23	[1253]	GETGLOBAL	R0 K7 ; R0 := 0x64fb1586
	24	[1253]	GETGLOBAL	R1 K0 ; R1 := _T
	25	[1253]	GETTABLE 	R1 R1 K1 ; R1 := R1["gPendingMission"]
	26	[1253]	GETTABLE 	R1 R1 K8 ; R1 := R1["name"]
	27	[1253]	CALL     	R0 2 2 ; R0 := R0(R1)
	28	[1254]	GETGLOBAL	R1 K9 ; R1 := 0x7f5022cf
	29	[1254]	GETTABLE 	R1 R1 K10 ; R1 := R1[0xa5c556b9]
	30	[1254]	MOVE     	R2 R0 ; R2 := R0
	31	[1254]	GETUPVAL 	R3 U0 ; R3 := U0
	32	[1254]	GETTABLE 	R3 R3 K11 ; R3 := R3["HUB_TAG"]
	33	[1254]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	34	[1254]	EQ       	1 R1 K2 ; if R1 == nil then PC := 55
	35	[1254]	JMP      	55 ; PC := 55
	36	[1255]	GETGLOBAL	R1 K7 ; R1 := 0x64fb1586
	37	[1255]	GETGLOBAL	R2 K0 ; R2 := _T
	38	[1255]	GETTABLE 	R2 R2 K1 ; R2 := R2["gPendingMission"]
	39	[1255]	GETTABLE 	R2 R2 K12 ; R2 := R2["baseNodeName"]
	40	[1255]	CALL     	R1 2 2 ; R1 := R1(R2)
	41	[1256]	LOADK    	R2 := 1.000000
	42	[1256]	GETGLOBAL	R3 K5 ; R3 := 0x0032441c
	43	[1256]	GETTABLE 	R3 R3 K6 ; R3 := R3["QuestNodeNames"]
	44	[1256]	LEN      	R3 R3 ; R3 := # R3
	45	[1256]	LOADK    	R4 := 1.000000
	46	[1256]	FORPREP  	R2 54 ; R2 -= R4; PC := 54
	47	[1257]	GETGLOBAL	R6 K5 ; R6 := 0x0032441c
	48	[1257]	GETTABLE 	R6 R6 K6 ; R6 := R6["QuestNodeNames"]
	49	[1257]	GETTABLE 	R6 R6 R5 ; R6 := R6[R5]
	50	[1257]	EQ       	0 R1 R6 ; if R1 ~= R6 then PC := 54
	51	[1257]	JMP      	54 ; PC := 54
	52	[1258]	OP_LOADBOOL	R6 1 0 ; R6 := true
	53	[1258]	RETURN   	R6 2 ; return R6 
	54	[1256]	FORLOOP  	R2 47 ; R2 += R4; if R2 <= R3 then begin PC := 47; R5 := R2 end
	55	[1263]	OP_LOADBOOL	R6 0 0 ; R6 := false
	56	[1263]	RETURN   	R6 2 ; return R6 
	57	[1264]	RETURN   	R0 1 ; return 

function #28 <?:1266,1329> (169 instructions, 676 bytes at 000002112A0EAF90)
1 param, 8 slots, 5 upvalues, 0 locals, 48 constants, 0 functions
	1	[1267]	GETGLOBAL	R1 K0 ; R1 := 0x34291f5c
	2	[1267]	GETTABLE 	R1 R1 K1 ; R1 := R1[0xe6b41adb]
	3	[1267]	CALL     	R1 1 2 ; R1 := R1()
	4	[1267]	TEST     	R1 0 ; if not R1 then PC := 12
	5	[1267]	JMP      	12 ; PC := 12
	6	[1268]	GETGLOBAL	R1 K2 ; R1 := 0x89326c93
	7	[1268]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xfb64e76c]
	8	[1268]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[1268]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x97c4ff93]
	10	[1268]	OP_LOADBOOL	R3 0 0 ; R3 := false
	11	[1268]	CALL     	R1 3 1 ; R1(R2,R3)
	12	[1270]	GETGLOBAL	R1 K5 ; R1 := _T
	13	[1270]	SETTABLE 	R1 K6 K7 ; R1["RadialSolarMap_OnAggregateResults"] := nil
	14	[1271]	GETGLOBAL	R1 K5 ; R1 := _T
	15	[1271]	SETTABLE 	R1 K8 K7 ; R1["InfoPopup_Data"] := nil
	16	[1272]	GETGLOBAL	R1 K5 ; R1 := _T
	17	[1272]	SETTABLE 	R1 K9 K7 ; R1["InfoPopup_Grid"] := nil
	18	[1273]	GETGLOBAL	R1 K5 ; R1 := _T
	19	[1273]	SETTABLE 	R1 K10 K7 ; R1["RadialMapInitialized"] := nil
	20	[1275]	GETGLOBAL	R1 K11 ; R1 := 0x7b998233
	21	[1275]	GETUPVAL 	R2 U0 ; R2 := U0
	22	[1275]	GETTABLE 	R2 R2 K12 ; R2 := R2["Movie"]
	23	[1275]	CALL     	R1 2 2 ; R1 := R1(R2)
	24	[1275]	TEST     	R1 1 ; if R1 then PC := 30
	25	[1275]	JMP      	30 ; PC := 30
	26	[1276]	GETUPVAL 	R1 U0 ; R1 := U0
	27	[1276]	GETTABLE 	R1 R1 K12 ; R1 := R1["Movie"]
	28	[1276]	SELF     	R1 R1 K13 ; R2 := R1; R1 := R1[0x32302b4a]
	29	[1276]	CALL     	R1 2 1 ; R1(R2)
	30	[1279]	GETGLOBAL	R1 K14 ; R1 := mCountDown
	31	[1279]	GETTABLE 	R1 R1 K15 ; R1 := R1["TransitioningOut"]
	32	[1279]	TEST     	R1 0 ; if not R1 then PC := 42
	33	[1279]	JMP      	42 ; PC := 42
	34	[1279]	GETUPVAL 	R1 U1 ; R1 := U1
	35	[1279]	CALL     	R1 1 2 ; R1 := R1()
	36	[1279]	TEST     	R1 1 ; if R1 then PC := 43
	37	[1279]	JMP      	43 ; PC := 43
	38	[1279]	GETGLOBAL	R1 K16 ; R1 := mRailJack
	39	[1279]	GETTABLE 	R1 R1 K17 ; R1 := R1["Active"]
	40	[1279]	JMP      	43 ; PC := 43
	41	[1279]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 42
	42	[1279]	OP_LOADBOOL	R1 1 0 ; R1 := true
	43	[1280]	TEST     	R0 1 ; if R0 then PC := 60
	44	[1280]	JMP      	60 ; PC := 60
	45	[1280]	TEST     	R1 0 ; if not R1 then PC := 60
	46	[1280]	JMP      	60 ; PC := 60
	47	[1281]	GETGLOBAL	R2 K11 ; R2 := 0x7b998233
	48	[1281]	GETGLOBAL	R3 K18 ; R3 := 0x0032441c
	49	[1281]	GETTABLE 	R3 R3 K19 ; R3 := R3["MapSoundInst"]
	50	[1281]	CALL     	R2 2 2 ; R2 := R2(R3)
	51	[1281]	TEST     	R2 1 ; if R2 then PC := 58
	52	[1281]	JMP      	58 ; PC := 58
	53	[1282]	GETGLOBAL	R2 K18 ; R2 := 0x0032441c
	54	[1282]	GETTABLE 	R2 R2 K19 ; R2 := R2["MapSoundInst"]
	55	[1282]	SELF     	R2 R2 K20 ; R3 := R2; R2 := R2[0x6cf1e476]
	56	[1282]	OP_LOADBOOL	R4 0 0 ; R4 := false
	57	[1282]	CALL     	R2 3 1 ; R2(R3,R4)
	58	[1284]	GETGLOBAL	R2 K18 ; R2 := 0x0032441c
	59	[1284]	SETTABLE 	R2 K19 K7 ; R2["MapSoundInst"] := nil
	60	[1287]	GETGLOBAL	R2 K11 ; R2 := 0x7b998233
	61	[1287]	GETUPVAL 	R3 U2 ; R3 := U2
	62	[1287]	GETTABLE 	R3 R3 K21 ; R3 := R3["EpisodeStatus"]
	63	[1287]	CALL     	R2 2 2 ; R2 := R2(R3)
	64	[1287]	TEST     	R2 1 ; if R2 then PC := 70
	65	[1287]	JMP      	70 ; PC := 70
	66	[1288]	GETUPVAL 	R2 U2 ; R2 := U2
	67	[1288]	GETTABLE 	R2 R2 K21 ; R2 := R2["EpisodeStatus"]
	68	[1288]	SELF     	R2 R2 K13 ; R3 := R2; R2 := R2[0x32302b4a]
	69	[1288]	CALL     	R2 2 1 ; R2(R3)
	70	[1291]	GETGLOBAL	R2 K11 ; R2 := 0x7b998233
	71	[1291]	GETUPVAL 	R3 U2 ; R3 := U2
	72	[1291]	GETTABLE 	R3 R3 K22 ; R3 := R3["ResourceDrone"]
	73	[1291]	CALL     	R2 2 2 ; R2 := R2(R3)
	74	[1291]	TEST     	R2 1 ; if R2 then PC := 80
	75	[1291]	JMP      	80 ; PC := 80
	76	[1292]	GETUPVAL 	R2 U2 ; R2 := U2
	77	[1292]	GETTABLE 	R2 R2 K22 ; R2 := R2["ResourceDrone"]
	78	[1292]	SELF     	R2 R2 K13 ; R3 := R2; R2 := R2[0x32302b4a]
	79	[1292]	CALL     	R2 2 1 ; R2(R3)
	80	[1295]	GETGLOBAL	R2 K11 ; R2 := 0x7b998233
	81	[1295]	GETUPVAL 	R3 U2 ; R3 := U2
	82	[1295]	GETTABLE 	R3 R3 K23 ; R3 := R3["JunctionTasks"]
	83	[1295]	CALL     	R2 2 2 ; R2 := R2(R3)
	84	[1295]	TEST     	R2 1 ; if R2 then PC := 90
	85	[1295]	JMP      	90 ; PC := 90
	86	[1296]	GETUPVAL 	R2 U2 ; R2 := U2
	87	[1296]	GETTABLE 	R2 R2 K23 ; R2 := R2["JunctionTasks"]
	88	[1296]	SELF     	R2 R2 K13 ; R3 := R2; R2 := R2[0x32302b4a]
	89	[1296]	CALL     	R2 2 1 ; R2(R3)
	90	[1299]	GETGLOBAL	R2 K11 ; R2 := 0x7b998233
	91	[1299]	GETGLOBAL	R3 K24 ; R3 := mWagerMission
	92	[1299]	GETTABLE 	R3 R3 K25 ; R3 := R3["MovieInst"]
	93	[1299]	CALL     	R2 2 2 ; R2 := R2(R3)
	94	[1299]	TEST     	R2 1 ; if R2 then PC := 100
	95	[1299]	JMP      	100 ; PC := 100
	96	[1300]	GETGLOBAL	R2 K24 ; R2 := mWagerMission
	97	[1300]	GETTABLE 	R2 R2 K25 ; R2 := R2["MovieInst"]
	98	[1300]	SELF     	R2 R2 K13 ; R3 := R2; R2 := R2[0x32302b4a]
	99	[1300]	CALL     	R2 2 1 ; R2(R3)
	100	[1303]	GETGLOBAL	R2 K26 ; R2 := 0x9ba7909f
	101	[1303]	SELF     	R2 R2 K27 ; R3 := R2; R2 := R2[0xbcfb64ab]
	102	[1303]	GETUPVAL 	R4 U3 ; R4 := U3
	103	[1303]	GETTABLE 	R4 R4 K28 ; R4 := R4[0xc472e470]
	104	[1303]	CALL     	R4 1 0 ; R4,... := R4()
	105	[1303]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	106	[1304]	GETGLOBAL	R3 K11 ; R3 := 0x7b998233
	107	[1304]	MOVE     	R4 R2 ; R4 := R2
	108	[1304]	CALL     	R3 2 2 ; R3 := R3(R4)
	109	[1304]	TEST     	R3 1 ; if R3 then PC := 114
	110	[1304]	JMP      	114 ; PC := 114
	111	[1305]	SELF     	R3 R2 K29 ; R4 := R2; R3 := R2[0x2002e1dc]
	112	[1305]	OP_LOADBOOL	R5 0 0 ; R5 := false
	113	[1305]	CALL     	R3 3 1 ; R3(R4,R5)
	114	[1308]	GETGLOBAL	R3 K5 ; R3 := _T
	115	[1308]	SETTABLE 	R3 K30 K31 ; R3["RadialSolarMapOpen"] := false
	116	[1309]	GETUPVAL 	R3 U4 ; R3 := U4
	117	[1309]	GETTABLE 	R3 R3 K32 ; R3 := R3[0x9e3d3434]
	118	[1309]	OP_LOADBOOL	R4 0 0 ; R4 := false
	119	[1309]	CALL     	R3 2 1 ; R3(R4)
	120	[1311]	GETGLOBAL	R3 K11 ; R3 := 0x7b998233
	121	[1311]	GETGLOBAL	R4 K33 ; R4 := 0xcb79539e
	122	[1311]	CALL     	R3 2 2 ; R3 := R3(R4)
	123	[1311]	TEST     	R3 1 ; if R3 then PC := 132
	124	[1311]	JMP      	132 ; PC := 132
	125	[1312]	GETGLOBAL	R3 K33 ; R3 := 0xcb79539e
	126	[1312]	SELF     	R3 R3 K34 ; R4 := R3; R3 := R3[0xa9188a47]
	127	[1312]	GETGLOBAL	R5 K35 ; R5 := 0x0469f296
	128	[1312]	LOADK    	R6 K36 ; R6 := "IN_SHIP_VIEW_TIME"
	129	[1312]	CALL     	R5 2 2 ; R5 := R5(R6)
	130	[1312]	LOADK    	R6 K37 ; R6 := "STARCHART"
	131	[1312]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	132	[1315]	GETGLOBAL	R3 K38 ; R3 := 0x76ea806b
	133	[1315]	SELF     	R3 R3 K39 ; R4 := R3; R3 := R3[0x3f3ae64c]
	134	[1315]	LOADK    	R5 := 0.000000
	135	[1315]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	136	[1316]	GETGLOBAL	R4 K11 ; R4 := 0x7b998233
	137	[1316]	MOVE     	R5 R3 ; R5 := R3
	138	[1316]	CALL     	R4 2 2 ; R4 := R4(R5)
	139	[1316]	TEST     	R4 1 ; if R4 then PC := 148
	140	[1316]	JMP      	148 ; PC := 148
	141	[1317]	SELF     	R4 R3 K40 ; R5 := R3; R4 := R3[0x40e9c32b]
	142	[1317]	CALL     	R4 2 2 ; R4 := R4(R5)
	143	[1318]	SELF     	R5 R4 K41 ; R6 := R4; R5 := R4[0x1c469902]
	144	[1318]	GETGLOBAL	R7 K5 ; R7 := _T
	145	[1318]	GETTABLE 	R7 R7 K42 ; R7 := R7["ResourceDroneVisible"]
	146	[1318]	NOT      	R7 R7 ; R7 := not R7
	147	[1318]	CALL     	R5 3 1 ; R5(R6,R7)
	148	[1321]	TEST     	R0 1 ; if R0 then PC := 163
	149	[1321]	JMP      	163 ; PC := 163
	150	[1321]	GETGLOBAL	R5 K11 ; R5 := 0x7b998233
	151	[1321]	GETGLOBAL	R6 K5 ; R6 := _T
	152	[1321]	GETTABLE 	R6 R6 K43 ; R6 := R6["mTrigger"]
	153	[1321]	CALL     	R5 2 2 ; R5 := R5(R6)
	154	[1321]	TEST     	R5 1 ; if R5 then PC := 163
	155	[1321]	JMP      	163 ; PC := 163
	156	[1322]	GETGLOBAL	R5 K5 ; R5 := _T
	157	[1322]	GETTABLE 	R5 R5 K43 ; R5 := R5["mTrigger"]
	158	[1322]	SELF     	R5 R5 K44 ; R6 := R5; R5 := R5[0x8eb2112d]
	159	[1322]	LOADK    	R7 K45 ; R7 := "Close"
	160	[1322]	CALL     	R5 3 1 ; R5(R6,R7)
	161	[1323]	GETGLOBAL	R5 K5 ; R5 := _T
	162	[1323]	SETTABLE 	R5 K43 K7 ; R5["mTrigger"] := nil
	163	[1326]	GETGLOBAL	R5 K5 ; R5 := _T
	164	[1326]	SETTABLE 	R5 K46 K31 ; R5["InStarChart"] := false
	165	[1327]	GETGLOBAL	R5 K5 ; R5 := _T
	166	[1327]	SETTABLE 	R5 K47 K7 ; R5["InRailJackMode"] := nil
	167	[1328]	GETGLOBAL	R5 K5 ; R5 := _T
	168	[1328]	SETTABLE 	R5 K42 K7 ; R5["ResourceDroneVisible"] := nil
	169	[1329]	RETURN   	R0 1 ; return 

function #29 <?:1333,1339> (13 instructions, 52 bytes at 000002112A0EB8F0)
0 params, 3 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[1334]	GETGLOBAL	R0 K0 ; R0 := 0x89326c93
	2	[1334]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x78298275]
	3	[1334]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[1335]	GETUPVAL 	R1 U0 ; R1 := U0
	5	[1335]	MOVE     	R2 R0 ; R2 := R0
	6	[1335]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[1335]	TEST     	R1 0 ; if not R1 then PC := 11
	8	[1335]	JMP      	11 ; PC := 11
	9	[1336]	LOADK    	R1 := 1.000000
	10	[1336]	RETURN   	R1 2 ; return R1 
	11	[1338]	LOADK    	R1 := 2.000000
	12	[1338]	RETURN   	R1 2 ; return R1 
	13	[1339]	RETURN   	R0 1 ; return 

function #30 <?:1341,1372> (77 instructions, 308 bytes at 000002112A0EBA50)
0 params, 9 slots, 6 upvalues, 0 locals, 20 constants, 1 function
	1	[1342]	GETGLOBAL	R0 K0 ; R0 := mInputBlocked
	2	[1342]	TEST     	R0 0 ; if not R0 then PC := 5
	3	[1342]	JMP      	5 ; PC := 5
	4	[1343]	RETURN   	R0 1 ; return 
	5	[1347]	GETGLOBAL	R0 K1 ; R0 := mRailJack
	6	[1347]	GETTABLE 	R0 R0 K2 ; R0 := R0["Active"]
	7	[1347]	TEST     	R0 0 ; if not R0 then PC := 21
	8	[1347]	JMP      	21 ; PC := 21
	9	[1347]	GETUPVAL 	R0 U0 ; R0 := U0
	10	[1347]	GETTABLE 	R0 R0 K3 ; R0 := R0[0xb73d420f]
	11	[1347]	CALL     	R0 1 2 ; R0 := R0()
	12	[1347]	GETUPVAL 	R1 U0 ; R1 := U0
	13	[1347]	GETTABLE 	R1 R1 K4 ; R1 := R1["UI_MODE_IN_SPACE_SHIP"]
	14	[1347]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 20
	15	[1347]	JMP      	20 ; PC := 20
	16	[1347]	GETUPVAL 	R0 U1 ; R0 := U1
	17	[1347]	CALL     	R0 1 2 ; R0 := R0()
	18	[1347]	EQ       	0 R0 K5 ; if R0 ~= 1.000000 then PC := 21
	19	[1347]	JMP      	21 ; PC := 21
	20	[1348]	RETURN   	R0 1 ; return 
	21	[1351]	OP_LOADBOOL	R0 1 0 ; R0 := true
	22	[1351]	SETGLOBALHASH	R0 K0 ; mInputBlocked := R0
	23	[1352]	GETGLOBAL	R0 K1 ; R0 := mRailJack
	24	[1352]	GETGLOBAL	R1 K1 ; R1 := mRailJack
	25	[1352]	GETTABLE 	R1 R1 K2 ; R1 := R1["Active"]
	26	[1352]	NOT      	R1 R1 ; R1 := not R1
	27	[1352]	SETTABLE 	R0 K2 R1 ; R0["Active"] := R1
	28	[1353]	GETGLOBAL	R0 K1 ; R0 := mRailJack
	29	[1353]	SETTABLE 	R0 K6 K7 ; R0["NameNodeMapRebuildQueued"] := true
	30	[1354]	GETGLOBAL	R0 K1 ; R0 := mRailJack
	31	[1354]	SETTABLE 	R0 K8 K7 ; R0["Transitioned"] := true
	32	[1355]	GETUPVAL 	R0 U2 ; R0 := U2
	33	[1355]	OP_LOADBOOL	R1 1 0 ; R1 := true
	34	[1355]	LOADNIL  	R2 R2 ; R2 := nil
	35	[1355]	OP_LOADBOOL	R3 1 0 ; R3 := true
	36	[1355]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	37	[1358]	GETUPVAL 	R0 U3 ; R0 := U3
	38	[1358]	OP_LOADBOOL	R1 1 0 ; R1 := true
	39	[1358]	CALL     	R0 2 1 ; R0(R1)
	40	[1359]	GETUPVAL 	R0 U4 ; R0 := U4
	41	[1359]	GETTABLE 	R0 R0 K9 ; R0 := R0[0x4c232afc]
	42	[1359]	GETGLOBAL	R1 K10 ; R1 := 0xae91e43b
	43	[1359]	LOADK    	R2 := 1.000000
	44	[1359]	LOADK    	R3 K11 ; R3 := 0.200000
	45	[1359]	LOADK    	R4 := 0.000000
	46	[1359]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	47	[1361]	GETGLOBAL	R0 K12 ; R0 := 0xcbd666e1
	48	[1361]	LOADK    	R1 := 0.000000
	49	[1361]	CALL     	R0 2 1 ; R0(R1)
	50	[1362]	GETGLOBAL	R0 K1 ; R0 := mRailJack
	51	[1362]	GETTABLE 	R0 R0 K2 ; R0 := R0["Active"]
	52	[1362]	TEST     	R0 0 ; if not R0 then PC := 59
	53	[1362]	JMP      	59 ; PC := 59
	54	[1363]	GETGLOBAL	R0 K13 ; R0 := _T
	55	[1363]	GETUPVAL 	R1 U1 ; R1 := U1
	56	[1363]	CALL     	R1 1 2 ; R1 := R1()
	57	[1363]	SETTABLE 	R0 K14 R1 ; R0["InRailJackMode"] := R1
	58	[1363]	JMP      	61 ; PC := 61
	59	[1365]	GETGLOBAL	R0 K13 ; R0 := _T
	60	[1365]	SETTABLE 	R0 K14 K15 ; R0["InRailJackMode"] := nil
	61	[1367]	GETUPVAL 	R0 U5 ; R0 := U5
	62	[1367]	CALL     	R0 1 1 ; R0()
	63	[1368]	GETGLOBAL	R0 K16 ; R0 := 0x25312c9b
	64	[1368]	GETGLOBAL	R1 K10 ; R1 := 0xae91e43b
	65	[1368]	LOADK    	R2 K17 ; R2 := "_root"
	66	[1368]	LOADK    	R3 := 0.000000
	67	[1368]	NEWTABLE 	R4 1 0 ; R4 := {}
	68	[1368]	LOADK    	R5 := 10.000000
	69	[1368]	SETLIST  	R4 1 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
	70	[1368]	NEWTABLE 	R5 1 0 ; R5 := {}
	71	[1368]	LOADK    	R6 := 100.000000
	72	[1368]	SETLIST  	R5 1 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
	73	[1368]	LOADK    	R6 K19 ; R6 := 0.300000
	74	[1368]	LOADK    	R7 := 0.000000
	75	[1371]	CLOSURE  	R8 0 ; R8 := closure(Function #1)
	76	[1368]	CALL     	R0 9 1 ; R0(R1,R2,R3,R4,R5,R6,R7,R8)
	77	[1372]	RETURN   	R0 1 ; return 

function #31 <?:1374,1376> (3 instructions, 12 bytes at 000002112A0EC020)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1375]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1375]	CALL     	R0 1 1 ; R0()
	3	[1376]	RETURN   	R0 1 ; return 

function #32 <?:1378,1384> (18 instructions, 72 bytes at 000002113766FB10)
0 params, 4 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[1379]	GETGLOBAL	R0 K0 ; R0 := mZoomedRegion
	2	[1379]	TEST     	R0 0 ; if not R0 then PC := 12
	3	[1379]	JMP      	12 ; PC := 12
	4	[1380]	GETGLOBAL	R0 K1 ; R0 := _T
	5	[1380]	GETTABLE 	R0 R0 K2 ; R0 := R0["SquadOverlay"]
	6	[1380]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0xe4162eed]
	7	[1380]	LOADK    	R2 K4 ; R2 := "FindAnyRailjackMission"
	8	[1380]	GETGLOBAL	R3 K0 ; R3 := mZoomedRegion
	9	[1380]	GETTABLE 	R3 R3 K5 ; R3 := R3["name"]
	10	[1380]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	11	[1380]	JMP      	18 ; PC := 18
	12	[1382]	GETGLOBAL	R0 K1 ; R0 := _T
	13	[1382]	GETTABLE 	R0 R0 K2 ; R0 := R0["SquadOverlay"]
	14	[1382]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0xe4162eed]
	15	[1382]	LOADK    	R2 K4 ; R2 := "FindAnyRailjackMission"
	16	[1382]	LOADK    	R3 K6 ; R3 := ""
	17	[1382]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	18	[1384]	RETURN   	R0 1 ; return 

function #33 <?:1386,1388> (3 instructions, 12 bytes at 000002113766FCE0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1387]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1387]	CALL     	R0 1 1 ; R0()
	3	[1388]	RETURN   	R0 1 ; return 

function #34 <?:1390,1459> (180 instructions, 720 bytes at 000002113766FDB0)
0 params, 9 slots, 10 upvalues, 0 locals, 49 constants, 1 function
	1	[1391]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[1391]	GETTABLE 	R0 R0 K1 ; R0 := R0["WareframeChallenge"]
	3	[1391]	TEST     	R0 0 ; if not R0 then PC := 6
	4	[1391]	JMP      	6 ; PC := 6
	5	[1392]	RETURN   	R0 1 ; return 
	6	[1395]	NEWTABLE 	R0 0 0 ; R0 := {}
	7	[1397]	GETGLOBAL	R1 K2 ; R1 := 0x34291f5c
	8	[1397]	GETTABLE 	R1 R1 K3 ; R1 := R1[0x781669d7]
	9	[1397]	CALL     	R1 1 2 ; R1 := R1()
	10	[1397]	TEST     	R1 0 ; if not R1 then PC := 24
	11	[1397]	JMP      	24 ; PC := 24
	12	[1397]	GETUPVAL 	R1 U0 ; R1 := U0
	13	[1397]	GETTABLE 	R1 R1 K4 ; R1 := R1["mNodeVisible"]
	14	[1397]	TEST     	R1 0 ; if not R1 then PC := 24
	15	[1397]	JMP      	24 ; PC := 24
	16	[1398]	GETGLOBAL	R1 K5 ; R1 := 0x33bdd652
	17	[1398]	GETTABLE 	R1 R1 K6 ; R1 := R1[0x23d5322f]
	18	[1398]	MOVE     	R2 R0 ; R2 := R0
	19	[1398]	NEWTABLE 	R3 0 2 ; R3 := {}
	20	[1398]	SETTABLE 	R3 K7 K8 ; R3["Label"] := "/Lotus/Language/Menu/MainMenu_Continue"
	21	[1401]	CLOSURE  	R4 0 ; R4 := closure(Function #1)
	22	[1401]	SETTABLE 	R3 K9 R4 ; R3["CallBack"] := R4
	23	[1398]	CALL     	R1 3 1 ; R1(R2,R3)
	24	[1405]	GETGLOBAL	R1 K10 ; R1 := mNewWarMode
	25	[1405]	TEST     	R1 1 ; if R1 then PC := 59
	26	[1405]	JMP      	59 ; PC := 59
	27	[1405]	GETGLOBAL	R1 K11 ; R1 := 0x7b998233
	28	[1405]	GETUPVAL 	R2 U1 ; R2 := U1
	29	[1405]	GETTABLE 	R2 R2 K12 ; R2 := R2["EpisodeStatus"]
	30	[1405]	CALL     	R1 2 2 ; R1 := R1(R2)
	31	[1405]	TEST     	R1 1 ; if R1 then PC := 59
	32	[1405]	JMP      	59 ; PC := 59
	33	[1405]	GETGLOBAL	R1 K13 ; R1 := mRailJack
	34	[1405]	GETTABLE 	R1 R1 K14 ; R1 := R1["Active"]
	35	[1405]	TEST     	R1 1 ; if R1 then PC := 59
	36	[1405]	JMP      	59 ; PC := 59
	37	[1406]	LOADK    	R1 K15 ; R1 := "/Lotus/Language/Menu/EpisodeStatus"
	38	[1407]	GETGLOBAL	R2 K0 ; R2 := _T
	39	[1407]	GETTABLE 	R2 R2 K16 ; R2 := R2["ResourceDroneVisible"]
	40	[1407]	TEST     	R2 1 ; if R2 then PC := 44
	41	[1407]	JMP      	44 ; PC := 44
	42	[1408]	LOADK    	R1 K17 ; R1 := "/Lotus/Language/Menu/ResourceDrones"
	43	[1408]	JMP      	50 ; PC := 50
	44	[1409]	GETUPVAL 	R2 U2 ; R2 := U2
	45	[1409]	GETTABLE 	R2 R2 K18 ; R2 := R2[0x89e663e9]
	46	[1409]	CALL     	R2 1 2 ; R2 := R2()
	47	[1409]	TEST     	R2 1 ; if R2 then PC := 50
	48	[1409]	JMP      	50 ; PC := 50
	49	[1410]	LOADK    	R1 K19 ; R1 := "/Lotus/Language/Menu/NemesisStatus"
	50	[1412]	GETGLOBAL	R2 K5 ; R2 := 0x33bdd652
	51	[1412]	GETTABLE 	R2 R2 K6 ; R2 := R2[0x23d5322f]
	52	[1412]	MOVE     	R3 R0 ; R3 := R0
	53	[1412]	NEWTABLE 	R4 0 3 ; R4 := {}
	54	[1412]	SETTABLE 	R4 K7 R1 ; R4["Label"] := R1
	55	[1412]	GETUPVAL 	R5 U3 ; R5 := U3
	56	[1412]	SETTABLE 	R4 K9 R5 ; R4["CallBack"] := R5
	57	[1412]	SETTABLE 	R4 K20 K21 ; R4["CallOut"] := "MENU_LTHUMB"
	58	[1412]	CALL     	R2 3 1 ; R2(R3,R4)
	59	[1417]	GETUPVAL 	R2 U4 ; R2 := U4
	60	[1417]	GETTABLE 	R2 R2 K22 ; R2 := R2["DioOpen"]
	61	[1417]	TEST     	R2 1 ; if R2 then PC := 135
	62	[1417]	JMP      	135 ; PC := 135
	63	[1417]	GETGLOBAL	R2 K23 ; R2 := mInvitePopupShowing
	64	[1417]	TEST     	R2 1 ; if R2 then PC := 135
	65	[1417]	JMP      	135 ; PC := 135
	66	[1418]	GETGLOBAL	R2 K11 ; R2 := 0x7b998233
	67	[1418]	GETUPVAL 	R3 U5 ; R3 := U5
	68	[1418]	GETTABLE 	R3 R3 K24 ; R3 := R3[0xa9882367]
	69	[1418]	LOADK    	R4 K25 ; R4 := "SwitchLoadout"
	70	[1418]	CALL     	R3 2 0 ; R3,... := R3(R4)
	71	[1418]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	72	[1418]	NOT      	R2 R2 ; R2 := not R2
	73	[1419]	TEST     	R2 0 ; if not R2 then PC := 93
	74	[1419]	JMP      	93 ; PC := 93
	75	[1419]	GETGLOBAL	R3 K2 ; R3 := 0x34291f5c
	76	[1419]	GETTABLE 	R3 R3 K26 ; R3 := R3[0x1467d5f4]
	77	[1419]	CALL     	R3 1 2 ; R3 := R3()
	78	[1419]	TEST     	R3 0 ; if not R3 then PC := 93
	79	[1419]	JMP      	93 ; PC := 93
	80	[1419]	GETGLOBAL	R3 K11 ; R3 := 0x7b998233
	81	[1419]	GETGLOBAL	R4 K0 ; R4 := _T
	82	[1419]	GETTABLE 	R4 R4 K27 ; R4 := R4["SquadOverlay"]
	83	[1419]	CALL     	R3 2 2 ; R3 := R3(R4)
	84	[1419]	TEST     	R3 1 ; if R3 then PC := 93
	85	[1419]	JMP      	93 ; PC := 93
	86	[1420]	GETGLOBAL	R3 K0 ; R3 := _T
	87	[1420]	GETTABLE 	R3 R3 K27 ; R3 := R3["SquadOverlay"]
	88	[1420]	SELF     	R3 R3 K28 ; R4 := R3; R3 := R3[0xe4162eed]
	89	[1420]	LOADK    	R5 K29 ; R5 := "IsAcceptBtnVisible"
	90	[1420]	LOADK    	R6 K30 ; R6 := ""
	91	[1420]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	92	[1420]	NOT      	R2 R3 ; R2 := not R3
	93	[1423]	TEST     	R2 0 ; if not R2 then PC := 107
	94	[1423]	JMP      	107 ; PC := 107
	95	[1423]	GETGLOBAL	R3 K10 ; R3 := mNewWarMode
	96	[1423]	TEST     	R3 1 ; if R3 then PC := 107
	97	[1423]	JMP      	107 ; PC := 107
	98	[1424]	GETGLOBAL	R3 K5 ; R3 := 0x33bdd652
	99	[1424]	GETTABLE 	R3 R3 K6 ; R3 := R3[0x23d5322f]
	100	[1424]	MOVE     	R4 R0 ; R4 := R0
	101	[1424]	NEWTABLE 	R5 0 3 ; R5 := {}
	102	[1424]	SETTABLE 	R5 K7 K31 ; R5["Label"] := "/Lotus/Language/Menu/Loadout_Change"
	103	[1424]	GETUPVAL 	R6 U6 ; R6 := U6
	104	[1424]	SETTABLE 	R5 K9 R6 ; R5["CallBack"] := R6
	105	[1424]	SETTABLE 	R5 K20 K32 ; R5["CallOut"] := "MENU_GENERIC1"
	106	[1424]	CALL     	R3 3 1 ; R3(R4,R5)
	107	[1427]	GETGLOBAL	R3 K2 ; R3 := 0x34291f5c
	108	[1427]	GETTABLE 	R3 R3 K26 ; R3 := R3[0x1467d5f4]
	109	[1427]	CALL     	R3 1 2 ; R3 := R3()
	110	[1427]	TEST     	R3 0 ; if not R3 then PC := 135
	111	[1427]	JMP      	135 ; PC := 135
	112	[1427]	GETGLOBAL	R3 K11 ; R3 := 0x7b998233
	113	[1427]	GETGLOBAL	R4 K0 ; R4 := _T
	114	[1427]	GETTABLE 	R4 R4 K27 ; R4 := R4["SquadOverlay"]
	115	[1427]	CALL     	R3 2 2 ; R3 := R3(R4)
	116	[1427]	TEST     	R3 1 ; if R3 then PC := 135
	117	[1427]	JMP      	135 ; PC := 135
	118	[1427]	GETGLOBAL	R3 K0 ; R3 := _T
	119	[1427]	GETTABLE 	R3 R3 K27 ; R3 := R3["SquadOverlay"]
	120	[1427]	SELF     	R3 R3 K28 ; R4 := R3; R3 := R3[0xe4162eed]
	121	[1427]	LOADK    	R5 K33 ; R5 := "CanInvite"
	122	[1427]	LOADK    	R6 K30 ; R6 := ""
	123	[1427]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	124	[1427]	TEST     	R3 0 ; if not R3 then PC := 135
	125	[1427]	JMP      	135 ; PC := 135
	126	[1428]	GETGLOBAL	R3 K5 ; R3 := 0x33bdd652
	127	[1428]	GETTABLE 	R3 R3 K6 ; R3 := R3[0x23d5322f]
	128	[1428]	MOVE     	R4 R0 ; R4 := R0
	129	[1428]	NEWTABLE 	R5 0 3 ; R5 := {}
	130	[1428]	SETTABLE 	R5 K7 K34 ; R5["Label"] := "/Lotus/Language/Menu/SocialOverlay_Invite"
	131	[1428]	GETUPVAL 	R6 U7 ; R6 := U7
	132	[1428]	SETTABLE 	R5 K9 R6 ; R5["CallBack"] := R6
	133	[1428]	SETTABLE 	R5 K20 K35 ; R5["CallOut"] := "MENU_RTRIGGER1"
	134	[1428]	CALL     	R3 3 1 ; R3(R4,R5)
	135	[1432]	LOADK    	R3 K30 ; R3 := ""
	136	[1433]	GETUPVAL 	R4 U4 ; R4 := U4
	137	[1433]	GETTABLE 	R4 R4 K22 ; R4 := R4["DioOpen"]
	138	[1433]	TEST     	R4 0 ; if not R4 then PC := 142
	139	[1433]	JMP      	142 ; PC := 142
	140	[1434]	LOADK    	R3 K36 ; R3 := "/Lotus/Language/Menu/Global_Back"
	141	[1434]	JMP      	156 ; PC := 156
	142	[1436]	GETUPVAL 	R4 U5 ; R4 := U5
	143	[1436]	GETTABLE 	R4 R4 K37 ; R4 := R4[0x06d055f9]
	144	[1436]	GETGLOBAL	R5 K38 ; R5 := mSmoothZoom
	145	[1436]	GETTABLE 	R5 R5 K39 ; R5 := R5["mTargetVal"]
	146	[1436]	GETGLOBAL	R6 K40 ; R6 := Zoom
	147	[1436]	GETTABLE 	R6 R6 K41 ; R6 := R6["STARTING_ZOOM"]
	148	[1436]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 151
	149	[1436]	JMP      	151 ; PC := 151
	150	[1436]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 151
	151	[1436]	OP_LOADBOOL	R5 1 0 ; R5 := true
	152	[1436]	LOADK    	R6 K42 ; R6 := "/Lotus/Language/Menu/Lobby_ZoomOut"
	153	[1436]	LOADK    	R7 K43 ; R7 := "/Lotus/Language/Menu/Exit"
	154	[1436]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	155	[1436]	MOVE     	R3 R4 ; R3 := R4
	156	[1439]	GETGLOBAL	R4 K5 ; R4 := 0x33bdd652
	157	[1439]	GETTABLE 	R4 R4 K6 ; R4 := R4[0x23d5322f]
	158	[1439]	MOVE     	R5 R0 ; R5 := R0
	159	[1439]	NEWTABLE 	R6 0 3 ; R6 := {}
	160	[1439]	SETTABLE 	R6 K7 R3 ; R6["Label"] := R3
	161	[1439]	GETUPVAL 	R7 U8 ; R7 := U8
	162	[1439]	SETTABLE 	R6 K9 R7 ; R6["CallBack"] := R7
	163	[1439]	SETTABLE 	R6 K20 K44 ; R6["CallOut"] := "MENU_CANCEL"
	164	[1439]	CALL     	R4 3 1 ; R4(R5,R6)
	165	[1446]	GETUPVAL 	R4 U9 ; R4 := U9
	166	[1446]	TEST     	R4 0 ; if not R4 then PC := 168
	167	[1446]	JMP      	168 ; PC := 168
	168	[1456]	GETGLOBAL	R4 K0 ; R4 := _T
	169	[1456]	GETTABLE 	R4 R4 K45 ; R4 := R4["SetButtons"]
	170	[1456]	TEST     	R4 0 ; if not R4 then PC := 180
	171	[1456]	JMP      	180 ; PC := 180
	172	[1457]	GETGLOBAL	R4 K0 ; R4 := _T
	173	[1457]	GETTABLE 	R4 R4 K46 ; R4 := R4[0x1c5b546f]
	174	[1457]	GETGLOBAL	R5 K47 ; R5 := 0xae91e43b
	175	[1457]	MOVE     	R6 R0 ; R6 := R0
	176	[1457]	GETGLOBAL	R7 K48 ; R7 := 0xcd0165a3
	177	[1457]	LOADK    	R8 := 1.000000
	178	[1457]	CALL     	R7 2 0 ; R7,... := R7(R8)
	179	[1457]	CALL     	R4 0 1 ; R4(R5,...)
	180	[1459]	RETURN   	R0 1 ; return 

function #35 <?:1461,1463> (3 instructions, 12 bytes at 0000021137670AC0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1462]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1462]	CALL     	R0 1 1 ; R0()
	3	[1463]	RETURN   	R0 1 ; return 

function #36 <?:1465,1468> (8 instructions, 32 bytes at 0000021137670B90)
0 params, 2 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[1466]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[1466]	GETGLOBAL	R1 K0 ; R1 := _T
	3	[1466]	GETTABLE 	R1 R1 K1 ; R1 := R1["ResourceDroneVisible"]
	4	[1466]	NOT      	R1 R1 ; R1 := not R1
	5	[1466]	SETTABLE 	R0 K1 R1 ; R0["ResourceDroneVisible"] := R1
	6	[1467]	GETUPVAL 	R0 U0 ; R0 := U0
	7	[1467]	CALL     	R0 1 1 ; R0()
	8	[1468]	RETURN   	R0 1 ; return 

function #37 <?:1470,1486> (42 instructions, 168 bytes at 0000021137670CB0)
5 params, 11 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[1471]	MOVE     	R5 R1 ; R5 := R1
	2	[1471]	MOVE     	R6 R2 ; R6 := R2
	3	[1471]	CONCAT   	R5 R5 R6 ; R5 := R5 .. R6
	4	[1472]	GETGLOBAL	R6 K0 ; R6 := 0xae91e43b
	5	[1472]	SELF     	R6 R6 K1 ; R7 := R6; R6 := R6[0xa7ec3e8a]
	6	[1472]	MOVE     	R8 R5 ; R8 := R5
	7	[1472]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	8	[1472]	TEST     	R6 1 ; if R6 then PC := 29
	9	[1472]	JMP      	29 ; PC := 29
	10	[1473]	TEST     	R4 0 ; if not R4 then PC := 21
	11	[1473]	JMP      	21 ; PC := 21
	12	[1474]	GETGLOBAL	R6 K2 ; R6 := 0x38f10e85
	13	[1474]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	14	[1474]	MOVE     	R8 R0 ; R8 := R0
	15	[1474]	LOADK    	R9 K3 ; R9 := ".createEmptyMovieClip"
	16	[1474]	CONCAT   	R8 R8 R9 ; R8 := R8 .. R9
	17	[1474]	MOVE     	R9 R5 ; R9 := R5
	18	[1474]	ADD      	R10 R2 R3 ; R10 := R2 + R3
	19	[1474]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	20	[1474]	JMP      	29 ; PC := 29
	21	[1476]	GETGLOBAL	R6 K2 ; R6 := 0x38f10e85
	22	[1476]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	23	[1476]	MOVE     	R8 R0 ; R8 := R0
	24	[1476]	LOADK    	R9 K4 ; R9 := ".duplicateMovieClip"
	25	[1476]	CONCAT   	R8 R8 R9 ; R8 := R8 .. R9
	26	[1476]	MOVE     	R9 R5 ; R9 := R5
	27	[1476]	ADD      	R10 R2 R3 ; R10 := R2 + R3
	28	[1476]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	29	[1479]	GETGLOBAL	R6 K5 ; R6 := 0x7f5022cf
	30	[1479]	GETTABLE 	R6 R6 K6 ; R6 := R6[0x348c01f7]
	31	[1479]	MOVE     	R7 R0 ; R7 := R0
	32	[1479]	LOADK    	R8 K7 ; R8 := "(.*%.).+$"
	33	[1479]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	34	[1480]	EQ       	0 R6 K8 ; if R6 ~= nil then PC := 38
	35	[1480]	JMP      	38 ; PC := 38
	36	[1481]	MOVE     	R6 R5 ; R6 := R5
	37	[1481]	JMP      	41 ; PC := 41
	38	[1483]	MOVE     	R7 R6 ; R7 := R6
	39	[1483]	MOVE     	R8 R5 ; R8 := R5
	40	[1483]	CONCAT   	R6 R7 R8 ; R6 := R7 .. R8
	41	[1485]	RETURN   	R6 2 ; return R6 
	42	[1486]	RETURN   	R0 1 ; return 

function #38 <?:1488,1490> (7 instructions, 28 bytes at 0000021137670FA0)
1 param, 5 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[1489]	GETGLOBAL	R1 K0 ; R1 := 0x38f10e85
	2	[1489]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	3	[1489]	MOVE     	R3 R0 ; R3 := R0
	4	[1489]	LOADK    	R4 K2 ; R4 := ".removeMovieClip"
	5	[1489]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	6	[1489]	CALL     	R1 3 1 ; R1(R2,R3)
	7	[1490]	RETURN   	R0 1 ; return 

function #39 <?:1492,1498> (18 instructions, 72 bytes at 00000211376710D0)
1 param, 3 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[1493]	GETGLOBAL	R1 K0 ; R1 := mVorsPrizeQuestActiveNode
	2	[1493]	TEST     	R1 0 ; if not R1 then PC := 15
	3	[1493]	JMP      	15 ; PC := 15
	4	[1493]	TEST     	R0 0 ; if not R0 then PC := 15
	5	[1493]	JMP      	15 ; PC := 15
	6	[1493]	GETTABLE 	R1 R0 K1 ; R1 := R0["name"]
	7	[1493]	GETGLOBAL	R2 K0 ; R2 := mVorsPrizeQuestActiveNode
	8	[1493]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 15
	9	[1493]	JMP      	15 ; PC := 15
	10	[1493]	GETTABLE 	R1 R0 K2 ; R1 := R0["missionsCompleted"]
	11	[1493]	EQ       	0 R1 K3 ; if R1 ~= 0.000000 then PC := 15
	12	[1493]	JMP      	15 ; PC := 15
	13	[1494]	LOADK    	R1 := 25.000000
	14	[1494]	RETURN   	R1 2 ; return R1 
	15	[1497]	GETUPVAL 	R1 U0 ; R1 := U0
	16	[1497]	GETTABLE 	R1 R1 K4 ; R1 := R1["LABEL_ALPHA"]
	17	[1497]	RETURN   	R1 2 ; return R1 
	18	[1498]	RETURN   	R0 1 ; return 

function #40 <?:1500,1514> (27 instructions, 108 bytes at 0000021137671280)
1 param, 4 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[1502]	GETGLOBAL	R1 K0 ; R1 := mRailJack
	2	[1502]	GETTABLE 	R1 R1 K1 ; R1 := R1["Active"]
	3	[1502]	TEST     	R1 1 ; if R1 then PC := 7
	4	[1502]	JMP      	7 ; PC := 7
	5	[1503]	OP_LOADBOOL	R1 0 0 ; R1 := false
	6	[1503]	RETURN   	R1 2 ; return R1 
	7	[1507]	GETGLOBAL	R1 K2 ; R1 := _T
	8	[1507]	GETTABLE 	R1 R1 K3 ; R1 := R1["InRailJackMode"]
	9	[1507]	TEST     	R1 0 ; if not R1 then PC := 17
	10	[1507]	JMP      	17 ; PC := 17
	11	[1507]	GETGLOBAL	R1 K2 ; R1 := _T
	12	[1507]	GETTABLE 	R1 R1 K3 ; R1 := R1["InRailJackMode"]
	13	[1507]	EQ       	0 R1 K4 ; if R1 ~= 1.000000 then PC := 17
	14	[1507]	JMP      	17 ; PC := 17
	15	[1508]	OP_LOADBOOL	R1 0 0 ; R1 := false
	16	[1508]	RETURN   	R1 2 ; return R1 
	17	[1513]	GETGLOBAL	R1 K5 ; R1 := 0x7f5022cf
	18	[1513]	GETTABLE 	R1 R1 K6 ; R1 := R1[0xa5c556b9]
	19	[1513]	MOVE     	R2 R0 ; R2 := R0
	20	[1513]	LOADK    	R3 K7 ; R3 := "Dojo"
	21	[1513]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	22	[1513]	EQ       	1 R1 K8 ; if R1 == nil then PC := 25
	23	[1513]	JMP      	25 ; PC := 25
	24	[1513]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 25
	25	[1513]	OP_LOADBOOL	R1 1 0 ; R1 := true
	26	[1513]	RETURN   	R1 2 ; return R1 
	27	[1514]	RETURN   	R0 1 ; return 

function #41 <?:1516,1569> (206 instructions, 824 bytes at 00000211376714B0)
7 params, 23 slots, 6 upvalues, 0 locals, 60 constants, 0 functions
	1	[1517]	GETUPVAL 	R7 U0 ; R7 := U0
	2	[1517]	LOADK    	R8 K0 ; R8 := "SubLabel"
	3	[1517]	LOADK    	R9 K0 ; R9 := "SubLabel"
	4	[1517]	GETUPVAL 	R10 U1 ; R10 := U1
	5	[1517]	LEN      	R10 R10 ; R10 := # R10
	6	[1517]	ADD      	R10 R10 K1 ; R10 := R10 + 1.000000
	7	[1517]	LOADK    	R11 := 200.000000
	8	[1517]	CALL     	R7 5 2 ; R7 := R7(R8,R9,R10,R11)
	9	[1519]	GETGLOBAL	R8 K2 ; R8 := 0xae91e43b
	10	[1519]	SELF     	R8 R8 K3 ; R9 := R8; R8 := R8[0x09839320]
	11	[1519]	MOVE     	R10 R7 ; R10 := R7
	12	[1519]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	13	[1521]	GETGLOBAL	R9 K4 ; R9 := mRailJack
	14	[1521]	GETTABLE 	R9 R9 K5 ; R9 := R9["Active"]
	15	[1521]	TEST     	R9 0 ; if not R9 then PC := 20
	16	[1521]	JMP      	20 ; PC := 20
	17	[1521]	GETUPVAL 	R9 U2 ; R9 := U2
	18	[1521]	MOVE     	R10 R0 ; R10 := R0
	19	[1521]	CALL     	R9 2 2 ; R9 := R9(R10)
	20	[1522]	GETGLOBAL	R10 K6 ; R10 := 0x2d0fad09
	21	[1522]	LOADK    	R11 K7 ; R11 := "Lotus.Interface.Components.ThemedButton"
	22	[1522]	CALL     	R10 2 2 ; R10 := R10(R11)
	23	[1523]	GETTABLE 	R11 R10 K8 ; R11 := R10[0xae6791ba]
	24	[1523]	GETGLOBAL	R12 K2 ; R12 := 0xae91e43b
	25	[1523]	MOVE     	R13 R7 ; R13 := R7
	26	[1523]	LOADK    	R14 K9 ; R14 := ".JoinBtn"
	27	[1523]	CONCAT   	R13 R13 R14 ; R13 := R13 .. R14
	28	[1523]	LOADK    	R14 K10 ; R14 := "/Lotus/Language/Railjack/SolarMap_JoinAnyCrew"
	29	[1523]	LOADK    	R15 K11 ; R15 := "FindAnyRailjackMission"
	30	[1523]	CALL     	R11 5 2 ; R11 := R11(R12,R13,R14,R15)
	31	[1524]	GETUPVAL 	R12 U3 ; R12 := U3
	32	[1524]	GETTABLE 	R12 R12 K13 ; R12 := R12["CENTER_ALIGNED"]
	33	[1524]	SETTABLE 	R11 K12 R12 ; R11["mAnchor"] := R12
	34	[1525]	SETTABLE 	R11 K14 K15 ; R11["mInactiveAlpha"] := 0.000000
	35	[1526]	SELF     	R12 R11 K16 ; R13 := R11; R12 := R11[0x4e86c602]
	36	[1526]	OP_LOADBOOL	R14 1 0 ; R14 := true
	37	[1526]	CALL     	R12 3 1 ; R12(R13,R14)
	38	[1527]	SELF     	R12 R11 K17 ; R13 := R11; R12 := R11[0x46610c50]
	39	[1527]	OP_LOADBOOL	R14 0 0 ; R14 := false
	40	[1527]	CALL     	R12 3 1 ; R12(R13,R14)
	41	[1528]	SELF     	R12 R11 K18 ; R13 := R11; R12 := R11[0x368ad758]
	42	[1528]	MOVE     	R14 R9 ; R14 := R9
	43	[1528]	CALL     	R12 3 1 ; R12(R13,R14)
	44	[1529]	SELF     	R12 R11 K19 ; R13 := R11; R12 := R11[0x71e9ac81]
	45	[1529]	CALL     	R12 2 1 ; R12(R13)
	46	[1530]	GETGLOBAL	R12 K4 ; R12 := mRailJack
	47	[1530]	GETTABLE 	R12 R12 K5 ; R12 := R12["Active"]
	48	[1530]	TEST     	R12 0 ; if not R12 then PC := 53
	49	[1530]	JMP      	53 ; PC := 53
	50	[1532]	MOVE     	R12 R0 ; R12 := R0
	51	[1532]	LOADK    	R13 K20 ; R13 := "_SPACE"
	52	[1532]	CONCAT   	R0 R12 R13 ; R0 := R12 .. R13
	53	[1535]	GETGLOBAL	R12 K21 ; R12 := 0x7f5022cf
	54	[1535]	GETTABLE 	R12 R12 K22 ; R12 := R12[0x3f3e4d12]
	55	[1535]	GETGLOBAL	R13 K2 ; R13 := 0xae91e43b
	56	[1535]	SELF     	R13 R13 K23 ; R14 := R13; R13 := R13[0x42b04007]
	57	[1535]	MOVE     	R15 R0 ; R15 := R0
	58	[1535]	OP_LOADBOOL	R16 0 0 ; R16 := false
	59	[1535]	CALL     	R13 4 0 ; R13,... := R13(R14,R15,R16)
	60	[1535]	CALL     	R12 0 2 ; R12 := R12(R13,...)
	61	[1536]	GETUPVAL 	R13 U4 ; R13 := U4
	62	[1536]	GETTABLE 	R13 R13 K24 ; R13 := R13["Tag"]
	63	[1536]	EQ       	0 R0 R13 ; if R0 ~= R13 then PC := 78
	64	[1536]	JMP      	78 ; PC := 78
	65	[1537]	GETGLOBAL	R13 K21 ; R13 := 0x7f5022cf
	66	[1537]	GETTABLE 	R13 R13 K25 ; R13 := R13[0x66edf04f]
	67	[1537]	MOVE     	R14 R12 ; R14 := R12
	68	[1537]	LOADK    	R15 K26 ; R15 := " "
	69	[1537]	LOADK    	R16 K27 ; R16 := "\r\n\r\n"
	70	[1537]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	71	[1537]	MOVE     	R12 R13 ; R12 := R13
	72	[1538]	GETGLOBAL	R13 K2 ; R13 := 0xae91e43b
	73	[1538]	SELF     	R13 R13 K28 ; R14 := R13; R13 := R13[0x5f56eeab]
	74	[1538]	MOVE     	R15 R7 ; R15 := R7
	75	[1538]	LOADK    	R16 := 38.000000
	76	[1538]	LOADK    	R17 K29 ; R17 := "bottom"
	77	[1538]	CALL     	R13 5 1 ; R13(R14,R15,R16,R17)
	78	[1541]	GETGLOBAL	R13 K2 ; R13 := 0xae91e43b
	79	[1541]	SELF     	R13 R13 K28 ; R14 := R13; R13 := R13[0x5f56eeab]
	80	[1541]	MOVE     	R15 R7 ; R15 := R7
	81	[1541]	LOADK    	R16 K30 ; R16 := ".Name"
	82	[1541]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	83	[1541]	LOADK    	R16 := 29.000000
	84	[1541]	MOVE     	R17 R12 ; R17 := R12
	85	[1541]	CALL     	R13 5 1 ; R13(R14,R15,R16,R17)
	86	[1542]	GETGLOBAL	R13 K2 ; R13 := 0xae91e43b
	87	[1542]	SELF     	R13 R13 K31 ; R14 := R13; R13 := R13[0xc0a3774b]
	88	[1542]	MOVE     	R15 R7 ; R15 := R7
	89	[1542]	LOADK    	R16 K32 ; R16 := "Name"
	90	[1542]	LOADK    	R17 := 44.000000
	91	[1542]	OP_LOADBOOL	R18 0 0 ; R18 := false
	92	[1542]	CALL     	R13 6 1 ; R13(R14,R15,R16,R17,R18)
	93	[1543]	GETGLOBAL	R13 K2 ; R13 := 0xae91e43b
	94	[1543]	SELF     	R13 R13 K33 ; R14 := R13; R13 := R13[0x67bc869f]
	95	[1543]	MOVE     	R15 R7 ; R15 := R7
	96	[1543]	LOADK    	R16 := 10.000000
	97	[1543]	GETUPVAL 	R17 U5 ; R17 := U5
	98	[1543]	GETTABLE 	R17 R17 K34 ; R17 := R17["LABEL_ALPHA"]
	99	[1543]	CALL     	R13 5 1 ; R13(R14,R15,R16,R17)
	100	[1544]	GETGLOBAL	R13 K2 ; R13 := 0xae91e43b
	101	[1544]	SELF     	R13 R13 K35 ; R14 := R13; R13 := R13[0xaade900e]
	102	[1544]	MOVE     	R15 R7 ; R15 := R7
	103	[1544]	LOADK    	R16 := 11.000000
	104	[1544]	NOT      	R17 R4 ; R17 := not R4
	105	[1544]	CALL     	R13 5 1 ; R13(R14,R15,R16,R17)
	106	[1545]	GETGLOBAL	R13 K2 ; R13 := 0xae91e43b
	107	[1545]	SELF     	R13 R13 K33 ; R14 := R13; R13 := R13[0x67bc869f]
	108	[1545]	MOVE     	R15 R7 ; R15 := R7
	109	[1545]	LOADK    	R16 K30 ; R16 := ".Name"
	110	[1545]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	111	[1545]	LOADK    	R16 := 9.000000
	112	[1545]	LOADK    	R17 K36 ; R17 := 16777215.000000
	113	[1545]	CALL     	R13 5 1 ; R13(R14,R15,R16,R17)
	114	[1546]	GETGLOBAL	R13 K2 ; R13 := 0xae91e43b
	115	[1546]	SELF     	R13 R13 K33 ; R14 := R13; R13 := R13[0x67bc869f]
	116	[1546]	MOVE     	R15 R7 ; R15 := R7
	117	[1546]	LOADK    	R16 K30 ; R16 := ".Name"
	118	[1546]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	119	[1546]	LOADK    	R16 := 10.000000
	120	[1546]	LOADK    	R17 := 190.000000
	121	[1546]	CALL     	R13 5 1 ; R13(R14,R15,R16,R17)
	122	[1548]	TEST     	R2 0 ; if not R2 then PC := 131
	123	[1548]	JMP      	131 ; PC := 131
	124	[1549]	GETGLOBAL	R13 K2 ; R13 := 0xae91e43b
	125	[1549]	SELF     	R13 R13 K37 ; R14 := R13; R13 := R13[0xe261aa96]
	126	[1549]	MOVE     	R15 R7 ; R15 := R7
	127	[1549]	LOADK    	R16 K32 ; R16 := "Name"
	128	[1549]	LOADK    	R17 := 37.000000
	129	[1549]	LOADK    	R18 K38 ; R18 := "left"
	130	[1549]	CALL     	R13 6 1 ; R13(R14,R15,R16,R17,R18)
	131	[1552]	GETTABLE 	R13 R1 K39 ; R13 := R1["z"]
	132	[1552]	SUB      	R13 R13 K40 ; R13 := R13 - -2.000000
	133	[1552]	DIV      	R13 K1 R13 ; R13 := 1.000000 / R13
	134	[1553]	MUL      	R13 R13 K41 ; R13 := R13 * 4.000000
	135	[1554]	GETGLOBAL	R14 K42 ; R14 := 0x42dcc9f5
	136	[1554]	MOVE     	R15 R13 ; R15 := R13
	137	[1554]	LOADK    	R16 := 0.750000
	138	[1554]	LOADK    	R17 := 1.250000
	139	[1554]	CALL     	R14 4 2 ; R14 := R14(R15,R16,R17)
	140	[1554]	MOVE     	R13 R14 ; R13 := R14
	141	[1555]	MUL      	R13 R13 K43 ; R13 := R13 * 80.000000
	142	[1557]	GETGLOBAL	R14 K2 ; R14 := 0xae91e43b
	143	[1557]	SELF     	R14 R14 K33 ; R15 := R14; R14 := R14[0x67bc869f]
	144	[1557]	MOVE     	R16 R7 ; R16 := R7
	145	[1557]	LOADK    	R17 := 5.000000
	146	[1557]	MOVE     	R18 R13 ; R18 := R13
	147	[1557]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	148	[1558]	GETGLOBAL	R14 K2 ; R14 := 0xae91e43b
	149	[1558]	SELF     	R14 R14 K33 ; R15 := R14; R14 := R14[0x67bc869f]
	150	[1558]	MOVE     	R16 R7 ; R16 := R7
	151	[1558]	LOADK    	R17 := 6.000000
	152	[1558]	MOVE     	R18 R13 ; R18 := R13
	153	[1558]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	154	[1559]	GETGLOBAL	R14 K44 ; R14 := 0x33bdd652
	155	[1559]	GETTABLE 	R14 R14 K45 ; R14 := R14[0x23d5322f]
	156	[1559]	GETUPVAL 	R15 U1 ; R15 := U1
	157	[1559]	NEWTABLE 	R16 0 5 ; R16 := {}
	158	[1559]	SETTABLE 	R16 K46 R8 ; R16["memberIndex"] := R8
	159	[1559]	SETTABLE 	R16 K47 R7 ; R16["clipName"] := R7
	160	[1559]	SETTABLE 	R16 K48 R1 ; R16["pos"] := R1
	161	[1559]	SETTABLE 	R16 K49 R3 ; R16["layer"] := R3
	162	[1559]	SETTABLE 	R16 K50 R11 ; R16["joinBtn"] := R11
	163	[1559]	CALL     	R14 3 1 ; R14(R15,R16)
	164	[1561]	GETGLOBAL	R14 K2 ; R14 := 0xae91e43b
	165	[1561]	SELF     	R14 R14 K35 ; R15 := R14; R14 := R14[0xaade900e]
	166	[1561]	MOVE     	R16 R7 ; R16 := R7
	167	[1561]	LOADK    	R17 := 59.000000
	168	[1561]	EQ       	0 R5 K51 ; if R5 ~= nil then PC := 171
	169	[1561]	JMP      	171 ; PC := 171
	170	[1561]	OP_LOADBOOL	R18 0 1 ; R18 := false; PC := 171
	171	[1561]	OP_LOADBOOL	R18 1 0 ; R18 := true
	172	[1561]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	173	[1562]	EQ       	1 R5 K51 ; if R5 == nil then PC := 205
	174	[1562]	JMP      	205 ; PC := 205
	175	[1563]	GETGLOBAL	R14 K2 ; R14 := 0xae91e43b
	176	[1563]	SELF     	R14 R14 K52 ; R15 := R14; R14 := R14[0xf64b7262]
	177	[1563]	MOVE     	R16 R7 ; R16 := R7
	178	[1563]	LOADK    	R17 K53 ; R17 := "Btn"
	179	[1563]	LOADK    	R18 := 85.000000
	180	[1563]	MOVE     	R19 R6 ; R19 := R6
	181	[1563]	CALL     	R14 6 1 ; R14(R15,R16,R17,R18,R19)
	182	[1564]	GETGLOBAL	R14 K2 ; R14 := 0xae91e43b
	183	[1564]	SELF     	R14 R14 K54 ; R15 := R14; R14 := R14[0x1e5b5cfe]
	184	[1564]	MOVE     	R16 R7 ; R16 := R7
	185	[1564]	LOADK    	R17 K55 ; R17 := ".Btn"
	186	[1564]	CONCAT   	R16 R16 R17 ; R16 := R16 .. R17
	187	[1564]	GETTABLE 	R17 R5 K56 ; R17 := R5["RollOver"]
	188	[1564]	GETTABLE 	R18 R5 K57 ; R18 := R5["RollOut"]
	189	[1564]	GETTABLE 	R19 R5 K58 ; R19 := R5["Select"]
	190	[1564]	LOADNIL  	R20 R20 ; R20 := nil
	191	[1564]	CALL     	R14 7 1 ; R14(R15,R16,R17,R18,R19,R20)
	192	[1565]	GETGLOBAL	R14 K2 ; R14 := 0xae91e43b
	193	[1565]	SELF     	R14 R14 K52 ; R15 := R14; R14 := R14[0xf64b7262]
	194	[1565]	MOVE     	R16 R7 ; R16 := R7
	195	[1565]	LOADK    	R17 K53 ; R17 := "Btn"
	196	[1565]	LOADK    	R18 := 12.000000
	197	[1565]	GETGLOBAL	R19 K2 ; R19 := 0xae91e43b
	198	[1565]	SELF     	R19 R19 K59 ; R20 := R19; R19 := R19[0x91a24e4b]
	199	[1565]	MOVE     	R21 R7 ; R21 := R7
	200	[1565]	LOADK    	R22 K30 ; R22 := ".Name"
	201	[1565]	CONCAT   	R21 R21 R22 ; R21 := R21 .. R22
	202	[1565]	LOADK    	R22 := 33.000000
	203	[1565]	CALL     	R19 4 0 ; R19,... := R19(R20,R21,R22)
	204	[1565]	CALL     	R14 0 1 ; R14(R15,...)
	205	[1568]	RETURN   	R7 2 ; return R7 
	206	[1569]	RETURN   	R0 1 ; return 

function #42 <?:1571,1593> (51 instructions, 204 bytes at 00000211376720C0)
1 param, 6 slots, 2 upvalues, 0 locals, 15 constants, 0 functions
	1	[1572]	GETTABLE 	R1 R0 K0 ; R1 := R0["nodeType"]
	2	[1572]	EQ       	1 R1 K2 ; if R1 == 3.000000 then PC := 5
	3	[1572]	JMP      	5 ; PC := 5
	4	[1573]	RETURN   	R0 1 ; return 
	5	[1576]	GETGLOBAL	R1 K3 ; R1 := _T
	6	[1576]	GETTABLE 	R1 R1 K4 ; R1 := R1["CachedHubLevelOverride"]
	7	[1576]	TEST     	R1 1 ; if R1 then PC := 12
	8	[1576]	JMP      	12 ; PC := 12
	9	[1577]	GETGLOBAL	R1 K3 ; R1 := _T
	10	[1577]	NEWTABLE 	R2 0 0 ; R2 := {}
	11	[1577]	SETTABLE 	R1 K4 R2 ; R1["CachedHubLevelOverride"] := R2
	12	[1580]	GETTABLE 	R1 R0 K5 ; R1 := R0["name"]
	13	[1580]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x6d604ba7]
	14	[1580]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[1581]	GETGLOBAL	R2 K3 ; R2 := _T
	16	[1581]	GETTABLE 	R2 R2 K4 ; R2 := R2["CachedHubLevelOverride"]
	17	[1581]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	18	[1581]	TEST     	R2 1 ; if R2 then PC := 30
	19	[1581]	JMP      	30 ; PC := 30
	20	[1583]	GETGLOBAL	R2 K3 ; R2 := _T
	21	[1583]	GETTABLE 	R2 R2 K4 ; R2 := R2["CachedHubLevelOverride"]
	22	[1583]	GETUPVAL 	R3 U0 ; R3 := U0
	23	[1583]	GETTABLE 	R3 R3 K7 ; R3 := R3[0x5e35d4d6]
	24	[1583]	CALL     	R3 1 2 ; R3 := R3()
	25	[1583]	SELF     	R3 R3 K8 ; R4 := R3; R3 := R3[0xc18bf6f0]
	26	[1583]	GETTABLE 	R5 R0 K5 ; R5 := R0["name"]
	27	[1583]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	28	[1583]	GETTABLE 	R3 R3 K9 ; R3 := R3["levelOverride"]
	29	[1583]	SETTABLE 	R2 R1 R3 ; R2[R1] := R3
	30	[1586]	GETGLOBAL	R2 K3 ; R2 := _T
	31	[1586]	GETTABLE 	R2 R2 K4 ; R2 := R2["CachedHubLevelOverride"]
	32	[1586]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	33	[1589]	GETGLOBAL	R3 K10 ; R3 := 0x7b998233
	34	[1589]	MOVE     	R4 R2 ; R4 := R2
	35	[1589]	CALL     	R3 2 2 ; R3 := R3(R4)
	36	[1589]	TEST     	R3 1 ; if R3 then PC := 48
	37	[1589]	JMP      	48 ; PC := 48
	38	[1590]	GETUPVAL 	R3 U1 ; R3 := U1
	39	[1590]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 48
	40	[1590]	JMP      	48 ; PC := 48
	41	[1591]	GETGLOBAL	R3 K11 ; R3 := 0x7f5022cf
	42	[1591]	GETTABLE 	R3 R3 K12 ; R3 := R3[0xa5c556b9]
	43	[1591]	MOVE     	R4 R1 ; R4 := R1
	44	[1591]	LOADK    	R5 K13 ; R5 := "TennoCon"
	45	[1591]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	46	[1591]	EQ       	1 R3 K14 ; if R3 == nil then PC := 49
	47	[1591]	JMP      	49 ; PC := 49
	48	[1592]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 49
	49	[1592]	OP_LOADBOOL	R3 1 0 ; R3 := true
	50	[1592]	RETURN   	R3 2 ; return R3 
	51	[1593]	RETURN   	R0 1 ; return 

function #43 <?:1595,1646> (191 instructions, 764 bytes at 0000021137672450)
2 params, 13 slots, 5 upvalues, 0 locals, 45 constants, 0 functions
	1	[1597]	GETTABLE 	R2 R0 K0 ; R2 := R0["locationEnabled"]
	2	[1597]	TEST     	R2 0 ; if not R2 then PC := 7
	3	[1597]	JMP      	7 ; PC := 7
	4	[1597]	GETTABLE 	R2 R0 K1 ; R2 := R0["edgesLocked"]
	5	[1597]	TEST     	R2 0 ; if not R2 then PC := 9
	6	[1597]	JMP      	9 ; PC := 9
	7	[1598]	OP_LOADBOOL	R2 0 0 ; R2 := false
	8	[1598]	RETURN   	R2 2 ; return R2 
	9	[1601]	GETGLOBAL	R2 K2 ; R2 := mNewWarMode
	10	[1601]	TEST     	R2 0 ; if not R2 then PC := 17
	11	[1601]	JMP      	17 ; PC := 17
	12	[1601]	GETTABLE 	R2 R0 K3 ; R2 := R0["newWarMode"]
	13	[1601]	TEST     	R2 1 ; if R2 then PC := 17
	14	[1601]	JMP      	17 ; PC := 17
	15	[1602]	OP_LOADBOOL	R2 0 0 ; R2 := false
	16	[1602]	RETURN   	R2 2 ; return R2 
	17	[1605]	GETTABLE 	R2 R0 K4 ; R2 := R0["radialSector"]
	18	[1606]	GETGLOBAL	R3 K5 ; R3 := 0x64fb1586
	19	[1606]	GETTABLE 	R4 R2 K6 ; R4 := R2["name"]
	20	[1606]	CALL     	R3 2 2 ; R3 := R3(R4)
	21	[1607]	GETGLOBAL	R4 K7 ; R4 := _T
	22	[1607]	GETTABLE 	R4 R4 K8 ; R4 := R4["CachedSortieMissions"]
	23	[1607]	GETTABLE 	R4 R4 R3 ; R4 := R4[R3]
	24	[1607]	EQ       	1 R4 K9 ; if R4 == nil then PC := 31
	25	[1607]	JMP      	31 ; PC := 31
	26	[1607]	GETGLOBAL	R4 K7 ; R4 := _T
	27	[1607]	GETTABLE 	R4 R4 K8 ; R4 := R4["CachedSortieMissions"]
	28	[1607]	GETTABLE 	R4 R4 R3 ; R4 := R4[R3]
	29	[1607]	GETTABLE 	R4 R4 K10 ; R4 := R4["mShowInStarChart"]
	30	[1607]	JMP      	33 ; PC := 33
	31	[1607]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 32
	32	[1607]	OP_LOADBOOL	R4 1 0 ; R4 := true
	33	[1608]	GETGLOBAL	R5 K7 ; R5 := _T
	34	[1608]	GETTABLE 	R5 R5 K11 ; R5 := R5["CachedLiteSortieMissions"]
	35	[1608]	GETTABLE 	R5 R5 R3 ; R5 := R5[R3]
	36	[1608]	EQ       	1 R5 K9 ; if R5 == nil then PC := 43
	37	[1608]	JMP      	43 ; PC := 43
	38	[1608]	GETGLOBAL	R5 K7 ; R5 := _T
	39	[1608]	GETTABLE 	R5 R5 K11 ; R5 := R5["CachedLiteSortieMissions"]
	40	[1608]	GETTABLE 	R5 R5 R3 ; R5 := R5[R3]
	41	[1608]	GETTABLE 	R5 R5 K10 ; R5 := R5["mShowInStarChart"]
	42	[1608]	JMP      	45 ; PC := 45
	43	[1608]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 44
	44	[1608]	OP_LOADBOOL	R5 1 0 ; R5 := true
	45	[1611]	GETGLOBAL	R6 K7 ; R6 := _T
	46	[1611]	GETTABLE 	R6 R6 K12 ; R6 := R6["CachedAlerts"]
	47	[1611]	GETTABLE 	R6 R6 R3 ; R6 := R6[R3]
	48	[1611]	EQ       	1 R6 K9 ; if R6 == nil then PC := 56
	49	[1611]	JMP      	56 ; PC := 56
	50	[1611]	GETGLOBAL	R6 K7 ; R6 := _T
	51	[1611]	GETTABLE 	R6 R6 K12 ; R6 := R6["CachedAlerts"]
	52	[1611]	GETTABLE 	R6 R6 R3 ; R6 := R6[R3]
	53	[1611]	GETTABLE 	R6 R6 K13 ; R6 := R6["mUnlocked"]
	54	[1611]	TEST     	R6 1 ; if R6 then PC := 76
	55	[1611]	JMP      	76 ; PC := 76
	56	[1612]	GETGLOBAL	R6 K14 ; R6 := 0x0032441c
	57	[1612]	GETTABLE 	R6 R6 K15 ; R6 := R6["CachedGoalInfo"]
	58	[1612]	GETTABLE 	R6 R6 R3 ; R6 := R6[R3]
	59	[1612]	EQ       	0 R6 K9 ; if R6 ~= nil then PC := 75
	60	[1612]	JMP      	75 ; PC := 75
	61	[1613]	TESTSET  	R6 R4 1 ; if R4 then PC := 76 else R6 := R4 
	62	[1613]	JMP      	76 ; PC := 76
	63	[1614]	TESTSET  	R6 R5 1 ; if R5 then PC := 76 else R6 := R5 
	64	[1614]	JMP      	76 ; PC := 76
	65	[1615]	GETGLOBAL	R6 K7 ; R6 := _T
	66	[1615]	GETTABLE 	R6 R6 K16 ; R6 := R6["CachedActiveMissions"]
	67	[1615]	TEST     	R6 0 ; if not R6 then PC := 76
	68	[1615]	JMP      	76 ; PC := 76
	69	[1615]	GETGLOBAL	R6 K7 ; R6 := _T
	70	[1615]	GETTABLE 	R6 R6 K16 ; R6 := R6["CachedActiveMissions"]
	71	[1615]	GETTABLE 	R6 R6 R3 ; R6 := R6[R3]
	72	[1615]	EQ       	0 R6 K9 ; if R6 ~= nil then PC := 75
	73	[1615]	JMP      	75 ; PC := 75
	74	[1616]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 75
	75	[1616]	OP_LOADBOOL	R6 1 0 ; R6 := true
	76	[1619]	GETTABLE 	R7 R0 K17 ; R7 := R0["forceUnlock"]
	77	[1619]	TEST     	R7 1 ; if R7 then PC := 139
	78	[1619]	JMP      	139 ; PC := 139
	79	[1620]	GETTABLE 	R7 R2 K18 ; R7 := R2["nodeType"]
	80	[1620]	EQ       	1 R7 K20 ; if R7 == 2.000000 then PC := 138
	81	[1620]	JMP      	138 ; PC := 138
	82	[1621]	EQ       	0 R1 K9 ; if R1 ~= nil then PC := 89
	83	[1621]	JMP      	89 ; PC := 89
	84	[1621]	GETGLOBAL	R7 K21 ; R7 := 0x7b998233
	85	[1621]	GETTABLE 	R8 R2 K22 ; R8 := R2["keyChain"]
	86	[1621]	CALL     	R7 2 2 ; R7 := R7(R8)
	87	[1621]	TEST     	R7 0 ; if not R7 then PC := 138
	88	[1621]	JMP      	138 ; PC := 138
	89	[1622]	TEST     	R4 1 ; if R4 then PC := 99
	90	[1622]	JMP      	99 ; PC := 99
	91	[1622]	GETTABLE 	R7 R2 K23 ; R7 := R2["unlocked"]
	92	[1622]	TEST     	R7 0 ; if not R7 then PC := 99
	93	[1622]	JMP      	99 ; PC := 99
	94	[1622]	GETTABLE 	R7 R2 K24 ; R7 := R2["difficultyUnlocked"]
	95	[1622]	GETUPVAL 	R8 U0 ; R8 := U0
	96	[1622]	CALL     	R8 1 2 ; R8 := R8()
	97	[1622]	LE       	1 R8 R7 ; if R8 <= R7 then PC := 138
	98	[1622]	JMP      	138 ; PC := 138
	99	[1623]	TEST     	R6 0 ; if not R6 then PC := 110
	100	[1623]	JMP      	110 ; PC := 110
	101	[1623]	GETTABLE 	R7 R0 K4 ; R7 := R0["radialSector"]
	102	[1623]	GETTABLE 	R7 R7 K23 ; R7 := R7["unlocked"]
	103	[1623]	TEST     	R7 0 ; if not R7 then PC := 110
	104	[1623]	JMP      	110 ; PC := 110
	105	[1623]	GETTABLE 	R7 R2 K24 ; R7 := R2["difficultyUnlocked"]
	106	[1623]	GETUPVAL 	R8 U0 ; R8 := U0
	107	[1623]	CALL     	R8 1 2 ; R8 := R8()
	108	[1623]	LE       	1 R8 R7 ; if R8 <= R7 then PC := 138
	109	[1623]	JMP      	138 ; PC := 138
	110	[1624]	GETTABLE 	R7 R2 K25 ; R7 := R2["region"]
	111	[1624]	ADD      	R7 R7 K26 ; R7 := R7 + 1.000000
	112	[1624]	GETUPVAL 	R8 U1 ; R8 := U1
	113	[1624]	GETTABLE 	R8 R8 K27 ; R8 := R8["REGION_ID_DARK_SECTOR"]
	114	[1624]	EQ       	1 R7 R8 ; if R7 == R8 then PC := 138
	115	[1624]	JMP      	138 ; PC := 138
	116	[1625]	GETTABLE 	R7 R2 K6 ; R7 := R2["name"]
	117	[1625]	GETUPVAL 	R8 U2 ; R8 := U2
	118	[1625]	GETTABLE 	R8 R8 K28 ; R8 := R8["PRIME_VAULT_TRADER_LOCATION"]
	119	[1625]	EQ       	0 R7 R8 ; if R7 ~= R8 then PC := 126
	120	[1625]	JMP      	126 ; PC := 126
	121	[1625]	GETGLOBAL	R7 K29 ; R7 := 0x25d99d89
	122	[1625]	SELF     	R7 R7 K30 ; R8 := R7; R7 := R7[0xbd6729ff]
	123	[1625]	CALL     	R7 2 2 ; R7 := R7(R8)
	124	[1625]	LT       	1 K31 R7 ; if 0.000000 < R7 then PC := 138
	125	[1625]	JMP      	138 ; PC := 138
	126	[1626]	GETGLOBAL	R7 K14 ; R7 := 0x0032441c
	127	[1626]	GETTABLE 	R7 R7 K32 ; R7 := R7["StalkerMode"]
	128	[1626]	TEST     	R7 1 ; if R7 then PC := 139
	129	[1626]	JMP      	139 ; PC := 139
	130	[1627]	GETGLOBAL	R7 K33 ; R7 := mDebugUnlockAllMissions
	131	[1627]	TEST     	R7 0 ; if not R7 then PC := 139
	132	[1627]	JMP      	139 ; PC := 139
	133	[1627]	GETUPVAL 	R7 U0 ; R7 := U0
	134	[1627]	CALL     	R7 1 2 ; R7 := R7()
	135	[1627]	LE       	1 K31 R7 ; if 0.000000 <= R7 then PC := 138
	136	[1627]	JMP      	138 ; PC := 138
	137	[1628]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 138
	138	[1628]	OP_LOADBOOL	R7 1 0 ; R7 := true
	139	[1630]	GETGLOBAL	R8 K34 ; R8 := 0xbe190284
	140	[1631]	GETGLOBAL	R9 K5 ; R9 := 0x64fb1586
	141	[1631]	GETTABLE 	R10 R2 K6 ; R10 := R2["name"]
	142	[1631]	CALL     	R9 2 2 ; R9 := R9(R10)
	143	[1632]	SELF     	R10 R8 K35 ; R11 := R8; R10 := R8[0xf2deaf69]
	144	[1632]	GETGLOBAL	R12 K36 ; R12 := gLotusHubGameRulesType
	145	[1632]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	146	[1632]	TEST     	R10 0 ; if not R10 then PC := 157
	147	[1632]	JMP      	157 ; PC := 157
	148	[1632]	GETGLOBAL	R10 K5 ; R10 := 0x64fb1586
	149	[1632]	GETGLOBAL	R11 K34 ; R11 := 0xbe190284
	150	[1632]	SELF     	R11 R11 K37 ; R12 := R11; R11 := R11[0xef893aec]
	151	[1632]	CALL     	R11 2 2 ; R11 := R11(R12)
	152	[1632]	GETTABLE 	R11 R11 K38 ; R11 := R11["location"]
	153	[1632]	CALL     	R10 2 2 ; R10 := R10(R11)
	154	[1632]	EQ       	0 R9 R10 ; if R9 ~= R10 then PC := 157
	155	[1632]	JMP      	157 ; PC := 157
	156	[1633]	OP_LOADBOOL	R7 0 0 ; R7 := false
	157	[1636]	GETGLOBAL	R10 K39 ; R10 := mRailJack
	158	[1636]	GETTABLE 	R10 R10 K40 ; R10 := R10["Active"]
	159	[1636]	TEST     	R10 0 ; if not R10 then PC := 175
	160	[1636]	JMP      	175 ; PC := 175
	161	[1636]	GETTABLE 	R10 R2 K41 ; R10 := R2["missionTag"]
	162	[1636]	GETUPVAL 	R11 U2 ; R11 := U2
	163	[1636]	GETTABLE 	R11 R11 K42 ; R11 := R11["SQUAD_LINK_EVENT"]
	164	[1636]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 175
	165	[1636]	JMP      	175 ; PC := 175
	166	[1636]	GETGLOBAL	R10 K14 ; R10 := 0x0032441c
	167	[1636]	GETTABLE 	R10 R10 K15 ; R10 := R10["CachedGoalInfo"]
	168	[1636]	GETTABLE 	R10 R10 R3 ; R10 := R10[R3]
	169	[1636]	TEST     	R10 1 ; if R10 then PC := 174
	170	[1636]	JMP      	174 ; PC := 174
	171	[1636]	GETUPVAL 	R10 U3 ; R10 := U3
	172	[1636]	TEST     	R10 0 ; if not R10 then PC := 175
	173	[1636]	JMP      	175 ; PC := 175
	174	[1637]	OP_LOADBOOL	R7 1 0 ; R7 := true
	175	[1640]	TEST     	R7 1 ; if R7 then PC := 190
	176	[1640]	JMP      	190 ; PC := 190
	177	[1640]	GETTABLE 	R10 R2 K18 ; R10 := R2["nodeType"]
	178	[1640]	EQ       	0 R10 K43 ; if R10 ~= 3.000000 then PC := 190
	179	[1640]	JMP      	190 ; PC := 190
	180	[1640]	GETGLOBAL	R10 K39 ; R10 := mRailJack
	181	[1640]	GETTABLE 	R10 R10 K44 ; R10 := R10["CanHost"]
	182	[1640]	TEST     	R10 0 ; if not R10 then PC := 190
	183	[1640]	JMP      	190 ; PC := 190
	184	[1640]	GETUPVAL 	R10 U4 ; R10 := U4
	185	[1640]	MOVE     	R11 R2 ; R11 := R2
	186	[1640]	CALL     	R10 2 2 ; R10 := R10(R11)
	187	[1640]	TEST     	R10 0 ; if not R10 then PC := 190
	188	[1640]	JMP      	190 ; PC := 190
	189	[1642]	OP_LOADBOOL	R7 1 0 ; R7 := true
	190	[1645]	RETURN   	R7 2 ; return R7 
	191	[1646]	RETURN   	R0 1 ; return 

function #44 <?:1648,1699> (319 instructions, 1276 bytes at 0000021137672EE0)
1 param, 7 slots, 4 upvalues, 0 locals, 64 constants, 0 functions
	1	[1649]	GETGLOBAL	R1 K0 ; R1 := 0x64fb1586
	2	[1649]	GETTABLE 	R2 R0 K1 ; R2 := R0["name"]
	3	[1649]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[1650]	GETTABLE 	R2 R0 K2 ; R2 := R0["locked"]
	5	[1650]	TEST     	R2 1 ; if R2 then PC := 13
	6	[1650]	JMP      	13 ; PC := 13
	7	[1650]	GETTABLE 	R2 R0 K3 ; R2 := R0["completed"]
	8	[1650]	TEST     	R2 0 ; if not R2 then PC := 13
	9	[1650]	JMP      	13 ; PC := 13
	10	[1650]	GETTABLE 	R2 R0 K4 ; R2 := R0["isShortcut"]
	11	[1650]	TEST     	R2 0 ; if not R2 then PC := 16
	12	[1650]	JMP      	16 ; PC := 16
	13	[1651]	LOADNIL  	R2 R2 ; R2 := nil
	14	[1651]	RETURN   	R2 2 ; return R2 
	15	[1651]	JMP      	317 ; PC := 317
	16	[1652]	GETTABLE 	R2 R0 K5 ; R2 := R0["newWarMode"]
	17	[1652]	TEST     	R2 0 ; if not R2 then PC := 25
	18	[1652]	JMP      	25 ; PC := 25
	19	[1653]	GETGLOBAL	R2 K6 ; R2 := 0xf31cfb9b
	20	[1653]	LOADK    	R3 := 128.000000
	21	[1653]	LOADK    	R4 := 40.000000
	22	[1653]	LOADK    	R5 := 14.000000
	23	[1653]	RETURN   	R2 5 ; return R2, R3, R4, R5 
	24	[1653]	JMP      	317 ; PC := 317
	25	[1654]	GETTABLE 	R2 R0 K7 ; R2 := R0["IsQuest"]
	26	[1654]	TEST     	R2 0 ; if not R2 then PC := 32
	27	[1654]	JMP      	32 ; PC := 32
	28	[1655]	GETGLOBAL	R2 K8 ; R2 := 0x0032441c
	29	[1655]	GETTABLE 	R2 R2 K9 ; R2 := R2["UITexture_Story"]
	30	[1655]	RETURN   	R2 2 ; return R2 
	31	[1655]	JMP      	317 ; PC := 317
	32	[1656]	GETTABLE 	R2 R0 K10 ; R2 := R0["IsHomeNode"]
	33	[1656]	TEST     	R2 0 ; if not R2 then PC := 41
	34	[1656]	JMP      	41 ; PC := 41
	35	[1657]	GETGLOBAL	R2 K11 ; R2 := 0x656b8788
	36	[1657]	LOADK    	R3 := 48.000000
	37	[1657]	LOADK    	R4 := 0.000000
	38	[1657]	LOADK    	R5 := -5.000000
	39	[1657]	RETURN   	R2 5 ; return R2, R3, R4, R5 
	40	[1657]	JMP      	317 ; PC := 317
	41	[1658]	EQ       	0 R1 K12 ; if R1 ~= "Story" then PC := 47
	42	[1658]	JMP      	47 ; PC := 47
	43	[1659]	GETGLOBAL	R2 K8 ; R2 := 0x0032441c
	44	[1659]	GETTABLE 	R2 R2 K9 ; R2 := R2["UITexture_Story"]
	45	[1659]	RETURN   	R2 2 ; return R2 
	46	[1659]	JMP      	317 ; PC := 317
	47	[1660]	GETGLOBAL	R2 K13 ; R2 := _T
	48	[1660]	GETTABLE 	R2 R2 K14 ; R2 := R2["CachedAlerts"]
	49	[1660]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	50	[1660]	TEST     	R2 0 ; if not R2 then PC := 77
	51	[1660]	JMP      	77 ; PC := 77
	52	[1660]	GETGLOBAL	R2 K13 ; R2 := _T
	53	[1660]	GETTABLE 	R2 R2 K14 ; R2 := R2["CachedAlerts"]
	54	[1660]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	55	[1660]	GETTABLE 	R2 R2 K15 ; R2 := R2["mVisible"]
	56	[1660]	TEST     	R2 0 ; if not R2 then PC := 77
	57	[1660]	JMP      	77 ; PC := 77
	58	[1661]	GETUPVAL 	R2 U0 ; R2 := U0
	59	[1661]	GETTABLE 	R2 R2 K16 ; R2 := R2[0x06d055f9]
	60	[1661]	GETGLOBAL	R3 K17 ; R3 := 0x7b998233
	61	[1661]	GETGLOBAL	R4 K13 ; R4 := _T
	62	[1661]	GETTABLE 	R4 R4 K14 ; R4 := R4["CachedAlerts"]
	63	[1661]	GETTABLE 	R4 R4 R1 ; R4 := R4[R1]
	64	[1661]	GETTABLE 	R4 R4 K18 ; R4 := R4["mAlertInfo"]
	65	[1661]	GETTABLE 	R4 R4 K19 ; R4 := R4["mIcon"]
	66	[1661]	CALL     	R3 2 2 ; R3 := R3(R4)
	67	[1661]	GETGLOBAL	R4 K8 ; R4 := 0x0032441c
	68	[1661]	GETTABLE 	R4 R4 K20 ; R4 := R4["UITexture_Alert"]
	69	[1661]	GETGLOBAL	R5 K13 ; R5 := _T
	70	[1661]	GETTABLE 	R5 R5 K14 ; R5 := R5["CachedAlerts"]
	71	[1661]	GETTABLE 	R5 R5 R1 ; R5 := R5[R1]
	72	[1661]	GETTABLE 	R5 R5 K18 ; R5 := R5["mAlertInfo"]
	73	[1661]	GETTABLE 	R5 R5 K19 ; R5 := R5["mIcon"]
	74	[1661]	TAILCALL 	R2 4 0 ; R2,... := R2(R3,R4,R5)
	75	[1661]	RETURN   	R2 0 ; return R2,... 
	76	[1661]	JMP      	317 ; PC := 317
	77	[1662]	GETGLOBAL	R2 K8 ; R2 := 0x0032441c
	78	[1662]	GETTABLE 	R2 R2 K21 ; R2 := R2["CachedGoalInfo"]
	79	[1662]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	80	[1662]	TEST     	R2 0 ; if not R2 then PC := 96
	81	[1662]	JMP      	96 ; PC := 96
	82	[1662]	GETGLOBAL	R2 K8 ; R2 := 0x0032441c
	83	[1662]	GETTABLE 	R2 R2 K21 ; R2 := R2["CachedGoalInfo"]
	84	[1662]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	85	[1662]	GETTABLE 	R2 R2 K22 ; R2 := R2["mTag"]
	86	[1662]	GETUPVAL 	R3 U1 ; R3 := U1
	87	[1662]	GETTABLE 	R3 R3 K23 ; R3 := R3["PRIME_VAULT_TRADER_GOAL"]
	88	[1662]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 96
	89	[1662]	JMP      	96 ; PC := 96
	90	[1663]	GETUPVAL 	R2 U2 ; R2 := U2
	91	[1663]	GETTABLE 	R2 R2 K24 ; R2 := R2[0x7d7875a9]
	92	[1663]	MOVE     	R3 R1 ; R3 := R1
	93	[1663]	TAILCALL 	R2 2 0 ; R2,... := R2(R3)
	94	[1663]	RETURN   	R2 0 ; return R2,... 
	95	[1663]	JMP      	317 ; PC := 317
	96	[1664]	GETGLOBAL	R2 K13 ; R2 := _T
	97	[1664]	GETTABLE 	R2 R2 K25 ; R2 := R2["CachedGhostTowerMissions"]
	98	[1664]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	99	[1664]	EQ       	1 R2 K26 ; if R2 == nil then PC := 131
	100	[1664]	JMP      	131 ; PC := 131
	101	[1664]	GETGLOBAL	R2 K13 ; R2 := _T
	102	[1664]	GETTABLE 	R2 R2 K25 ; R2 := R2["CachedGhostTowerMissions"]
	103	[1664]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	104	[1664]	GETTABLE 	R2 R2 K27 ; R2 := R2["mUnlocked"]
	105	[1664]	TEST     	R2 0 ; if not R2 then PC := 131
	106	[1664]	JMP      	131 ; PC := 131
	107	[1664]	GETGLOBAL	R2 K13 ; R2 := _T
	108	[1664]	GETTABLE 	R2 R2 K25 ; R2 := R2["CachedGhostTowerMissions"]
	109	[1664]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	110	[1664]	GETTABLE 	R2 R2 K28 ; R2 := R2["mShowInStarChart"]
	111	[1664]	TEST     	R2 0 ; if not R2 then PC := 131
	112	[1664]	JMP      	131 ; PC := 131
	113	[1665]	GETGLOBAL	R2 K13 ; R2 := _T
	114	[1665]	GETTABLE 	R2 R2 K25 ; R2 := R2["CachedGhostTowerMissions"]
	115	[1665]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	116	[1665]	GETTABLE 	R2 R2 K29 ; R2 := R2["mMissionInfo"]
	117	[1665]	GETTABLE 	R2 R2 K30 ; R2 := R2["minEnemyLevel"]
	118	[1665]	LE       	0 K31 R2 ; if 80.000000 > R2 then PC := 125
	119	[1665]	JMP      	125 ; PC := 125
	120	[1666]	GETGLOBAL	R2 K8 ; R2 := 0x0032441c
	121	[1666]	GETTABLE 	R2 R2 K32 ; R2 := R2["UITextures_GhostTowerVariant"]
	122	[1666]	LOADK    	R3 := 60.000000
	123	[1666]	LOADK    	R4 := 20.000000
	124	[1666]	RETURN   	R2 4 ; return R2, R3, R4 
	125	[1668]	GETGLOBAL	R2 K8 ; R2 := 0x0032441c
	126	[1668]	GETTABLE 	R2 R2 K33 ; R2 := R2["UITextures_GhostTower"]
	127	[1668]	LOADNIL  	R3 R3 ; R3 := nil
	128	[1668]	LOADK    	R4 := 90.000000
	129	[1668]	RETURN   	R2 4 ; return R2, R3, R4 
	130	[1668]	JMP      	317 ; PC := 317
	131	[1669]	GETGLOBAL	R2 K13 ; R2 := _T
	132	[1669]	GETTABLE 	R2 R2 K34 ; R2 := R2["CachedSkullNodes"]
	133	[1669]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	134	[1669]	EQ       	1 R2 K26 ; if R2 == nil then PC := 140
	135	[1669]	JMP      	140 ; PC := 140
	136	[1670]	GETGLOBAL	R2 K8 ; R2 := 0x0032441c
	137	[1670]	GETTABLE 	R2 R2 K35 ; R2 := R2["UITexture_Skull"]
	138	[1670]	RETURN   	R2 2 ; return R2 
	139	[1670]	JMP      	317 ; PC := 317
	140	[1671]	GETGLOBAL	R2 K13 ; R2 := _T
	141	[1671]	GETTABLE 	R2 R2 K36 ; R2 := R2["CachedSortieMissions"]
	142	[1671]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	143	[1671]	TEST     	R2 0 ; if not R2 then PC := 165
	144	[1671]	JMP      	165 ; PC := 165
	145	[1671]	GETGLOBAL	R2 K13 ; R2 := _T
	146	[1671]	GETTABLE 	R2 R2 K36 ; R2 := R2["CachedSortieMissions"]
	147	[1671]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	148	[1671]	GETTABLE 	R2 R2 K28 ; R2 := R2["mShowInStarChart"]
	149	[1671]	TEST     	R2 0 ; if not R2 then PC := 165
	150	[1671]	JMP      	165 ; PC := 165
	151	[1671]	GETGLOBAL	R2 K17 ; R2 := 0x7b998233
	152	[1671]	GETGLOBAL	R3 K13 ; R3 := _T
	153	[1671]	GETTABLE 	R3 R3 K36 ; R3 := R3["CachedSortieMissions"]
	154	[1671]	GETTABLE 	R3 R3 R1 ; R3 := R3[R1]
	155	[1671]	GETTABLE 	R3 R3 K19 ; R3 := R3["mIcon"]
	156	[1671]	CALL     	R2 2 2 ; R2 := R2(R3)
	157	[1671]	TEST     	R2 1 ; if R2 then PC := 165
	158	[1671]	JMP      	165 ; PC := 165
	159	[1672]	GETGLOBAL	R2 K13 ; R2 := _T
	160	[1672]	GETTABLE 	R2 R2 K36 ; R2 := R2["CachedSortieMissions"]
	161	[1672]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	162	[1672]	GETTABLE 	R2 R2 K19 ; R2 := R2["mIcon"]
	163	[1672]	RETURN   	R2 2 ; return R2 
	164	[1672]	JMP      	317 ; PC := 317
	165	[1673]	GETGLOBAL	R2 K13 ; R2 := _T
	166	[1673]	GETTABLE 	R2 R2 K37 ; R2 := R2["CachedSyndicateMissions"]
	167	[1673]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	168	[1673]	TEST     	R2 0 ; if not R2 then PC := 182
	169	[1673]	JMP      	182 ; PC := 182
	170	[1673]	GETGLOBAL	R2 K13 ; R2 := _T
	171	[1673]	GETTABLE 	R2 R2 K37 ; R2 := R2["CachedSyndicateMissions"]
	172	[1673]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	173	[1673]	GETTABLE 	R2 R2 K15 ; R2 := R2["mVisible"]
	174	[1673]	TEST     	R2 0 ; if not R2 then PC := 182
	175	[1673]	JMP      	182 ; PC := 182
	176	[1674]	GETGLOBAL	R2 K13 ; R2 := _T
	177	[1674]	GETTABLE 	R2 R2 K37 ; R2 := R2["CachedSyndicateMissions"]
	178	[1674]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	179	[1674]	GETTABLE 	R2 R2 K38 ; R2 := R2["mMapIcon"]
	180	[1674]	RETURN   	R2 2 ; return R2 
	181	[1674]	JMP      	317 ; PC := 317
	182	[1675]	GETGLOBAL	R2 K13 ; R2 := _T
	183	[1675]	GETTABLE 	R2 R2 K39 ; R2 := R2["CachedInvasionInfo"]
	184	[1675]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	185	[1675]	TEST     	R2 0 ; if not R2 then PC := 204
	186	[1675]	JMP      	204 ; PC := 204
	187	[1676]	GETUPVAL 	R2 U2 ; R2 := U2
	188	[1676]	GETTABLE 	R2 R2 K40 ; R2 := R2[0x06d35c99]
	189	[1676]	LOADNIL  	R3 R3 ; R3 := nil
	190	[1676]	CALL     	R2 2 2 ; R2 := R2(R3)
	191	[1677]	TEST     	R2 0 ; if not R2 then PC := 200
	192	[1677]	JMP      	200 ; PC := 200
	193	[1677]	GETTABLE 	R3 R2 K41 ; R3 := R2["mDefenderMissionInfo"]
	194	[1677]	GETTABLE 	R3 R3 K42 ; R3 := R3["missionType"]
	195	[1677]	EQ       	0 R3 K44 ; if R3 ~= 0.000000 then PC := 200
	196	[1677]	JMP      	200 ; PC := 200
	197	[1679]	GETGLOBAL	R3 K8 ; R3 := 0x0032441c
	198	[1679]	GETTABLE 	R3 R3 K45 ; R3 := R3["UITexture_BossNode"]
	199	[1679]	RETURN   	R3 2 ; return R3 
	200	[1681]	GETGLOBAL	R3 K8 ; R3 := 0x0032441c
	201	[1681]	GETTABLE 	R3 R3 K46 ; R3 := R3["UITexture_Invasion"]
	202	[1681]	RETURN   	R3 2 ; return R3 
	203	[1681]	JMP      	317 ; PC := 317
	204	[1682]	GETGLOBAL	R3 K13 ; R3 := _T
	205	[1682]	GETTABLE 	R3 R3 K47 ; R3 := R3["CachedActiveMissions"]
	206	[1682]	TEST     	R3 0 ; if not R3 then PC := 227
	207	[1682]	JMP      	227 ; PC := 227
	208	[1682]	GETGLOBAL	R3 K13 ; R3 := _T
	209	[1682]	GETTABLE 	R3 R3 K47 ; R3 := R3["CachedActiveMissions"]
	210	[1682]	GETTABLE 	R3 R3 R1 ; R3 := R3[R1]
	211	[1682]	TEST     	R3 0 ; if not R3 then PC := 227
	212	[1682]	JMP      	227 ; PC := 227
	213	[1682]	GETGLOBAL	R3 K17 ; R3 := 0x7b998233
	214	[1682]	GETGLOBAL	R4 K13 ; R4 := _T
	215	[1682]	GETTABLE 	R4 R4 K47 ; R4 := R4["CachedActiveMissions"]
	216	[1682]	GETTABLE 	R4 R4 R1 ; R4 := R4[R1]
	217	[1682]	GETTABLE 	R4 R4 K19 ; R4 := R4["mIcon"]
	218	[1682]	CALL     	R3 2 2 ; R3 := R3(R4)
	219	[1682]	TEST     	R3 1 ; if R3 then PC := 227
	220	[1682]	JMP      	227 ; PC := 227
	221	[1683]	GETGLOBAL	R3 K13 ; R3 := _T
	222	[1683]	GETTABLE 	R3 R3 K47 ; R3 := R3["CachedActiveMissions"]
	223	[1683]	GETTABLE 	R3 R3 R1 ; R3 := R3[R1]
	224	[1683]	GETTABLE 	R3 R3 K19 ; R3 := R3["mIcon"]
	225	[1683]	RETURN   	R3 2 ; return R3 
	226	[1683]	JMP      	317 ; PC := 317
	227	[1684]	GETGLOBAL	R3 K13 ; R3 := _T
	228	[1684]	GETTABLE 	R3 R3 K48 ; R3 := R3["CachedEliteAlertMissions"]
	229	[1684]	GETTABLE 	R3 R3 R1 ; R3 := R3[R1]
	230	[1684]	EQ       	1 R3 K26 ; if R3 == nil then PC := 248
	231	[1684]	JMP      	248 ; PC := 248
	232	[1684]	GETGLOBAL	R3 K13 ; R3 := _T
	233	[1684]	GETTABLE 	R3 R3 K48 ; R3 := R3["CachedEliteAlertMissions"]
	234	[1684]	GETTABLE 	R3 R3 R1 ; R3 := R3[R1]
	235	[1684]	GETTABLE 	R3 R3 K27 ; R3 := R3["mUnlocked"]
	236	[1684]	TEST     	R3 0 ; if not R3 then PC := 248
	237	[1684]	JMP      	248 ; PC := 248
	238	[1684]	GETGLOBAL	R3 K13 ; R3 := _T
	239	[1684]	GETTABLE 	R3 R3 K48 ; R3 := R3["CachedEliteAlertMissions"]
	240	[1684]	GETTABLE 	R3 R3 R1 ; R3 := R3[R1]
	241	[1684]	GETTABLE 	R3 R3 K28 ; R3 := R3["mShowInStarChart"]
	242	[1684]	TEST     	R3 0 ; if not R3 then PC := 248
	243	[1684]	JMP      	248 ; PC := 248
	244	[1685]	GETGLOBAL	R3 K8 ; R3 := 0x0032441c
	245	[1685]	GETTABLE 	R3 R3 K49 ; R3 := R3["UITexture_EliteAlert"]
	246	[1685]	RETURN   	R3 2 ; return R3 
	247	[1685]	JMP      	317 ; PC := 317
	248	[1686]	GETTABLE 	R3 R0 K50 ; R3 := R0["radialSector"]
	249	[1686]	GETTABLE 	R3 R3 K51 ; R3 := R3["mission"]
	250	[1686]	GETTABLE 	R3 R3 K42 ; R3 := R3["missionType"]
	251	[1686]	EQ       	0 R3 K44 ; if R3 ~= 0.000000 then PC := 257
	252	[1686]	JMP      	257 ; PC := 257
	253	[1687]	GETGLOBAL	R3 K8 ; R3 := 0x0032441c
	254	[1687]	GETTABLE 	R3 R3 K45 ; R3 := R3["UITexture_BossNode"]
	255	[1687]	RETURN   	R3 2 ; return R3 
	256	[1687]	JMP      	317 ; PC := 317
	257	[1688]	GETTABLE 	R3 R0 K50 ; R3 := R0["radialSector"]
	258	[1688]	GETTABLE 	R3 R3 K52 ; R3 := R3["nodeType"]
	259	[1688]	EQ       	0 R3 K53 ; if R3 ~= 2.000000 then PC := 265
	260	[1688]	JMP      	265 ; PC := 265
	261	[1689]	GETGLOBAL	R3 K8 ; R3 := 0x0032441c
	262	[1689]	GETTABLE 	R3 R3 K54 ; R3 := R3["UITexture_Pvp"]
	263	[1689]	RETURN   	R3 2 ; return R3 
	264	[1689]	JMP      	317 ; PC := 317
	265	[1690]	GETTABLE 	R3 R0 K50 ; R3 := R0["radialSector"]
	266	[1690]	GETTABLE 	R3 R3 K52 ; R3 := R3["nodeType"]
	267	[1690]	EQ       	0 R3 K55 ; if R3 ~= 4.000000 then PC := 273
	268	[1690]	JMP      	273 ; PC := 273
	269	[1691]	GETGLOBAL	R3 K8 ; R3 := 0x0032441c
	270	[1691]	GETTABLE 	R3 R3 K56 ; R3 := R3["UITexture_DefaultClan"]
	271	[1691]	RETURN   	R3 2 ; return R3 
	272	[1691]	JMP      	317 ; PC := 317
	273	[1692]	GETGLOBAL	R3 K13 ; R3 := _T
	274	[1692]	GETTABLE 	R3 R3 K57 ; R3 := R3["CachedHardModeDailyMissions"]
	275	[1692]	TEST     	R3 0 ; if not R3 then PC := 296
	276	[1692]	JMP      	296 ; PC := 296
	277	[1692]	GETGLOBAL	R3 K13 ; R3 := _T
	278	[1692]	GETTABLE 	R3 R3 K57 ; R3 := R3["CachedHardModeDailyMissions"]
	279	[1692]	GETTABLE 	R3 R3 R1 ; R3 := R3[R1]
	280	[1692]	TEST     	R3 0 ; if not R3 then PC := 296
	281	[1692]	JMP      	296 ; PC := 296
	282	[1692]	GETGLOBAL	R3 K13 ; R3 := _T
	283	[1692]	GETTABLE 	R3 R3 K57 ; R3 := R3["CachedHardModeDailyMissions"]
	284	[1692]	GETTABLE 	R3 R3 R1 ; R3 := R3[R1]
	285	[1692]	GETTABLE 	R3 R3 K58 ; R3 := R3["isVisible"]
	286	[1692]	TEST     	R3 0 ; if not R3 then PC := 296
	287	[1692]	JMP      	296 ; PC := 296
	288	[1692]	GETUPVAL 	R3 U3 ; R3 := U3
	289	[1692]	GETTABLE 	R3 R3 K59 ; R3 := R3["CurrentTier"]
	290	[1692]	LT       	0 K44 R3 ; if 0.000000 >= R3 then PC := 296
	291	[1692]	JMP      	296 ; PC := 296
	292	[1693]	GETGLOBAL	R3 K8 ; R3 := 0x0032441c
	293	[1693]	GETTABLE 	R3 R3 K20 ; R3 := R3["UITexture_Alert"]
	294	[1693]	RETURN   	R3 2 ; return R3 
	295	[1693]	JMP      	317 ; PC := 317
	296	[1694]	GETTABLE 	R3 R0 K50 ; R3 := R0["radialSector"]
	297	[1694]	GETTABLE 	R3 R3 K51 ; R3 := R3["mission"]
	298	[1694]	GETTABLE 	R3 R3 K42 ; R3 := R3["missionType"]
	299	[1694]	EQ       	0 R3 K60 ; if R3 ~= 28.000000 then PC := 317
	300	[1694]	JMP      	317 ; PC := 317
	301	[1695]	GETUPVAL 	R3 U0 ; R3 := U0
	302	[1695]	GETTABLE 	R3 R3 K16 ; R3 := R3[0x06d055f9]
	303	[1695]	GETTABLE 	R4 R0 K1 ; R4 := R0["name"]
	304	[1695]	GETUPVAL 	R5 U2 ; R5 := U2
	305	[1695]	GETTABLE 	R5 R5 K61 ; R5 := R5["APARTMENT_NODE_TAG"]
	306	[1695]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 309
	307	[1695]	JMP      	309 ; PC := 309
	308	[1695]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 309
	309	[1695]	OP_LOADBOOL	R4 1 0 ; R4 := true
	310	[1695]	GETGLOBAL	R5 K62 ; R5 := 0x084c01b7
	311	[1695]	GETGLOBAL	R6 K63 ; R6 := 0xd8d5ca36
	312	[1695]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	313	[1696]	MOVE     	R4 R3 ; R4 := R3
	314	[1696]	LOADK    	R5 := 56.000000
	315	[1696]	LOADK    	R6 := 2.000000
	316	[1696]	RETURN   	R4 4 ; return R4, R5, R6 
	317	[1698]	LOADNIL  	R4 R4 ; R4 := nil
	318	[1698]	RETURN   	R4 2 ; return R4 
	319	[1699]	RETURN   	R0 1 ; return 

function #45 <?:1701,1846> (366 instructions, 1464 bytes at 0000021137673E90)
0 params, 46 slots, 10 upvalues, 0 locals, 74 constants, 0 functions
	1	[1702]	GETGLOBAL	R0 K0 ; R0 := mSuperRegions
	2	[1702]	EQ       	1 R0 K1 ; if R0 == nil then PC := 19
	3	[1702]	JMP      	19 ; PC := 19
	4	[1703]	GETGLOBAL	R0 K2 ; R0 := 0xc8802016
	5	[1703]	GETGLOBAL	R1 K0 ; R1 := mSuperRegions
	6	[1703]	CALL     	R0 2 4 ; R0,R1,R2 := R0(R1)
	7	[1703]	JMP      	17 ; PC := 17
	8	[1704]	GETGLOBAL	R5 K3 ; R5 := 0x7b998233
	9	[1704]	GETTABLE 	R6 R4 K4 ; R6 := R4["instance"]
	10	[1704]	CALL     	R5 2 2 ; R5 := R5(R6)
	11	[1704]	TEST     	R5 1 ; if R5 then PC := 17
	12	[1704]	JMP      	17 ; PC := 17
	13	[1705]	GETGLOBAL	R5 K5 ; R5 := 0x1211d00f
	14	[1705]	SELF     	R5 R5 K6 ; R6 := R5; R5 := R5[0x59c96e77]
	15	[1705]	GETTABLE 	R7 R4 K4 ; R7 := R4["instance"]
	16	[1705]	CALL     	R5 3 1 ; R5(R6,R7)
	17	[1703]	TFORLOOP 	R0 2 ; R3,R4 := R0(R1,R2); if R3 ~= nil then begin PC = 8; R2 := R3 end
	18	[1706]	JMP      	8 ; PC := 8
	19	[1710]	LOADK    	R5 := 1.000000
	20	[1710]	GETGLOBAL	R6 K0 ; R6 := mSuperRegions
	21	[1710]	LEN      	R6 R6 ; R6 := # R6
	22	[1710]	LOADK    	R7 := 1.000000
	23	[1710]	FORPREP  	R5 61 ; R5 -= R7; PC := 61
	24	[1711]	GETGLOBAL	R9 K0 ; R9 := mSuperRegions
	25	[1711]	GETTABLE 	R9 R9 R8 ; R9 := R9[R8]
	26	[1712]	GETGLOBAL	R10 K7 ; R10 := 0x88efc25e
	27	[1712]	GETTABLE 	R11 R9 K8 ; R11 := R9["deco"]
	28	[1712]	CALL     	R10 2 2 ; R10 := R10(R11)
	29	[1713]	GETGLOBAL	R11 K9 ; R11 := 0xa421af95
	30	[1713]	GETTABLE 	R12 R9 K10 ; R12 := R9["pos"]
	31	[1713]	GETTABLE 	R12 R12 K11 ; R12 := R12["x"]
	32	[1713]	GETTABLE 	R13 R9 K10 ; R13 := R9["pos"]
	33	[1713]	GETTABLE 	R13 R13 K12 ; R13 := R13["y"]
	34	[1713]	GETTABLE 	R14 R9 K10 ; R14 := R9["pos"]
	35	[1713]	GETTABLE 	R14 R14 K13 ; R14 := R14["z"]
	36	[1713]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	37	[1715]	GETUPVAL 	R12 U0 ; R12 := U0
	38	[1715]	MOVE     	R13 R11 ; R13 := R11
	39	[1715]	CALL     	R12 2 2 ; R12 := R12(R13)
	40	[1715]	MOVE     	R11 R12 ; R11 := R12
	41	[1716]	SETTABLE 	R9 K10 R11 ; R9["pos"] := R11
	42	[1718]	GETGLOBAL	R12 K3 ; R12 := 0x7b998233
	43	[1718]	MOVE     	R13 R10 ; R13 := R10
	44	[1718]	CALL     	R12 2 2 ; R12 := R12(R13)
	45	[1718]	TEST     	R12 1 ; if R12 then PC := 58
	46	[1718]	JMP      	58 ; PC := 58
	47	[1719]	GETGLOBAL	R12 K5 ; R12 := 0x1211d00f
	48	[1719]	SELF     	R12 R12 K14 ; R13 := R12; R12 := R12[0x05909209]
	49	[1719]	MOVE     	R14 R10 ; R14 := R10
	50	[1719]	MOVE     	R15 R11 ; R15 := R11
	51	[1719]	GETGLOBAL	R16 K15 ; R16 := ZERO_ROTATION
	52	[1719]	CALL     	R12 5 2 ; R12 := R12(R13,R14,R15,R16)
	53	[1719]	SETTABLE 	R9 K4 R12 ; R9["instance"] := R12
	54	[1720]	GETTABLE 	R12 R9 K4 ; R12 := R9["instance"]
	55	[1720]	SELF     	R12 R12 K16 ; R13 := R12; R12 := R12[0x2d9ba74f]
	56	[1720]	GETTABLE 	R14 R9 K17 ; R14 := R9["scale"]
	57	[1720]	CALL     	R12 3 1 ; R12(R13,R14)
	58	[1723]	LOADNIL  	R12 R12 ; R12 := nil
	59	[1724]	GETGLOBAL	R13 K18 ; R13 := mSuperPoly
	60	[1724]	SETTABLE 	R13 R8 R12 ; R13[R8] := R12
	61	[1710]	FORLOOP  	R5 24 ; R5 += R7; if R5 <= R6 then begin PC := 24; R8 := R5 end
	62	[1731]	GETGLOBAL	R13 K5 ; R13 := 0x1211d00f
	63	[1731]	SELF     	R13 R13 K19 ; R14 := R13; R13 := R13[0x46a0ebf5]
	64	[1731]	GETUPVAL 	R15 U2 ; R15 := U2
	65	[1731]	GETTABLE 	R15 R15 K20 ; R15 := R15["STAR_CHART_ROOT"]
	66	[1731]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	67	[1731]	SETUPVAL 	R13 U1 ; U1 := R13
	68	[1733]	GETUPVAL 	R13 U1 ; R13 := U1
	69	[1733]	SELF     	R13 R13 K21 ; R14 := R13; R13 := R13[0x70b8836c]
	70	[1733]	GETGLOBAL	R15 K22 ; R15 := 0x00046924
	71	[1733]	LOADK    	R16 := 0.000000
	72	[1733]	LOADK    	R17 := 60.000000
	73	[1733]	LOADK    	R18 := 0.000000
	74	[1733]	CALL     	R15 4 0 ; R15,... := R15(R16,R17,R18)
	75	[1733]	CALL     	R13 0 1 ; R13(R14,...)
	76	[1735]	GETGLOBAL	R13 K5 ; R13 := 0x1211d00f
	77	[1735]	SELF     	R13 R13 K19 ; R14 := R13; R13 := R13[0x46a0ebf5]
	78	[1735]	GETUPVAL 	R15 U2 ; R15 := U2
	79	[1735]	GETTABLE 	R15 R15 K23 ; R15 := R15["PLAYER"]
	80	[1735]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	81	[1736]	GETGLOBAL	R14 K5 ; R14 := 0x1211d00f
	82	[1736]	SELF     	R14 R14 K19 ; R15 := R14; R14 := R14[0x46a0ebf5]
	83	[1736]	GETUPVAL 	R16 U2 ; R16 := U2
	84	[1736]	GETTABLE 	R16 R16 K24 ; R16 := R16["PLAYER_OPERATOR"]
	85	[1736]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	86	[1738]	GETGLOBAL	R15 K25 ; R15 := 0x89326c93
	87	[1738]	SELF     	R15 R15 K26 ; R16 := R15; R15 := R15[0x78298275]
	88	[1738]	CALL     	R15 2 2 ; R15 := R15(R16)
	89	[1740]	GETGLOBAL	R16 K27 ; R16 := 0x7ed0a956
	90	[1740]	LOADK    	R17 K28 ; R17 := "/Lotus/Types/Friendly/Tenno/OperatorHubAvatar"
	91	[1740]	CALL     	R16 2 2 ; R16 := R16(R17)
	92	[1743]	GETGLOBAL	R17 K27 ; R17 := 0x7ed0a956
	93	[1743]	LOADK    	R18 K29 ; R18 := "/Lotus/Types/Friendly/PlayerControllable/ControllableDrifterTennoAvatar"
	94	[1743]	CALL     	R17 2 2 ; R17 := R17(R18)
	95	[1745]	GETGLOBAL	R18 K3 ; R18 := 0x7b998233
	96	[1745]	MOVE     	R19 R15 ; R19 := R15
	97	[1745]	CALL     	R18 2 2 ; R18 := R18(R19)
	98	[1745]	TEST     	R18 1 ; if R18 then PC := 109
	99	[1745]	JMP      	109 ; PC := 109
	100	[1745]	SELF     	R18 R15 K30 ; R19 := R15; R18 := R15[0xf2deaf69]
	101	[1745]	MOVE     	R20 R16 ; R20 := R16
	102	[1745]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	103	[1745]	TEST     	R18 1 ; if R18 then PC := 111
	104	[1745]	JMP      	111 ; PC := 111
	105	[1745]	SELF     	R18 R15 K30 ; R19 := R15; R18 := R15[0xf2deaf69]
	106	[1745]	MOVE     	R20 R17 ; R20 := R17
	107	[1745]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	108	[1745]	JMP      	111 ; PC := 111
	109	[1745]	OP_LOADBOOL	R18 0 1 ; R18 := false; PC := 110
	110	[1745]	OP_LOADBOOL	R18 1 0 ; R18 := true
	111	[1746]	TESTSET  	R19 R18 0 ; if not R18 then PC := 116 else R19 := R18 
	112	[1746]	JMP      	116 ; PC := 116
	113	[1746]	SELF     	R19 R15 K30 ; R20 := R15; R19 := R15[0xf2deaf69]
	114	[1746]	MOVE     	R21 R17 ; R21 := R17
	115	[1746]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	116	[1747]	TEST     	R18 0 ; if not R18 then PC := 142
	117	[1747]	JMP      	142 ; PC := 142
	118	[1747]	TEST     	R19 1 ; if R19 then PC := 142
	119	[1747]	JMP      	142 ; PC := 142
	120	[1749]	GETGLOBAL	R20 K31 ; R20 := 0x76ea806b
	121	[1749]	SELF     	R20 R20 K32 ; R21 := R20; R20 := R20[0x3f3ae64c]
	122	[1749]	LOADK    	R22 := 0.000000
	123	[1749]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	124	[1750]	GETGLOBAL	R21 K3 ; R21 := 0x7b998233
	125	[1750]	MOVE     	R22 R20 ; R22 := R20
	126	[1750]	CALL     	R21 2 2 ; R21 := R21(R22)
	127	[1750]	TEST     	R21 1 ; if R21 then PC := 142
	128	[1750]	JMP      	142 ; PC := 142
	129	[1751]	SELF     	R21 R20 K33 ; R22 := R20; R21 := R20[0x80563238]
	130	[1751]	CALL     	R21 2 2 ; R21 := R21(R22)
	131	[1752]	GETGLOBAL	R22 K3 ; R22 := 0x7b998233
	132	[1752]	MOVE     	R23 R21 ; R23 := R21
	133	[1752]	CALL     	R22 2 2 ; R22 := R22(R23)
	134	[1752]	TEST     	R22 1 ; if R22 then PC := 142
	135	[1752]	JMP      	142 ; PC := 142
	136	[1753]	SELF     	R22 R21 K34 ; R23 := R21; R22 := R21[0x5963daba]
	137	[1753]	CALL     	R22 2 2 ; R22 := R22(R23)
	138	[1753]	EQ       	1 R22 K36 ; if R22 == 4.000000 then PC := 141
	139	[1753]	JMP      	141 ; PC := 141
	140	[1753]	OP_LOADBOOL	R19 0 1 ; R19 := false; PC := 141
	141	[1753]	OP_LOADBOOL	R19 1 0 ; R19 := true
	142	[1758]	TEST     	R18 0 ; if not R18 then PC := 156
	143	[1758]	JMP      	156 ; PC := 156
	144	[1758]	TEST     	R19 1 ; if R19 then PC := 156
	145	[1758]	JMP      	156 ; PC := 156
	146	[1759]	SETUPVAL 	R14 U3 ; U3 := R14
	147	[1760]	GETGLOBAL	R22 K3 ; R22 := 0x7b998233
	148	[1760]	MOVE     	R23 R13 ; R23 := R13
	149	[1760]	CALL     	R22 2 2 ; R22 := R22(R23)
	150	[1760]	TEST     	R22 1 ; if R22 then PC := 165
	151	[1760]	JMP      	165 ; PC := 165
	152	[1761]	SELF     	R22 R13 K37 ; R23 := R13; R22 := R13[0x768274d6]
	153	[1761]	OP_LOADBOOL	R24 0 0 ; R24 := false
	154	[1761]	CALL     	R22 3 1 ; R22(R23,R24)
	155	[1762]	JMP      	165 ; PC := 165
	156	[1764]	SETUPVAL 	R13 U3 ; U3 := R13
	157	[1765]	GETGLOBAL	R22 K3 ; R22 := 0x7b998233
	158	[1765]	MOVE     	R23 R14 ; R23 := R14
	159	[1765]	CALL     	R22 2 2 ; R22 := R22(R23)
	160	[1765]	TEST     	R22 1 ; if R22 then PC := 165
	161	[1765]	JMP      	165 ; PC := 165
	162	[1766]	SELF     	R22 R14 K37 ; R23 := R14; R22 := R14[0x768274d6]
	163	[1766]	OP_LOADBOOL	R24 0 0 ; R24 := false
	164	[1766]	CALL     	R22 3 1 ; R22(R23,R24)
	165	[1770]	TEST     	R18 0 ; if not R18 then PC := 177
	166	[1770]	JMP      	177 ; PC := 177
	167	[1770]	GETGLOBAL	R22 K3 ; R22 := 0x7b998233
	168	[1770]	GETUPVAL 	R23 U3 ; R23 := U3
	169	[1770]	CALL     	R22 2 2 ; R22 := R22(R23)
	170	[1770]	TEST     	R22 1 ; if R22 then PC := 177
	171	[1770]	JMP      	177 ; PC := 177
	172	[1771]	GETUPVAL 	R22 U4 ; R22 := U4
	173	[1771]	GETTABLE 	R22 R22 K38 ; R22 := R22[0x18ea51f7]
	174	[1771]	GETUPVAL 	R23 U3 ; R23 := U3
	175	[1771]	MOVE     	R24 R15 ; R24 := R15
	176	[1771]	CALL     	R22 3 1 ; R22(R23,R24)
	177	[1774]	GETGLOBAL	R22 K3 ; R22 := 0x7b998233
	178	[1774]	MOVE     	R23 R15 ; R23 := R15
	179	[1774]	CALL     	R22 2 2 ; R22 := R22(R23)
	180	[1774]	TEST     	R22 1 ; if R22 then PC := 197
	181	[1774]	JMP      	197 ; PC := 197
	182	[1775]	SELF     	R22 R15 K39 ; R23 := R15; R22 := R15[0xde321e6f]
	183	[1775]	CALL     	R22 2 2 ; R22 := R22(R23)
	184	[1775]	SELF     	R22 R22 K40 ; R23 := R22; R22 := R22[0xf7d48ee0]
	185	[1775]	CALL     	R22 2 2 ; R22 := R22(R23)
	186	[1776]	GETGLOBAL	R23 K3 ; R23 := 0x7b998233
	187	[1776]	MOVE     	R24 R22 ; R24 := R22
	188	[1776]	CALL     	R23 2 2 ; R23 := R23(R24)
	189	[1776]	TEST     	R23 1 ; if R23 then PC := 197
	190	[1776]	JMP      	197 ; PC := 197
	191	[1777]	SELF     	R23 R22 K41 ; R24 := R22; R23 := R22[0xbc4ebb44]
	192	[1777]	GETGLOBAL	R25 K42 ; R25 := 0x0469f296
	193	[1777]	LOADK    	R26 K43 ; R26 := "KneelIdle"
	194	[1777]	CALL     	R25 2 0 ; R25,... := R25(R26)
	195	[1777]	CALL     	R23 0 2 ; R23 := R23(R24,...)
	196	[1777]	SETUPVAL 	R23 U5 ; U5 := R23
	197	[1781]	GETUPVAL 	R23 U5 ; R23 := U5
	198	[1781]	TEST     	R23 1 ; if R23 then PC := 202
	199	[1781]	JMP      	202 ; PC := 202
	200	[1782]	GETGLOBAL	R23 K44 ; R23 := 0xa4bb8f34
	201	[1782]	SETUPVAL 	R23 U5 ; U5 := R23
	202	[1785]	GETGLOBAL	R23 K3 ; R23 := 0x7b998233
	203	[1785]	GETUPVAL 	R24 U3 ; R24 := U3
	204	[1785]	CALL     	R23 2 2 ; R23 := R23(R24)
	205	[1785]	TEST     	R23 1 ; if R23 then PC := 218
	206	[1785]	JMP      	218 ; PC := 218
	207	[1786]	GETUPVAL 	R23 U3 ; R23 := U3
	208	[1786]	SELF     	R23 R23 K45 ; R24 := R23; R23 := R23[0xc5561de4]
	209	[1786]	OP_LOADBOOL	R25 1 0 ; R25 := true
	210	[1786]	CALL     	R23 3 1 ; R23(R24,R25)
	211	[1787]	GETUPVAL 	R23 U3 ; R23 := U3
	212	[1787]	SELF     	R23 R23 K37 ; R24 := R23; R23 := R23[0x768274d6]
	213	[1787]	GETGLOBAL	R25 K46 ; R25 := mRailJack
	214	[1787]	GETTABLE 	R25 R25 K47 ; R25 := R25["Active"]
	215	[1787]	NOT      	R25 R25 ; R25 := not R25
	216	[1787]	OP_LOADBOOL	R26 1 0 ; R26 := true
	217	[1787]	CALL     	R23 4 1 ; R23(R24,R25,R26)
	218	[1790]	GETGLOBAL	R23 K5 ; R23 := 0x1211d00f
	219	[1790]	SELF     	R23 R23 K19 ; R24 := R23; R23 := R23[0x46a0ebf5]
	220	[1790]	GETUPVAL 	R25 U2 ; R25 := U2
	221	[1790]	GETTABLE 	R25 R25 K48 ; R25 := R25["PLAYER_LIGHT"]
	222	[1790]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	223	[1790]	SETUPVAL 	R23 U6 ; U6 := R23
	224	[1791]	GETGLOBAL	R23 K3 ; R23 := 0x7b998233
	225	[1791]	GETUPVAL 	R24 U6 ; R24 := U6
	226	[1791]	CALL     	R23 2 2 ; R23 := R23(R24)
	227	[1791]	TEST     	R23 1 ; if R23 then PC := 233
	228	[1791]	JMP      	233 ; PC := 233
	229	[1792]	GETUPVAL 	R23 U6 ; R23 := U6
	230	[1792]	SELF     	R23 R23 K49 ; R24 := R23; R23 := R23[0x5d10207d]
	231	[1792]	CALL     	R23 2 2 ; R23 := R23(R24)
	232	[1792]	SETUPVAL 	R23 U7 ; U7 := R23
	233	[1795]	GETGLOBAL	R23 K3 ; R23 := 0x7b998233
	234	[1795]	GETUPVAL 	R24 U3 ; R24 := U3
	235	[1795]	CALL     	R23 2 2 ; R23 := R23(R24)
	236	[1795]	TEST     	R23 1 ; if R23 then PC := 252
	237	[1795]	JMP      	252 ; PC := 252
	238	[1796]	GETUPVAL 	R23 U3 ; R23 := U3
	239	[1796]	SELF     	R23 R23 K50 ; R24 := R23; R23 := R23[0xd1586535]
	240	[1796]	CALL     	R23 2 2 ; R23 := R23(R24)
	241	[1796]	SETUPVAL 	R23 U8 ; U8 := R23
	242	[1797]	GETGLOBAL	R23 K51 ; R23 := mPlayerPos
	243	[1797]	GETUPVAL 	R24 U3 ; R24 := U3
	244	[1797]	SELF     	R24 R24 K50 ; R25 := R24; R24 := R24[0xd1586535]
	245	[1797]	CALL     	R24 2 2 ; R24 := R24(R25)
	246	[1797]	SETTABLE 	R23 K52 R24 ; R23["Previous"] := R24
	247	[1798]	GETGLOBAL	R23 K51 ; R23 := mPlayerPos
	248	[1798]	GETUPVAL 	R24 U3 ; R24 := U3
	249	[1798]	SELF     	R24 R24 K50 ; R25 := R24; R24 := R24[0xd1586535]
	250	[1798]	CALL     	R24 2 2 ; R24 := R24(R25)
	251	[1798]	SETTABLE 	R23 K53 R24 ; R23["Target"] := R24
	252	[1803]	GETGLOBAL	R23 K51 ; R23 := mPlayerPos
	253	[1803]	TEST     	R23 0 ; if not R23 then PC := 274
	254	[1803]	JMP      	274 ; PC := 274
	255	[1803]	GETGLOBAL	R23 K51 ; R23 := mPlayerPos
	256	[1803]	GETTABLE 	R23 R23 K52 ; R23 := R23["Previous"]
	257	[1803]	TEST     	R23 0 ; if not R23 then PC := 274
	258	[1803]	JMP      	274 ; PC := 274
	259	[1804]	GETUPVAL 	R23 U6 ; R23 := U6
	260	[1804]	SELF     	R23 R23 K54 ; R24 := R23; R23 := R23[0xe29e950d]
	261	[1804]	LOADK    	R25 := 2.000000
	262	[1804]	CALL     	R23 3 1 ; R23(R24,R25)
	263	[1805]	GETUPVAL 	R23 U6 ; R23 := U6
	264	[1805]	SELF     	R23 R23 K55 ; R24 := R23; R23 := R23[0x9307aa51]
	265	[1805]	GETGLOBAL	R25 K51 ; R25 := mPlayerPos
	266	[1805]	GETTABLE 	R25 R25 K52 ; R25 := R25["Previous"]
	267	[1805]	GETGLOBAL	R26 K9 ; R26 := 0xa421af95
	268	[1805]	LOADK    	R27 := 0.000000
	269	[1805]	LOADK    	R28 := 0.500000
	270	[1805]	LOADK    	R29 := -0.500000
	271	[1805]	CALL     	R26 4 2 ; R26 := R26(R27,R28,R29)
	272	[1805]	ADD      	R25 R25 R26 ; R25 := R25 + R26
	273	[1805]	CALL     	R23 3 1 ; R23(R24,R25)
	274	[1810]	LOADK    	R23 := 1.000000
	275	[1810]	LOADK    	R24 := 9.000000
	276	[1810]	LOADK    	R25 := 1.000000
	277	[1810]	FORPREP  	R23 301 ; R23 -= R25; PC := 301
	278	[1811]	GETUPVAL 	R27 U1 ; R27 := U1
	279	[1811]	SELF     	R27 R27 K56 ; R28 := R27; R27 := R27[0x47901f07]
	280	[1811]	GETGLOBAL	R29 K57 ; R29 := 0x6c5c6741
	281	[1811]	GETGLOBAL	R30 K58 ; R30 := EMPTY_SYMBOL
	282	[1811]	GETGLOBAL	R31 K59 ; R31 := ZERO_VECTOR
	283	[1811]	GETUPVAL 	R32 U9 ; R32 := U9
	284	[1811]	GETTABLE 	R32 R32 K60 ; R32 := R32["RING_ROTATION"]
	285	[1811]	CALL     	R27 6 2 ; R27 := R27(R28,R29,R30,R31,R32)
	286	[1812]	GETGLOBAL	R28 K3 ; R28 := 0x7b998233
	287	[1812]	MOVE     	R29 R27 ; R29 := R27
	288	[1812]	CALL     	R28 2 2 ; R28 := R28(R29)
	289	[1812]	TEST     	R28 1 ; if R28 then PC := 301
	290	[1812]	JMP      	301 ; PC := 301
	291	[1813]	GETGLOBAL	R28 K61 ; R28 := 0x5bced4c4
	292	[1813]	GETTABLE 	R28 R28 K62 ; R28 := R28[0xa40531d8]
	293	[1813]	MOVE     	R29 R26 ; R29 := R26
	294	[1813]	LOADK    	R30 := 1.500000
	295	[1813]	CALL     	R28 3 2 ; R28 := R28(R29,R30)
	296	[1813]	MUL      	R28 R28 K63 ; R28 := R28 * 0.200000
	297	[1814]	SELF     	R29 R27 K64 ; R30 := R27; R29 := R27[0x1b50cf3b]
	298	[1814]	MOVE     	R31 R28 ; R31 := R28
	299	[1814]	MOVE     	R32 R28 ; R32 := R28
	300	[1814]	CALL     	R29 4 1 ; R29(R30,R31,R32)
	301	[1810]	FORLOOP  	R23 278 ; R23 += R25; if R23 <= R24 then begin PC := 278; R26 := R23 end
	302	[1821]	LOADK    	R29 := 8.000000
	303	[1822]	LOADK    	R30 := 1.000000
	304	[1822]	MOVE     	R31 R29 ; R31 := R29
	305	[1822]	LOADK    	R32 := 1.000000
	306	[1822]	FORPREP  	R30 347 ; R30 -= R32; PC := 347
	307	[1823]	GETGLOBAL	R34 K5 ; R34 := 0x1211d00f
	308	[1823]	SELF     	R34 R34 K14 ; R35 := R34; R34 := R34[0x05909209]
	309	[1823]	GETGLOBAL	R36 K65 ; R36 := 0x8edd4efd
	310	[1823]	GETGLOBAL	R37 K59 ; R37 := ZERO_VECTOR
	311	[1823]	GETGLOBAL	R38 K15 ; R38 := ZERO_ROTATION
	312	[1823]	CALL     	R34 5 2 ; R34 := R34(R35,R36,R37,R38)
	313	[1825]	DIV      	R35 R33 R29 ; R35 := R33 / R29
	314	[1825]	DIV      	R35 R35 K66 ; R35 := R35 / 2.000000
	315	[1826]	LOADK    	R36 := 7.000000
	316	[1827]	GETGLOBAL	R37 K61 ; R37 := 0x5bced4c4
	317	[1827]	GETTABLE 	R37 R37 K67 ; R37 := R37[0x00fa6bf1]
	318	[1827]	GETGLOBAL	R38 K68 ; R38 := 0x107bf6da
	319	[1827]	MOVE     	R39 R35 ; R39 := R35
	320	[1827]	CALL     	R38 2 2 ; R38 := R38(R39)
	321	[1827]	MUL      	R38 K69 R38 ; R38 := 6.283185 * R38
	322	[1827]	CALL     	R37 2 2 ; R37 := R37(R38)
	323	[1827]	MUL      	R37 R37 R36 ; R37 := R37 * R36
	324	[1828]	GETGLOBAL	R38 K61 ; R38 := 0x5bced4c4
	325	[1828]	GETTABLE 	R38 R38 K70 ; R38 := R38[0x3eda26fc]
	326	[1828]	GETGLOBAL	R39 K68 ; R39 := 0x107bf6da
	327	[1828]	MOVE     	R40 R35 ; R40 := R35
	328	[1828]	CALL     	R39 2 2 ; R39 := R39(R40)
	329	[1828]	MUL      	R39 K69 R39 ; R39 := 6.283185 * R39
	330	[1828]	CALL     	R38 2 2 ; R38 := R38(R39)
	331	[1828]	MUL      	R38 R38 R36 ; R38 := R38 * R36
	332	[1829]	NEWTABLE 	R39 1 0 ; R39 := {}
	333	[1829]	GETGLOBAL	R40 K9 ; R40 := 0xa421af95
	334	[1829]	UNM      	R41 R37 ; R41 := ^ R37
	335	[1829]	UNM      	R42 R38 ; R42 := ^ R38
	336	[1829]	LOADK    	R43 := 0.000000
	337	[1829]	CALL     	R40 4 2 ; R40 := R40(R41,R42,R43)
	338	[1829]	GETGLOBAL	R41 K9 ; R41 := 0xa421af95
	339	[1829]	MOVE     	R42 R37 ; R42 := R37
	340	[1829]	MOVE     	R43 R38 ; R43 := R38
	341	[1829]	LOADK    	R44 := 0.000000
	342	[1829]	CALL     	R41 4 0 ; R41,... := R41(R42,R43,R44)
	343	[1829]	SETLIST  	R39 0 1 ; R39[(1-1)*FPF+i] := R(39+i), 1 <= i <= 0
	344	[1831]	SELF     	R40 R34 K71 ; R41 := R34; R40 := R34[0x7ceafc23]
	345	[1831]	MOVE     	R42 R39 ; R42 := R39
	346	[1831]	CALL     	R40 3 1 ; R40(R41,R42)
	347	[1822]	FORLOOP  	R30 307 ; R30 += R32; if R30 <= R31 then begin PC := 307; R33 := R30 end
	348	[1836]	GETGLOBAL	R40 K46 ; R40 := mRailJack
	349	[1836]	GETTABLE 	R40 R40 K47 ; R40 := R40["Active"]
	350	[1836]	TEST     	R40 0 ; if not R40 then PC := 366
	351	[1836]	JMP      	366 ; PC := 366
	352	[1837]	GETGLOBAL	R40 K3 ; R40 := 0x7b998233
	353	[1837]	GETUPVAL 	R41 U1 ; R41 := U1
	354	[1837]	CALL     	R40 2 2 ; R40 := R40(R41)
	355	[1837]	TEST     	R40 1 ; if R40 then PC := 366
	356	[1837]	JMP      	366 ; PC := 366
	357	[1838]	GETUPVAL 	R40 U1 ; R40 := U1
	358	[1840]	SELF     	R41 R40 K72 ; R42 := R40; R41 := R40[0xc1595bd5]
	359	[1840]	GETGLOBAL	R43 K73 ; R43 := gEntityType
	360	[1840]	CALL     	R41 3 2 ; R41 := R41(R42,R43)
	361	[1841]	LOADK    	R42 := 1.000000
	362	[1841]	LEN      	R43 R41 ; R43 := # R41
	363	[1841]	LOADK    	R44 := 1.000000
	364	[1841]	FORPREP  	R42 365 ; R42 -= R44; PC := 365
	365	[1841]	FORLOOP  	R42 365 ; R42 += R44; if R42 <= R43 then begin PC := 365; R45 := R42 end
	366	[1846]	RETURN   	R0 1 ; return 

function #46 <?:1848,1858> (46 instructions, 184 bytes at 00000211141E11F0)
1 param, 10 slots, 0 upvalues, 0 locals, 15 constants, 0 functions
	1	[1849]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[1849]	GETGLOBAL	R2 K1 ; R2 := 0xbe190284
	3	[1849]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[1849]	TEST     	R1 1 ; if R1 then PC := 46
	5	[1849]	JMP      	46 ; PC := 46
	6	[1849]	GETGLOBAL	R1 K2 ; R1 := _T
	7	[1849]	GETTABLE 	R1 R1 K3 ; R1 := R1["FortressLocation"]
	8	[1849]	GETTABLE 	R1 R1 K4 ; R1 := R1["Initialized"]
	9	[1849]	EQ       	0 R1 K5 ; if R1 ~= false then PC := 46
	10	[1849]	JMP      	46 ; PC := 46
	11	[1850]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	12	[1850]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x67b221fa]
	13	[1850]	CALL     	R1 2 2 ; R1 := R1(R2)
	14	[1851]	GETGLOBAL	R2 K2 ; R2 := _T
	15	[1851]	GETTABLE 	R2 R2 K3 ; R2 := R2["FortressLocation"]
	16	[1851]	GETTABLE 	R2 R2 K7 ; R2 := R2["Velocity"]
	17	[1851]	DIV      	R2 K8 R2 ; R2 := 1.000000 / R2
	18	[1852]	GETGLOBAL	R3 K2 ; R3 := _T
	19	[1852]	GETTABLE 	R3 R3 K3 ; R3 := R3["FortressLocation"]
	20	[1852]	GETTABLE 	R3 R3 K9 ; R3 := R3["MaxSplines"]
	21	[1852]	MUL      	R3 R2 R3 ; R3 := R2 * R3
	22	[1852]	MOD      	R3 R1 R3 ; R3 := R1 % R3
	23	[1853]	GETGLOBAL	R4 K10 ; R4 := 0x5bced4c4
	24	[1853]	GETTABLE 	R4 R4 K11 ; R4 := R4[0x55f27c30]
	25	[1853]	DIV      	R5 R3 R2 ; R5 := R3 / R2
	26	[1853]	CALL     	R4 2 2 ; R4 := R4(R5)
	27	[1853]	ADD      	R4 K8 R4 ; R4 := 1.000000 + R4
	28	[1854]	GETGLOBAL	R5 K2 ; R5 := _T
	29	[1854]	GETTABLE 	R5 R5 K3 ; R5 := R5["FortressLocation"]
	30	[1854]	GETGLOBAL	R6 K13 ; R6 := 0x42dcc9f5
	31	[1854]	MOVE     	R7 R4 ; R7 := R4
	32	[1854]	LOADK    	R8 := 1.000000
	33	[1854]	GETGLOBAL	R9 K2 ; R9 := _T
	34	[1854]	GETTABLE 	R9 R9 K3 ; R9 := R9["FortressLocation"]
	35	[1854]	GETTABLE 	R9 R9 K9 ; R9 := R9["MaxSplines"]
	36	[1854]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	37	[1854]	SETTABLE 	R5 K12 R6 ; R5["SplineIndex"] := R6
	38	[1855]	GETGLOBAL	R5 K2 ; R5 := _T
	39	[1855]	GETTABLE 	R5 R5 K3 ; R5 := R5["FortressLocation"]
	40	[1855]	MOD      	R6 R3 R2 ; R6 := R3 % R2
	41	[1855]	DIV      	R6 R6 R2 ; R6 := R6 / R2
	42	[1855]	SETTABLE 	R5 K14 R6 ; R5["Progress"] := R6
	43	[1856]	GETGLOBAL	R5 K2 ; R5 := _T
	44	[1856]	GETTABLE 	R5 R5 K3 ; R5 := R5["FortressLocation"]
	45	[1856]	SETTABLE 	R5 K4 R0 ; R5["Initialized"] := R0
	46	[1858]	RETURN   	R0 1 ; return 

function #47 <?:1860,1976> (364 instructions, 1456 bytes at 00000211141E1520)
0 params, 56 slots, 9 upvalues, 0 locals, 83 constants, 0 functions
	1	[1861]	GETGLOBAL	R0 K0 ; R0 := mRegionLabels
	2	[1861]	EQ       	1 R0 K1 ; if R0 == nil then PC := 13
	3	[1861]	JMP      	13 ; PC := 13
	4	[1862]	GETGLOBAL	R0 K2 ; R0 := 0xc8802016
	5	[1862]	GETGLOBAL	R1 K0 ; R1 := mRegionLabels
	6	[1862]	CALL     	R0 2 4 ; R0,R1,R2 := R0(R1)
	7	[1862]	JMP      	11 ; PC := 11
	8	[1863]	GETUPVAL 	R5 U0 ; R5 := U0
	9	[1863]	MOVE     	R6 R4 ; R6 := R4
	10	[1863]	CALL     	R5 2 1 ; R5(R6)
	11	[1862]	TFORLOOP 	R0 2 ; R3,R4 := R0(R1,R2); if R3 ~= nil then begin PC = 8; R2 := R3 end
	12	[1863]	JMP      	8 ; PC := 8
	13	[1867]	NEWTABLE 	R5 0 0 ; R5 := {}
	14	[1867]	SETGLOBALHASH	R5 K0 ; mRegionLabels := R5
	15	[1868]	NEWTABLE 	R5 0 0 ; R5 := {}
	16	[1868]	SETGLOBALHASH	R5 K3 ; mRegionInstances := R5
	17	[1869]	NEWTABLE 	R5 0 0 ; R5 := {}
	18	[1869]	SETUPVAL 	R5 U1 ; U1 := R5
	19	[1871]	LOADK    	R5 := 1.000000
	20	[1871]	GETGLOBAL	R6 K4 ; R6 := mRegions
	21	[1871]	LEN      	R6 R6 ; R6 := # R6
	22	[1871]	LOADK    	R7 := 1.000000
	23	[1871]	FORPREP  	R5 363 ; R5 -= R7; PC := 363
	24	[1872]	GETGLOBAL	R9 K5 ; R9 := 0xce225efa
	25	[1872]	LOADK    	R10 := 0.000000
	26	[1872]	CALL     	R9 2 1 ; R9(R10)
	27	[1874]	GETGLOBAL	R9 K4 ; R9 := mRegions
	28	[1874]	GETTABLE 	R9 R9 R8 ; R9 := R9[R8]
	29	[1875]	GETGLOBAL	R10 K6 ; R10 := 0x88efc25e
	30	[1875]	GETTABLE 	R11 R9 K7 ; R11 := R9["decoRedux"]
	31	[1875]	CALL     	R10 2 2 ; R10 := R10(R11)
	32	[1876]	GETTABLE 	R11 R9 K8 ; R11 := R9["name"]
	33	[1876]	GETUPVAL 	R12 U2 ; R12 := U2
	34	[1876]	GETTABLE 	R12 R12 K9 ; R12 := R12["Tag"]
	35	[1876]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 38
	36	[1876]	JMP      	38 ; PC := 38
	37	[1876]	OP_LOADBOOL	R11 0 1 ; R11 := false; PC := 38
	38	[1876]	OP_LOADBOOL	R11 1 0 ; R11 := true
	39	[1878]	GETGLOBAL	R12 K10 ; R12 := 0x7b998233
	40	[1878]	MOVE     	R13 R10 ; R13 := R10
	41	[1878]	CALL     	R12 2 2 ; R12 := R12(R13)
	42	[1878]	TEST     	R12 0 ; if not R12 then PC := 48
	43	[1878]	JMP      	48 ; PC := 48
	44	[1879]	GETGLOBAL	R12 K6 ; R12 := 0x88efc25e
	45	[1879]	GETTABLE 	R13 R9 K11 ; R13 := R9["deco"]
	46	[1879]	CALL     	R12 2 2 ; R12 := R12(R13)
	47	[1879]	MOVE     	R10 R12 ; R10 := R12
	48	[1885]	TEST     	R11 0 ; if not R11 then PC := 203
	49	[1885]	JMP      	203 ; PC := 203
	50	[1886]	GETUPVAL 	R12 U2 ; R12 := U2
	51	[1886]	SETTABLE 	R12 K12 R9 ; R12["Region"] := R9
	52	[1888]	GETUPVAL 	R12 U2 ; R12 := U2
	53	[1888]	GETTABLE 	R12 R12 K13 ; R12 := R12["SplinePoints"]
	54	[1889]	LOADNIL  	R13 R13 ; R13 := nil
	55	[1891]	LOADK    	R14 := 1.000000
	56	[1891]	LEN      	R15 R12 ; R15 := # R12
	57	[1891]	SUB      	R15 R15 K14 ; R15 := R15 - 3.000000
	58	[1891]	LOADK    	R16 := 1.000000
	59	[1891]	FORPREP  	R14 113 ; R14 -= R16; PC := 113
	60	[1892]	GETGLOBAL	R18 K10 ; R18 := 0x7b998233
	61	[1892]	GETUPVAL 	R19 U2 ; R19 := U2
	62	[1892]	GETTABLE 	R19 R19 K15 ; R19 := R19["Splines"]
	63	[1892]	GETTABLE 	R19 R19 R17 ; R19 := R19[R17]
	64	[1892]	CALL     	R18 2 2 ; R18 := R18(R19)
	65	[1892]	TEST     	R18 1 ; if R18 then PC := 73
	66	[1892]	JMP      	73 ; PC := 73
	67	[1893]	GETGLOBAL	R18 K16 ; R18 := 0x1211d00f
	68	[1893]	SELF     	R18 R18 K17 ; R19 := R18; R18 := R18[0x59c96e77]
	69	[1893]	GETUPVAL 	R20 U2 ; R20 := U2
	70	[1893]	GETTABLE 	R20 R20 K15 ; R20 := R20["Splines"]
	71	[1893]	GETTABLE 	R20 R20 R17 ; R20 := R20[R17]
	72	[1893]	CALL     	R18 3 1 ; R18(R19,R20)
	73	[1895]	GETGLOBAL	R18 K16 ; R18 := 0x1211d00f
	74	[1895]	SELF     	R18 R18 K18 ; R19 := R18; R18 := R18[0x05909209]
	75	[1895]	GETGLOBAL	R20 K19 ; R20 := 0x1e444be7
	76	[1895]	GETGLOBAL	R21 K20 ; R21 := ZERO_VECTOR
	77	[1895]	GETGLOBAL	R22 K21 ; R22 := ZERO_ROTATION
	78	[1895]	CALL     	R18 5 2 ; R18 := R18(R19,R20,R21,R22)
	79	[1895]	MOVE     	R13 R18 ; R13 := R18
	80	[1896]	GETUPVAL 	R18 U2 ; R18 := U2
	81	[1896]	GETTABLE 	R18 R18 K15 ; R18 := R18["Splines"]
	82	[1896]	SETTABLE 	R18 R17 R13 ; R18[R17] := R13
	83	[1897]	NEWTABLE 	R18 4 0 ; R18 := {}
	84	[1897]	GETTABLE 	R19 R12 R17 ; R19 := R12[R17]
	85	[1897]	ADD      	R20 R17 K22 ; R20 := R17 + 1.000000
	86	[1897]	GETTABLE 	R20 R12 R20 ; R20 := R12[R20]
	87	[1897]	ADD      	R21 R17 K23 ; R21 := R17 + 2.000000
	88	[1897]	GETTABLE 	R21 R12 R21 ; R21 := R12[R21]
	89	[1897]	ADD      	R22 R17 K14 ; R22 := R17 + 3.000000
	90	[1897]	GETTABLE 	R22 R12 R22 ; R22 := R12[R22]
	91	[1897]	SETLIST  	R18 4 1 ; R18[(1-1)*FPF+i] := R(18+i), 1 <= i <= 4
	92	[1898]	SELF     	R19 R13 K24 ; R20 := R13; R19 := R13[0x7ceafc23]
	93	[1898]	MOVE     	R21 R18 ; R21 := R18
	94	[1898]	CALL     	R19 3 1 ; R19(R20,R21)
	95	[1899]	SELF     	R19 R13 K25 ; R20 := R13; R19 := R13[0xc2b4e597]
	96	[1899]	GETGLOBAL	R21 K26 ; R21 := 0x60130201
	97	[1899]	LOADK    	R22 := 0.000000
	98	[1899]	LOADK    	R23 := 255.000000
	99	[1899]	LOADK    	R24 := 0.000000
	100	[1899]	LOADK    	R25 := 255.000000
	101	[1899]	CALL     	R21 5 0 ; R21,... := R21(R22,R23,R24,R25)
	102	[1899]	CALL     	R19 0 1 ; R19(R20,...)
	103	[1900]	SELF     	R19 R13 K27 ; R20 := R13; R19 := R13[0xecfaed95]
	104	[1900]	GETGLOBAL	R21 K28 ; R21 := 0xb7cbd06b
	105	[1900]	LOADK    	R22 := 0.000000
	106	[1900]	LOADK    	R23 := 30.000000
	107	[1900]	CALL     	R21 3 0 ; R21,... := R21(R22,R23)
	108	[1900]	CALL     	R19 0 1 ; R19(R20,...)
	109	[1901]	SELF     	R19 R13 K29 ; R20 := R13; R19 := R13[0x768274d6]
	110	[1901]	OP_LOADBOOL	R21 0 0 ; R21 := false
	111	[1901]	OP_LOADBOOL	R22 1 0 ; R22 := true
	112	[1901]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	113	[1891]	FORLOOP  	R14 60 ; R14 += R16; if R14 <= R15 then begin PC := 60; R17 := R14 end
	114	[1903]	GETGLOBAL	R19 K30 ; R19 := _T
	115	[1903]	GETTABLE 	R19 R19 K31 ; R19 := R19["FortressLocation"]
	116	[1903]	GETUPVAL 	R20 U2 ; R20 := U2
	117	[1903]	GETTABLE 	R20 R20 K15 ; R20 := R20["Splines"]
	118	[1903]	LEN      	R20 R20 ; R20 := # R20
	119	[1903]	SETTABLE 	R19 K32 R20 ; R19["MaxSplines"] := R20
	120	[1904]	GETUPVAL 	R19 U2 ; R19 := U2
	121	[1904]	GETGLOBAL	R20 K30 ; R20 := _T
	122	[1904]	GETTABLE 	R20 R20 K31 ; R20 := R20["FortressLocation"]
	123	[1904]	GETTABLE 	R20 R20 K32 ; R20 := R20["MaxSplines"]
	124	[1904]	GETUPVAL 	R21 U2 ; R21 := U2
	125	[1904]	GETTABLE 	R21 R21 K34 ; R21 := R21["LoopTime"]
	126	[1904]	DIV      	R20 R20 R21 ; R20 := R20 / R21
	127	[1904]	SETTABLE 	R19 K33 R20 ; R19["Velocity"] := R20
	128	[1905]	GETGLOBAL	R19 K30 ; R19 := _T
	129	[1905]	GETTABLE 	R19 R19 K31 ; R19 := R19["FortressLocation"]
	130	[1905]	GETUPVAL 	R20 U2 ; R20 := U2
	131	[1905]	GETTABLE 	R20 R20 K33 ; R20 := R20["Velocity"]
	132	[1905]	SETTABLE 	R19 K33 R20 ; R19["Velocity"] := R20
	133	[1907]	GETGLOBAL	R19 K10 ; R19 := 0x7b998233
	134	[1907]	GETGLOBAL	R20 K35 ; R20 := 0x25d99d89
	135	[1907]	CALL     	R19 2 2 ; R19 := R19(R20)
	136	[1907]	TEST     	R19 1 ; if R19 then PC := 141
	137	[1907]	JMP      	141 ; PC := 141
	138	[1908]	GETUPVAL 	R19 U3 ; R19 := U3
	139	[1908]	OP_LOADBOOL	R20 1 0 ; R20 := true
	140	[1908]	CALL     	R19 2 1 ; R19(R20)
	141	[1911]	GETUPVAL 	R19 U2 ; R19 := U2
	142	[1911]	GETTABLE 	R19 R19 K15 ; R19 := R19["Splines"]
	143	[1911]	GETGLOBAL	R20 K30 ; R20 := _T
	144	[1911]	GETTABLE 	R20 R20 K31 ; R20 := R20["FortressLocation"]
	145	[1911]	GETTABLE 	R20 R20 K36 ; R20 := R20["SplineIndex"]
	146	[1911]	GETTABLE 	R19 R19 R20 ; R19 := R19[R20]
	147	[1911]	SELF     	R19 R19 K37 ; R20 := R19; R19 := R19[0x7482ae82]
	148	[1911]	GETGLOBAL	R21 K30 ; R21 := _T
	149	[1911]	GETTABLE 	R21 R21 K31 ; R21 := R21["FortressLocation"]
	150	[1911]	GETTABLE 	R21 R21 K38 ; R21 := R21["Progress"]
	151	[1911]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	152	[1912]	GETGLOBAL	R20 K39 ; R20 := mRadialSolarMap
	153	[1912]	SELF     	R20 R20 K40 ; R21 := R20; R20 := R20[0x3070289c]
	154	[1912]	GETUPVAL 	R22 U2 ; R22 := U2
	155	[1912]	GETTABLE 	R22 R22 K12 ; R22 := R22["Region"]
	156	[1912]	GETGLOBAL	R23 K41 ; R23 := 0xa421af95
	157	[1912]	GETTABLE 	R24 R19 K42 ; R24 := R19["x"]
	158	[1912]	MUL      	R24 R24 K43 ; R24 := R24 * 0.041000
	159	[1912]	ADD      	R24 K44 R24 ; R24 := 0.500000 + R24
	160	[1912]	GETTABLE 	R25 R19 K45 ; R25 := R19["y"]
	161	[1912]	ADD      	R25 R25 K46 ; R25 := R25 + 0.030000
	162	[1912]	MUL      	R25 R25 K47 ; R25 := R25 * 0.043000
	163	[1912]	SUB      	R25 K44 R25 ; R25 := 0.500000 - R25
	164	[1912]	GETGLOBAL	R26 K48 ; R26 := Zoom
	165	[1912]	GETTABLE 	R26 R26 K49 ; R26 := R26["MAX_ZOOM"]
	166	[1912]	SUB      	R26 R26 K50 ; R26 := R26 - 0.300000
	167	[1912]	GETTABLE 	R27 R19 K51 ; R27 := R19["z"]
	168	[1912]	ADD      	R26 R26 R27 ; R26 := R26 + R27
	169	[1912]	CALL     	R23 4 0 ; R23,... := R23(R24,R25,R26)
	170	[1912]	CALL     	R20 0 1 ; R20(R21,...)
	171	[1914]	SETTABLE 	R9 K52 R19 ; R9["pos"] := R19
	172	[1916]	GETUPVAL 	R20 U2 ; R20 := U2
	173	[1916]	GETTABLE 	R20 R20 K12 ; R20 := R20["Region"]
	174	[1916]	GETTABLE 	R20 R20 K53 ; R20 := R20["sectors"]
	175	[1917]	LOADK    	R21 := 1.000000
	176	[1917]	LEN      	R22 R20 ; R22 := # R20
	177	[1917]	LOADK    	R23 := 1.000000
	178	[1917]	FORPREP  	R21 202 ; R21 -= R23; PC := 202
	179	[1918]	GETTABLE 	R25 R20 R24 ; R25 := R20[R24]
	180	[1920]	GETTABLE 	R26 R25 K54 ; R26 := R25["decoOffset"]
	181	[1920]	ADD      	R26 R19 R26 ; R26 := R19 + R26
	182	[1920]	SETTABLE 	R25 K52 R26 ; R25["pos"] := R26
	183	[1922]	GETGLOBAL	R26 K55 ; R26 := 0x64fb1586
	184	[1922]	GETTABLE 	R27 R25 K8 ; R27 := R25["name"]
	185	[1922]	CALL     	R26 2 2 ; R26 := R26(R27)
	186	[1924]	GETUPVAL 	R27 U2 ; R27 := U2
	187	[1924]	GETTABLE 	R27 R27 K56 ; R27 := R27["Sectors"]
	188	[1924]	GETTABLE 	R27 R27 R26 ; R27 := R27[R26]
	189	[1924]	EQ       	1 R27 K1 ; if R27 == nil then PC := 199
	190	[1924]	JMP      	199 ; PC := 199
	191	[1925]	GETGLOBAL	R27 K57 ; R27 := 0x3d106989
	192	[1925]	LOADK    	R28 K58 ; R28 := "Ignoring duplicate fortress sector"
	193	[1925]	GETGLOBAL	R29 K55 ; R29 := 0x64fb1586
	194	[1925]	GETTABLE 	R30 R25 K8 ; R30 := R25["name"]
	195	[1925]	CALL     	R29 2 2 ; R29 := R29(R30)
	196	[1925]	CONCAT   	R28 R28 R29 ; R28 := R28 .. R29
	197	[1925]	CALL     	R27 2 1 ; R27(R28)
	198	[1925]	JMP      	202 ; PC := 202
	199	[1927]	GETUPVAL 	R27 U2 ; R27 := U2
	200	[1927]	GETTABLE 	R27 R27 K56 ; R27 := R27["Sectors"]
	201	[1927]	SETTABLE 	R27 R26 R25 ; R27[R26] := R25
	202	[1917]	FORLOOP  	R21 179 ; R21 += R23; if R21 <= R22 then begin PC := 179; R24 := R21 end
	203	[1932]	GETGLOBAL	R27 K41 ; R27 := 0xa421af95
	204	[1932]	GETTABLE 	R28 R9 K52 ; R28 := R9["pos"]
	205	[1932]	GETTABLE 	R28 R28 K42 ; R28 := R28["x"]
	206	[1932]	GETTABLE 	R29 R9 K52 ; R29 := R9["pos"]
	207	[1932]	GETTABLE 	R29 R29 K45 ; R29 := R29["y"]
	208	[1932]	GETTABLE 	R30 R9 K52 ; R30 := R9["pos"]
	209	[1932]	GETTABLE 	R30 R30 K51 ; R30 := R30["z"]
	210	[1932]	CALL     	R27 4 2 ; R27 := R27(R28,R29,R30)
	211	[1934]	GETUPVAL 	R28 U4 ; R28 := U4
	212	[1934]	MOVE     	R29 R27 ; R29 := R27
	213	[1934]	CALL     	R28 2 2 ; R28 := R28(R29)
	214	[1934]	MOVE     	R27 R28 ; R27 := R28
	215	[1935]	SETTABLE 	R9 K52 R27 ; R9["pos"] := R27
	216	[1937]	GETGLOBAL	R28 K16 ; R28 := 0x1211d00f
	217	[1937]	SELF     	R28 R28 K18 ; R29 := R28; R28 := R28[0x05909209]
	218	[1937]	MOVE     	R30 R10 ; R30 := R10
	219	[1937]	MOVE     	R31 R27 ; R31 := R27
	220	[1937]	GETGLOBAL	R32 K59 ; R32 := 0x00046924
	221	[1937]	LOADK    	R33 := 0.000000
	222	[1937]	LOADK    	R34 := -15.000000
	223	[1937]	LOADK    	R35 := 0.000000
	224	[1937]	CALL     	R32 4 0 ; R32,... := R32(R33,R34,R35)
	225	[1937]	CALL     	R28 0 2 ; R28 := R28(R29,...)
	226	[1938]	SETTABLE 	R9 K60 R28 ; R9["instance"] := R28
	227	[1939]	GETGLOBAL	R29 K10 ; R29 := 0x7b998233
	228	[1939]	GETGLOBAL	R30 K3 ; R30 := mRegionInstances
	229	[1939]	GETTABLE 	R30 R30 R8 ; R30 := R30[R8]
	230	[1939]	CALL     	R29 2 2 ; R29 := R29(R30)
	231	[1939]	TEST     	R29 1 ; if R29 then PC := 238
	232	[1939]	JMP      	238 ; PC := 238
	233	[1940]	GETGLOBAL	R29 K16 ; R29 := 0x1211d00f
	234	[1940]	SELF     	R29 R29 K17 ; R30 := R29; R29 := R29[0x59c96e77]
	235	[1940]	GETGLOBAL	R31 K3 ; R31 := mRegionInstances
	236	[1940]	GETTABLE 	R31 R31 R8 ; R31 := R31[R8]
	237	[1940]	CALL     	R29 3 1 ; R29(R30,R31)
	238	[1942]	GETGLOBAL	R29 K3 ; R29 := mRegionInstances
	239	[1942]	SETTABLE 	R29 R8 R28 ; R29[R8] := R28
	240	[1944]	SELF     	R29 R28 K61 ; R30 := R28; R29 := R28[0x2d9ba74f]
	241	[1944]	GETTABLE 	R31 R9 K62 ; R31 := R9["scale"]
	242	[1944]	CALL     	R29 3 1 ; R29(R30,R31)
	243	[1947]	GETUPVAL 	R29 U5 ; R29 := U5
	244	[1947]	GETTABLE 	R29 R29 R8 ; R29 := R29[R8]
	245	[1947]	EQ       	1 R29 K63 ; if R29 == true then PC := 257
	246	[1947]	JMP      	257 ; PC := 257
	247	[1947]	GETGLOBAL	R29 K64 ; R29 := mRailJack
	248	[1947]	GETTABLE 	R29 R29 K65 ; R29 := R29["Active"]
	249	[1947]	TEST     	R29 0 ; if not R29 then PC := 258
	250	[1947]	JMP      	258 ; PC := 258
	251	[1947]	GETGLOBAL	R29 K64 ; R29 := mRailJack
	252	[1947]	GETTABLE 	R29 R29 K66 ; R29 := R29["Regions"]
	253	[1947]	GETTABLE 	R29 R29 R8 ; R29 := R29[R8]
	254	[1947]	NOT      	R29 R29 ; R29 := not R29
	255	[1947]	JMP      	258 ; PC := 258
	256	[1947]	OP_LOADBOOL	R29 0 1 ; R29 := false; PC := 257
	257	[1947]	OP_LOADBOOL	R29 1 0 ; R29 := true
	258	[1948]	TEST     	R29 0 ; if not R29 then PC := 277
	259	[1948]	JMP      	277 ; PC := 277
	260	[1949]	SELF     	R30 R28 K29 ; R31 := R28; R30 := R28[0x768274d6]
	261	[1949]	OP_LOADBOOL	R32 0 0 ; R32 := false
	262	[1949]	OP_LOADBOOL	R33 1 0 ; R33 := true
	263	[1949]	CALL     	R30 4 1 ; R30(R31,R32,R33)
	264	[1950]	SELF     	R30 R28 K67 ; R31 := R28; R30 := R28[0xc1595bd5]
	265	[1950]	GETGLOBAL	R32 K68 ; R32 := gEntityType
	266	[1950]	CALL     	R30 3 2 ; R30 := R30(R31,R32)
	267	[1951]	LOADK    	R31 := 1.000000
	268	[1951]	LEN      	R32 R30 ; R32 := # R30
	269	[1951]	LOADK    	R33 := 1.000000
	270	[1951]	FORPREP  	R31 276 ; R31 -= R33; PC := 276
	271	[1952]	GETTABLE 	R35 R30 R34 ; R35 := R30[R34]
	272	[1952]	SELF     	R35 R35 K29 ; R36 := R35; R35 := R35[0x768274d6]
	273	[1952]	OP_LOADBOOL	R37 0 0 ; R37 := false
	274	[1952]	OP_LOADBOOL	R38 1 0 ; R38 := true
	275	[1952]	CALL     	R35 4 1 ; R35(R36,R37,R38)
	276	[1951]	FORLOOP  	R31 271 ; R31 += R33; if R31 <= R32 then begin PC := 271; R34 := R31 end
	277	[1956]	GETGLOBAL	R35 K64 ; R35 := mRailJack
	278	[1956]	GETTABLE 	R35 R35 K66 ; R35 := R35["Regions"]
	279	[1956]	GETTABLE 	R35 R35 R8 ; R35 := R35[R8]
	280	[1956]	TEST     	R35 0 ; if not R35 then PC := 296
	281	[1956]	JMP      	296 ; PC := 296
	282	[1957]	SELF     	R35 R28 K67 ; R36 := R28; R35 := R28[0xc1595bd5]
	283	[1957]	GETGLOBAL	R37 K69 ; R37 := gLightType
	284	[1957]	CALL     	R35 3 2 ; R35 := R35(R36,R37)
	285	[1958]	LOADK    	R36 := 1.000000
	286	[1958]	LEN      	R37 R35 ; R37 := # R35
	287	[1958]	LOADK    	R38 := 1.000000
	288	[1958]	FORPREP  	R36 294 ; R36 -= R38; PC := 294
	289	[1959]	GETTABLE 	R40 R35 R39 ; R40 := R35[R39]
	290	[1959]	SELF     	R40 R40 K29 ; R41 := R40; R40 := R40[0x768274d6]
	291	[1959]	OP_LOADBOOL	R42 0 0 ; R42 := false
	292	[1959]	OP_LOADBOOL	R43 1 0 ; R43 := true
	293	[1959]	CALL     	R40 4 1 ; R40(R41,R42,R43)
	294	[1958]	FORLOOP  	R36 289 ; R36 += R38; if R36 <= R37 then begin PC := 289; R39 := R36 end
	295	[1960]	JMP      	319 ; PC := 319
	296	[1961]	GETGLOBAL	R40 K70 ; R40 := mNewWarMode
	297	[1961]	TEST     	R40 0 ; if not R40 then PC := 319
	298	[1961]	JMP      	319 ; PC := 319
	299	[1962]	SELF     	R40 R28 K67 ; R41 := R28; R40 := R28[0xc1595bd5]
	300	[1962]	GETGLOBAL	R42 K69 ; R42 := gLightType
	301	[1962]	CALL     	R40 3 2 ; R40 := R40(R41,R42)
	302	[1963]	LOADK    	R41 := 1.000000
	303	[1963]	LEN      	R42 R40 ; R42 := # R40
	304	[1963]	LOADK    	R43 := 1.000000
	305	[1963]	FORPREP  	R41 318 ; R41 -= R43; PC := 318
	306	[1964]	GETTABLE 	R45 R40 R44 ; R45 := R40[R44]
	307	[1964]	SELF     	R45 R45 K71 ; R46 := R45; R45 := R45[0xa3927fe9]
	308	[1964]	GETGLOBAL	R47 K26 ; R47 := 0x60130201
	309	[1964]	LOADK    	R48 := 255.000000
	310	[1964]	LOADK    	R49 := 0.000000
	311	[1964]	LOADK    	R50 := 0.000000
	312	[1964]	CALL     	R47 4 0 ; R47,... := R47(R48,R49,R50)
	313	[1964]	CALL     	R45 0 1 ; R45(R46,...)
	314	[1965]	GETTABLE 	R45 R40 R44 ; R45 := R40[R44]
	315	[1965]	SELF     	R45 R45 K72 ; R46 := R45; R45 := R45[0xe29e950d]
	316	[1965]	LOADK    	R47 := 2.000000
	317	[1965]	CALL     	R45 3 1 ; R45(R46,R47)
	318	[1963]	FORLOOP  	R41 306 ; R41 += R43; if R41 <= R42 then begin PC := 306; R44 := R41 end
	319	[1969]	GETGLOBAL	R45 K41 ; R45 := 0xa421af95
	320	[1969]	LOADK    	R46 := 0.000000
	321	[1969]	GETTABLE 	R47 R9 K62 ; R47 := R9["scale"]
	322	[1969]	MUL      	R47 R47 K73 ; R47 := R47 * 1.050000
	323	[1969]	GETUPVAL 	R48 U6 ; R48 := U6
	324	[1969]	GETTABLE 	R48 R48 K74 ; R48 := R48["PLANET_UNIT_MULTIPLIER"]
	325	[1969]	MUL      	R47 R47 R48 ; R47 := R47 * R48
	326	[1969]	LOADK    	R48 K75 ; R48 := 0.000100
	327	[1969]	CALL     	R45 4 2 ; R45 := R45(R46,R47,R48)
	328	[1969]	ADD      	R45 R27 R45 ; R45 := R27 + R45
	329	[1970]	GETUPVAL 	R46 U7 ; R46 := U7
	330	[1970]	GETTABLE 	R46 R46 K76 ; R46 := R46[0x06d055f9]
	331	[1970]	GETGLOBAL	R47 K64 ; R47 := mRailJack
	332	[1970]	GETTABLE 	R47 R47 K65 ; R47 := R47["Active"]
	333	[1970]	TEST     	R47 0 ; if not R47 then PC := 340
	334	[1970]	JMP      	340 ; PC := 340
	335	[1970]	GETGLOBAL	R47 K64 ; R47 := mRailJack
	336	[1970]	GETTABLE 	R47 R47 K66 ; R47 := R47["Regions"]
	337	[1970]	GETTABLE 	R47 R47 R8 ; R47 := R47[R8]
	338	[1970]	JMP      	341 ; PC := 341
	339	[1970]	OP_LOADBOOL	R47 0 1 ; R47 := false; PC := 340
	340	[1970]	OP_LOADBOOL	R47 1 0 ; R47 := true
	341	[1970]	GETTABLE 	R48 R9 K8 ; R48 := R9["name"]
	342	[1970]	LOADK    	R49 K77 ; R49 := ""
	343	[1970]	CALL     	R46 4 2 ; R46 := R46(R47,R48,R49)
	344	[1971]	GETGLOBAL	R47 K0 ; R47 := mRegionLabels
	345	[1971]	GETUPVAL 	R48 U8 ; R48 := U8
	346	[1971]	MOVE     	R49 R46 ; R49 := R46
	347	[1971]	MOVE     	R50 R45 ; R50 := R45
	348	[1971]	OP_LOADBOOL	R51 0 0 ; R51 := false
	349	[1971]	LOADK    	R52 := 2.000000
	350	[1971]	MOVE     	R53 R29 ; R53 := R29
	351	[1971]	NEWTABLE 	R54 0 2 ; R54 := {}
	352	[1971]	SETTABLE 	R54 K78 K79 ; R54["RollOver"] := "RollOverRegionLabel"
	353	[1971]	SETTABLE 	R54 K80 K81 ; R54["RollOut"] := "RollOutRegionLabel"
	354	[1971]	MOVE     	R55 R8 ; R55 := R8
	355	[1971]	CALL     	R48 8 2 ; R48 := R48(R49,R50,R51,R52,R53,R54,R55)
	356	[1971]	SETTABLE 	R47 R8 R48 ; R47[R8] := R48
	357	[1972]	TEST     	R11 0 ; if not R11 then PC := 363
	358	[1972]	JMP      	363 ; PC := 363
	359	[1973]	GETUPVAL 	R47 U2 ; R47 := U2
	360	[1973]	GETUPVAL 	R48 U1 ; R48 := U1
	361	[1973]	LEN      	R48 R48 ; R48 := # R48
	362	[1973]	SETTABLE 	R47 K82 R48 ; R47["SubLabelIndex"] := R48
	363	[1871]	FORLOOP  	R5 24 ; R5 += R7; if R5 <= R6 then begin PC := 24; R8 := R5 end
	364	[1976]	RETURN   	R0 1 ; return 

function #48 <?:1978,1980> (6 instructions, 24 bytes at 00000211141E2740)
1 param, 4 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[1979]	GETGLOBAL	R1 K0 ; R1 := mHover
	2	[1979]	GETGLOBAL	R2 K2 ; R2 := 0x03f57322
	3	[1979]	MOVE     	R3 R0 ; R3 := R0
	4	[1979]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[1979]	SETTABLE 	R1 K1 R2 ; R1["RegionLabel"] := R2
	6	[1980]	RETURN   	R0 1 ; return 

function #49 <?:1982,1984> (3 instructions, 12 bytes at 00000211141E2870)
1 param, 2 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[1983]	GETGLOBAL	R1 K0 ; R1 := mHover
	2	[1983]	SETTABLE 	R1 K1 K2 ; R1["RegionLabel"] := nil
	3	[1984]	RETURN   	R0 1 ; return 

function #50 <?:1986,1998> (27 instructions, 108 bytes at 00000211141E2980)
0 params, 8 slots, 3 upvalues, 0 locals, 6 constants, 0 functions
	1	[1987]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1987]	CALL     	R0 1 1 ; R0()
	3	[1988]	GETUPVAL 	R0 U1 ; R0 := U1
	4	[1988]	CALL     	R0 1 1 ; R0()
	5	[1990]	NEWTABLE 	R0 0 0 ; R0 := {}
	6	[1990]	SETGLOBALHASH	R0 K0 ; mRegionRadius := R0
	7	[1991]	LOADNIL  	R0 R0 ; R0 := nil
	8	[1992]	LOADK    	R1 := 1.000000
	9	[1992]	GETGLOBAL	R2 K1 ; R2 := mRegions
	10	[1992]	LEN      	R2 R2 ; R2 := # R2
	11	[1992]	LOADK    	R3 := 1.000000
	12	[1992]	FORPREP  	R1 26 ; R1 -= R3; PC := 26
	13	[1993]	GETGLOBAL	R5 K1 ; R5 := mRegions
	14	[1993]	GETTABLE 	R0 R5 R4 ; R0 := R5[R4]
	15	[1994]	GETGLOBAL	R5 K2 ; R5 := 0x7b998233
	16	[1994]	GETTABLE 	R6 R0 K3 ; R6 := R0["instance"]
	17	[1994]	CALL     	R5 2 2 ; R5 := R5(R6)
	18	[1994]	TEST     	R5 1 ; if R5 then PC := 26
	19	[1994]	JMP      	26 ; PC := 26
	20	[1995]	GETGLOBAL	R5 K0 ; R5 := mRegionRadius
	21	[1995]	GETTABLE 	R6 R0 K4 ; R6 := R0["scale"]
	22	[1995]	GETUPVAL 	R7 U2 ; R7 := U2
	23	[1995]	GETTABLE 	R7 R7 K5 ; R7 := R7["PLANET_UNIT_MULTIPLIER"]
	24	[1995]	MUL      	R6 R6 R7 ; R6 := R6 * R7
	25	[1995]	SETTABLE 	R5 R4 R6 ; R5[R4] := R6
	26	[1992]	FORLOOP  	R1 13 ; R1 += R3; if R1 <= R2 then begin PC := 13; R4 := R1 end
	27	[1998]	RETURN   	R0 1 ; return 

function #51 <?:2000,2015> (40 instructions, 160 bytes at 00000211141E2B00)
1 param, 16 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[2001]	GETTABLE 	R1 R0 K0 ; R1 := R0["name"]
	2	[2002]	LOADK    	R2 := 1.000000
	3	[2002]	GETGLOBAL	R3 K1 ; R3 := mSuperRegions
	4	[2002]	LEN      	R3 R3 ; R3 := # R3
	5	[2002]	LOADK    	R4 := 1.000000
	6	[2002]	FORPREP  	R2 37 ; R2 -= R4; PC := 37
	7	[2003]	LOADK    	R6 := 1.000000
	8	[2003]	GETGLOBAL	R7 K1 ; R7 := mSuperRegions
	9	[2003]	GETTABLE 	R7 R7 R5 ; R7 := R7[R5]
	10	[2003]	GETTABLE 	R7 R7 K2 ; R7 := R7["regionLinks"]
	11	[2003]	LEN      	R7 R7 ; R7 := # R7
	12	[2003]	LOADK    	R8 := 1.000000
	13	[2003]	FORPREP  	R6 36 ; R6 -= R8; PC := 36
	14	[2004]	GETGLOBAL	R10 K1 ; R10 := mSuperRegions
	15	[2004]	GETTABLE 	R10 R10 R5 ; R10 := R10[R5]
	16	[2004]	GETTABLE 	R10 R10 K2 ; R10 := R10["regionLinks"]
	17	[2004]	GETTABLE 	R10 R10 R9 ; R10 := R10[R9]
	18	[2004]	EQ       	0 R10 R1 ; if R10 ~= R1 then PC := 36
	19	[2004]	JMP      	36 ; PC := 36
	20	[2006]	LOADK    	R10 := 1.000000
	21	[2006]	GETGLOBAL	R11 K3 ; R11 := mSuperPoly
	22	[2006]	LEN      	R11 R11 ; R11 := # R11
	23	[2006]	LOADK    	R12 := 1.000000
	24	[2006]	FORPREP  	R10 35 ; R10 -= R12; PC := 35
	25	[2007]	GETGLOBAL	R14 K1 ; R14 := mSuperRegions
	26	[2007]	GETTABLE 	R14 R14 R5 ; R14 := R14[R5]
	27	[2007]	GETTABLE 	R14 R14 K4 ; R14 := R14["instance"]
	28	[2007]	GETGLOBAL	R15 K3 ; R15 := mSuperPoly
	29	[2007]	GETTABLE 	R15 R15 R13 ; R15 := R15[R13]
	30	[2007]	EQ       	0 R14 R15 ; if R14 ~= R15 then PC := 35
	31	[2007]	JMP      	35 ; PC := 35
	32	[2008]	GETGLOBAL	R14 K3 ; R14 := mSuperPoly
	33	[2008]	GETTABLE 	R14 R14 R13 ; R14 := R14[R13]
	34	[2008]	RETURN   	R14 2 ; return R14 
	35	[2006]	FORLOOP  	R10 25 ; R10 += R12; if R10 <= R11 then begin PC := 25; R13 := R10 end
	36	[2003]	FORLOOP  	R6 14 ; R6 += R8; if R6 <= R7 then begin PC := 14; R9 := R6 end
	37	[2002]	FORLOOP  	R2 7 ; R2 += R4; if R2 <= R3 then begin PC := 7; R5 := R2 end
	38	[2014]	LOADNIL  	R14 R14 ; R14 := nil
	39	[2014]	RETURN   	R14 2 ; return R14 
	40	[2015]	RETURN   	R0 1 ; return 

function #52 <?:2017,2022> (24 instructions, 96 bytes at 00000211141E2D90)
0 params, 7 slots, 0 upvalues, 0 locals, 14 constants, 0 functions
	1	[2018]	GETGLOBAL	R0 K0 ; R0 := 0xb7cbd06b
	2	[2018]	GETGLOBAL	R1 K1 ; R1 := Zoom
	3	[2018]	GETTABLE 	R1 R1 K2 ; R1 := R1["MIN_ZOOM"]
	4	[2018]	GETGLOBAL	R2 K1 ; R2 := Zoom
	5	[2018]	GETTABLE 	R2 R2 K3 ; R2 := R2["MAX_ZOOM"]
	6	[2018]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	7	[2019]	GETGLOBAL	R1 K4 ; R1 := 0x42dcc9f5
	8	[2019]	GETGLOBAL	R2 K5 ; R2 := mSmoothZoom
	9	[2019]	GETTABLE 	R2 R2 K6 ; R2 := R2["mCurVal"]
	10	[2019]	GETTABLE 	R3 R0 K7 ; R3 := R0["minValue"]
	11	[2019]	GETTABLE 	R4 R0 K8 ; R4 := R0["maxValue"]
	12	[2019]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	13	[2020]	SELF     	R2 R0 K9 ; R3 := R0; R2 := R0[0x3b93153d]
	14	[2020]	MOVE     	R4 R1 ; R4 := R1
	15	[2020]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	16	[2020]	MOVE     	R1 R2 ; R1 := R2
	17	[2021]	GETGLOBAL	R2 K10 ; R2 := mDrag
	18	[2021]	GETGLOBAL	R3 K12 ; R3 := 0x9bafffe3
	19	[2021]	LOADK    	R4 := 1.000000
	20	[2021]	LOADK    	R5 K13 ; R5 := 0.100000
	21	[2021]	MOVE     	R6 R1 ; R6 := R1
	22	[2021]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	23	[2021]	SETTABLE 	R2 K11 R3 ; R2["mDragMultiplier"] := R3
	24	[2022]	RETURN   	R0 1 ; return 

function #53 <?:2024,2205> (417 instructions, 1668 bytes at 00000211141E2FF0)
0 params, 56 slots, 14 upvalues, 0 locals, 100 constants, 6 functions
	1	[2025]	GETGLOBAL	R0 K0 ; R0 := 0x76ea806b
	2	[2025]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x3f3ae64c]
	3	[2025]	LOADK    	R2 := 0.000000
	4	[2025]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	5	[2026]	LOADNIL  	R1 R4 ; R1 := R2 := R3 := R4 := nil
	6	[2031]	GETGLOBAL	R5 K2 ; R5 := 0x7b998233
	7	[2031]	MOVE     	R6 R0 ; R6 := R0
	8	[2031]	CALL     	R5 2 2 ; R5 := R5(R6)
	9	[2031]	TEST     	R5 1 ; if R5 then PC := 34
	10	[2031]	JMP      	34 ; PC := 34
	11	[2031]	GETGLOBAL	R5 K3 ; R5 := 0x0032441c
	12	[2031]	GETTABLE 	R5 R5 K4 ; R5 := R5["StalkerMode"]
	13	[2031]	TEST     	R5 1 ; if R5 then PC := 34
	14	[2031]	JMP      	34 ; PC := 34
	15	[2032]	SELF     	R5 R0 K5 ; R6 := R0; R5 := R0[0x80563238]
	16	[2032]	CALL     	R5 2 2 ; R5 := R5(R6)
	17	[2033]	GETGLOBAL	R6 K2 ; R6 := 0x7b998233
	18	[2033]	MOVE     	R7 R5 ; R7 := R5
	19	[2033]	CALL     	R6 2 2 ; R6 := R6(R7)
	20	[2033]	TEST     	R6 1 ; if R6 then PC := 34
	21	[2033]	JMP      	34 ; PC := 34
	22	[2034]	SELF     	R6 R5 K6 ; R7 := R5; R6 := R5[0xc4e837f5]
	23	[2034]	CALL     	R6 2 2 ; R6 := R6(R7)
	24	[2034]	SELF     	R6 R6 K7 ; R7 := R6; R6 := R6[0x6d604ba7]
	25	[2034]	CALL     	R6 2 2 ; R6 := R6(R7)
	26	[2034]	MOVE     	R2 R6 ; R2 := R6
	27	[2035]	SELF     	R6 R5 K8 ; R7 := R5; R6 := R5[0x62c81b76]
	28	[2035]	CALL     	R6 2 2 ; R6 := R6(R7)
	29	[2036]	GETGLOBAL	R7 K9 ; R7 := 0x88efc25e
	30	[2036]	GETTABLE 	R8 R6 K10 ; R8 := R6["mShip"]
	31	[2036]	CALL     	R7 2 2 ; R7 := R7(R8)
	32	[2036]	MOVE     	R3 R7 ; R3 := R7
	33	[2037]	GETTABLE 	R4 R6 K11 ; R4 := R6["mShipExterior"]
	34	[2041]	LOADK    	R7 K12 ; R7 := "Earth"
	35	[2042]	OP_LOADBOOL	R8 0 0 ; R8 := false
	36	[2043]	GETGLOBAL	R9 K13 ; R9 := _T
	37	[2043]	GETTABLE 	R9 R9 K14 ; R9 := R9["CustomStarChartNodeFilter"]
	38	[2043]	EQ       	1 R9 K15 ; if R9 == nil then PC := 46
	39	[2043]	JMP      	46 ; PC := 46
	40	[2043]	GETGLOBAL	R9 K13 ; R9 := _T
	41	[2043]	GETTABLE 	R9 R9 K14 ; R9 := R9["CustomStarChartNodeFilter"]
	42	[2043]	GETTABLE 	R9 R9 K16 ; R9 := R9["Keys"]
	43	[2043]	LEN      	R9 R9 ; R9 := # R9
	44	[2043]	LT       	0 R9 K17 ; if R9 >= 2.000000 then PC := 174
	45	[2043]	JMP      	174 ; PC := 174
	46	[2044]	GETUPVAL 	R9 U0 ; R9 := U0
	47	[2044]	CALL     	R9 1 2 ; R9 := R9()
	48	[2045]	LOADK    	R10 := 1.000000
	49	[2045]	GETGLOBAL	R11 K18 ; R11 := mRegions
	50	[2045]	LEN      	R11 R11 ; R11 := # R11
	51	[2045]	LOADK    	R12 := 1.000000
	52	[2045]	FORPREP  	R10 94 ; R10 -= R12; PC := 94
	53	[2046]	GETGLOBAL	R14 K18 ; R14 := mRegions
	54	[2046]	GETTABLE 	R14 R14 R13 ; R14 := R14[R13]
	55	[2047]	GETGLOBAL	R15 K2 ; R15 := 0x7b998233
	56	[2047]	MOVE     	R16 R14 ; R16 := R14
	57	[2047]	CALL     	R15 2 2 ; R15 := R15(R16)
	58	[2047]	TEST     	R15 1 ; if R15 then PC := 94
	59	[2047]	JMP      	94 ; PC := 94
	60	[2047]	SELF     	R15 R14 K19 ; R16 := R14; R15 := R14[0x699fd1e2]
	61	[2047]	MOVE     	R17 R9 ; R17 := R9
	62	[2047]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	63	[2047]	EQ       	1 R15 K21 ; if R15 == 0.000000 then PC := 94
	64	[2047]	JMP      	94 ; PC := 94
	65	[2047]	GETGLOBAL	R15 K22 ; R15 := mRailJack
	66	[2047]	GETTABLE 	R15 R15 K23 ; R15 := R15["Active"]
	67	[2047]	TEST     	R15 0 ; if not R15 then PC := 74
	68	[2047]	JMP      	74 ; PC := 74
	69	[2047]	GETGLOBAL	R15 K22 ; R15 := mRailJack
	70	[2047]	GETTABLE 	R15 R15 K24 ; R15 := R15["Regions"]
	71	[2047]	GETTABLE 	R15 R15 R13 ; R15 := R15[R13]
	72	[2047]	TEST     	R15 0 ; if not R15 then PC := 94
	73	[2047]	JMP      	94 ; PC := 94
	74	[2048]	GETGLOBAL	R15 K25 ; R15 := 0x015284cd
	75	[2048]	LOADK    	R16 K26 ; R16 := "/"
	76	[2048]	GETTABLE 	R17 R14 K27 ; R17 := R14["name"]
	77	[2048]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	78	[2049]	LEN      	R16 R15 ; R16 := # R15
	79	[2049]	GETTABLE 	R15 R15 R16 ; R15 := R15[R16]
	80	[2050]	EQ       	1 R15 R2 ; if R15 == R2 then PC := 83
	81	[2050]	JMP      	83 ; PC := 83
	82	[2050]	OP_LOADBOOL	R8 0 1 ; R8 := false; PC := 83
	83	[2050]	OP_LOADBOOL	R8 1 0 ; R8 := true
	84	[2051]	TEST     	R8 1 ; if R8 then PC := 88
	85	[2051]	JMP      	88 ; PC := 88
	86	[2051]	EQ       	0 R15 R7 ; if R15 ~= R7 then PC := 94
	87	[2051]	JMP      	94 ; PC := 94
	88	[2052]	MOVE     	R1 R14 ; R1 := R14
	89	[2053]	GETGLOBAL	R16 K10 ; R16 := mShip
	90	[2053]	SETTABLE 	R16 K28 R13 ; R16["RegionIndex"] := R13
	91	[2054]	TEST     	R8 0 ; if not R8 then PC := 94
	92	[2054]	JMP      	94 ; PC := 94
	93	[2055]	JMP      	95 ; PC := 95
	94	[2045]	FORLOOP  	R10 53 ; R10 += R12; if R10 <= R11 then begin PC := 53; R13 := R10 end
	95	[2072]	CLOSURE  	R16 0 ; R16 := closure(Function #1)
	96	[2072]	GETUPVAL 	R0 U1 ; R0 := U1
	97	[2072]	MOVE     	R0 R1 ; R0 := R1
	98	[2072]	MOVE     	R0 R8 ; R0 := R8
	99	[2073]	GETUPVAL 	R17 U2 ; R17 := U2
	100	[2073]	GETTABLE 	R17 R17 K29 ; R17 := R17[0x8e7c3b5e]
	101	[2073]	GETGLOBAL	R18 K30 ; R18 := 0x25d99d89
	102	[2073]	CALL     	R17 2 5 ; R17,R18,R19,R20 := R17(R18)
	103	[2074]	GETGLOBAL	R21 K2 ; R21 := 0x7b998233
	104	[2074]	MOVE     	R22 R17 ; R22 := R17
	105	[2074]	CALL     	R21 2 2 ; R21 := R21(R22)
	106	[2074]	TEST     	R21 1 ; if R21 then PC := 174
	107	[2074]	JMP      	174 ; PC := 174
	108	[2074]	TEST     	R20 0 ; if not R20 then PC := 174
	109	[2074]	JMP      	174 ; PC := 174
	110	[2075]	SELF     	R21 R17 K31 ; R22 := R17; R21 := R17[0x42700bd0]
	111	[2075]	CALL     	R21 2 2 ; R21 := R21(R22)
	112	[2076]	LEN      	R22 R21 ; R22 := # R21
	113	[2076]	LE       	0 R18 R22 ; if R18 > R22 then PC := 174
	114	[2076]	JMP      	174 ; PC := 174
	115	[2077]	GETTABLE 	R22 R21 R18 ; R22 := R21[R18]
	116	[2078]	GETTABLE 	R23 R22 K32 ; R23 := R22["mMainMission"]
	117	[2078]	GETTABLE 	R23 R23 K33 ; R23 := R23["mKey"]
	118	[2079]	OP_LOADBOOL	R24 1 0 ; R24 := true
	119	[2082]	GETGLOBAL	R25 K2 ; R25 := 0x7b998233
	120	[2082]	MOVE     	R26 R23 ; R26 := R23
	121	[2082]	CALL     	R25 2 2 ; R25 := R25(R26)
	122	[2082]	TEST     	R25 1 ; if R25 then PC := 134
	123	[2082]	JMP      	134 ; PC := 134
	124	[2082]	GETGLOBAL	R25 K22 ; R25 := mRailJack
	125	[2082]	GETTABLE 	R25 R25 K23 ; R25 := R25["Active"]
	126	[2082]	TEST     	R25 0 ; if not R25 then PC := 134
	127	[2082]	JMP      	134 ; PC := 134
	128	[2083]	SELF     	R25 R23 K34 ; R26 := R23; R25 := R23[0xef893aec]
	129	[2083]	CALL     	R25 2 2 ; R25 := R25(R26)
	130	[2085]	GETTABLE 	R26 R25 K35 ; R26 := R25["missionType"]
	131	[2085]	EQ       	1 R26 K36 ; if R26 == 31.000000 then PC := 134
	132	[2085]	JMP      	134 ; PC := 134
	133	[2086]	OP_LOADBOOL	R24 0 0 ; R24 := false
	134	[2090]	SELF     	R26 R17 K37 ; R27 := R17; R26 := R17[0xf2deaf69]
	135	[2090]	GETUPVAL 	R28 U3 ; R28 := U3
	136	[2090]	GETTABLE 	R28 R28 K38 ; R28 := R28["mirageQuestKey"]
	137	[2090]	CALL     	R26 3 2 ; R26 := R26(R27,R28)
	138	[2090]	TEST     	R26 0 ; if not R26 then PC := 141
	139	[2090]	JMP      	141 ; PC := 141
	140	[2091]	OP_LOADBOOL	R24 0 0 ; R24 := false
	141	[2094]	TEST     	R24 1 ; if R24 then PC := 144
	142	[2094]	JMP      	144 ; PC := 144
	143	[2094]	JMP      	174 ; PC := 174
	144	[2096]	GETGLOBAL	R26 K2 ; R26 := 0x7b998233
	145	[2096]	MOVE     	R27 R23 ; R27 := R23
	146	[2096]	CALL     	R26 2 2 ; R26 := R26(R27)
	147	[2096]	TEST     	R26 1 ; if R26 then PC := 156
	148	[2096]	JMP      	156 ; PC := 156
	149	[2097]	MOVE     	R26 R16 ; R26 := R16
	150	[2097]	GETGLOBAL	R27 K39 ; R27 := 0x64fb1586
	151	[2097]	SELF     	R28 R23 K40 ; R29 := R23; R28 := R23[0x92608d86]
	152	[2097]	CALL     	R28 2 0 ; R28,... := R28(R29)
	153	[2097]	CALL     	R27 0 0 ; R27,... := R27(R28,...)
	154	[2097]	CALL     	R26 0 1 ; R26(R27,...)
	155	[2097]	JMP      	174 ; PC := 174
	156	[2098]	GETTABLE 	R26 R22 K41 ; R26 := R22["mMarkedNodes"]
	157	[2098]	LEN      	R26 R26 ; R26 := # R26
	158	[2098]	LT       	0 K21 R26 ; if 0.000000 >= R26 then PC := 174
	159	[2098]	JMP      	174 ; PC := 174
	160	[2099]	GETUPVAL 	R26 U2 ; R26 := U2
	161	[2099]	GETTABLE 	R26 R26 K42 ; R26 := R26[0x5e35d4d6]
	162	[2099]	CALL     	R26 1 2 ; R26 := R26()
	163	[2100]	SELF     	R27 R26 K43 ; R28 := R26; R27 := R26[0x365d0eb2]
	164	[2100]	GETTABLE 	R29 R22 K41 ; R29 := R22["mMarkedNodes"]
	165	[2100]	CALL     	R27 3 2 ; R27 := R27(R28,R29)
	166	[2101]	GETGLOBAL	R28 K44 ; R28 := EMPTY_SYMBOL
	167	[2101]	EQ       	1 R27 R28 ; if R27 == R28 then PC := 174
	168	[2101]	JMP      	174 ; PC := 174
	169	[2102]	MOVE     	R28 R16 ; R28 := R16
	170	[2102]	GETGLOBAL	R29 K39 ; R29 := 0x64fb1586
	171	[2102]	MOVE     	R30 R27 ; R30 := R27
	172	[2102]	CALL     	R29 2 0 ; R29,... := R29(R30)
	173	[2102]	CALL     	R28 0 1 ; R28(R29,...)
	174	[2109]	TEST     	R8 1 ; if R8 then PC := 177
	175	[2109]	JMP      	177 ; PC := 177
	176	[2110]	MOVE     	R2 R7 ; R2 := R7
	177	[2113]	EQ       	1 R1 K15 ; if R1 == nil then PC := 226
	178	[2113]	JMP      	226 ; PC := 226
	179	[2113]	GETGLOBAL	R28 K2 ; R28 := 0x7b998233
	180	[2113]	MOVE     	R29 R3 ; R29 := R3
	181	[2113]	CALL     	R28 2 2 ; R28 := R28(R29)
	182	[2113]	TEST     	R28 1 ; if R28 then PC := 226
	183	[2113]	JMP      	226 ; PC := 226
	184	[2113]	GETGLOBAL	R28 K22 ; R28 := mRailJack
	185	[2113]	GETTABLE 	R28 R28 K23 ; R28 := R28["Active"]
	186	[2113]	TEST     	R28 1 ; if R28 then PC := 226
	187	[2113]	JMP      	226 ; PC := 226
	188	[2114]	GETGLOBAL	R28 K2 ; R28 := 0x7b998233
	189	[2114]	GETGLOBAL	R29 K10 ; R29 := mShip
	190	[2114]	GETTABLE 	R29 R29 K45 ; R29 := R29["Deco"]
	191	[2114]	CALL     	R28 2 2 ; R28 := R28(R29)
	192	[2114]	TEST     	R28 0 ; if not R28 then PC := 204
	193	[2114]	JMP      	204 ; PC := 204
	194	[2115]	GETGLOBAL	R28 K10 ; R28 := mShip
	195	[2115]	GETGLOBAL	R29 K46 ; R29 := 0x1211d00f
	196	[2115]	SELF     	R29 R29 K47 ; R30 := R29; R29 := R29[0x05909209]
	197	[2115]	GETGLOBAL	R31 K48 ; R31 := 0x21defcfd
	198	[2115]	GETTABLE 	R32 R1 K49 ; R32 := R1["instance"]
	199	[2115]	SELF     	R32 R32 K50 ; R33 := R32; R32 := R32[0xd1586535]
	200	[2115]	CALL     	R32 2 2 ; R32 := R32(R33)
	201	[2115]	GETGLOBAL	R33 K51 ; R33 := ZERO_ROTATION
	202	[2115]	CALL     	R29 5 2 ; R29 := R29(R30,R31,R32,R33)
	203	[2115]	SETTABLE 	R28 K45 R29 ; R28[0xd38cedf3] := R29
	204	[2117]	GETGLOBAL	R28 K10 ; R28 := mShip
	205	[2117]	GETTABLE 	R28 R28 K45 ; R28 := R28["Deco"]
	206	[2117]	SELF     	R28 R28 K52 ; R29 := R28; R28 := R28[0x2d9ba74f]
	207	[2117]	LOADK    	R30 K53 ; R30 := 0.000700
	208	[2117]	CALL     	R28 3 1 ; R28(R29,R30)
	209	[2118]	GETGLOBAL	R28 K10 ; R28 := mShip
	210	[2118]	GETTABLE 	R28 R28 K45 ; R28 := R28["Deco"]
	211	[2118]	SELF     	R28 R28 K54 ; R29 := R28; R28 := R28[0xde61adb3]
	212	[2118]	GETGLOBAL	R30 K55 ; R30 := 0xb009bbc6
	213	[2118]	MOVE     	R31 R3 ; R31 := R3
	214	[2118]	CALL     	R30 2 0 ; R30,... := R30(R31)
	215	[2118]	CALL     	R28 0 1 ; R28(R29,...)
	216	[2119]	GETGLOBAL	R28 K10 ; R28 := mShip
	217	[2119]	GETTABLE 	R28 R28 K45 ; R28 := R28["Deco"]
	218	[2119]	SELF     	R28 R28 K56 ; R29 := R28; R28 := R28[0xaa041663]
	219	[2119]	MOVE     	R30 R4 ; R30 := R4
	220	[2119]	CALL     	R28 3 1 ; R28(R29,R30)
	221	[2120]	GETGLOBAL	R28 K10 ; R28 := mShip
	222	[2120]	GETTABLE 	R29 R1 K49 ; R29 := R1["instance"]
	223	[2120]	SELF     	R29 R29 K50 ; R30 := R29; R29 := R29[0xd1586535]
	224	[2120]	CALL     	R29 2 2 ; R29 := R29(R30)
	225	[2120]	SETTABLE 	R28 K57 R29 ; R28["AnchorPosition"] := R29
	226	[2123]	GETGLOBAL	R28 K2 ; R28 := 0x7b998233
	227	[2123]	GETUPVAL 	R29 U4 ; R29 := U4
	228	[2123]	CALL     	R28 2 2 ; R28 := R28(R29)
	229	[2123]	TEST     	R28 1 ; if R28 then PC := 262
	230	[2123]	JMP      	262 ; PC := 262
	231	[2124]	GETUPVAL 	R28 U4 ; R28 := U4
	232	[2124]	SELF     	R28 R28 K58 ; R29 := R28; R28 := R28[0x9307aa51]
	233	[2124]	GETUPVAL 	R30 U5 ; R30 := U5
	234	[2124]	GETGLOBAL	R31 K59 ; R31 := 0xa421af95
	235	[2124]	LOADK    	R32 := 0.000000
	236	[2124]	LOADK    	R33 := 0.000000
	237	[2124]	LOADK    	R34 := 20.000000
	238	[2124]	CALL     	R31 4 2 ; R31 := R31(R32,R33,R34)
	239	[2124]	ADD      	R30 R30 R31 ; R30 := R30 + R31
	240	[2124]	CALL     	R28 3 1 ; R28(R29,R30)
	241	[2125]	GETGLOBAL	R28 K60 ; R28 := mPlayerPos
	242	[2125]	GETUPVAL 	R29 U5 ; R29 := U5
	243	[2125]	GETGLOBAL	R30 K59 ; R30 := 0xa421af95
	244	[2125]	LOADK    	R31 := 0.000000
	245	[2125]	LOADK    	R32 := 0.000000
	246	[2125]	LOADK    	R33 := 4.000000
	247	[2125]	CALL     	R30 4 2 ; R30 := R30(R31,R32,R33)
	248	[2125]	ADD      	R29 R29 R30 ; R29 := R29 + R30
	249	[2125]	SETTABLE 	R28 K61 R29 ; R28["Target"] := R29
	250	[2126]	GETGLOBAL	R28 K60 ; R28 := mPlayerPos
	251	[2126]	GETTABLE 	R28 R28 K62 ; R28 := R28["Prop"]
	252	[2126]	SELF     	R28 R28 K63 ; R29 := R28; R28 := R28[0xd0f998cd]
	253	[2126]	LOADK    	R30 := 0.000000
	254	[2126]	CALL     	R28 3 1 ; R28(R29,R30)
	255	[2127]	GETGLOBAL	R28 K60 ; R28 := mPlayerPos
	256	[2127]	GETTABLE 	R28 R28 K62 ; R28 := R28["Prop"]
	257	[2127]	SELF     	R28 R28 K64 ; R29 := R28; R28 := R28[0x188e2bee]
	258	[2127]	LOADK    	R30 := 1.000000
	259	[2127]	CALL     	R28 3 1 ; R28(R29,R30)
	260	[2128]	GETGLOBAL	R28 K60 ; R28 := mPlayerPos
	261	[2128]	SETTABLE 	R28 K65 K66 ; R28["Region"] := -1.000000
	262	[2130]	GETGLOBAL	R28 K67 ; R28 := mFxNodes
	263	[2130]	GETUPVAL 	R29 U6 ; R29 := U6
	264	[2130]	GETTABLE 	R29 R29 K69 ; R29 := R29[0x06d055f9]
	265	[2130]	GETGLOBAL	R30 K70 ; R30 := mVorsPrizeQuestActiveNode
	266	[2130]	LOADK    	R31 := 1.000000
	267	[2130]	LOADK    	R32 := 1.500000
	268	[2130]	CALL     	R29 4 2 ; R29 := R29(R30,R31,R32)
	269	[2130]	SETTABLE 	R28 K68 R29 ; R28["NotificationTime"] := R29
	270	[2132]	GETGLOBAL	R28 K71 ; R28 := mDrag
	271	[2132]	GETTABLE 	R28 R28 K72 ; R28 := R28["mCurrentScroll"]
	272	[2132]	GETTABLE 	R28 R28 K73 ; R28 := R28["x"]
	273	[2133]	GETGLOBAL	R29 K71 ; R29 := mDrag
	274	[2133]	GETTABLE 	R29 R29 K72 ; R29 := R29["mCurrentScroll"]
	275	[2133]	GETTABLE 	R29 R29 K74 ; R29 := R29["y"]
	276	[2134]	GETGLOBAL	R30 K75 ; R30 := Zoom
	277	[2134]	GETTABLE 	R30 R30 K76 ; R30 := R30["STARTING_ZOOM"]
	278	[2134]	SUB      	R30 R30 K77 ; R30 := R30 - 80.000000
	279	[2135]	GETGLOBAL	R31 K78 ; R31 := mSmoothZoom
	280	[2135]	SELF     	R31 R31 K63 ; R32 := R31; R31 := R31[0xd0f998cd]
	281	[2135]	MOVE     	R33 R30 ; R33 := R30
	282	[2135]	CALL     	R31 3 1 ; R31(R32,R33)
	283	[2137]	LOADNIL  	R31 R31 ; R31 := nil
	284	[2138]	GETGLOBAL	R32 K2 ; R32 := 0x7b998233
	285	[2138]	GETGLOBAL	R33 K3 ; R33 := 0x0032441c
	286	[2138]	GETTABLE 	R33 R33 K79 ; R33 := R33["JunctionComplete"]
	287	[2138]	CALL     	R32 2 2 ; R32 := R32(R33)
	288	[2138]	TEST     	R32 1 ; if R32 then PC := 354
	289	[2138]	JMP      	354 ; PC := 354
	290	[2139]	LOADNIL  	R32 R32 ; R32 := nil
	291	[2140]	GETGLOBAL	R33 K80 ; R33 := 0xc8802016
	292	[2140]	GETGLOBAL	R34 K81 ; R34 := mFlatEdges
	293	[2140]	CALL     	R33 2 4 ; R33,R34,R35 := R33(R34)
	294	[2140]	JMP      	315 ; PC := 315
	295	[2141]	GETTABLE 	R38 R37 K82 ; R38 := R37["IsJunction"]
	296	[2141]	TEST     	R38 0 ; if not R38 then PC := 315
	297	[2141]	JMP      	315 ; PC := 315
	298	[2142]	GETTABLE 	R38 R37 K83 ; R38 := R37["NodeA"]
	299	[2142]	GETTABLE 	R38 R38 K27 ; R38 := R38["name"]
	300	[2142]	GETGLOBAL	R39 K3 ; R39 := 0x0032441c
	301	[2142]	GETTABLE 	R39 R39 K79 ; R39 := R39["JunctionComplete"]
	302	[2142]	GETTABLE 	R39 R39 K84 ; R39 := R39["location"]
	303	[2142]	EQ       	0 R38 R39 ; if R38 ~= R39 then PC := 307
	304	[2142]	JMP      	307 ; PC := 307
	305	[2143]	GETTABLE 	R32 R37 K85 ; R32 := R37["NodeB"]
	306	[2143]	JMP      	315 ; PC := 315
	307	[2144]	GETTABLE 	R38 R37 K85 ; R38 := R37["NodeB"]
	308	[2144]	GETTABLE 	R38 R38 K27 ; R38 := R38["name"]
	309	[2144]	GETGLOBAL	R39 K3 ; R39 := 0x0032441c
	310	[2144]	GETTABLE 	R39 R39 K79 ; R39 := R39["JunctionComplete"]
	311	[2144]	GETTABLE 	R39 R39 K84 ; R39 := R39["location"]
	312	[2144]	EQ       	0 R38 R39 ; if R38 ~= R39 then PC := 315
	313	[2144]	JMP      	315 ; PC := 315
	314	[2145]	GETTABLE 	R32 R37 K83 ; R32 := R37["NodeA"]
	315	[2140]	TFORLOOP 	R33 2 ; R36,R37 := R33(R34,R35); if R36 ~= nil then begin PC = 295; R35 := R36 end
	316	[2147]	JMP      	295 ; PC := 295
	317	[2150]	GETGLOBAL	R38 K2 ; R38 := 0x7b998233
	318	[2150]	MOVE     	R39 R32 ; R39 := R32
	319	[2150]	CALL     	R38 2 2 ; R38 := R38(R39)
	320	[2150]	TEST     	R38 1 ; if R38 then PC := 352
	321	[2150]	JMP      	352 ; PC := 352
	322	[2151]	GETGLOBAL	R38 K80 ; R38 := 0xc8802016
	323	[2151]	GETGLOBAL	R39 K81 ; R39 := mFlatEdges
	324	[2151]	CALL     	R38 2 4 ; R38,R39,R40 := R38(R39)
	325	[2151]	JMP      	350 ; PC := 350
	326	[2152]	GETTABLE 	R43 R42 K86 ; R43 := R42["IsShortcut"]
	327	[2152]	TEST     	R43 0 ; if not R43 then PC := 350
	328	[2152]	JMP      	350 ; PC := 350
	329	[2153]	GETTABLE 	R43 R42 K83 ; R43 := R42["NodeA"]
	330	[2153]	EQ       	0 R43 R32 ; if R43 ~= R32 then PC := 340
	331	[2153]	JMP      	340 ; PC := 340
	332	[2154]	GETGLOBAL	R43 K18 ; R43 := mRegions
	333	[2154]	GETTABLE 	R44 R42 K85 ; R44 := R42["NodeB"]
	334	[2154]	GETTABLE 	R44 R44 K87 ; R44 := R44["radialSector"]
	335	[2154]	GETTABLE 	R44 R44 K88 ; R44 := R44["region"]
	336	[2154]	ADD      	R44 R44 K89 ; R44 := R44 + 1.000000
	337	[2154]	GETTABLE 	R31 R43 R44 ; R31 := R43[R44]
	338	[2155]	JMP      	352 ; PC := 352
	339	[2155]	JMP      	350 ; PC := 350
	340	[2156]	GETTABLE 	R43 R42 K85 ; R43 := R42["NodeB"]
	341	[2156]	EQ       	0 R43 R32 ; if R43 ~= R32 then PC := 350
	342	[2156]	JMP      	350 ; PC := 350
	343	[2157]	GETGLOBAL	R43 K18 ; R43 := mRegions
	344	[2157]	GETTABLE 	R44 R42 K83 ; R44 := R42["NodeA"]
	345	[2157]	GETTABLE 	R44 R44 K87 ; R44 := R44["radialSector"]
	346	[2157]	GETTABLE 	R44 R44 K88 ; R44 := R44["region"]
	347	[2157]	ADD      	R44 R44 K89 ; R44 := R44 + 1.000000
	348	[2157]	GETTABLE 	R31 R43 R44 ; R31 := R43[R44]
	349	[2158]	JMP      	352 ; PC := 352
	350	[2151]	TFORLOOP 	R38 2 ; R41,R42 := R38(R39,R40); if R41 ~= nil then begin PC = 326; R40 := R41 end
	351	[2160]	JMP      	326 ; PC := 326
	352	[2163]	GETGLOBAL	R43 K3 ; R43 := 0x0032441c
	353	[2163]	SETTABLE 	R43 K79 K15 ; R43["JunctionComplete"] := nil
	354	[2166]	EQ       	1 R1 K15 ; if R1 == nil then PC := 398
	355	[2166]	JMP      	398 ; PC := 398
	356	[2166]	GETGLOBAL	R43 K13 ; R43 := _T
	357	[2166]	GETTABLE 	R43 R43 K90 ; R43 := R43["WareframeChallenge"]
	358	[2166]	TEST     	R43 1 ; if R43 then PC := 398
	359	[2166]	JMP      	398 ; PC := 398
	360	[2167]	GETUPVAL 	R43 U7 ; R43 := U7
	361	[2167]	MOVE     	R44 R1 ; R44 := R1
	362	[2167]	GETTABLE 	R45 R1 K91 ; R45 := R1["zoomedFraming"]
	363	[2167]	CALL     	R43 3 4 ; R43,R44,R45 := R43(R44,R45)
	364	[2175]	CLOSURE  	R46 1 ; R46 := closure(Function #2)
	365	[2175]	MOVE     	R0 R30 ; R0 := R30
	366	[2175]	MOVE     	R0 R45 ; R0 := R45
	367	[2175]	MOVE     	R0 R28 ; R0 := R28
	368	[2175]	MOVE     	R0 R43 ; R0 := R43
	369	[2175]	MOVE     	R0 R29 ; R0 := R29
	370	[2175]	MOVE     	R0 R44 ; R0 := R44
	371	[2177]	GETUPVAL 	R47 U8 ; R47 := U8
	372	[2177]	SELF     	R47 R47 K92 ; R48 := R47; R47 := R47[0xbd2e96ea]
	373	[2177]	LOADK    	R49 K93 ; R49 := 0.550000
	374	[2177]	CLOSURE  	R50 2 ; R50 := closure(Function #3)
	375	[2177]	GETUPVAL 	R0 U9 ; R0 := U9
	376	[2177]	MOVE     	R0 R1 ; R0 := R1
	377	[2177]	CALL     	R47 4 1 ; R47(R48,R49,R50)
	378	[2178]	GETGLOBAL	R47 K94 ; R47 := 0x25312c9b
	379	[2178]	GETGLOBAL	R48 K95 ; R48 := 0xae91e43b
	380	[2178]	LOADK    	R49 K96 ; R49 := "_root"
	381	[2178]	LOADK    	R50 := 0.000000
	382	[2178]	NEWTABLE 	R51 1 0 ; R51 := {}
	383	[2178]	MOVE     	R52 R46 ; R52 := R46
	384	[2178]	SETLIST  	R51 1 1 ; R51[(1-1)*FPF+i] := R(51+i), 1 <= i <= 1
	385	[2178]	NEWTABLE 	R52 1 0 ; R52 := {}
	386	[2178]	LOADK    	R53 := 1.000000
	387	[2178]	SETLIST  	R52 1 1 ; R52[(1-1)*FPF+i] := R(52+i), 1 <= i <= 1
	388	[2178]	LOADK    	R53 := 0.750000
	389	[2178]	LOADK    	R54 K98 ; R54 := 0.100000
	390	[2187]	CLOSURE  	R55 3 ; R55 := closure(Function #4)
	391	[2187]	MOVE     	R0 R31 ; R0 := R31
	392	[2187]	GETUPVAL 	R0 U10 ; R0 := U10
	393	[2187]	GETUPVAL 	R0 U11 ; R0 := U11
	394	[2187]	GETUPVAL 	R0 U12 ; R0 := U12
	395	[2178]	CALL     	R47 9 1 ; R47(R48,R49,R50,R51,R52,R53,R54,R55)
	396	[2187]	CLOSE    	R43 ; SAVE R43,...
	397	[2187]	JMP      	417 ; PC := 417
	398	[2189]	GETGLOBAL	R43 K94 ; R43 := 0x25312c9b
	399	[2189]	GETGLOBAL	R44 K95 ; R44 := 0xae91e43b
	400	[2189]	LOADK    	R45 K96 ; R45 := "_root"
	401	[2189]	LOADK    	R46 := 0.000000
	402	[2189]	NEWTABLE 	R47 1 0 ; R47 := {}
	403	[2189]	CLOSURE  	R48 4 ; R48 := closure(Function #5)
	404	[2189]	MOVE     	R0 R30 ; R0 := R30
	405	[2189]	SETLIST  	R47 1 1 ; R47[(1-1)*FPF+i] := R(47+i), 1 <= i <= 1
	406	[2189]	NEWTABLE 	R48 1 0 ; R48 := {}
	407	[2189]	LOADK    	R49 := 1.000000
	408	[2189]	SETLIST  	R48 1 1 ; R48[(1-1)*FPF+i] := R(48+i), 1 <= i <= 1
	409	[2189]	LOADK    	R49 K99 ; R49 := 0.650000
	410	[2189]	LOADK    	R50 := 0.000000
	411	[2203]	CLOSURE  	R51 5 ; R51 := closure(Function #6)
	412	[2203]	GETUPVAL 	R0 U11 ; R0 := U11
	413	[2203]	GETUPVAL 	R0 U12 ; R0 := U12
	414	[2203]	GETUPVAL 	R0 U8 ; R0 := U8
	415	[2203]	GETUPVAL 	R0 U13 ; R0 := U13
	416	[2189]	CALL     	R43 9 1 ; R43(R44,R45,R46,R47,R48,R49,R50,R51)
	417	[2205]	RETURN   	R0 1 ; return 

function #54 <?:2207,2219> (45 instructions, 180 bytes at 00000211141E51C0)
1 param, 9 slots, 0 upvalues, 0 locals, 13 constants, 0 functions
	1	[2208]	GETTABLE 	R1 R0 K0 ; R1 := R0["radialSector"]
	2	[2208]	GETTABLE 	R1 R1 K1 ; R1 := R1["region"]
	3	[2208]	ADD      	R1 R1 K2 ; R1 := R1 + 1.000000
	4	[2209]	EQ       	1 R1 K3 ; if R1 == 17.000000 then PC := 7
	5	[2209]	JMP      	7 ; PC := 7
	6	[2209]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 7
	7	[2209]	OP_LOADBOOL	R2 1 0 ; R2 := true
	8	[2210]	EQ       	1 R1 K4 ; if R1 == 15.000000 then PC := 11
	9	[2210]	JMP      	11 ; PC := 11
	10	[2210]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 11
	11	[2210]	OP_LOADBOOL	R3 1 0 ; R3 := true
	12	[2211]	EQ       	1 R1 K5 ; if R1 == 14.000000 then PC := 15
	13	[2211]	JMP      	15 ; PC := 15
	14	[2211]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 15
	15	[2211]	OP_LOADBOOL	R4 1 0 ; R4 := true
	16	[2212]	EQ       	1 R1 K6 ; if R1 == 22.000000 then PC := 19
	17	[2212]	JMP      	19 ; PC := 19
	18	[2212]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 19
	19	[2212]	OP_LOADBOOL	R5 1 0 ; R5 := true
	20	[2213]	TEST     	R2 1 ; if R2 then PC := 28
	21	[2213]	JMP      	28 ; PC := 28
	22	[2213]	TEST     	R3 1 ; if R3 then PC := 28
	23	[2213]	JMP      	28 ; PC := 28
	24	[2213]	TEST     	R4 1 ; if R4 then PC := 28
	25	[2213]	JMP      	28 ; PC := 28
	26	[2213]	TEST     	R5 0 ; if not R5 then PC := 30
	27	[2213]	JMP      	30 ; PC := 30
	28	[2214]	OP_LOADBOOL	R6 0 0 ; R6 := false
	29	[2214]	RETURN   	R6 2 ; return R6 
	30	[2216]	GETGLOBAL	R6 K7 ; R6 := mRegions
	31	[2216]	GETTABLE 	R6 R6 R1 ; R6 := R6[R1]
	32	[2216]	GETTABLE 	R6 R6 K8 ; R6 := R6["instance"]
	33	[2216]	SELF     	R6 R6 K9 ; R7 := R6; R6 := R6[0x1f420a3a]
	34	[2216]	GETTABLE 	R8 R0 K10 ; R8 := R0["position"]
	35	[2216]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	36	[2217]	LOADK    	R7 K11 ; R7 := 0.005000
	37	[2218]	GETGLOBAL	R8 K12 ; R8 := mRegionRadius
	38	[2218]	GETTABLE 	R8 R8 R1 ; R8 := R8[R1]
	39	[2218]	ADD      	R8 R8 R7 ; R8 := R8 + R7
	40	[2218]	LT       	1 R6 R8 ; if R6 < R8 then PC := 43
	41	[2218]	JMP      	43 ; PC := 43
	42	[2218]	OP_LOADBOOL	R8 0 1 ; R8 := false; PC := 43
	43	[2218]	OP_LOADBOOL	R8 1 0 ; R8 := true
	44	[2218]	RETURN   	R8 2 ; return R8 
	45	[2219]	RETURN   	R0 1 ; return 

function #55 <?:2221,2359> (369 instructions, 1476 bytes at 00000211141E54D0)
1 param, 21 slots, 6 upvalues, 0 locals, 59 constants, 0 functions
	1	[2222]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[2222]	GETTABLE 	R1 R1 K1 ; R1 := R1["CustomStarChartNodeFilter"]
	3	[2222]	TEST     	R1 0 ; if not R1 then PC := 42
	4	[2222]	JMP      	42 ; PC := 42
	5	[2223]	GETGLOBAL	R1 K0 ; R1 := _T
	6	[2223]	GETTABLE 	R1 R1 K1 ; R1 := R1["CustomStarChartNodeFilter"]
	7	[2223]	GETTABLE 	R1 R1 K2 ; R1 := R1["Nodes"]
	8	[2223]	TEST     	R1 0 ; if not R1 then PC := 23
	9	[2223]	JMP      	23 ; PC := 23
	10	[2224]	GETGLOBAL	R1 K3 ; R1 := 0xcfc01047
	11	[2224]	GETGLOBAL	R2 K0 ; R2 := _T
	12	[2224]	GETTABLE 	R2 R2 K1 ; R2 := R2["CustomStarChartNodeFilter"]
	13	[2224]	GETTABLE 	R2 R2 K2 ; R2 := R2["Nodes"]
	14	[2224]	CALL     	R1 2 4 ; R1,R2,R3 := R1(R2)
	15	[2224]	JMP      	21 ; PC := 21
	16	[2225]	GETTABLE 	R6 R0 K4 ; R6 := R0["name"]
	17	[2225]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 21
	18	[2225]	JMP      	21 ; PC := 21
	19	[2226]	OP_LOADBOOL	R6 1 0 ; R6 := true
	20	[2226]	RETURN   	R6 2 ; return R6 
	21	[2224]	TFORLOOP 	R1 2 ; R4,R5 := R1(R2,R3); if R4 ~= nil then begin PC = 16; R3 := R4 end
	22	[2227]	JMP      	16 ; PC := 16
	23	[2230]	GETGLOBAL	R6 K0 ; R6 := _T
	24	[2230]	GETTABLE 	R6 R6 K1 ; R6 := R6["CustomStarChartNodeFilter"]
	25	[2230]	GETTABLE 	R6 R6 K5 ; R6 := R6["Keys"]
	26	[2230]	TEST     	R6 0 ; if not R6 then PC := 42
	27	[2230]	JMP      	42 ; PC := 42
	28	[2231]	GETGLOBAL	R6 K3 ; R6 := 0xcfc01047
	29	[2231]	GETGLOBAL	R7 K0 ; R7 := _T
	30	[2231]	GETTABLE 	R7 R7 K1 ; R7 := R7["CustomStarChartNodeFilter"]
	31	[2231]	GETTABLE 	R7 R7 K5 ; R7 := R7["Keys"]
	32	[2231]	CALL     	R6 2 4 ; R6,R7,R8 := R6(R7)
	33	[2231]	JMP      	40 ; PC := 40
	34	[2232]	GETTABLE 	R11 R0 K6 ; R11 := R0["mission"]
	35	[2232]	GETTABLE 	R11 R11 K7 ; R11 := R11["levelKeyName"]
	36	[2232]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 40
	37	[2232]	JMP      	40 ; PC := 40
	38	[2233]	OP_LOADBOOL	R11 1 0 ; R11 := true
	39	[2233]	RETURN   	R11 2 ; return R11 
	40	[2231]	TFORLOOP 	R6 2 ; R9,R10 := R6(R7,R8); if R9 ~= nil then begin PC = 34; R8 := R9 end
	41	[2234]	JMP      	34 ; PC := 34
	42	[2239]	GETTABLE 	R11 R0 K8 ; R11 := R0["nodeType"]
	43	[2239]	EQ       	0 R11 K10 ; if R11 ~= 2.000000 then PC := 47
	44	[2239]	JMP      	47 ; PC := 47
	45	[2241]	OP_LOADBOOL	R11 0 0 ; R11 := false
	46	[2241]	RETURN   	R11 2 ; return R11 
	47	[2244]	GETTABLE 	R11 R0 K11 ; R11 := R0["locTag"]
	48	[2244]	GETGLOBAL	R12 K12 ; R12 := EMPTY_SYMBOL
	49	[2244]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 53
	50	[2244]	JMP      	53 ; PC := 53
	51	[2246]	OP_LOADBOOL	R11 0 0 ; R11 := false
	52	[2246]	RETURN   	R11 2 ; return R11 
	53	[2249]	GETGLOBAL	R11 K13 ; R11 := 0x64fb1586
	54	[2249]	GETTABLE 	R12 R0 K4 ; R12 := R0["name"]
	55	[2249]	CALL     	R11 2 2 ; R11 := R11(R12)
	56	[2250]	GETTABLE 	R12 R0 K14 ; R12 := R0["missionTag"]
	57	[2251]	LOADNIL  	R13 R13 ; R13 := nil
	58	[2256]	GETGLOBAL	R14 K15 ; R14 := mRailJack
	59	[2256]	GETTABLE 	R14 R14 K16 ; R14 := R14["Active"]
	60	[2256]	TEST     	R14 0 ; if not R14 then PC := 202
	61	[2256]	JMP      	202 ; PC := 202
	62	[2260]	LOADNIL  	R14 R14 ; R14 := nil
	63	[2262]	GETGLOBAL	R15 K17 ; R15 := 0xbe190284
	64	[2262]	SELF     	R15 R15 K18 ; R16 := R15; R15 := R15[0xf2deaf69]
	65	[2262]	GETGLOBAL	R17 K19 ; R17 := gLotusGameRulesType
	66	[2262]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	67	[2262]	TEST     	R15 0 ; if not R15 then PC := 73
	68	[2262]	JMP      	73 ; PC := 73
	69	[2263]	GETGLOBAL	R15 K17 ; R15 := 0xbe190284
	70	[2263]	SELF     	R15 R15 K20 ; R16 := R15; R15 := R15[0xef893aec]
	71	[2263]	CALL     	R15 2 2 ; R15 := R15(R16)
	72	[2263]	MOVE     	R14 R15 ; R14 := R15
	73	[2266]	GETGLOBAL	R15 K21 ; R15 := 0xe7f2b02f
	74	[2266]	SELF     	R15 R15 K22 ; R16 := R15; R15 := R15[0xca33534d]
	75	[2266]	CALL     	R15 2 2 ; R15 := R15(R16)
	76	[2266]	TEST     	R15 1 ; if R15 then PC := 103
	77	[2266]	JMP      	103 ; PC := 103
	78	[2266]	GETGLOBAL	R15 K23 ; R15 := 0x7b998233
	79	[2266]	GETGLOBAL	R16 K21 ; R16 := 0xe7f2b02f
	80	[2266]	SELF     	R16 R16 K24 ; R17 := R16; R16 := R16[0x565be9ee]
	81	[2266]	CALL     	R16 2 0 ; R16,... := R16(R17)
	82	[2266]	CALL     	R15 0 2 ; R15 := R15(R16,...)
	83	[2266]	TEST     	R15 0 ; if not R15 then PC := 103
	84	[2266]	JMP      	103 ; PC := 103
	85	[2266]	EQ       	1 R14 K25 ; if R14 == nil then PC := 101
	86	[2266]	JMP      	101 ; PC := 101
	87	[2266]	GETGLOBAL	R15 K23 ; R15 := 0x7b998233
	88	[2266]	GETTABLE 	R16 R14 K7 ; R16 := R14["levelKeyName"]
	89	[2266]	CALL     	R15 2 2 ; R15 := R15(R16)
	90	[2266]	TEST     	R15 1 ; if R15 then PC := 101
	91	[2266]	JMP      	101 ; PC := 101
	92	[2266]	GETGLOBAL	R15 K26 ; R15 := 0x0469f296
	93	[2266]	GETTABLE 	R16 R14 K7 ; R16 := R14["levelKeyName"]
	94	[2266]	SELF     	R16 R16 K27 ; R17 := R16; R16 := R16[0xed4e0128]
	95	[2266]	CALL     	R16 2 0 ; R16,... := R16(R17)
	96	[2266]	CALL     	R15 0 2 ; R15 := R15(R16,...)
	97	[2266]	GETUPVAL 	R16 U0 ; R16 := U0
	98	[2266]	GETTABLE 	R16 R16 K28 ; R16 := R16["SCENARIO_EVENT_SPACE_TAG"]
	99	[2266]	EQ       	1 R15 R16 ; if R15 == R16 then PC := 102
	100	[2266]	JMP      	102 ; PC := 102
	101	[2266]	OP_LOADBOOL	R15 0 1 ; R15 := false; PC := 102
	102	[2266]	OP_LOADBOOL	R15 1 0 ; R15 := true
	103	[2267]	TEST     	R15 0 ; if not R15 then PC := 121
	104	[2267]	JMP      	121 ; PC := 121
	105	[2268]	GETUPVAL 	R16 U1 ; R16 := U1
	106	[2268]	GETTABLE 	R16 R16 K29 ; R16 := R16["SQUAD_LINK_EVENT"]
	107	[2268]	EQ       	0 R12 R16 ; if R12 ~= R16 then PC := 119
	108	[2268]	JMP      	119 ; PC := 119
	109	[2268]	GETGLOBAL	R16 K30 ; R16 := 0x0032441c
	110	[2268]	GETTABLE 	R16 R16 K31 ; R16 := R16["CachedGoalInfo"]
	111	[2268]	GETTABLE 	R16 R16 R11 ; R16 := R16[R11]
	112	[2268]	TEST     	R16 1 ; if R16 then PC := 117
	113	[2268]	JMP      	117 ; PC := 117
	114	[2268]	GETUPVAL 	R16 U2 ; R16 := U2
	115	[2268]	TEST     	R16 0 ; if not R16 then PC := 119
	116	[2268]	JMP      	119 ; PC := 119
	117	[2270]	OP_LOADBOOL	R13 1 0 ; R13 := true
	118	[2270]	JMP      	121 ; PC := 121
	119	[2272]	OP_LOADBOOL	R16 0 0 ; R16 := false
	120	[2272]	RETURN   	R16 2 ; return R16 
	121	[2277]	GETGLOBAL	R16 K32 ; R16 := 0x7f5022cf
	122	[2277]	GETTABLE 	R16 R16 K33 ; R16 := R16[0xa5c556b9]
	123	[2277]	MOVE     	R17 R11 ; R17 := R11
	124	[2277]	LOADK    	R18 K34 ; R18 := "Dojo"
	125	[2277]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	126	[2277]	EQ       	0 R16 K25 ; if R16 ~= nil then PC := 129
	127	[2277]	JMP      	129 ; PC := 129
	128	[2277]	OP_LOADBOOL	R16 0 1 ; R16 := false; PC := 129
	129	[2277]	OP_LOADBOOL	R16 1 0 ; R16 := true
	130	[2280]	GETGLOBAL	R17 K17 ; R17 := 0xbe190284
	131	[2280]	SELF     	R17 R17 K18 ; R18 := R17; R17 := R17[0xf2deaf69]
	132	[2280]	GETGLOBAL	R19 K35 ; R19 := gLotusDojoGameRulesType
	133	[2280]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	134	[2280]	TEST     	R17 0 ; if not R17 then PC := 141
	135	[2280]	JMP      	141 ; PC := 141
	136	[2281]	TEST     	R16 0 ; if not R16 then PC := 162
	137	[2281]	JMP      	162 ; PC := 162
	138	[2282]	OP_LOADBOOL	R17 0 0 ; R17 := false
	139	[2282]	RETURN   	R17 2 ; return R17 
	140	[2283]	JMP      	162 ; PC := 162
	141	[2284]	GETGLOBAL	R17 K17 ; R17 := 0xbe190284
	142	[2284]	SELF     	R17 R17 K18 ; R18 := R17; R17 := R17[0xf2deaf69]
	143	[2284]	GETGLOBAL	R19 K36 ; R19 := gLotusHubGameRulesType
	144	[2284]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	145	[2284]	TEST     	R17 0 ; if not R17 then PC := 162
	146	[2284]	JMP      	162 ; PC := 162
	147	[2284]	GETTABLE 	R17 R0 K8 ; R17 := R0["nodeType"]
	148	[2284]	EQ       	0 R17 K37 ; if R17 ~= 3.000000 then PC := 162
	149	[2284]	JMP      	162 ; PC := 162
	150	[2285]	GETGLOBAL	R17 K21 ; R17 := 0xe7f2b02f
	151	[2285]	SELF     	R17 R17 K38 ; R18 := R17; R17 := R17[0x199919fe]
	152	[2285]	CALL     	R17 2 2 ; R17 := R17(R18)
	153	[2286]	GETGLOBAL	R18 K32 ; R18 := 0x7f5022cf
	154	[2286]	GETTABLE 	R18 R18 K33 ; R18 := R18[0xa5c556b9]
	155	[2286]	MOVE     	R19 R17 ; R19 := R17
	156	[2286]	MOVE     	R20 R11 ; R20 := R11
	157	[2286]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	158	[2286]	EQ       	0 R18 K39 ; if R18 ~= 1.000000 then PC := 162
	159	[2286]	JMP      	162 ; PC := 162
	160	[2287]	OP_LOADBOOL	R18 0 0 ; R18 := false
	161	[2287]	RETURN   	R18 2 ; return R18 
	162	[2291]	GETGLOBAL	R18 K17 ; R18 := 0xbe190284
	163	[2291]	SELF     	R18 R18 K18 ; R19 := R18; R18 := R18[0xf2deaf69]
	164	[2291]	GETGLOBAL	R20 K35 ; R20 := gLotusDojoGameRulesType
	165	[2291]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	166	[2291]	TEST     	R18 0 ; if not R18 then PC := 173
	167	[2291]	JMP      	173 ; PC := 173
	168	[2291]	GETTABLE 	R18 R0 K8 ; R18 := R0["nodeType"]
	169	[2291]	EQ       	0 R18 K37 ; if R18 ~= 3.000000 then PC := 173
	170	[2291]	JMP      	173 ; PC := 173
	171	[2294]	OP_LOADBOOL	R18 0 0 ; R18 := false
	172	[2294]	RETURN   	R18 2 ; return R18 
	173	[2297]	GETGLOBAL	R18 K17 ; R18 := 0xbe190284
	174	[2297]	SELF     	R18 R18 K18 ; R19 := R18; R18 := R18[0xf2deaf69]
	175	[2297]	GETGLOBAL	R20 K36 ; R20 := gLotusHubGameRulesType
	176	[2297]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	177	[2297]	TEST     	R18 0 ; if not R18 then PC := 183
	178	[2297]	JMP      	183 ; PC := 183
	179	[2297]	TEST     	R16 0 ; if not R16 then PC := 183
	180	[2297]	JMP      	183 ; PC := 183
	181	[2300]	OP_LOADBOOL	R18 0 0 ; R18 := false
	182	[2300]	RETURN   	R18 2 ; return R18 
	183	[2304]	TEST     	R16 1 ; if R16 then PC := 222
	184	[2304]	JMP      	222 ; PC := 222
	185	[2305]	TEST     	R13 1 ; if R13 then PC := 222
	186	[2305]	JMP      	222 ; PC := 222
	187	[2306]	GETUPVAL 	R18 U3 ; R18 := U3
	188	[2306]	MOVE     	R19 R0 ; R19 := R0
	189	[2306]	CALL     	R18 2 2 ; R18 := R18(R19)
	190	[2306]	TEST     	R18 1 ; if R18 then PC := 222
	191	[2306]	JMP      	222 ; PC := 222
	192	[2307]	GETTABLE 	R18 R0 K6 ; R18 := R0["mission"]
	193	[2307]	GETTABLE 	R18 R18 K40 ; R18 := R18["missionType"]
	194	[2307]	EQ       	0 R18 K41 ; if R18 ~= 31.000000 then PC := 199
	195	[2307]	JMP      	199 ; PC := 199
	196	[2307]	GETTABLE 	R18 R0 K8 ; R18 := R0["nodeType"]
	197	[2307]	EQ       	0 R18 K42 ; if R18 ~= 6.000000 then PC := 222
	198	[2307]	JMP      	222 ; PC := 222
	199	[2309]	OP_LOADBOOL	R18 0 0 ; R18 := false
	200	[2309]	RETURN   	R18 2 ; return R18 
	201	[2310]	JMP      	222 ; PC := 222
	202	[2312]	GETTABLE 	R18 R0 K6 ; R18 := R0["mission"]
	203	[2312]	GETTABLE 	R18 R18 K40 ; R18 := R18["missionType"]
	204	[2312]	EQ       	0 R18 K41 ; if R18 ~= 31.000000 then PC := 222
	205	[2312]	JMP      	222 ; PC := 222
	206	[2313]	GETUPVAL 	R18 U1 ; R18 := U1
	207	[2313]	GETTABLE 	R18 R18 K29 ; R18 := R18["SQUAD_LINK_EVENT"]
	208	[2313]	EQ       	0 R12 R18 ; if R12 ~= R18 then PC := 220
	209	[2313]	JMP      	220 ; PC := 220
	210	[2313]	GETGLOBAL	R18 K30 ; R18 := 0x0032441c
	211	[2313]	GETTABLE 	R18 R18 K31 ; R18 := R18["CachedGoalInfo"]
	212	[2313]	GETTABLE 	R18 R18 R11 ; R18 := R18[R11]
	213	[2313]	TEST     	R18 1 ; if R18 then PC := 218
	214	[2313]	JMP      	218 ; PC := 218
	215	[2313]	GETUPVAL 	R18 U2 ; R18 := U2
	216	[2313]	TEST     	R18 0 ; if not R18 then PC := 220
	217	[2313]	JMP      	220 ; PC := 220
	218	[2315]	OP_LOADBOOL	R13 1 0 ; R13 := true
	219	[2315]	JMP      	222 ; PC := 222
	220	[2317]	OP_LOADBOOL	R18 0 0 ; R18 := false
	221	[2317]	RETURN   	R18 2 ; return R18 
	222	[2322]	GETTABLE 	R18 R0 K8 ; R18 := R0["nodeType"]
	223	[2322]	EQ       	0 R18 K39 ; if R18 ~= 1.000000 then PC := 244
	224	[2322]	JMP      	244 ; PC := 244
	225	[2322]	GETGLOBAL	R18 K30 ; R18 := 0x0032441c
	226	[2322]	GETTABLE 	R18 R18 K31 ; R18 := R18["CachedGoalInfo"]
	227	[2322]	GETTABLE 	R18 R18 R11 ; R18 := R18[R11]
	228	[2322]	TEST     	R18 1 ; if R18 then PC := 244
	229	[2322]	JMP      	244 ; PC := 244
	230	[2322]	GETGLOBAL	R18 K0 ; R18 := _T
	231	[2322]	GETTABLE 	R18 R18 K43 ; R18 := R18["WorldStateDerelictNodes"]
	232	[2322]	TEST     	R18 0 ; if not R18 then PC := 242
	233	[2322]	JMP      	242 ; PC := 242
	234	[2322]	GETGLOBAL	R18 K0 ; R18 := _T
	235	[2322]	GETTABLE 	R18 R18 K43 ; R18 := R18["WorldStateDerelictNodes"]
	236	[2322]	GETGLOBAL	R19 K13 ; R19 := 0x64fb1586
	237	[2322]	GETTABLE 	R20 R0 K4 ; R20 := R0["name"]
	238	[2322]	CALL     	R19 2 2 ; R19 := R19(R20)
	239	[2322]	GETTABLE 	R18 R18 R19 ; R18 := R18[R19]
	240	[2322]	TEST     	R18 1 ; if R18 then PC := 244
	241	[2322]	JMP      	244 ; PC := 244
	242	[2323]	OP_LOADBOOL	R18 0 0 ; R18 := false
	243	[2323]	RETURN   	R18 2 ; return R18 
	244	[2325]	GETTABLE 	R18 R0 K44 ; R18 := R0["region"]
	245	[2325]	ADD      	R18 R18 K39 ; R18 := R18 + 1.000000
	246	[2325]	GETUPVAL 	R19 U0 ; R19 := U0
	247	[2325]	GETTABLE 	R19 R19 K45 ; R19 := R19["REGION_ID_MOON"]
	248	[2325]	EQ       	1 R18 R19 ; if R18 == R19 then PC := 258
	249	[2325]	JMP      	258 ; PC := 258
	250	[2325]	GETTABLE 	R18 R0 K8 ; R18 := R0["nodeType"]
	251	[2325]	EQ       	0 R18 K42 ; if R18 ~= 6.000000 then PC := 266
	252	[2325]	JMP      	266 ; PC := 266
	253	[2325]	GETTABLE 	R18 R0 K4 ; R18 := R0["name"]
	254	[2325]	GETUPVAL 	R19 U1 ; R19 := U1
	255	[2325]	GETTABLE 	R19 R19 K46 ; R19 := R19["MOON_SHORTCUT_TAG"]
	256	[2325]	EQ       	0 R18 R19 ; if R18 ~= R19 then PC := 266
	257	[2325]	JMP      	266 ; PC := 266
	258	[2325]	GETUPVAL 	R18 U4 ; R18 := U4
	259	[2325]	GETUPVAL 	R19 U0 ; R19 := U0
	260	[2325]	GETTABLE 	R19 R19 K45 ; R19 := R19["REGION_ID_MOON"]
	261	[2325]	GETTABLE 	R18 R18 R19 ; R18 := R18[R19]
	262	[2325]	EQ       	0 R18 K47 ; if R18 ~= true then PC := 266
	263	[2325]	JMP      	266 ; PC := 266
	264	[2326]	OP_LOADBOOL	R18 0 0 ; R18 := false
	265	[2326]	RETURN   	R18 2 ; return R18 
	266	[2328]	GETTABLE 	R18 R0 K44 ; R18 := R0["region"]
	267	[2328]	ADD      	R18 R18 K39 ; R18 := R18 + 1.000000
	268	[2328]	GETUPVAL 	R19 U0 ; R19 := U0
	269	[2328]	GETTABLE 	R19 R19 K48 ; R19 := R19["REGION_ID_FORTRESS"]
	270	[2328]	EQ       	0 R18 R19 ; if R18 ~= R19 then PC := 280
	271	[2328]	JMP      	280 ; PC := 280
	272	[2328]	GETUPVAL 	R18 U4 ; R18 := U4
	273	[2328]	GETUPVAL 	R19 U0 ; R19 := U0
	274	[2328]	GETTABLE 	R19 R19 K48 ; R19 := R19["REGION_ID_FORTRESS"]
	275	[2328]	GETTABLE 	R18 R18 R19 ; R18 := R18[R19]
	276	[2328]	EQ       	0 R18 K47 ; if R18 ~= true then PC := 280
	277	[2328]	JMP      	280 ; PC := 280
	278	[2329]	OP_LOADBOOL	R18 0 0 ; R18 := false
	279	[2329]	RETURN   	R18 2 ; return R18 
	280	[2331]	GETGLOBAL	R18 K30 ; R18 := 0x0032441c
	281	[2331]	GETTABLE 	R18 R18 K49 ; R18 := R18["StarChartHiddenEventNode"]
	282	[2331]	EQ       	0 R11 R18 ; if R11 ~= R18 then PC := 286
	283	[2331]	JMP      	286 ; PC := 286
	284	[2332]	OP_LOADBOOL	R18 0 0 ; R18 := false
	285	[2332]	RETURN   	R18 2 ; return R18 
	286	[2335]	GETGLOBAL	R18 K50 ; R18 := mDebugUnlockAllMissions
	287	[2335]	TEST     	R18 1 ; if R18 then PC := 311
	288	[2335]	JMP      	311 ; PC := 311
	289	[2335]	GETUPVAL 	R18 U1 ; R18 := U1
	290	[2335]	GETTABLE 	R18 R18 K51 ; R18 := R18["TENNOCON_RELAY"]
	291	[2335]	EQ       	0 R12 R18 ; if R12 ~= R18 then PC := 311
	292	[2335]	JMP      	311 ; PC := 311
	293	[2335]	GETGLOBAL	R18 K30 ; R18 := 0x0032441c
	294	[2335]	GETTABLE 	R18 R18 K31 ; R18 := R18["CachedGoalInfo"]
	295	[2335]	GETTABLE 	R18 R18 R11 ; R18 := R18[R11]
	296	[2335]	TEST     	R18 0 ; if not R18 then PC := 309
	297	[2335]	JMP      	309 ; PC := 309
	298	[2335]	GETGLOBAL	R18 K23 ; R18 := 0x7b998233
	299	[2335]	GETGLOBAL	R19 K52 ; R19 := 0x25d99d89
	300	[2335]	CALL     	R18 2 2 ; R18 := R18(R19)
	301	[2335]	TEST     	R18 1 ; if R18 then PC := 311
	302	[2335]	JMP      	311 ; PC := 311
	303	[2335]	GETUPVAL 	R18 U5 ; R18 := U5
	304	[2335]	GETTABLE 	R18 R18 K53 ; R18 := R18[0xbc682855]
	305	[2335]	GETGLOBAL	R19 K52 ; R19 := 0x25d99d89
	306	[2335]	CALL     	R18 2 2 ; R18 := R18(R19)
	307	[2335]	TEST     	R18 1 ; if R18 then PC := 311
	308	[2335]	JMP      	311 ; PC := 311
	309	[2338]	OP_LOADBOOL	R18 0 0 ; R18 := false
	310	[2338]	RETURN   	R18 2 ; return R18 
	311	[2341]	GETGLOBAL	R18 K50 ; R18 := mDebugUnlockAllMissions
	312	[2341]	TEST     	R18 1 ; if R18 then PC := 334
	313	[2341]	JMP      	334 ; PC := 334
	314	[2341]	GETUPVAL 	R18 U1 ; R18 := U1
	315	[2341]	GETTABLE 	R18 R18 K54 ; R18 := R18["DEVSTREAM_RELAY"]
	316	[2341]	EQ       	1 R12 R18 ; if R12 == R18 then PC := 323
	317	[2341]	JMP      	323 ; PC := 323
	318	[2341]	GETTABLE 	R18 R0 K4 ; R18 := R0["name"]
	319	[2341]	GETUPVAL 	R19 U1 ; R19 := U1
	320	[2341]	GETTABLE 	R19 R19 K55 ; R19 := R19["TENNOCON_RELAY_B_NODE"]
	321	[2341]	EQ       	0 R18 R19 ; if R18 ~= R19 then PC := 334
	322	[2341]	JMP      	334 ; PC := 334
	323	[2341]	GETGLOBAL	R18 K30 ; R18 := 0x0032441c
	324	[2341]	GETTABLE 	R18 R18 K31 ; R18 := R18["CachedGoalInfo"]
	325	[2341]	TEST     	R18 0 ; if not R18 then PC := 332
	326	[2341]	JMP      	332 ; PC := 332
	327	[2341]	GETGLOBAL	R18 K30 ; R18 := 0x0032441c
	328	[2341]	GETTABLE 	R18 R18 K31 ; R18 := R18["CachedGoalInfo"]
	329	[2341]	GETTABLE 	R18 R18 R11 ; R18 := R18[R11]
	330	[2341]	TEST     	R18 1 ; if R18 then PC := 334
	331	[2341]	JMP      	334 ; PC := 334
	332	[2343]	OP_LOADBOOL	R18 0 0 ; R18 := false
	333	[2343]	RETURN   	R18 2 ; return R18 
	334	[2346]	GETTABLE 	R18 R0 K44 ; R18 := R0["region"]
	335	[2346]	ADD      	R18 R18 K39 ; R18 := R18 + 1.000000
	336	[2346]	GETUPVAL 	R19 U0 ; R19 := U0
	337	[2346]	GETTABLE 	R19 R19 K56 ; R19 := R19["REGION_ID_DARK_SECTOR"]
	338	[2346]	EQ       	0 R18 R19 ; if R18 ~= R19 then PC := 342
	339	[2346]	JMP      	342 ; PC := 342
	340	[2347]	OP_LOADBOOL	R18 0 0 ; R18 := false
	341	[2347]	RETURN   	R18 2 ; return R18 
	342	[2350]	GETUPVAL 	R18 U2 ; R18 := U2
	343	[2350]	TEST     	R18 1 ; if R18 then PC := 356
	344	[2350]	JMP      	356 ; PC := 356
	345	[2350]	GETUPVAL 	R18 U1 ; R18 := U1
	346	[2350]	GETTABLE 	R18 R18 K29 ; R18 := R18["SQUAD_LINK_EVENT"]
	347	[2350]	EQ       	0 R12 R18 ; if R12 ~= R18 then PC := 356
	348	[2350]	JMP      	356 ; PC := 356
	349	[2350]	GETGLOBAL	R18 K30 ; R18 := 0x0032441c
	350	[2350]	GETTABLE 	R18 R18 K31 ; R18 := R18["CachedGoalInfo"]
	351	[2350]	GETTABLE 	R18 R18 R11 ; R18 := R18[R11]
	352	[2350]	TEST     	R18 1 ; if R18 then PC := 356
	353	[2350]	JMP      	356 ; PC := 356
	354	[2351]	OP_LOADBOOL	R18 0 0 ; R18 := false
	355	[2351]	RETURN   	R18 2 ; return R18 
	356	[2354]	GETUPVAL 	R18 U1 ; R18 := U1
	357	[2354]	GETTABLE 	R18 R18 K57 ; R18 := R18["NEMESIS_SHOWDOWN"]
	358	[2354]	EQ       	0 R12 R18 ; if R12 ~= R18 then PC := 367
	359	[2354]	JMP      	367 ; PC := 367
	360	[2354]	GETGLOBAL	R18 K0 ; R18 := _T
	361	[2354]	GETTABLE 	R18 R18 K58 ; R18 := R18["CachedNemesisMissions"]
	362	[2354]	GETTABLE 	R18 R18 R11 ; R18 := R18[R11]
	363	[2354]	TEST     	R18 1 ; if R18 then PC := 367
	364	[2354]	JMP      	367 ; PC := 367
	365	[2355]	OP_LOADBOOL	R18 0 0 ; R18 := false
	366	[2355]	RETURN   	R18 2 ; return R18 
	367	[2358]	OP_LOADBOOL	R18 1 0 ; R18 := true
	368	[2358]	RETURN   	R18 2 ; return R18 
	369	[2359]	RETURN   	R0 1 ; return 

function #56 <?:2361,2671> (862 instructions, 3448 bytes at 00000211141E64E0)
2 params, 52 slots, 12 upvalues, 0 locals, 180 constants, 0 functions
	1	[2380]	EQ       	0 R1 K0 ; if R1 ~= nil then PC := 5
	2	[2380]	JMP      	5 ; PC := 5
	3	[2381]	NEWTABLE 	R2 0 0 ; R2 := {}
	4	[2381]	MOVE     	R1 R2 ; R1 := R2
	5	[2384]	GETUPVAL 	R2 U0 ; R2 := U0
	6	[2384]	MOVE     	R3 R0 ; R3 := R0
	7	[2384]	CALL     	R2 2 2 ; R2 := R2(R3)
	8	[2384]	TEST     	R2 1 ; if R2 then PC := 14
	9	[2384]	JMP      	14 ; PC := 14
	10	[2384]	GETTABLE 	R2 R1 K1 ; R2 := R1["decoOnly"]
	11	[2384]	TEST     	R2 1 ; if R2 then PC := 14
	12	[2384]	JMP      	14 ; PC := 14
	13	[2385]	RETURN   	R0 1 ; return 
	14	[2388]	OP_LOADBOOL	R2 1 0 ; R2 := true
	15	[2389]	OP_LOADBOOL	R3 0 0 ; R3 := false
	16	[2392]	GETTABLE 	R4 R0 K2 ; R4 := R0["name"]
	17	[2393]	GETGLOBAL	R5 K3 ; R5 := 0x64fb1586
	18	[2393]	MOVE     	R6 R4 ; R6 := R4
	19	[2393]	CALL     	R5 2 2 ; R5 := R5(R6)
	20	[2395]	GETUPVAL 	R6 U1 ; R6 := U1
	21	[2395]	GETTABLE 	R6 R6 K4 ; R6 := R6["CETUS_NODE_TAG"]
	22	[2395]	EQ       	0 R4 R6 ; if R4 ~= R6 then PC := 31
	23	[2395]	JMP      	31 ; PC := 31
	24	[2397]	GETUPVAL 	R6 U1 ; R6 := U1
	25	[2397]	GETTABLE 	R6 R6 K5 ; R6 := R6[0x52fb05b3]
	26	[2397]	GETTABLE 	R7 R0 K6 ; R7 := R0["mission"]
	27	[2397]	GETTABLE 	R7 R7 K7 ; R7 := R7["questReq"]
	28	[2397]	CALL     	R6 2 2 ; R6 := R6(R7)
	29	[2397]	NOT      	R3 R6 ; R3 := not R6
	30	[2397]	JMP      	114 ; PC := 114
	31	[2398]	GETUPVAL 	R6 U1 ; R6 := U1
	32	[2398]	GETTABLE 	R6 R6 K8 ; R6 := R6["PLAINS_NODE_TAG"]
	33	[2398]	EQ       	0 R4 R6 ; if R4 ~= R6 then PC := 42
	34	[2398]	JMP      	42 ; PC := 42
	35	[2400]	GETGLOBAL	R6 K9 ; R6 := 0x25d99d89
	36	[2400]	SELF     	R6 R6 K10 ; R7 := R6; R6 := R6[0x21a1810f]
	37	[2400]	GETUPVAL 	R8 U1 ; R8 := U1
	38	[2400]	GETTABLE 	R8 R8 K8 ; R8 := R8["PLAINS_NODE_TAG"]
	39	[2400]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	40	[2400]	NOT      	R3 R6 ; R3 := not R6
	41	[2400]	JMP      	114 ; PC := 114
	42	[2401]	GETUPVAL 	R6 U1 ; R6 := U1
	43	[2401]	GETTABLE 	R6 R6 K11 ; R6 := R6["ORB_VALLIS_NODE_TAG"]
	44	[2401]	EQ       	0 R4 R6 ; if R4 ~= R6 then PC := 53
	45	[2401]	JMP      	53 ; PC := 53
	46	[2403]	GETUPVAL 	R6 U1 ; R6 := U1
	47	[2403]	GETTABLE 	R6 R6 K5 ; R6 := R6[0x52fb05b3]
	48	[2403]	GETUPVAL 	R7 U2 ; R7 := U2
	49	[2403]	GETTABLE 	R7 R7 K12 ; R7 := R7["solarisIntroQuest"]
	50	[2403]	CALL     	R6 2 2 ; R6 := R6(R7)
	51	[2403]	NOT      	R3 R6 ; R3 := not R6
	52	[2403]	JMP      	114 ; PC := 114
	53	[2404]	GETGLOBAL	R6 K13 ; R6 := 0x7b998233
	54	[2404]	GETTABLE 	R7 R0 K6 ; R7 := R0["mission"]
	55	[2404]	GETTABLE 	R7 R7 K7 ; R7 := R7["questReq"]
	56	[2404]	CALL     	R6 2 2 ; R6 := R6(R7)
	57	[2404]	TEST     	R6 1 ; if R6 then PC := 114
	58	[2404]	JMP      	114 ; PC := 114
	59	[2405]	GETGLOBAL	R6 K9 ; R6 := 0x25d99d89
	60	[2405]	SELF     	R6 R6 K14 ; R7 := R6; R6 := R6[0x25a6e75e]
	61	[2405]	CALL     	R6 2 2 ; R6 := R6(R7)
	62	[2405]	SELF     	R6 R6 K15 ; R7 := R6; R6 := R6[0x8e7c3b5e]
	63	[2405]	CALL     	R6 2 2 ; R6 := R6(R7)
	64	[2405]	GETTABLE 	R7 R0 K6 ; R7 := R0["mission"]
	65	[2405]	GETTABLE 	R7 R7 K7 ; R7 := R7["questReq"]
	66	[2405]	EQ       	0 R6 R7 ; if R6 ~= R7 then PC := 78
	67	[2405]	JMP      	78 ; PC := 78
	68	[2405]	GETTABLE 	R6 R0 K16 ; R6 := R0["region"]
	69	[2405]	GETUPVAL 	R7 U1 ; R7 := U1
	70	[2405]	GETTABLE 	R7 R7 K17 ; R7 := R7["REGION_ID_ZARIMAN"]
	71	[2405]	SUB      	R7 R7 K18 ; R7 := R7 - 1.000000
	72	[2405]	EQ       	0 R6 R7 ; if R6 ~= R7 then PC := 77
	73	[2405]	JMP      	77 ; PC := 77
	74	[2405]	GETUPVAL 	R6 U3 ; R6 := U3
	75	[2405]	EQ       	0 R4 R6 ; if R4 ~= R6 then PC := 78
	76	[2405]	JMP      	78 ; PC := 78
	77	[2405]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 78
	78	[2405]	OP_LOADBOOL	R6 1 0 ; R6 := true
	79	[2406]	TEST     	R6 0 ; if not R6 then PC := 114
	80	[2406]	JMP      	114 ; PC := 114
	81	[2406]	GETGLOBAL	R7 K19 ; R7 := mDebugUnlockAllMissions
	82	[2406]	TEST     	R7 1 ; if R7 then PC := 114
	83	[2406]	JMP      	114 ; PC := 114
	84	[2407]	GETTABLE 	R7 R0 K6 ; R7 := R0["mission"]
	85	[2407]	GETTABLE 	R7 R7 K20 ; R7 := R7["missionType"]
	86	[2407]	EQ       	1 R7 K22 ; if R7 == 32.000000 then PC := 92
	87	[2407]	JMP      	92 ; PC := 92
	88	[2407]	GETTABLE 	R7 R0 K6 ; R7 := R0["mission"]
	89	[2407]	GETTABLE 	R7 R7 K20 ; R7 := R7["missionType"]
	90	[2407]	EQ       	0 R7 K23 ; if R7 ~= 0.000000 then PC := 105
	91	[2407]	JMP      	105 ; PC := 105
	92	[2409]	GETUPVAL 	R7 U1 ; R7 := U1
	93	[2409]	GETTABLE 	R7 R7 K5 ; R7 := R7[0x52fb05b3]
	94	[2409]	GETTABLE 	R8 R0 K6 ; R8 := R0["mission"]
	95	[2409]	GETTABLE 	R8 R8 K7 ; R8 := R8["questReq"]
	96	[2409]	CALL     	R7 2 2 ; R7 := R7(R8)
	97	[2409]	TEST     	R7 1 ; if R7 then PC := 102
	98	[2409]	JMP      	102 ; PC := 102
	99	[2409]	GETTABLE 	R7 R0 K24 ; R7 := R0["unlocked"]
	100	[2409]	NOT      	R3 R7 ; R3 := not R7
	101	[2409]	JMP      	114 ; PC := 114
	102	[2409]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 103
	103	[2409]	OP_LOADBOOL	R3 1 0 ; R3 := true
	104	[2409]	JMP      	114 ; PC := 114
	105	[2410]	GETUPVAL 	R7 U1 ; R7 := U1
	106	[2410]	GETTABLE 	R7 R7 K5 ; R7 := R7[0x52fb05b3]
	107	[2410]	GETTABLE 	R8 R0 K6 ; R8 := R0["mission"]
	108	[2410]	GETTABLE 	R8 R8 K7 ; R8 := R8["questReq"]
	109	[2410]	CALL     	R7 2 2 ; R7 := R7(R8)
	110	[2410]	TEST     	R7 1 ; if R7 then PC := 114
	111	[2410]	JMP      	114 ; PC := 114
	112	[2412]	OP_LOADBOOL	R2 0 0 ; R2 := false
	113	[2413]	OP_LOADBOOL	R3 1 0 ; R3 := true
	114	[2418]	GETTABLE 	R7 R0 K25 ; R7 := R0["missionTag"]
	115	[2419]	LOADNIL  	R8 R8 ; R8 := nil
	116	[2421]	GETUPVAL 	R9 U4 ; R9 := U4
	117	[2421]	GETTABLE 	R9 R9 K26 ; R9 := R9["DESTROYED_NODE_TAG"]
	118	[2421]	EQ       	0 R7 R9 ; if R7 ~= R9 then PC := 123
	119	[2421]	JMP      	123 ; PC := 123
	120	[2422]	GETGLOBAL	R9 K28 ; R9 := 0xfe3ad5a0
	121	[2422]	SETTABLE 	R0 K27 R9 ; R0["deco"] := R9
	122	[2423]	OP_LOADBOOL	R2 0 0 ; R2 := false
	123	[2426]	GETGLOBAL	R9 K29 ; R9 := mNewWarMode
	124	[2426]	TEST     	R9 0 ; if not R9 then PC := 141
	125	[2426]	JMP      	141 ; PC := 141
	126	[2426]	GETTABLE 	R9 R0 K2 ; R9 := R0["name"]
	127	[2426]	GETUPVAL 	R10 U1 ; R10 := U1
	128	[2426]	GETTABLE 	R10 R10 K4 ; R10 := R10["CETUS_NODE_TAG"]
	129	[2426]	EQ       	0 R9 R10 ; if R9 ~= R10 then PC := 141
	130	[2426]	JMP      	141 ; PC := 141
	131	[2427]	GETGLOBAL	R9 K30 ; R9 := 0xb02c396e
	132	[2427]	SETTABLE 	R0 K27 R9 ; R0["deco"] := R9
	133	[2428]	GETGLOBAL	R9 K32 ; R9 := 0x00046924
	134	[2428]	LOADK    	R10 := -120.000000
	135	[2428]	LOADK    	R11 := 0.000000
	136	[2428]	LOADK    	R12 := 0.000000
	137	[2428]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	138	[2428]	SETTABLE 	R0 K31 R9 ; R0["decoRotation"] := R9
	139	[2429]	SETTABLE 	R0 K33 K34 ; R0["scale"] := 0.010000
	140	[2430]	SETTABLE 	R1 K1 K35 ; R1["decoOnly"] := true
	141	[2433]	GETTABLE 	R9 R1 K1 ; R9 := R1["decoOnly"]
	142	[2433]	TEST     	R9 0 ; if not R9 then PC := 146
	143	[2433]	JMP      	146 ; PC := 146
	144	[2434]	OP_LOADBOOL	R2 0 0 ; R2 := false
	145	[2435]	OP_LOADBOOL	R8 1 0 ; R8 := true
	146	[2438]	LOADNIL  	R9 R9 ; R9 := nil
	147	[2439]	GETUPVAL 	R10 U4 ; R10 := U4
	148	[2439]	GETTABLE 	R10 R10 K36 ; R10 := R10["RECONSTRUCTION_NODE_TAG"]
	149	[2439]	EQ       	1 R7 R10 ; if R7 == R10 then PC := 155
	150	[2439]	JMP      	155 ; PC := 155
	151	[2439]	GETUPVAL 	R10 U4 ; R10 := U4
	152	[2439]	GETTABLE 	R10 R10 K37 ; R10 := R10["UNDER_CONSTRUCTION_NODE_TAG"]
	153	[2439]	EQ       	0 R7 R10 ; if R7 ~= R10 then PC := 221
	154	[2439]	JMP      	221 ; PC := 221
	155	[2440]	GETGLOBAL	R10 K38 ; R10 := 0x7f5022cf
	156	[2440]	GETTABLE 	R10 R10 K39 ; R10 := R10[0xa5c556b9]
	157	[2440]	MOVE     	R11 R5 ; R11 := R5
	158	[2440]	LOADK    	R12 K40 ; R12 := "Rebuild"
	159	[2440]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	160	[2441]	MOVE     	R11 R5 ; R11 := R5
	161	[2442]	TEST     	R10 0 ; if not R10 then PC := 170
	162	[2442]	JMP      	170 ; PC := 170
	163	[2443]	GETGLOBAL	R12 K38 ; R12 := 0x7f5022cf
	164	[2443]	GETTABLE 	R12 R12 K41 ; R12 := R12[0x1a94c9cc]
	165	[2443]	MOVE     	R13 R5 ; R13 := R5
	166	[2443]	LOADK    	R14 := 1.000000
	167	[2443]	SUB      	R15 R10 K18 ; R15 := R10 - 1.000000
	168	[2443]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	169	[2443]	MOVE     	R11 R12 ; R11 := R12
	170	[2446]	GETGLOBAL	R12 K42 ; R12 := mConstructionProjectNodes
	171	[2446]	GETTABLE 	R12 R12 R11 ; R12 := R12[R11]
	172	[2447]	OP_LOADBOOL	R13 0 0 ; R13 := false
	173	[2448]	LOADNIL  	R14 R14 ; R14 := nil
	174	[2449]	TEST     	R12 0 ; if not R12 then PC := 192
	175	[2449]	JMP      	192 ; PC := 192
	176	[2450]	GETTABLE 	R14 R12 K43 ; R14 := R12["info"]
	177	[2451]	TEST     	R14 0 ; if not R14 then PC := 192
	178	[2451]	JMP      	192 ; PC := 192
	179	[2451]	GETTABLE 	R15 R14 K44 ; R15 := R14["mActivation"]
	180	[2451]	SELF     	R15 R15 K45 ; R16 := R15; R15 := R15[0x56c01834]
	181	[2451]	CALL     	R15 2 2 ; R15 := R15(R16)
	182	[2451]	TEST     	R15 0 ; if not R15 then PC := 192
	183	[2451]	JMP      	192 ; PC := 192
	184	[2451]	GETGLOBAL	R15 K46 ; R15 := 0x34291f5c
	185	[2451]	GETTABLE 	R15 R15 K47 ; R15 := R15[0x397b920f]
	186	[2451]	GETTABLE 	R16 R12 K43 ; R16 := R12["info"]
	187	[2451]	GETTABLE 	R16 R16 K44 ; R16 := R16["mActivation"]
	188	[2451]	CALL     	R15 2 2 ; R15 := R15(R16)
	189	[2451]	LE       	0 R15 K23 ; if R15 > 0.000000 then PC := 192
	190	[2451]	JMP      	192 ; PC := 192
	191	[2452]	OP_LOADBOOL	R13 1 0 ; R13 := true
	192	[2456]	TEST     	R13 0 ; if not R13 then PC := 195
	193	[2456]	JMP      	195 ; PC := 195
	194	[2457]	GETTABLE 	R9 R12 K48 ; R9 := R12["progress"]
	195	[2459]	TEST     	R10 0 ; if not R10 then PC := 203
	196	[2459]	JMP      	203 ; PC := 203
	197	[2461]	TEST     	R13 0 ; if not R13 then PC := 201
	198	[2461]	JMP      	201 ; PC := 201
	199	[2461]	EQ       	1 R9 K23 ; if R9 == 0.000000 then PC := 221
	200	[2461]	JMP      	221 ; PC := 221
	201	[2462]	RETURN   	R0 1 ; return 
	202	[2463]	JMP      	221 ; PC := 221
	203	[2466]	TEST     	R13 1 ; if R13 then PC := 213
	204	[2466]	JMP      	213 ; PC := 213
	205	[2467]	OP_LOADBOOL	R15 1 0 ; R15 := true
	206	[2468]	TEST     	R15 1 ; if R15 then PC := 221
	207	[2468]	JMP      	221 ; PC := 221
	208	[2469]	OP_LOADBOOL	R2 0 0 ; R2 := false
	209	[2470]	GETGLOBAL	R16 K28 ; R16 := 0xfe3ad5a0
	210	[2470]	SETTABLE 	R0 K27 R16 ; R0["deco"] := R16
	211	[2470]	JMP      	221 ; PC := 221
	212	[2473]	JMP      	221 ; PC := 221
	213	[2474]	EQ       	0 R9 K23 ; if R9 ~= 0.000000 then PC := 217
	214	[2474]	JMP      	217 ; PC := 217
	215	[2475]	RETURN   	R0 1 ; return 
	216	[2475]	JMP      	221 ; PC := 221
	217	[2477]	EQ       	0 R9 K18 ; if R9 ~= 1.000000 then PC := 221
	218	[2477]	JMP      	221 ; PC := 221
	219	[2478]	SETTABLE 	R0 K49 K23 ; R0["nodeType"] := 0.000000
	220	[2478]	JMP      	221 ; PC := 221
	221	[2486]	GETTABLE 	R16 R0 K50 ; R16 := R0["pos"]
	222	[2487]	LOADNIL  	R17 R17 ; R17 := nil
	223	[2489]	GETGLOBAL	R18 K51 ; R18 := 0x0032441c
	224	[2489]	GETTABLE 	R18 R18 K52 ; R18 := R18["CachedGoalInfo"]
	225	[2489]	GETTABLE 	R18 R18 R5 ; R18 := R18[R5]
	226	[2489]	TEST     	R18 0 ; if not R18 then PC := 354
	227	[2489]	JMP      	354 ; PC := 354
	228	[2490]	GETGLOBAL	R18 K51 ; R18 := 0x0032441c
	229	[2490]	GETTABLE 	R18 R18 K52 ; R18 := R18["CachedGoalInfo"]
	230	[2490]	GETTABLE 	R18 R18 R5 ; R18 := R18[R5]
	231	[2490]	GETTABLE 	R18 R18 K53 ; R18 := R18["mFomorian"]
	232	[2490]	TEST     	R18 0 ; if not R18 then PC := 291
	233	[2490]	JMP      	291 ; PC := 291
	234	[2492]	GETGLOBAL	R18 K54 ; R18 := mRadialSolarMap
	235	[2492]	SELF     	R18 R18 K55 ; R19 := R18; R18 := R18[0x3ad9ed31]
	236	[2492]	GETGLOBAL	R20 K51 ; R20 := 0x0032441c
	237	[2492]	GETTABLE 	R20 R20 K52 ; R20 := R20["CachedGoalInfo"]
	238	[2492]	GETTABLE 	R20 R20 R5 ; R20 := R20[R5]
	239	[2492]	GETTABLE 	R20 R20 K56 ; R20 := R20["mVictimNode"]
	240	[2492]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	241	[2493]	GETTABLE 	R19 R18 K50 ; R19 := R18["pos"]
	242	[2493]	SUB      	R19 R19 R16 ; R19 := R19 - R16
	243	[2494]	MUL      	R20 R19 K57 ; R20 := R19 * 0.800000
	244	[2495]	GETGLOBAL	R21 K51 ; R21 := 0x0032441c
	245	[2495]	GETTABLE 	R21 R21 K52 ; R21 := R21["CachedGoalInfo"]
	246	[2495]	GETTABLE 	R21 R21 R5 ; R21 := R21[R5]
	247	[2495]	GETTABLE 	R21 R21 K44 ; R21 := R21["mActivation"]
	248	[2495]	SELF     	R21 R21 K58 ; R22 := R21; R21 := R21[0x10f68684]
	249	[2495]	GETGLOBAL	R23 K51 ; R23 := 0x0032441c
	250	[2495]	GETTABLE 	R23 R23 K52 ; R23 := R23["CachedGoalInfo"]
	251	[2495]	GETTABLE 	R23 R23 R5 ; R23 := R23[R5]
	252	[2495]	GETTABLE 	R23 R23 K59 ; R23 := R23["mExpiry"]
	253	[2495]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	254	[2496]	GETGLOBAL	R22 K60 ; R22 := 0x42dcc9f5
	255	[2496]	GETGLOBAL	R23 K46 ; R23 := 0x34291f5c
	256	[2496]	GETTABLE 	R23 R23 K47 ; R23 := R23[0x397b920f]
	257	[2496]	GETGLOBAL	R24 K51 ; R24 := 0x0032441c
	258	[2496]	GETTABLE 	R24 R24 K52 ; R24 := R24["CachedGoalInfo"]
	259	[2496]	GETTABLE 	R24 R24 R5 ; R24 := R24[R5]
	260	[2496]	GETTABLE 	R24 R24 K59 ; R24 := R24["mExpiry"]
	261	[2496]	CALL     	R23 2 2 ; R23 := R23(R24)
	262	[2496]	LOADK    	R24 := 0.000000
	263	[2496]	MOVE     	R25 R21 ; R25 := R21
	264	[2496]	CALL     	R22 4 2 ; R22 := R22(R23,R24,R25)
	265	[2497]	DIV      	R23 R22 R21 ; R23 := R22 / R21
	266	[2497]	SUB      	R23 K18 R23 ; R23 := 1.000000 - R23
	267	[2498]	MUL      	R24 R20 R23 ; R24 := R20 * R23
	268	[2499]	ADD      	R16 R16 R24 ; R16 := R16 + R24
	269	[2501]	GETGLOBAL	R25 K51 ; R25 := 0x0032441c
	270	[2501]	GETTABLE 	R25 R25 K52 ; R25 := R25["CachedGoalInfo"]
	271	[2501]	GETTABLE 	R25 R25 R5 ; R25 := R25[R5]
	272	[2501]	GETTABLE 	R25 R25 K61 ; R25 := R25["mFaction"]
	273	[2501]	EQ       	0 R25 K18 ; if R25 ~= 1.000000 then PC := 283
	274	[2501]	JMP      	283 ; PC := 283
	275	[2502]	GETGLOBAL	R25 K62 ; R25 := 0x4fb130a9
	276	[2502]	SETTABLE 	R0 K27 R25 ; R0["deco"] := R25
	277	[2503]	GETGLOBAL	R25 K32 ; R25 := 0x00046924
	278	[2503]	LOADK    	R26 := 50.000000
	279	[2503]	LOADK    	R27 := 0.000000
	280	[2503]	LOADK    	R28 := 0.000000
	281	[2503]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	282	[2503]	SETTABLE 	R0 K31 R25 ; R0["decoRotation"] := R25
	283	[2506]	GETGLOBAL	R25 K51 ; R25 := 0x0032441c
	284	[2506]	GETTABLE 	R25 R25 K52 ; R25 := R25["CachedGoalInfo"]
	285	[2506]	GETTABLE 	R25 R25 R5 ; R25 := R25[R5]
	286	[2506]	GETTABLE 	R25 R25 K63 ; R25 := R25["mHealthPct"]
	287	[2506]	LE       	0 R25 K23 ; if R25 > 0.000000 then PC := 354
	288	[2506]	JMP      	354 ; PC := 354
	289	[2508]	OP_LOADBOOL	R2 0 0 ; R2 := false
	290	[2509]	JMP      	354 ; PC := 354
	291	[2510]	GETGLOBAL	R25 K38 ; R25 := 0x7f5022cf
	292	[2510]	GETTABLE 	R25 R25 K39 ; R25 := R25[0xa5c556b9]
	293	[2510]	GETGLOBAL	R26 K3 ; R26 := 0x64fb1586
	294	[2510]	GETGLOBAL	R27 K51 ; R27 := 0x0032441c
	295	[2510]	GETTABLE 	R27 R27 K52 ; R27 := R27["CachedGoalInfo"]
	296	[2510]	GETTABLE 	R27 R27 R5 ; R27 := R27[R5]
	297	[2510]	GETTABLE 	R27 R27 K64 ; R27 := R27["mTag"]
	298	[2510]	CALL     	R26 2 2 ; R26 := R26(R27)
	299	[2510]	LOADK    	R27 K65 ; R27 := "Halloween"
	300	[2510]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	301	[2510]	EQ       	1 R25 K0 ; if R25 == nil then PC := 354
	302	[2510]	JMP      	354 ; PC := 354
	303	[2511]	GETGLOBAL	R25 K66 ; R25 := 0x7ed0a956
	304	[2511]	LOADK    	R26 K67 ; R26 := "/Lotus/Upgrades/Skins/Festivities/PumpkinHeadDeco"
	305	[2511]	CALL     	R25 2 2 ; R25 := R25(R26)
	306	[2511]	SETTABLE 	R0 K27 R25 ; R0["deco"] := R25
	307	[2512]	GETGLOBAL	R25 K32 ; R25 := 0x00046924
	308	[2512]	LOADK    	R26 := 180.000000
	309	[2512]	LOADK    	R27 := 0.000000
	310	[2512]	LOADK    	R28 := 0.000000
	311	[2512]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	312	[2512]	SETTABLE 	R0 K31 R25 ; R0["decoRotation"] := R25
	313	[2513]	GETUPVAL 	R25 U1 ; R25 := U1
	314	[2513]	GETTABLE 	R25 R25 K68 ; R25 := R25["OROKIN_TOWER_NODE_TAG"]
	315	[2513]	EQ       	0 R4 R25 ; if R4 ~= R25 then PC := 319
	316	[2513]	JMP      	319 ; PC := 319
	317	[2514]	SETTABLE 	R0 K33 K69 ; R0["scale"] := 0.020000
	318	[2514]	JMP      	326 ; PC := 326
	319	[2516]	SETTABLE 	R0 K33 K70 ; R0["scale"] := 0.040000
	320	[2517]	GETGLOBAL	R25 K32 ; R25 := 0x00046924
	321	[2517]	LOADK    	R26 := -50.000000
	322	[2517]	LOADK    	R27 := 0.000000
	323	[2517]	LOADK    	R28 := 0.000000
	324	[2517]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	325	[2517]	MOVE     	R17 R25 ; R17 := R25
	326	[2519]	EQ       	0 R5 K71 ; if R5 ~= "EventNode24" then PC := 330
	327	[2519]	JMP      	330 ; PC := 330
	328	[2520]	GETTABLE 	R25 R0 K72 ; R25 := R0["decoOffset"]
	329	[2520]	SETTABLE 	R25 K73 K74 ; R25["z"] := -0.100000
	330	[2522]	GETGLOBAL	R25 K75 ; R25 := _T
	331	[2522]	GETTABLE 	R25 R25 K76 ; R25 := R25["CachedGoalKeys"]
	332	[2522]	TEST     	R25 0 ; if not R25 then PC := 354
	333	[2522]	JMP      	354 ; PC := 354
	334	[2522]	GETGLOBAL	R25 K75 ; R25 := _T
	335	[2522]	GETTABLE 	R25 R25 K76 ; R25 := R25["CachedGoalKeys"]
	336	[2522]	GETTABLE 	R25 R25 R5 ; R25 := R25[R5]
	337	[2522]	TEST     	R25 0 ; if not R25 then PC := 354
	338	[2522]	JMP      	354 ; PC := 354
	339	[2523]	GETGLOBAL	R25 K75 ; R25 := _T
	340	[2523]	GETTABLE 	R25 R25 K76 ; R25 := R25["CachedGoalKeys"]
	341	[2523]	GETTABLE 	R25 R25 R5 ; R25 := R25[R5]
	342	[2523]	SELF     	R25 R25 K77 ; R26 := R25; R25 := R25[0x95e6d5cc]
	343	[2523]	CALL     	R25 2 2 ; R25 := R25(R26)
	344	[2524]	GETTABLE 	R26 R25 K78 ; R26 := R25["x"]
	345	[2524]	EQ       	1 R26 K23 ; if R26 == 0.000000 then PC := 354
	346	[2524]	JMP      	354 ; PC := 354
	347	[2524]	GETTABLE 	R26 R25 K79 ; R26 := R25["y"]
	348	[2524]	EQ       	1 R26 K23 ; if R26 == 0.000000 then PC := 354
	349	[2524]	JMP      	354 ; PC := 354
	350	[2524]	GETTABLE 	R26 R25 K73 ; R26 := R25["z"]
	351	[2524]	EQ       	1 R26 K23 ; if R26 == 0.000000 then PC := 354
	352	[2524]	JMP      	354 ; PC := 354
	353	[2525]	SETTABLE 	R0 K50 R25 ; R0["pos"] := R25
	354	[2531]	GETUPVAL 	R26 U5 ; R26 := U5
	355	[2531]	LOADK    	R27 K80 ; R27 := "Nodes.Node"
	356	[2531]	LOADK    	R28 K81 ; R28 := "Node"
	357	[2531]	GETUPVAL 	R29 U6 ; R29 := U6
	358	[2531]	LEN      	R29 R29 ; R29 := # R29
	359	[2531]	ADD      	R29 R29 K18 ; R29 := R29 + 1.000000
	360	[2531]	LOADK    	R30 := -5000.000000
	361	[2531]	CALL     	R26 5 2 ; R26 := R26(R27,R28,R29,R30)
	362	[2532]	GETGLOBAL	R27 K82 ; R27 := 0xae91e43b
	363	[2532]	SELF     	R27 R27 K83 ; R28 := R27; R27 := R27[0x09839320]
	364	[2532]	MOVE     	R29 R26 ; R29 := R26
	365	[2532]	CALL     	R27 3 2 ; R27 := R27(R28,R29)
	366	[2533]	GETGLOBAL	R28 K82 ; R28 := 0xae91e43b
	367	[2533]	SELF     	R28 R28 K83 ; R29 := R28; R28 := R28[0x09839320]
	368	[2533]	MOVE     	R30 R26 ; R30 := R26
	369	[2533]	LOADK    	R31 K84 ; R31 := ".Node"
	370	[2533]	CONCAT   	R30 R30 R31 ; R30 := R30 .. R31
	371	[2533]	CALL     	R28 3 2 ; R28 := R28(R29,R30)
	372	[2535]	GETGLOBAL	R29 K82 ; R29 := 0xae91e43b
	373	[2535]	SELF     	R29 R29 K85 ; R30 := R29; R29 := R29[0xd5181643]
	374	[2535]	MOVE     	R31 R26 ; R31 := R26
	375	[2535]	LOADK    	R32 K86 ; R32 := ".Name.Bg"
	376	[2535]	CONCAT   	R31 R31 R32 ; R31 := R31 .. R32
	377	[2535]	GETGLOBAL	R32 K51 ; R32 := 0x0032441c
	378	[2535]	GETTABLE 	R32 R32 K87 ; R32 := R32["UIMaterial_SmoothEdgeNoDepthTest"]
	379	[2535]	CALL     	R29 4 1 ; R29(R30,R31,R32)
	380	[2536]	GETGLOBAL	R29 K82 ; R29 := 0xae91e43b
	381	[2536]	SELF     	R29 R29 K88 ; R30 := R29; R29 := R29[0x19ad3f57]
	382	[2536]	MOVE     	R31 R26 ; R31 := R26
	383	[2536]	LOADK    	R32 K89 ; R32 := "Name.Bg"
	384	[2536]	LOADK    	R33 K90 ; R33 := "noMenuSelection"
	385	[2536]	OP_LOADBOOL	R34 1 0 ; R34 := true
	386	[2536]	CALL     	R29 6 1 ; R29(R30,R31,R32,R33,R34)
	387	[2539]	GETGLOBAL	R29 K75 ; R29 := _T
	388	[2539]	GETTABLE 	R29 R29 K91 ; R29 := R29["CachedActiveMissions"]
	389	[2539]	TEST     	R29 0 ; if not R29 then PC := 402
	390	[2539]	JMP      	402 ; PC := 402
	391	[2539]	GETGLOBAL	R29 K75 ; R29 := _T
	392	[2539]	GETTABLE 	R29 R29 K91 ; R29 := R29["CachedActiveMissions"]
	393	[2539]	GETTABLE 	R29 R29 R5 ; R29 := R29[R5]
	394	[2539]	TEST     	R29 0 ; if not R29 then PC := 402
	395	[2539]	JMP      	402 ; PC := 402
	396	[2539]	GETGLOBAL	R29 K75 ; R29 := _T
	397	[2539]	GETTABLE 	R29 R29 K91 ; R29 := R29["CachedActiveMissions"]
	398	[2539]	GETTABLE 	R29 R29 R5 ; R29 := R29[R5]
	399	[2539]	GETTABLE 	R29 R29 K92 ; R29 := R29["mVisible"]
	400	[2539]	TEST     	R29 1 ; if R29 then PC := 456
	401	[2539]	JMP      	456 ; PC := 456
	402	[2540]	GETGLOBAL	R29 K51 ; R29 := 0x0032441c
	403	[2540]	GETTABLE 	R29 R29 K52 ; R29 := R29["CachedGoalInfo"]
	404	[2540]	GETTABLE 	R29 R29 R5 ; R29 := R29[R5]
	405	[2540]	TEST     	R29 1 ; if R29 then PC := 456
	406	[2540]	JMP      	456 ; PC := 456
	407	[2541]	GETGLOBAL	R29 K75 ; R29 := _T
	408	[2541]	GETTABLE 	R29 R29 K93 ; R29 := R29["CachedAlerts"]
	409	[2541]	GETTABLE 	R29 R29 R5 ; R29 := R29[R5]
	410	[2541]	TEST     	R29 0 ; if not R29 then PC := 418
	411	[2541]	JMP      	418 ; PC := 418
	412	[2541]	GETGLOBAL	R29 K75 ; R29 := _T
	413	[2541]	GETTABLE 	R29 R29 K93 ; R29 := R29["CachedAlerts"]
	414	[2541]	GETTABLE 	R29 R29 R5 ; R29 := R29[R5]
	415	[2541]	GETTABLE 	R29 R29 K92 ; R29 := R29["mVisible"]
	416	[2541]	TEST     	R29 1 ; if R29 then PC := 456
	417	[2541]	JMP      	456 ; PC := 456
	418	[2542]	GETGLOBAL	R29 K75 ; R29 := _T
	419	[2542]	GETTABLE 	R29 R29 K94 ; R29 := R29["CachedInvasionInfo"]
	420	[2542]	GETTABLE 	R29 R29 R5 ; R29 := R29[R5]
	421	[2542]	TEST     	R29 1 ; if R29 then PC := 456
	422	[2542]	JMP      	456 ; PC := 456
	423	[2543]	GETGLOBAL	R29 K75 ; R29 := _T
	424	[2543]	GETTABLE 	R29 R29 K95 ; R29 := R29["CachedSyndicateMissions"]
	425	[2543]	GETTABLE 	R29 R29 R5 ; R29 := R29[R5]
	426	[2543]	TEST     	R29 0 ; if not R29 then PC := 434
	427	[2543]	JMP      	434 ; PC := 434
	428	[2543]	GETGLOBAL	R29 K75 ; R29 := _T
	429	[2543]	GETTABLE 	R29 R29 K95 ; R29 := R29["CachedSyndicateMissions"]
	430	[2543]	GETTABLE 	R29 R29 R5 ; R29 := R29[R5]
	431	[2543]	GETTABLE 	R29 R29 K92 ; R29 := R29["mVisible"]
	432	[2543]	TEST     	R29 1 ; if R29 then PC := 456
	433	[2543]	JMP      	456 ; PC := 456
	434	[2544]	GETTABLE 	R29 R0 K49 ; R29 := R0["nodeType"]
	435	[2544]	EQ       	1 R29 K96 ; if R29 == 3.000000 then PC := 455
	436	[2544]	JMP      	455 ; PC := 455
	437	[2545]	GETGLOBAL	R29 K13 ; R29 := 0x7b998233
	438	[2545]	GETTABLE 	R30 R0 K6 ; R30 := R0["mission"]
	439	[2545]	GETTABLE 	R30 R30 K97 ; R30 := R30["levelKeyName"]
	440	[2545]	CALL     	R29 2 2 ; R29 := R29(R30)
	441	[2545]	TEST     	R29 0 ; if not R29 then PC := 455
	442	[2545]	JMP      	455 ; PC := 455
	443	[2546]	GETGLOBAL	R29 K13 ; R29 := 0x7b998233
	444	[2546]	GETTABLE 	R30 R0 K98 ; R30 := R0["keyChain"]
	445	[2546]	CALL     	R29 2 2 ; R29 := R29(R30)
	446	[2546]	TEST     	R29 0 ; if not R29 then PC := 455
	447	[2546]	JMP      	455 ; PC := 455
	448	[2547]	GETTABLE 	R29 R0 K49 ; R29 := R0["nodeType"]
	449	[2547]	EQ       	1 R29 K99 ; if R29 == 6.000000 then PC := 455
	450	[2547]	JMP      	455 ; PC := 455
	451	[2548]	GETTABLE 	R29 R0 K49 ; R29 := R0["nodeType"]
	452	[2548]	EQ       	1 R29 K100 ; if R29 == 7.000000 then PC := 455
	453	[2548]	JMP      	455 ; PC := 455
	454	[2548]	OP_LOADBOOL	R29 0 1 ; R29 := false; PC := 455
	455	[2548]	OP_LOADBOOL	R29 1 0 ; R29 := true
	456	[2550]	GETGLOBAL	R30 K75 ; R30 := _T
	457	[2550]	GETTABLE 	R30 R30 K101 ; R30 := R30["CachedNemesisMissions"]
	458	[2550]	GETTABLE 	R30 R30 R5 ; R30 := R30[R5]
	459	[2550]	TEST     	R30 0 ; if not R30 then PC := 475
	460	[2550]	JMP      	475 ; PC := 475
	461	[2550]	GETGLOBAL	R30 K75 ; R30 := _T
	462	[2550]	GETTABLE 	R30 R30 K101 ; R30 := R30["CachedNemesisMissions"]
	463	[2550]	GETTABLE 	R30 R30 R5 ; R30 := R30[R5]
	464	[2550]	GETTABLE 	R30 R30 K102 ; R30 := R30["attackType"]
	465	[2550]	TEST     	R30 0 ; if not R30 then PC := 475
	466	[2550]	JMP      	475 ; PC := 475
	467	[2550]	GETGLOBAL	R30 K75 ; R30 := _T
	468	[2550]	GETTABLE 	R30 R30 K101 ; R30 := R30["CachedNemesisMissions"]
	469	[2550]	GETTABLE 	R30 R30 R5 ; R30 := R30[R5]
	470	[2550]	GETTABLE 	R30 R30 K102 ; R30 := R30["attackType"]
	471	[2550]	EQ       	1 R30 K103 ; if R30 == "Blockade" then PC := 474
	472	[2550]	JMP      	474 ; PC := 474
	473	[2550]	OP_LOADBOOL	R30 0 1 ; R30 := false; PC := 474
	474	[2550]	OP_LOADBOOL	R30 1 0 ; R30 := true
	475	[2552]	GETGLOBAL	R31 K82 ; R31 := 0xae91e43b
	476	[2552]	SELF     	R31 R31 K104 ; R32 := R31; R31 := R31[0x42b04007]
	477	[2552]	GETTABLE 	R33 R0 K105 ; R33 := R0["locTag"]
	478	[2552]	SELF     	R33 R33 K106 ; R34 := R33; R33 := R33[0x6d604ba7]
	479	[2552]	CALL     	R33 2 2 ; R33 := R33(R34)
	480	[2552]	OP_LOADBOOL	R34 1 0 ; R34 := true
	481	[2552]	CALL     	R31 4 2 ; R31 := R31(R32,R33,R34)
	482	[2554]	TEST     	R9 0 ; if not R9 then PC := 497
	483	[2554]	JMP      	497 ; PC := 497
	484	[2554]	LT       	0 K23 R9 ; if 0.000000 >= R9 then PC := 497
	485	[2554]	JMP      	497 ; PC := 497
	486	[2555]	EQ       	0 R9 K18 ; if R9 ~= 1.000000 then PC := 519
	487	[2555]	JMP      	519 ; PC := 519
	488	[2556]	GETGLOBAL	R32 K82 ; R32 := 0xae91e43b
	489	[2556]	SELF     	R32 R32 K104 ; R33 := R32; R32 := R32[0x42b04007]
	490	[2556]	LOADK    	R34 K107 ; R34 := "/Lotus/Language/RelayReconstruction/ReconstructionSiteAttack"
	491	[2556]	OP_LOADBOOL	R35 0 0 ; R35 := false
	492	[2556]	NEWTABLE 	R36 0 1 ; R36 := {}
	493	[2556]	SETTABLE 	R36 K108 R31 ; R36["LOCATION"] := R31
	494	[2556]	CALL     	R32 5 2 ; R32 := R32(R33,R34,R35,R36)
	495	[2556]	MOVE     	R31 R32 ; R31 := R32
	496	[2557]	JMP      	519 ; PC := 519
	497	[2558]	GETGLOBAL	R32 K51 ; R32 := 0x0032441c
	498	[2558]	GETTABLE 	R32 R32 K52 ; R32 := R32["CachedGoalInfo"]
	499	[2558]	GETTABLE 	R32 R32 R5 ; R32 := R32[R5]
	500	[2558]	TEST     	R32 0 ; if not R32 then PC := 519
	501	[2558]	JMP      	519 ; PC := 519
	502	[2558]	GETGLOBAL	R32 K51 ; R32 := 0x0032441c
	503	[2558]	GETTABLE 	R32 R32 K52 ; R32 := R32["CachedGoalInfo"]
	504	[2558]	GETTABLE 	R32 R32 R5 ; R32 := R32[R5]
	505	[2558]	GETTABLE 	R32 R32 K64 ; R32 := R32["mTag"]
	506	[2558]	GETUPVAL 	R33 U4 ; R33 := U4
	507	[2558]	GETTABLE 	R33 R33 K109 ; R33 := R33["PRIME_VAULT_TRADER_GOAL"]
	508	[2558]	EQ       	1 R32 R33 ; if R32 == R33 then PC := 519
	509	[2558]	JMP      	519 ; PC := 519
	510	[2559]	GETGLOBAL	R32 K82 ; R32 := 0xae91e43b
	511	[2559]	SELF     	R32 R32 K104 ; R33 := R32; R32 := R32[0x42b04007]
	512	[2559]	GETGLOBAL	R34 K51 ; R34 := 0x0032441c
	513	[2559]	GETTABLE 	R34 R34 K52 ; R34 := R34["CachedGoalInfo"]
	514	[2559]	GETTABLE 	R34 R34 R5 ; R34 := R34[R5]
	515	[2559]	GETTABLE 	R34 R34 K110 ; R34 := R34["mDesc"]
	516	[2559]	OP_LOADBOOL	R35 1 0 ; R35 := true
	517	[2559]	CALL     	R32 4 2 ; R32 := R32(R33,R34,R35)
	518	[2559]	MOVE     	R31 R32 ; R31 := R32
	519	[2562]	TEST     	R30 0 ; if not R30 then PC := 534
	520	[2562]	JMP      	534 ; PC := 534
	521	[2563]	MOVE     	R32 R31 ; R32 := R31
	522	[2563]	LOADK    	R33 K111 ; R33 := " ("
	523	[2563]	GETGLOBAL	R34 K82 ; R34 := 0xae91e43b
	524	[2563]	SELF     	R34 R34 K104 ; R35 := R34; R34 := R34[0x42b04007]
	525	[2563]	GETGLOBAL	R36 K75 ; R36 := _T
	526	[2563]	GETTABLE 	R36 R36 K101 ; R36 := R36["CachedNemesisMissions"]
	527	[2563]	GETTABLE 	R36 R36 R5 ; R36 := R36[R5]
	528	[2563]	GETTABLE 	R36 R36 K112 ; R36 := R36["mMissionInfo"]
	529	[2563]	GETTABLE 	R36 R36 K113 ; R36 := R36["uniqueName"]
	530	[2563]	OP_LOADBOOL	R37 0 0 ; R37 := false
	531	[2563]	CALL     	R34 4 2 ; R34 := R34(R35,R36,R37)
	532	[2563]	LOADK    	R35 K114 ; R35 := ")"
	533	[2563]	CONCAT   	R31 R32 R35 ; R31 := R32 .. R33 .. R34 .. R35
	534	[2566]	NEWTABLE 	R32 0 18 ; R32 := {}
	535	[2567]	SETTABLE 	R32 K2 R4 ; R32["name"] := R4
	536	[2568]	GETGLOBAL	R33 K38 ; R33 := 0x7f5022cf
	537	[2568]	GETTABLE 	R33 R33 K116 ; R33 := R33[0x3f3e4d12]
	538	[2568]	MOVE     	R34 R31 ; R34 := R31
	539	[2568]	CALL     	R33 2 2 ; R33 := R33(R34)
	540	[2568]	SETTABLE 	R32 K115 R33 ; R32["locName"] := R33
	541	[2569]	SETTABLE 	R32 K117 R27 ; R32["memberIndex"] := R27
	542	[2570]	GETGLOBAL	R33 K82 ; R33 := 0xae91e43b
	543	[2570]	SELF     	R33 R33 K83 ; R34 := R33; R33 := R33[0x09839320]
	544	[2570]	MOVE     	R35 R26 ; R35 := R26
	545	[2570]	LOADK    	R36 K119 ; R36 := ".Name"
	546	[2570]	CONCAT   	R35 R35 R36 ; R35 := R35 .. R36
	547	[2570]	CALL     	R33 3 2 ; R33 := R33(R34,R35)
	548	[2570]	SETTABLE 	R32 K118 R33 ; R32["labelIndex"] := R33
	549	[2571]	SETTABLE 	R32 K120 R28 ; R32["nodeIndex"] := R28
	550	[2572]	SETTABLE 	R32 K121 R26 ; R32["clipName"] := R26
	551	[2573]	SETTABLE 	R32 K122 R16 ; R32["position"] := R16
	552	[2574]	SETTABLE 	R32 K123 R0 ; R32["radialSector"] := R0
	553	[2575]	GETTABLE 	R33 R0 K49 ; R33 := R0["nodeType"]
	554	[2575]	EQ       	1 R33 K99 ; if R33 == 6.000000 then PC := 557
	555	[2575]	JMP      	557 ; PC := 557
	556	[2575]	OP_LOADBOOL	R33 0 1 ; R33 := false; PC := 557
	557	[2575]	OP_LOADBOOL	R33 1 0 ; R33 := true
	558	[2575]	SETTABLE 	R32 K124 R33 ; R32["isShortcut"] := R33
	559	[2576]	GETTABLE 	R33 R0 K49 ; R33 := R0["nodeType"]
	560	[2576]	EQ       	1 R33 K100 ; if R33 == 7.000000 then PC := 563
	561	[2576]	JMP      	563 ; PC := 563
	562	[2576]	OP_LOADBOOL	R33 0 1 ; R33 := false; PC := 563
	563	[2576]	OP_LOADBOOL	R33 1 0 ; R33 := true
	564	[2576]	SETTABLE 	R32 K125 R33 ; R32["isJunction"] := R33
	565	[2577]	SETTABLE 	R32 K126 R9 ; R32["reconstructionProgress"] := R9
	566	[2578]	GETTABLE 	R33 R0 K49 ; R33 := R0["nodeType"]
	567	[2578]	EQ       	1 R33 K128 ; if R33 == 5.000000 then PC := 570
	568	[2578]	JMP      	570 ; PC := 570
	569	[2578]	OP_LOADBOOL	R33 0 1 ; R33 := false; PC := 570
	570	[2578]	OP_LOADBOOL	R33 1 0 ; R33 := true
	571	[2578]	SETTABLE 	R32 K127 R33 ; R32["isEmpty"] := R33
	572	[2579]	SETTABLE 	R32 K129 R29 ; R32["isActiveMission"] := R29
	573	[2580]	SETTABLE 	R32 K130 R30 ; R32["isBlockaded"] := R30
	574	[2581]	GETTABLE 	R33 R0 K131 ; R33 := R0["missionsCompleted"]
	575	[2581]	SETTABLE 	R32 K131 R33 ; R32["missionsCompleted"] := R33
	576	[2582]	GETTABLE 	R33 R0 K132 ; R33 := R0["difficultyUnlocked"]
	577	[2582]	SETTABLE 	R32 K132 R33 ; R32["difficultyUnlocked"] := R33
	578	[2583]	GETTABLE 	R33 R0 K133 ; R33 := R0["difficultyCompleted"]
	579	[2583]	SETTABLE 	R32 K133 R33 ; R32["difficultyCompleted"] := R33
	580	[2584]	GETTABLE 	R33 R0 K49 ; R33 := R0["nodeType"]
	581	[2584]	SETTABLE 	R32 K49 R33 ; R32["nodeType"] := R33
	582	[2585]	SETTABLE 	R32 K134 R8 ; R32["hideNode"] := R8
	583	[2588]	GETGLOBAL	R33 K135 ; R33 := 0xcfc01047
	584	[2588]	MOVE     	R34 R1 ; R34 := R1
	585	[2588]	CALL     	R33 2 4 ; R33,R34,R35 := R33(R34)
	586	[2588]	JMP      	588 ; PC := 588
	587	[2589]	SETTABLE 	R32 R36 R37 ; R32[R36] := R37
	588	[2588]	TFORLOOP 	R33 2 ; R36,R37 := R33(R34,R35); if R36 ~= nil then begin PC = 587; R35 := R36 end
	589	[2589]	JMP      	587 ; PC := 587
	590	[2592]	TEST     	R3 0 ; if not R3 then PC := 596
	591	[2592]	JMP      	596 ; PC := 596
	592	[2592]	GETGLOBAL	R38 K19 ; R38 := mDebugUnlockAllMissions
	593	[2592]	TEST     	R38 1 ; if R38 then PC := 596
	594	[2592]	JMP      	596 ; PC := 596
	595	[2593]	SETTABLE 	R32 K136 K35 ; R32["edgesLocked"] := true
	596	[2596]	GETTABLE 	R38 R32 K2 ; R38 := R32["name"]
	597	[2596]	GETUPVAL 	R39 U1 ; R39 := U1
	598	[2596]	GETTABLE 	R39 R39 K137 ; R39 := R39["SCENARIO_EVENT_HUB_TAG"]
	599	[2596]	EQ       	0 R38 R39 ; if R38 ~= R39 then PC := 603
	600	[2596]	JMP      	603 ; PC := 603
	601	[2597]	SETTABLE 	R32 K138 K35 ; R32["isFlotilla"] := true
	602	[2597]	JMP      	618 ; PC := 618
	603	[2598]	GETTABLE 	R38 R32 K2 ; R38 := R32["name"]
	604	[2598]	GETUPVAL 	R39 U1 ; R39 := U1
	605	[2598]	GETTABLE 	R39 R39 K139 ; R39 := R39["ENTRATI_LANDSCAPE_NODE_TAG"]
	606	[2598]	EQ       	0 R38 R39 ; if R38 ~= R39 then PC := 618
	607	[2598]	JMP      	618 ; PC := 618
	608	[2598]	GETUPVAL 	R38 U1 ; R38 := U1
	609	[2598]	GETTABLE 	R38 R38 K5 ; R38 := R38[0x52fb05b3]
	610	[2598]	GETUPVAL 	R39 U2 ; R39 := U2
	611	[2598]	GETTABLE 	R39 R39 K140 ; R39 := R39["deimosIntroQuestInfo"]
	612	[2598]	GETTABLE 	R39 R39 K141 ; R39 := R39["quest"]
	613	[2598]	CALL     	R38 2 2 ; R38 := R38(R39)
	614	[2598]	TEST     	R38 1 ; if R38 then PC := 618
	615	[2598]	JMP      	618 ; PC := 618
	616	[2599]	SETTABLE 	R32 K142 K35 ; R32["questSoloMode"] := true
	617	[2600]	SETTABLE 	R32 K143 K35 ; R32["forceHover"] := true
	618	[2603]	GETUPVAL 	R38 U4 ; R38 := U4
	619	[2603]	GETTABLE 	R38 R38 K26 ; R38 := R38["DESTROYED_NODE_TAG"]
	620	[2603]	EQ       	0 R7 R38 ; if R7 ~= R38 then PC := 623
	621	[2603]	JMP      	623 ; PC := 623
	622	[2604]	SETTABLE 	R32 K144 K35 ; R32["destroyed"] := true
	623	[2607]	GETGLOBAL	R38 K145 ; R38 := 0x33bdd652
	624	[2607]	GETTABLE 	R38 R38 K146 ; R38 := R38[0x23d5322f]
	625	[2607]	GETUPVAL 	R39 U6 ; R39 := U6
	626	[2607]	MOVE     	R40 R32 ; R40 := R32
	627	[2607]	CALL     	R38 3 1 ; R38(R39,R40)
	628	[2608]	GETUPVAL 	R38 U7 ; R38 := U7
	629	[2608]	GETGLOBAL	R39 K3 ; R39 := 0x64fb1586
	630	[2608]	GETTABLE 	R40 R32 K2 ; R40 := R32["name"]
	631	[2608]	CALL     	R39 2 2 ; R39 := R39(R40)
	632	[2608]	GETUPVAL 	R40 U6 ; R40 := U6
	633	[2608]	GETUPVAL 	R41 U6 ; R41 := U6
	634	[2608]	LEN      	R41 R41 ; R41 := # R41
	635	[2608]	GETTABLE 	R40 R40 R41 ; R40 := R40[R41]
	636	[2608]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	637	[2610]	GETUPVAL 	R38 U6 ; R38 := U6
	638	[2610]	LEN      	R38 R38 ; R38 := # R38
	639	[2610]	SETTABLE 	R32 K147 R38 ; R32["id"] := R38
	640	[2611]	GETUPVAL 	R38 U8 ; R38 := U8
	641	[2611]	MOVE     	R39 R32 ; R39 := R32
	642	[2611]	CALL     	R38 2 2 ; R38 := R38(R39)
	643	[2611]	SETTABLE 	R32 K148 R38 ; R32["isSurfaceNode"] := R38
	644	[2613]	GETGLOBAL	R38 K29 ; R38 := mNewWarMode
	645	[2613]	TEST     	R38 0 ; if not R38 then PC := 652
	646	[2613]	JMP      	652 ; PC := 652
	647	[2613]	GETTABLE 	R38 R32 K148 ; R38 := R32["isSurfaceNode"]
	648	[2613]	TEST     	R38 1 ; if R38 then PC := 652
	649	[2613]	JMP      	652 ; PC := 652
	650	[2614]	SETTABLE 	R32 K127 K35 ; R32["isEmpty"] := true
	651	[2615]	SETTABLE 	R0 K27 K0 ; R0["deco"] := nil
	652	[2618]	LOADNIL  	R38 R38 ; R38 := nil
	653	[2619]	GETGLOBAL	R39 K13 ; R39 := 0x7b998233
	654	[2619]	GETTABLE 	R40 R0 K27 ; R40 := R0["deco"]
	655	[2619]	CALL     	R39 2 2 ; R39 := R39(R40)
	656	[2619]	TEST     	R39 1 ; if R39 then PC := 738
	657	[2619]	JMP      	738 ; PC := 738
	658	[2620]	NEWTABLE 	R39 0 3 ; R39 := {}
	659	[2620]	GETTABLE 	R40 R0 K72 ; R40 := R0["decoOffset"]
	660	[2620]	SETTABLE 	R39 K149 R40 ; R39["mOffset"] := R40
	661	[2620]	GETTABLE 	R40 R0 K31 ; R40 := R0["decoRotation"]
	662	[2620]	SETTABLE 	R39 K150 R40 ; R39["mRotation"] := R40
	663	[2620]	GETTABLE 	R40 R0 K33 ; R40 := R0["scale"]
	664	[2620]	SETTABLE 	R39 K151 R40 ; R39["mScale"] := R40
	665	[2620]	MOVE     	R38 R39 ; R38 := R39
	666	[2621]	GETGLOBAL	R39 K153 ; R39 := 0x1211d00f
	667	[2621]	SELF     	R39 R39 K154 ; R40 := R39; R39 := R39[0x05909209]
	668	[2621]	GETGLOBAL	R41 K155 ; R41 := 0x88efc25e
	669	[2621]	GETTABLE 	R42 R0 K27 ; R42 := R0["deco"]
	670	[2621]	CALL     	R41 2 2 ; R41 := R41(R42)
	671	[2621]	GETTABLE 	R42 R38 K149 ; R42 := R38["mOffset"]
	672	[2621]	ADD      	R42 R16 R42 ; R42 := R16 + R42
	673	[2621]	GETTABLE 	R43 R38 K150 ; R43 := R38["mRotation"]
	674	[2621]	CALL     	R39 5 2 ; R39 := R39(R40,R41,R42,R43)
	675	[2621]	SETTABLE 	R38 K152 R39 ; R38["mInstance"] := R39
	676	[2622]	GETGLOBAL	R39 K13 ; R39 := 0x7b998233
	677	[2622]	GETTABLE 	R40 R38 K152 ; R40 := R38["mInstance"]
	678	[2622]	CALL     	R39 2 2 ; R39 := R39(R40)
	679	[2622]	TEST     	R39 1 ; if R39 then PC := 737
	680	[2622]	JMP      	737 ; PC := 737
	681	[2623]	GETTABLE 	R39 R38 K151 ; R39 := R38["mScale"]
	682	[2624]	GETTABLE 	R40 R38 K152 ; R40 := R38["mInstance"]
	683	[2624]	SELF     	R40 R40 K156 ; R41 := R40; R40 := R40[0x2d9ba74f]
	684	[2624]	GETUPVAL 	R42 U9 ; R42 := U9
	685	[2624]	GETTABLE 	R42 R42 K157 ; R42 := R42["DECO_SCALE_MULTIPLIER"]
	686	[2624]	MUL      	R42 R39 R42 ; R42 := R39 * R42
	687	[2624]	OP_LOADBOOL	R43 1 0 ; R43 := true
	688	[2624]	CALL     	R40 4 1 ; R40(R41,R42,R43)
	689	[2625]	TEST     	R17 0 ; if not R17 then PC := 695
	690	[2625]	JMP      	695 ; PC := 695
	691	[2626]	GETTABLE 	R40 R38 K152 ; R40 := R38["mInstance"]
	692	[2626]	SELF     	R40 R40 K158 ; R41 := R40; R40 := R40[0x1dd41378]
	693	[2626]	MOVE     	R42 R17 ; R42 := R17
	694	[2626]	CALL     	R40 3 1 ; R40(R41,R42)
	695	[2629]	GETGLOBAL	R40 K75 ; R40 := _T
	696	[2629]	GETTABLE 	R40 R40 K159 ; R40 := R40["CachedVoidStormMissions"]
	697	[2629]	TEST     	R40 0 ; if not R40 then PC := 737
	698	[2629]	JMP      	737 ; PC := 737
	699	[2629]	GETGLOBAL	R40 K75 ; R40 := _T
	700	[2629]	GETTABLE 	R40 R40 K159 ; R40 := R40["CachedVoidStormMissions"]
	701	[2629]	GETTABLE 	R40 R40 R5 ; R40 := R40[R5]
	702	[2629]	TEST     	R40 0 ; if not R40 then PC := 737
	703	[2629]	JMP      	737 ; PC := 737
	704	[2629]	GETGLOBAL	R40 K75 ; R40 := _T
	705	[2629]	GETTABLE 	R40 R40 K160 ; R40 := R40["CustomStarChartNodeFilter"]
	706	[2629]	EQ       	0 R40 K0 ; if R40 ~= nil then PC := 737
	707	[2629]	JMP      	737 ; PC := 737
	708	[2630]	GETGLOBAL	R40 K75 ; R40 := _T
	709	[2630]	GETTABLE 	R40 R40 K159 ; R40 := R40["CachedVoidStormMissions"]
	710	[2630]	GETTABLE 	R40 R40 R5 ; R40 := R40[R5]
	711	[2631]	GETGLOBAL	R41 K46 ; R41 := 0x34291f5c
	712	[2631]	GETTABLE 	R41 R41 K47 ; R41 := R41[0x397b920f]
	713	[2631]	GETTABLE 	R42 R40 K44 ; R42 := R40["mActivation"]
	714	[2631]	CALL     	R41 2 2 ; R41 := R41(R42)
	715	[2632]	GETGLOBAL	R42 K46 ; R42 := 0x34291f5c
	716	[2632]	GETTABLE 	R42 R42 K47 ; R42 := R42[0x397b920f]
	717	[2632]	GETTABLE 	R43 R40 K59 ; R43 := R40["mExpiry"]
	718	[2632]	CALL     	R42 2 2 ; R42 := R42(R43)
	719	[2633]	LE       	0 R41 K23 ; if R41 > 0.000000 then PC := 737
	720	[2633]	JMP      	737 ; PC := 737
	721	[2633]	LT       	0 K23 R42 ; if 0.000000 >= R42 then PC := 737
	722	[2633]	JMP      	737 ; PC := 737
	723	[2634]	GETTABLE 	R43 R38 K152 ; R43 := R38["mInstance"]
	724	[2634]	SELF     	R43 R43 K161 ; R44 := R43; R43 := R43[0x47901f07]
	725	[2634]	GETGLOBAL	R45 K162 ; R45 := 0x7dd613b0
	726	[2634]	GETGLOBAL	R46 K163 ; R46 := EMPTY_SYMBOL
	727	[2634]	GETGLOBAL	R47 K164 ; R47 := ZERO_VECTOR
	728	[2634]	GETGLOBAL	R48 K32 ; R48 := 0x00046924
	729	[2634]	LOADK    	R49 := 90.000000
	730	[2634]	LOADK    	R50 := 45.000000
	731	[2634]	LOADK    	R51 := 90.000000
	732	[2634]	CALL     	R48 4 0 ; R48,... := R48(R49,R50,R51)
	733	[2634]	CALL     	R43 0 2 ; R43 := R43(R44,...)
	734	[2635]	SELF     	R44 R43 K156 ; R45 := R43; R44 := R43[0x2d9ba74f]
	735	[2635]	LOADK    	R46 K165 ; R46 := 0.100000
	736	[2635]	CALL     	R44 3 1 ; R44(R45,R46)
	737	[2639]	SETTABLE 	R32 K27 R38 ; R32["deco"] := R38
	738	[2642]	GETUPVAL 	R44 U1 ; R44 := U1
	739	[2642]	GETTABLE 	R44 R44 K68 ; R44 := R44["OROKIN_TOWER_NODE_TAG"]
	740	[2642]	EQ       	0 R4 R44 ; if R4 ~= R44 then PC := 765
	741	[2642]	JMP      	765 ; PC := 765
	742	[2644]	GETGLOBAL	R44 K19 ; R44 := mDebugUnlockAllMissions
	743	[2644]	TESTSET  	R2 R44 1 ; if R44 then PC := 749 else R2 := R44 
	744	[2644]	JMP      	749 ; PC := 749
	745	[2644]	GETUPVAL 	R44 U1 ; R44 := U1
	746	[2644]	GETTABLE 	R44 R44 K166 ; R44 := R44[0x70bc04d0]
	747	[2644]	CALL     	R44 1 2 ; R44 := R44()
	748	[2644]	MOVE     	R2 R44 ; R2 := R44
	749	[2645]	GETGLOBAL	R44 K13 ; R44 := 0x7b998233
	750	[2645]	MOVE     	R45 R38 ; R45 := R38
	751	[2645]	CALL     	R44 2 2 ; R44 := R44(R45)
	752	[2645]	TEST     	R44 1 ; if R44 then PC := 770
	753	[2645]	JMP      	770 ; PC := 770
	754	[2645]	GETGLOBAL	R44 K13 ; R44 := 0x7b998233
	755	[2645]	GETTABLE 	R45 R38 K152 ; R45 := R38["mInstance"]
	756	[2645]	CALL     	R44 2 2 ; R44 := R44(R45)
	757	[2645]	TEST     	R44 1 ; if R44 then PC := 770
	758	[2645]	JMP      	770 ; PC := 770
	759	[2646]	GETTABLE 	R44 R38 K152 ; R44 := R38["mInstance"]
	760	[2646]	SELF     	R44 R44 K167 ; R45 := R44; R44 := R44[0x768274d6]
	761	[2646]	MOVE     	R46 R2 ; R46 := R2
	762	[2646]	OP_LOADBOOL	R47 1 0 ; R47 := true
	763	[2646]	CALL     	R44 4 1 ; R44(R45,R46,R47)
	764	[2647]	JMP      	770 ; PC := 770
	765	[2648]	GETUPVAL 	R44 U1 ; R44 := U1
	766	[2648]	GETTABLE 	R44 R44 K139 ; R44 := R44["ENTRATI_LANDSCAPE_NODE_TAG"]
	767	[2648]	EQ       	0 R4 R44 ; if R4 ~= R44 then PC := 770
	768	[2648]	JMP      	770 ; PC := 770
	769	[2649]	OP_LOADBOOL	R2 1 0 ; R2 := true
	770	[2652]	SETTABLE 	R32 K168 R2 ; R32["locationEnabled"] := R2
	771	[2654]	GETGLOBAL	R44 K82 ; R44 := 0xae91e43b
	772	[2654]	SELF     	R44 R44 K169 ; R45 := R44; R44 := R44[0xf64b7262]
	773	[2654]	MOVE     	R46 R26 ; R46 := R26
	774	[2654]	LOADK    	R47 K170 ; R47 := "Btn"
	775	[2654]	LOADK    	R48 := 85.000000
	776	[2654]	GETTABLE 	R49 R32 K147 ; R49 := R32["id"]
	777	[2654]	CALL     	R44 6 1 ; R44(R45,R46,R47,R48,R49)
	778	[2655]	GETGLOBAL	R44 K82 ; R44 := 0xae91e43b
	779	[2655]	SELF     	R44 R44 K169 ; R45 := R44; R44 := R44[0xf64b7262]
	780	[2655]	MOVE     	R46 R26 ; R46 := R26
	781	[2655]	LOADK    	R47 K89 ; R47 := "Name.Bg"
	782	[2655]	LOADK    	R48 := 85.000000
	783	[2655]	GETTABLE 	R49 R32 K147 ; R49 := R32["id"]
	784	[2655]	CALL     	R44 6 1 ; R44(R45,R46,R47,R48,R49)
	785	[2656]	GETGLOBAL	R44 K82 ; R44 := 0xae91e43b
	786	[2656]	SELF     	R44 R44 K171 ; R45 := R44; R44 := R44[0x1e5b5cfe]
	787	[2656]	MOVE     	R46 R26 ; R46 := R26
	788	[2656]	LOADK    	R47 K172 ; R47 := ".Btn"
	789	[2656]	CONCAT   	R46 R46 R47 ; R46 := R46 .. R47
	790	[2656]	LOADK    	R47 K173 ; R47 := "NodeRollOver"
	791	[2656]	LOADK    	R48 K174 ; R48 := "NodeRollOut"
	792	[2656]	LOADK    	R49 K175 ; R49 := "NodeSelect"
	793	[2656]	LOADNIL  	R50 R50 ; R50 := nil
	794	[2656]	CALL     	R44 7 1 ; R44(R45,R46,R47,R48,R49,R50)
	795	[2657]	GETGLOBAL	R44 K82 ; R44 := 0xae91e43b
	796	[2657]	SELF     	R44 R44 K171 ; R45 := R44; R44 := R44[0x1e5b5cfe]
	797	[2657]	MOVE     	R46 R26 ; R46 := R26
	798	[2657]	LOADK    	R47 K86 ; R47 := ".Name.Bg"
	799	[2657]	CONCAT   	R46 R46 R47 ; R46 := R46 .. R47
	800	[2657]	LOADK    	R47 K173 ; R47 := "NodeRollOver"
	801	[2657]	LOADK    	R48 K174 ; R48 := "NodeRollOut"
	802	[2657]	LOADK    	R49 K175 ; R49 := "NodeSelect"
	803	[2657]	LOADNIL  	R50 R50 ; R50 := nil
	804	[2657]	CALL     	R44 7 1 ; R44(R45,R46,R47,R48,R49,R50)
	805	[2660]	GETGLOBAL	R44 K82 ; R44 := 0xae91e43b
	806	[2660]	SELF     	R44 R44 K169 ; R45 := R44; R44 := R44[0xf64b7262]
	807	[2660]	MOVE     	R46 R26 ; R46 := R26
	808	[2660]	LOADK    	R47 K170 ; R47 := "Btn"
	809	[2660]	LOADK    	R48 := 12.000000
	810	[2660]	LOADK    	R49 := 48.000000
	811	[2660]	CALL     	R44 6 1 ; R44(R45,R46,R47,R48,R49)
	812	[2661]	GETGLOBAL	R44 K82 ; R44 := 0xae91e43b
	813	[2661]	SELF     	R44 R44 K169 ; R45 := R44; R44 := R44[0xf64b7262]
	814	[2661]	MOVE     	R46 R26 ; R46 := R26
	815	[2661]	LOADK    	R47 K170 ; R47 := "Btn"
	816	[2661]	LOADK    	R48 := 13.000000
	817	[2661]	LOADK    	R49 := 32.000000
	818	[2661]	CALL     	R44 6 1 ; R44(R45,R46,R47,R48,R49)
	819	[2662]	GETGLOBAL	R44 K82 ; R44 := 0xae91e43b
	820	[2662]	SELF     	R44 R44 K176 ; R45 := R44; R44 := R44[0xcd12f3f1]
	821	[2662]	GETTABLE 	R46 R32 K117 ; R46 := R32["memberIndex"]
	822	[2662]	LOADK    	R47 := 10.000000
	823	[2662]	LOADK    	R48 := 0.000000
	824	[2662]	CALL     	R44 5 1 ; R44(R45,R46,R47,R48)
	825	[2663]	GETGLOBAL	R44 K82 ; R44 := 0xae91e43b
	826	[2663]	SELF     	R44 R44 K176 ; R45 := R44; R44 := R44[0xcd12f3f1]
	827	[2663]	GETTABLE 	R46 R32 K118 ; R46 := R32["labelIndex"]
	828	[2663]	LOADK    	R47 := 10.000000
	829	[2663]	GETUPVAL 	R48 U10 ; R48 := U10
	830	[2663]	MOVE     	R49 R32 ; R49 := R32
	831	[2663]	CALL     	R48 2 0 ; R48,... := R48(R49)
	832	[2663]	CALL     	R44 0 1 ; R44(R45,...)
	833	[2665]	GETGLOBAL	R44 K51 ; R44 := 0x0032441c
	834	[2665]	GETTABLE 	R44 R44 K177 ; R44 := R44["StalkerMode"]
	835	[2665]	TEST     	R44 0 ; if not R44 then PC := 861
	836	[2665]	JMP      	861 ; PC := 861
	837	[2666]	GETUPVAL 	R44 U1 ; R44 := U1
	838	[2666]	GETTABLE 	R44 R44 K178 ; R44 := R44[0x7155f039]
	839	[2666]	MOVE     	R45 R5 ; R45 := R5
	840	[2666]	GETGLOBAL	R46 K54 ; R46 := mRadialSolarMap
	841	[2666]	MOVE     	R47 R0 ; R47 := R0
	842	[2666]	CALL     	R44 4 2 ; R44 := R44(R45,R46,R47)
	843	[2667]	GETGLOBAL	R45 K82 ; R45 := 0xae91e43b
	844	[2667]	SELF     	R45 R45 K179 ; R46 := R45; R45 := R45[0xaade900e]
	845	[2667]	MOVE     	R47 R26 ; R47 := R26
	846	[2667]	LOADK    	R48 := 11.000000
	847	[2667]	GETUPVAL 	R49 U11 ; R49 := U11
	848	[2667]	EQ       	1 R49 K0 ; if R49 == nil then PC := 858
	849	[2667]	JMP      	858 ; PC := 858
	850	[2667]	GETUPVAL 	R49 U11 ; R49 := U11
	851	[2667]	GETTABLE 	R49 R49 R44 ; R49 := R49[R44]
	852	[2667]	EQ       	1 R49 K0 ; if R49 == nil then PC := 858
	853	[2667]	JMP      	858 ; PC := 858
	854	[2667]	GETUPVAL 	R49 U11 ; R49 := U11
	855	[2667]	GETTABLE 	R49 R49 R44 ; R49 := R49[R44]
	856	[2667]	LT       	1 K23 R49 ; if 0.000000 < R49 then PC := 859
	857	[2667]	JMP      	859 ; PC := 859
	858	[2667]	OP_LOADBOOL	R49 0 1 ; R49 := false; PC := 859
	859	[2667]	OP_LOADBOOL	R49 1 0 ; R49 := true
	860	[2667]	CALL     	R45 5 1 ; R45(R46,R47,R48,R49)
	861	[2670]	RETURN   	R32 2 ; return R32 
	862	[2671]	RETURN   	R0 1 ; return 

function #57 <?:2673,2793> (450 instructions, 1800 bytes at 0000021136486880)
1 param, 16 slots, 8 upvalues, 0 locals, 89 constants, 0 functions
	1	[2674]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2674]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x580db50d]
	3	[2674]	GETTABLE 	R2 R0 K2 ; R2 := R0["radialSector"]
	4	[2674]	GETGLOBAL	R3 K3 ; R3 := mRadialSolarMap
	5	[2674]	GETUPVAL 	R4 U1 ; R4 := U1
	6	[2674]	CALL     	R4 1 0 ; R4,... := R4()
	7	[2674]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	8	[2674]	SETTABLE 	R0 K0 R1 ; R0["completed"] := R1
	9	[2675]	GETUPVAL 	R1 U2 ; R1 := U2
	10	[2675]	MOVE     	R2 R0 ; R2 := R0
	11	[2675]	CALL     	R1 2 2 ; R1 := R1(R2)
	12	[2675]	NOT      	R1 R1 ; R1 := not R1
	13	[2675]	SETTABLE 	R0 K4 R1 ; R0[0x000000f3] := R1
	14	[2676]	GETUPVAL 	R1 U3 ; R1 := U3
	15	[2676]	MOVE     	R2 R0 ; R2 := R0
	16	[2676]	CALL     	R1 2 5 ; R1,R2,R3,R4 := R1(R2)
	17	[2676]	SETTABLE 	R0 K8 R4 ; R0["iconY"] := R4
	18	[2676]	SETTABLE 	R0 K7 R3 ; R0["backerSize"] := R3
	19	[2676]	SETTABLE 	R0 K6 R2 ; R0["iconSize"] := R2
	20	[2676]	SETTABLE 	R0 K5 R1 ; R0["icon"] := R1
	21	[2678]	GETGLOBAL	R1 K9 ; R1 := 0x7b998233
	22	[2678]	GETTABLE 	R2 R0 K5 ; R2 := R0["icon"]
	23	[2678]	CALL     	R1 2 2 ; R1 := R1(R2)
	24	[2678]	TEST     	R1 1 ; if R1 then PC := 29
	25	[2678]	JMP      	29 ; PC := 29
	26	[2678]	GETTABLE 	R1 R0 K0 ; R1 := R0["completed"]
	27	[2678]	TEST     	R1 1 ; if R1 then PC := 32
	28	[2678]	JMP      	32 ; PC := 32
	29	[2678]	GETTABLE 	R1 R0 K10 ; R1 := R0["isActiveMission"]
	30	[2678]	TEST     	R1 0 ; if not R1 then PC := 34
	31	[2678]	JMP      	34 ; PC := 34
	32	[2680]	SETTABLE 	R0 K11 K12 ; R0["special"] := true
	33	[2680]	JMP      	38 ; PC := 38
	34	[2681]	GETTABLE 	R1 R0 K13 ; R1 := R0["notificationClip"]
	35	[2681]	EQ       	1 R1 K14 ; if R1 == nil then PC := 38
	36	[2681]	JMP      	38 ; PC := 38
	37	[2682]	SETTABLE 	R0 K11 K14 ; R0["special"] := nil
	38	[2685]	GETUPVAL 	R1 U4 ; R1 := U4
	39	[2685]	GETTABLE 	R1 R1 K15 ; R1 := R1[0x06d055f9]
	40	[2685]	GETGLOBAL	R2 K16 ; R2 := mNewWarMode
	41	[2685]	GETGLOBAL	R3 K17 ; R3 := 0xbb72228e
	42	[2685]	GETGLOBAL	R4 K18 ; R4 := 0x0ba11dc7
	43	[2685]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	44	[2686]	LOADNIL  	R2 R2 ; R2 := nil
	45	[2687]	LOADK    	R3 := 56.000000
	46	[2688]	GETTABLE 	R4 R0 K6 ; R4 := R0["iconSize"]
	47	[2689]	GETTABLE 	R5 R0 K8 ; R5 := R0["iconY"]
	48	[2690]	GETGLOBAL	R6 K19 ; R6 := 0x64fb1586
	49	[2690]	GETTABLE 	R7 R0 K20 ; R7 := R0["name"]
	50	[2690]	CALL     	R6 2 2 ; R6 := R6(R7)
	51	[2691]	GETGLOBAL	R7 K21 ; R7 := _T
	52	[2691]	GETTABLE 	R7 R7 K22 ; R7 := R7["CachedSkullNodes"]
	53	[2691]	GETTABLE 	R7 R7 R6 ; R7 := R7[R6]
	54	[2691]	TEST     	R7 1 ; if R7 then PC := 69
	55	[2691]	JMP      	69 ; PC := 69
	56	[2691]	GETGLOBAL	R7 K21 ; R7 := _T
	57	[2691]	GETTABLE 	R7 R7 K23 ; R7 := R7["CachedAlerts"]
	58	[2691]	GETTABLE 	R7 R7 R6 ; R7 := R7[R6]
	59	[2691]	TEST     	R7 0 ; if not R7 then PC := 80
	60	[2691]	JMP      	80 ; PC := 80
	61	[2691]	GETGLOBAL	R7 K21 ; R7 := _T
	62	[2691]	GETTABLE 	R7 R7 K23 ; R7 := R7["CachedAlerts"]
	63	[2691]	GETTABLE 	R7 R7 R6 ; R7 := R7[R6]
	64	[2691]	GETTABLE 	R7 R7 K24 ; R7 := R7["mAlertInfo"]
	65	[2691]	GETTABLE 	R7 R7 K25 ; R7 := R7["mMissionInfo"]
	66	[2691]	GETTABLE 	R7 R7 K26 ; R7 := R7["nightmare"]
	67	[2691]	TEST     	R7 0 ; if not R7 then PC := 80
	68	[2691]	JMP      	80 ; PC := 80
	69	[2691]	GETUPVAL 	R7 U5 ; R7 := U5
	70	[2691]	GETTABLE 	R7 R7 R6 ; R7 := R7[R6]
	71	[2691]	TEST     	R7 0 ; if not R7 then PC := 79
	72	[2691]	JMP      	79 ; PC := 79
	73	[2691]	GETUPVAL 	R7 U5 ; R7 := U5
	74	[2691]	GETTABLE 	R7 R7 R6 ; R7 := R7[R6]
	75	[2691]	GETTABLE 	R7 R7 K27 ; R7 := R7["IsQuest"]
	76	[2691]	NOT      	R7 R7 ; R7 := not R7
	77	[2691]	JMP      	80 ; PC := 80
	78	[2691]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 79
	79	[2691]	OP_LOADBOOL	R7 1 0 ; R7 := true
	80	[2692]	GETGLOBAL	R8 K28 ; R8 := 0x0032441c
	81	[2692]	GETTABLE 	R8 R8 K29 ; R8 := R8["CachedGoalInfo"]
	82	[2692]	TEST     	R8 0 ; if not R8 then PC := 130
	83	[2692]	JMP      	130 ; PC := 130
	84	[2692]	GETGLOBAL	R8 K28 ; R8 := 0x0032441c
	85	[2692]	GETTABLE 	R8 R8 K29 ; R8 := R8["CachedGoalInfo"]
	86	[2692]	GETTABLE 	R8 R8 R6 ; R8 := R8[R6]
	87	[2692]	TEST     	R8 0 ; if not R8 then PC := 130
	88	[2692]	JMP      	130 ; PC := 130
	89	[2692]	GETGLOBAL	R8 K9 ; R8 := 0x7b998233
	90	[2692]	GETGLOBAL	R9 K28 ; R9 := 0x0032441c
	91	[2692]	GETTABLE 	R9 R9 K29 ; R9 := R9["CachedGoalInfo"]
	92	[2692]	GETTABLE 	R9 R9 R6 ; R9 := R9[R6]
	93	[2692]	GETTABLE 	R9 R9 K30 ; R9 := R9["mIcon"]
	94	[2692]	CALL     	R8 2 2 ; R8 := R8(R9)
	95	[2692]	TEST     	R8 1 ; if R8 then PC := 130
	96	[2692]	JMP      	130 ; PC := 130
	97	[2692]	GETGLOBAL	R8 K28 ; R8 := 0x0032441c
	98	[2692]	GETTABLE 	R8 R8 K29 ; R8 := R8["CachedGoalInfo"]
	99	[2692]	GETTABLE 	R8 R8 R6 ; R8 := R8[R6]
	100	[2692]	GETTABLE 	R8 R8 K31 ; R8 := R8["mTag"]
	101	[2692]	GETUPVAL 	R9 U6 ; R9 := U6
	102	[2692]	GETTABLE 	R9 R9 K32 ; R9 := R9["PRIME_VAULT_TRADER_GOAL"]
	103	[2692]	EQ       	1 R8 R9 ; if R8 == R9 then PC := 130
	104	[2692]	JMP      	130 ; PC := 130
	105	[2692]	GETGLOBAL	R8 K16 ; R8 := mNewWarMode
	106	[2692]	TEST     	R8 1 ; if R8 then PC := 130
	107	[2692]	JMP      	130 ; PC := 130
	108	[2693]	GETGLOBAL	R8 K33 ; R8 := 0x7f5022cf
	109	[2693]	GETTABLE 	R8 R8 K34 ; R8 := R8[0xa5c556b9]
	110	[2693]	GETGLOBAL	R9 K19 ; R9 := 0x64fb1586
	111	[2693]	GETGLOBAL	R10 K28 ; R10 := 0x0032441c
	112	[2693]	GETTABLE 	R10 R10 K29 ; R10 := R10["CachedGoalInfo"]
	113	[2693]	GETTABLE 	R10 R10 R6 ; R10 := R10[R6]
	114	[2693]	GETTABLE 	R10 R10 K31 ; R10 := R10["mTag"]
	115	[2693]	CALL     	R9 2 2 ; R9 := R9(R10)
	116	[2693]	LOADK    	R10 K35 ; R10 := "Halloween"
	117	[2693]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	118	[2693]	EQ       	1 R8 K14 ; if R8 == nil then PC := 123
	119	[2693]	JMP      	123 ; PC := 123
	120	[2694]	GETGLOBAL	R1 K36 ; R1 := 0x2627cf16
	121	[2695]	LOADK    	R3 := 0.000000
	122	[2695]	JMP      	254 ; PC := 254
	123	[2697]	GETGLOBAL	R1 K37 ; R1 := 0xa1569a90
	124	[2698]	GETGLOBAL	R8 K28 ; R8 := 0x0032441c
	125	[2698]	GETTABLE 	R8 R8 K29 ; R8 := R8["CachedGoalInfo"]
	126	[2698]	GETTABLE 	R8 R8 R6 ; R8 := R8[R6]
	127	[2698]	GETTABLE 	R2 R8 K30 ; R2 := R8["mIcon"]
	128	[2699]	LOADK    	R3 := 90.000000
	129	[2700]	JMP      	254 ; PC := 254
	130	[2701]	GETGLOBAL	R8 K9 ; R8 := 0x7b998233
	131	[2701]	GETTABLE 	R9 R0 K5 ; R9 := R0["icon"]
	132	[2701]	CALL     	R8 2 2 ; R8 := R8(R9)
	133	[2701]	TEST     	R8 1 ; if R8 then PC := 190
	134	[2701]	JMP      	190 ; PC := 190
	135	[2701]	GETTABLE 	R8 R0 K0 ; R8 := R0["completed"]
	136	[2701]	TEST     	R8 0 ; if not R8 then PC := 190
	137	[2701]	JMP      	190 ; PC := 190
	138	[2702]	GETUPVAL 	R8 U4 ; R8 := U4
	139	[2702]	GETTABLE 	R8 R8 K15 ; R8 := R8[0x06d055f9]
	140	[2702]	MOVE     	R9 R7 ; R9 := R7
	141	[2702]	GETGLOBAL	R10 K38 ; R10 := 0xc690704a
	142	[2702]	GETUPVAL 	R11 U4 ; R11 := U4
	143	[2702]	GETTABLE 	R11 R11 K15 ; R11 := R11[0x06d055f9]
	144	[2702]	GETTABLE 	R12 R0 K39 ; R12 := R0["newWarMode"]
	145	[2702]	GETGLOBAL	R13 K40 ; R13 := 0x048f1770
	146	[2702]	GETGLOBAL	R14 K37 ; R14 := 0xa1569a90
	147	[2702]	CALL     	R11 4 0 ; R11,... := R11(R12,R13,R14)
	148	[2702]	CALL     	R8 0 2 ; R8 := R8(R9,...)
	149	[2702]	MOVE     	R1 R8 ; R1 := R8
	150	[2703]	GETTABLE 	R2 R0 K5 ; R2 := R0["icon"]
	151	[2704]	GETUPVAL 	R8 U4 ; R8 := U4
	152	[2704]	GETTABLE 	R8 R8 K15 ; R8 := R8[0x06d055f9]
	153	[2704]	GETTABLE 	R9 R0 K7 ; R9 := R0["backerSize"]
	154	[2704]	EQ       	1 R9 K14 ; if R9 == nil then PC := 157
	155	[2704]	JMP      	157 ; PC := 157
	156	[2704]	OP_LOADBOOL	R9 0 1 ; R9 := false; PC := 157
	157	[2704]	OP_LOADBOOL	R9 1 0 ; R9 := true
	158	[2704]	LOADK    	R10 := 84.000000
	159	[2704]	GETTABLE 	R11 R0 K7 ; R11 := R0["backerSize"]
	160	[2704]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	161	[2704]	MOVE     	R3 R8 ; R3 := R8
	162	[2706]	GETTABLE 	R8 R0 K27 ; R8 := R0["IsQuest"]
	163	[2706]	TEST     	R8 0 ; if not R8 then PC := 173
	164	[2706]	JMP      	173 ; PC := 173
	165	[2707]	GETGLOBAL	R8 K41 ; R8 := 0x33bdd652
	166	[2707]	GETTABLE 	R8 R8 K42 ; R8 := R8[0x23d5322f]
	167	[2707]	GETGLOBAL	R9 K43 ; R9 := mFxNodes
	168	[2707]	GETTABLE 	R9 R9 K44 ; R9 := R9["Quest"]
	169	[2707]	NEWTABLE 	R10 0 1 ; R10 := {}
	170	[2707]	SETTABLE 	R10 K45 R0 ; R10["Node"] := R0
	171	[2707]	CALL     	R8 3 1 ; R8(R9,R10)
	172	[2707]	JMP      	254 ; PC := 254
	173	[2708]	GETTABLE 	R8 R0 K46 ; R8 := R0["IsHomeNode"]
	174	[2708]	TEST     	R8 0 ; if not R8 then PC := 254
	175	[2708]	JMP      	254 ; PC := 254
	176	[2708]	GETGLOBAL	R8 K47 ; R8 := 0x25d99d89
	177	[2708]	SELF     	R8 R8 K48 ; R9 := R8; R8 := R8[0x21a1810f]
	178	[2708]	GETTABLE 	R10 R0 K49 ; R10 := R0["NodeIntro"]
	179	[2708]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	180	[2708]	TEST     	R8 1 ; if R8 then PC := 254
	181	[2708]	JMP      	254 ; PC := 254
	182	[2709]	GETGLOBAL	R8 K41 ; R8 := 0x33bdd652
	183	[2709]	GETTABLE 	R8 R8 K42 ; R8 := R8[0x23d5322f]
	184	[2709]	GETGLOBAL	R9 K43 ; R9 := mFxNodes
	185	[2709]	GETTABLE 	R9 R9 K50 ; R9 := R9["Pending"]
	186	[2709]	NEWTABLE 	R10 0 1 ; R10 := {}
	187	[2709]	SETTABLE 	R10 K45 R0 ; R10["Node"] := R0
	188	[2709]	CALL     	R8 3 1 ; R8(R9,R10)
	189	[2710]	JMP      	254 ; PC := 254
	190	[2711]	GETTABLE 	R8 R0 K51 ; R8 := R0["isJunction"]
	191	[2711]	TEST     	R8 0 ; if not R8 then PC := 215
	192	[2711]	JMP      	215 ; PC := 215
	193	[2712]	GETTABLE 	R8 R0 K4 ; R8 := R0["locked"]
	194	[2712]	TEST     	R8 0 ; if not R8 then PC := 199
	195	[2712]	JMP      	199 ; PC := 199
	196	[2713]	GETGLOBAL	R1 K52 ; R1 := 0xbe40bc23
	197	[2714]	LOADK    	R3 := 70.000000
	198	[2714]	JMP      	213 ; PC := 213
	199	[2716]	LOADK    	R3 := 90.000000
	200	[2717]	GETTABLE 	R8 R0 K0 ; R8 := R0["completed"]
	201	[2717]	TEST     	R8 0 ; if not R8 then PC := 205
	202	[2717]	JMP      	205 ; PC := 205
	203	[2718]	GETGLOBAL	R1 K53 ; R1 := 0xa3c3c3c2
	204	[2718]	JMP      	213 ; PC := 213
	205	[2720]	GETGLOBAL	R1 K54 ; R1 := 0x5cedcc7a
	206	[2721]	GETGLOBAL	R8 K41 ; R8 := 0x33bdd652
	207	[2721]	GETTABLE 	R8 R8 K42 ; R8 := R8[0x23d5322f]
	208	[2721]	GETGLOBAL	R9 K43 ; R9 := mFxNodes
	209	[2721]	GETTABLE 	R9 R9 K50 ; R9 := R9["Pending"]
	210	[2721]	NEWTABLE 	R10 0 1 ; R10 := {}
	211	[2721]	SETTABLE 	R10 K45 R0 ; R10["Node"] := R0
	212	[2721]	CALL     	R8 3 1 ; R8(R9,R10)
	213	[2724]	GETTABLE 	R2 R0 K5 ; R2 := R0["icon"]
	214	[2724]	JMP      	254 ; PC := 254
	215	[2725]	GETTABLE 	R8 R0 K0 ; R8 := R0["completed"]
	216	[2725]	TEST     	R8 1 ; if R8 then PC := 250
	217	[2725]	JMP      	250 ; PC := 250
	218	[2725]	GETTABLE 	R8 R0 K55 ; R8 := R0["displayMissionOverride"]
	219	[2725]	TEST     	R8 1 ; if R8 then PC := 250
	220	[2725]	JMP      	250 ; PC := 250
	221	[2725]	GETGLOBAL	R8 K56 ; R8 := mVorsPrizeQuestActiveNode
	222	[2725]	EQ       	1 R8 K14 ; if R8 == nil then PC := 227
	223	[2725]	JMP      	227 ; PC := 227
	224	[2725]	GETTABLE 	R8 R0 K27 ; R8 := R0["IsQuest"]
	225	[2725]	TEST     	R8 0 ; if not R8 then PC := 250
	226	[2725]	JMP      	250 ; PC := 250
	227	[2726]	GETTABLE 	R8 R0 K4 ; R8 := R0["locked"]
	228	[2726]	TEST     	R8 1 ; if R8 then PC := 231
	229	[2726]	JMP      	231 ; PC := 231
	230	[2727]	SETTABLE 	R0 K11 K12 ; R0["special"] := true
	231	[2729]	GETTABLE 	R8 R0 K27 ; R8 := R0["IsQuest"]
	232	[2729]	TEST     	R8 0 ; if not R8 then PC := 237
	233	[2729]	JMP      	237 ; PC := 237
	234	[2730]	GETGLOBAL	R8 K28 ; R8 := 0x0032441c
	235	[2730]	GETTABLE 	R1 R8 K57 ; R1 := R8["UITexture_Story"]
	236	[2730]	JMP      	254 ; PC := 254
	237	[2731]	GETTABLE 	R8 R0 K4 ; R8 := R0["locked"]
	238	[2731]	TEST     	R8 1 ; if R8 then PC := 254
	239	[2731]	JMP      	254 ; PC := 254
	240	[2732]	LOADK    	R3 := 120.000000
	241	[2733]	GETGLOBAL	R1 K58 ; R1 := 0xfed8bb46
	242	[2734]	GETGLOBAL	R8 K41 ; R8 := 0x33bdd652
	243	[2734]	GETTABLE 	R8 R8 K42 ; R8 := R8[0x23d5322f]
	244	[2734]	GETGLOBAL	R9 K43 ; R9 := mFxNodes
	245	[2734]	GETTABLE 	R9 R9 K50 ; R9 := R9["Pending"]
	246	[2734]	NEWTABLE 	R10 0 1 ; R10 := {}
	247	[2734]	SETTABLE 	R10 K45 R0 ; R10["Node"] := R0
	248	[2734]	CALL     	R8 3 1 ; R8(R9,R10)
	249	[2735]	JMP      	254 ; PC := 254
	250	[2736]	GETTABLE 	R8 R0 K4 ; R8 := R0["locked"]
	251	[2736]	TEST     	R8 1 ; if R8 then PC := 254
	252	[2736]	JMP      	254 ; PC := 254
	253	[2737]	GETGLOBAL	R1 K36 ; R1 := 0x2627cf16
	254	[2740]	GETTABLE 	R8 R0 K59 ; R8 := R0["guildId"]
	255	[2740]	EQ       	1 R8 K14 ; if R8 == nil then PC := 285
	256	[2740]	JMP      	285 ; PC := 285
	257	[2740]	GETTABLE 	R8 R0 K60 ; R8 := R0["clanTier"]
	258	[2740]	EQ       	1 R8 K14 ; if R8 == nil then PC := 285
	259	[2740]	JMP      	285 ; PC := 285
	260	[2741]	GETTABLE 	R8 R0 K61 ; R8 := R0["isTennocon"]
	261	[2741]	TEST     	R8 0 ; if not R8 then PC := 265
	262	[2741]	JMP      	265 ; PC := 265
	263	[2742]	GETGLOBAL	R2 K62 ; R2 := 0x6241f9c6
	264	[2742]	JMP      	268 ; PC := 268
	265	[2744]	GETGLOBAL	R8 K63 ; R8 := 0xb0d99fc4
	266	[2744]	GETTABLE 	R9 R0 K60 ; R9 := R0["clanTier"]
	267	[2744]	GETTABLE 	R2 R8 R9 ; R2 := R8[R9]
	268	[2746]	GETGLOBAL	R8 K28 ; R8 := 0x0032441c
	269	[2746]	GETTABLE 	R1 R8 K64 ; R1 := R8["UITexture_CircleGradientBacker"]
	270	[2747]	GETGLOBAL	R8 K65 ; R8 := 0xae91e43b
	271	[2747]	SELF     	R8 R8 K66 ; R9 := R8; R8 := R8[0xf64b7262]
	272	[2747]	GETTABLE 	R10 R0 K67 ; R10 := R0["clipName"]
	273	[2747]	LOADK    	R11 K68 ; R11 := "Node.Container.Node"
	274	[2747]	LOADK    	R12 := 9.000000
	275	[2747]	LOADK    	R13 K69 ; R13 := 65518.000000
	276	[2747]	CALL     	R8 6 1 ; R8(R9,R10,R11,R12,R13)
	277	[2748]	GETGLOBAL	R8 K65 ; R8 := 0xae91e43b
	278	[2748]	SELF     	R8 R8 K66 ; R9 := R8; R8 := R8[0xf64b7262]
	279	[2748]	GETTABLE 	R10 R0 K67 ; R10 := R0["clipName"]
	280	[2748]	LOADK    	R11 K68 ; R11 := "Node.Container.Node"
	281	[2748]	LOADK    	R12 := 10.000000
	282	[2748]	LOADK    	R13 := 0.000000
	283	[2748]	CALL     	R8 6 1 ; R8(R9,R10,R11,R12,R13)
	284	[2748]	JMP      	288 ; PC := 288
	285	[2750]	EQ       	0 R6 K70 ; if R6 ~= "SolNode332" then PC := 288
	286	[2750]	JMP      	288 ; PC := 288
	287	[2751]	LOADK    	R3 := 120.000000
	288	[2754]	GETTABLE 	R8 R0 K10 ; R8 := R0["isActiveMission"]
	289	[2754]	SETTABLE 	R0 K71 R8 ; R0[0x25d99d89] := R8
	290	[2755]	GETGLOBAL	R8 K65 ; R8 := 0xae91e43b
	291	[2755]	SELF     	R8 R8 K72 ; R9 := R8; R8 := R8[0xc0a3774b]
	292	[2755]	GETTABLE 	R10 R0 K67 ; R10 := R0["clipName"]
	293	[2755]	LOADK    	R11 K73 ; R11 := "Node.Container.Highlight"
	294	[2755]	LOADK    	R12 := 11.000000
	295	[2755]	GETTABLE 	R13 R0 K4 ; R13 := R0["locked"]
	296	[2755]	TEST     	R13 1 ; if R13 then PC := 301
	297	[2755]	JMP      	301 ; PC := 301
	298	[2755]	GETTABLE 	R13 R0 K0 ; R13 := R0["completed"]
	299	[2755]	NOT      	R13 R13 ; R13 := not R13
	300	[2755]	JMP      	303 ; PC := 303
	301	[2755]	OP_LOADBOOL	R13 0 1 ; R13 := false; PC := 302
	302	[2755]	OP_LOADBOOL	R13 1 0 ; R13 := true
	303	[2755]	CALL     	R8 6 1 ; R8(R9,R10,R11,R12,R13)
	304	[2757]	GETGLOBAL	R8 K65 ; R8 := 0xae91e43b
	305	[2757]	SELF     	R8 R8 K74 ; R9 := R8; R8 := R8[0x1cb415c1]
	306	[2757]	GETTABLE 	R10 R0 K67 ; R10 := R0["clipName"]
	307	[2757]	LOADK    	R11 K75 ; R11 := ".Node.Container.Node"
	308	[2757]	CONCAT   	R10 R10 R11 ; R10 := R10 .. R11
	309	[2757]	MOVE     	R11 R1 ; R11 := R1
	310	[2757]	CALL     	R8 4 1 ; R8(R9,R10,R11)
	311	[2758]	GETGLOBAL	R8 K65 ; R8 := 0xae91e43b
	312	[2758]	SELF     	R8 R8 K66 ; R9 := R8; R8 := R8[0xf64b7262]
	313	[2758]	GETTABLE 	R10 R0 K67 ; R10 := R0["clipName"]
	314	[2758]	LOADK    	R11 K68 ; R11 := "Node.Container.Node"
	315	[2758]	LOADK    	R12 := 12.000000
	316	[2758]	MOVE     	R13 R3 ; R13 := R3
	317	[2758]	CALL     	R8 6 1 ; R8(R9,R10,R11,R12,R13)
	318	[2759]	GETGLOBAL	R8 K65 ; R8 := 0xae91e43b
	319	[2759]	SELF     	R8 R8 K66 ; R9 := R8; R8 := R8[0xf64b7262]
	320	[2759]	GETTABLE 	R10 R0 K67 ; R10 := R0["clipName"]
	321	[2759]	LOADK    	R11 K68 ; R11 := "Node.Container.Node"
	322	[2759]	LOADK    	R12 := 13.000000
	323	[2759]	MOVE     	R13 R3 ; R13 := R3
	324	[2759]	CALL     	R8 6 1 ; R8(R9,R10,R11,R12,R13)
	325	[2760]	GETTABLE 	R8 R0 K4 ; R8 := R0["locked"]
	326	[2760]	TEST     	R8 0 ; if not R8 then PC := 331
	327	[2760]	JMP      	331 ; PC := 331
	328	[2760]	GETTABLE 	R8 R0 K76 ; R8 := R0["forceHover"]
	329	[2760]	EQ       	0 R8 K12 ; if R8 ~= true then PC := 345
	330	[2760]	JMP      	345 ; PC := 345
	331	[2760]	GETGLOBAL	R8 K21 ; R8 := _T
	332	[2760]	GETTABLE 	R8 R8 K77 ; R8 := R8["gPendingMission"]
	333	[2760]	EQ       	1 R8 K14 ; if R8 == nil then PC := 346
	334	[2760]	JMP      	346 ; PC := 346
	335	[2760]	GETTABLE 	R8 R0 K2 ; R8 := R0["radialSector"]
	336	[2760]	EQ       	1 R8 K14 ; if R8 == nil then PC := 345
	337	[2760]	JMP      	345 ; PC := 345
	338	[2760]	GETGLOBAL	R8 K21 ; R8 := _T
	339	[2760]	GETTABLE 	R8 R8 K77 ; R8 := R8["gPendingMission"]
	340	[2760]	GETTABLE 	R8 R8 K78 ; R8 := R8["baseNodeName"]
	341	[2760]	GETTABLE 	R9 R0 K2 ; R9 := R0["radialSector"]
	342	[2760]	GETTABLE 	R9 R9 K20 ; R9 := R9["name"]
	343	[2760]	EQ       	1 R8 R9 ; if R8 == R9 then PC := 346
	344	[2760]	JMP      	346 ; PC := 346
	345	[2760]	OP_LOADBOOL	R8 0 1 ; R8 := false; PC := 346
	346	[2760]	OP_LOADBOOL	R8 1 0 ; R8 := true
	347	[2761]	GETGLOBAL	R9 K65 ; R9 := 0xae91e43b
	348	[2761]	SELF     	R9 R9 K79 ; R10 := R9; R9 := R9[0xaade900e]
	349	[2761]	GETTABLE 	R11 R0 K67 ; R11 := R0["clipName"]
	350	[2761]	LOADK    	R12 := 59.000000
	351	[2761]	MOVE     	R13 R8 ; R13 := R8
	352	[2761]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	353	[2763]	GETGLOBAL	R9 K65 ; R9 := 0xae91e43b
	354	[2763]	SELF     	R9 R9 K74 ; R10 := R9; R9 := R9[0x1cb415c1]
	355	[2763]	GETTABLE 	R11 R0 K67 ; R11 := R0["clipName"]
	356	[2763]	LOADK    	R12 K80 ; R12 := ".Node.Container.Icon"
	357	[2763]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	358	[2763]	MOVE     	R12 R2 ; R12 := R2
	359	[2763]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	360	[2764]	GETGLOBAL	R9 K65 ; R9 := 0xae91e43b
	361	[2764]	SELF     	R9 R9 K72 ; R10 := R9; R9 := R9[0xc0a3774b]
	362	[2764]	GETTABLE 	R11 R0 K67 ; R11 := R0["clipName"]
	363	[2764]	LOADK    	R12 K81 ; R12 := "Node.Container.Icon"
	364	[2764]	LOADK    	R13 := 11.000000
	365	[2764]	GETGLOBAL	R14 K9 ; R14 := 0x7b998233
	366	[2764]	MOVE     	R15 R2 ; R15 := R2
	367	[2764]	CALL     	R14 2 2 ; R14 := R14(R15)
	368	[2764]	NOT      	R14 R14 ; R14 := not R14
	369	[2764]	CALL     	R9 6 1 ; R9(R10,R11,R12,R13,R14)
	370	[2765]	EQ       	1 R4 K14 ; if R4 == nil then PC := 386
	371	[2765]	JMP      	386 ; PC := 386
	372	[2766]	GETGLOBAL	R9 K65 ; R9 := 0xae91e43b
	373	[2766]	SELF     	R9 R9 K66 ; R10 := R9; R9 := R9[0xf64b7262]
	374	[2766]	GETTABLE 	R11 R0 K67 ; R11 := R0["clipName"]
	375	[2766]	LOADK    	R12 K81 ; R12 := "Node.Container.Icon"
	376	[2766]	LOADK    	R13 := 12.000000
	377	[2766]	MOVE     	R14 R4 ; R14 := R4
	378	[2766]	CALL     	R9 6 1 ; R9(R10,R11,R12,R13,R14)
	379	[2767]	GETGLOBAL	R9 K65 ; R9 := 0xae91e43b
	380	[2767]	SELF     	R9 R9 K66 ; R10 := R9; R9 := R9[0xf64b7262]
	381	[2767]	GETTABLE 	R11 R0 K67 ; R11 := R0["clipName"]
	382	[2767]	LOADK    	R12 K81 ; R12 := "Node.Container.Icon"
	383	[2767]	LOADK    	R13 := 13.000000
	384	[2767]	MOVE     	R14 R4 ; R14 := R4
	385	[2767]	CALL     	R9 6 1 ; R9(R10,R11,R12,R13,R14)
	386	[2769]	EQ       	1 R5 K14 ; if R5 == nil then PC := 395
	387	[2769]	JMP      	395 ; PC := 395
	388	[2770]	GETGLOBAL	R9 K65 ; R9 := 0xae91e43b
	389	[2770]	SELF     	R9 R9 K66 ; R10 := R9; R9 := R9[0xf64b7262]
	390	[2770]	GETTABLE 	R11 R0 K67 ; R11 := R0["clipName"]
	391	[2770]	LOADK    	R12 K81 ; R12 := "Node.Container.Icon"
	392	[2770]	LOADK    	R13 := 1.000000
	393	[2770]	MOVE     	R14 R5 ; R14 := R5
	394	[2770]	CALL     	R9 6 1 ; R9(R10,R11,R12,R13,R14)
	395	[2773]	GETTABLE 	R9 R0 K11 ; R9 := R0["special"]
	396	[2773]	TEST     	R9 0 ; if not R9 then PC := 404
	397	[2773]	JMP      	404 ; PC := 404
	398	[2774]	GETGLOBAL	R9 K65 ; R9 := 0xae91e43b
	399	[2774]	SELF     	R9 R9 K82 ; R10 := R9; R9 := R9[0xcd12f3f1]
	400	[2774]	GETTABLE 	R11 R0 K83 ; R11 := R0["nodeIndex"]
	401	[2774]	LOADK    	R12 := 10.000000
	402	[2774]	LOADK    	R13 := 100.000000
	403	[2774]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	404	[2776]	GETTABLE 	R9 R0 K84 ; R9 := R0["locationEnabled"]
	405	[2776]	TEST     	R9 0 ; if not R9 then PC := 410
	406	[2776]	JMP      	410 ; PC := 410
	407	[2776]	GETTABLE 	R9 R0 K27 ; R9 := R0["IsQuest"]
	408	[2776]	TEST     	R9 0 ; if not R9 then PC := 421
	409	[2776]	JMP      	421 ; PC := 421
	410	[2777]	GETGLOBAL	R9 K65 ; R9 := 0xae91e43b
	411	[2777]	SELF     	R9 R9 K72 ; R10 := R9; R9 := R9[0xc0a3774b]
	412	[2777]	GETTABLE 	R11 R0 K67 ; R11 := R0["clipName"]
	413	[2777]	LOADK    	R12 K45 ; R12 := "Node"
	414	[2777]	LOADK    	R13 := 11.000000
	415	[2777]	GETTABLE 	R14 R0 K84 ; R14 := R0["locationEnabled"]
	416	[2777]	EQ       	1 R14 K12 ; if R14 == true then PC := 419
	417	[2777]	JMP      	419 ; PC := 419
	418	[2777]	OP_LOADBOOL	R14 0 1 ; R14 := false; PC := 419
	419	[2777]	OP_LOADBOOL	R14 1 0 ; R14 := true
	420	[2777]	CALL     	R9 6 1 ; R9(R10,R11,R12,R13,R14)
	421	[2779]	GETTABLE 	R9 R0 K85 ; R9 := R0["isEmpty"]
	422	[2779]	TEST     	R9 1 ; if R9 then PC := 431
	423	[2779]	JMP      	431 ; PC := 431
	424	[2779]	GETGLOBAL	R9 K86 ; R9 := mRailJack
	425	[2779]	GETTABLE 	R9 R9 K87 ; R9 := R9["Active"]
	426	[2779]	TEST     	R9 0 ; if not R9 then PC := 437
	427	[2779]	JMP      	437 ; PC := 437
	428	[2779]	GETTABLE 	R9 R0 K4 ; R9 := R0["locked"]
	429	[2779]	TEST     	R9 0 ; if not R9 then PC := 437
	430	[2779]	JMP      	437 ; PC := 437
	431	[2780]	GETGLOBAL	R9 K65 ; R9 := 0xae91e43b
	432	[2780]	SELF     	R9 R9 K79 ; R10 := R9; R9 := R9[0xaade900e]
	433	[2780]	GETTABLE 	R11 R0 K67 ; R11 := R0["clipName"]
	434	[2780]	LOADK    	R12 := 11.000000
	435	[2780]	OP_LOADBOOL	R13 0 0 ; R13 := false
	436	[2780]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	437	[2782]	GETTABLE 	R9 R0 K88 ; R9 := R0["isFlotilla"]
	438	[2782]	TEST     	R9 0 ; if not R9 then PC := 447
	439	[2782]	JMP      	447 ; PC := 447
	440	[2783]	GETGLOBAL	R9 K41 ; R9 := 0x33bdd652
	441	[2783]	GETTABLE 	R9 R9 K42 ; R9 := R9[0x23d5322f]
	442	[2783]	GETGLOBAL	R10 K43 ; R10 := mFxNodes
	443	[2783]	GETTABLE 	R10 R10 K50 ; R10 := R10["Pending"]
	444	[2783]	NEWTABLE 	R11 0 1 ; R11 := {}
	445	[2783]	SETTABLE 	R11 K45 R0 ; R11["Node"] := R0
	446	[2783]	CALL     	R9 3 1 ; R9(R10,R11)
	447	[2792]	GETUPVAL 	R9 U7 ; R9 := U7
	448	[2792]	MOVE     	R10 R0 ; R10 := R0
	449	[2792]	CALL     	R9 2 1 ; R9(R10)
	450	[2793]	RETURN   	R0 1 ; return 

function #58 <?:2795,2908> (243 instructions, 972 bytes at 0000021136488020)
0 params, 42 slots, 5 upvalues, 0 locals, 49 constants, 1 function
	1	[2796]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2796]	GETTABLE 	R0 R0 K0 ; R0 := R0[0x8e7c3b5e]
	3	[2796]	GETGLOBAL	R1 K1 ; R1 := 0x25d99d89
	4	[2796]	CALL     	R0 2 5 ; R0,R1,R2,R3 := R0(R1)
	5	[2798]	GETGLOBAL	R4 K2 ; R4 := 0x7b998233
	6	[2798]	MOVE     	R5 R0 ; R5 := R0
	7	[2798]	CALL     	R4 2 2 ; R4 := R4(R5)
	8	[2798]	TEST     	R4 1 ; if R4 then PC := 15
	9	[2798]	JMP      	15 ; PC := 15
	10	[2799]	SELF     	R4 R0 K3 ; R5 := R0; R4 := R0[0xb4568f02]
	11	[2799]	SUB      	R6 R1 K4 ; R6 := R1 - 1.000000
	12	[2799]	MOVE     	R7 R2 ; R7 := R2
	13	[2799]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	14	[2799]	MOVE     	R2 R4 ; R2 := R4
	15	[2802]	NEWTABLE 	R4 0 0 ; R4 := {}
	16	[2803]	LOADNIL  	R5 R5 ; R5 := nil
	17	[2832]	CLOSURE  	R6 0 ; R6 := closure(Function #1)
	18	[2832]	MOVE     	R0 R5 ; R0 := R5
	19	[2832]	GETUPVAL 	R0 U1 ; R0 := U1
	20	[2832]	MOVE     	R0 R0 ; R0 := R0
	21	[2832]	MOVE     	R0 R2 ; R0 := R2
	22	[2832]	GETUPVAL 	R0 U2 ; R0 := U2
	23	[2834]	GETGLOBAL	R7 K2 ; R7 := 0x7b998233
	24	[2834]	MOVE     	R8 R0 ; R8 := R0
	25	[2834]	CALL     	R7 2 2 ; R7 := R7(R8)
	26	[2834]	TEST     	R7 1 ; if R7 then PC := 128
	27	[2834]	JMP      	128 ; PC := 128
	28	[2834]	TEST     	R3 0 ; if not R3 then PC := 128
	29	[2834]	JMP      	128 ; PC := 128
	30	[2835]	SELF     	R7 R0 K5 ; R8 := R0; R7 := R0[0x42700bd0]
	31	[2835]	CALL     	R7 2 2 ; R7 := R7(R8)
	32	[2836]	LEN      	R8 R7 ; R8 := # R7
	33	[2836]	LE       	0 R1 R8 ; if R1 > R8 then PC := 128
	34	[2836]	JMP      	128 ; PC := 128
	35	[2837]	GETTABLE 	R8 R7 R1 ; R8 := R7[R1]
	36	[2838]	GETTABLE 	R9 R8 K6 ; R9 := R8["mMainMission"]
	37	[2838]	GETTABLE 	R9 R9 K7 ; R9 := R9["mKey"]
	38	[2839]	GETGLOBAL	R10 K2 ; R10 := 0x7b998233
	39	[2839]	MOVE     	R11 R9 ; R11 := R9
	40	[2839]	CALL     	R10 2 2 ; R10 := R10(R11)
	41	[2839]	TEST     	R10 1 ; if R10 then PC := 57
	42	[2839]	JMP      	57 ; PC := 57
	43	[2840]	GETGLOBAL	R10 K8 ; R10 := 0x64fb1586
	44	[2840]	SELF     	R11 R9 K9 ; R12 := R9; R11 := R9[0x92608d86]
	45	[2840]	CALL     	R11 2 0 ; R11,... := R11(R12)
	46	[2840]	CALL     	R10 0 2 ; R10 := R10(R11,...)
	47	[2841]	MOVE     	R11 R6 ; R11 := R6
	48	[2841]	MOVE     	R12 R10 ; R12 := R10
	49	[2841]	MOVE     	R13 R9 ; R13 := R9
	50	[2841]	MOVE     	R14 R2 ; R14 := R2
	51	[2841]	CALL     	R11 4 1 ; R11(R12,R13,R14)
	52	[2842]	GETGLOBAL	R11 K10 ; R11 := 0x33bdd652
	53	[2842]	GETTABLE 	R11 R11 K11 ; R11 := R11[0x23d5322f]
	54	[2842]	MOVE     	R12 R4 ; R12 := R4
	55	[2842]	MOVE     	R13 R10 ; R13 := R10
	56	[2842]	CALL     	R11 3 1 ; R11(R12,R13)
	57	[2845]	GETTABLE 	R11 R8 K12 ; R11 := R8["mMarkedNodes"]
	58	[2845]	LEN      	R11 R11 ; R11 := # R11
	59	[2845]	LT       	0 K13 R11 ; if 0.000000 >= R11 then PC := 128
	60	[2845]	JMP      	128 ; PC := 128
	61	[2846]	GETUPVAL 	R11 U0 ; R11 := U0
	62	[2846]	GETTABLE 	R11 R11 K14 ; R11 := R11[0x5e35d4d6]
	63	[2846]	CALL     	R11 1 2 ; R11 := R11()
	64	[2847]	GETTABLE 	R12 R8 K15 ; R12 := R8["mShowFirstExistingMarkedNodeOnly"]
	65	[2847]	TEST     	R12 0 ; if not R12 then PC := 88
	66	[2847]	JMP      	88 ; PC := 88
	67	[2848]	SELF     	R12 R11 K16 ; R13 := R11; R12 := R11[0x365d0eb2]
	68	[2848]	GETTABLE 	R14 R8 K12 ; R14 := R8["mMarkedNodes"]
	69	[2848]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	70	[2849]	GETGLOBAL	R13 K17 ; R13 := EMPTY_SYMBOL
	71	[2849]	EQ       	1 R12 R13 ; if R12 == R13 then PC := 128
	72	[2849]	JMP      	128 ; PC := 128
	73	[2850]	MOVE     	R13 R6 ; R13 := R6
	74	[2850]	GETGLOBAL	R14 K8 ; R14 := 0x64fb1586
	75	[2850]	MOVE     	R15 R12 ; R15 := R12
	76	[2850]	CALL     	R14 2 2 ; R14 := R14(R15)
	77	[2850]	MOVE     	R15 R9 ; R15 := R9
	78	[2850]	MOVE     	R16 R2 ; R16 := R2
	79	[2850]	CALL     	R13 4 1 ; R13(R14,R15,R16)
	80	[2851]	GETGLOBAL	R13 K10 ; R13 := 0x33bdd652
	81	[2851]	GETTABLE 	R13 R13 K11 ; R13 := R13[0x23d5322f]
	82	[2851]	MOVE     	R14 R4 ; R14 := R4
	83	[2851]	GETGLOBAL	R15 K8 ; R15 := 0x64fb1586
	84	[2851]	MOVE     	R16 R12 ; R16 := R12
	85	[2851]	CALL     	R15 2 0 ; R15,... := R15(R16)
	86	[2851]	CALL     	R13 0 1 ; R13(R14,...)
	87	[2852]	JMP      	128 ; PC := 128
	88	[2854]	GETTABLE 	R13 R8 K12 ; R13 := R8["mMarkedNodes"]
	89	[2855]	GETGLOBAL	R14 K18 ; R14 := _T
	90	[2855]	GETTABLE 	R14 R14 K19 ; R14 := R14["CustomStarChartNodeFilter"]
	91	[2855]	TEST     	R14 0 ; if not R14 then PC := 101
	92	[2855]	JMP      	101 ; PC := 101
	93	[2855]	GETGLOBAL	R14 K18 ; R14 := _T
	94	[2855]	GETTABLE 	R14 R14 K19 ; R14 := R14["CustomStarChartNodeFilter"]
	95	[2855]	GETTABLE 	R14 R14 K20 ; R14 := R14["Nodes"]
	96	[2855]	TEST     	R14 0 ; if not R14 then PC := 101
	97	[2855]	JMP      	101 ; PC := 101
	98	[2856]	GETGLOBAL	R14 K18 ; R14 := _T
	99	[2856]	GETTABLE 	R14 R14 K19 ; R14 := R14["CustomStarChartNodeFilter"]
	100	[2856]	GETTABLE 	R13 R14 K20 ; R13 := R14["Nodes"]
	101	[2858]	GETGLOBAL	R14 K21 ; R14 := 0xc8802016
	102	[2858]	MOVE     	R15 R13 ; R15 := R13
	103	[2858]	CALL     	R14 2 4 ; R14,R15,R16 := R14(R15)
	104	[2858]	JMP      	126 ; PC := 126
	105	[2859]	SELF     	R19 R11 K22 ; R20 := R11; R19 := R11[0x3ad9ed31]
	106	[2859]	MOVE     	R21 R18 ; R21 := R18
	107	[2859]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	108	[2859]	GETTABLE 	R19 R19 K23 ; R19 := R19["name"]
	109	[2859]	GETGLOBAL	R20 K17 ; R20 := EMPTY_SYMBOL
	110	[2859]	EQ       	1 R19 R20 ; if R19 == R20 then PC := 126
	111	[2859]	JMP      	126 ; PC := 126
	112	[2860]	MOVE     	R19 R6 ; R19 := R6
	113	[2860]	GETGLOBAL	R20 K8 ; R20 := 0x64fb1586
	114	[2860]	MOVE     	R21 R18 ; R21 := R18
	115	[2860]	CALL     	R20 2 2 ; R20 := R20(R21)
	116	[2860]	MOVE     	R21 R9 ; R21 := R9
	117	[2860]	MOVE     	R22 R2 ; R22 := R2
	118	[2860]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	119	[2861]	GETGLOBAL	R19 K10 ; R19 := 0x33bdd652
	120	[2861]	GETTABLE 	R19 R19 K11 ; R19 := R19[0x23d5322f]
	121	[2861]	MOVE     	R20 R4 ; R20 := R4
	122	[2861]	GETGLOBAL	R21 K8 ; R21 := 0x64fb1586
	123	[2861]	MOVE     	R22 R18 ; R22 := R18
	124	[2861]	CALL     	R21 2 0 ; R21,... := R21(R22)
	125	[2861]	CALL     	R19 0 1 ; R19(R20,...)
	126	[2858]	TFORLOOP 	R14 2 ; R17,R18 := R14(R15,R16); if R17 ~= nil then begin PC = 105; R16 := R17 end
	127	[2862]	JMP      	105 ; PC := 105
	128	[2870]	LOADK    	R19 := 1.000000
	129	[2870]	GETUPVAL 	R20 U3 ; R20 := U3
	130	[2870]	LEN      	R20 R20 ; R20 := # R20
	131	[2870]	LOADK    	R21 := 1.000000
	132	[2870]	FORPREP  	R19 207 ; R19 -= R21; PC := 207
	133	[2871]	OP_LOADBOOL	R23 1 0 ; R23 := true
	134	[2872]	LOADK    	R24 := 1.000000
	135	[2872]	LEN      	R25 R4 ; R25 := # R4
	136	[2872]	LOADK    	R26 := 1.000000
	137	[2872]	FORPREP  	R24 145 ; R24 -= R26; PC := 145
	138	[2873]	GETTABLE 	R28 R4 R27 ; R28 := R4[R27]
	139	[2873]	GETUPVAL 	R29 U3 ; R29 := U3
	140	[2873]	GETTABLE 	R29 R29 R22 ; R29 := R29[R22]
	141	[2873]	EQ       	0 R28 R29 ; if R28 ~= R29 then PC := 145
	142	[2873]	JMP      	145 ; PC := 145
	143	[2874]	OP_LOADBOOL	R23 0 0 ; R23 := false
	144	[2875]	JMP      	146 ; PC := 146
	145	[2872]	FORLOOP  	R24 138 ; R24 += R26; if R24 <= R25 then begin PC := 138; R27 := R24 end
	146	[2879]	TEST     	R23 0 ; if not R23 then PC := 207
	147	[2879]	JMP      	207 ; PC := 207
	148	[2879]	GETGLOBAL	R28 K2 ; R28 := 0x7b998233
	149	[2879]	GETGLOBAL	R29 K24 ; R29 := mRadialSolarMap
	150	[2879]	CALL     	R28 2 2 ; R28 := R28(R29)
	151	[2879]	TEST     	R28 1 ; if R28 then PC := 207
	152	[2879]	JMP      	207 ; PC := 207
	153	[2880]	GETUPVAL 	R28 U1 ; R28 := U1
	154	[2880]	GETUPVAL 	R29 U3 ; R29 := U3
	155	[2880]	GETTABLE 	R29 R29 R22 ; R29 := R29[R22]
	156	[2880]	GETTABLE 	R5 R28 R29 ; R5 := R28[R29]
	157	[2881]	GETGLOBAL	R28 K2 ; R28 := 0x7b998233
	158	[2881]	MOVE     	R29 R5 ; R29 := R5
	159	[2881]	CALL     	R28 2 2 ; R28 := R28(R29)
	160	[2881]	TEST     	R28 1 ; if R28 then PC := 207
	161	[2881]	JMP      	207 ; PC := 207
	162	[2882]	GETGLOBAL	R28 K24 ; R28 := mRadialSolarMap
	163	[2882]	SELF     	R28 R28 K22 ; R29 := R28; R28 := R28[0x3ad9ed31]
	164	[2882]	GETGLOBAL	R30 K25 ; R30 := 0x0469f296
	165	[2882]	GETUPVAL 	R31 U3 ; R31 := U3
	166	[2882]	GETTABLE 	R31 R31 R22 ; R31 := R31[R22]
	167	[2882]	CALL     	R30 2 0 ; R30,... := R30(R31)
	168	[2882]	CALL     	R28 0 2 ; R28 := R28(R29,...)
	169	[2883]	GETGLOBAL	R29 K2 ; R29 := 0x7b998233
	170	[2883]	MOVE     	R30 R28 ; R30 := R28
	171	[2883]	CALL     	R29 2 2 ; R29 := R29(R30)
	172	[2883]	TEST     	R29 1 ; if R29 then PC := 207
	173	[2883]	JMP      	207 ; PC := 207
	174	[2884]	SELF     	R29 R28 K27 ; R30 := R28; R29 := R28[0x8f89d633]
	175	[2884]	CALL     	R29 2 2 ; R29 := R29(R30)
	176	[2884]	SETTABLE 	R5 K26 R29 ; R5["radialSector"] := R29
	177	[2885]	GETTABLE 	R29 R5 K26 ; R29 := R5["radialSector"]
	178	[2885]	GETTABLE 	R29 R29 K23 ; R29 := R29["name"]
	179	[2885]	SETTABLE 	R5 K23 R29 ; R5["name"] := R29
	180	[2886]	GETTABLE 	R29 R5 K26 ; R29 := R5["radialSector"]
	181	[2886]	GETTABLE 	R29 R29 K29 ; R29 := R29["pos"]
	182	[2886]	SETTABLE 	R5 K28 R29 ; R5["position"] := R29
	183	[2887]	GETGLOBAL	R29 K31 ; R29 := 0x7f5022cf
	184	[2887]	GETTABLE 	R29 R29 K32 ; R29 := R29[0x3f3e4d12]
	185	[2887]	GETGLOBAL	R30 K33 ; R30 := 0xae91e43b
	186	[2887]	SELF     	R30 R30 K34 ; R31 := R30; R30 := R30[0x42b04007]
	187	[2887]	GETTABLE 	R32 R28 K35 ; R32 := R28["locTag"]
	188	[2887]	SELF     	R32 R32 K36 ; R33 := R32; R32 := R32[0x6d604ba7]
	189	[2887]	CALL     	R32 2 2 ; R32 := R32(R33)
	190	[2887]	OP_LOADBOOL	R33 1 0 ; R33 := true
	191	[2887]	CALL     	R30 4 0 ; R30,... := R30(R31,R32,R33)
	192	[2887]	CALL     	R29 0 2 ; R29 := R29(R30,...)
	193	[2887]	SETTABLE 	R5 K30 R29 ; R5["locName"] := R29
	194	[2888]	SETTABLE 	R5 K37 K38 ; R5["IsQuest"] := false
	195	[2889]	SETTABLE 	R5 K39 K40 ; R5["KeyType"] := nil
	196	[2891]	GETUPVAL 	R29 U2 ; R29 := U2
	197	[2891]	GETTABLE 	R30 R5 K26 ; R30 := R5["radialSector"]
	198	[2891]	GETTABLE 	R30 R30 K41 ; R30 := R30["region"]
	199	[2891]	GETTABLE 	R29 R29 R30 ; R29 := R29[R30]
	200	[2892]	EQ       	1 R29 K40 ; if R29 == nil then PC := 207
	201	[2892]	JMP      	207 ; PC := 207
	202	[2893]	GETUPVAL 	R30 U2 ; R30 := U2
	203	[2893]	GETTABLE 	R31 R5 K26 ; R31 := R5["radialSector"]
	204	[2893]	GETTABLE 	R31 R31 K41 ; R31 := R31["region"]
	205	[2893]	SUB      	R32 R29 K4 ; R32 := R29 - 1.000000
	206	[2893]	SETTABLE 	R30 R31 R32 ; R30[R31] := R32
	207	[2870]	FORLOOP  	R19 133 ; R19 += R21; if R19 <= R20 then begin PC := 133; R22 := R19 end
	208	[2900]	GETGLOBAL	R30 K42 ; R30 := mNewWarMode
	209	[2900]	TEST     	R30 0 ; if not R30 then PC := 239
	210	[2900]	JMP      	239 ; PC := 239
	211	[2901]	LOADK    	R30 := 1.000000
	212	[2901]	GETGLOBAL	R31 K43 ; R31 := mRegionLabels
	213	[2901]	LEN      	R31 R31 ; R31 := # R31
	214	[2901]	LOADK    	R32 := 1.000000
	215	[2901]	FORPREP  	R30 238 ; R30 -= R32; PC := 238
	216	[2902]	GETGLOBAL	R34 K33 ; R34 := 0xae91e43b
	217	[2902]	SELF     	R34 R34 K44 ; R35 := R34; R34 := R34[0x5f56eeab]
	218	[2902]	GETGLOBAL	R36 K43 ; R36 := mRegionLabels
	219	[2902]	GETTABLE 	R36 R36 R33 ; R36 := R36[R33]
	220	[2902]	LOADK    	R37 K45 ; R37 := ".Name"
	221	[2902]	CONCAT   	R36 R36 R37 ; R36 := R36 .. R37
	222	[2902]	LOADK    	R37 := 10.000000
	223	[2902]	GETUPVAL 	R38 U4 ; R38 := U4
	224	[2902]	GETTABLE 	R38 R38 K46 ; R38 := R38[0x06d055f9]
	225	[2902]	GETUPVAL 	R39 U2 ; R39 := U2
	226	[2902]	SUB      	R40 R33 K4 ; R40 := R33 - 1.000000
	227	[2902]	GETTABLE 	R39 R39 R40 ; R39 := R39[R40]
	228	[2902]	TEST     	R39 1 ; if R39 then PC := 234
	229	[2902]	JMP      	234 ; PC := 234
	230	[2902]	LT       	1 K13 K13 ; if 0.000000 < 0.000000 then PC := 233
	231	[2902]	JMP      	233 ; PC := 233
	232	[2902]	OP_LOADBOOL	R39 0 1 ; R39 := false; PC := 233
	233	[2902]	OP_LOADBOOL	R39 1 0 ; R39 := true
	234	[2902]	LOADK    	R40 := 100.000000
	235	[2902]	LOADK    	R41 := 40.000000
	236	[2902]	CALL     	R38 4 0 ; R38,... := R38(R39,R40,R41)
	237	[2902]	CALL     	R34 0 1 ; R34(R35,...)
	238	[2901]	FORLOOP  	R30 216 ; R30 += R32; if R30 <= R31 then begin PC := 216; R33 := R30 end
	239	[2906]	SETUPVAL 	R4 U3 ; U3 := R4
	240	[2907]	GETGLOBAL	R34 K47 ; R34 := 0x0032441c
	241	[2907]	GETUPVAL 	R35 U3 ; R35 := U3
	242	[2907]	SETTABLE 	R34 K48 R35 ; R34["QuestNodeNames"] := R35
	243	[2908]	RETURN   	R0 1 ; return 

function #59 <?:2910,2926> (31 instructions, 124 bytes at 0000021136489120)
0 params, 6 slots, 4 upvalues, 0 locals, 6 constants, 0 functions
	1	[2911]	GETGLOBAL	R0 K0 ; R0 := mFxNodes
	2	[2911]	NEWTABLE 	R1 0 0 ; R1 := {}
	3	[2911]	SETTABLE 	R0 K1 R1 ; R0["Pending"] := R1
	4	[2912]	GETGLOBAL	R0 K0 ; R0 := mFxNodes
	5	[2912]	NEWTABLE 	R1 0 0 ; R1 := {}
	6	[2912]	SETTABLE 	R0 K2 R1 ; R0["Quest"] := R1
	7	[2913]	GETGLOBAL	R0 K0 ; R0 := mFxNodes
	8	[2913]	NEWTABLE 	R1 0 0 ; R1 := {}
	9	[2913]	SETTABLE 	R0 K3 R1 ; R0["Invasion"] := R1
	10	[2915]	GETUPVAL 	R0 U0 ; R0 := U0
	11	[2915]	CALL     	R0 1 1 ; R0()
	12	[2917]	LOADK    	R0 := 1.000000
	13	[2917]	GETUPVAL 	R1 U1 ; R1 := U1
	14	[2917]	LEN      	R1 R1 ; R1 := # R1
	15	[2917]	LOADK    	R2 := 1.000000
	16	[2917]	FORPREP  	R0 28 ; R0 -= R2; PC := 28
	17	[2918]	GETUPVAL 	R4 U1 ; R4 := U1
	18	[2918]	GETTABLE 	R4 R4 R3 ; R4 := R4[R3]
	19	[2918]	GETTABLE 	R4 R4 K4 ; R4 := R4["isShortcut"]
	20	[2918]	TEST     	R4 1 ; if R4 then PC := 28
	21	[2918]	JMP      	28 ; PC := 28
	22	[2919]	GETUPVAL 	R4 U2 ; R4 := U2
	23	[2919]	GETUPVAL 	R5 U1 ; R5 := U1
	24	[2919]	GETTABLE 	R5 R5 R3 ; R5 := R5[R3]
	25	[2919]	CALL     	R4 2 1 ; R4(R5)
	26	[2920]	GETGLOBAL	R4 K5 ; R4 := 0xce225efa
	27	[2920]	CALL     	R4 1 1 ; R4()
	28	[2917]	FORLOOP  	R0 17 ; R0 += R2; if R0 <= R1 then begin PC := 17; R3 := R0 end
	29	[2925]	GETUPVAL 	R4 U3 ; R4 := U3
	30	[2925]	CALL     	R4 1 1 ; R4()
	31	[2926]	RETURN   	R0 1 ; return 

function #60 <?:2928,2935> (35 instructions, 140 bytes at 0000021136489340)
1 param, 8 slots, 1 upvalue, 0 locals, 14 constants, 0 functions
	1	[2929]	SETTABLE 	R0 K0 K1 ; R0["visibleLabel"] := true
	2	[2931]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	3	[2931]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x1cb415c1]
	4	[2931]	GETTABLE 	R3 R0 K4 ; R3 := R0["clipName"]
	5	[2931]	LOADK    	R4 K5 ; R4 := ".Node.Container.Node"
	6	[2931]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	7	[2931]	GETUPVAL 	R4 U0 ; R4 := U0
	8	[2931]	GETTABLE 	R4 R4 K6 ; R4 := R4[0x06d055f9]
	9	[2931]	GETTABLE 	R5 R0 K7 ; R5 := R0["locked"]
	10	[2931]	GETGLOBAL	R6 K8 ; R6 := 0xbf3051d1
	11	[2931]	GETGLOBAL	R7 K9 ; R7 := 0xfff0d414
	12	[2931]	CALL     	R4 4 0 ; R4,... := R4(R5,R6,R7)
	13	[2931]	CALL     	R1 0 1 ; R1(R2,...)
	14	[2932]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	15	[2932]	SELF     	R1 R1 K10 ; R2 := R1; R1 := R1[0xf64b7262]
	16	[2932]	GETTABLE 	R3 R0 K4 ; R3 := R0["clipName"]
	17	[2932]	LOADK    	R4 K11 ; R4 := "Node.Container.Node"
	18	[2932]	LOADK    	R5 := 12.000000
	19	[2932]	LOADK    	R6 := 84.000000
	20	[2932]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	21	[2933]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	22	[2933]	SELF     	R1 R1 K10 ; R2 := R1; R1 := R1[0xf64b7262]
	23	[2933]	GETTABLE 	R3 R0 K4 ; R3 := R0["clipName"]
	24	[2933]	LOADK    	R4 K11 ; R4 := "Node.Container.Node"
	25	[2933]	LOADK    	R5 := 13.000000
	26	[2933]	LOADK    	R6 := 84.000000
	27	[2933]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	28	[2934]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	29	[2934]	SELF     	R1 R1 K12 ; R2 := R1; R1 := R1[0xc0a3774b]
	30	[2934]	GETTABLE 	R3 R0 K4 ; R3 := R0["clipName"]
	31	[2934]	LOADK    	R4 K13 ; R4 := "Node.Container.Icon"
	32	[2934]	LOADK    	R5 := 11.000000
	33	[2934]	OP_LOADBOOL	R6 0 0 ; R6 := false
	34	[2934]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	35	[2935]	RETURN   	R0 1 ; return 

function #61 <?:2937,2961> (43 instructions, 172 bytes at 00000211134557A0)
0 params, 11 slots, 3 upvalues, 0 locals, 14 constants, 0 functions
	1	[2939]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2939]	CALL     	R0 1 2 ; R0 := R0()
	3	[2940]	LOADK    	R1 := 1.000000
	4	[2940]	GETUPVAL 	R2 U1 ; R2 := U1
	5	[2940]	LEN      	R2 R2 ; R2 := # R2
	6	[2940]	LOADK    	R3 := 1.000000
	7	[2940]	FORPREP  	R1 42 ; R1 -= R3; PC := 42
	8	[2941]	GETUPVAL 	R5 U1 ; R5 := U1
	9	[2941]	GETTABLE 	R5 R5 R4 ; R5 := R5[R4]
	10	[2942]	GETTABLE 	R6 R5 K0 ; R6 := R5["isShortcut"]
	11	[2942]	TEST     	R6 0 ; if not R6 then PC := 40
	12	[2942]	JMP      	40 ; PC := 40
	13	[2943]	GETTABLE 	R6 R5 K1 ; R6 := R5["locked"]
	14	[2943]	EQ       	0 R6 K2 ; if R6 ~= nil then PC := 18
	15	[2943]	JMP      	18 ; PC := 18
	16	[2945]	SETTABLE 	R5 K1 K3 ; R5["locked"] := true
	17	[2946]	SETTABLE 	R5 K4 K5 ; R5["completed"] := false
	18	[2949]	GETTABLE 	R6 R5 K1 ; R6 := R5["locked"]
	19	[2949]	TEST     	R6 0 ; if not R6 then PC := 37
	20	[2949]	JMP      	37 ; PC := 37
	21	[2949]	GETGLOBAL	R6 K6 ; R6 := 0x7b998233
	22	[2949]	GETTABLE 	R7 R5 K7 ; R7 := R5["targetRegion"]
	23	[2949]	CALL     	R6 2 2 ; R6 := R6(R7)
	24	[2949]	TEST     	R6 1 ; if R6 then PC := 37
	25	[2949]	JMP      	37 ; PC := 37
	26	[2950]	GETTABLE 	R6 R5 K7 ; R6 := R5["targetRegion"]
	27	[2951]	GETGLOBAL	R7 K8 ; R7 := mRegions
	28	[2951]	ADD      	R8 R6 K9 ; R8 := R6 + 1.000000
	29	[2951]	GETTABLE 	R7 R7 R8 ; R7 := R7[R8]
	30	[2952]	SELF     	R8 R7 K10 ; R9 := R7; R8 := R7[0x699fd1e2]
	31	[2952]	MOVE     	R10 R0 ; R10 := R0
	32	[2952]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	33	[2952]	EQ       	1 R8 K12 ; if R8 == 0.000000 then PC := 37
	34	[2952]	JMP      	37 ; PC := 37
	35	[2953]	SETTABLE 	R5 K1 K5 ; R5["locked"] := false
	36	[2954]	SETTABLE 	R5 K4 K3 ; R5["completed"] := true
	37	[2957]	GETUPVAL 	R8 U2 ; R8 := U2
	38	[2957]	MOVE     	R9 R5 ; R9 := R5
	39	[2957]	CALL     	R8 2 1 ; R8(R9)
	40	[2959]	GETGLOBAL	R8 K13 ; R8 := 0xce225efa
	41	[2959]	CALL     	R8 1 1 ; R8()
	42	[2940]	FORLOOP  	R1 8 ; R1 += R3; if R1 <= R2 then begin PC := 8; R4 := R1 end
	43	[2961]	RETURN   	R0 1 ; return 

function #62 <?:2963,2989> (86 instructions, 344 bytes at 0000021113455AE0)
0 params, 11 slots, 5 upvalues, 0 locals, 23 constants, 0 functions
	1	[2964]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2964]	CALL     	R0 1 2 ; R0 := R0()
	3	[2965]	LOADK    	R1 := 1.000000
	4	[2965]	GETUPVAL 	R2 U1 ; R2 := U1
	5	[2965]	LEN      	R2 R2 ; R2 := # R2
	6	[2965]	LOADK    	R3 := 1.000000
	7	[2965]	FORPREP  	R1 85 ; R1 -= R3; PC := 85
	8	[2966]	GETUPVAL 	R5 U1 ; R5 := U1
	9	[2966]	GETTABLE 	R5 R5 R4 ; R5 := R5[R4]
	10	[2967]	GETTABLE 	R6 R5 K0 ; R6 := R5["radialSector"]
	11	[2968]	GETGLOBAL	R7 K1 ; R7 := mRegions
	12	[2968]	GETTABLE 	R8 R6 K2 ; R8 := R6["region"]
	13	[2968]	ADD      	R8 R8 K3 ; R8 := R8 + 1.000000
	14	[2968]	GETTABLE 	R7 R7 R8 ; R7 := R7[R8]
	15	[2969]	SELF     	R8 R7 K4 ; R9 := R7; R8 := R7[0x699fd1e2]
	16	[2969]	MOVE     	R10 R0 ; R10 := R0
	17	[2969]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	18	[2969]	EQ       	1 R8 K6 ; if R8 == 0.000000 then PC := 78
	19	[2969]	JMP      	78 ; PC := 78
	20	[2971]	GETTABLE 	R8 R6 K7 ; R8 := R6["nodeType"]
	21	[2971]	EQ       	0 R8 K8 ; if R8 ~= 3.000000 then PC := 43
	22	[2971]	JMP      	43 ; PC := 43
	23	[2971]	GETTABLE 	R8 R6 K9 ; R8 := R6["name"]
	24	[2971]	GETUPVAL 	R9 U2 ; R9 := U2
	25	[2971]	GETTABLE 	R9 R9 K10 ; R9 := R9["CETUS_NODE_TAG"]
	26	[2971]	EQ       	1 R8 R9 ; if R8 == R9 then PC := 43
	27	[2971]	JMP      	43 ; PC := 43
	28	[2971]	GETTABLE 	R8 R6 K9 ; R8 := R6["name"]
	29	[2971]	GETUPVAL 	R9 U2 ; R9 := U2
	30	[2971]	GETTABLE 	R9 R9 K11 ; R9 := R9["FORTUNA_NODE_TAG"]
	31	[2971]	EQ       	1 R8 R9 ; if R8 == R9 then PC := 43
	32	[2971]	JMP      	43 ; PC := 43
	33	[2971]	GETUPVAL 	R8 U2 ; R8 := U2
	34	[2971]	GETTABLE 	R8 R8 K12 ; R8 := R8[0xc00479a5]
	35	[2971]	CALL     	R8 1 2 ; R8 := R8()
	36	[2971]	TEST     	R8 0 ; if not R8 then PC := 43
	37	[2971]	JMP      	43 ; PC := 43
	38	[2972]	SETTABLE 	R5 K13 K14 ; R5["forceUnlock"] := true
	39	[2973]	GETUPVAL 	R8 U3 ; R8 := U3
	40	[2973]	MOVE     	R9 R5 ; R9 := R5
	41	[2973]	CALL     	R8 2 1 ; R8(R9)
	42	[2973]	JMP      	85 ; PC := 85
	43	[2974]	GETTABLE 	R8 R6 K9 ; R8 := R6["name"]
	44	[2974]	GETUPVAL 	R9 U4 ; R9 := U4
	45	[2974]	GETTABLE 	R9 R9 K15 ; R9 := R9["FIGHT_NODE_TAG"]
	46	[2974]	EQ       	0 R8 R9 ; if R8 ~= R9 then PC := 53
	47	[2974]	JMP      	53 ; PC := 53
	48	[2975]	SETTABLE 	R5 K13 K14 ; R5["forceUnlock"] := true
	49	[2976]	GETUPVAL 	R8 U3 ; R8 := U3
	50	[2976]	MOVE     	R9 R5 ; R9 := R5
	51	[2976]	CALL     	R8 2 1 ; R8(R9)
	52	[2976]	JMP      	85 ; PC := 85
	53	[2977]	GETTABLE 	R8 R6 K7 ; R8 := R6["nodeType"]
	54	[2977]	EQ       	0 R8 K16 ; if R8 ~= 7.000000 then PC := 67
	55	[2977]	JMP      	67 ; PC := 67
	56	[2977]	GETTABLE 	R8 R5 K17 ; R8 := R5["complete"]
	57	[2977]	TEST     	R8 1 ; if R8 then PC := 67
	58	[2977]	JMP      	67 ; PC := 67
	59	[2977]	GETGLOBAL	R8 K18 ; R8 := mNewWarMode
	60	[2977]	TEST     	R8 1 ; if R8 then PC := 67
	61	[2977]	JMP      	67 ; PC := 67
	62	[2978]	SETTABLE 	R5 K19 K14 ; R5["forceHover"] := true
	63	[2979]	GETUPVAL 	R8 U3 ; R8 := U3
	64	[2979]	MOVE     	R9 R5 ; R9 := R5
	65	[2979]	CALL     	R8 2 1 ; R8(R9)
	66	[2979]	JMP      	85 ; PC := 85
	67	[2980]	GETTABLE 	R8 R5 K20 ; R8 := R5["reconstructionProgress"]
	68	[2980]	TEST     	R8 0 ; if not R8 then PC := 85
	69	[2980]	JMP      	85 ; PC := 85
	70	[2980]	GETTABLE 	R8 R5 K20 ; R8 := R5["reconstructionProgress"]
	71	[2980]	LT       	0 R8 K21 ; if R8 >= 2.000000 then PC := 85
	72	[2980]	JMP      	85 ; PC := 85
	73	[2981]	SETTABLE 	R5 K13 K14 ; R5["forceUnlock"] := true
	74	[2982]	GETUPVAL 	R8 U3 ; R8 := U3
	75	[2982]	MOVE     	R9 R5 ; R9 := R5
	76	[2982]	CALL     	R8 2 1 ; R8(R9)
	77	[2983]	JMP      	85 ; PC := 85
	78	[2984]	GETTABLE 	R8 R5 K13 ; R8 := R5["forceUnlock"]
	79	[2984]	TEST     	R8 0 ; if not R8 then PC := 85
	80	[2984]	JMP      	85 ; PC := 85
	81	[2985]	SETTABLE 	R5 K13 K22 ; R5["forceUnlock"] := false
	82	[2986]	GETUPVAL 	R8 U3 ; R8 := U3
	83	[2986]	MOVE     	R9 R5 ; R9 := R5
	84	[2986]	CALL     	R8 2 1 ; R8(R9)
	85	[2965]	FORLOOP  	R1 8 ; R1 += R3; if R1 <= R2 then begin PC := 8; R4 := R1 end
	86	[2989]	RETURN   	R0 1 ; return 

function #63 <?:2991,3013> (70 instructions, 280 bytes at 0000021113456010)
1 param, 17 slots, 2 upvalues, 0 locals, 14 constants, 0 functions
	1	[2995]	UNM      	R1 R0 ; R1 := ^ R0
	2	[2995]	DIV      	R1 K0 R1 ; R1 := 100.000000 / R1
	3	[2995]	DIV      	R0 R1 K1 ; R0 := R1 / 75.000000
	4	[2996]	LOADK    	R1 := 1.000000
	5	[2996]	GETUPVAL 	R2 U0 ; R2 := U0
	6	[2996]	LEN      	R2 R2 ; R2 := # R2
	7	[2996]	LOADK    	R3 := 1.000000
	8	[2996]	FORPREP  	R1 69 ; R1 -= R3; PC := 69
	9	[2997]	GETUPVAL 	R5 U0 ; R5 := U0
	10	[2997]	GETTABLE 	R5 R5 R4 ; R5 := R5[R4]
	11	[2998]	GETTABLE 	R6 R5 K2 ; R6 := R5["overrideIconSize"]
	12	[2998]	EQ       	1 R6 K3 ; if R6 == nil then PC := 69
	13	[2998]	JMP      	69 ; PC := 69
	14	[2999]	GETTABLE 	R6 R5 K4 ; R6 := R5["clipName"]
	15	[2999]	LOADK    	R7 K5 ; R7 := ".Btn"
	16	[2999]	CONCAT   	R6 R6 R7 ; R6 := R6 .. R7
	17	[3000]	GETTABLE 	R7 R5 K4 ; R7 := R5["clipName"]
	18	[3000]	LOADK    	R8 K6 ; R8 := ".Node.Container.Icon"
	19	[3000]	CONCAT   	R7 R7 R8 ; R7 := R7 .. R8
	20	[3001]	GETTABLE 	R8 R5 K4 ; R8 := R5["clipName"]
	21	[3001]	LOADK    	R9 K7 ; R9 := ".Node.Container.Node"
	22	[3001]	CONCAT   	R8 R8 R9 ; R8 := R8 .. R9
	23	[3002]	GETTABLE 	R9 R5 K2 ; R9 := R5["overrideIconSize"]
	24	[3002]	GETUPVAL 	R10 U1 ; R10 := U1
	25	[3002]	GETTABLE 	R10 R10 K8 ; R10 := R10[0x06d055f9]
	26	[3002]	GETTABLE 	R11 R5 K9 ; R11 := R5["scaleIconWithCamera"]
	27	[3002]	MOVE     	R12 R0 ; R12 := R0
	28	[3002]	LOADK    	R13 := 1.000000
	29	[3002]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	30	[3002]	MUL      	R9 R9 R10 ; R9 := R9 * R10
	31	[3003]	MUL      	R10 R9 K10 ; R10 := R9 * 2.000000
	32	[3004]	MUL      	R11 R10 K11 ; R11 := R10 * 1.500000
	33	[3005]	GETGLOBAL	R12 K12 ; R12 := 0xae91e43b
	34	[3005]	SELF     	R12 R12 K13 ; R13 := R12; R12 := R12[0x67bc869f]
	35	[3005]	MOVE     	R14 R6 ; R14 := R6
	36	[3005]	LOADK    	R15 := 12.000000
	37	[3005]	MOVE     	R16 R9 ; R16 := R9
	38	[3005]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	39	[3006]	GETGLOBAL	R12 K12 ; R12 := 0xae91e43b
	40	[3006]	SELF     	R12 R12 K13 ; R13 := R12; R12 := R12[0x67bc869f]
	41	[3006]	MOVE     	R14 R6 ; R14 := R6
	42	[3006]	LOADK    	R15 := 13.000000
	43	[3006]	MOVE     	R16 R9 ; R16 := R9
	44	[3006]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	45	[3007]	GETGLOBAL	R12 K12 ; R12 := 0xae91e43b
	46	[3007]	SELF     	R12 R12 K13 ; R13 := R12; R12 := R12[0x67bc869f]
	47	[3007]	MOVE     	R14 R7 ; R14 := R7
	48	[3007]	LOADK    	R15 := 12.000000
	49	[3007]	MOVE     	R16 R10 ; R16 := R10
	50	[3007]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	51	[3008]	GETGLOBAL	R12 K12 ; R12 := 0xae91e43b
	52	[3008]	SELF     	R12 R12 K13 ; R13 := R12; R12 := R12[0x67bc869f]
	53	[3008]	MOVE     	R14 R7 ; R14 := R7
	54	[3008]	LOADK    	R15 := 13.000000
	55	[3008]	MOVE     	R16 R10 ; R16 := R10
	56	[3008]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	57	[3009]	GETGLOBAL	R12 K12 ; R12 := 0xae91e43b
	58	[3009]	SELF     	R12 R12 K13 ; R13 := R12; R12 := R12[0x67bc869f]
	59	[3009]	MOVE     	R14 R8 ; R14 := R8
	60	[3009]	LOADK    	R15 := 12.000000
	61	[3009]	MOVE     	R16 R11 ; R16 := R11
	62	[3009]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	63	[3010]	GETGLOBAL	R12 K12 ; R12 := 0xae91e43b
	64	[3010]	SELF     	R12 R12 K13 ; R13 := R12; R12 := R12[0x67bc869f]
	65	[3010]	MOVE     	R14 R8 ; R14 := R8
	66	[3010]	LOADK    	R15 := 13.000000
	67	[3010]	MOVE     	R16 R11 ; R16 := R11
	68	[3010]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	69	[2996]	FORLOOP  	R1 9 ; R1 += R3; if R1 <= R2 then begin PC := 9; R4 := R1 end
	70	[3013]	RETURN   	R0 1 ; return 

function #64 <?:3015,3029> (44 instructions, 176 bytes at 0000021113456470)
5 params, 10 slots, 0 upvalues, 0 locals, 13 constants, 0 functions
	1	[3016]	TESTSET  	R5 R1 1 ; if R1 then PC := 4 else R5 := R1 
	2	[3016]	JMP      	4 ; PC := 4
	3	[3016]	GETGLOBAL	R5 K0 ; R5 := ZERO_VECTOR
	4	[3016]	TESTSET  	R6 R4 1 ; if R4 then PC := 7 else R6 := R4 
	5	[3016]	JMP      	7 ; PC := 7
	6	[3016]	GETGLOBAL	R6 K0 ; R6 := ZERO_VECTOR
	7	[3016]	ADD      	R1 R5 R6 ; R1 := R5 + R6
	8	[3017]	TEST     	R2 1 ; if R2 then PC := 11
	9	[3017]	JMP      	11 ; PC := 11
	10	[3017]	GETGLOBAL	R2 K1 ; R2 := ZERO_ROTATION
	11	[3018]	TEST     	R3 1 ; if R3 then PC := 14
	12	[3018]	JMP      	14 ; PC := 14
	13	[3018]	LOADK    	R3 K2 ; R3 := 0.010000
	14	[3020]	GETGLOBAL	R5 K3 ; R5 := 0x1211d00f
	15	[3020]	SELF     	R5 R5 K4 ; R6 := R5; R5 := R5[0x05909209]
	16	[3020]	MOVE     	R7 R0 ; R7 := R0
	17	[3020]	MOVE     	R8 R1 ; R8 := R1
	18	[3020]	MOVE     	R9 R2 ; R9 := R2
	19	[3020]	CALL     	R5 5 2 ; R5 := R5(R6,R7,R8,R9)
	20	[3020]	MOVE     	R0 R5 ; R0 := R5
	21	[3021]	GETGLOBAL	R5 K5 ; R5 := 0x7b998233
	22	[3021]	MOVE     	R6 R0 ; R6 := R0
	23	[3021]	CALL     	R5 2 2 ; R5 := R5(R6)
	24	[3021]	TEST     	R5 1 ; if R5 then PC := 43
	25	[3021]	JMP      	43 ; PC := 43
	26	[3021]	EQ       	1 R3 K6 ; if R3 == nil then PC := 43
	27	[3021]	JMP      	43 ; PC := 43
	28	[3022]	SELF     	R5 R0 K7 ; R6 := R0; R5 := R0[0x2d9ba74f]
	29	[3022]	MOVE     	R7 R3 ; R7 := R3
	30	[3022]	CALL     	R5 3 1 ; R5(R6,R7)
	31	[3023]	SELF     	R5 R0 K8 ; R6 := R0; R5 := R0[0xf2deaf69]
	32	[3023]	GETGLOBAL	R7 K9 ; R7 := gParticleSysType
	33	[3023]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	34	[3023]	TEST     	R5 0 ; if not R5 then PC := 43
	35	[3023]	JMP      	43 ; PC := 43
	36	[3024]	DIV      	R5 R3 K10 ; R5 := R3 / 0.800000
	37	[3024]	MUL      	R3 R5 K11 ; R3 := R5 * 0.350000
	38	[3025]	SELF     	R5 R0 K12 ; R6 := R0; R5 := R0[0xcbf89887]
	39	[3025]	MOVE     	R7 R3 ; R7 := R3
	40	[3025]	MOVE     	R8 R3 ; R8 := R3
	41	[3025]	OP_LOADBOOL	R9 0 0 ; R9 := false
	42	[3025]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	43	[3028]	RETURN   	R0 2 ; return R0 
	44	[3029]	RETURN   	R0 1 ; return 

function #65 <?:3031,3466> (1208 instructions, 4832 bytes at 0000021113456760)
0 params, 134 slots, 14 upvalues, 0 locals, 223 constants, 3 functions
	1	[3032]	NEWTABLE 	R0 0 0 ; R0 := {}
	2	[3032]	SETUPVAL 	R0 U0 ; U0 := R0
	3	[3033]	GETUPVAL 	R0 U1 ; R0 := U1
	4	[3033]	EQ       	1 R0 K0 ; if R0 == nil then PC := 29
	5	[3033]	JMP      	29 ; PC := 29
	6	[3034]	GETGLOBAL	R0 K1 ; R0 := 0xcfc01047
	7	[3034]	GETUPVAL 	R1 U1 ; R1 := U1
	8	[3034]	CALL     	R0 2 4 ; R0,R1,R2 := R0(R1)
	9	[3034]	JMP      	27 ; PC := 27
	10	[3035]	GETUPVAL 	R5 U2 ; R5 := U2
	11	[3035]	GETTABLE 	R6 R4 K2 ; R6 := R4["clipName"]
	12	[3035]	CALL     	R5 2 1 ; R5(R6)
	13	[3036]	GETTABLE 	R5 R4 K3 ; R5 := R4["deco"]
	14	[3036]	EQ       	1 R5 K0 ; if R5 == nil then PC := 27
	15	[3036]	JMP      	27 ; PC := 27
	16	[3036]	GETGLOBAL	R5 K4 ; R5 := 0x7b998233
	17	[3036]	GETTABLE 	R6 R4 K3 ; R6 := R4["deco"]
	18	[3036]	GETTABLE 	R6 R6 K5 ; R6 := R6["mInstance"]
	19	[3036]	CALL     	R5 2 2 ; R5 := R5(R6)
	20	[3036]	TEST     	R5 1 ; if R5 then PC := 27
	21	[3036]	JMP      	27 ; PC := 27
	22	[3037]	GETGLOBAL	R5 K6 ; R5 := 0x1211d00f
	23	[3037]	SELF     	R5 R5 K7 ; R6 := R5; R5 := R5[0x59c96e77]
	24	[3037]	GETTABLE 	R7 R4 K3 ; R7 := R4["deco"]
	25	[3037]	GETTABLE 	R7 R7 K5 ; R7 := R7["mInstance"]
	26	[3037]	CALL     	R5 3 1 ; R5(R6,R7)
	27	[3034]	TFORLOOP 	R0 2 ; R3,R4 := R0(R1,R2); if R3 ~= nil then begin PC = 10; R2 := R3 end
	28	[3038]	JMP      	10 ; PC := 10
	29	[3042]	GETGLOBAL	R5 K8 ; R5 := mRailJack
	30	[3042]	SETTABLE 	R5 K9 K10 ; R5["NameNodeMapRebuildQueued"] := false
	31	[3043]	NEWTABLE 	R5 0 0 ; R5 := {}
	32	[3043]	SETUPVAL 	R5 U1 ; U1 := R5
	33	[3045]	NEWTABLE 	R5 0 0 ; R5 := {}
	34	[3046]	NEWTABLE 	R6 0 0 ; R6 := {}
	35	[3048]	GETGLOBAL	R7 K11 ; R7 := _T
	36	[3048]	GETTABLE 	R7 R7 K12 ; R7 := R7["CustomStarChartNodeFilter"]
	37	[3048]	TEST     	R7 0 ; if not R7 then PC := 117
	38	[3048]	JMP      	117 ; PC := 117
	39	[3048]	GETGLOBAL	R7 K11 ; R7 := _T
	40	[3048]	GETTABLE 	R7 R7 K12 ; R7 := R7["CustomStarChartNodeFilter"]
	41	[3048]	GETTABLE 	R7 R7 K13 ; R7 := R7["Keys"]
	42	[3048]	TEST     	R7 0 ; if not R7 then PC := 117
	43	[3048]	JMP      	117 ; PC := 117
	44	[3049]	GETUPVAL 	R7 U3 ; R7 := U3
	45	[3049]	GETTABLE 	R7 R7 K14 ; R7 := R7[0x8e7c3b5e]
	46	[3049]	GETGLOBAL	R8 K15 ; R8 := 0x25d99d89
	47	[3049]	CALL     	R7 2 5 ; R7,R8,R9,R10 := R7(R8)
	48	[3050]	GETUPVAL 	R11 U3 ; R11 := U3
	49	[3050]	GETTABLE 	R11 R11 K16 ; R11 := R11[0xa5a62f78]
	50	[3050]	GETGLOBAL	R12 K15 ; R12 := 0x25d99d89
	51	[3050]	MOVE     	R13 R7 ; R13 := R7
	52	[3050]	OP_LOADBOOL	R14 1 0 ; R14 := true
	53	[3050]	CALL     	R11 4 5 ; R11,R12,R13,R14 := R11(R12,R13,R14)
	54	[3051]	LOADNIL  	R15 R15 ; R15 := nil
	55	[3052]	GETGLOBAL	R16 K4 ; R16 := 0x7b998233
	56	[3052]	MOVE     	R17 R7 ; R17 := R7
	57	[3052]	CALL     	R16 2 2 ; R16 := R16(R17)
	58	[3052]	TEST     	R16 1 ; if R16 then PC := 65
	59	[3052]	JMP      	65 ; PC := 65
	60	[3053]	SELF     	R16 R7 K17 ; R17 := R7; R16 := R7[0xb4568f02]
	61	[3053]	SUB      	R18 R11 K18 ; R18 := R11 - 1.000000
	62	[3053]	MOVE     	R19 R12 ; R19 := R12
	63	[3053]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	64	[3053]	MOVE     	R15 R16 ; R15 := R16
	65	[3056]	GETGLOBAL	R16 K1 ; R16 := 0xcfc01047
	66	[3056]	GETGLOBAL	R17 K11 ; R17 := _T
	67	[3056]	GETTABLE 	R17 R17 K12 ; R17 := R17["CustomStarChartNodeFilter"]
	68	[3056]	GETTABLE 	R17 R17 K13 ; R17 := R17["Keys"]
	69	[3056]	CALL     	R16 2 4 ; R16,R17,R18 := R16(R17)
	70	[3056]	JMP      	114 ; PC := 114
	71	[3057]	GETGLOBAL	R21 K4 ; R21 := 0x7b998233
	72	[3057]	MOVE     	R22 R20 ; R22 := R20
	73	[3057]	CALL     	R21 2 2 ; R21 := R21(R22)
	74	[3057]	TEST     	R21 1 ; if R21 then PC := 114
	75	[3057]	JMP      	114 ; PC := 114
	76	[3058]	GETGLOBAL	R21 K19 ; R21 := 0xb009bbc6
	77	[3058]	MOVE     	R22 R20 ; R22 := R20
	78	[3058]	CALL     	R21 2 2 ; R21 := R21(R22)
	79	[3059]	NEWTABLE 	R22 0 7 ; R22 := {}
	80	[3061]	GETGLOBAL	R23 K21 ; R23 := 0x6c97a788
	81	[3061]	GETTABLE 	R23 R23 K22 ; R23 := R23[0x925e2bbb]
	82	[3061]	MOVE     	R24 R20 ; R24 := R20
	83	[3061]	LOADK    	R25 := 1.000000
	84	[3061]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	85	[3061]	SETTABLE 	R22 K20 R23 ; R22["Key"] := R23
	86	[3062]	SETTABLE 	R22 K23 R7 ; R22["KeyChain"] := R7
	87	[3063]	SETTABLE 	R22 K24 R21 ; R22["Type"] := R21
	88	[3064]	GETGLOBAL	R23 K26 ; R23 := 0x88efc25e
	89	[3064]	MOVE     	R24 R20 ; R24 := R20
	90	[3064]	CALL     	R23 2 2 ; R23 := R23(R24)
	91	[3064]	SETTABLE 	R22 K25 R23 ; R22["Anchor"] := R23
	92	[3065]	GETGLOBAL	R23 K28 ; R23 := 0x603636ad
	93	[3065]	GETGLOBAL	R24 K29 ; R24 := 0x64fb1586
	94	[3065]	SELF     	R25 R21 K30 ; R26 := R21; R25 := R21[0xd3a9d01f]
	95	[3065]	CALL     	R25 2 0 ; R25,... := R25(R26)
	96	[3065]	CALL     	R24 0 2 ; R24 := R24(R25,...)
	97	[3065]	OP_LOADBOOL	R25 0 0 ; R25 := false
	98	[3065]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	99	[3065]	SETTABLE 	R22 K27 R23 ; R22[0x6d61636c] := R23
	100	[3066]	GETGLOBAL	R23 K28 ; R23 := 0x603636ad
	101	[3066]	GETGLOBAL	R24 K29 ; R24 := 0x64fb1586
	102	[3066]	SELF     	R25 R21 K32 ; R26 := R21; R25 := R21[0x5ba460ac]
	103	[3066]	CALL     	R25 2 0 ; R25,... := R25(R26)
	104	[3066]	CALL     	R24 0 2 ; R24 := R24(R25,...)
	105	[3066]	OP_LOADBOOL	R25 0 0 ; R25 := false
	106	[3066]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	107	[3066]	SETTABLE 	R22 K31 R23 ; R22["Description"] := R23
	108	[3067]	SETTABLE 	R22 K33 R15 ; R22["Difficulty"] := R15
	109	[3069]	GETGLOBAL	R23 K34 ; R23 := 0x33bdd652
	110	[3069]	GETTABLE 	R23 R23 K35 ; R23 := R23[0x23d5322f]
	111	[3069]	MOVE     	R24 R5 ; R24 := R5
	112	[3069]	MOVE     	R25 R22 ; R25 := R22
	113	[3069]	CALL     	R23 3 1 ; R23(R24,R25)
	114	[3056]	TFORLOOP 	R16 2 ; R19,R20 := R16(R17,R18); if R19 ~= nil then begin PC = 71; R18 := R19 end
	115	[3070]	JMP      	71 ; PC := 71
	116	[3071]	JMP      	223 ; PC := 223
	117	[3074]	GETUPVAL 	R23 U3 ; R23 := U3
	118	[3074]	GETTABLE 	R23 R23 K36 ; R23 := R23[0x2196d0b1]
	119	[3074]	MOVE     	R24 R5 ; R24 := R5
	120	[3074]	LOADNIL  	R25 R25 ; R25 := nil
	121	[3074]	GETGLOBAL	R26 K37 ; R26 := 0xbe190284
	122	[3074]	SELF     	R26 R26 K38 ; R27 := R26; R26 := R26[0xa1c390fe]
	123	[3074]	CALL     	R26 2 0 ; R26,... := R26(R27)
	124	[3074]	CALL     	R23 0 1 ; R23(R24,...)
	125	[3075]	LOADK    	R23 := 1.000000
	126	[3075]	LEN      	R24 R5 ; R24 := # R5
	127	[3075]	LOADK    	R25 := 1.000000
	128	[3075]	FORPREP  	R23 137 ; R23 -= R25; PC := 137
	129	[3076]	GETGLOBAL	R27 K34 ; R27 := 0x33bdd652
	130	[3076]	GETTABLE 	R27 R27 K35 ; R27 := R27[0x23d5322f]
	131	[3076]	MOVE     	R28 R6 ; R28 := R6
	132	[3076]	GETTABLE 	R29 R5 R26 ; R29 := R5[R26]
	133	[3076]	GETTABLE 	R29 R29 K24 ; R29 := R29["Type"]
	134	[3076]	SELF     	R29 R29 K39 ; R30 := R29; R29 := R29[0x92608d86]
	135	[3076]	CALL     	R29 2 0 ; R29,... := R29(R30)
	136	[3076]	CALL     	R27 0 1 ; R27(R28,...)
	137	[3075]	FORLOOP  	R23 129 ; R23 += R25; if R23 <= R24 then begin PC := 129; R26 := R23 end
	138	[3080]	GETUPVAL 	R27 U3 ; R27 := U3
	139	[3080]	GETTABLE 	R27 R27 K14 ; R27 := R27[0x8e7c3b5e]
	140	[3080]	GETGLOBAL	R28 K15 ; R28 := 0x25d99d89
	141	[3080]	CALL     	R27 2 5 ; R27,R28,R29,R30 := R27(R28)
	142	[3081]	GETGLOBAL	R31 K4 ; R31 := 0x7b998233
	143	[3081]	MOVE     	R32 R27 ; R32 := R27
	144	[3081]	CALL     	R31 2 2 ; R31 := R31(R32)
	145	[3081]	TEST     	R31 1 ; if R31 then PC := 223
	146	[3081]	JMP      	223 ; PC := 223
	147	[3082]	GETUPVAL 	R31 U3 ; R31 := U3
	148	[3082]	GETTABLE 	R31 R31 K16 ; R31 := R31[0xa5a62f78]
	149	[3082]	GETGLOBAL	R32 K15 ; R32 := 0x25d99d89
	150	[3082]	MOVE     	R33 R27 ; R33 := R27
	151	[3082]	OP_LOADBOOL	R34 1 0 ; R34 := true
	152	[3082]	CALL     	R31 4 5 ; R31,R32,R33,R34 := R31(R32,R33,R34)
	153	[3083]	GETGLOBAL	R35 K4 ; R35 := 0x7b998233
	154	[3083]	MOVE     	R36 R34 ; R36 := R34
	155	[3083]	CALL     	R35 2 2 ; R35 := R35(R36)
	156	[3083]	TEST     	R35 1 ; if R35 then PC := 208
	157	[3083]	JMP      	208 ; PC := 208
	158	[3084]	NEWTABLE 	R35 0 7 ; R35 := {}
	159	[3086]	GETGLOBAL	R36 K21 ; R36 := 0x6c97a788
	160	[3086]	GETTABLE 	R36 R36 K22 ; R36 := R36[0x925e2bbb]
	161	[3086]	MOVE     	R37 R34 ; R37 := R34
	162	[3086]	LOADK    	R38 := 1.000000
	163	[3086]	CALL     	R36 3 2 ; R36 := R36(R37,R38)
	164	[3086]	SETTABLE 	R35 K20 R36 ; R35["Key"] := R36
	165	[3087]	SETTABLE 	R35 K23 R27 ; R35["KeyChain"] := R27
	166	[3088]	SETTABLE 	R35 K24 R34 ; R35["Type"] := R34
	167	[3089]	GETGLOBAL	R36 K26 ; R36 := 0x88efc25e
	168	[3089]	MOVE     	R37 R34 ; R37 := R34
	169	[3089]	CALL     	R36 2 2 ; R36 := R36(R37)
	170	[3089]	SETTABLE 	R35 K25 R36 ; R35["Anchor"] := R36
	171	[3090]	GETGLOBAL	R36 K28 ; R36 := 0x603636ad
	172	[3090]	GETGLOBAL	R37 K29 ; R37 := 0x64fb1586
	173	[3090]	SELF     	R38 R34 K30 ; R39 := R34; R38 := R34[0xd3a9d01f]
	174	[3090]	CALL     	R38 2 0 ; R38,... := R38(R39)
	175	[3090]	CALL     	R37 0 2 ; R37 := R37(R38,...)
	176	[3090]	OP_LOADBOOL	R38 0 0 ; R38 := false
	177	[3090]	CALL     	R36 3 2 ; R36 := R36(R37,R38)
	178	[3090]	SETTABLE 	R35 K27 R36 ; R35[0x6d61636c] := R36
	179	[3091]	GETGLOBAL	R36 K28 ; R36 := 0x603636ad
	180	[3091]	GETGLOBAL	R37 K29 ; R37 := 0x64fb1586
	181	[3091]	SELF     	R38 R34 K32 ; R39 := R34; R38 := R34[0x5ba460ac]
	182	[3091]	CALL     	R38 2 0 ; R38,... := R38(R39)
	183	[3091]	CALL     	R37 0 2 ; R37 := R37(R38,...)
	184	[3091]	OP_LOADBOOL	R38 0 0 ; R38 := false
	185	[3091]	CALL     	R36 3 2 ; R36 := R36(R37,R38)
	186	[3091]	SETTABLE 	R35 K31 R36 ; R35["Description"] := R36
	187	[3092]	SELF     	R36 R27 K17 ; R37 := R27; R36 := R27[0xb4568f02]
	188	[3092]	SUB      	R38 R31 K18 ; R38 := R31 - 1.000000
	189	[3092]	MOVE     	R39 R32 ; R39 := R32
	190	[3092]	CALL     	R36 4 2 ; R36 := R36(R37,R38,R39)
	191	[3092]	SETTABLE 	R35 K33 R36 ; R35["Difficulty"] := R36
	192	[3095]	GETUPVAL 	R36 U4 ; R36 := U4
	193	[3095]	GETTABLE 	R36 R36 K40 ; R36 := R36["vorsPrizeQuestKey"]
	194	[3095]	EQ       	0 R27 R36 ; if R27 ~= R36 then PC := 199
	195	[3095]	JMP      	199 ; PC := 199
	196	[3096]	SELF     	R36 R34 K39 ; R37 := R34; R36 := R34[0x92608d86]
	197	[3096]	CALL     	R36 2 2 ; R36 := R36(R37)
	198	[3096]	SETGLOBALHASH	R36 K41 ; mVorsPrizeQuestActiveNode := R36
	199	[3099]	SELF     	R36 R34 K39 ; R37 := R34; R36 := R34[0x92608d86]
	200	[3099]	CALL     	R36 2 2 ; R36 := R36(R37)
	201	[3099]	SETUPVAL 	R36 U5 ; U5 := R36
	202	[3101]	GETGLOBAL	R36 K34 ; R36 := 0x33bdd652
	203	[3101]	GETTABLE 	R36 R36 K35 ; R36 := R36[0x23d5322f]
	204	[3101]	MOVE     	R37 R5 ; R37 := R5
	205	[3101]	MOVE     	R38 R35 ; R38 := R35
	206	[3101]	CALL     	R36 3 1 ; R36(R37,R38)
	207	[3101]	JMP      	223 ; PC := 223
	208	[3103]	SELF     	R36 R27 K42 ; R37 := R27; R36 := R27[0x42700bd0]
	209	[3103]	CALL     	R36 2 2 ; R36 := R36(R37)
	210	[3104]	LEN      	R37 R36 ; R37 := # R36
	211	[3104]	LE       	0 R31 R37 ; if R31 > R37 then PC := 223
	212	[3104]	JMP      	223 ; PC := 223
	213	[3105]	GETTABLE 	R37 R36 R31 ; R37 := R36[R31]
	214	[3106]	TEST     	R37 0 ; if not R37 then PC := 223
	215	[3106]	JMP      	223 ; PC := 223
	216	[3106]	GETTABLE 	R38 R37 K43 ; R38 := R37["mMarkedNodes"]
	217	[3106]	LEN      	R38 R38 ; R38 := # R38
	218	[3106]	LT       	0 K44 R38 ; if 0.000000 >= R38 then PC := 223
	219	[3106]	JMP      	223 ; PC := 223
	220	[3107]	GETTABLE 	R38 R37 K43 ; R38 := R37["mMarkedNodes"]
	221	[3107]	GETTABLE 	R38 R38 K18 ; R38 := R38[1.000000]
	222	[3107]	SETUPVAL 	R38 U5 ; U5 := R38
	223	[3114]	GETUPVAL 	R38 U3 ; R38 := U3
	224	[3114]	GETTABLE 	R38 R38 K45 ; R38 := R38[0x52fb05b3]
	225	[3114]	GETUPVAL 	R39 U4 ; R39 := U4
	226	[3114]	GETTABLE 	R39 R39 K46 ; R39 := R39["zarimanIntroQuest"]
	227	[3114]	CALL     	R38 2 2 ; R38 := R38(R39)
	228	[3116]	LOADK    	R39 := 1.000000
	229	[3116]	GETGLOBAL	R40 K47 ; R40 := mMapNodes
	230	[3116]	LEN      	R40 R40 ; R40 := # R40
	231	[3116]	LOADK    	R41 := 1.000000
	232	[3116]	FORPREP  	R39 288 ; R39 -= R41; PC := 288
	233	[3118]	OP_LOADBOOL	R43 0 0 ; R43 := false
	234	[3119]	GETGLOBAL	R44 K47 ; R44 := mMapNodes
	235	[3119]	GETTABLE 	R44 R44 R42 ; R44 := R44[R42]
	236	[3119]	GETTABLE 	R44 R44 K48 ; R44 := R44["name"]
	237	[3120]	GETGLOBAL	R45 K4 ; R45 := 0x7b998233
	238	[3120]	GETGLOBAL	R46 K47 ; R46 := mMapNodes
	239	[3120]	GETTABLE 	R46 R46 R42 ; R46 := R46[R42]
	240	[3120]	GETTABLE 	R46 R46 K49 ; R46 := R46["mission"]
	241	[3120]	GETTABLE 	R46 R46 K50 ; R46 := R46["levelKeyName"]
	242	[3120]	CALL     	R45 2 2 ; R45 := R45(R46)
	243	[3120]	TEST     	R45 1 ; if R45 then PC := 255
	244	[3120]	JMP      	255 ; PC := 255
	245	[3121]	OP_LOADBOOL	R43 1 0 ; R43 := true
	246	[3123]	LOADK    	R45 := 1.000000
	247	[3123]	LEN      	R46 R6 ; R46 := # R6
	248	[3123]	LOADK    	R47 := 1.000000
	249	[3123]	FORPREP  	R45 254 ; R45 -= R47; PC := 254
	250	[3124]	GETTABLE 	R49 R6 R48 ; R49 := R6[R48]
	251	[3124]	EQ       	0 R49 R44 ; if R49 ~= R44 then PC := 254
	252	[3124]	JMP      	254 ; PC := 254
	253	[3125]	OP_LOADBOOL	R43 0 0 ; R43 := false
	254	[3123]	FORLOOP  	R45 250 ; R45 += R47; if R45 <= R46 then begin PC := 250; R48 := R45 end
	255	[3130]	GETGLOBAL	R49 K29 ; R49 := 0x64fb1586
	256	[3130]	MOVE     	R50 R44 ; R50 := R44
	257	[3130]	CALL     	R49 2 2 ; R49 := R49(R50)
	258	[3130]	MOVE     	R44 R49 ; R44 := R49
	259	[3131]	GETUPVAL 	R49 U6 ; R49 := U6
	260	[3131]	GETTABLE 	R49 R49 K51 ; R49 := R49["Sectors"]
	261	[3131]	GETTABLE 	R49 R49 R44 ; R49 := R49[R44]
	262	[3133]	EQ       	0 R49 K0 ; if R49 ~= nil then PC := 266
	263	[3133]	JMP      	266 ; PC := 266
	264	[3134]	GETGLOBAL	R50 K47 ; R50 := mMapNodes
	265	[3134]	GETTABLE 	R49 R50 R42 ; R49 := R50[R42]
	266	[3137]	GETUPVAL 	R50 U7 ; R50 := U7
	267	[3137]	GETTABLE 	R50 R50 K52 ; R50 := R50["EnableDifficultySelector"]
	268	[3137]	TEST     	R50 0 ; if not R50 then PC := 279
	269	[3137]	JMP      	279 ; PC := 279
	270	[3137]	GETTABLE 	R50 R49 K53 ; R50 := R49["region"]
	271	[3137]	GETUPVAL 	R51 U3 ; R51 := U3
	272	[3137]	GETTABLE 	R51 R51 K54 ; R51 := R51["REGION_ID_ZARIMAN"]
	273	[3137]	SUB      	R51 R51 K18 ; R51 := R51 - 1.000000
	274	[3137]	EQ       	0 R50 R51 ; if R50 ~= R51 then PC := 279
	275	[3137]	JMP      	279 ; PC := 279
	276	[3137]	TEST     	R38 0 ; if not R38 then PC := 279
	277	[3137]	JMP      	279 ; PC := 279
	278	[3138]	SETTABLE 	R49 K55 K18 ; R49["difficultyUnlocked"] := 1.000000
	279	[3141]	TEST     	R43 1 ; if R43 then PC := 285
	280	[3141]	JMP      	285 ; PC := 285
	281	[3142]	GETUPVAL 	R50 U8 ; R50 := U8
	282	[3142]	SELF     	R51 R49 K56 ; R52 := R49; R51 := R49[0x8f89d633]
	283	[3142]	CALL     	R51 2 0 ; R51,... := R51(R52)
	284	[3142]	CALL     	R50 0 1 ; R50(R51,...)
	285	[3145]	GETGLOBAL	R50 K57 ; R50 := 0xce225efa
	286	[3145]	LOADK    	R51 := 0.000000
	287	[3145]	CALL     	R50 2 1 ; R50(R51)
	288	[3116]	FORLOOP  	R39 233 ; R39 += R41; if R39 <= R40 then begin PC := 233; R42 := R39 end
	289	[3149]	NEWTABLE 	R50 0 0 ; R50 := {}
	290	[3150]	LOADNIL  	R51 R51 ; R51 := nil
	291	[3152]	LOADK    	R52 := 1.000000
	292	[3152]	LEN      	R53 R5 ; R53 := # R5
	293	[3152]	LOADK    	R54 := 1.000000
	294	[3152]	FORPREP  	R52 690 ; R52 -= R54; PC := 690
	295	[3153]	GETGLOBAL	R56 K57 ; R56 := 0xce225efa
	296	[3153]	LOADK    	R57 := 0.000000
	297	[3153]	CALL     	R56 2 1 ; R56(R57)
	298	[3155]	GETTABLE 	R56 R5 R55 ; R56 := R5[R55]
	299	[3156]	GETTABLE 	R57 R56 K24 ; R57 := R56["Type"]
	300	[3157]	SELF     	R58 R57 K39 ; R59 := R57; R58 := R57[0x92608d86]
	301	[3157]	CALL     	R58 2 2 ; R58 := R58(R59)
	302	[3158]	SELF     	R59 R57 K58 ; R60 := R57; R59 := R57[0xe2258c84]
	303	[3158]	CALL     	R59 2 2 ; R59 := R59(R60)
	304	[3160]	GETUPVAL 	R60 U1 ; R60 := U1
	305	[3160]	GETGLOBAL	R61 K29 ; R61 := 0x64fb1586
	306	[3160]	MOVE     	R62 R58 ; R62 := R58
	307	[3160]	CALL     	R61 2 2 ; R61 := R61(R62)
	308	[3160]	GETTABLE 	R60 R60 R61 ; R60 := R60[R61]
	309	[3161]	LOADNIL  	R61 R61 ; R61 := nil
	310	[3162]	EQ       	1 R60 K0 ; if R60 == nil then PC := 314
	311	[3162]	JMP      	314 ; PC := 314
	312	[3163]	GETTABLE 	R61 R60 K59 ; R61 := R60["radialSector"]
	313	[3163]	JMP      	318 ; PC := 318
	314	[3165]	GETGLOBAL	R62 K21 ; R62 := 0x6c97a788
	315	[3165]	GETTABLE 	R62 R62 K60 ; R62 := R62[0xa67ba89f]
	316	[3165]	CALL     	R62 1 2 ; R62 := R62()
	317	[3165]	MOVE     	R61 R62 ; R61 := R62
	318	[3168]	OP_LOADBOOL	R62 0 0 ; R62 := false
	319	[3169]	SELF     	R63 R57 K61 ; R64 := R57; R63 := R57[0x6c053909]
	320	[3169]	CALL     	R63 2 2 ; R63 := R63(R64)
	321	[3169]	GETUPVAL 	R64 U3 ; R64 := U3
	322	[3169]	GETTABLE 	R64 R64 K62 ; R64 := R64["REGION_ID_DOJO"]
	323	[3169]	EQ       	0 R63 R64 ; if R63 ~= R64 then PC := 352
	324	[3169]	JMP      	352 ; PC := 352
	325	[3171]	GETGLOBAL	R63 K8 ; R63 := mRailJack
	326	[3171]	GETTABLE 	R63 R63 K63 ; R63 := R63["Active"]
	327	[3171]	TEST     	R63 0 ; if not R63 then PC := 335
	328	[3171]	JMP      	335 ; PC := 335
	329	[3172]	GETGLOBAL	R63 K65 ; R63 := 0x0469f296
	330	[3172]	LOADK    	R64 K66 ; R64 := "/Lotus/Language/Dojo/DryDockMapLabel"
	331	[3172]	CALL     	R63 2 2 ; R63 := R63(R64)
	332	[3172]	SETTABLE 	R61 K64 R63 ; R61["locTag"] := R63
	333	[3173]	OP_LOADBOOL	R62 1 0 ; R62 := true
	334	[3173]	JMP      	391 ; PC := 391
	335	[3175]	GETGLOBAL	R63 K67 ; R63 := 0x76ea806b
	336	[3175]	SELF     	R63 R63 K68 ; R64 := R63; R63 := R63[0x3f3ae64c]
	337	[3175]	LOADK    	R65 := 0.000000
	338	[3175]	CALL     	R63 3 2 ; R63 := R63(R64,R65)
	339	[3176]	GETGLOBAL	R64 K4 ; R64 := 0x7b998233
	340	[3176]	MOVE     	R65 R63 ; R65 := R63
	341	[3176]	CALL     	R64 2 2 ; R64 := R64(R65)
	342	[3176]	TEST     	R64 1 ; if R64 then PC := 391
	343	[3176]	JMP      	391 ; PC := 391
	344	[3177]	GETGLOBAL	R64 K65 ; R64 := 0x0469f296
	345	[3177]	SELF     	R65 R63 K69 ; R66 := R63; R65 := R63[0x80563238]
	346	[3177]	CALL     	R65 2 2 ; R65 := R65(R66)
	347	[3177]	SELF     	R65 R65 K70 ; R66 := R65; R65 := R65[0x6da6e186]
	348	[3177]	CALL     	R65 2 0 ; R65,... := R65(R66)
	349	[3177]	CALL     	R64 0 2 ; R64 := R64(R65,...)
	350	[3177]	SETTABLE 	R61 K64 R64 ; R61["locTag"] := R64
	351	[3179]	JMP      	391 ; PC := 391
	352	[3181]	TEST     	R59 1 ; if R59 then PC := 391
	353	[3181]	JMP      	391 ; PC := 391
	354	[3182]	GETGLOBAL	R64 K71 ; R64 := 0xae91e43b
	355	[3182]	SELF     	R64 R64 K72 ; R65 := R64; R64 := R64[0x42b04007]
	356	[3182]	GETTABLE 	R66 R56 K27 ; R66 := R56["Name"]
	357	[3182]	OP_LOADBOOL	R67 1 0 ; R67 := true
	358	[3182]	CALL     	R64 4 2 ; R64 := R64(R65,R66,R67)
	359	[3183]	GETTABLE 	R65 R56 K24 ; R65 := R56["Type"]
	360	[3183]	SELF     	R65 R65 K73 ; R66 := R65; R65 := R65[0xef893aec]
	361	[3183]	CALL     	R65 2 2 ; R65 := R65(R66)
	362	[3183]	GETTABLE 	R65 R65 K74 ; R65 := R65["uniqueName"]
	363	[3184]	EQ       	1 R65 K75 ; if R65 == "" then PC := 371
	364	[3184]	JMP      	371 ; PC := 371
	365	[3185]	GETGLOBAL	R66 K71 ; R66 := 0xae91e43b
	366	[3185]	SELF     	R66 R66 K72 ; R67 := R66; R66 := R66[0x42b04007]
	367	[3185]	MOVE     	R68 R65 ; R68 := R65
	368	[3185]	OP_LOADBOOL	R69 0 0 ; R69 := false
	369	[3185]	CALL     	R66 4 2 ; R66 := R66(R67,R68,R69)
	370	[3185]	MOVE     	R64 R66 ; R64 := R66
	371	[3187]	GETTABLE 	R66 R56 K76 ; R66 := R56["Count"]
	372	[3187]	TEST     	R66 0 ; if not R66 then PC := 387
	373	[3187]	JMP      	387 ; PC := 387
	374	[3187]	GETTABLE 	R66 R56 K76 ; R66 := R56["Count"]
	375	[3187]	LT       	0 K18 R66 ; if 1.000000 >= R66 then PC := 387
	376	[3187]	JMP      	387 ; PC := 387
	377	[3187]	GETTABLE 	R66 R56 K24 ; R66 := R56["Type"]
	378	[3187]	SELF     	R66 R66 K77 ; R67 := R66; R66 := R66[0x535d4938]
	379	[3187]	CALL     	R66 2 2 ; R66 := R66(R67)
	380	[3187]	TEST     	R66 0 ; if not R66 then PC := 387
	381	[3187]	JMP      	387 ; PC := 387
	382	[3188]	MOVE     	R66 R64 ; R66 := R64
	383	[3188]	LOADK    	R67 K78 ; R67 := " ["
	384	[3188]	GETTABLE 	R68 R56 K76 ; R68 := R56["Count"]
	385	[3188]	LOADK    	R69 K79 ; R69 := "]"
	386	[3188]	CONCAT   	R64 R66 R69 ; R64 := R66 .. R67 .. R68 .. R69
	387	[3190]	GETGLOBAL	R66 K65 ; R66 := 0x0469f296
	388	[3190]	MOVE     	R67 R64 ; R67 := R64
	389	[3190]	CALL     	R66 2 2 ; R66 := R66(R67)
	390	[3190]	SETTABLE 	R61 K64 R66 ; R61["locTag"] := R66
	391	[3194]	LOADNIL  	R66 R66 ; R66 := nil
	392	[3195]	TEST     	R59 0 ; if not R59 then PC := 398
	393	[3195]	JMP      	398 ; PC := 398
	394	[3196]	GETTABLE 	R67 R61 K49 ; R67 := R61["mission"]
	395	[3196]	SELF     	R67 R67 K56 ; R68 := R67; R67 := R67[0x8f89d633]
	396	[3196]	CALL     	R67 2 2 ; R67 := R67(R68)
	397	[3196]	MOVE     	R66 R67 ; R66 := R67
	398	[3199]	GETTABLE 	R67 R56 K24 ; R67 := R56["Type"]
	399	[3199]	SELF     	R67 R67 K80 ; R68 := R67; R67 := R67[0xed4e0128]
	400	[3199]	CALL     	R67 2 2 ; R67 := R67(R68)
	401	[3200]	GETGLOBAL	R68 K81 ; R68 := 0x7f5022cf
	402	[3200]	GETTABLE 	R68 R68 K82 ; R68 := R68[0xa5c556b9]
	403	[3200]	MOVE     	R69 R67 ; R69 := R67
	404	[3200]	LOADK    	R70 K83 ; R70 := "Hub"
	405	[3200]	CALL     	R68 3 2 ; R68 := R68(R69,R70)
	406	[3200]	TEST     	R68 0 ; if not R68 then PC := 410
	407	[3200]	JMP      	410 ; PC := 410
	408	[3201]	SETTABLE 	R61 K84 K85 ; R61["nodeType"] := 3.000000
	409	[3201]	JMP      	411 ; PC := 411
	410	[3203]	SETTABLE 	R61 K84 K44 ; R61["nodeType"] := 0.000000
	411	[3206]	SETTABLE 	R61 K86 K87 ; R61["unlocked"] := true
	412	[3207]	SETTABLE 	R61 K55 K88 ; R61["difficultyUnlocked"] := 255.000000
	413	[3208]	GETTABLE 	R68 R56 K24 ; R68 := R56["Type"]
	414	[3208]	SELF     	R68 R68 K73 ; R69 := R68; R68 := R68[0xef893aec]
	415	[3208]	CALL     	R68 2 2 ; R68 := R68(R69)
	416	[3208]	SELF     	R68 R68 K56 ; R69 := R68; R68 := R68[0x8f89d633]
	417	[3208]	CALL     	R68 2 2 ; R68 := R68(R69)
	418	[3208]	SETTABLE 	R61 K49 R68 ; R61["mission"] := R68
	419	[3209]	GETTABLE 	R68 R61 K49 ; R68 := R61["mission"]
	420	[3209]	GETGLOBAL	R69 K89 ; R69 := 0x7ed0a956
	421	[3209]	GETTABLE 	R70 R56 K24 ; R70 := R56["Type"]
	422	[3209]	SELF     	R70 R70 K80 ; R71 := R70; R70 := R70[0xed4e0128]
	423	[3209]	CALL     	R70 2 0 ; R70,... := R70(R71)
	424	[3209]	CALL     	R69 0 2 ; R69 := R69(R70,...)
	425	[3209]	SETTABLE 	R68 K50 R69 ; R68["levelKeyName"] := R69
	426	[3210]	GETTABLE 	R68 R56 K33 ; R68 := R56["Difficulty"]
	427	[3210]	EQ       	1 R68 K0 ; if R68 == nil then PC := 432
	428	[3210]	JMP      	432 ; PC := 432
	429	[3211]	GETTABLE 	R68 R61 K49 ; R68 := R61["mission"]
	430	[3211]	GETTABLE 	R69 R56 K33 ; R69 := R56["Difficulty"]
	431	[3211]	SETTABLE 	R68 K90 R69 ; R68["difficulty"] := R69
	432	[3213]	GETTABLE 	R68 R56 K23 ; R68 := R56["KeyChain"]
	433	[3213]	SETTABLE 	R61 K91 R68 ; R61["keyChain"] := R68
	434	[3215]	LOADNIL  	R68 R68 ; R68 := nil
	435	[3216]	GETTABLE 	R69 R56 K92 ; R69 := R56["RegionOverride"]
	436	[3216]	EQ       	1 R69 K0 ; if R69 == nil then PC := 440
	437	[3216]	JMP      	440 ; PC := 440
	438	[3217]	GETTABLE 	R68 R56 K92 ; R68 := R56["RegionOverride"]
	439	[3217]	JMP      	444 ; PC := 444
	440	[3219]	GETTABLE 	R69 R56 K24 ; R69 := R56["Type"]
	441	[3219]	SELF     	R69 R69 K61 ; R70 := R69; R69 := R69[0x6c053909]
	442	[3219]	CALL     	R69 2 2 ; R69 := R69(R70)
	443	[3219]	MOVE     	R68 R69 ; R68 := R69
	444	[3221]	GETGLOBAL	R69 K93 ; R69 := mRegions
	445	[3221]	LEN      	R69 R69 ; R69 := # R69
	446	[3221]	LE       	0 R69 R68 ; if R69 > R68 then PC := 469
	447	[3221]	JMP      	469 ; PC := 469
	448	[3222]	GETGLOBAL	R69 K94 ; R69 := 0x3d106989
	449	[3222]	LOADK    	R70 K95 ; R70 := "invalid region specified for key="
	450	[3222]	GETGLOBAL	R71 K29 ; R71 := 0x64fb1586
	451	[3222]	GETTABLE 	R72 R56 K24 ; R72 := R56["Type"]
	452	[3222]	SELF     	R72 R72 K80 ; R73 := R72; R72 := R72[0xed4e0128]
	453	[3222]	CALL     	R72 2 0 ; R72,... := R72(R73)
	454	[3222]	CALL     	R71 0 2 ; R71 := R71(R72,...)
	455	[3222]	CONCAT   	R70 R70 R71 ; R70 := R70 .. R71
	456	[3222]	CALL     	R69 2 1 ; R69(R70)
	457	[3223]	GETGLOBAL	R69 K96 ; R69 := 0x42dcc9f5
	458	[3223]	GETGLOBAL	R70 K97 ; R70 := mRadialSolarMap
	459	[3223]	SELF     	R70 R70 K98 ; R71 := R70; R70 := R70[0x3ad9ed31]
	460	[3223]	MOVE     	R72 R58 ; R72 := R58
	461	[3223]	CALL     	R70 3 2 ; R70 := R70(R71,R72)
	462	[3223]	GETTABLE 	R70 R70 K53 ; R70 := R70["region"]
	463	[3223]	LOADK    	R71 := 1.000000
	464	[3223]	GETGLOBAL	R72 K93 ; R72 := mRegions
	465	[3223]	LEN      	R72 R72 ; R72 := # R72
	466	[3223]	SUB      	R72 R72 K18 ; R72 := R72 - 1.000000
	467	[3223]	CALL     	R69 4 2 ; R69 := R69(R70,R71,R72)
	468	[3223]	MOVE     	R68 R69 ; R68 := R69
	469	[3226]	GETGLOBAL	R69 K4 ; R69 := 0x7b998233
	470	[3226]	MOVE     	R70 R60 ; R70 := R60
	471	[3226]	CALL     	R69 2 2 ; R69 := R69(R70)
	472	[3226]	TEST     	R69 0 ; if not R69 then PC := 580
	473	[3226]	JMP      	580 ; PC := 580
	474	[3226]	GETTABLE 	R69 R56 K24 ; R69 := R56["Type"]
	475	[3226]	SELF     	R69 R69 K99 ; R70 := R69; R69 := R69[0xf2deaf69]
	476	[3226]	GETUPVAL 	R71 U4 ; R71 := U4
	477	[3226]	GETTABLE 	R71 R71 K100 ; R71 := R71["legacyVayHekKey"]
	478	[3226]	CALL     	R69 3 2 ; R69 := R69(R70,R71)
	479	[3226]	TEST     	R69 1 ; if R69 then PC := 580
	480	[3226]	JMP      	580 ; PC := 580
	481	[3226]	GETUPVAL 	R69 U3 ; R69 := U3
	482	[3226]	GETTABLE 	R69 R69 K101 ; R69 := R69["REGION_ID_MOON"]
	483	[3226]	EQ       	0 R68 R69 ; if R68 ~= R69 then PC := 491
	484	[3226]	JMP      	491 ; PC := 491
	485	[3226]	GETUPVAL 	R69 U9 ; R69 := U9
	486	[3226]	GETUPVAL 	R70 U3 ; R70 := U3
	487	[3226]	GETTABLE 	R70 R70 K101 ; R70 := R70["REGION_ID_MOON"]
	488	[3226]	GETTABLE 	R69 R69 R70 ; R69 := R69[R70]
	489	[3226]	EQ       	1 R69 K87 ; if R69 == true then PC := 580
	490	[3226]	JMP      	580 ; PC := 580
	491	[3227]	TEST     	R62 0 ; if not R62 then PC := 498
	492	[3227]	JMP      	498 ; PC := 498
	493	[3228]	GETGLOBAL	R69 K65 ; R69 := 0x0469f296
	494	[3228]	LOADK    	R70 K102 ; R70 := "CrewBattleNodeDojo"
	495	[3228]	CALL     	R69 2 2 ; R69 := R69(R70)
	496	[3228]	SETTABLE 	R61 K48 R69 ; R61["name"] := R69
	497	[3228]	JMP      	507 ; PC := 507
	498	[3230]	GETGLOBAL	R69 K65 ; R69 := 0x0469f296
	499	[3230]	GETTABLE 	R70 R56 K24 ; R70 := R56["Type"]
	500	[3230]	SELF     	R70 R70 K80 ; R71 := R70; R70 := R70[0xed4e0128]
	501	[3230]	CALL     	R70 2 2 ; R70 := R70(R71)
	502	[3230]	GETUPVAL 	R71 U3 ; R71 := U3
	503	[3230]	GETTABLE 	R71 R71 K103 ; R71 := R71["KEY_TAG"]
	504	[3230]	CONCAT   	R70 R70 R71 ; R70 := R70 .. R71
	505	[3230]	CALL     	R69 2 2 ; R69 := R69(R70)
	506	[3230]	SETTABLE 	R61 K48 R69 ; R61["name"] := R69
	507	[3233]	GETGLOBAL	R69 K81 ; R69 := 0x7f5022cf
	508	[3233]	GETTABLE 	R69 R69 K82 ; R69 := R69[0xa5c556b9]
	509	[3233]	MOVE     	R70 R67 ; R70 := R67
	510	[3233]	LOADK    	R71 K83 ; R71 := "Hub"
	511	[3233]	CALL     	R69 3 2 ; R69 := R69(R70,R71)
	512	[3233]	TEST     	R69 0 ; if not R69 then PC := 516
	513	[3233]	JMP      	516 ; PC := 516
	514	[3234]	SETTABLE 	R61 K84 K85 ; R61["nodeType"] := 3.000000
	515	[3234]	JMP      	517 ; PC := 517
	516	[3236]	SETTABLE 	R61 K84 K44 ; R61["nodeType"] := 0.000000
	517	[3239]	SETTABLE 	R61 K53 R68 ; R61["region"] := R68
	518	[3242]	GETTABLE 	R69 R61 K53 ; R69 := R61["region"]
	519	[3242]	GETTABLE 	R69 R50 R69 ; R69 := R50[R69]
	520	[3242]	EQ       	0 R69 K0 ; if R69 ~= nil then PC := 524
	521	[3242]	JMP      	524 ; PC := 524
	522	[3243]	GETTABLE 	R69 R61 K53 ; R69 := R61["region"]
	523	[3243]	SETTABLE 	R50 R69 K44 ; R50[R69] := 0.000000
	524	[3246]	GETTABLE 	R69 R56 K24 ; R69 := R56["Type"]
	525	[3246]	SELF     	R69 R69 K104 ; R70 := R69; R69 := R69[0x95e6d5cc]
	526	[3246]	CALL     	R69 2 2 ; R69 := R69(R70)
	527	[3247]	GETTABLE 	R70 R69 K105 ; R70 := R69["x"]
	528	[3247]	EQ       	1 R70 K44 ; if R70 == 0.000000 then PC := 538
	529	[3247]	JMP      	538 ; PC := 538
	530	[3247]	GETTABLE 	R70 R69 K106 ; R70 := R69["y"]
	531	[3247]	EQ       	1 R70 K44 ; if R70 == 0.000000 then PC := 538
	532	[3247]	JMP      	538 ; PC := 538
	533	[3247]	GETTABLE 	R70 R69 K107 ; R70 := R69["z"]
	534	[3247]	EQ       	1 R70 K44 ; if R70 == 0.000000 then PC := 538
	535	[3247]	JMP      	538 ; PC := 538
	536	[3248]	SETTABLE 	R61 K108 R69 ; R61["pos"] := R69
	537	[3248]	JMP      	554 ; PC := 554
	538	[3251]	GETGLOBAL	R70 K93 ; R70 := mRegions
	539	[3251]	GETTABLE 	R71 R61 K53 ; R71 := R61["region"]
	540	[3251]	GETTABLE 	R70 R70 R71 ; R70 := R70[R71]
	541	[3251]	GETTABLE 	R70 R70 K108 ; R70 := R70["pos"]
	542	[3251]	GETGLOBAL	R71 K109 ; R71 := 0xa421af95
	543	[3251]	GETTABLE 	R72 R61 K53 ; R72 := R61["region"]
	544	[3251]	GETTABLE 	R72 R50 R72 ; R72 := R50[R72]
	545	[3251]	MUL      	R72 R72 K110 ; R72 := R72 * 0.020000
	546	[3251]	GETTABLE 	R73 R61 K53 ; R73 := R61["region"]
	547	[3251]	GETTABLE 	R73 R50 R73 ; R73 := R50[R73]
	548	[3251]	UNM      	R73 R73 ; R73 := ^ R73
	549	[3251]	MUL      	R73 R73 K110 ; R73 := R73 * 0.020000
	550	[3251]	LOADK    	R74 := 0.000000
	551	[3251]	CALL     	R71 4 2 ; R71 := R71(R72,R73,R74)
	552	[3251]	ADD      	R70 R70 R71 ; R70 := R70 + R71
	553	[3251]	SETTABLE 	R61 K108 R70 ; R61["pos"] := R70
	554	[3254]	GETTABLE 	R70 R56 K111 ; R70 := R56["DecoOverride"]
	555	[3254]	EQ       	1 R70 K0 ; if R70 == nil then PC := 561
	556	[3254]	JMP      	561 ; PC := 561
	557	[3255]	GETTABLE 	R70 R56 K111 ; R70 := R56["DecoOverride"]
	558	[3255]	SETTABLE 	R61 K3 R70 ; R61["deco"] := R70
	559	[3256]	GETTABLE 	R70 R56 K113 ; R70 := R56["DecoScale"]
	560	[3256]	SETTABLE 	R61 K112 R70 ; R61[0x25312c9b] := R70
	561	[3259]	GETTABLE 	R70 R56 K114 ; R70 := R56["NodeOffset"]
	562	[3259]	EQ       	1 R70 K0 ; if R70 == nil then PC := 568
	563	[3259]	JMP      	568 ; PC := 568
	564	[3260]	GETTABLE 	R70 R61 K108 ; R70 := R61["pos"]
	565	[3260]	GETTABLE 	R71 R56 K114 ; R71 := R56["NodeOffset"]
	566	[3260]	ADD      	R70 R70 R71 ; R70 := R70 + R71
	567	[3260]	SETTABLE 	R61 K108 R70 ; R61["pos"] := R70
	568	[3263]	GETTABLE 	R70 R61 K53 ; R70 := R61["region"]
	569	[3263]	GETTABLE 	R71 R61 K53 ; R71 := R61["region"]
	570	[3263]	GETTABLE 	R71 R50 R71 ; R71 := R50[R71]
	571	[3263]	ADD      	R71 R71 K18 ; R71 := R71 + 1.000000
	572	[3263]	SETTABLE 	R50 R70 R71 ; R50[R70] := R71
	573	[3265]	GETUPVAL 	R70 U8 ; R70 := U8
	574	[3265]	MOVE     	R71 R61 ; R71 := R61
	575	[3265]	NEWTABLE 	R72 0 1 ; R72 := {}
	576	[3265]	GETGLOBAL	R73 K116 ; R73 := mNewWarMode
	577	[3265]	SETTABLE 	R72 K115 R73 ; R72[0xbd496aa1] := R73
	578	[3265]	CALL     	R70 3 1 ; R70(R71,R72)
	579	[3265]	JMP      	593 ; PC := 593
	580	[3267]	GETTABLE 	R70 R56 K24 ; R70 := R56["Type"]
	581	[3267]	SELF     	R70 R70 K104 ; R71 := R70; R70 := R70[0x95e6d5cc]
	582	[3267]	CALL     	R70 2 2 ; R70 := R70(R71)
	583	[3268]	GETTABLE 	R71 R70 K105 ; R71 := R70["x"]
	584	[3268]	EQ       	1 R71 K44 ; if R71 == 0.000000 then PC := 593
	585	[3268]	JMP      	593 ; PC := 593
	586	[3268]	GETTABLE 	R71 R70 K106 ; R71 := R70["y"]
	587	[3268]	EQ       	1 R71 K44 ; if R71 == 0.000000 then PC := 593
	588	[3268]	JMP      	593 ; PC := 593
	589	[3268]	GETTABLE 	R71 R70 K107 ; R71 := R70["z"]
	590	[3268]	EQ       	1 R71 K44 ; if R71 == 0.000000 then PC := 593
	591	[3268]	JMP      	593 ; PC := 593
	592	[3269]	SETTABLE 	R61 K108 R70 ; R61["pos"] := R70
	593	[3273]	GETGLOBAL	R71 K4 ; R71 := 0x7b998233
	594	[3273]	MOVE     	R72 R60 ; R72 := R60
	595	[3273]	CALL     	R71 2 2 ; R71 := R71(R72)
	596	[3273]	TEST     	R71 1 ; if R71 then PC := 690
	597	[3273]	JMP      	690 ; PC := 690
	598	[3274]	TEST     	R59 1 ; if R59 then PC := 613
	599	[3274]	JMP      	613 ; PC := 613
	600	[3275]	GETTABLE 	R71 R61 K48 ; R71 := R61["name"]
	601	[3275]	SETTABLE 	R60 K48 R71 ; R60["name"] := R71
	602	[3276]	GETGLOBAL	R71 K81 ; R71 := 0x7f5022cf
	603	[3276]	GETTABLE 	R71 R71 K118 ; R71 := R71[0x3f3e4d12]
	604	[3276]	GETGLOBAL	R72 K71 ; R72 := 0xae91e43b
	605	[3276]	SELF     	R72 R72 K72 ; R73 := R72; R72 := R72[0x42b04007]
	606	[3276]	GETTABLE 	R74 R61 K64 ; R74 := R61["locTag"]
	607	[3276]	SELF     	R74 R74 K119 ; R75 := R74; R74 := R74[0x6d604ba7]
	608	[3276]	CALL     	R74 2 2 ; R74 := R74(R75)
	609	[3276]	OP_LOADBOOL	R75 0 0 ; R75 := false
	610	[3276]	CALL     	R72 4 0 ; R72,... := R72(R73,R74,R75)
	611	[3276]	CALL     	R71 0 2 ; R71 := R71(R72,...)
	612	[3276]	SETTABLE 	R60 K117 R71 ; R60["locName"] := R71
	613	[3279]	GETGLOBAL	R71 K4 ; R71 := 0x7b998233
	614	[3279]	GETTABLE 	R72 R56 K23 ; R72 := R56["KeyChain"]
	615	[3279]	CALL     	R71 2 2 ; R71 := R71(R72)
	616	[3279]	TEST     	R71 1 ; if R71 then PC := 620
	617	[3279]	JMP      	620 ; PC := 620
	618	[3280]	SETTABLE 	R60 K120 K10 ; R60["completed"] := false
	619	[3280]	JMP      	670 ; PC := 670
	620	[3281]	GETTABLE 	R71 R60 K120 ; R71 := R60["completed"]
	621	[3281]	TEST     	R71 1 ; if R71 then PC := 670
	622	[3281]	JMP      	670 ; PC := 670
	623	[3282]	GETTABLE 	R71 R56 K24 ; R71 := R56["Type"]
	624	[3282]	SELF     	R71 R71 K39 ; R72 := R71; R71 := R71[0x92608d86]
	625	[3282]	CALL     	R71 2 2 ; R71 := R71(R72)
	626	[3283]	SELF     	R72 R58 K121 ; R73 := R58; R72 := R58[0x56c01834]
	627	[3283]	CALL     	R72 2 2 ; R72 := R72(R73)
	628	[3283]	TEST     	R72 0 ; if not R72 then PC := 670
	629	[3283]	JMP      	670 ; PC := 670
	630	[3284]	EQ       	0 R51 K0 ; if R51 ~= nil then PC := 652
	631	[3284]	JMP      	652 ; PC := 652
	632	[3285]	GETGLOBAL	R72 K67 ; R72 := 0x76ea806b
	633	[3285]	SELF     	R72 R72 K68 ; R73 := R72; R72 := R72[0x3f3ae64c]
	634	[3285]	LOADK    	R74 := 0.000000
	635	[3285]	CALL     	R72 3 2 ; R72 := R72(R73,R74)
	636	[3285]	SELF     	R72 R72 K69 ; R73 := R72; R72 := R72[0x80563238]
	637	[3285]	CALL     	R72 2 2 ; R72 := R72(R73)
	638	[3285]	SELF     	R72 R72 K122 ; R73 := R72; R72 := R72[0xb407484d]
	639	[3285]	CALL     	R72 2 2 ; R72 := R72(R73)
	640	[3286]	NEWTABLE 	R73 0 0 ; R73 := {}
	641	[3286]	MOVE     	R51 R73 ; R51 := R73
	642	[3288]	GETGLOBAL	R73 K1 ; R73 := 0xcfc01047
	643	[3288]	MOVE     	R74 R72 ; R74 := R72
	644	[3288]	CALL     	R73 2 4 ; R73,R74,R75 := R73(R74)
	645	[3288]	JMP      	650 ; PC := 650
	646	[3289]	GETGLOBAL	R78 K29 ; R78 := 0x64fb1586
	647	[3289]	GETTABLE 	R79 R77 K123 ; R79 := R77["mTag"]
	648	[3289]	CALL     	R78 2 2 ; R78 := R78(R79)
	649	[3289]	SETTABLE 	R51 R78 R77 ; R51[R78] := R77
	650	[3288]	TFORLOOP 	R73 2 ; R76,R77 := R73(R74,R75); if R76 ~= nil then begin PC = 646; R75 := R76 end
	651	[3289]	JMP      	646 ; PC := 646
	652	[3293]	GETGLOBAL	R78 K29 ; R78 := 0x64fb1586
	653	[3293]	MOVE     	R79 R71 ; R79 := R71
	654	[3293]	CALL     	R78 2 2 ; R78 := R78(R79)
	655	[3293]	GETTABLE 	R78 R51 R78 ; R78 := R51[R78]
	656	[3294]	EQ       	1 R78 K0 ; if R78 == nil then PC := 670
	657	[3294]	JMP      	670 ; PC := 670
	658	[3295]	GETTABLE 	R79 R78 K124 ; R79 := R78["mCompletes"]
	659	[3295]	LT       	1 K44 R79 ; if 0.000000 < R79 then PC := 662
	660	[3295]	JMP      	662 ; PC := 662
	661	[3295]	OP_LOADBOOL	R79 0 1 ; R79 := false; PC := 662
	662	[3295]	OP_LOADBOOL	R79 1 0 ; R79 := true
	663	[3295]	SETTABLE 	R60 K120 R79 ; R60["completed"] := R79
	664	[3296]	GETTABLE 	R79 R60 K59 ; R79 := R60["radialSector"]
	665	[3296]	GETTABLE 	R80 R78 K124 ; R80 := R78["mCompletes"]
	666	[3296]	SETTABLE 	R79 K125 R80 ; R79["missionsCompleted"] := R80
	667	[3297]	GETTABLE 	R79 R60 K59 ; R79 := R60["radialSector"]
	668	[3297]	GETTABLE 	R80 R78 K127 ; R80 := R78["mTier"]
	669	[3297]	SETTABLE 	R79 K126 R80 ; R79["difficultyCompleted"] := R80
	670	[3301]	SETTABLE 	R60 K128 K10 ; R60["locked"] := false
	671	[3302]	SETTABLE 	R60 K129 K87 ; R60["visibleLabel"] := true
	672	[3303]	SETTABLE 	R60 K130 K10 ; R60["isEmpty"] := false
	673	[3305]	TEST     	R59 0 ; if not R59 then PC := 676
	674	[3305]	JMP      	676 ; PC := 676
	675	[3306]	SETTABLE 	R60 K131 R66 ; R60["displayMissionOverride"] := R66
	676	[3308]	GETTABLE 	R79 R56 K33 ; R79 := R56["Difficulty"]
	677	[3308]	EQ       	1 R79 K0 ; if R79 == nil then PC := 690
	678	[3308]	JMP      	690 ; PC := 690
	679	[3309]	GETTABLE 	R79 R60 K59 ; R79 := R60["radialSector"]
	680	[3309]	GETTABLE 	R79 R79 K49 ; R79 := R79["mission"]
	681	[3309]	GETTABLE 	R80 R56 K33 ; R80 := R56["Difficulty"]
	682	[3309]	SETTABLE 	R79 K90 R80 ; R79["difficulty"] := R80
	683	[3310]	GETUPVAL 	R79 U0 ; R79 := U0
	684	[3310]	GETTABLE 	R80 R60 K132 ; R80 := R60["id"]
	685	[3310]	GETTABLE 	R79 R79 R80 ; R79 := R79[R80]
	686	[3310]	GETTABLE 	R79 R79 K59 ; R79 := R79["radialSector"]
	687	[3310]	GETTABLE 	R79 R79 K49 ; R79 := R79["mission"]
	688	[3310]	GETTABLE 	R80 R56 K33 ; R80 := R56["Difficulty"]
	689	[3310]	SETTABLE 	R79 K90 R80 ; R79["difficulty"] := R80
	690	[3152]	FORLOOP  	R52 295 ; R52 += R54; if R52 <= R53 then begin PC := 295; R55 := R52 end
	691	[3316]	GETGLOBAL	R79 K8 ; R79 := mRailJack
	692	[3316]	GETTABLE 	R79 R79 K63 ; R79 := R79["Active"]
	693	[3316]	TEST     	R79 1 ; if R79 then PC := 863
	694	[3316]	JMP      	863 ; PC := 863
	695	[3317]	GETGLOBAL	R79 K67 ; R79 := 0x76ea806b
	696	[3317]	SELF     	R79 R79 K68 ; R80 := R79; R79 := R79[0x3f3ae64c]
	697	[3317]	LOADK    	R81 := 0.000000
	698	[3317]	CALL     	R79 3 2 ; R79 := R79(R80,R81)
	699	[3317]	SELF     	R79 R79 K69 ; R80 := R79; R79 := R79[0x80563238]
	700	[3317]	CALL     	R79 2 2 ; R79 := R79(R80)
	701	[3317]	SELF     	R79 R79 K133 ; R80 := R79; R79 := R79[0x69727e0b]
	702	[3317]	CALL     	R79 2 2 ; R79 := R79(R80)
	703	[3317]	GETTABLE 	R79 R79 K134 ; R79 := R79["mFeaturedGuilds"]
	704	[3318]	LOADK    	R80 := 1.000000
	705	[3318]	LEN      	R81 R79 ; R81 := # R79
	706	[3318]	LOADK    	R82 := 1.000000
	707	[3318]	FORPREP  	R80 774 ; R80 -= R82; PC := 774
	708	[3320]	GETGLOBAL	R84 K21 ; R84 := 0x6c97a788
	709	[3320]	GETTABLE 	R84 R84 K60 ; R84 := R84[0xa67ba89f]
	710	[3320]	CALL     	R84 1 2 ; R84 := R84()
	711	[3321]	GETUPVAL 	R85 U10 ; R85 := U10
	712	[3321]	GETTABLE 	R85 R85 K135 ; R85 := R85[0x06d055f9]
	713	[3321]	GETUPVAL 	R86 U10 ; R86 := U10
	714	[3321]	GETTABLE 	R86 R86 K136 ; R86 := R86[0x23a862e6]
	715	[3321]	CALL     	R86 1 2 ; R86 := R86()
	716	[3321]	GETGLOBAL	R87 K65 ; R87 := 0x0469f296
	717	[3321]	LOADK    	R88 K137 ; R88 := "/Lotus/Language/Clan/Clan_DOJO"
	718	[3321]	CALL     	R87 2 2 ; R87 := R87(R88)
	719	[3321]	GETGLOBAL	R88 K65 ; R88 := 0x0469f296
	720	[3321]	GETTABLE 	R89 R79 R83 ; R89 := R79[R83]
	721	[3321]	GETTABLE 	R89 R89 K138 ; R89 := R89["mName"]
	722	[3321]	CALL     	R88 2 0 ; R88,... := R88(R89)
	723	[3321]	CALL     	R85 0 2 ; R85 := R85(R86,...)
	724	[3321]	SETTABLE 	R84 K64 R85 ; R84["locTag"] := R85
	725	[3322]	SETTABLE 	R84 K84 K85 ; R84["nodeType"] := 3.000000
	726	[3323]	SETTABLE 	R84 K86 K87 ; R84["unlocked"] := true
	727	[3324]	SETTABLE 	R84 K55 K88 ; R84["difficultyUnlocked"] := 255.000000
	728	[3325]	GETGLOBAL	R85 K65 ; R85 := 0x0469f296
	729	[3325]	LOADK    	R86 K139 ; R86 := "FeaturedDojoTier"
	730	[3325]	MOVE     	R87 R83 ; R87 := R83
	731	[3325]	CONCAT   	R86 R86 R87 ; R86 := R86 .. R87
	732	[3325]	CALL     	R85 2 2 ; R85 := R85(R86)
	733	[3325]	SETTABLE 	R84 K48 R85 ; R84["name"] := R85
	734	[3326]	GETGLOBAL	R85 K93 ; R85 := mRegions
	735	[3326]	GETTABLE 	R85 R85 K140 ; R85 := R85[14.000000]
	736	[3326]	GETTABLE 	R85 R85 K108 ; R85 := R85["pos"]
	737	[3326]	GETGLOBAL	R86 K141 ; R86 := 0x492c7f2a
	738	[3326]	GETGLOBAL	R87 K109 ; R87 := 0xa421af95
	739	[3326]	LOADK    	R88 := 0.000000
	740	[3326]	LOADK    	R89 K142 ; R89 := -0.160000
	741	[3326]	LOADK    	R90 := 0.000000
	742	[3326]	CALL     	R87 4 2 ; R87 := R87(R88,R89,R90)
	743	[3326]	GETGLOBAL	R88 K143 ; R88 := 0x00046924
	744	[3326]	LOADK    	R89 := 0.000000
	745	[3326]	LOADK    	R90 := 0.000000
	746	[3326]	LEN      	R91 R79 ; R91 := # R79
	747	[3326]	SUB      	R91 R91 K18 ; R91 := R91 - 1.000000
	748	[3326]	DIV      	R91 R91 K144 ; R91 := R91 / 2.000000
	749	[3326]	SUB      	R91 R91 R83 ; R91 := R91 - R83
	750	[3326]	ADD      	R91 R91 K18 ; R91 := R91 + 1.000000
	751	[3326]	MUL      	R91 K145 R91 ; R91 := -30.000000 * R91
	752	[3326]	CALL     	R88 4 0 ; R88,... := R88(R89,R90,R91)
	753	[3326]	CALL     	R86 0 2 ; R86 := R86(R87,...)
	754	[3326]	ADD      	R85 R85 R86 ; R85 := R85 + R86
	755	[3326]	SETTABLE 	R84 K108 R85 ; R84["pos"] := R85
	756	[3327]	GETUPVAL 	R85 U8 ; R85 := U8
	757	[3327]	MOVE     	R86 R84 ; R86 := R84
	758	[3327]	NEWTABLE 	R87 0 5 ; R87 := {}
	759	[3327]	GETTABLE 	R88 R79 R83 ; R88 := R79[R83]
	760	[3327]	GETTABLE 	R88 R88 K147 ; R88 := R88["mId"]
	761	[3327]	GETTABLE 	R88 R88 K147 ; R88 := R88["mId"]
	762	[3327]	SETTABLE 	R87 K146 R88 ; R87["guildId"] := R88
	763	[3327]	GETTABLE 	R88 R79 R83 ; R88 := R79[R83]
	764	[3327]	GETTABLE 	R88 R88 K127 ; R88 := R88["mTier"]
	765	[3327]	SETTABLE 	R87 K148 R88 ; R87["clanTier"] := R88
	766	[3327]	SETTABLE 	R87 K149 K150 ; R87["overrideIconSize"] := 120.000000
	767	[3327]	SETTABLE 	R87 K151 K87 ; R87["scaleIconWithCamera"] := true
	768	[3327]	LT       	1 K153 R83 ; if 5.000000 < R83 then PC := 771
	769	[3327]	JMP      	771 ; PC := 771
	770	[3327]	OP_LOADBOOL	R88 0 1 ; R88 := false; PC := 771
	771	[3327]	OP_LOADBOOL	R88 1 0 ; R88 := true
	772	[3327]	SETTABLE 	R87 K152 R88 ; R87["isTennocon"] := R88
	773	[3327]	CALL     	R85 3 1 ; R85(R86,R87)
	774	[3318]	FORLOOP  	R80 708 ; R80 += R82; if R80 <= R81 then begin PC := 708; R83 := R80 end
	775	[3330]	GETUPVAL 	R85 U3 ; R85 := U3
	776	[3330]	GETTABLE 	R85 R85 K154 ; R85 := R85[0xc14d48af]
	777	[3330]	CALL     	R85 1 2 ; R85 := R85()
	778	[3330]	TEST     	R85 0 ; if not R85 then PC := 863
	779	[3330]	JMP      	863 ; PC := 863
	780	[3332]	GETUPVAL 	R85 U3 ; R85 := U3
	781	[3332]	GETTABLE 	R85 R85 K155 ; R85 := R85[0xf47b8ec3]
	782	[3332]	CALL     	R85 1 2 ; R85 := R85()
	783	[3333]	GETGLOBAL	R86 K21 ; R86 := 0x6c97a788
	784	[3333]	GETTABLE 	R86 R86 K60 ; R86 := R86[0xa67ba89f]
	785	[3333]	CALL     	R86 1 2 ; R86 := R86()
	786	[3334]	GETGLOBAL	R87 K65 ; R87 := 0x0469f296
	787	[3334]	GETUPVAL 	R88 U10 ; R88 := U10
	788	[3334]	GETTABLE 	R88 R88 K135 ; R88 := R88[0x06d055f9]
	789	[3334]	MOVE     	R89 R85 ; R89 := R85
	790	[3334]	LOADK    	R90 K156 ; R90 := "OrbiterBootNode"
	791	[3334]	LOADK    	R91 K157 ; R91 := "DrifterCampBootNode"
	792	[3334]	CALL     	R88 4 0 ; R88,... := R88(R89,R90,R91)
	793	[3334]	CALL     	R87 0 2 ; R87 := R87(R88,...)
	794	[3335]	GETUPVAL 	R88 U10 ; R88 := U10
	795	[3335]	GETTABLE 	R88 R88 K135 ; R88 := R88[0x06d055f9]
	796	[3335]	MOVE     	R89 R85 ; R89 := R85
	797	[3335]	GETGLOBAL	R90 K65 ; R90 := 0x0469f296
	798	[3335]	LOADK    	R91 K158 ; R91 := "/Lotus/Language/NewWar/NewWarP3M1b"
	799	[3335]	CALL     	R90 2 2 ; R90 := R90(R91)
	800	[3335]	GETGLOBAL	R91 K65 ; R91 := 0x0469f296
	801	[3335]	LOADK    	R92 K159 ; R92 := "/Lotus/Language/NewWar/NewWarP2DrifterCamp"
	802	[3335]	CALL     	R91 2 0 ; R91,... := R91(R92)
	803	[3335]	CALL     	R88 0 2 ; R88 := R88(R89,...)
	804	[3335]	SETTABLE 	R86 K64 R88 ; R86["locTag"] := R88
	805	[3336]	SETTABLE 	R86 K84 K44 ; R86["nodeType"] := 0.000000
	806	[3337]	SETTABLE 	R86 K86 K87 ; R86["unlocked"] := true
	807	[3338]	SETTABLE 	R86 K55 K88 ; R86["difficultyUnlocked"] := 255.000000
	808	[3339]	GETGLOBAL	R88 K65 ; R88 := 0x0469f296
	809	[3339]	LOADK    	R89 K160 ; R89 := "ToggleBootLevel"
	810	[3339]	CALL     	R88 2 2 ; R88 := R88(R89)
	811	[3339]	SETTABLE 	R86 K48 R88 ; R86["name"] := R88
	812	[3340]	GETGLOBAL	R88 K93 ; R88 := mRegions
	813	[3340]	GETTABLE 	R88 R88 K85 ; R88 := R88[3.000000]
	814	[3340]	GETTABLE 	R88 R88 K108 ; R88 := R88["pos"]
	815	[3340]	GETUPVAL 	R89 U10 ; R89 := U10
	816	[3340]	GETTABLE 	R89 R89 K135 ; R89 := R89[0x06d055f9]
	817	[3340]	MOVE     	R90 R85 ; R90 := R85
	818	[3340]	GETGLOBAL	R91 K109 ; R91 := 0xa421af95
	819	[3340]	LOADK    	R92 K161 ; R92 := -0.150000
	820	[3340]	LOADK    	R93 K162 ; R93 := 0.085000
	821	[3340]	LOADK    	R94 := 0.000000
	822	[3340]	CALL     	R91 4 2 ; R91 := R91(R92,R93,R94)
	823	[3340]	GETGLOBAL	R92 K109 ; R92 := 0xa421af95
	824	[3340]	LOADK    	R93 K163 ; R93 := -0.017500
	825	[3340]	LOADK    	R94 K164 ; R94 := 0.017500
	826	[3340]	LOADK    	R95 := 0.000000
	827	[3340]	CALL     	R92 4 0 ; R92,... := R92(R93,R94,R95)
	828	[3340]	CALL     	R89 0 2 ; R89 := R89(R90,...)
	829	[3340]	ADD      	R88 R88 R89 ; R88 := R88 + R89
	830	[3340]	SETTABLE 	R86 K108 R88 ; R86["pos"] := R88
	831	[3341]	GETTABLE 	R88 R86 K49 ; R88 := R86["mission"]
	832	[3341]	SETTABLE 	R88 K165 K166 ; R88["missionType"] := 20.000000
	833	[3342]	TEST     	R85 0 ; if not R85 then PC := 850
	834	[3342]	JMP      	850 ; PC := 850
	835	[3343]	GETGLOBAL	R88 K167 ; R88 := 0xe37d81b0
	836	[3343]	SETTABLE 	R86 K3 R88 ; R86["deco"] := R88
	837	[3344]	SETTABLE 	R86 K112 K168 ; R86["scale"] := 0.005000
	838	[3345]	GETGLOBAL	R88 K109 ; R88 := 0xa421af95
	839	[3345]	LOADK    	R89 K170 ; R89 := -0.005000
	840	[3345]	LOADK    	R90 K171 ; R90 := 0.007500
	841	[3345]	LOADK    	R91 := 0.000000
	842	[3345]	CALL     	R88 4 2 ; R88 := R88(R89,R90,R91)
	843	[3345]	SETTABLE 	R86 K169 R88 ; R86["decoOffset"] := R88
	844	[3346]	GETGLOBAL	R88 K143 ; R88 := 0x00046924
	845	[3346]	LOADK    	R89 := -40.000000
	846	[3346]	LOADK    	R90 := 155.000000
	847	[3346]	LOADK    	R91 := 180.000000
	848	[3346]	CALL     	R88 4 2 ; R88 := R88(R89,R90,R91)
	849	[3346]	SETTABLE 	R86 K172 R88 ; R86["decoRotation"] := R88
	850	[3348]	GETUPVAL 	R88 U8 ; R88 := U8
	851	[3348]	MOVE     	R89 R86 ; R89 := R86
	852	[3348]	NEWTABLE 	R90 0 3 ; R90 := {}
	853	[3348]	GETUPVAL 	R91 U10 ; R91 := U10
	854	[3348]	GETTABLE 	R91 R91 K135 ; R91 := R91[0x06d055f9]
	855	[3348]	MOVE     	R92 R85 ; R92 := R85
	856	[3348]	LOADK    	R93 K174 ; R93 := "bootlevelorbiter"
	857	[3348]	LOADK    	R94 K175 ; R94 := "bootlevelcamp"
	858	[3348]	CALL     	R91 4 2 ; R91 := R91(R92,R93,R94)
	859	[3348]	SETTABLE 	R90 K173 R91 ; R90["iconTag"] := R91
	860	[3348]	SETTABLE 	R90 K176 K87 ; R90["IsHomeNode"] := true
	861	[3348]	SETTABLE 	R90 K177 R87 ; R90["NodeIntro"] := R87
	862	[3348]	CALL     	R88 3 1 ; R88(R89,R90)
	863	[3352]	GETGLOBAL	R88 K116 ; R88 := mNewWarMode
	864	[3352]	TEST     	R88 1 ; if R88 then PC := 871
	865	[3352]	JMP      	871 ; PC := 871
	866	[3352]	GETUPVAL 	R88 U3 ; R88 := U3
	867	[3352]	GETTABLE 	R88 R88 K154 ; R88 := R88[0xc14d48af]
	868	[3352]	CALL     	R88 1 2 ; R88 := R88()
	869	[3352]	TEST     	R88 0 ; if not R88 then PC := 1206
	870	[3352]	JMP      	1206 ; PC := 1206
	871	[3353]	GETGLOBAL	R88 K143 ; R88 := 0x00046924
	872	[3353]	LOADK    	R89 := 180.000000
	873	[3353]	LOADK    	R90 := 0.000000
	874	[3353]	LOADK    	R91 := 0.000000
	875	[3353]	CALL     	R88 4 2 ; R88 := R88(R89,R90,R91)
	876	[3354]	GETGLOBAL	R89 K116 ; R89 := mNewWarMode
	877	[3354]	TEST     	R89 0 ; if not R89 then PC := 1065
	878	[3354]	JMP      	1065 ; PC := 1065
	879	[3356]	LOADK    	R89 := 1.000000
	880	[3356]	LOADK    	R90 := 12.000000
	881	[3356]	LOADK    	R91 := 1.000000
	882	[3356]	FORPREP  	R89 924 ; R89 -= R91; PC := 924
	883	[3357]	GETGLOBAL	R93 K4 ; R93 := 0x7b998233
	884	[3357]	GETGLOBAL	R94 K93 ; R94 := mRegions
	885	[3357]	GETTABLE 	R94 R94 R92 ; R94 := R94[R92]
	886	[3357]	GETTABLE 	R94 R94 K178 ; R94 := R94["instance"]
	887	[3357]	CALL     	R93 2 2 ; R93 := R93(R94)
	888	[3357]	TEST     	R93 1 ; if R93 then PC := 897
	889	[3357]	JMP      	897 ; PC := 897
	890	[3358]	GETGLOBAL	R93 K93 ; R93 := mRegions
	891	[3358]	GETTABLE 	R93 R93 R92 ; R93 := R93[R92]
	892	[3358]	GETTABLE 	R93 R93 K178 ; R93 := R93["instance"]
	893	[3358]	SELF     	R93 R93 K179 ; R94 := R93; R93 := R93[0x47901f07]
	894	[3358]	GETGLOBAL	R95 K180 ; R95 := 0x65af81ac
	895	[3358]	GETGLOBAL	R96 K181 ; R96 := EMPTY_SYMBOL
	896	[3358]	CALL     	R93 4 1 ; R93(R94,R95,R96)
	897	[3360]	EQ       	1 R92 K85 ; if R92 == 3.000000 then PC := 903
	898	[3360]	JMP      	903 ; PC := 903
	899	[3360]	EQ       	1 R92 K182 ; if R92 == 4.000000 then PC := 903
	900	[3360]	JMP      	903 ; PC := 903
	901	[3360]	EQ       	0 R92 K153 ; if R92 ~= 5.000000 then PC := 914
	902	[3360]	JMP      	914 ; PC := 914
	903	[3361]	GETUPVAL 	R93 U11 ; R93 := U11
	904	[3361]	GETGLOBAL	R94 K183 ; R94 := 0xf51ab0f9
	905	[3361]	LOADNIL  	R95 R96 ; R95 := R96 := nil
	906	[3361]	GETGLOBAL	R97 K93 ; R97 := mRegions
	907	[3361]	GETTABLE 	R97 R97 R92 ; R97 := R97[R92]
	908	[3361]	GETTABLE 	R97 R97 K112 ; R97 := R97["scale"]
	909	[3361]	GETGLOBAL	R98 K93 ; R98 := mRegions
	910	[3361]	GETTABLE 	R98 R98 R92 ; R98 := R98[R92]
	911	[3361]	GETTABLE 	R98 R98 K108 ; R98 := R98["pos"]
	912	[3361]	CALL     	R93 6 1 ; R93(R94,R95,R96,R97,R98)
	913	[3361]	JMP      	924 ; PC := 924
	914	[3363]	GETUPVAL 	R93 U11 ; R93 := U11
	915	[3363]	GETGLOBAL	R94 K184 ; R94 := 0x26e2dc2a
	916	[3363]	LOADNIL  	R95 R96 ; R95 := R96 := nil
	917	[3363]	GETGLOBAL	R97 K93 ; R97 := mRegions
	918	[3363]	GETTABLE 	R97 R97 R92 ; R97 := R97[R92]
	919	[3363]	GETTABLE 	R97 R97 K112 ; R97 := R97["scale"]
	920	[3363]	GETGLOBAL	R98 K93 ; R98 := mRegions
	921	[3363]	GETTABLE 	R98 R98 R92 ; R98 := R98[R92]
	922	[3363]	GETTABLE 	R98 R98 K108 ; R98 := R98["pos"]
	923	[3363]	CALL     	R93 6 1 ; R93(R94,R95,R96,R97,R98)
	924	[3356]	FORLOOP  	R89 883 ; R89 += R91; if R89 <= R90 then begin PC := 883; R92 := R89 end
	925	[3368]	GETUPVAL 	R93 U11 ; R93 := U11
	926	[3368]	GETGLOBAL	R94 K185 ; R94 := 0x6219c21e
	927	[3368]	GETGLOBAL	R95 K186 ; R95 := 0xcdad6709
	928	[3368]	GETTABLE 	R95 R95 K18 ; R95 := R95[1.000000]
	929	[3368]	MOVE     	R96 R88 ; R96 := R88
	930	[3368]	GETGLOBAL	R97 K187 ; R97 := 0x773217b7
	931	[3368]	GETTABLE 	R97 R97 K18 ; R97 := R97[1.000000]
	932	[3368]	TEST     	R97 1 ; if R97 then PC := 935
	933	[3368]	JMP      	935 ; PC := 935
	934	[3368]	LOADK    	R97 K188 ; R97 := 0.060000
	935	[3368]	GETGLOBAL	R98 K93 ; R98 := mRegions
	936	[3368]	GETTABLE 	R98 R98 K85 ; R98 := R98[3.000000]
	937	[3368]	GETTABLE 	R98 R98 K108 ; R98 := R98["pos"]
	938	[3368]	CALL     	R93 6 1 ; R93(R94,R95,R96,R97,R98)
	939	[3369]	GETUPVAL 	R93 U11 ; R93 := U11
	940	[3369]	GETGLOBAL	R94 K185 ; R94 := 0x6219c21e
	941	[3369]	GETGLOBAL	R95 K186 ; R95 := 0xcdad6709
	942	[3369]	GETTABLE 	R95 R95 K144 ; R95 := R95[2.000000]
	943	[3369]	MOVE     	R96 R88 ; R96 := R88
	944	[3369]	GETGLOBAL	R97 K187 ; R97 := 0x773217b7
	945	[3369]	GETTABLE 	R97 R97 K144 ; R97 := R97[2.000000]
	946	[3369]	TEST     	R97 1 ; if R97 then PC := 949
	947	[3369]	JMP      	949 ; PC := 949
	948	[3369]	LOADK    	R97 K188 ; R97 := 0.060000
	949	[3369]	GETGLOBAL	R98 K93 ; R98 := mRegions
	950	[3369]	GETTABLE 	R98 R98 K182 ; R98 := R98[4.000000]
	951	[3369]	GETTABLE 	R98 R98 K108 ; R98 := R98["pos"]
	952	[3369]	CALL     	R93 6 1 ; R93(R94,R95,R96,R97,R98)
	953	[3370]	GETUPVAL 	R93 U11 ; R93 := U11
	954	[3370]	GETGLOBAL	R94 K185 ; R94 := 0x6219c21e
	955	[3370]	GETGLOBAL	R95 K186 ; R95 := 0xcdad6709
	956	[3370]	GETTABLE 	R95 R95 K85 ; R95 := R95[3.000000]
	957	[3370]	MOVE     	R96 R88 ; R96 := R88
	958	[3370]	GETGLOBAL	R97 K187 ; R97 := 0x773217b7
	959	[3370]	GETTABLE 	R97 R97 K85 ; R97 := R97[3.000000]
	960	[3370]	TEST     	R97 1 ; if R97 then PC := 963
	961	[3370]	JMP      	963 ; PC := 963
	962	[3370]	LOADK    	R97 K189 ; R97 := 0.070000
	963	[3370]	GETGLOBAL	R98 K93 ; R98 := mRegions
	964	[3370]	GETTABLE 	R98 R98 K153 ; R98 := R98[5.000000]
	965	[3370]	GETTABLE 	R98 R98 K108 ; R98 := R98["pos"]
	966	[3370]	CALL     	R93 6 1 ; R93(R94,R95,R96,R97,R98)
	967	[3373]	LOADK    	R93 := 4.000000
	968	[3373]	GETGLOBAL	R94 K186 ; R94 := 0xcdad6709
	969	[3373]	LEN      	R94 R94 ; R94 := # R94
	970	[3373]	LOADK    	R95 := 1.000000
	971	[3373]	FORPREP  	R93 988 ; R93 -= R95; PC := 988
	972	[3374]	GETUPVAL 	R97 U11 ; R97 := U11
	973	[3374]	GETGLOBAL	R98 K185 ; R98 := 0x6219c21e
	974	[3374]	GETGLOBAL	R99 K186 ; R99 := 0xcdad6709
	975	[3374]	GETTABLE 	R99 R99 R96 ; R99 := R99[R96]
	976	[3374]	MOVE     	R100 R88 ; R100 := R88
	977	[3374]	GETGLOBAL	R101 K187 ; R101 := 0x773217b7
	978	[3374]	GETTABLE 	R101 R101 R96 ; R101 := R101[R96]
	979	[3374]	TEST     	R101 1 ; if R101 then PC := 987
	980	[3374]	JMP      	987 ; PC := 987
	981	[3374]	GETGLOBAL	R101 K190 ; R101 := 0x5bced4c4
	982	[3374]	GETTABLE 	R101 R101 K191 ; R101 := R101[0x3630e649]
	983	[3374]	LOADK    	R102 := 60.000000
	984	[3374]	LOADK    	R103 := 80.000000
	985	[3374]	CALL     	R101 3 2 ; R101 := R101(R102,R103)
	986	[3374]	DIV      	R101 R101 K192 ; R101 := R101 / 1000.000000
	987	[3374]	CALL     	R97 5 1 ; R97(R98,R99,R100,R101)
	988	[3373]	FORLOOP  	R93 972 ; R93 += R95; if R93 <= R94 then begin PC := 972; R96 := R93 end
	989	[3378]	LOADNIL  	R97 R98 ; R97 := R98 := nil
	990	[3380]	LOADK    	R99 := 0.000000
	991	[3381]	GETGLOBAL	R100 K65 ; R100 := 0x0469f296
	992	[3381]	LOADK    	R101 K193 ; R101 := "PlanetDeco"
	993	[3381]	CALL     	R100 2 2 ; R100 := R100(R101)
	994	[3382]	GETGLOBAL	R101 K6 ; R101 := 0x1211d00f
	995	[3382]	SELF     	R101 R101 K194 ; R102 := R101; R101 := R101[0xfb669000]
	996	[3382]	GETGLOBAL	R103 K185 ; R103 := 0x6219c21e
	997	[3382]	CALL     	R101 3 2 ; R101 := R101(R102,R103)
	998	[3383]	LOADK    	R102 := 1.000000
	999	[3383]	LEN      	R103 R101 ; R103 := # R101
	1000	[3383]	LOADK    	R104 := 1.000000
	1001	[3383]	FORPREP  	R102 1047 ; R102 -= R104; PC := 1047
	1002	[3384]	GETTABLE 	R106 R101 R105 ; R106 := R101[R105]
	1003	[3384]	SELF     	R106 R106 K195 ; R107 := R106; R106 := R106[0xd1586535]
	1004	[3384]	CALL     	R106 2 2 ; R106 := R106(R107)
	1005	[3384]	MOVE     	R98 R106 ; R98 := R106
	1006	[3385]	GETGLOBAL	R106 K6 ; R106 := 0x1211d00f
	1007	[3385]	SELF     	R106 R106 K196 ; R107 := R106; R106 := R106[0xc7b81e8d]
	1008	[3385]	MOVE     	R108 R100 ; R108 := R100
	1009	[3385]	MOVE     	R109 R98 ; R109 := R98
	1010	[3385]	CALL     	R106 4 2 ; R106 := R106(R107,R108,R109)
	1011	[3386]	GETGLOBAL	R107 K4 ; R107 := 0x7b998233
	1012	[3386]	MOVE     	R108 R106 ; R108 := R106
	1013	[3386]	CALL     	R107 2 2 ; R107 := R107(R108)
	1014	[3386]	TEST     	R107 1 ; if R107 then PC := 1047
	1015	[3386]	JMP      	1047 ; PC := 1047
	1016	[3387]	SELF     	R107 R106 K195 ; R108 := R106; R107 := R106[0xd1586535]
	1017	[3387]	CALL     	R107 2 2 ; R107 := R107(R108)
	1018	[3387]	MOVE     	R97 R107 ; R97 := R107
	1019	[3388]	GETGLOBAL	R107 K197 ; R107 := 0x03ea2485
	1020	[3388]	MOVE     	R108 R98 ; R108 := R98
	1021	[3388]	MOVE     	R109 R97 ; R109 := R97
	1022	[3388]	CALL     	R107 3 2 ; R107 := R107(R108,R109)
	1023	[3388]	LT       	0 R107 K198 ; if R107 >= 0.400000 then PC := 1047
	1024	[3388]	JMP      	1047 ; PC := 1047
	1025	[3389]	GETTABLE 	R107 R97 K105 ; R107 := R97["x"]
	1026	[3389]	GETTABLE 	R108 R98 K105 ; R108 := R98["x"]
	1027	[3389]	SUB      	R99 R107 R108 ; R99 := R107 - R108
	1028	[3390]	MUL      	R99 R99 K199 ; R99 := R99 * 15.000000
	1029	[3391]	GETUPVAL 	R107 U10 ; R107 := U10
	1030	[3391]	GETTABLE 	R107 R107 K135 ; R107 := R107[0x06d055f9]
	1031	[3391]	LT       	1 R99 K44 ; if R99 < 0.000000 then PC := 1034
	1032	[3391]	JMP      	1034 ; PC := 1034
	1033	[3391]	OP_LOADBOOL	R108 0 1 ; R108 := false; PC := 1034
	1034	[3391]	OP_LOADBOOL	R108 1 0 ; R108 := true
	1035	[3391]	LOADK    	R109 := 220.000000
	1036	[3391]	LOADK    	R110 := 140.000000
	1037	[3391]	CALL     	R107 4 2 ; R107 := R107(R108,R109,R110)
	1038	[3391]	ADD      	R99 R99 R107 ; R99 := R99 + R107
	1039	[3393]	GETTABLE 	R107 R101 R105 ; R107 := R101[R105]
	1040	[3393]	SELF     	R107 R107 K200 ; R108 := R107; R107 := R107[0x70b8836c]
	1041	[3393]	GETGLOBAL	R109 K143 ; R109 := 0x00046924
	1042	[3393]	MOVE     	R110 R99 ; R110 := R99
	1043	[3393]	LOADK    	R111 := 0.000000
	1044	[3393]	LOADK    	R112 := 0.000000
	1045	[3393]	CALL     	R109 4 0 ; R109,... := R109(R110,R111,R112)
	1046	[3393]	CALL     	R107 0 1 ; R107(R108,...)
	1047	[3383]	FORLOOP  	R102 1002 ; R102 += R104; if R102 <= R103 then begin PC := 1002; R105 := R102 end
	1048	[3399]	GETGLOBAL	R107 K6 ; R107 := 0x1211d00f
	1049	[3399]	SELF     	R107 R107 K201 ; R108 := R107; R107 := R107[0xc7fcada9]
	1050	[3399]	GETGLOBAL	R109 K65 ; R109 := 0x0469f296
	1051	[3399]	LOADK    	R110 K202 ; R110 := "NarmerEffect"
	1052	[3399]	CALL     	R109 2 0 ; R109,... := R109(R110)
	1053	[3399]	CALL     	R107 0 2 ; R107 := R107(R108,...)
	1054	[3400]	LOADK    	R108 := 1.000000
	1055	[3400]	LEN      	R109 R107 ; R109 := # R107
	1056	[3400]	LOADK    	R110 := 1.000000
	1057	[3400]	FORPREP  	R108 1063 ; R108 -= R110; PC := 1063
	1058	[3401]	GETTABLE 	R112 R107 R111 ; R112 := R107[R111]
	1059	[3401]	SELF     	R112 R112 K203 ; R113 := R112; R112 := R112[0x768274d6]
	1060	[3401]	OP_LOADBOOL	R114 1 0 ; R114 := true
	1061	[3401]	OP_LOADBOOL	R115 0 0 ; R115 := false
	1062	[3401]	CALL     	R112 4 1 ; R112(R113,R114,R115)
	1063	[3400]	FORLOOP  	R108 1058 ; R108 += R110; if R108 <= R109 then begin PC := 1058; R111 := R108 end
	1064	[3402]	JMP      	1091 ; PC := 1091
	1065	[3404]	LOADK    	R112 := 1.000000
	1066	[3404]	GETGLOBAL	R113 K204 ; R113 := 0xe4f7a183
	1067	[3404]	LEN      	R113 R113 ; R113 := # R113
	1068	[3404]	LOADK    	R114 := 1.000000
	1069	[3404]	FORPREP  	R112 1090 ; R112 -= R114; PC := 1090
	1070	[3405]	GETUPVAL 	R116 U11 ; R116 := U11
	1071	[3405]	GETGLOBAL	R117 K205 ; R117 := 0xd2808930
	1072	[3405]	GETGLOBAL	R118 K204 ; R118 := 0xe4f7a183
	1073	[3405]	GETTABLE 	R118 R118 R115 ; R118 := R118[R115]
	1074	[3405]	GETGLOBAL	R119 K206 ; R119 := 0xc71aefbb
	1075	[3405]	GETTABLE 	R119 R119 R115 ; R119 := R119[R115]
	1076	[3405]	TEST     	R119 1 ; if R119 then PC := 1079
	1077	[3405]	JMP      	1079 ; PC := 1079
	1078	[3405]	MOVE     	R119 R88 ; R119 := R88
	1079	[3405]	GETGLOBAL	R120 K207 ; R120 := 0xfbbd2cad
	1080	[3405]	GETTABLE 	R120 R120 R115 ; R120 := R120[R115]
	1081	[3405]	TEST     	R120 1 ; if R120 then PC := 1089
	1082	[3405]	JMP      	1089 ; PC := 1089
	1083	[3405]	GETGLOBAL	R120 K190 ; R120 := 0x5bced4c4
	1084	[3405]	GETTABLE 	R120 R120 K191 ; R120 := R120[0x3630e649]
	1085	[3405]	LOADK    	R121 := 60.000000
	1086	[3405]	LOADK    	R122 := 80.000000
	1087	[3405]	CALL     	R120 3 2 ; R120 := R120(R121,R122)
	1088	[3405]	DIV      	R120 R120 K192 ; R120 := R120 / 1000.000000
	1089	[3405]	CALL     	R116 5 1 ; R116(R117,R118,R119,R120)
	1090	[3404]	FORLOOP  	R112 1070 ; R112 += R114; if R112 <= R113 then begin PC := 1070; R115 := R112 end
	1091	[3409]	GETGLOBAL	R116 K93 ; R116 := mRegions
	1092	[3409]	GETUPVAL 	R117 U3 ; R117 := U3
	1093	[3409]	GETTABLE 	R117 R117 K54 ; R117 := R117["REGION_ID_ZARIMAN"]
	1094	[3409]	GETTABLE 	R116 R116 R117 ; R116 := R116[R117]
	1095	[3409]	EQ       	1 R116 K0 ; if R116 == nil then PC := 1206
	1096	[3409]	JMP      	1206 ; PC := 1206
	1097	[3409]	GETUPVAL 	R116 U9 ; R116 := U9
	1098	[3409]	GETUPVAL 	R117 U3 ; R117 := U3
	1099	[3409]	GETTABLE 	R117 R117 K54 ; R117 := R117["REGION_ID_ZARIMAN"]
	1100	[3409]	GETTABLE 	R116 R116 R117 ; R116 := R116[R117]
	1101	[3409]	EQ       	1 R116 K87 ; if R116 == true then PC := 1206
	1102	[3409]	JMP      	1206 ; PC := 1206
	1103	[3410]	GETGLOBAL	R116 K93 ; R116 := mRegions
	1104	[3410]	GETUPVAL 	R117 U3 ; R117 := U3
	1105	[3410]	GETTABLE 	R117 R117 K54 ; R117 := R117["REGION_ID_ZARIMAN"]
	1106	[3410]	GETTABLE 	R116 R116 R117 ; R116 := R116[R117]
	1107	[3410]	GETTABLE 	R116 R116 K108 ; R116 := R116["pos"]
	1108	[3411]	GETGLOBAL	R117 K109 ; R117 := 0xa421af95
	1109	[3411]	LOADK    	R118 K208 ; R118 := -0.450000
	1110	[3411]	LOADK    	R119 := 0.000000
	1111	[3411]	LOADK    	R120 := 1.500000
	1112	[3411]	CALL     	R117 4 2 ; R117 := R117(R118,R119,R120)
	1113	[3412]	GETGLOBAL	R118 K109 ; R118 := 0xa421af95
	1114	[3412]	LOADK    	R119 K209 ; R119 := 0.600000
	1115	[3412]	LOADK    	R120 K210 ; R120 := -0.090000
	1116	[3412]	LOADK    	R121 K211 ; R121 := -0.010000
	1117	[3412]	CALL     	R118 4 2 ; R118 := R118(R119,R120,R121)
	1118	[3413]	ADD      	R119 R117 R118 ; R119 := R117 + R118
	1119	[3413]	DIV      	R119 R119 K144 ; R119 := R119 / 2.000000
	1120	[3414]	SUB      	R120 R117 R119 ; R120 := R117 - R119
	1121	[3415]	ADD      	R119 R119 R116 ; R119 := R119 + R116
	1122	[3416]	LOADK    	R121 := 45.000000
	1123	[3417]	MOVE     	R122 R121 ; R122 := R121
	1124	[3418]	GETGLOBAL	R123 K212 ; R123 := 0x20b7f774
	1125	[3418]	GETGLOBAL	R124 K213 ; R124 := ZERO_VECTOR
	1126	[3418]	MOVE     	R125 R120 ; R125 := R120
	1127	[3418]	CALL     	R123 3 2 ; R123 := R123(R124,R125)
	1128	[3419]	GETGLOBAL	R124 K214 ; R124 := 0x20e8ca12
	1129	[3419]	MOVE     	R125 R123 ; R125 := R123
	1130	[3419]	GETGLOBAL	R126 K143 ; R126 := 0x00046924
	1131	[3419]	ADD      	R127 R122 K215 ; R127 := R122 + 180.000000
	1132	[3419]	LOADK    	R128 := 0.000000
	1133	[3419]	LOADK    	R129 := 0.000000
	1134	[3419]	CALL     	R126 4 0 ; R126,... := R126(R127,R128,R129)
	1135	[3419]	CALL     	R124 0 2 ; R124 := R124(R125,...)
	1136	[3420]	GETGLOBAL	R125 K214 ; R125 := 0x20e8ca12
	1137	[3420]	MOVE     	R126 R123 ; R126 := R123
	1138	[3420]	GETGLOBAL	R127 K143 ; R127 := 0x00046924
	1139	[3420]	MOVE     	R128 R122 ; R128 := R122
	1140	[3420]	LOADK    	R129 := 0.000000
	1141	[3420]	LOADK    	R130 := 0.000000
	1142	[3420]	CALL     	R127 4 0 ; R127,... := R127(R128,R129,R130)
	1143	[3420]	CALL     	R125 0 2 ; R125 := R125(R126,...)
	1144	[3421]	GETGLOBAL	R126 K109 ; R126 := 0xa421af95
	1145	[3421]	LOADK    	R127 := 0.000000
	1146	[3421]	LOADK    	R128 := 0.000000
	1147	[3421]	GETGLOBAL	R129 K216 ; R129 := 0xae2294fa
	1148	[3421]	MOVE     	R130 R120 ; R130 := R120
	1149	[3421]	CALL     	R129 2 0 ; R129,... := R129(R130)
	1150	[3421]	CALL     	R126 0 2 ; R126 := R126(R127,...)
	1151	[3421]	MOVE     	R120 R126 ; R120 := R126
	1152	[3422]	GETUPVAL 	R126 U11 ; R126 := U11
	1153	[3422]	GETGLOBAL	R127 K217 ; R127 := 0x04fca33f
	1154	[3422]	MOVE     	R128 R116 ; R128 := R116
	1155	[3422]	GETGLOBAL	R129 K218 ; R129 := ZERO_ROTATION
	1156	[3422]	LOADK    	R130 K188 ; R130 := 0.060000
	1157	[3422]	CALL     	R126 5 2 ; R126 := R126(R127,R128,R129,R130)
	1158	[3423]	LOADNIL  	R127 R127 ; R127 := nil
	1159	[3424]	GETGLOBAL	R128 K15 ; R128 := 0x25d99d89
	1160	[3424]	SELF     	R128 R128 K219 ; R129 := R128; R128 := R128[0x25a6e75e]
	1161	[3424]	CALL     	R128 2 2 ; R128 := R128(R129)
	1162	[3424]	SELF     	R128 R128 K14 ; R129 := R128; R128 := R128[0x8e7c3b5e]
	1163	[3424]	CALL     	R128 2 2 ; R128 := R128(R129)
	1164	[3424]	GETUPVAL 	R129 U4 ; R129 := U4
	1165	[3424]	GETTABLE 	R129 R129 K46 ; R129 := R129["zarimanIntroQuest"]
	1166	[3424]	EQ       	1 R128 R129 ; if R128 == R129 then PC := 1169
	1167	[3424]	JMP      	1169 ; PC := 1169
	1168	[3424]	OP_LOADBOOL	R128 0 1 ; R128 := false; PC := 1169
	1169	[3424]	OP_LOADBOOL	R128 1 0 ; R128 := true
	1170	[3425]	TEST     	R128 1 ; if R128 then PC := 1179
	1171	[3425]	JMP      	1179 ; PC := 1179
	1172	[3427]	GETUPVAL 	R129 U11 ; R129 := U11
	1173	[3427]	GETGLOBAL	R130 K220 ; R130 := 0xa8104d35
	1174	[3427]	MOVE     	R131 R116 ; R131 := R116
	1175	[3427]	GETGLOBAL	R132 K218 ; R132 := ZERO_ROTATION
	1176	[3427]	LOADK    	R133 K221 ; R133 := 0.100000
	1177	[3427]	CALL     	R129 5 2 ; R129 := R129(R130,R131,R132,R133)
	1178	[3427]	MOVE     	R127 R129 ; R127 := R129
	1179	[3429]	LOADK    	R129 := 0.000000
	1180	[3443]	CLOSURE  	R130 0 ; R130 := closure(Function #1)
	1181	[3443]	MOVE     	R0 R122 ; R0 := R122
	1182	[3443]	MOVE     	R0 R121 ; R0 := R121
	1183	[3443]	MOVE     	R0 R124 ; R0 := R124
	1184	[3443]	MOVE     	R0 R123 ; R0 := R123
	1185	[3443]	MOVE     	R0 R125 ; R0 := R125
	1186	[3443]	MOVE     	R0 R119 ; R0 := R119
	1187	[3443]	MOVE     	R0 R120 ; R0 := R120
	1188	[3443]	MOVE     	R0 R126 ; R0 := R126
	1189	[3443]	MOVE     	R0 R127 ; R0 := R127
	1190	[3445]	TEST     	R128 1 ; if R128 then PC := 1198
	1191	[3445]	JMP      	1198 ; PC := 1198
	1192	[3454]	CLOSURE  	R131 1 ; R131 := closure(Function #2)
	1193	[3454]	MOVE     	R0 R129 ; R0 := R129
	1194	[3454]	MOVE     	R0 R121 ; R0 := R121
	1195	[3454]	MOVE     	R0 R122 ; R0 := R122
	1196	[3454]	MOVE     	R0 R130 ; R0 := R130
	1197	[3454]	SETUPVAL 	R131 U12 ; U12 := R131
	1198	[3457]	GETGLOBAL	R131 K11 ; R131 := _T
	1199	[3457]	CLOSURE  	R132 2 ; R132 := closure(Function #3)
	1200	[3457]	MOVE     	R0 R129 ; R0 := R129
	1201	[3457]	SETTABLE 	R131 K222 R132 ; R131["ClearActiveFaction"] := R132
	1202	[3459]	MOVE     	R131 R130 ; R131 := R130
	1203	[3459]	LOADK    	R132 := 0.000000
	1204	[3459]	CALL     	R131 2 1 ; R131(R132)
	1205	[3459]	CLOSE    	R116 ; SAVE R116,...
	1206	[3463]	GETUPVAL 	R116 U13 ; R116 := U13
	1207	[3463]	CALL     	R116 1 1 ; R116()
	1208	[3466]	RETURN   	R0 1 ; return 

function #66 <?:3468,3476> (22 instructions, 88 bytes at 000002111345A6B0)
1 param, 14 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[3469]	GETTABLE 	R1 R0 K0 ; R1 := R0["NodeA"]
	2	[3469]	GETTABLE 	R1 R1 K1 ; R1 := R1["position"]
	3	[3470]	GETTABLE 	R2 R0 K0 ; R2 := R0["NodeA"]
	4	[3470]	GETTABLE 	R2 R2 K1 ; R2 := R2["position"]
	5	[3471]	GETTABLE 	R3 R0 K2 ; R3 := R0["controlPointA"]
	6	[3471]	GETTABLE 	R3 R3 K1 ; R3 := R3["position"]
	7	[3472]	GETTABLE 	R4 R0 K3 ; R4 := R0["controlPointB"]
	8	[3472]	GETTABLE 	R4 R4 K1 ; R4 := R4["position"]
	9	[3473]	GETTABLE 	R5 R0 K4 ; R5 := R0["NodeB"]
	10	[3473]	GETTABLE 	R5 R5 K1 ; R5 := R5["position"]
	11	[3474]	GETTABLE 	R6 R0 K4 ; R6 := R0["NodeB"]
	12	[3474]	GETTABLE 	R6 R6 K1 ; R6 := R6["position"]
	13	[3475]	NEWTABLE 	R7 6 0 ; R7 := {}
	14	[3475]	MOVE     	R8 R1 ; R8 := R1
	15	[3475]	MOVE     	R9 R2 ; R9 := R2
	16	[3475]	MOVE     	R10 R3 ; R10 := R3
	17	[3475]	MOVE     	R11 R4 ; R11 := R4
	18	[3475]	MOVE     	R12 R5 ; R12 := R5
	19	[3475]	MOVE     	R13 R6 ; R13 := R6
	20	[3475]	SETLIST  	R7 6 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 6
	21	[3475]	RETURN   	R7 2 ; return R7 
	22	[3476]	RETURN   	R0 1 ; return 

function #67 <?:3478,3488> (29 instructions, 116 bytes at 000002111345A880)
5 params, 13 slots, 0 upvalues, 0 locals, 10 constants, 0 functions
	1	[3479]	GETGLOBAL	R5 K0 ; R5 := 0xa421af95
	2	[3479]	CALL     	R5 1 2 ; R5 := R5()
	3	[3480]	GETGLOBAL	R6 K1 ; R6 := 0x83ddcc65
	4	[3480]	MOVE     	R7 R5 ; R7 := R5
	5	[3480]	GETTABLE 	R8 R2 K2 ; R8 := R2["position"]
	6	[3480]	GETTABLE 	R9 R1 K2 ; R9 := R1["position"]
	7	[3480]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	8	[3481]	GETGLOBAL	R6 K3 ; R6 := 0x808dc004
	9	[3481]	MOVE     	R7 R5 ; R7 := R5
	10	[3481]	GETTABLE 	R8 R1 K2 ; R8 := R1["position"]
	11	[3481]	MUL      	R9 R5 R0 ; R9 := R5 * R0
	12	[3481]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	13	[3482]	GETGLOBAL	R6 K4 ; R6 := 0x20b7f774
	14	[3482]	MOVE     	R7 R3 ; R7 := R3
	15	[3482]	MOVE     	R8 R5 ; R8 := R5
	16	[3482]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	17	[3483]	SETTABLE 	R5 K5 K6 ; R5["x"] := 0.000000
	18	[3484]	SETTABLE 	R5 K7 K6 ; R5["y"] := 0.000000
	19	[3485]	SETTABLE 	R5 K8 R4 ; R5["z"] := R4
	20	[3486]	GETGLOBAL	R7 K3 ; R7 := 0x808dc004
	21	[3486]	MOVE     	R8 R5 ; R8 := R5
	22	[3486]	MOVE     	R9 R3 ; R9 := R3
	23	[3486]	GETGLOBAL	R10 K9 ; R10 := 0x492c7f2a
	24	[3486]	MOVE     	R11 R5 ; R11 := R5
	25	[3486]	MOVE     	R12 R6 ; R12 := R6
	26	[3486]	CALL     	R10 3 0 ; R10,... := R10(R11,R12)
	27	[3486]	CALL     	R7 0 1 ; R7(R8,...)
	28	[3487]	RETURN   	R5 2 ; return R5 
	29	[3488]	RETURN   	R0 1 ; return 

function #68 <?:3490,3525> (66 instructions, 264 bytes at 00000211191DA2A0)
2 params, 17 slots, 1 upvalue, 0 locals, 10 constants, 0 functions
	1	[3491]	GETGLOBAL	R2 K0 ; R2 := 0xce225efa
	2	[3491]	LOADK    	R3 := 0.000000
	3	[3491]	CALL     	R2 2 1 ; R2(R3)
	4	[3492]	LOADNIL  	R2 R2 ; R2 := nil
	5	[3493]	GETTABLE 	R3 R0 K1 ; R3 := R0["position"]
	6	[3493]	GETTABLE 	R4 R1 K1 ; R4 := R1["position"]
	7	[3493]	SUB      	R3 R3 R4 ; R3 := R3 - R4
	8	[3494]	GETGLOBAL	R4 K2 ; R4 := 0xc2892f65
	9	[3494]	MOVE     	R5 R3 ; R5 := R3
	10	[3494]	CALL     	R4 2 1 ; R4(R5)
	11	[3495]	LOADK    	R4 := 10.000000
	12	[3497]	LOADNIL  	R5 R5 ; R5 := nil
	13	[3498]	LOADK    	R6 := 1.000000
	14	[3498]	GETTABLE 	R7 R0 K3 ; R7 := R0["RelatedNodes"]
	15	[3498]	LEN      	R7 R7 ; R7 := # R7
	16	[3498]	LOADK    	R8 := 1.000000
	17	[3498]	FORPREP  	R6 44 ; R6 -= R8; PC := 44
	18	[3499]	GETTABLE 	R10 R0 K3 ; R10 := R0["RelatedNodes"]
	19	[3499]	GETTABLE 	R10 R10 R9 ; R10 := R10[R9]
	20	[3500]	GETTABLE 	R11 R1 K4 ; R11 := R1["name"]
	21	[3500]	EQ       	1 R10 R11 ; if R10 == R11 then PC := 44
	22	[3500]	JMP      	44 ; PC := 44
	23	[3501]	GETUPVAL 	R11 U0 ; R11 := U0
	24	[3501]	GETGLOBAL	R12 K5 ; R12 := 0x64fb1586
	25	[3501]	MOVE     	R13 R10 ; R13 := R10
	26	[3501]	CALL     	R12 2 2 ; R12 := R12(R13)
	27	[3501]	GETTABLE 	R11 R11 R12 ; R11 := R11[R12]
	28	[3503]	EQ       	1 R11 K6 ; if R11 == nil then PC := 44
	29	[3503]	JMP      	44 ; PC := 44
	30	[3504]	GETTABLE 	R12 R0 K1 ; R12 := R0["position"]
	31	[3504]	GETTABLE 	R13 R11 K1 ; R13 := R11["position"]
	32	[3504]	SUB      	R5 R12 R13 ; R5 := R12 - R13
	33	[3505]	GETGLOBAL	R12 K2 ; R12 := 0xc2892f65
	34	[3505]	MOVE     	R13 R5 ; R13 := R5
	35	[3505]	CALL     	R12 2 1 ; R12(R13)
	36	[3506]	GETGLOBAL	R12 K7 ; R12 := 0x4fd57545
	37	[3506]	MOVE     	R13 R3 ; R13 := R3
	38	[3506]	MOVE     	R14 R5 ; R14 := R5
	39	[3506]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	40	[3507]	LT       	0 R12 R4 ; if R12 >= R4 then PC := 44
	41	[3507]	JMP      	44 ; PC := 44
	42	[3508]	MOVE     	R4 R12 ; R4 := R12
	43	[3509]	MOVE     	R2 R11 ; R2 := R11
	44	[3498]	FORLOOP  	R6 18 ; R6 += R8; if R6 <= R7 then begin PC := 18; R9 := R6 end
	45	[3514]	EQ       	1 R2 K6 ; if R2 == nil then PC := 64
	46	[3514]	JMP      	64 ; PC := 64
	47	[3515]	GETTABLE 	R13 R2 K1 ; R13 := R2["position"]
	48	[3516]	GETTABLE 	R14 R0 K8 ; R14 := R0["isShortcut"]
	49	[3516]	TEST     	R14 0 ; if not R14 then PC := 62
	50	[3516]	JMP      	62 ; PC := 62
	51	[3516]	GETTABLE 	R14 R2 K8 ; R14 := R2["isShortcut"]
	52	[3516]	TEST     	R14 0 ; if not R14 then PC := 62
	53	[3516]	JMP      	62 ; PC := 62
	54	[3517]	GETTABLE 	R14 R0 K1 ; R14 := R0["position"]
	55	[3517]	SUB      	R14 R13 R14 ; R14 := R13 - R14
	56	[3518]	GETGLOBAL	R15 K2 ; R15 := 0xc2892f65
	57	[3518]	MOVE     	R16 R14 ; R16 := R14
	58	[3518]	CALL     	R15 2 1 ; R15(R16)
	59	[3519]	GETTABLE 	R15 R0 K1 ; R15 := R0["position"]
	60	[3519]	MUL      	R16 R14 K9 ; R16 := R14 * 0.050000
	61	[3519]	ADD      	R13 R15 R16 ; R13 := R15 + R16
	62	[3521]	RETURN   	R13 2 ; return R13 
	63	[3521]	JMP      	66 ; PC := 66
	64	[3523]	LOADNIL  	R15 R15 ; R15 := nil
	65	[3523]	RETURN   	R15 2 ; return R15 
	66	[3525]	RETURN   	R0 1 ; return 

function #69 <?:3527,3559> (105 instructions, 420 bytes at 00000211191DA660)
1 param, 15 slots, 3 upvalues, 0 locals, 22 constants, 0 functions
	1	[3528]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[3528]	GETTABLE 	R2 R0 K1 ; R2 := R0["Instance"]
	3	[3528]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[3528]	TEST     	R1 1 ; if R1 then PC := 105
	5	[3528]	JMP      	105 ; PC := 105
	6	[3529]	GETGLOBAL	R1 K2 ; R1 := 0xa421af95
	7	[3529]	CALL     	R1 1 2 ; R1 := R1()
	8	[3530]	GETTABLE 	R2 R0 K4 ; R2 := R0["NodeA"]
	9	[3530]	GETTABLE 	R2 R2 K5 ; R2 := R2["isSurfaceNode"]
	10	[3530]	TEST     	R2 0 ; if not R2 then PC := 14
	11	[3530]	JMP      	14 ; PC := 14
	12	[3530]	GETTABLE 	R2 R0 K6 ; R2 := R0["NodeB"]
	13	[3530]	GETTABLE 	R2 R2 K5 ; R2 := R2["isSurfaceNode"]
	14	[3530]	SETTABLE 	R0 K3 R2 ; R0["IsSurfaceConnection"] := R2
	15	[3531]	GETGLOBAL	R2 K7 ; R2 := mRegionInstances
	16	[3531]	GETTABLE 	R3 R0 K4 ; R3 := R0["NodeA"]
	17	[3531]	GETTABLE 	R3 R3 K8 ; R3 := R3["radialSector"]
	18	[3531]	GETTABLE 	R3 R3 K9 ; R3 := R3["region"]
	19	[3531]	ADD      	R3 R3 K10 ; R3 := R3 + 1.000000
	20	[3531]	GETTABLE 	R2 R2 R3 ; R2 := R2[R3]
	21	[3532]	GETGLOBAL	R3 K11 ; R3 := mRegionRadius
	22	[3532]	GETTABLE 	R4 R0 K4 ; R4 := R0["NodeA"]
	23	[3532]	GETTABLE 	R4 R4 K8 ; R4 := R4["radialSector"]
	24	[3532]	GETTABLE 	R4 R4 K9 ; R4 := R4["region"]
	25	[3532]	ADD      	R4 R4 K10 ; R4 := R4 + 1.000000
	26	[3532]	GETTABLE 	R3 R3 R4 ; R3 := R3[R4]
	27	[3533]	SELF     	R4 R2 K12 ; R5 := R2; R4 := R2[0x4078bbf8]
	28	[3533]	MOVE     	R6 R1 ; R6 := R1
	29	[3533]	CALL     	R4 3 1 ; R4(R5,R6)
	30	[3535]	GETTABLE 	R4 R0 K3 ; R4 := R0["IsSurfaceConnection"]
	31	[3535]	TEST     	R4 0 ; if not R4 then PC := 45
	32	[3535]	JMP      	45 ; PC := 45
	33	[3536]	GETTABLE 	R4 R0 K1 ; R4 := R0["Instance"]
	34	[3536]	SELF     	R4 R4 K13 ; R5 := R4; R4 := R4[0x574c6468]
	35	[3536]	GETGLOBAL	R6 K14 ; R6 := mRegions
	36	[3536]	GETTABLE 	R7 R0 K4 ; R7 := R0["NodeA"]
	37	[3536]	GETTABLE 	R7 R7 K8 ; R7 := R7["radialSector"]
	38	[3536]	GETTABLE 	R7 R7 K9 ; R7 := R7["region"]
	39	[3536]	ADD      	R7 R7 K10 ; R7 := R7 + 1.000000
	40	[3536]	GETTABLE 	R6 R6 R7 ; R6 := R6[R7]
	41	[3536]	GETTABLE 	R6 R6 K15 ; R6 := R6["pos"]
	42	[3536]	MOVE     	R7 R3 ; R7 := R3
	43	[3536]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	44	[3536]	JMP      	50 ; PC := 50
	45	[3538]	GETTABLE 	R4 R0 K1 ; R4 := R0["Instance"]
	46	[3538]	SELF     	R4 R4 K13 ; R5 := R4; R4 := R4[0x574c6468]
	47	[3538]	GETGLOBAL	R6 K16 ; R6 := ZERO_VECTOR
	48	[3538]	LOADK    	R7 := 0.000000
	49	[3538]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	50	[3541]	GETTABLE 	R4 R0 K4 ; R4 := R0["NodeA"]
	51	[3541]	GETTABLE 	R4 R4 K17 ; R4 := R4["isShortcut"]
	52	[3541]	TEST     	R4 0 ; if not R4 then PC := 66
	53	[3541]	JMP      	66 ; PC := 66
	54	[3541]	GETTABLE 	R4 R0 K6 ; R4 := R0["NodeB"]
	55	[3541]	GETTABLE 	R4 R4 K17 ; R4 := R4["isShortcut"]
	56	[3541]	TEST     	R4 0 ; if not R4 then PC := 66
	57	[3541]	JMP      	66 ; PC := 66
	58	[3542]	GETUPVAL 	R4 U0 ; R4 := U0
	59	[3542]	MOVE     	R5 R0 ; R5 := R0
	60	[3542]	CALL     	R4 2 2 ; R4 := R4(R5)
	61	[3543]	GETTABLE 	R5 R0 K1 ; R5 := R0["Instance"]
	62	[3543]	SELF     	R5 R5 K18 ; R6 := R5; R5 := R5[0x7ceafc23]
	63	[3543]	MOVE     	R7 R4 ; R7 := R4
	64	[3543]	CALL     	R5 3 1 ; R5(R6,R7)
	65	[3543]	JMP      	105 ; PC := 105
	66	[3545]	GETUPVAL 	R5 U1 ; R5 := U1
	67	[3545]	GETTABLE 	R6 R0 K4 ; R6 := R0["NodeA"]
	68	[3545]	GETTABLE 	R7 R0 K6 ; R7 := R0["NodeB"]
	69	[3545]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	70	[3546]	EQ       	0 R5 K19 ; if R5 ~= nil then PC := 80
	71	[3546]	JMP      	80 ; PC := 80
	72	[3547]	GETUPVAL 	R6 U2 ; R6 := U2
	73	[3547]	LOADK    	R7 := -1.000000
	74	[3547]	GETTABLE 	R8 R0 K4 ; R8 := R0["NodeA"]
	75	[3547]	GETTABLE 	R9 R0 K6 ; R9 := R0["NodeB"]
	76	[3547]	MOVE     	R10 R1 ; R10 := R1
	77	[3547]	MOVE     	R11 R3 ; R11 := R3
	78	[3547]	CALL     	R6 6 2 ; R6 := R6(R7,R8,R9,R10,R11)
	79	[3547]	MOVE     	R5 R6 ; R5 := R6
	80	[3549]	GETTABLE 	R6 R0 K4 ; R6 := R0["NodeA"]
	81	[3549]	GETTABLE 	R6 R6 K20 ; R6 := R6["position"]
	82	[3550]	GETTABLE 	R7 R0 K6 ; R7 := R0["NodeB"]
	83	[3550]	GETTABLE 	R7 R7 K20 ; R7 := R7["position"]
	84	[3551]	GETUPVAL 	R8 U1 ; R8 := U1
	85	[3551]	GETTABLE 	R9 R0 K6 ; R9 := R0["NodeB"]
	86	[3551]	GETTABLE 	R10 R0 K4 ; R10 := R0["NodeA"]
	87	[3551]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	88	[3552]	EQ       	0 R8 K19 ; if R8 ~= nil then PC := 98
	89	[3552]	JMP      	98 ; PC := 98
	90	[3553]	GETUPVAL 	R9 U2 ; R9 := U2
	91	[3553]	LOADK    	R10 := 2.000000
	92	[3553]	GETTABLE 	R11 R0 K4 ; R11 := R0["NodeA"]
	93	[3553]	GETTABLE 	R12 R0 K6 ; R12 := R0["NodeB"]
	94	[3553]	MOVE     	R13 R1 ; R13 := R1
	95	[3553]	MOVE     	R14 R3 ; R14 := R3
	96	[3553]	CALL     	R9 6 2 ; R9 := R9(R10,R11,R12,R13,R14)
	97	[3553]	MOVE     	R8 R9 ; R8 := R9
	98	[3556]	GETTABLE 	R9 R0 K1 ; R9 := R0["Instance"]
	99	[3556]	SELF     	R9 R9 K21 ; R10 := R9; R9 := R9[0x4269a0d7]
	100	[3556]	MOVE     	R11 R5 ; R11 := R5
	101	[3556]	MOVE     	R12 R6 ; R12 := R6
	102	[3556]	MOVE     	R13 R7 ; R13 := R7
	103	[3556]	MOVE     	R14 R8 ; R14 := R8
	104	[3556]	CALL     	R9 6 1 ; R9(R10,R11,R12,R13,R14)
	105	[3559]	RETURN   	R0 1 ; return 

function #70 <?:3561,3632> (215 instructions, 860 bytes at 00000211191DAC20)
0 params, 20 slots, 3 upvalues, 0 locals, 43 constants, 0 functions
	1	[3562]	GETGLOBAL	R0 K1 ; R0 := mRadialSolarMap
	2	[3562]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xb4b2b7b0]
	3	[3562]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[3562]	SETGLOBALHASH	R0 K0 ; mMapEdges := R0
	5	[3564]	GETGLOBAL	R0 K3 ; R0 := 0xc8802016
	6	[3564]	GETGLOBAL	R1 K4 ; R1 := mFlatEdges
	7	[3564]	CALL     	R0 2 4 ; R0,R1,R2 := R0(R1)
	8	[3564]	JMP      	13 ; PC := 13
	9	[3565]	GETGLOBAL	R5 K5 ; R5 := 0x1211d00f
	10	[3565]	SELF     	R5 R5 K6 ; R6 := R5; R5 := R5[0x59c96e77]
	11	[3565]	GETTABLE 	R7 R4 K7 ; R7 := R4["mInstance"]
	12	[3565]	CALL     	R5 3 1 ; R5(R6,R7)
	13	[3564]	TFORLOOP 	R0 2 ; R3,R4 := R0(R1,R2); if R3 ~= nil then begin PC = 9; R2 := R3 end
	14	[3565]	JMP      	9 ; PC := 9
	15	[3568]	NEWTABLE 	R5 0 0 ; R5 := {}
	16	[3568]	SETGLOBALHASH	R5 K4 ; mFlatEdges := R5
	17	[3569]	NEWTABLE 	R5 0 0 ; R5 := {}
	18	[3569]	SETGLOBALHASH	R5 K8 ; mMovingEdgeIndices := R5
	19	[3571]	LOADK    	R5 := 0.000000
	20	[3572]	LOADK    	R6 := 0.000000
	21	[3573]	LOADNIL  	R7 R8 ; R7 := R8 := nil
	22	[3576]	LOADK    	R9 := 1.000000
	23	[3576]	GETGLOBAL	R10 K0 ; R10 := mMapEdges
	24	[3576]	LEN      	R10 R10 ; R10 := # R10
	25	[3576]	LOADK    	R11 := 1.000000
	26	[3576]	FORPREP  	R9 214 ; R9 -= R11; PC := 214
	27	[3577]	GETUPVAL 	R13 U0 ; R13 := U0
	28	[3577]	GETGLOBAL	R14 K9 ; R14 := 0x64fb1586
	29	[3577]	GETGLOBAL	R15 K0 ; R15 := mMapEdges
	30	[3577]	GETTABLE 	R15 R15 R12 ; R15 := R15[R12]
	31	[3577]	GETTABLE 	R15 R15 K10 ; R15 := R15["locationA"]
	32	[3577]	CALL     	R14 2 2 ; R14 := R14(R15)
	33	[3577]	GETTABLE 	R7 R13 R14 ; R7 := R13[R14]
	34	[3578]	GETUPVAL 	R13 U0 ; R13 := U0
	35	[3578]	GETGLOBAL	R14 K9 ; R14 := 0x64fb1586
	36	[3578]	GETGLOBAL	R15 K0 ; R15 := mMapEdges
	37	[3578]	GETTABLE 	R15 R15 R12 ; R15 := R15[R12]
	38	[3578]	GETTABLE 	R15 R15 K11 ; R15 := R15["locationB"]
	39	[3578]	CALL     	R14 2 2 ; R14 := R14(R15)
	40	[3578]	GETTABLE 	R8 R13 R14 ; R8 := R13[R14]
	41	[3580]	GETGLOBAL	R13 K12 ; R13 := 0x7b998233
	42	[3580]	MOVE     	R14 R7 ; R14 := R7
	43	[3580]	CALL     	R13 2 2 ; R13 := R13(R14)
	44	[3580]	TEST     	R13 1 ; if R13 then PC := 65
	45	[3580]	JMP      	65 ; PC := 65
	46	[3580]	GETGLOBAL	R13 K12 ; R13 := 0x7b998233
	47	[3580]	MOVE     	R14 R8 ; R14 := R8
	48	[3580]	CALL     	R13 2 2 ; R13 := R13(R14)
	49	[3580]	TEST     	R13 1 ; if R13 then PC := 65
	50	[3580]	JMP      	65 ; PC := 65
	51	[3580]	GETTABLE 	R13 R7 K13 ; R13 := R7["destroyed"]
	52	[3580]	TEST     	R13 1 ; if R13 then PC := 65
	53	[3580]	JMP      	65 ; PC := 65
	54	[3580]	GETTABLE 	R13 R8 K13 ; R13 := R8["destroyed"]
	55	[3580]	TEST     	R13 1 ; if R13 then PC := 65
	56	[3580]	JMP      	65 ; PC := 65
	57	[3580]	GETTABLE 	R13 R7 K14 ; R13 := R7["locationEnabled"]
	58	[3580]	EQ       	1 R13 K15 ; if R13 == false then PC := 64
	59	[3580]	JMP      	64 ; PC := 64
	60	[3580]	GETTABLE 	R13 R8 K14 ; R13 := R8["locationEnabled"]
	61	[3580]	EQ       	1 R13 K15 ; if R13 == false then PC := 64
	62	[3580]	JMP      	64 ; PC := 64
	63	[3580]	OP_LOADBOOL	R13 0 1 ; R13 := false; PC := 64
	64	[3580]	OP_LOADBOOL	R13 1 0 ; R13 := true
	65	[3589]	TEST     	R13 1 ; if R13 then PC := 196
	66	[3589]	JMP      	196 ; PC := 196
	67	[3590]	ADD      	R5 R5 K16 ; R5 := R5 + 1.000000
	68	[3592]	GETUPVAL 	R14 U1 ; R14 := U1
	69	[3592]	GETTABLE 	R14 R14 K17 ; R14 := R14["Sectors"]
	70	[3592]	GETGLOBAL	R15 K9 ; R15 := 0x64fb1586
	71	[3592]	GETTABLE 	R16 R7 K18 ; R16 := R7["name"]
	72	[3592]	CALL     	R15 2 2 ; R15 := R15(R16)
	73	[3592]	GETTABLE 	R14 R14 R15 ; R14 := R14[R15]
	74	[3592]	EQ       	0 R14 K19 ; if R14 ~= nil then PC := 84
	75	[3592]	JMP      	84 ; PC := 84
	76	[3592]	GETUPVAL 	R14 U1 ; R14 := U1
	77	[3592]	GETTABLE 	R14 R14 K17 ; R14 := R14["Sectors"]
	78	[3592]	GETGLOBAL	R15 K9 ; R15 := 0x64fb1586
	79	[3592]	GETTABLE 	R16 R8 K18 ; R16 := R8["name"]
	80	[3592]	CALL     	R15 2 2 ; R15 := R15(R16)
	81	[3592]	GETTABLE 	R14 R14 R15 ; R14 := R14[R15]
	82	[3592]	EQ       	1 R14 K19 ; if R14 == nil then PC := 87
	83	[3592]	JMP      	87 ; PC := 87
	84	[3593]	ADD      	R6 R6 K16 ; R6 := R6 + 1.000000
	85	[3594]	GETGLOBAL	R14 K8 ; R14 := mMovingEdgeIndices
	86	[3594]	SETTABLE 	R14 R6 R5 ; R14[R6] := R5
	87	[3597]	GETGLOBAL	R14 K4 ; R14 := mFlatEdges
	88	[3597]	NEWTABLE 	R15 0 4 ; R15 := {}
	89	[3598]	SETTABLE 	R15 K20 R7 ; R15[0x34291f5c] := R7
	90	[3599]	SETTABLE 	R15 K21 R8 ; R15[0x397b920f] := R8
	91	[3600]	GETTABLE 	R16 R7 K23 ; R16 := R7["isShortcut"]
	92	[3600]	TEST     	R16 0 ; if not R16 then PC := 95
	93	[3600]	JMP      	95 ; PC := 95
	94	[3600]	GETTABLE 	R16 R8 K23 ; R16 := R8["isShortcut"]
	95	[3600]	SETTABLE 	R15 K22 R16 ; R15["IsShortcut"] := R16
	96	[3601]	GETTABLE 	R16 R7 K25 ; R16 := R7["isJunction"]
	97	[3601]	TEST     	R16 0 ; if not R16 then PC := 102
	98	[3601]	JMP      	102 ; PC := 102
	99	[3601]	GETTABLE 	R16 R8 K23 ; R16 := R8["isShortcut"]
	100	[3601]	TEST     	R16 1 ; if R16 then PC := 106
	101	[3601]	JMP      	106 ; PC := 106
	102	[3601]	GETTABLE 	R16 R7 K23 ; R16 := R7["isShortcut"]
	103	[3601]	TEST     	R16 0 ; if not R16 then PC := 106
	104	[3601]	JMP      	106 ; PC := 106
	105	[3601]	GETTABLE 	R16 R8 K25 ; R16 := R8["isJunction"]
	106	[3601]	SETTABLE 	R15 K24 R16 ; R15["IsJunction"] := R16
	107	[3602]	SETTABLE 	R14 R5 R15 ; R14[R5] := R15
	108	[3604]	GETTABLE 	R14 R7 K26 ; R14 := R7["RelatedNodes"]
	109	[3604]	EQ       	0 R14 K19 ; if R14 ~= nil then PC := 113
	110	[3604]	JMP      	113 ; PC := 113
	111	[3605]	NEWTABLE 	R14 0 0 ; R14 := {}
	112	[3605]	SETTABLE 	R7 K26 R14 ; R7["RelatedNodes"] := R14
	113	[3608]	GETTABLE 	R14 R8 K26 ; R14 := R8["RelatedNodes"]
	114	[3608]	EQ       	0 R14 K19 ; if R14 ~= nil then PC := 118
	115	[3608]	JMP      	118 ; PC := 118
	116	[3609]	NEWTABLE 	R14 0 0 ; R14 := {}
	117	[3609]	SETTABLE 	R8 K26 R14 ; R8["RelatedNodes"] := R14
	118	[3612]	GETGLOBAL	R14 K27 ; R14 := 0x33bdd652
	119	[3612]	GETTABLE 	R14 R14 K28 ; R14 := R14[0x23d5322f]
	120	[3612]	GETTABLE 	R15 R7 K26 ; R15 := R7["RelatedNodes"]
	121	[3612]	GETGLOBAL	R16 K29 ; R16 := 0x0469f296
	122	[3612]	GETTABLE 	R17 R8 K18 ; R17 := R8["name"]
	123	[3612]	CALL     	R16 2 0 ; R16,... := R16(R17)
	124	[3612]	CALL     	R14 0 1 ; R14(R15,...)
	125	[3613]	GETGLOBAL	R14 K27 ; R14 := 0x33bdd652
	126	[3613]	GETTABLE 	R14 R14 K28 ; R14 := R14[0x23d5322f]
	127	[3613]	GETTABLE 	R15 R8 K26 ; R15 := R8["RelatedNodes"]
	128	[3613]	GETGLOBAL	R16 K29 ; R16 := 0x0469f296
	129	[3613]	GETTABLE 	R17 R7 K18 ; R17 := R7["name"]
	130	[3613]	CALL     	R16 2 0 ; R16,... := R16(R17)
	131	[3613]	CALL     	R14 0 1 ; R14(R15,...)
	132	[3616]	GETGLOBAL	R14 K4 ; R14 := mFlatEdges
	133	[3616]	GETTABLE 	R14 R14 R5 ; R14 := R14[R5]
	134	[3616]	GETTABLE 	R14 R14 K22 ; R14 := R14["IsShortcut"]
	135	[3616]	TEST     	R14 0 ; if not R14 then PC := 214
	136	[3616]	JMP      	214 ; PC := 214
	137	[3617]	GETTABLE 	R14 R8 K31 ; R14 := R8["radialSector"]
	138	[3617]	GETTABLE 	R14 R14 K32 ; R14 := R14["region"]
	139	[3617]	SETTABLE 	R7 K30 R14 ; R7["targetRegion"] := R14
	140	[3618]	GETTABLE 	R14 R7 K31 ; R14 := R7["radialSector"]
	141	[3618]	GETTABLE 	R14 R14 K32 ; R14 := R14["region"]
	142	[3618]	SETTABLE 	R8 K30 R14 ; R8["targetRegion"] := R14
	143	[3619]	GETGLOBAL	R14 K4 ; R14 := mFlatEdges
	144	[3619]	GETTABLE 	R14 R14 R5 ; R14 := R14[R5]
	145	[3619]	NEWTABLE 	R15 0 1 ; R15 := {}
	146	[3619]	GETGLOBAL	R16 K0 ; R16 := mMapEdges
	147	[3619]	GETTABLE 	R16 R16 R12 ; R16 := R16[R12]
	148	[3619]	GETTABLE 	R16 R16 K33 ; R16 := R16["controlPointA"]
	149	[3619]	SETTABLE 	R15 K34 R16 ; R15["position"] := R16
	150	[3619]	SETTABLE 	R14 K33 R15 ; R14["controlPointA"] := R15
	151	[3620]	GETGLOBAL	R14 K35 ; R14 := 0xae2294fa
	152	[3620]	GETGLOBAL	R15 K4 ; R15 := mFlatEdges
	153	[3620]	GETTABLE 	R15 R15 R5 ; R15 := R15[R5]
	154	[3620]	GETTABLE 	R15 R15 K33 ; R15 := R15["controlPointA"]
	155	[3620]	GETTABLE 	R15 R15 K34 ; R15 := R15["position"]
	156	[3620]	CALL     	R14 2 2 ; R14 := R14(R15)
	157	[3620]	LT       	0 R14 K36 ; if R14 >= 0.010000 then PC := 169
	158	[3620]	JMP      	169 ; PC := 169
	159	[3621]	GETGLOBAL	R14 K4 ; R14 := mFlatEdges
	160	[3621]	GETTABLE 	R14 R14 R5 ; R14 := R14[R5]
	161	[3621]	GETTABLE 	R14 R14 K33 ; R14 := R14["controlPointA"]
	162	[3621]	GETTABLE 	R15 R7 K34 ; R15 := R7["position"]
	163	[3621]	GETTABLE 	R16 R8 K34 ; R16 := R8["position"]
	164	[3621]	GETTABLE 	R17 R7 K34 ; R17 := R7["position"]
	165	[3621]	SUB      	R16 R16 R17 ; R16 := R16 - R17
	166	[3621]	MUL      	R16 R16 K37 ; R16 := R16 * 0.300000
	167	[3621]	ADD      	R15 R15 R16 ; R15 := R15 + R16
	168	[3621]	SETTABLE 	R14 K34 R15 ; R14["position"] := R15
	169	[3623]	GETGLOBAL	R14 K4 ; R14 := mFlatEdges
	170	[3623]	GETTABLE 	R14 R14 R5 ; R14 := R14[R5]
	171	[3623]	NEWTABLE 	R15 0 1 ; R15 := {}
	172	[3623]	GETGLOBAL	R16 K0 ; R16 := mMapEdges
	173	[3623]	GETTABLE 	R16 R16 R12 ; R16 := R16[R12]
	174	[3623]	GETTABLE 	R16 R16 K38 ; R16 := R16["controlPointB"]
	175	[3623]	SETTABLE 	R15 K34 R16 ; R15["position"] := R16
	176	[3623]	SETTABLE 	R14 K38 R15 ; R14[0x7482ae82] := R15
	177	[3624]	GETGLOBAL	R14 K35 ; R14 := 0xae2294fa
	178	[3624]	GETGLOBAL	R15 K4 ; R15 := mFlatEdges
	179	[3624]	GETTABLE 	R15 R15 R5 ; R15 := R15[R5]
	180	[3624]	GETTABLE 	R15 R15 K38 ; R15 := R15["controlPointB"]
	181	[3624]	GETTABLE 	R15 R15 K34 ; R15 := R15["position"]
	182	[3624]	CALL     	R14 2 2 ; R14 := R14(R15)
	183	[3624]	LT       	0 R14 K36 ; if R14 >= 0.010000 then PC := 214
	184	[3624]	JMP      	214 ; PC := 214
	185	[3625]	GETGLOBAL	R14 K4 ; R14 := mFlatEdges
	186	[3625]	GETTABLE 	R14 R14 R5 ; R14 := R14[R5]
	187	[3625]	GETTABLE 	R14 R14 K38 ; R14 := R14["controlPointB"]
	188	[3625]	GETTABLE 	R15 R7 K34 ; R15 := R7["position"]
	189	[3625]	GETTABLE 	R16 R8 K34 ; R16 := R8["position"]
	190	[3625]	GETTABLE 	R17 R7 K34 ; R17 := R7["position"]
	191	[3625]	SUB      	R16 R16 R17 ; R16 := R16 - R17
	192	[3625]	MUL      	R16 R16 K39 ; R16 := R16 * 0.700000
	193	[3625]	ADD      	R15 R15 R16 ; R15 := R15 + R16
	194	[3625]	SETTABLE 	R14 K34 R15 ; R14["position"] := R15
	195	[3627]	JMP      	214 ; PC := 214
	196	[3628]	GETUPVAL 	R14 U2 ; R14 := U2
	197	[3628]	TEST     	R14 0 ; if not R14 then PC := 214
	198	[3628]	JMP      	214 ; PC := 214
	199	[3629]	GETGLOBAL	R14 K40 ; R14 := 0x3d106989
	200	[3629]	LOADK    	R15 K41 ; R15 := "ERROR: Invalid nodes in edge "
	201	[3629]	GETGLOBAL	R16 K9 ; R16 := 0x64fb1586
	202	[3629]	GETGLOBAL	R17 K0 ; R17 := mMapEdges
	203	[3629]	GETTABLE 	R17 R17 R12 ; R17 := R17[R12]
	204	[3629]	GETTABLE 	R17 R17 K10 ; R17 := R17["locationA"]
	205	[3629]	CALL     	R16 2 2 ; R16 := R16(R17)
	206	[3629]	LOADK    	R17 K42 ; R17 := " to "
	207	[3629]	GETGLOBAL	R18 K9 ; R18 := 0x64fb1586
	208	[3629]	GETGLOBAL	R19 K0 ; R19 := mMapEdges
	209	[3629]	GETTABLE 	R19 R19 R12 ; R19 := R19[R12]
	210	[3629]	GETTABLE 	R19 R19 K11 ; R19 := R19["locationB"]
	211	[3629]	CALL     	R18 2 2 ; R18 := R18(R19)
	212	[3629]	CONCAT   	R15 R15 R18 ; R15 := R15 .. R16 .. R17 .. R18
	213	[3629]	CALL     	R14 2 1 ; R14(R15)
	214	[3576]	FORLOOP  	R9 27 ; R9 += R11; if R9 <= R10 then begin PC := 27; R12 := R9 end
	215	[3632]	RETURN   	R0 1 ; return 

function #71 <?:3634,3674> (113 instructions, 452 bytes at 00000211191DB750)
0 params, 13 slots, 3 upvalues, 0 locals, 29 constants, 0 functions
	1	[3635]	GETGLOBAL	R0 K0 ; R0 := 0x0032441c
	2	[3635]	GETTABLE 	R0 R0 K1 ; R0 := R0["StalkerMode"]
	3	[3635]	TEST     	R0 1 ; if R0 then PC := 9
	4	[3635]	JMP      	9 ; PC := 9
	5	[3635]	GETGLOBAL	R0 K2 ; R0 := mRailJack
	6	[3635]	GETTABLE 	R0 R0 K3 ; R0 := R0["Active"]
	7	[3635]	TEST     	R0 0 ; if not R0 then PC := 10
	8	[3635]	JMP      	10 ; PC := 10
	9	[3636]	RETURN   	R0 1 ; return 
	10	[3639]	LOADNIL  	R0 R1 ; R0 := R1 := nil
	11	[3641]	OP_LOADBOOL	R2 0 0 ; R2 := false
	12	[3643]	LOADK    	R3 := 1.000000
	13	[3643]	GETGLOBAL	R4 K4 ; R4 := mFlatEdges
	14	[3643]	LEN      	R4 R4 ; R4 := # R4
	15	[3643]	LOADK    	R5 := 1.000000
	16	[3643]	FORPREP  	R3 112 ; R3 -= R5; PC := 112
	17	[3644]	GETGLOBAL	R7 K5 ; R7 := 0xce225efa
	18	[3644]	LOADK    	R8 := 0.000000
	19	[3644]	CALL     	R7 2 1 ; R7(R8)
	20	[3645]	GETGLOBAL	R7 K4 ; R7 := mFlatEdges
	21	[3645]	GETTABLE 	R0 R7 R6 ; R0 := R7[R6]
	22	[3646]	OP_LOADBOOL	R2 0 0 ; R2 := false
	23	[3647]	GETTABLE 	R7 R0 K6 ; R7 := R0["NodeA"]
	24	[3647]	GETTABLE 	R7 R7 K7 ; R7 := R7["isShortcut"]
	25	[3647]	TEST     	R7 0 ; if not R7 then PC := 44
	26	[3647]	JMP      	44 ; PC := 44
	27	[3647]	GETTABLE 	R7 R0 K8 ; R7 := R0["NodeB"]
	28	[3647]	GETTABLE 	R7 R7 K7 ; R7 := R7["isShortcut"]
	29	[3647]	TEST     	R7 0 ; if not R7 then PC := 44
	30	[3647]	JMP      	44 ; PC := 44
	31	[3648]	OP_LOADBOOL	R2 1 0 ; R2 := true
	32	[3649]	GETTABLE 	R7 R0 K6 ; R7 := R0["NodeA"]
	33	[3649]	GETTABLE 	R7 R7 K9 ; R7 := R7["completed"]
	34	[3649]	TEST     	R7 0 ; if not R7 then PC := 42
	35	[3649]	JMP      	42 ; PC := 42
	36	[3649]	GETTABLE 	R7 R0 K8 ; R7 := R0["NodeB"]
	37	[3649]	GETTABLE 	R7 R7 K9 ; R7 := R7["completed"]
	38	[3649]	TEST     	R7 0 ; if not R7 then PC := 42
	39	[3649]	JMP      	42 ; PC := 42
	40	[3650]	GETGLOBAL	R1 K10 ; R1 := 0x0b2cddfd
	41	[3650]	JMP      	82 ; PC := 82
	42	[3652]	GETGLOBAL	R1 K11 ; R1 := 0xf127f82d
	43	[3653]	JMP      	82 ; PC := 82
	44	[3655]	GETGLOBAL	R1 K12 ; R1 := 0xb9325072
	45	[3656]	GETTABLE 	R7 R0 K6 ; R7 := R0["NodeA"]
	46	[3656]	GETTABLE 	R7 R7 K13 ; R7 := R7["edgesLocked"]
	47	[3656]	TEST     	R7 1 ; if R7 then PC := 53
	48	[3656]	JMP      	53 ; PC := 53
	49	[3656]	GETTABLE 	R7 R0 K8 ; R7 := R0["NodeB"]
	50	[3656]	GETTABLE 	R7 R7 K13 ; R7 := R7["edgesLocked"]
	51	[3656]	TEST     	R7 0 ; if not R7 then PC := 55
	52	[3656]	JMP      	55 ; PC := 55
	53	[3657]	GETGLOBAL	R1 K14 ; R1 := 0xccbea397
	54	[3657]	JMP      	82 ; PC := 82
	55	[3658]	GETTABLE 	R7 R0 K6 ; R7 := R0["NodeA"]
	56	[3658]	GETTABLE 	R7 R7 K9 ; R7 := R7["completed"]
	57	[3658]	TEST     	R7 0 ; if not R7 then PC := 65
	58	[3658]	JMP      	65 ; PC := 65
	59	[3658]	GETTABLE 	R7 R0 K8 ; R7 := R0["NodeB"]
	60	[3658]	GETTABLE 	R7 R7 K9 ; R7 := R7["completed"]
	61	[3658]	TEST     	R7 0 ; if not R7 then PC := 65
	62	[3658]	JMP      	65 ; PC := 65
	63	[3659]	GETGLOBAL	R1 K15 ; R1 := 0x1e444be7
	64	[3659]	JMP      	82 ; PC := 82
	65	[3660]	GETTABLE 	R7 R0 K6 ; R7 := R0["NodeA"]
	66	[3660]	GETTABLE 	R7 R7 K16 ; R7 := R7["locked"]
	67	[3660]	TEST     	R7 1 ; if R7 then PC := 73
	68	[3660]	JMP      	73 ; PC := 73
	69	[3660]	GETTABLE 	R7 R0 K6 ; R7 := R0["NodeA"]
	70	[3660]	GETTABLE 	R7 R7 K9 ; R7 := R7["completed"]
	71	[3660]	TEST     	R7 1 ; if R7 then PC := 82
	72	[3660]	JMP      	82 ; PC := 82
	73	[3660]	GETTABLE 	R7 R0 K8 ; R7 := R0["NodeB"]
	74	[3660]	GETTABLE 	R7 R7 K16 ; R7 := R7["locked"]
	75	[3660]	TEST     	R7 1 ; if R7 then PC := 81
	76	[3660]	JMP      	81 ; PC := 81
	77	[3660]	GETTABLE 	R7 R0 K8 ; R7 := R0["NodeB"]
	78	[3660]	GETTABLE 	R7 R7 K9 ; R7 := R7["completed"]
	79	[3660]	TEST     	R7 1 ; if R7 then PC := 82
	80	[3660]	JMP      	82 ; PC := 82
	81	[3661]	GETGLOBAL	R1 K14 ; R1 := 0xccbea397
	82	[3664]	GETGLOBAL	R7 K17 ; R7 := 0x7b998233
	83	[3664]	GETTABLE 	R8 R0 K18 ; R8 := R0["Instance"]
	84	[3664]	CALL     	R7 2 2 ; R7 := R7(R8)
	85	[3664]	TEST     	R7 1 ; if R7 then PC := 91
	86	[3664]	JMP      	91 ; PC := 91
	87	[3665]	GETGLOBAL	R7 K19 ; R7 := 0x1211d00f
	88	[3665]	SELF     	R7 R7 K20 ; R8 := R7; R7 := R7[0x59c96e77]
	89	[3665]	GETTABLE 	R9 R0 K18 ; R9 := R0["Instance"]
	90	[3665]	CALL     	R7 3 1 ; R7(R8,R9)
	91	[3668]	GETGLOBAL	R7 K19 ; R7 := 0x1211d00f
	92	[3668]	SELF     	R7 R7 K21 ; R8 := R7; R7 := R7[0x05909209]
	93	[3668]	MOVE     	R9 R1 ; R9 := R1
	94	[3668]	GETGLOBAL	R10 K22 ; R10 := ZERO_VECTOR
	95	[3668]	GETGLOBAL	R11 K23 ; R11 := ZERO_ROTATION
	96	[3668]	CALL     	R7 5 2 ; R7 := R7(R8,R9,R10,R11)
	97	[3668]	SETTABLE 	R0 K18 R7 ; R0["Instance"] := R7
	98	[3670]	GETTABLE 	R7 R0 K18 ; R7 := R0["Instance"]
	99	[3670]	SELF     	R7 R7 K24 ; R8 := R7; R7 := R7[0xecfaed95]
	100	[3670]	GETUPVAL 	R9 U0 ; R9 := U0
	101	[3670]	GETTABLE 	R9 R9 K25 ; R9 := R9[0x06d055f9]
	102	[3670]	GETTABLE 	R10 R0 K26 ; R10 := R0["IsShortcut"]
	103	[3670]	GETUPVAL 	R11 U1 ; R11 := U1
	104	[3670]	GETTABLE 	R11 R11 K27 ; R11 := R11["SHORTCUT_CULL_DISTANCE"]
	105	[3670]	GETUPVAL 	R12 U1 ; R12 := U1
	106	[3670]	GETTABLE 	R12 R12 K28 ; R12 := R12["LINE_CULL_DISTANCE"]
	107	[3670]	CALL     	R9 4 0 ; R9,... := R9(R10,R11,R12)
	108	[3670]	CALL     	R7 0 1 ; R7(R8,...)
	109	[3672]	GETUPVAL 	R7 U2 ; R7 := U2
	110	[3672]	MOVE     	R8 R0 ; R8 := R0
	111	[3672]	CALL     	R7 2 1 ; R7(R8)
	112	[3643]	FORLOOP  	R3 17 ; R3 += R5; if R3 <= R4 then begin PC := 17; R6 := R3 end
	113	[3674]	RETURN   	R0 1 ; return 

function #72 <?:3676,3725> (156 instructions, 624 bytes at 00000211191DBD80)
0 params, 18 slots, 1 upvalue, 0 locals, 41 constants, 0 functions
	1	[3677]	GETGLOBAL	R0 K0 ; R0 := 0x0032441c
	2	[3677]	GETTABLE 	R0 R0 K1 ; R0 := R0["StalkerMode"]
	3	[3677]	TEST     	R0 0 ; if not R0 then PC := 6
	4	[3677]	JMP      	6 ; PC := 6
	5	[3678]	RETURN   	R0 1 ; return 
	6	[3681]	GETGLOBAL	R0 K2 ; R0 := 0x76ea806b
	7	[3681]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x3f3ae64c]
	8	[3681]	LOADK    	R2 := 0.000000
	9	[3681]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	10	[3682]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	11	[3682]	MOVE     	R2 R0 ; R2 := R0
	12	[3682]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[3682]	TEST     	R1 1 ; if R1 then PC := 133
	14	[3682]	JMP      	133 ; PC := 133
	15	[3683]	SELF     	R1 R0 K5 ; R2 := R0; R1 := R0[0x80563238]
	16	[3683]	CALL     	R1 2 2 ; R1 := R1(R2)
	17	[3684]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	18	[3684]	MOVE     	R3 R1 ; R3 := R1
	19	[3684]	CALL     	R2 2 2 ; R2 := R2(R3)
	20	[3684]	TEST     	R2 1 ; if R2 then PC := 133
	21	[3684]	JMP      	133 ; PC := 133
	22	[3685]	SELF     	R2 R1 K6 ; R3 := R1; R2 := R1[0x69727e0b]
	23	[3685]	CALL     	R2 2 2 ; R2 := R2(R3)
	24	[3686]	GETTABLE 	R3 R2 K7 ; R3 := R2["mVoidTraders"]
	25	[3686]	EQ       	1 R3 K8 ; if R3 == nil then PC := 133
	26	[3686]	JMP      	133 ; PC := 133
	27	[3686]	GETTABLE 	R3 R2 K7 ; R3 := R2["mVoidTraders"]
	28	[3686]	LEN      	R3 R3 ; R3 := # R3
	29	[3686]	LT       	0 K9 R3 ; if 0.000000 >= R3 then PC := 133
	30	[3686]	JMP      	133 ; PC := 133
	31	[3687]	LOADK    	R3 := 86400.000000
	32	[3688]	GETTABLE 	R4 R2 K7 ; R4 := R2["mVoidTraders"]
	33	[3688]	GETTABLE 	R4 R4 K10 ; R4 := R4[1.000000]
	34	[3689]	GETGLOBAL	R5 K11 ; R5 := mVoidTrader
	35	[3689]	GETGLOBAL	R6 K13 ; R6 := 0x34291f5c
	36	[3689]	GETTABLE 	R6 R6 K14 ; R6 := R6[0x397b920f]
	37	[3689]	GETTABLE 	R7 R4 K15 ; R7 := R4["mActivation"]
	38	[3689]	CALL     	R6 2 2 ; R6 := R6(R7)
	39	[3689]	SETTABLE 	R5 K12 R6 ; R5["Time"] := R6
	40	[3690]	GETGLOBAL	R5 K11 ; R5 := mVoidTrader
	41	[3690]	GETTABLE 	R6 R4 K17 ; R6 := R4["mExpiry"]
	42	[3690]	GETTABLE 	R6 R6 K18 ; R6 := R6["sec"]
	43	[3690]	SETTABLE 	R5 K16 R6 ; R5["Expiry"] := R6
	44	[3691]	GETGLOBAL	R5 K11 ; R5 := mVoidTrader
	45	[3691]	GETGLOBAL	R6 K20 ; R6 := 0x0469f296
	46	[3691]	GETTABLE 	R7 R4 K21 ; R7 := R4["mNode"]
	47	[3691]	CALL     	R6 2 2 ; R6 := R6(R7)
	48	[3691]	SETTABLE 	R5 K19 R6 ; R5[0xae91e43b] := R6
	49	[3692]	GETGLOBAL	R5 K11 ; R5 := mVoidTrader
	50	[3692]	GETTABLE 	R5 R5 K12 ; R5 := R5["Time"]
	51	[3692]	LE       	0 R5 K9 ; if R5 > 0.000000 then PC := 58
	52	[3692]	JMP      	58 ; PC := 58
	53	[3693]	GETGLOBAL	R5 K11 ; R5 := mVoidTrader
	54	[3693]	SETTABLE 	R5 K22 K10 ; R5["Progress"] := 1.000000
	55	[3694]	GETGLOBAL	R5 K11 ; R5 := mVoidTrader
	56	[3694]	SETTABLE 	R5 K23 K24 ; R5["Active"] := true
	57	[3694]	JMP      	70 ; PC := 70
	58	[3695]	GETGLOBAL	R5 K11 ; R5 := mVoidTrader
	59	[3695]	GETTABLE 	R5 R5 K12 ; R5 := R5["Time"]
	60	[3695]	LE       	0 R5 R3 ; if R5 > R3 then PC := 70
	61	[3695]	JMP      	70 ; PC := 70
	62	[3696]	GETGLOBAL	R5 K11 ; R5 := mVoidTrader
	63	[3696]	GETGLOBAL	R6 K11 ; R6 := mVoidTrader
	64	[3696]	GETTABLE 	R6 R6 K12 ; R6 := R6["Time"]
	65	[3696]	DIV      	R6 R6 R3 ; R6 := R6 / R3
	66	[3696]	SUB      	R6 K10 R6 ; R6 := 1.000000 - R6
	67	[3696]	SETTABLE 	R5 K22 R6 ; R5[0xfb669000] := R6
	68	[3697]	GETGLOBAL	R5 K11 ; R5 := mVoidTrader
	69	[3697]	SETTABLE 	R5 K23 K24 ; R5["Active"] := true
	70	[3700]	GETGLOBAL	R5 K11 ; R5 := mVoidTrader
	71	[3700]	GETTABLE 	R5 R5 K23 ; R5 := R5["Active"]
	72	[3700]	TEST     	R5 0 ; if not R5 then PC := 133
	73	[3700]	JMP      	133 ; PC := 133
	74	[3701]	LOADNIL  	R5 R5 ; R5 := nil
	75	[3702]	OP_LOADBOOL	R6 0 0 ; R6 := false
	76	[3703]	LOADK    	R7 := 1.000000
	77	[3703]	GETGLOBAL	R8 K25 ; R8 := mFlatEdges
	78	[3703]	LEN      	R8 R8 ; R8 := # R8
	79	[3703]	LOADK    	R9 := 1.000000
	80	[3703]	FORPREP  	R7 110 ; R7 -= R9; PC := 110
	81	[3704]	GETGLOBAL	R11 K25 ; R11 := mFlatEdges
	82	[3704]	GETTABLE 	R11 R11 R10 ; R11 := R11[R10]
	83	[3704]	GETTABLE 	R11 R11 K26 ; R11 := R11["NodeA"]
	84	[3704]	GETTABLE 	R11 R11 K27 ; R11 := R11["name"]
	85	[3704]	GETGLOBAL	R12 K11 ; R12 := mVoidTrader
	86	[3704]	GETTABLE 	R12 R12 K19 ; R12 := R12["Location"]
	87	[3704]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 97
	88	[3704]	JMP      	97 ; PC := 97
	89	[3704]	GETGLOBAL	R11 K25 ; R11 := mFlatEdges
	90	[3704]	GETTABLE 	R11 R11 R10 ; R11 := R11[R10]
	91	[3704]	GETTABLE 	R11 R11 K28 ; R11 := R11["NodeB"]
	92	[3704]	GETTABLE 	R11 R11 K27 ; R11 := R11["name"]
	93	[3704]	GETGLOBAL	R12 K11 ; R12 := mVoidTrader
	94	[3704]	GETTABLE 	R12 R12 K19 ; R12 := R12["Location"]
	95	[3704]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 110
	96	[3704]	JMP      	110 ; PC := 110
	97	[3705]	GETGLOBAL	R11 K25 ; R11 := mFlatEdges
	98	[3705]	GETTABLE 	R11 R11 R10 ; R11 := R11[R10]
	99	[3705]	GETTABLE 	R11 R11 K26 ; R11 := R11["NodeA"]
	100	[3705]	GETTABLE 	R11 R11 K27 ; R11 := R11["name"]
	101	[3705]	GETGLOBAL	R12 K11 ; R12 := mVoidTrader
	102	[3705]	GETTABLE 	R12 R12 K19 ; R12 := R12["Location"]
	103	[3705]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 106
	104	[3705]	JMP      	106 ; PC := 106
	105	[3705]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 106
	106	[3705]	OP_LOADBOOL	R6 1 0 ; R6 := true
	107	[3706]	GETGLOBAL	R11 K25 ; R11 := mFlatEdges
	108	[3706]	GETTABLE 	R5 R11 R10 ; R5 := R11[R10]
	109	[3707]	JMP      	111 ; PC := 111
	110	[3703]	FORLOOP  	R7 81 ; R7 += R9; if R7 <= R8 then begin PC := 81; R10 := R7 end
	111	[3711]	GETGLOBAL	R11 K4 ; R11 := 0x7b998233
	112	[3711]	MOVE     	R12 R5 ; R12 := R5
	113	[3711]	CALL     	R11 2 2 ; R11 := R11(R12)
	114	[3711]	TEST     	R11 1 ; if R11 then PC := 131
	115	[3711]	JMP      	131 ; PC := 131
	116	[3712]	GETGLOBAL	R11 K11 ; R11 := mVoidTrader
	117	[3712]	GETTABLE 	R12 R5 K30 ; R12 := R5["Instance"]
	118	[3712]	SELF     	R12 R12 K31 ; R13 := R12; R12 := R12[0x7482ae82]
	119	[3712]	GETUPVAL 	R14 U0 ; R14 := U0
	120	[3712]	GETTABLE 	R14 R14 K32 ; R14 := R14[0x06d055f9]
	121	[3712]	NOT      	R15 R6 ; R15 := not R6
	122	[3712]	GETGLOBAL	R16 K11 ; R16 := mVoidTrader
	123	[3712]	GETTABLE 	R16 R16 K22 ; R16 := R16["Progress"]
	124	[3712]	GETGLOBAL	R17 K11 ; R17 := mVoidTrader
	125	[3712]	GETTABLE 	R17 R17 K22 ; R17 := R17["Progress"]
	126	[3712]	SUB      	R17 K10 R17 ; R17 := 1.000000 - R17
	127	[3712]	CALL     	R14 4 0 ; R14,... := R14(R15,R16,R17)
	128	[3712]	CALL     	R12 0 2 ; R12 := R12(R13,...)
	129	[3712]	SETTABLE 	R11 K29 R12 ; R11["Position"] := R12
	130	[3712]	JMP      	133 ; PC := 133
	131	[3714]	GETGLOBAL	R11 K11 ; R11 := mVoidTrader
	132	[3714]	SETTABLE 	R11 K23 K33 ; R11["Active"] := false
	133	[3721]	GETGLOBAL	R11 K34 ; R11 := 0xae91e43b
	134	[3721]	SELF     	R11 R11 K35 ; R12 := R11; R11 := R11[0xaade900e]
	135	[3721]	LOADK    	R13 K36 ; R13 := "VoidTrader"
	136	[3721]	LOADK    	R14 := 11.000000
	137	[3721]	GETGLOBAL	R15 K11 ; R15 := mVoidTrader
	138	[3721]	GETTABLE 	R15 R15 K23 ; R15 := R15["Active"]
	139	[3721]	EQ       	0 R15 K24 ; if R15 ~= true then PC := 144
	140	[3721]	JMP      	144 ; PC := 144
	141	[3721]	GETGLOBAL	R15 K37 ; R15 := mNewWarMode
	142	[3721]	NOT      	R15 R15 ; R15 := not R15
	143	[3721]	JMP      	146 ; PC := 146
	144	[3721]	OP_LOADBOOL	R15 0 1 ; R15 := false; PC := 145
	145	[3721]	OP_LOADBOOL	R15 1 0 ; R15 := true
	146	[3721]	CALL     	R11 5 1 ; R11(R12,R13,R14,R15)
	147	[3722]	GETGLOBAL	R11 K11 ; R11 := mVoidTrader
	148	[3722]	GETTABLE 	R11 R11 K23 ; R11 := R11["Active"]
	149	[3722]	TEST     	R11 0 ; if not R11 then PC := 156
	150	[3722]	JMP      	156 ; PC := 156
	151	[3723]	GETGLOBAL	R11 K34 ; R11 := 0xae91e43b
	152	[3723]	SELF     	R11 R11 K38 ; R12 := R11; R11 := R11[0x1cb415c1]
	153	[3723]	LOADK    	R13 K39 ; R13 := "VoidTrader.Image"
	154	[3723]	GETGLOBAL	R14 K40 ; R14 := 0x1e0f74d5
	155	[3723]	CALL     	R11 4 1 ; R11(R12,R13,R14)
	156	[3725]	RETURN   	R0 1 ; return 

function #73 <?:3727,3735> (68 instructions, 272 bytes at 00000211191DC5F0)
0 params, 12 slots, 2 upvalues, 0 locals, 11 constants, 0 functions
	1	[3728]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[3728]	GETTABLE 	R0 R0 K0 ; R0 := R0[0x06d055f9]
	3	[3728]	GETGLOBAL	R1 K1 ; R1 := 0x34291f5c
	4	[3728]	GETTABLE 	R1 R1 K2 ; R1 := R1[0x1467d5f4]
	5	[3728]	CALL     	R1 1 2 ; R1 := R1()
	6	[3728]	TEST     	R1 1 ; if R1 then PC := 15
	7	[3728]	JMP      	15 ; PC := 15
	8	[3728]	GETGLOBAL	R1 K3 ; R1 := mRailJack
	9	[3728]	GETTABLE 	R1 R1 K4 ; R1 := R1["Active"]
	10	[3728]	TEST     	R1 1 ; if R1 then PC := 15
	11	[3728]	JMP      	15 ; PC := 15
	12	[3728]	GETGLOBAL	R1 K1 ; R1 := 0x34291f5c
	13	[3728]	GETTABLE 	R1 R1 K5 ; R1 := R1[0xe6b41adb]
	14	[3728]	CALL     	R1 1 2 ; R1 := R1()
	15	[3728]	LOADK    	R2 := 48.000000
	16	[3728]	LOADK    	R3 := 18.000000
	17	[3728]	CALL     	R0 4 2 ; R0 := R0(R1,R2,R3)
	18	[3729]	GETUPVAL 	R1 U0 ; R1 := U0
	19	[3729]	GETTABLE 	R1 R1 K0 ; R1 := R1[0x06d055f9]
	20	[3729]	GETGLOBAL	R2 K1 ; R2 := 0x34291f5c
	21	[3729]	GETTABLE 	R2 R2 K2 ; R2 := R2[0x1467d5f4]
	22	[3729]	CALL     	R2 1 2 ; R2 := R2()
	23	[3729]	TEST     	R2 1 ; if R2 then PC := 32
	24	[3729]	JMP      	32 ; PC := 32
	25	[3729]	GETGLOBAL	R2 K3 ; R2 := mRailJack
	26	[3729]	GETTABLE 	R2 R2 K4 ; R2 := R2["Active"]
	27	[3729]	TEST     	R2 1 ; if R2 then PC := 32
	28	[3729]	JMP      	32 ; PC := 32
	29	[3729]	GETGLOBAL	R2 K1 ; R2 := 0x34291f5c
	30	[3729]	GETTABLE 	R2 R2 K5 ; R2 := R2[0xe6b41adb]
	31	[3729]	CALL     	R2 1 2 ; R2 := R2()
	32	[3729]	LOADK    	R3 := 64.000000
	33	[3729]	LOADK    	R4 := 32.000000
	34	[3729]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	35	[3730]	LOADK    	R2 := 1.000000
	36	[3730]	GETUPVAL 	R3 U1 ; R3 := U1
	37	[3730]	LEN      	R3 R3 ; R3 := # R3
	38	[3730]	LOADK    	R4 := 1.000000
	39	[3730]	FORPREP  	R2 67 ; R2 -= R4; PC := 67
	40	[3731]	GETGLOBAL	R6 K6 ; R6 := 0xae91e43b
	41	[3731]	SELF     	R6 R6 K7 ; R7 := R6; R6 := R6[0xf64b7262]
	42	[3731]	GETUPVAL 	R8 U1 ; R8 := U1
	43	[3731]	GETTABLE 	R8 R8 R5 ; R8 := R8[R5]
	44	[3731]	GETTABLE 	R8 R8 K8 ; R8 := R8["clipName"]
	45	[3731]	LOADK    	R9 K9 ; R9 := "Btn"
	46	[3731]	LOADK    	R10 := 12.000000
	47	[3731]	MOVE     	R11 R1 ; R11 := R1
	48	[3731]	CALL     	R6 6 1 ; R6(R7,R8,R9,R10,R11)
	49	[3732]	GETGLOBAL	R6 K6 ; R6 := 0xae91e43b
	50	[3732]	SELF     	R6 R6 K7 ; R7 := R6; R6 := R6[0xf64b7262]
	51	[3732]	GETUPVAL 	R8 U1 ; R8 := U1
	52	[3732]	GETTABLE 	R8 R8 R5 ; R8 := R8[R5]
	53	[3732]	GETTABLE 	R8 R8 K8 ; R8 := R8["clipName"]
	54	[3732]	LOADK    	R9 K9 ; R9 := "Btn"
	55	[3732]	LOADK    	R10 := 13.000000
	56	[3732]	MOVE     	R11 R1 ; R11 := R1
	57	[3732]	CALL     	R6 6 1 ; R6(R7,R8,R9,R10,R11)
	58	[3733]	GETGLOBAL	R6 K6 ; R6 := 0xae91e43b
	59	[3733]	SELF     	R6 R6 K7 ; R7 := R6; R6 := R6[0xf64b7262]
	60	[3733]	GETUPVAL 	R8 U1 ; R8 := U1
	61	[3733]	GETTABLE 	R8 R8 R5 ; R8 := R8[R5]
	62	[3733]	GETTABLE 	R8 R8 K8 ; R8 := R8["clipName"]
	63	[3733]	LOADK    	R9 K10 ; R9 := "Name.Bg"
	64	[3733]	LOADK    	R10 := 13.000000
	65	[3733]	MOVE     	R11 R0 ; R11 := R0
	66	[3733]	CALL     	R6 6 1 ; R6(R7,R8,R9,R10,R11)
	67	[3730]	FORLOOP  	R2 40 ; R2 += R4; if R2 <= R3 then begin PC := 40; R5 := R2 end
	68	[3735]	RETURN   	R0 1 ; return 

function #74 <?:3737,3745> (17 instructions, 68 bytes at 00000211191DC980)
0 params, 10 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[3738]	NEWTABLE 	R0 0 0 ; R0 := {}
	2	[3738]	SETGLOBALHASH	R0 K0 ; mConstructionProjectNodes := R0
	3	[3739]	GETGLOBAL	R0 K1 ; R0 := _T
	4	[3739]	GETTABLE 	R0 R0 K2 ; R0 := R0["CachedConstructionProjects"]
	5	[3740]	LOADK    	R1 := 1.000000
	6	[3740]	LEN      	R2 R0 ; R2 := # R0
	7	[3740]	LOADK    	R3 := 1.000000
	8	[3740]	FORPREP  	R1 16 ; R1 -= R3; PC := 16
	9	[3741]	GETTABLE 	R5 R0 R4 ; R5 := R0[R4]
	10	[3742]	GETTABLE 	R6 R5 K3 ; R6 := R5["info"]
	11	[3742]	GETTABLE 	R6 R6 K4 ; R6 := R6["mNode"]
	12	[3743]	GETGLOBAL	R7 K0 ; R7 := mConstructionProjectNodes
	13	[3743]	SELF     	R8 R6 K5 ; R9 := R6; R8 := R6[0x6d604ba7]
	14	[3743]	CALL     	R8 2 2 ; R8 := R8(R9)
	15	[3743]	SETTABLE 	R7 R8 R5 ; R7[R8] := R5
	16	[3740]	FORLOOP  	R1 9 ; R1 += R3; if R1 <= R2 then begin PC := 9; R4 := R1 end
	17	[3745]	RETURN   	R0 1 ; return 

function #75 <?:3747,3850> (398 instructions, 1592 bytes at 00000211191DCAD0)
0 params, 33 slots, 15 upvalues, 0 locals, 86 constants, 0 functions
	1	[3749]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[3749]	GETTABLE 	R0 R0 K0 ; R0 := R0[0x4c232afc]
	3	[3749]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	4	[3749]	LOADK    	R2 := 0.000000
	5	[3749]	LOADK    	R3 K2 ; R3 := 0.200000
	6	[3749]	LOADK    	R4 K2 ; R4 := 0.200000
	7	[3749]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	8	[3751]	GETGLOBAL	R0 K3 ; R0 := 0x1211d00f
	9	[3751]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0xfb669000]
	10	[3751]	GETGLOBAL	R2 K5 ; R2 := gCameraSpotType
	11	[3751]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	12	[3752]	GETUPVAL 	R1 U1 ; R1 := U1
	13	[3752]	GETTABLE 	R2 R0 K7 ; R2 := R0[1.000000]
	14	[3752]	SETTABLE 	R1 K6 R2 ; R1[0xe27b35bb] := R2
	15	[3754]	GETGLOBAL	R1 K8 ; R1 := 0x0032441c
	16	[3754]	GETTABLE 	R1 R1 K9 ; R1 := R1["StalkerMode"]
	17	[3754]	TEST     	R1 1 ; if R1 then PC := 27
	18	[3754]	JMP      	27 ; PC := 27
	19	[3754]	GETGLOBAL	R1 K10 ; R1 := mRailJack
	20	[3754]	GETTABLE 	R1 R1 K11 ; R1 := R1["Transitioned"]
	21	[3754]	TEST     	R1 1 ; if R1 then PC := 27
	22	[3754]	JMP      	27 ; PC := 27
	23	[3755]	GETUPVAL 	R1 U0 ; R1 := U0
	24	[3755]	GETTABLE 	R1 R1 K12 ; R1 := R1[0x659d451f]
	25	[3755]	GETGLOBAL	R2 K13 ; R2 := 0x7c7c09f4
	26	[3755]	CALL     	R1 2 1 ; R1(R2)
	27	[3758]	GETGLOBAL	R1 K14 ; R1 := 0xa421af95
	28	[3758]	LOADK    	R2 := 0.000000
	29	[3758]	LOADK    	R3 := 0.000000
	30	[3758]	LOADK    	R4 := 1.000000
	31	[3758]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	32	[3759]	GETUPVAL 	R2 U1 ; R2 := U1
	33	[3759]	GETTABLE 	R2 R2 K6 ; R2 := R2["cameraSpot"]
	34	[3759]	SELF     	R2 R2 K15 ; R3 := R2; R2 := R2[0x9307aa51]
	35	[3759]	MUL      	R4 R1 K16 ; R4 := R1 * -5.000000
	36	[3759]	CALL     	R2 3 1 ; R2(R3,R4)
	37	[3761]	GETUPVAL 	R2 U1 ; R2 := U1
	38	[3761]	GETUPVAL 	R3 U1 ; R3 := U1
	39	[3761]	GETTABLE 	R3 R3 K6 ; R3 := R3["cameraSpot"]
	40	[3761]	SELF     	R3 R3 K18 ; R4 := R3; R3 := R3[0xd1586535]
	41	[3761]	CALL     	R3 2 2 ; R3 := R3(R4)
	42	[3761]	SETTABLE 	R2 K17 R3 ; R2["originPos"] := R3
	43	[3762]	GETUPVAL 	R2 U1 ; R2 := U1
	44	[3762]	GETUPVAL 	R3 U1 ; R3 := U1
	45	[3762]	GETTABLE 	R3 R3 K6 ; R3 := R3["cameraSpot"]
	46	[3762]	SELF     	R3 R3 K20 ; R4 := R3; R3 := R3[0xcb3851b8]
	47	[3762]	CALL     	R3 2 2 ; R3 := R3(R4)
	48	[3762]	SETTABLE 	R2 K19 R3 ; R2["origRotation"] := R3
	49	[3763]	GETUPVAL 	R2 U1 ; R2 := U1
	50	[3763]	GETGLOBAL	R3 K22 ; R3 := 0xf6c6e505
	51	[3763]	GETUPVAL 	R4 U1 ; R4 := U1
	52	[3763]	GETTABLE 	R4 R4 K6 ; R4 := R4["cameraSpot"]
	53	[3763]	SELF     	R4 R4 K20 ; R5 := R4; R4 := R4[0xcb3851b8]
	54	[3763]	CALL     	R4 2 0 ; R4,... := R4(R5)
	55	[3763]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	56	[3763]	SETTABLE 	R2 K21 R3 ; R2["origFacing"] := R3
	57	[3764]	GETUPVAL 	R2 U1 ; R2 := U1
	58	[3764]	GETGLOBAL	R3 K14 ; R3 := 0xa421af95
	59	[3764]	GETUPVAL 	R4 U1 ; R4 := U1
	60	[3764]	GETTABLE 	R4 R4 K17 ; R4 := R4["originPos"]
	61	[3764]	GETTABLE 	R4 R4 K24 ; R4 := R4["x"]
	62	[3764]	GETUPVAL 	R5 U1 ; R5 := U1
	63	[3764]	GETTABLE 	R5 R5 K17 ; R5 := R5["originPos"]
	64	[3764]	GETTABLE 	R5 R5 K25 ; R5 := R5["y"]
	65	[3764]	GETUPVAL 	R6 U1 ; R6 := U1
	66	[3764]	GETTABLE 	R6 R6 K17 ; R6 := R6["originPos"]
	67	[3764]	GETTABLE 	R6 R6 K26 ; R6 := R6["z"]
	68	[3764]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	69	[3764]	SETTABLE 	R2 K23 R3 ; R2["pos"] := R3
	70	[3765]	GETUPVAL 	R2 U1 ; R2 := U1
	71	[3765]	GETGLOBAL	R3 K28 ; R3 := 0x00046924
	72	[3765]	GETUPVAL 	R4 U1 ; R4 := U1
	73	[3765]	GETTABLE 	R4 R4 K19 ; R4 := R4["origRotation"]
	74	[3765]	GETTABLE 	R4 R4 K29 ; R4 := R4["heading"]
	75	[3765]	GETUPVAL 	R5 U1 ; R5 := U1
	76	[3765]	GETTABLE 	R5 R5 K19 ; R5 := R5["origRotation"]
	77	[3765]	GETTABLE 	R5 R5 K30 ; R5 := R5["pitch"]
	78	[3765]	GETUPVAL 	R6 U1 ; R6 := U1
	79	[3765]	GETTABLE 	R6 R6 K19 ; R6 := R6["origRotation"]
	80	[3765]	GETTABLE 	R6 R6 K31 ; R6 := R6["bank"]
	81	[3765]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	82	[3765]	SETTABLE 	R2 K27 R3 ; R2["rotation"] := R3
	83	[3766]	GETUPVAL 	R2 U1 ; R2 := U1
	84	[3766]	NEWTABLE 	R3 0 0 ; R3 := {}
	85	[3766]	SETTABLE 	R2 K32 R3 ; R2["sky"] := R3
	86	[3767]	GETUPVAL 	R2 U1 ; R2 := U1
	87	[3767]	GETTABLE 	R2 R2 K32 ; R2 := R2["sky"]
	88	[3767]	GETGLOBAL	R3 K3 ; R3 := 0x1211d00f
	89	[3767]	SELF     	R3 R3 K4 ; R4 := R3; R3 := R3[0xfb669000]
	90	[3767]	GETGLOBAL	R5 K34 ; R5 := gZoneAttribsType
	91	[3767]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	92	[3767]	GETTABLE 	R3 R3 K7 ; R3 := R3[1.000000]
	93	[3767]	SETTABLE 	R2 K33 R3 ; R2["Zone"] := R3
	94	[3768]	GETUPVAL 	R2 U1 ; R2 := U1
	95	[3768]	GETTABLE 	R2 R2 K32 ; R2 := R2["sky"]
	96	[3768]	GETGLOBAL	R3 K3 ; R3 := 0x1211d00f
	97	[3768]	SELF     	R3 R3 K36 ; R4 := R3; R3 := R3[0x46a0ebf5]
	98	[3768]	GETUPVAL 	R5 U2 ; R5 := U2
	99	[3768]	GETTABLE 	R5 R5 K37 ; R5 := R5["SKY_CUBE"]
	100	[3768]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	101	[3768]	SETTABLE 	R2 K35 R3 ; R2["Cube"] := R3
	102	[3769]	GETUPVAL 	R2 U1 ; R2 := U1
	103	[3769]	GETUPVAL 	R3 U1 ; R3 := U1
	104	[3769]	GETTABLE 	R3 R3 K32 ; R3 := R3["sky"]
	105	[3769]	GETTABLE 	R3 R3 K33 ; R3 := R3["Zone"]
	106	[3769]	SELF     	R3 R3 K18 ; R4 := R3; R3 := R3[0xd1586535]
	107	[3769]	CALL     	R3 2 2 ; R3 := R3(R4)
	108	[3769]	SETTABLE 	R2 K38 R3 ; R2["skyOrigin"] := R3
	109	[3770]	GETUPVAL 	R2 U1 ; R2 := U1
	110	[3770]	GETTABLE 	R2 R2 K6 ; R2 := R2["cameraSpot"]
	111	[3770]	SELF     	R2 R2 K39 ; R3 := R2; R2 := R2[0xf3cefa26]
	112	[3770]	LOADK    	R4 := 1.000000
	113	[3770]	LOADK    	R5 := 0.000000
	114	[3770]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	115	[3772]	GETGLOBAL	R2 K8 ; R2 := 0x0032441c
	116	[3772]	GETTABLE 	R2 R2 K9 ; R2 := R2["StalkerMode"]
	117	[3772]	TEST     	R2 1 ; if R2 then PC := 123
	118	[3772]	JMP      	123 ; PC := 123
	119	[3772]	GETGLOBAL	R2 K40 ; R2 := _T
	120	[3772]	GETTABLE 	R2 R2 K41 ; R2 := R2["CustomStarChartNodeFilter"]
	121	[3772]	EQ       	1 R2 K42 ; if R2 == nil then PC := 208
	122	[3772]	JMP      	208 ; PC := 208
	123	[3773]	GETGLOBAL	R2 K43 ; R2 := 0x60130201
	124	[3773]	LOADK    	R3 := 60.000000
	125	[3773]	LOADK    	R4 := 0.000000
	126	[3773]	LOADK    	R5 := 0.000000
	127	[3773]	LOADK    	R6 := 0.000000
	128	[3773]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	129	[3774]	GETGLOBAL	R3 K40 ; R3 := _T
	130	[3774]	GETTABLE 	R3 R3 K41 ; R3 := R3["CustomStarChartNodeFilter"]
	131	[3774]	TEST     	R3 0 ; if not R3 then PC := 141
	132	[3774]	JMP      	141 ; PC := 141
	133	[3774]	GETGLOBAL	R3 K40 ; R3 := _T
	134	[3774]	GETTABLE 	R3 R3 K41 ; R3 := R3["CustomStarChartNodeFilter"]
	135	[3774]	GETTABLE 	R3 R3 K44 ; R3 := R3["Color"]
	136	[3774]	EQ       	1 R3 K42 ; if R3 == nil then PC := 141
	137	[3774]	JMP      	141 ; PC := 141
	138	[3775]	GETGLOBAL	R3 K40 ; R3 := _T
	139	[3775]	GETTABLE 	R3 R3 K41 ; R3 := R3["CustomStarChartNodeFilter"]
	140	[3775]	GETTABLE 	R2 R3 K44 ; R2 := R3["Color"]
	141	[3778]	GETGLOBAL	R3 K45 ; R3 := 0x7b998233
	142	[3778]	GETUPVAL 	R4 U1 ; R4 := U1
	143	[3778]	GETTABLE 	R4 R4 K32 ; R4 := R4["sky"]
	144	[3778]	GETTABLE 	R4 R4 K35 ; R4 := R4["Cube"]
	145	[3778]	CALL     	R3 2 2 ; R3 := R3(R4)
	146	[3778]	TEST     	R3 1 ; if R3 then PC := 162
	147	[3778]	JMP      	162 ; PC := 162
	148	[3779]	GETUPVAL 	R3 U1 ; R3 := U1
	149	[3779]	GETTABLE 	R3 R3 K32 ; R3 := R3["sky"]
	150	[3779]	GETTABLE 	R3 R3 K35 ; R3 := R3["Cube"]
	151	[3779]	SELF     	R3 R3 K46 ; R4 := R3; R3 := R3[0x986d2ab8]
	152	[3779]	GETGLOBAL	R5 K47 ; R5 := 0x6c97a788
	153	[3779]	GETTABLE 	R5 R5 K48 ; R5 := R5["TINT_COLOR"]
	154	[3779]	GETTABLE 	R6 R2 K49 ; R6 := R2["red"]
	155	[3779]	DIV      	R6 R6 K50 ; R6 := R6 / 255.000000
	156	[3779]	GETTABLE 	R7 R2 K51 ; R7 := R2["green"]
	157	[3779]	DIV      	R7 R7 K50 ; R7 := R7 / 255.000000
	158	[3779]	GETTABLE 	R8 R2 K52 ; R8 := R2["blue"]
	159	[3779]	DIV      	R8 R8 K50 ; R8 := R8 / 255.000000
	160	[3779]	LOADK    	R9 := 1.000000
	161	[3779]	CALL     	R3 7 1 ; R3(R4,R5,R6,R7,R8,R9)
	162	[3781]	GETGLOBAL	R3 K3 ; R3 := 0x1211d00f
	163	[3781]	SELF     	R3 R3 K53 ; R4 := R3; R3 := R3[0xc7fcada9]
	164	[3781]	GETGLOBAL	R5 K54 ; R5 := 0x0469f296
	165	[3781]	LOADK    	R6 K55 ; R6 := "Cloud"
	166	[3781]	CALL     	R5 2 0 ; R5,... := R5(R6)
	167	[3781]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	168	[3782]	GETGLOBAL	R4 K56 ; R4 := 0xcfc01047
	169	[3782]	MOVE     	R5 R3 ; R5 := R3
	170	[3782]	CALL     	R4 2 4 ; R4,R5,R6 := R4(R5)
	171	[3782]	JMP      	183 ; PC := 183
	172	[3783]	SELF     	R9 R8 K46 ; R10 := R8; R9 := R8[0x986d2ab8]
	173	[3783]	GETGLOBAL	R11 K47 ; R11 := 0x6c97a788
	174	[3783]	GETTABLE 	R11 R11 K48 ; R11 := R11["TINT_COLOR"]
	175	[3783]	GETTABLE 	R12 R2 K49 ; R12 := R2["red"]
	176	[3783]	DIV      	R12 R12 K50 ; R12 := R12 / 255.000000
	177	[3783]	GETTABLE 	R13 R2 K51 ; R13 := R2["green"]
	178	[3783]	DIV      	R13 R13 K50 ; R13 := R13 / 255.000000
	179	[3783]	GETTABLE 	R14 R2 K52 ; R14 := R2["blue"]
	180	[3783]	DIV      	R14 R14 K50 ; R14 := R14 / 255.000000
	181	[3783]	LOADK    	R15 := 1.000000
	182	[3783]	CALL     	R9 7 1 ; R9(R10,R11,R12,R13,R14,R15)
	183	[3782]	TFORLOOP 	R4 2 ; R7,R8 := R4(R5,R6); if R7 ~= nil then begin PC = 172; R6 := R7 end
	184	[3783]	JMP      	172 ; PC := 172
	185	[3785]	GETGLOBAL	R9 K3 ; R9 := 0x1211d00f
	186	[3785]	SELF     	R9 R9 K53 ; R10 := R9; R9 := R9[0xc7fcada9]
	187	[3785]	GETGLOBAL	R11 K54 ; R11 := 0x0469f296
	188	[3785]	LOADK    	R12 K57 ; R12 := "Water"
	189	[3785]	CALL     	R11 2 0 ; R11,... := R11(R12)
	190	[3785]	CALL     	R9 0 2 ; R9 := R9(R10,...)
	191	[3786]	GETGLOBAL	R10 K56 ; R10 := 0xcfc01047
	192	[3786]	MOVE     	R11 R9 ; R11 := R9
	193	[3786]	CALL     	R10 2 4 ; R10,R11,R12 := R10(R11)
	194	[3786]	JMP      	206 ; PC := 206
	195	[3787]	SELF     	R15 R14 K46 ; R16 := R14; R15 := R14[0x986d2ab8]
	196	[3787]	GETGLOBAL	R17 K47 ; R17 := 0x6c97a788
	197	[3787]	GETTABLE 	R17 R17 K48 ; R17 := R17["TINT_COLOR"]
	198	[3787]	GETTABLE 	R18 R2 K49 ; R18 := R2["red"]
	199	[3787]	DIV      	R18 R18 K50 ; R18 := R18 / 255.000000
	200	[3787]	GETTABLE 	R19 R2 K51 ; R19 := R2["green"]
	201	[3787]	DIV      	R19 R19 K50 ; R19 := R19 / 255.000000
	202	[3787]	GETTABLE 	R20 R2 K52 ; R20 := R2["blue"]
	203	[3787]	DIV      	R20 R20 K50 ; R20 := R20 / 255.000000
	204	[3787]	LOADK    	R21 := 1.000000
	205	[3787]	CALL     	R15 7 1 ; R15(R16,R17,R18,R19,R20,R21)
	206	[3786]	TFORLOOP 	R10 2 ; R13,R14 := R10(R11,R12); if R13 ~= nil then begin PC = 195; R12 := R13 end
	207	[3787]	JMP      	195 ; PC := 195
	208	[3791]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	209	[3791]	SELF     	R15 R15 K58 ; R16 := R15; R15 := R15[0x263a3cc2]
	210	[3791]	GETGLOBAL	R17 K3 ; R17 := 0x1211d00f
	211	[3791]	SELF     	R17 R17 K59 ; R18 := R17; R17 := R17[0xb4364067]
	212	[3791]	CALL     	R17 2 0 ; R17,... := R17(R18)
	213	[3791]	CALL     	R15 0 1 ; R15(R16,...)
	214	[3793]	GETGLOBAL	R15 K40 ; R15 := _T
	215	[3793]	GETTABLE 	R15 R15 K60 ; R15 := R15["FortressLocation"]
	216	[3793]	EQ       	0 R15 K42 ; if R15 ~= nil then PC := 228
	217	[3793]	JMP      	228 ; PC := 228
	218	[3794]	GETGLOBAL	R15 K40 ; R15 := _T
	219	[3794]	NEWTABLE 	R16 0 5 ; R16 := {}
	220	[3795]	SETTABLE 	R16 K61 K7 ; R16["SplineIndex"] := 1.000000
	221	[3796]	SETTABLE 	R16 K62 K63 ; R16["Progress"] := 0.000000
	222	[3797]	SETTABLE 	R16 K64 K7 ; R16["MaxSplines"] := 1.000000
	223	[3798]	GETUPVAL 	R17 U3 ; R17 := U3
	224	[3798]	GETTABLE 	R17 R17 K65 ; R17 := R17["Velocity"]
	225	[3798]	SETTABLE 	R16 K65 R17 ; R16["Velocity"] := R17
	226	[3799]	SETTABLE 	R16 K66 K67 ; R16["Initialized"] := false
	227	[3800]	SETTABLE 	R15 K60 R16 ; R15["FortressLocation"] := R16
	228	[3803]	GETUPVAL 	R15 U4 ; R15 := U4
	229	[3803]	CALL     	R15 1 1 ; R15()
	230	[3805]	GETUPVAL 	R15 U5 ; R15 := U5
	231	[3805]	CALL     	R15 1 1 ; R15()
	232	[3806]	GETGLOBAL	R15 K68 ; R15 := 0xce225efa
	233	[3806]	LOADK    	R16 := 0.000000
	234	[3806]	CALL     	R15 2 1 ; R15(R16)
	235	[3807]	GETUPVAL 	R15 U6 ; R15 := U6
	236	[3807]	CALL     	R15 1 1 ; R15()
	237	[3808]	GETGLOBAL	R15 K68 ; R15 := 0xce225efa
	238	[3808]	LOADK    	R16 := 0.000000
	239	[3808]	CALL     	R15 2 1 ; R15(R16)
	240	[3809]	GETUPVAL 	R15 U7 ; R15 := U7
	241	[3809]	CALL     	R15 1 1 ; R15()
	242	[3810]	GETUPVAL 	R15 U8 ; R15 := U8
	243	[3810]	CALL     	R15 1 1 ; R15()
	244	[3811]	GETUPVAL 	R15 U9 ; R15 := U9
	245	[3811]	CALL     	R15 1 1 ; R15()
	246	[3813]	GETGLOBAL	R15 K56 ; R15 := 0xcfc01047
	247	[3813]	GETUPVAL 	R16 U3 ; R16 := U3
	248	[3813]	GETTABLE 	R16 R16 K69 ; R16 := R16["Sectors"]
	249	[3813]	CALL     	R15 2 4 ; R15,R16,R17 := R15(R16)
	250	[3813]	JMP      	256 ; PC := 256
	251	[3814]	GETUPVAL 	R20 U3 ; R20 := U3
	252	[3814]	GETTABLE 	R20 R20 K70 ; R20 := R20["Nodes"]
	253	[3814]	GETUPVAL 	R21 U10 ; R21 := U10
	254	[3814]	GETTABLE 	R21 R21 R18 ; R21 := R21[R18]
	255	[3814]	SETTABLE 	R20 R18 R21 ; R20[R18] := R21
	256	[3813]	TFORLOOP 	R15 2 ; R18,R19 := R15(R16,R17); if R18 ~= nil then begin PC = 251; R17 := R18 end
	257	[3814]	JMP      	251 ; PC := 251
	258	[3817]	GETUPVAL 	R20 U11 ; R20 := U11
	259	[3817]	CALL     	R20 1 1 ; R20()
	260	[3819]	GETUPVAL 	R20 U12 ; R20 := U12
	261	[3819]	CALL     	R20 1 1 ; R20()
	262	[3821]	GETUPVAL 	R20 U13 ; R20 := U13
	263	[3821]	CALL     	R20 1 1 ; R20()
	264	[3823]	GETUPVAL 	R20 U14 ; R20 := U14
	265	[3823]	CALL     	R20 1 2 ; R20 := R20()
	266	[3823]	TEST     	R20 1 ; if R20 then PC := 291
	267	[3823]	JMP      	291 ; PC := 291
	268	[3823]	GETGLOBAL	R20 K8 ; R20 := 0x0032441c
	269	[3823]	GETTABLE 	R20 R20 K9 ; R20 := R20["StalkerMode"]
	270	[3823]	TEST     	R20 1 ; if R20 then PC := 291
	271	[3823]	JMP      	291 ; PC := 291
	272	[3824]	GETGLOBAL	R20 K45 ; R20 := 0x7b998233
	273	[3824]	GETGLOBAL	R21 K71 ; R21 := 0xc6f28eaa
	274	[3824]	CALL     	R20 2 2 ; R20 := R20(R21)
	275	[3824]	TEST     	R20 1 ; if R20 then PC := 291
	276	[3824]	JMP      	291 ; PC := 291
	277	[3824]	GETGLOBAL	R20 K45 ; R20 := 0x7b998233
	278	[3824]	GETGLOBAL	R21 K8 ; R21 := 0x0032441c
	279	[3824]	GETTABLE 	R21 R21 K72 ; R21 := R21["MapSoundInst"]
	280	[3824]	CALL     	R20 2 2 ; R20 := R20(R21)
	281	[3824]	TEST     	R20 0 ; if not R20 then PC := 291
	282	[3824]	JMP      	291 ; PC := 291
	283	[3825]	GETGLOBAL	R20 K8 ; R20 := 0x0032441c
	284	[3825]	GETGLOBAL	R21 K3 ; R21 := 0x1211d00f
	285	[3825]	SELF     	R21 R21 K12 ; R22 := R21; R21 := R21[0x659d451f]
	286	[3825]	GETGLOBAL	R23 K71 ; R23 := 0xc6f28eaa
	287	[3825]	GETGLOBAL	R24 K73 ; R24 := ZERO_VECTOR
	288	[3825]	OP_LOADBOOL	R25 0 0 ; R25 := false
	289	[3825]	CALL     	R21 5 2 ; R21 := R21(R22,R23,R24,R25)
	290	[3825]	SETTABLE 	R20 K72 R21 ; R20[0x00000000] := R21
	291	[3828]	GETGLOBAL	R20 K40 ; R20 := _T
	292	[3828]	SETTABLE 	R20 K74 K75 ; R20["InStarChart"] := true
	293	[3830]	GETGLOBAL	R20 K10 ; R20 := mRailJack
	294	[3830]	GETGLOBAL	R21 K3 ; R21 := 0x1211d00f
	295	[3830]	SELF     	R21 R21 K53 ; R22 := R21; R21 := R21[0xc7fcada9]
	296	[3830]	GETGLOBAL	R23 K54 ; R23 := 0x0469f296
	297	[3830]	LOADK    	R24 K77 ; R24 := "Void"
	298	[3830]	CALL     	R23 2 0 ; R23,... := R23(R24)
	299	[3830]	CALL     	R21 0 2 ; R21 := R21(R22,...)
	300	[3830]	SETTABLE 	R20 K76 R21 ; R20[0x9666d97b] := R21
	301	[3831]	GETGLOBAL	R20 K45 ; R20 := 0x7b998233
	302	[3831]	GETGLOBAL	R21 K10 ; R21 := mRailJack
	303	[3831]	GETTABLE 	R21 R21 K76 ; R21 := R21["voidDecos"]
	304	[3831]	CALL     	R20 2 2 ; R20 := R20(R21)
	305	[3831]	TEST     	R20 1 ; if R20 then PC := 398
	306	[3831]	JMP      	398 ; PC := 398
	307	[3831]	GETGLOBAL	R20 K10 ; R20 := mRailJack
	308	[3831]	GETTABLE 	R20 R20 K76 ; R20 := R20["voidDecos"]
	309	[3831]	LEN      	R20 R20 ; R20 := # R20
	310	[3831]	LT       	0 K63 R20 ; if 0.000000 >= R20 then PC := 398
	311	[3831]	JMP      	398 ; PC := 398
	312	[3832]	GETGLOBAL	R20 K10 ; R20 := mRailJack
	313	[3832]	NEWTABLE 	R21 0 0 ; R21 := {}
	314	[3832]	SETTABLE 	R20 K78 R21 ; R20[0x98c58db3] := R21
	315	[3833]	LOADK    	R20 := 1.000000
	316	[3833]	GETGLOBAL	R21 K10 ; R21 := mRailJack
	317	[3833]	GETTABLE 	R21 R21 K76 ; R21 := R21["voidDecos"]
	318	[3833]	LEN      	R21 R21 ; R21 := # R21
	319	[3833]	LOADK    	R22 := 1.000000
	320	[3833]	FORPREP  	R20 381 ; R20 -= R22; PC := 381
	321	[3834]	GETGLOBAL	R24 K10 ; R24 := mRailJack
	322	[3834]	GETTABLE 	R24 R24 K76 ; R24 := R24["voidDecos"]
	323	[3834]	GETTABLE 	R24 R24 R23 ; R24 := R24[R23]
	324	[3835]	GETGLOBAL	R25 K10 ; R25 := mRailJack
	325	[3835]	GETTABLE 	R25 R25 K78 ; R25 := R25["voidDecoData"]
	326	[3835]	NEWTABLE 	R26 0 0 ; R26 := {}
	327	[3835]	SETTABLE 	R25 R23 R26 ; R25[R23] := R26
	328	[3836]	GETGLOBAL	R25 K10 ; R25 := mRailJack
	329	[3836]	GETTABLE 	R25 R25 K78 ; R25 := R25["voidDecoData"]
	330	[3836]	GETTABLE 	R25 R25 R23 ; R25 := R25[R23]
	331	[3836]	SELF     	R26 R24 K18 ; R27 := R24; R26 := R24[0xd1586535]
	332	[3836]	CALL     	R26 2 2 ; R26 := R26(R27)
	333	[3836]	SETTABLE 	R25 K23 R26 ; R25["pos"] := R26
	334	[3837]	GETGLOBAL	R25 K10 ; R25 := mRailJack
	335	[3837]	GETTABLE 	R25 R25 K78 ; R25 := R25["voidDecoData"]
	336	[3837]	GETTABLE 	R25 R25 R23 ; R25 := R25[R23]
	337	[3837]	SELF     	R26 R24 K80 ; R27 := R24; R26 := R24[0x8fbd942d]
	338	[3837]	CALL     	R26 2 2 ; R26 := R26(R27)
	339	[3837]	SETTABLE 	R25 K79 R26 ; R25["BMin"] := R26
	340	[3838]	GETGLOBAL	R25 K10 ; R25 := mRailJack
	341	[3838]	GETTABLE 	R25 R25 K78 ; R25 := R25["voidDecoData"]
	342	[3838]	GETTABLE 	R25 R25 R23 ; R25 := R25[R23]
	343	[3838]	SELF     	R26 R24 K82 ; R27 := R24; R26 := R24[0x79a9e9d3]
	344	[3838]	CALL     	R26 2 2 ; R26 := R26(R27)
	345	[3838]	SETTABLE 	R25 K81 R26 ; R25["BMax"] := R26
	346	[3839]	GETGLOBAL	R25 K10 ; R25 := mRailJack
	347	[3839]	GETTABLE 	R25 R25 K78 ; R25 := R25["voidDecoData"]
	348	[3839]	GETTABLE 	R25 R25 R23 ; R25 := R25[R23]
	349	[3839]	GETGLOBAL	R26 K10 ; R26 := mRailJack
	350	[3839]	GETTABLE 	R26 R26 K78 ; R26 := R26["voidDecoData"]
	351	[3839]	GETTABLE 	R26 R26 R23 ; R26 := R26[R23]
	352	[3839]	GETTABLE 	R26 R26 K81 ; R26 := R26["BMax"]
	353	[3839]	GETGLOBAL	R27 K10 ; R27 := mRailJack
	354	[3839]	GETTABLE 	R27 R27 K78 ; R27 := R27["voidDecoData"]
	355	[3839]	GETTABLE 	R27 R27 R23 ; R27 := R27[R23]
	356	[3839]	GETTABLE 	R27 R27 K79 ; R27 := R27["BMin"]
	357	[3839]	SUB      	R26 R26 R27 ; R26 := R26 - R27
	358	[3839]	SETTABLE 	R25 K83 R26 ; R25["BScale"] := R26
	359	[3840]	GETGLOBAL	R25 K10 ; R25 := mRailJack
	360	[3840]	GETTABLE 	R25 R25 K78 ; R25 := R25["voidDecoData"]
	361	[3840]	GETTABLE 	R25 R25 R23 ; R25 := R25[R23]
	362	[3840]	GETTABLE 	R25 R25 K83 ; R25 := R25["BScale"]
	363	[3840]	GETGLOBAL	R26 K10 ; R26 := mRailJack
	364	[3840]	GETTABLE 	R26 R26 K78 ; R26 := R26["voidDecoData"]
	365	[3840]	GETTABLE 	R26 R26 R23 ; R26 := R26[R23]
	366	[3840]	GETTABLE 	R26 R26 K83 ; R26 := R26["BScale"]
	367	[3840]	GETTABLE 	R26 R26 K24 ; R26 := R26["x"]
	368	[3840]	DIV      	R26 K7 R26 ; R26 := 1.000000 / R26
	369	[3840]	SETTABLE 	R25 K24 R26 ; R25["x"] := R26
	370	[3841]	GETGLOBAL	R25 K10 ; R25 := mRailJack
	371	[3841]	GETTABLE 	R25 R25 K78 ; R25 := R25["voidDecoData"]
	372	[3841]	GETTABLE 	R25 R25 R23 ; R25 := R25[R23]
	373	[3841]	GETTABLE 	R25 R25 K83 ; R25 := R25["BScale"]
	374	[3841]	GETGLOBAL	R26 K10 ; R26 := mRailJack
	375	[3841]	GETTABLE 	R26 R26 K78 ; R26 := R26["voidDecoData"]
	376	[3841]	GETTABLE 	R26 R26 R23 ; R26 := R26[R23]
	377	[3841]	GETTABLE 	R26 R26 K83 ; R26 := R26["BScale"]
	378	[3841]	GETTABLE 	R26 R26 K25 ; R26 := R26["y"]
	379	[3841]	DIV      	R26 K7 R26 ; R26 := 1.000000 / R26
	380	[3841]	SETTABLE 	R25 K25 R26 ; R25["y"] := R26
	381	[3833]	FORLOOP  	R20 321 ; R20 += R22; if R20 <= R21 then begin PC := 321; R23 := R20 end
	382	[3844]	GETGLOBAL	R25 K10 ; R25 := mRailJack
	383	[3844]	NEWTABLE 	R26 0 0 ; R26 := {}
	384	[3844]	SETTABLE 	R25 K84 R26 ; R25["uvHoles"] := R26
	385	[3845]	LOADK    	R25 := 1.000000
	386	[3845]	LOADK    	R26 := 20.000000
	387	[3845]	LOADK    	R27 := 1.000000
	388	[3845]	FORPREP  	R25 397 ; R25 -= R27; PC := 397
	389	[3846]	GETGLOBAL	R29 K10 ; R29 := mRailJack
	390	[3846]	GETTABLE 	R29 R29 K84 ; R29 := R29["uvHoles"]
	391	[3846]	GETGLOBAL	R30 K54 ; R30 := 0x0469f296
	392	[3846]	LOADK    	R31 K85 ; R31 := "UvHole"
	393	[3846]	SUB      	R32 R28 K7 ; R32 := R28 - 1.000000
	394	[3846]	CONCAT   	R31 R31 R32 ; R31 := R31 .. R32
	395	[3846]	CALL     	R30 2 2 ; R30 := R30(R31)
	396	[3846]	SETTABLE 	R29 R28 R30 ; R29[R28] := R30
	397	[3845]	FORLOOP  	R25 389 ; R25 += R27; if R25 <= R26 then begin PC := 389; R28 := R25 end
	398	[3850]	RETURN   	R0 1 ; return 

function #76 <?:3852,3872> (66 instructions, 264 bytes at 00000211191DDF80)
0 params, 5 slots, 2 upvalues, 0 locals, 24 constants, 0 functions
	1	[3853]	GETGLOBAL	R0 K0 ; R0 := mMapLoader
	2	[3853]	TEST     	R0 0 ; if not R0 then PC := 9
	3	[3853]	JMP      	9 ; PC := 9
	4	[3853]	GETGLOBAL	R0 K0 ; R0 := mMapLoader
	5	[3853]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xcfd9cd76]
	6	[3853]	CALL     	R0 2 2 ; R0 := R0(R1)
	7	[3853]	TEST     	R0 1 ; if R0 then PC := 10
	8	[3853]	JMP      	10 ; PC := 10
	9	[3854]	RETURN   	R0 1 ; return 
	10	[3857]	GETGLOBAL	R0 K0 ; R0 := mMapLoader
	11	[3857]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x842bdef9]
	12	[3857]	CALL     	R0 2 2 ; R0 := R0(R1)
	13	[3857]	TEST     	R0 0 ; if not R0 then PC := 66
	14	[3857]	JMP      	66 ; PC := 66
	15	[3857]	GETGLOBAL	R0 K3 ; R0 := 0x7b998233
	16	[3857]	GETGLOBAL	R1 K4 ; R1 := mResLoader
	17	[3857]	CALL     	R0 2 2 ; R0 := R0(R1)
	18	[3857]	TEST     	R0 1 ; if R0 then PC := 25
	19	[3857]	JMP      	25 ; PC := 25
	20	[3857]	GETGLOBAL	R0 K4 ; R0 := mResLoader
	21	[3857]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0xd2d3875a]
	22	[3857]	CALL     	R0 2 2 ; R0 := R0(R1)
	23	[3857]	TEST     	R0 0 ; if not R0 then PC := 66
	24	[3857]	JMP      	66 ; PC := 66
	25	[3858]	GETGLOBAL	R0 K0 ; R0 := mMapLoader
	26	[3858]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0xa4497305]
	27	[3858]	CALL     	R0 2 1 ; R0(R1)
	28	[3859]	GETUPVAL 	R0 U0 ; R0 := U0
	29	[3859]	CALL     	R0 1 1 ; R0()
	30	[3861]	GETGLOBAL	R0 K7 ; R0 := mRailJack
	31	[3861]	GETTABLE 	R0 R0 K8 ; R0 := R0["Active"]
	32	[3861]	TEST     	R0 0 ; if not R0 then PC := 66
	33	[3861]	JMP      	66 ; PC := 66
	34	[3861]	GETGLOBAL	R0 K9 ; R0 := 0x25d99d89
	35	[3861]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x21a1810f]
	36	[3861]	GETGLOBAL	R2 K11 ; R2 := 0x0469f296
	37	[3861]	LOADK    	R3 K12 ; R3 := "RailjackStarchartTutorial"
	38	[3861]	CALL     	R2 2 0 ; R2,... := R2(R3)
	39	[3861]	CALL     	R0 0 2 ; R0 := R0(R1,...)
	40	[3861]	TEST     	R0 1 ; if R0 then PC := 66
	41	[3861]	JMP      	66 ; PC := 66
	42	[3862]	GETGLOBAL	R0 K13 ; R0 := 0x34291f5c
	43	[3862]	GETTABLE 	R0 R0 K14 ; R0 := R0[0xe27b35bb]
	44	[3862]	CALL     	R0 1 2 ; R0 := R0()
	45	[3863]	SETTABLE 	R0 K15 K16 ; R0["dialogType"] := 0.000000
	46	[3864]	SETTABLE 	R0 K17 K18 ; R0["locString"] := "/Lotus/Language/Railjack/RailjackHelp_StarChart"
	47	[3865]	GETGLOBAL	R1 K3 ; R1 := 0x7b998233
	48	[3865]	GETGLOBAL	R2 K19 ; R2 := 0x7683d4b0
	49	[3865]	CALL     	R1 2 2 ; R1 := R1(R2)
	50	[3865]	TEST     	R1 1 ; if R1 then PC := 56
	51	[3865]	JMP      	56 ; PC := 56
	52	[3866]	GETGLOBAL	R1 K19 ; R1 := 0x7683d4b0
	53	[3866]	SELF     	R1 R1 K21 ; R2 := R1; R1 := R1[0xed4e0128]
	54	[3866]	CALL     	R1 2 2 ; R1 := R1(R2)
	55	[3866]	SETTABLE 	R0 K20 R1 ; R0["icon"] := R1
	56	[3868]	GETUPVAL 	R1 U1 ; R1 := U1
	57	[3868]	GETTABLE 	R1 R1 K22 ; R1 := R1[0xe99b84e7]
	58	[3868]	MOVE     	R2 R0 ; R2 := R0
	59	[3868]	CALL     	R1 2 1 ; R1(R2)
	60	[3869]	GETGLOBAL	R1 K9 ; R1 := 0x25d99d89
	61	[3869]	SELF     	R1 R1 K23 ; R2 := R1; R1 := R1[0xbf6c9575]
	62	[3869]	GETGLOBAL	R3 K11 ; R3 := 0x0469f296
	63	[3869]	LOADK    	R4 K12 ; R4 := "RailjackStarchartTutorial"
	64	[3869]	CALL     	R3 2 0 ; R3,... := R3(R4)
	65	[3869]	CALL     	R1 0 1 ; R1(R2,...)
	66	[3872]	RETURN   	R0 1 ; return 

function #77 <?:3874,3889> (36 instructions, 144 bytes at 00000211191DE490)
0 params, 3 slots, 1 upvalue, 0 locals, 14 constants, 0 functions
	1	[3875]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[3875]	GETTABLE 	R0 R0 K1 ; R0 := R0[0xbec1f4ee]
	3	[3875]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	4	[3875]	OP_LOADBOOL	R2 1 0 ; R2 := true
	5	[3875]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	6	[3875]	SETGLOBALHASH	R0 K0 ; mMapLoader := R0
	7	[3876]	GETGLOBAL	R0 K0 ; R0 := mMapLoader
	8	[3876]	SETTABLE 	R0 K3 K4 ; R0["mSyncAvatars"] := true
	9	[3877]	GETGLOBAL	R0 K0 ; R0 := mMapLoader
	10	[3877]	SETTABLE 	R0 K5 K4 ; R0["mUseOperatorForLocal"] := true
	11	[3878]	GETGLOBAL	R0 K0 ; R0 := mMapLoader
	12	[3878]	SETTABLE 	R0 K6 K7 ; R0["mPortrait"] := false
	13	[3880]	GETGLOBAL	R0 K8 ; R0 := mRailJack
	14	[3880]	GETTABLE 	R0 R0 K9 ; R0 := R0["Active"]
	15	[3880]	TEST     	R0 0 ; if not R0 then PC := 27
	16	[3880]	JMP      	27 ; PC := 27
	17	[3881]	GETGLOBAL	R0 K10 ; R0 := 0x7b998233
	18	[3881]	GETGLOBAL	R1 K11 ; R1 := 0x9666d97b
	19	[3881]	CALL     	R0 2 2 ; R0 := R0(R1)
	20	[3881]	TEST     	R0 1 ; if R0 then PC := 36
	21	[3881]	JMP      	36 ; PC := 36
	22	[3882]	GETGLOBAL	R0 K0 ; R0 := mMapLoader
	23	[3882]	SELF     	R0 R0 K12 ; R1 := R0; R0 := R0[0x522b2215]
	24	[3882]	GETGLOBAL	R2 K11 ; R2 := 0x9666d97b
	25	[3882]	CALL     	R0 3 1 ; R0(R1,R2)
	26	[3883]	JMP      	36 ; PC := 36
	27	[3885]	GETGLOBAL	R0 K10 ; R0 := 0x7b998233
	28	[3885]	GETGLOBAL	R1 K13 ; R1 := 0x98c58db3
	29	[3885]	CALL     	R0 2 2 ; R0 := R0(R1)
	30	[3885]	TEST     	R0 1 ; if R0 then PC := 36
	31	[3885]	JMP      	36 ; PC := 36
	32	[3886]	GETGLOBAL	R0 K0 ; R0 := mMapLoader
	33	[3886]	SELF     	R0 R0 K12 ; R1 := R0; R0 := R0[0x522b2215]
	34	[3886]	GETGLOBAL	R2 K13 ; R2 := 0x98c58db3
	35	[3886]	CALL     	R0 3 1 ; R0(R1,R2)
	36	[3889]	RETURN   	R0 1 ; return 

function #78 <?:3891,3898> (29 instructions, 116 bytes at 00000211191DE750)
1 param, 8 slots, 0 upvalues, 0 locals, 11 constants, 0 functions
	1	[3892]	GETGLOBAL	R1 K0 ; R1 := 0xcfc01047
	2	[3892]	GETTABLE 	R2 R0 K1 ; R2 := R0["sectors"]
	3	[3892]	CALL     	R1 2 4 ; R1,R2,R3 := R1(R2)
	4	[3892]	JMP      	25 ; PC := 25
	5	[3893]	GETTABLE 	R6 R5 K2 ; R6 := R5["mission"]
	6	[3893]	GETTABLE 	R6 R6 K3 ; R6 := R6["missionType"]
	7	[3893]	EQ       	0 R6 K5 ; if R6 ~= 31.000000 then PC := 25
	8	[3893]	JMP      	25 ; PC := 25
	9	[3893]	GETGLOBAL	R6 K6 ; R6 := 0x7b998233
	10	[3893]	GETTABLE 	R7 R5 K2 ; R7 := R5["mission"]
	11	[3893]	GETTABLE 	R7 R7 K7 ; R7 := R7["levelOverride"]
	12	[3893]	CALL     	R6 2 2 ; R6 := R6(R7)
	13	[3893]	TEST     	R6 1 ; if R6 then PC := 25
	14	[3893]	JMP      	25 ; PC := 25
	15	[3893]	GETTABLE 	R6 R5 K2 ; R6 := R5["mission"]
	16	[3893]	GETTABLE 	R6 R6 K8 ; R6 := R6["faction"]
	17	[3893]	EQ       	1 R6 K9 ; if R6 == 0.000000 then PC := 23
	18	[3893]	JMP      	23 ; PC := 23
	19	[3893]	GETTABLE 	R6 R5 K2 ; R6 := R5["mission"]
	20	[3893]	GETTABLE 	R6 R6 K8 ; R6 := R6["faction"]
	21	[3893]	EQ       	0 R6 K10 ; if R6 ~= 1.000000 then PC := 25
	22	[3893]	JMP      	25 ; PC := 25
	23	[3894]	OP_LOADBOOL	R6 1 0 ; R6 := true
	24	[3894]	RETURN   	R6 2 ; return R6 
	25	[3892]	TFORLOOP 	R1 2 ; R4,R5 := R1(R2,R3); if R4 ~= nil then begin PC = 5; R3 := R4 end
	26	[3895]	JMP      	5 ; PC := 5
	27	[3897]	OP_LOADBOOL	R6 0 0 ; R6 := false
	28	[3897]	RETURN   	R6 2 ; return R6 
	29	[3898]	RETURN   	R0 1 ; return 

function #79 <?:3900,3906> (13 instructions, 52 bytes at 00000211191DE9C0)
2 params, 4 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[3901]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[3901]	MOVE     	R3 R1 ; R3 := R1
	3	[3901]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[3901]	TEST     	R2 0 ; if not R2 then PC := 8
	5	[3901]	JMP      	8 ; PC := 8
	6	[3902]	OP_LOADBOOL	R2 0 0 ; R2 := false
	7	[3902]	RETURN   	R2 2 ; return R2 
	8	[3904]	SELF     	R2 R1 K1 ; R3 := R1; R2 := R1[0xed4e0128]
	9	[3904]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[3904]	SETTABLE 	R0 R2 K2 ; R0[R2] := true
	11	[3905]	OP_LOADBOOL	R2 1 0 ; R2 := true
	12	[3905]	RETURN   	R2 2 ; return R2 
	13	[3906]	RETURN   	R0 1 ; return 

function #80 <?:3908,3962> (120 instructions, 480 bytes at 00000211191DEB30)
0 params, 28 slots, 4 upvalues, 0 locals, 26 constants, 0 functions
	1	[3909]	NEWTABLE 	R0 0 0 ; R0 := {}
	2	[3911]	GETGLOBAL	R1 K0 ; R1 := 0x76ea806b
	3	[3911]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x3f3ae64c]
	4	[3911]	LOADK    	R3 := 0.000000
	5	[3911]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	6	[3912]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	7	[3912]	MOVE     	R3 R1 ; R3 := R1
	8	[3912]	CALL     	R2 2 2 ; R2 := R2(R3)
	9	[3912]	TEST     	R2 1 ; if R2 then PC := 29
	10	[3912]	JMP      	29 ; PC := 29
	11	[3913]	SELF     	R2 R1 K3 ; R3 := R1; R2 := R1[0x80563238]
	12	[3913]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[3914]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	14	[3914]	MOVE     	R4 R2 ; R4 := R2
	15	[3914]	CALL     	R3 2 2 ; R3 := R3(R4)
	16	[3914]	TEST     	R3 1 ; if R3 then PC := 29
	17	[3914]	JMP      	29 ; PC := 29
	18	[3915]	SELF     	R3 R2 K4 ; R4 := R2; R3 := R2[0x62c81b76]
	19	[3915]	CALL     	R3 2 2 ; R3 := R3(R4)
	20	[3916]	GETGLOBAL	R4 K2 ; R4 := 0x7b998233
	21	[3916]	GETTABLE 	R5 R3 K5 ; R5 := R3["mShip"]
	22	[3916]	CALL     	R4 2 2 ; R4 := R4(R5)
	23	[3916]	TEST     	R4 1 ; if R4 then PC := 29
	24	[3916]	JMP      	29 ; PC := 29
	25	[3917]	GETTABLE 	R4 R3 K5 ; R4 := R3["mShip"]
	26	[3917]	SELF     	R4 R4 K6 ; R5 := R4; R4 := R4[0xed4e0128]
	27	[3917]	CALL     	R4 2 2 ; R4 := R4(R5)
	28	[3917]	SETTABLE 	R0 R4 K7 ; R0[R4] := true
	29	[3922]	LOADK    	R4 := 1.000000
	30	[3922]	GETGLOBAL	R5 K8 ; R5 := mSuperRegions
	31	[3922]	LEN      	R5 R5 ; R5 := # R5
	32	[3922]	LOADK    	R6 := 1.000000
	33	[3922]	FORPREP  	R4 40 ; R4 -= R6; PC := 40
	34	[3923]	GETGLOBAL	R8 K8 ; R8 := mSuperRegions
	35	[3923]	GETTABLE 	R8 R8 R7 ; R8 := R8[R7]
	36	[3924]	GETUPVAL 	R9 U0 ; R9 := U0
	37	[3924]	MOVE     	R10 R0 ; R10 := R0
	38	[3924]	GETTABLE 	R11 R8 K9 ; R11 := R8["deco"]
	39	[3924]	CALL     	R9 3 1 ; R9(R10,R11)
	40	[3922]	FORLOOP  	R4 34 ; R4 += R6; if R4 <= R5 then begin PC := 34; R7 := R4 end
	41	[3927]	LOADK    	R9 := 1.000000
	42	[3927]	GETGLOBAL	R10 K10 ; R10 := mRegions
	43	[3927]	LEN      	R10 R10 ; R10 := # R10
	44	[3927]	LOADK    	R11 := 1.000000
	45	[3927]	FORPREP  	R9 79 ; R9 -= R11; PC := 79
	46	[3928]	GETGLOBAL	R13 K10 ; R13 := mRegions
	47	[3928]	GETTABLE 	R13 R13 R12 ; R13 := R13[R12]
	48	[3931]	GETGLOBAL	R14 K11 ; R14 := mRailJack
	49	[3931]	GETTABLE 	R14 R14 K12 ; R14 := R14["Active"]
	50	[3931]	TEST     	R14 0 ; if not R14 then PC := 65
	51	[3931]	JMP      	65 ; PC := 65
	52	[3932]	GETGLOBAL	R14 K11 ; R14 := mRailJack
	53	[3932]	GETTABLE 	R14 R14 K13 ; R14 := R14["Regions"]
	54	[3932]	GETUPVAL 	R15 U1 ; R15 := U1
	55	[3932]	GETTABLE 	R15 R15 K14 ; R15 := R15["REGION_ID_DOJO"]
	56	[3932]	EQ       	1 R12 R15 ; if R12 == R15 then PC := 63
	57	[3932]	JMP      	63 ; PC := 63
	58	[3932]	GETUPVAL 	R15 U2 ; R15 := U2
	59	[3932]	MOVE     	R16 R13 ; R16 := R13
	60	[3932]	CALL     	R15 2 2 ; R15 := R15(R16)
	61	[3932]	JMP      	64 ; PC := 64
	62	[3932]	OP_LOADBOOL	R15 0 1 ; R15 := false; PC := 63
	63	[3932]	OP_LOADBOOL	R15 1 0 ; R15 := true
	64	[3932]	SETTABLE 	R14 R12 R15 ; R14[R12] := R15
	65	[3938]	GETUPVAL 	R14 U0 ; R14 := U0
	66	[3938]	MOVE     	R15 R0 ; R15 := R0
	67	[3938]	GETTABLE 	R16 R13 K15 ; R16 := R13["zoomedInEffects"]
	68	[3938]	CALL     	R14 3 1 ; R14(R15,R16)
	69	[3940]	GETUPVAL 	R14 U0 ; R14 := U0
	70	[3940]	MOVE     	R15 R0 ; R15 := R0
	71	[3940]	GETTABLE 	R16 R13 K16 ; R16 := R13["decoRedux"]
	72	[3940]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	73	[3940]	TEST     	R14 1 ; if R14 then PC := 79
	74	[3940]	JMP      	79 ; PC := 79
	75	[3941]	GETUPVAL 	R14 U0 ; R14 := U0
	76	[3941]	MOVE     	R15 R0 ; R15 := R0
	77	[3941]	GETTABLE 	R16 R13 K9 ; R16 := R13["deco"]
	78	[3941]	CALL     	R14 3 1 ; R14(R15,R16)
	79	[3927]	FORLOOP  	R9 46 ; R9 += R11; if R9 <= R10 then begin PC := 46; R12 := R9 end
	80	[3945]	LOADK    	R14 := 1.000000
	81	[3945]	GETGLOBAL	R15 K17 ; R15 := mMapNodes
	82	[3945]	LEN      	R15 R15 ; R15 := # R15
	83	[3945]	LOADK    	R16 := 1.000000
	84	[3945]	FORPREP  	R14 98 ; R14 -= R16; PC := 98
	85	[3946]	GETGLOBAL	R18 K17 ; R18 := mMapNodes
	86	[3946]	GETTABLE 	R18 R18 R17 ; R18 := R18[R17]
	87	[3947]	GETGLOBAL	R19 K18 ; R19 := 0xce225efa
	88	[3947]	CALL     	R19 1 1 ; R19()
	89	[3948]	GETUPVAL 	R19 U3 ; R19 := U3
	90	[3948]	MOVE     	R20 R18 ; R20 := R18
	91	[3948]	CALL     	R19 2 2 ; R19 := R19(R20)
	92	[3948]	TEST     	R19 0 ; if not R19 then PC := 98
	93	[3948]	JMP      	98 ; PC := 98
	94	[3949]	GETUPVAL 	R19 U0 ; R19 := U0
	95	[3949]	MOVE     	R20 R0 ; R20 := R0
	96	[3949]	GETTABLE 	R21 R18 K9 ; R21 := R18["deco"]
	97	[3949]	CALL     	R19 3 1 ; R19(R20,R21)
	98	[3945]	FORLOOP  	R14 85 ; R14 += R16; if R14 <= R15 then begin PC := 85; R17 := R14 end
	99	[3953]	NEWTABLE 	R19 0 0 ; R19 := {}
	100	[3955]	GETGLOBAL	R20 K19 ; R20 := 0xcfc01047
	101	[3955]	MOVE     	R21 R0 ; R21 := R0
	102	[3955]	CALL     	R20 2 4 ; R20,R21,R22 := R20(R21)
	103	[3955]	JMP      	109 ; PC := 109
	104	[3956]	GETGLOBAL	R25 K20 ; R25 := 0x33bdd652
	105	[3956]	GETTABLE 	R25 R25 K21 ; R25 := R25[0x23d5322f]
	106	[3956]	MOVE     	R26 R19 ; R26 := R19
	107	[3956]	MOVE     	R27 R23 ; R27 := R23
	108	[3956]	CALL     	R25 3 1 ; R25(R26,R27)
	109	[3955]	TFORLOOP 	R20 2 ; R23,R24 := R20(R21,R22); if R23 ~= nil then begin PC = 104; R22 := R23 end
	110	[3956]	JMP      	104 ; PC := 104
	111	[3959]	LEN      	R25 R19 ; R25 := # R19
	112	[3959]	LT       	0 K22 R25 ; if 0.000000 >= R25 then PC := 120
	113	[3959]	JMP      	120 ; PC := 120
	114	[3960]	GETGLOBAL	R25 K24 ; R25 := 0xbd496aa1
	115	[3960]	GETTABLE 	R25 R25 K25 ; R25 := R25[0x42645da3]
	116	[3960]	MOVE     	R26 R19 ; R26 := R19
	117	[3960]	OP_LOADBOOL	R27 1 0 ; R27 := true
	118	[3960]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	119	[3960]	SETGLOBALHASH	R25 K23 ; mResLoader := R25
	120	[3962]	RETURN   	R0 1 ; return 

function #81 <?:3964,3989> (38 instructions, 152 bytes at 00000211191DF190)
0 params, 13 slots, 1 upvalue, 0 locals, 12 constants, 3 functions
	1	[3965]	LOADK    	R0 := 3000.000000
	2	[3966]	UNM      	R1 R0 ; R1 := ^ R0
	3	[3967]	MOVE     	R2 R0 ; R2 := R0
	4	[3968]	UNM      	R3 R0 ; R3 := ^ R0
	5	[3969]	MOVE     	R4 R0 ; R4 := R0
	6	[3971]	GETGLOBAL	R5 K0 ; R5 := 0x2d0fad09
	7	[3971]	LOADK    	R6 K1 ; R6 := "EE.Interface.Components.DragScroll"
	8	[3971]	CALL     	R5 2 2 ; R5 := R5(R6)
	9	[3972]	GETTABLE 	R6 R5 K3 ; R6 := R5[0xae6791ba]
	10	[3972]	GETGLOBAL	R7 K4 ; R7 := 0xae91e43b
	11	[3972]	LOADK    	R8 K5 ; R8 := "Board"
	12	[3972]	MOVE     	R9 R1 ; R9 := R1
	13	[3972]	MOVE     	R10 R3 ; R10 := R3
	14	[3972]	MOVE     	R11 R2 ; R11 := R2
	15	[3972]	MOVE     	R12 R4 ; R12 := R4
	16	[3972]	CALL     	R6 7 2 ; R6 := R6(R7,R8,R9,R10,R11,R12)
	17	[3972]	SETGLOBALHASH	R6 K2 ; mDrag := R6
	18	[3973]	GETGLOBAL	R6 K2 ; R6 := mDrag
	19	[3976]	CLOSURE  	R7 0 ; R7 := closure(Function #1)
	20	[3976]	SETTABLE 	R6 K6 R7 ; R6["OnScroll"] := R7
	21	[3977]	GETGLOBAL	R6 K2 ; R6 := mDrag
	22	[3982]	CLOSURE  	R7 1 ; R7 := closure(Function #2)
	23	[3982]	SETTABLE 	R6 K7 R7 ; R6["mOnStopDrag"] := R7
	24	[3983]	GETGLOBAL	R6 K2 ; R6 := mDrag
	25	[3986]	CLOSURE  	R7 2 ; R7 := closure(Function #3)
	26	[3986]	GETUPVAL 	R0 U0 ; R0 := U0
	27	[3986]	SETTABLE 	R6 K8 R7 ; R6["mOnDeselectCallback"] := R7
	28	[3987]	GETGLOBAL	R6 K2 ; R6 := mDrag
	29	[3987]	SELF     	R6 R6 K9 ; R7 := R6; R6 := R6[0x4c4f8717]
	30	[3987]	LOADK    	R8 K10 ; R8 := "x"
	31	[3987]	LOADK    	R9 := 0.500000
	32	[3987]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	33	[3988]	GETGLOBAL	R6 K2 ; R6 := mDrag
	34	[3988]	SELF     	R6 R6 K9 ; R7 := R6; R6 := R6[0x4c4f8717]
	35	[3988]	LOADK    	R8 K11 ; R8 := "y"
	36	[3988]	LOADK    	R9 := 0.500000
	37	[3988]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	38	[3989]	RETURN   	R0 1 ; return 

function #82 <?:3991,4003> (19 instructions, 76 bytes at 00000211191DF6D0)
0 params, 2 slots, 1 upvalue, 0 locals, 11 constants, 0 functions
	1	[3992]	NEWTABLE 	R0 0 0 ; R0 := {}
	2	[3992]	SETUPVAL 	R0 U0 ; U0 := R0
	3	[3993]	GETUPVAL 	R0 U0 ; R0 := U0
	4	[3993]	SETTABLE 	R0 K0 K1 ; R0["mMovingRegion"] := nil
	5	[3994]	GETUPVAL 	R0 U0 ; R0 := U0
	6	[3994]	SETTABLE 	R0 K2 K1 ; R0["mMovingNode"] := nil
	7	[3995]	GETUPVAL 	R0 U0 ; R0 := U0
	8	[3995]	SETTABLE 	R0 K3 K1 ; R0["mEdgeNode1"] := nil
	9	[3996]	GETUPVAL 	R0 U0 ; R0 := U0
	10	[3996]	SETTABLE 	R0 K4 K1 ; R0["mEdgeNode2"] := nil
	11	[3998]	GETUPVAL 	R0 U0 ; R0 := U0
	12	[3998]	SETTABLE 	R0 K5 K1 ; R0["mInitialPosition"] := nil
	13	[3999]	GETUPVAL 	R0 U0 ; R0 := U0
	14	[3999]	SETTABLE 	R0 K6 K1 ; R0["mInitialWorldCursor"] := nil
	15	[4000]	GETUPVAL 	R0 U0 ; R0 := U0
	16	[4000]	SETTABLE 	R0 K7 K8 ; R0["mRotationAxis"] := "heading"
	17	[4002]	GETUPVAL 	R0 U0 ; R0 := U0
	18	[4002]	SETTABLE 	R0 K9 K10 ; R0["mFramingRegion"] := 0.000000
	19	[4003]	RETURN   	R0 1 ; return 

function #83 <?:4005,4013> (21 instructions, 84 bytes at 000002111D6136C0)
0 params, 2 slots, 2 upvalues, 0 locals, 6 constants, 0 functions
	1	[4006]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[4006]	GETTABLE 	R0 R0 K0 ; R0 := R0["mShiftDown"]
	3	[4006]	TEST     	R0 0 ; if not R0 then PC := 12
	4	[4006]	JMP      	12 ; PC := 12
	5	[4006]	GETUPVAL 	R0 U0 ; R0 := U0
	6	[4006]	GETTABLE 	R0 R0 K1 ; R0 := R0["mControlDown"]
	7	[4006]	TEST     	R0 0 ; if not R0 then PC := 12
	8	[4006]	JMP      	12 ; PC := 12
	9	[4007]	GETUPVAL 	R0 U1 ; R0 := U1
	10	[4007]	SETTABLE 	R0 K2 K3 ; R0["mRotationAxis"] := "bank"
	11	[4007]	JMP      	21 ; PC := 21
	12	[4008]	GETUPVAL 	R0 U0 ; R0 := U0
	13	[4008]	GETTABLE 	R0 R0 K1 ; R0 := R0["mControlDown"]
	14	[4008]	TEST     	R0 0 ; if not R0 then PC := 19
	15	[4008]	JMP      	19 ; PC := 19
	16	[4009]	GETUPVAL 	R0 U1 ; R0 := U1
	17	[4009]	SETTABLE 	R0 K2 K4 ; R0["mRotationAxis"] := "pitch"
	18	[4009]	JMP      	21 ; PC := 21
	19	[4011]	GETUPVAL 	R0 U1 ; R0 := U1
	20	[4011]	SETTABLE 	R0 K2 K5 ; R0["mRotationAxis"] := "heading"
	21	[4013]	RETURN   	R0 1 ; return 

function #84 <?:4015,4029> (51 instructions, 204 bytes at 000002111D6138A0)
1 param, 6 slots, 1 upvalue, 0 locals, 19 constants, 0 functions
	1	[4016]	GETGLOBAL	R1 K0 ; R1 := cjson
	2	[4016]	GETTABLE 	R1 R1 K1 ; R1 := R1[0xb139d7bc]
	3	[4016]	MOVE     	R2 R0 ; R2 := R0
	4	[4016]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[4018]	GETGLOBAL	R2 K2 ; R2 := 0xe7f2b02f
	6	[4018]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0xd8f4f9d0]
	7	[4018]	MOVE     	R4 R1 ; R4 := R1
	8	[4018]	CALL     	R2 3 1 ; R2(R3,R4)
	9	[4019]	GETGLOBAL	R2 K4 ; R2 := 0xbe190284
	10	[4019]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0xf2deaf69]
	11	[4019]	GETGLOBAL	R4 K6 ; R4 := gLotusHubGameRulesType
	12	[4019]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	13	[4019]	TEST     	R2 0 ; if not R2 then PC := 51
	14	[4019]	JMP      	51 ; PC := 51
	15	[4020]	GETGLOBAL	R2 K7 ; R2 := 0x76ea806b
	16	[4020]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0x3f3ae64c]
	17	[4020]	LOADK    	R4 := 0.000000
	18	[4020]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	19	[4020]	SELF     	R2 R2 K9 ; R3 := R2; R2 := R2[0x80563238]
	20	[4020]	CALL     	R2 2 2 ; R2 := R2(R3)
	21	[4021]	GETGLOBAL	R3 K10 ; R3 := 0x7f5022cf
	22	[4021]	GETTABLE 	R3 R3 K11 ; R3 := R3[0xa5c556b9]
	23	[4021]	GETTABLE 	R4 R0 K12 ; R4 := R0["name"]
	24	[4021]	GETUPVAL 	R5 U0 ; R5 := U0
	25	[4021]	GETTABLE 	R5 R5 K13 ; R5 := R5["HUB_TAG"]
	26	[4021]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	27	[4021]	EQ       	1 R3 K14 ; if R3 == nil then PC := 33
	28	[4021]	JMP      	33 ; PC := 33
	29	[4022]	SELF     	R3 R2 K15 ; R4 := R2; R3 := R2[0xd40ba817]
	30	[4022]	LOADK    	R5 := 0.000000
	31	[4022]	CALL     	R3 3 1 ; R3(R4,R5)
	32	[4022]	JMP      	51 ; PC := 51
	33	[4023]	GETGLOBAL	R3 K4 ; R3 := 0xbe190284
	34	[4023]	SELF     	R3 R3 K17 ; R4 := R3; R3 := R3[0x4414661f]
	35	[4023]	CALL     	R3 2 2 ; R3 := R3(R4)
	36	[4023]	TEST     	R3 0 ; if not R3 then PC := 48
	37	[4023]	JMP      	48 ; PC := 48
	38	[4023]	GETGLOBAL	R3 K4 ; R3 := 0xbe190284
	39	[4023]	SELF     	R3 R3 K5 ; R4 := R3; R3 := R3[0xf2deaf69]
	40	[4023]	GETGLOBAL	R5 K18 ; R5 := gLotusDojoGameRulesType
	41	[4023]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	42	[4023]	TEST     	R3 1 ; if R3 then PC := 48
	43	[4023]	JMP      	48 ; PC := 48
	44	[4024]	SELF     	R3 R2 K15 ; R4 := R2; R3 := R2[0xd40ba817]
	45	[4024]	LOADK    	R5 := 6.000000
	46	[4024]	CALL     	R3 3 1 ; R3(R4,R5)
	47	[4024]	JMP      	51 ; PC := 51
	48	[4026]	SELF     	R3 R2 K15 ; R4 := R2; R3 := R2[0xd40ba817]
	49	[4026]	LOADK    	R5 := 1.000000
	50	[4026]	CALL     	R3 3 1 ; R3(R4,R5)
	51	[4029]	RETURN   	R0 1 ; return 

function #85 <?:4031,4038> (16 instructions, 64 bytes at 000002111D613C30)
1 param, 3 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[4032]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[4032]	MOVE     	R2 R0 ; R2 := R0
	3	[4032]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[4032]	EQ       	0 R1 K2 ; if R1 ~= 4.000000 then PC := 16
	5	[4032]	JMP      	16 ; PC := 16
	6	[4033]	GETGLOBAL	R1 K3 ; R1 := _T
	7	[4033]	GETTABLE 	R1 R1 K4 ; R1 := R1["sectorInfo"]
	8	[4033]	EQ       	1 R1 K5 ; if R1 == nil then PC := 16
	9	[4033]	JMP      	16 ; PC := 16
	10	[4034]	GETUPVAL 	R1 U0 ; R1 := U0
	11	[4034]	GETGLOBAL	R2 K3 ; R2 := _T
	12	[4034]	GETTABLE 	R2 R2 K4 ; R2 := R2["sectorInfo"]
	13	[4034]	CALL     	R1 2 1 ; R1(R2)
	14	[4035]	GETGLOBAL	R1 K3 ; R1 := _T
	15	[4035]	SETTABLE 	R1 K4 K5 ; R1["sectorInfo"] := nil
	16	[4038]	RETURN   	R0 1 ; return 

function #86 <?:4040,4042> (6 instructions, 24 bytes at 000002111D613E10)
1 param, 4 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[4041]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[4041]	GETTABLE 	R1 R1 K0 ; R1 := R1[0xdedfded7]
	3	[4041]	MOVE     	R2 R0 ; R2 := R0
	4	[4041]	LOADK    	R3 K1 ; R3 := "AbortConfirm"
	5	[4041]	CALL     	R1 3 1 ; R1(R2,R3)
	6	[4042]	RETURN   	R0 1 ; return 

function #87 <?:4044,4050> (15 instructions, 60 bytes at 000002111D613F30)
2 params, 6 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[4045]	GETGLOBAL	R2 K0 ; R2 := 0xbe190284
	2	[4045]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0xd7d79b74]
	3	[4045]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[4046]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	5	[4046]	MOVE     	R4 R2 ; R4 := R2
	6	[4046]	CALL     	R3 2 2 ; R3 := R3(R4)
	7	[4046]	TEST     	R3 0 ; if not R3 then PC := 11
	8	[4046]	JMP      	11 ; PC := 11
	9	[4047]	OP_LOADBOOL	R3 0 0 ; R3 := false
	10	[4047]	RETURN   	R3 2 ; return R3 
	11	[4049]	SELF     	R3 R2 K3 ; R4 := R2; R3 := R2[0x371db6f9]
	12	[4049]	MOVE     	R5 R1 ; R5 := R1
	13	[4049]	TAILCALL 	R3 3 0 ; R3,... := R3(R4,R5)
	14	[4049]	RETURN   	R3 0 ; return R3,... 
	15	[4050]	RETURN   	R0 1 ; return 

function #88 <?:4052,4053> (1 instruction, 4 bytes at 000002111D6140B0)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[4053]	RETURN   	R0 1 ; return 

function #89 <?:4055,4057> (3 instructions, 12 bytes at 000002111D614180)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[4056]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[4056]	CALL     	R0 1 1 ; R0()
	3	[4057]	RETURN   	R0 1 ; return 

function #90 <?:4062,4064> (25 instructions, 100 bytes at 000002111D614250)
1 param, 4 slots, 1 upvalue, 0 locals, 8 constants, 0 functions
	1	[4063]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[4063]	GETTABLE 	R1 R1 K1 ; R1 := R1["gQuestMission"]
	3	[4063]	TEST     	R1 0 ; if not R1 then PC := 24
	4	[4063]	JMP      	24 ; PC := 24
	5	[4063]	GETGLOBAL	R1 K2 ; R1 := mRailJack
	6	[4063]	GETTABLE 	R1 R1 K3 ; R1 := R1["Active"]
	7	[4063]	TEST     	R1 0 ; if not R1 then PC := 24
	8	[4063]	JMP      	24 ; PC := 24
	9	[4063]	GETUPVAL 	R1 U0 ; R1 := U0
	10	[4063]	MOVE     	R2 R0 ; R2 := R0
	11	[4063]	CALL     	R1 2 2 ; R1 := R1(R2)
	12	[4063]	TEST     	R1 0 ; if not R1 then PC := 24
	13	[4063]	JMP      	24 ; PC := 24
	14	[4063]	GETGLOBAL	R1 K4 ; R1 := 0xe7f2b02f
	15	[4063]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xb321d806]
	16	[4063]	CALL     	R1 2 2 ; R1 := R1(R2)
	17	[4063]	GETGLOBAL	R2 K6 ; R2 := 0x89326c93
	18	[4063]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0x18d05d30]
	19	[4063]	CALL     	R2 2 2 ; R2 := R2(R3)
	20	[4063]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 23
	21	[4063]	JMP      	23 ; PC := 23
	22	[4063]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 23
	23	[4063]	OP_LOADBOOL	R1 1 0 ; R1 := true
	24	[4063]	RETURN   	R1 2 ; return R1 
	25	[4064]	RETURN   	R0 1 ; return 

function #91 <?:4066,4095> (90 instructions, 360 bytes at 000002111D614470)
1 param, 20 slots, 2 upvalues, 0 locals, 29 constants, 0 functions
	1	[4067]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[4067]	GETTABLE 	R1 R1 K0 ; R1 := R1[0x5e35d4d6]
	3	[4067]	CALL     	R1 1 2 ; R1 := R1()
	4	[4068]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	5	[4068]	MOVE     	R3 R1 ; R3 := R1
	6	[4068]	CALL     	R2 2 2 ; R2 := R2(R3)
	7	[4068]	TEST     	R2 0 ; if not R2 then PC := 11
	8	[4068]	JMP      	11 ; PC := 11
	9	[4069]	OP_LOADBOOL	R2 0 0 ; R2 := false
	10	[4069]	RETURN   	R2 2 ; return R2 
	11	[4072]	SELF     	R2 R1 K2 ; R3 := R1; R2 := R1[0xc18bf6f0]
	12	[4072]	GETGLOBAL	R4 K3 ; R4 := 0x0469f296
	13	[4072]	MOVE     	R5 R0 ; R5 := R0
	14	[4072]	CALL     	R4 2 0 ; R4,... := R4(R5)
	15	[4072]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	16	[4073]	TEST     	R2 0 ; if not R2 then PC := 88
	17	[4073]	JMP      	88 ; PC := 88
	18	[4073]	GETTABLE 	R3 R2 K4 ; R3 := R2["skillReqs"]
	19	[4073]	LEN      	R3 R3 ; R3 := # R3
	20	[4073]	LT       	0 K5 R3 ; if 0.000000 >= R3 then PC := 88
	21	[4073]	JMP      	88 ; PC := 88
	22	[4074]	NEWTABLE 	R3 6 0 ; R3 := {}
	23	[4074]	LOADK    	R4 K6 ; R4 := "Intrinsics"
	24	[4074]	LOADK    	R5 K7 ; R5 := "RailjackIntrinsicPilot"
	25	[4074]	LOADK    	R6 K8 ; R6 := "RailjackIntrinsicGunner"
	26	[4074]	LOADK    	R7 K9 ; R7 := "RailjackIntrinsicTactic"
	27	[4074]	LOADK    	R8 K10 ; R8 := "RailjackIntrinsicEngineer"
	28	[4074]	LOADK    	R9 K11 ; R9 := "RailjackIntrinsicCommand"
	29	[4074]	SETLIST  	R3 6 1 ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 6
	30	[4075]	GETGLOBAL	R4 K12 ; R4 := 0xcfc01047
	31	[4075]	GETTABLE 	R5 R2 K4 ; R5 := R2["skillReqs"]
	32	[4075]	CALL     	R4 2 4 ; R4,R5,R6 := R4(R5)
	33	[4075]	JMP      	86 ; PC := 86
	34	[4076]	LOADK    	R9 := 0.000000
	35	[4077]	GETTABLE 	R10 R8 K13 ; R10 := R8["skill"]
	36	[4077]	EQ       	0 R10 K5 ; if R10 ~= 0.000000 then PC := 53
	37	[4077]	JMP      	53 ; PC := 53
	38	[4078]	LOADK    	R10 := 0.000000
	39	[4078]	LOADK    	R11 := 5.000000
	40	[4078]	LOADK    	R12 := 1.000000
	41	[4078]	FORPREP  	R10 51 ; R10 -= R12; PC := 51
	42	[4079]	GETGLOBAL	R14 K15 ; R14 := 0x5bced4c4
	43	[4079]	GETTABLE 	R14 R14 K16 ; R14 := R14[0xb62ecfe0]
	44	[4079]	MOVE     	R15 R9 ; R15 := R9
	45	[4079]	GETGLOBAL	R16 K17 ; R16 := 0x25d99d89
	46	[4079]	SELF     	R16 R16 K18 ; R17 := R16; R16 := R16[0x659fead0]
	47	[4079]	MOVE     	R18 R13 ; R18 := R13
	48	[4079]	CALL     	R16 3 0 ; R16,... := R16(R17,R18)
	49	[4079]	CALL     	R14 0 2 ; R14 := R14(R15,...)
	50	[4079]	MOVE     	R9 R14 ; R9 := R14
	51	[4078]	FORLOOP  	R10 42 ; R10 += R12; if R10 <= R11 then begin PC := 42; R13 := R10 end
	52	[4080]	JMP      	58 ; PC := 58
	53	[4082]	GETGLOBAL	R14 K17 ; R14 := 0x25d99d89
	54	[4082]	SELF     	R14 R14 K18 ; R15 := R14; R14 := R14[0x659fead0]
	55	[4082]	GETTABLE 	R16 R8 K13 ; R16 := R8["skill"]
	56	[4082]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	57	[4082]	MOVE     	R9 R14 ; R9 := R14
	58	[4084]	GETTABLE 	R14 R8 K19 ; R14 := R8["req"]
	59	[4084]	LT       	0 R9 R14 ; if R9 >= R14 then PC := 86
	60	[4084]	JMP      	86 ; PC := 86
	61	[4085]	GETTABLE 	R14 R8 K13 ; R14 := R8["skill"]
	62	[4085]	ADD      	R14 R14 K20 ; R14 := R14 + 1.000000
	63	[4085]	GETTABLE 	R14 R3 R14 ; R14 := R3[R14]
	64	[4086]	GETGLOBAL	R15 K21 ; R15 := 0x7f5022cf
	65	[4086]	GETTABLE 	R15 R15 K22 ; R15 := R15[0x3f3e4d12]
	66	[4086]	GETGLOBAL	R16 K23 ; R16 := 0x603636ad
	67	[4086]	LOADK    	R17 K24 ; R17 := "/Lotus/Language/Intrinsics/"
	68	[4086]	MOVE     	R18 R14 ; R18 := R14
	69	[4086]	CONCAT   	R17 R17 R18 ; R17 := R17 .. R18
	70	[4086]	LOADNIL  	R18 R18 ; R18 := nil
	71	[4086]	CALL     	R16 3 0 ; R16,... := R16(R17,R18)
	72	[4086]	CALL     	R15 0 2 ; R15 := R15(R16,...)
	73	[4087]	GETGLOBAL	R16 K23 ; R16 := 0x603636ad
	74	[4087]	LOADK    	R17 K25 ; R17 := "/Lotus/Language/Menu/InsufficientSkill"
	75	[4087]	NEWTABLE 	R18 0 2 ; R18 := {}
	76	[4087]	SETTABLE 	R18 K26 R15 ; R18["SKILL"] := R15
	77	[4087]	GETTABLE 	R19 R8 K19 ; R19 := R8["req"]
	78	[4087]	SETTABLE 	R18 K27 R19 ; R18["RANK"] := R19
	79	[4087]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	80	[4088]	GETUPVAL 	R17 U1 ; R17 := U1
	81	[4088]	GETTABLE 	R17 R17 K28 ; R17 := R17[0xe0cba3ca]
	82	[4088]	MOVE     	R18 R16 ; R18 := R16
	83	[4088]	CALL     	R17 2 1 ; R17(R18)
	84	[4089]	OP_LOADBOOL	R17 0 0 ; R17 := false
	85	[4089]	RETURN   	R17 2 ; return R17 
	86	[4075]	TFORLOOP 	R4 2 ; R7,R8 := R4(R5,R6); if R7 ~= nil then begin PC = 34; R6 := R7 end
	87	[4090]	JMP      	34 ; PC := 34
	88	[4094]	OP_LOADBOOL	R17 1 0 ; R17 := true
	89	[4094]	RETURN   	R17 2 ; return R17 
	90	[4095]	RETURN   	R0 1 ; return 

function #92 <?:4097,4208> (247 instructions, 988 bytes at 000002111D614A30)
6 params, 28 slots, 8 upvalues, 0 locals, 58 constants, 0 functions
	1	[4100]	GETUPVAL 	R6 U0 ; R6 := U0
	2	[4100]	GETTABLE 	R6 R6 K0 ; R6 := R6[0x94098a1d]
	3	[4100]	GETGLOBAL	R7 K1 ; R7 := 0x0469f296
	4	[4100]	MOVE     	R8 R0 ; R8 := R0
	5	[4100]	CALL     	R7 2 2 ; R7 := R7(R8)
	6	[4100]	OP_LOADBOOL	R8 1 0 ; R8 := true
	7	[4100]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	8	[4101]	EQ       	1 R6 K2 ; if R6 == nil then PC := 16
	9	[4101]	JMP      	16 ; PC := 16
	10	[4102]	GETUPVAL 	R7 U0 ; R7 := U0
	11	[4102]	GETTABLE 	R7 R7 K3 ; R7 := R7[0xc0ee6a07]
	12	[4102]	MOVE     	R8 R6 ; R8 := R6
	13	[4102]	CALL     	R7 2 1 ; R7(R8)
	14	[4103]	OP_LOADBOOL	R7 0 0 ; R7 := false
	15	[4103]	RETURN   	R7 2 ; return R7 
	16	[4107]	MOVE     	R7 R0 ; R7 := R0
	17	[4108]	GETGLOBAL	R8 K4 ; R8 := 0x7f5022cf
	18	[4108]	GETTABLE 	R8 R8 K5 ; R8 := R8[0xa5c556b9]
	19	[4108]	MOVE     	R9 R0 ; R9 := R0
	20	[4108]	GETUPVAL 	R10 U1 ; R10 := U1
	21	[4108]	GETTABLE 	R10 R10 K6 ; R10 := R10["TAG_SEPERATOR"]
	22	[4108]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	23	[4109]	TEST     	R8 0 ; if not R8 then PC := 32
	24	[4109]	JMP      	32 ; PC := 32
	25	[4110]	GETGLOBAL	R9 K4 ; R9 := 0x7f5022cf
	26	[4110]	GETTABLE 	R9 R9 K7 ; R9 := R9[0x1a94c9cc]
	27	[4110]	MOVE     	R10 R0 ; R10 := R0
	28	[4110]	LOADK    	R11 := 1.000000
	29	[4110]	SUB      	R12 R8 K8 ; R12 := R8 - 1.000000
	30	[4110]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	31	[4110]	MOVE     	R7 R9 ; R7 := R9
	32	[4112]	GETUPVAL 	R9 U2 ; R9 := U2
	33	[4112]	MOVE     	R10 R7 ; R10 := R7
	34	[4112]	CALL     	R9 2 2 ; R9 := R9(R10)
	35	[4112]	TEST     	R9 1 ; if R9 then PC := 38
	36	[4112]	JMP      	38 ; PC := 38
	37	[4113]	RETURN   	R0 1 ; return 
	38	[4115]	GETGLOBAL	R9 K9 ; R9 := 0x89326c93
	39	[4115]	SELF     	R9 R9 K10 ; R10 := R9; R9 := R9[0x78298275]
	40	[4115]	CALL     	R9 2 2 ; R9 := R9(R10)
	41	[4116]	GETGLOBAL	R10 K11 ; R10 := 0x7b998233
	42	[4116]	MOVE     	R11 R9 ; R11 := R9
	43	[4116]	CALL     	R10 2 2 ; R10 := R10(R11)
	44	[4116]	TEST     	R10 1 ; if R10 then PC := 161
	45	[4116]	JMP      	161 ; PC := 161
	46	[4116]	GETUPVAL 	R10 U3 ; R10 := U3
	47	[4116]	MOVE     	R11 R9 ; R11 := R9
	48	[4116]	CALL     	R10 2 2 ; R10 := R10(R11)
	49	[4116]	TEST     	R10 0 ; if not R10 then PC := 161
	50	[4116]	JMP      	161 ; PC := 161
	51	[4118]	GETGLOBAL	R10 K12 ; R10 := 0xbe190284
	52	[4118]	SELF     	R10 R10 K13 ; R11 := R10; R10 := R10[0xd7d79b74]
	53	[4118]	CALL     	R10 2 2 ; R10 := R10(R11)
	54	[4119]	GETUPVAL 	R11 U1 ; R11 := U1
	55	[4119]	GETTABLE 	R11 R11 K14 ; R11 := R11[0x5e35d4d6]
	56	[4119]	CALL     	R11 1 2 ; R11 := R11()
	57	[4120]	GETGLOBAL	R12 K11 ; R12 := 0x7b998233
	58	[4120]	MOVE     	R13 R11 ; R13 := R11
	59	[4120]	CALL     	R12 2 2 ; R12 := R12(R13)
	60	[4120]	TEST     	R12 1 ; if R12 then PC := 77
	61	[4120]	JMP      	77 ; PC := 77
	62	[4120]	GETGLOBAL	R12 K11 ; R12 := 0x7b998233
	63	[4120]	MOVE     	R13 R9 ; R13 := R9
	64	[4120]	CALL     	R12 2 2 ; R12 := R12(R13)
	65	[4120]	TEST     	R12 1 ; if R12 then PC := 77
	66	[4120]	JMP      	77 ; PC := 77
	67	[4120]	GETGLOBAL	R12 K11 ; R12 := 0x7b998233
	68	[4120]	MOVE     	R13 R10 ; R13 := R10
	69	[4120]	CALL     	R12 2 2 ; R12 := R12(R13)
	70	[4120]	TEST     	R12 1 ; if R12 then PC := 77
	71	[4120]	JMP      	77 ; PC := 77
	72	[4120]	SELF     	R12 R10 K15 ; R13 := R10; R12 := R10[0x371db6f9]
	73	[4120]	MOVE     	R14 R9 ; R14 := R9
	74	[4120]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	75	[4120]	TEST     	R12 1 ; if R12 then PC := 78
	76	[4120]	JMP      	78 ; PC := 78
	77	[4121]	RETURN   	R0 1 ; return 
	78	[4124]	GETGLOBAL	R12 K16 ; R12 := 0x3d106989
	79	[4124]	LOADK    	R13 K17 ; R13 := "RJ GoToMission - "
	80	[4124]	GETGLOBAL	R14 K18 ; R14 := 0x64fb1586
	81	[4124]	MOVE     	R15 R0 ; R15 := R0
	82	[4124]	CALL     	R14 2 2 ; R14 := R14(R15)
	83	[4124]	CONCAT   	R13 R13 R14 ; R13 := R13 .. R14
	84	[4124]	CALL     	R12 2 1 ; R12(R13)
	85	[4125]	GETGLOBAL	R12 K19 ; R12 := _T
	86	[4125]	GETGLOBAL	R13 K1 ; R13 := 0x0469f296
	87	[4125]	MOVE     	R14 R0 ; R14 := R0
	88	[4125]	CALL     	R13 2 2 ; R13 := R13(R14)
	89	[4125]	SETTABLE 	R12 K20 R13 ; R12[0xae91e43b] := R13
	90	[4126]	GETGLOBAL	R12 K19 ; R12 := _T
	91	[4126]	GETGLOBAL	R13 K12 ; R13 := 0xbe190284
	92	[4126]	SELF     	R13 R13 K22 ; R14 := R13; R13 := R13[0xf2deaf69]
	93	[4126]	GETGLOBAL	R15 K23 ; R15 := gLotusAttractModeGameRulesType
	94	[4126]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	95	[4126]	SETTABLE 	R12 K21 R13 ; R12[0x1fd6abd0] := R13
	96	[4128]	NEWTABLE 	R12 0 3 ; R12 := {}
	97	[4128]	SETTABLE 	R12 K24 R0 ; R12["name"] := R0
	98	[4128]	SETTABLE 	R12 K25 R1 ; R12["quest"] := R1
	99	[4128]	SETTABLE 	R12 K26 K27 ; R12["difficulty"] := 0.000000
	100	[4129]	GETGLOBAL	R13 K4 ; R13 := 0x7f5022cf
	101	[4129]	GETTABLE 	R13 R13 K5 ; R13 := R13[0xa5c556b9]
	102	[4129]	MOVE     	R14 R0 ; R14 := R0
	103	[4129]	GETUPVAL 	R15 U1 ; R15 := U1
	104	[4129]	GETTABLE 	R15 R15 K28 ; R15 := R15["NEMESIS_MISSION_TAG"]
	105	[4129]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	106	[4129]	TEST     	R13 0 ; if not R13 then PC := 115
	107	[4129]	JMP      	115 ; PC := 115
	108	[4129]	GETGLOBAL	R13 K19 ; R13 := _T
	109	[4129]	GETTABLE 	R13 R13 K29 ; R13 := R13["CachedNemesisGenericMissionInfo"]
	110	[4129]	TEST     	R13 0 ; if not R13 then PC := 115
	111	[4129]	JMP      	115 ; PC := 115
	112	[4130]	GETGLOBAL	R13 K19 ; R13 := _T
	113	[4130]	GETTABLE 	R13 R13 K29 ; R13 := R13["CachedNemesisGenericMissionInfo"]
	114	[4130]	SETTABLE 	R12 K30 R13 ; R12[0x64fb1586] := R13
	115	[4133]	GETGLOBAL	R13 K31 ; R13 := cjson
	116	[4133]	GETTABLE 	R13 R13 K32 ; R13 := R13[0xb139d7bc]
	117	[4133]	MOVE     	R14 R12 ; R14 := R12
	118	[4133]	CALL     	R13 2 2 ; R13 := R13(R14)
	119	[4134]	GETGLOBAL	R14 K33 ; R14 := 0xe7f2b02f
	120	[4134]	SELF     	R14 R14 K34 ; R15 := R14; R14 := R14[0xd8f4f9d0]
	121	[4134]	MOVE     	R16 R13 ; R16 := R13
	122	[4134]	CALL     	R14 3 1 ; R14(R15,R16)
	123	[4136]	SELF     	R14 R11 K35 ; R15 := R11; R14 := R11[0x3ad9ed31]
	124	[4136]	GETGLOBAL	R16 K1 ; R16 := 0x0469f296
	125	[4136]	LOADK    	R17 K36 ; R17 := "CrewShipGenericTunnel"
	126	[4136]	CALL     	R16 2 0 ; R16,... := R16(R17)
	127	[4136]	CALL     	R14 0 2 ; R14 := R14(R15,...)
	128	[4137]	SELF     	R15 R10 K37 ; R16 := R10; R15 := R10[0xb642d60b]
	129	[4137]	GETTABLE 	R17 R14 K38 ; R17 := R14["mission"]
	130	[4137]	CALL     	R15 3 1 ; R15(R16,R17)
	131	[4139]	GETGLOBAL	R15 K39 ; R15 := mRegions
	132	[4139]	SETTABLE 	R15 K40 K2 ; R15["mSelectedRegion"] := nil
	133	[4142]	GETGLOBAL	R15 K33 ; R15 := 0xe7f2b02f
	134	[4142]	SELF     	R15 R15 K41 ; R16 := R15; R15 := R15[0xb321d806]
	135	[4142]	CALL     	R15 2 2 ; R15 := R15(R16)
	136	[4142]	TEST     	R15 0 ; if not R15 then PC := 153
	137	[4142]	JMP      	153 ; PC := 153
	138	[4142]	GETGLOBAL	R15 K12 ; R15 := 0xbe190284
	139	[4142]	SELF     	R15 R15 K22 ; R16 := R15; R15 := R15[0xf2deaf69]
	140	[4142]	GETGLOBAL	R17 K42 ; R17 := gLotusHubGameRulesType
	141	[4142]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	142	[4142]	TEST     	R15 1 ; if R15 then PC := 153
	143	[4142]	JMP      	153 ; PC := 153
	144	[4143]	OP_LOADBOOL	R15 1 0 ; R15 := true
	145	[4144]	OP_LOADBOOL	R16 0 0 ; R16 := false
	146	[4145]	GETUPVAL 	R17 U4 ; R17 := U4
	147	[4145]	GETTABLE 	R17 R17 K43 ; R17 := R17[0x59fd07dd]
	148	[4145]	MOVE     	R18 R0 ; R18 := R0
	149	[4145]	MOVE     	R19 R15 ; R19 := R15
	150	[4145]	MOVE     	R20 R16 ; R20 := R16
	151	[4145]	GETUPVAL 	R21 U5 ; R21 := U5
	152	[4145]	CALL     	R17 5 1 ; R17(R18,R19,R20,R21)
	153	[4148]	OP_LOADBOOL	R17 1 0 ; R17 := true
	154	[4149]	GETUPVAL 	R18 U6 ; R18 := U6
	155	[4149]	MOVE     	R19 R17 ; R19 := R17
	156	[4149]	CALL     	R18 2 1 ; R18(R19)
	157	[4173]	GETGLOBAL	R18 K44 ; R18 := mRailJack
	158	[4173]	SETTABLE 	R18 K45 K2 ; R18["SelectionNode"] := nil
	159	[4174]	OP_LOADBOOL	R18 1 0 ; R18 := true
	160	[4174]	RETURN   	R18 2 ; return R18 
	161	[4177]	NEWTABLE 	R18 0 4 ; R18 := {}
	162	[4177]	SETTABLE 	R18 K24 R0 ; R18["name"] := R0
	163	[4177]	SETTABLE 	R18 K25 R1 ; R18["quest"] := R1
	164	[4177]	SETTABLE 	R18 K26 R3 ; R18["difficulty"] := R3
	165	[4177]	SETTABLE 	R18 K46 R5 ; R18["wager"] := R5
	166	[4179]	TEST     	R2 0 ; if not R2 then PC := 171
	167	[4179]	JMP      	171 ; PC := 171
	168	[4179]	EQ       	1 R2 K47 ; if R2 == "" then PC := 171
	169	[4179]	JMP      	171 ; PC := 171
	170	[4180]	SETTABLE 	R18 K48 R2 ; R18["raid"] := R2
	171	[4183]	TEST     	R4 0 ; if not R4 then PC := 176
	172	[4183]	JMP      	176 ; PC := 176
	173	[4183]	EQ       	1 R4 K47 ; if R4 == "" then PC := 176
	174	[4183]	JMP      	176 ; PC := 176
	175	[4184]	SETTABLE 	R18 K49 R4 ; R18["voidTier"] := R4
	176	[4187]	GETGLOBAL	R19 K4 ; R19 := 0x7f5022cf
	177	[4187]	GETTABLE 	R19 R19 K5 ; R19 := R19[0xa5c556b9]
	178	[4187]	MOVE     	R20 R0 ; R20 := R0
	179	[4187]	GETUPVAL 	R21 U1 ; R21 := U1
	180	[4187]	GETTABLE 	R21 R21 K28 ; R21 := R21["NEMESIS_MISSION_TAG"]
	181	[4187]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	182	[4187]	TEST     	R19 0 ; if not R19 then PC := 191
	183	[4187]	JMP      	191 ; PC := 191
	184	[4187]	GETGLOBAL	R19 K19 ; R19 := _T
	185	[4187]	GETTABLE 	R19 R19 K29 ; R19 := R19["CachedNemesisGenericMissionInfo"]
	186	[4187]	TEST     	R19 0 ; if not R19 then PC := 191
	187	[4187]	JMP      	191 ; PC := 191
	188	[4188]	GETGLOBAL	R19 K19 ; R19 := _T
	189	[4188]	GETTABLE 	R19 R19 K29 ; R19 := R19["CachedNemesisGenericMissionInfo"]
	190	[4188]	SETTABLE 	R18 K30 R19 ; R18[0x64fb1586] := R19
	191	[4191]	GETGLOBAL	R19 K11 ; R19 := 0x7b998233
	192	[4191]	MOVE     	R20 R1 ; R20 := R1
	193	[4191]	CALL     	R19 2 2 ; R19 := R19(R20)
	194	[4191]	TEST     	R19 1 ; if R19 then PC := 242
	195	[4191]	JMP      	242 ; PC := 242
	196	[4191]	GETGLOBAL	R19 K4 ; R19 := 0x7f5022cf
	197	[4191]	GETTABLE 	R19 R19 K5 ; R19 := R19[0xa5c556b9]
	198	[4191]	MOVE     	R20 R0 ; R20 := R0
	199	[4191]	GETUPVAL 	R21 U1 ; R21 := U1
	200	[4191]	GETTABLE 	R21 R21 K50 ; R21 := R21["KEY_TAG"]
	201	[4191]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	202	[4191]	TEST     	R19 0 ; if not R19 then PC := 242
	203	[4191]	JMP      	242 ; PC := 242
	204	[4192]	GETGLOBAL	R19 K4 ; R19 := 0x7f5022cf
	205	[4192]	GETTABLE 	R19 R19 K5 ; R19 := R19[0xa5c556b9]
	206	[4192]	MOVE     	R20 R0 ; R20 := R0
	207	[4192]	GETUPVAL 	R21 U1 ; R21 := U1
	208	[4192]	GETTABLE 	R21 R21 K50 ; R21 := R21["KEY_TAG"]
	209	[4192]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	210	[4193]	EQ       	1 R19 K2 ; if R19 == nil then PC := 242
	211	[4193]	JMP      	242 ; PC := 242
	212	[4194]	GETGLOBAL	R20 K4 ; R20 := 0x7f5022cf
	213	[4194]	GETTABLE 	R20 R20 K7 ; R20 := R20[0x1a94c9cc]
	214	[4194]	MOVE     	R21 R0 ; R21 := R0
	215	[4194]	LOADK    	R22 := 1.000000
	216	[4194]	SUB      	R23 R19 K8 ; R23 := R19 - 1.000000
	217	[4194]	CALL     	R20 4 2 ; R20 := R20(R21,R22,R23)
	218	[4195]	GETGLOBAL	R21 K51 ; R21 := 0xb009bbc6
	219	[4195]	MOVE     	R22 R20 ; R22 := R20
	220	[4195]	CALL     	R21 2 2 ; R21 := R21(R22)
	221	[4196]	GETGLOBAL	R22 K11 ; R22 := 0x7b998233
	222	[4196]	MOVE     	R23 R21 ; R23 := R21
	223	[4196]	CALL     	R22 2 2 ; R22 := R22(R23)
	224	[4196]	TEST     	R22 1 ; if R22 then PC := 242
	225	[4196]	JMP      	242 ; PC := 242
	226	[4196]	SELF     	R22 R21 K52 ; R23 := R21; R22 := R21[0x6f7d166f]
	227	[4196]	CALL     	R22 2 2 ; R22 := R22(R23)
	228	[4196]	TEST     	R22 0 ; if not R22 then PC := 242
	229	[4196]	JMP      	242 ; PC := 242
	230	[4197]	GETGLOBAL	R22 K19 ; R22 := _T
	231	[4197]	SETTABLE 	R22 K53 R18 ; R22["sectorInfo"] := R18
	232	[4198]	GETGLOBAL	R22 K54 ; R22 := 0xae91e43b
	233	[4198]	SELF     	R22 R22 K55 ; R23 := R22; R22 := R22[0xe4162eed]
	234	[4198]	LOADK    	R24 K56 ; R24 := "ShowQuestConfirm"
	235	[4198]	GETGLOBAL	R25 K18 ; R25 := 0x64fb1586
	236	[4198]	SELF     	R26 R21 K57 ; R27 := R21; R26 := R21[0x95446011]
	237	[4198]	CALL     	R26 2 0 ; R26,... := R26(R27)
	238	[4198]	CALL     	R25 0 0 ; R25,... := R25(R26,...)
	239	[4198]	CALL     	R22 0 1 ; R22(R23,...)
	240	[4200]	OP_LOADBOOL	R22 1 0 ; R22 := true
	241	[4200]	RETURN   	R22 2 ; return R22 
	242	[4205]	GETUPVAL 	R22 U7 ; R22 := U7
	243	[4205]	MOVE     	R23 R18 ; R23 := R18
	244	[4205]	CALL     	R22 2 1 ; R22(R23)
	245	[4207]	OP_LOADBOOL	R22 1 0 ; R22 := true
	246	[4207]	RETURN   	R22 2 ; return R22 
	247	[4208]	RETURN   	R0 1 ; return 

function #93 <?:4210,4226> (49 instructions, 196 bytes at 000002111D615770)
1 param, 5 slots, 1 upvalue, 0 locals, 15 constants, 0 functions
	1	[4211]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[4211]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[4211]	GETTABLE 	R2 R2 K1 ; R2 := R2["Invasion"]
	4	[4211]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[4211]	TEST     	R1 0 ; if not R1 then PC := 12
	6	[4211]	JMP      	12 ; PC := 12
	7	[4211]	GETGLOBAL	R1 K2 ; R1 := _T
	8	[4211]	GETTABLE 	R1 R1 K3 ; R1 := R1["CachedInvasionInfo"]
	9	[4211]	GETTABLE 	R1 R1 R0 ; R1 := R1[R0]
	10	[4211]	TEST     	R1 1 ; if R1 then PC := 13
	11	[4211]	JMP      	13 ; PC := 13
	12	[4212]	RETURN   	R0 1 ; return 
	13	[4215]	GETGLOBAL	R1 K4 ; R1 := 0x0032441c
	14	[4215]	GETGLOBAL	R2 K2 ; R2 := _T
	15	[4215]	GETTABLE 	R2 R2 K3 ; R2 := R2["CachedInvasionInfo"]
	16	[4215]	GETTABLE 	R2 R2 R0 ; R2 := R2[R0]
	17	[4215]	SETTABLE 	R1 K5 R2 ; R1["gInvasionInfo"] := R2
	18	[4216]	OP_LOADBOOL	R1 1 0 ; R1 := true
	19	[4216]	SETGLOBALHASH	R1 K6 ; mInputBlocked := R1
	20	[4218]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	21	[4218]	GETGLOBAL	R2 K2 ; R2 := _T
	22	[4218]	GETTABLE 	R2 R2 K7 ; R2 := R2["SquadOverlay"]
	23	[4218]	CALL     	R1 2 2 ; R1 := R1(R2)
	24	[4218]	TEST     	R1 1 ; if R1 then PC := 32
	25	[4218]	JMP      	32 ; PC := 32
	26	[4219]	GETGLOBAL	R1 K2 ; R1 := _T
	27	[4219]	GETTABLE 	R1 R1 K7 ; R1 := R1["SquadOverlay"]
	28	[4219]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xe4162eed]
	29	[4219]	LOADK    	R3 K9 ; R3 := "OnRadialSolarMapOpenChildMovie"
	30	[4219]	LOADK    	R4 K10 ; R4 := ""
	31	[4219]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	32	[4222]	GETUPVAL 	R1 U0 ; R1 := U0
	33	[4222]	GETGLOBAL	R2 K11 ; R2 := 0xae91e43b
	34	[4222]	SELF     	R2 R2 K12 ; R3 := R2; R2 := R2[0x1fd6abd0]
	35	[4222]	GETGLOBAL	R4 K13 ; R4 := 0x887eeb2f
	36	[4222]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	37	[4222]	SETTABLE 	R1 K1 R2 ; R1["Invasion"] := R2
	38	[4223]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	39	[4223]	GETUPVAL 	R2 U0 ; R2 := U0
	40	[4223]	GETTABLE 	R2 R2 K1 ; R2 := R2["Invasion"]
	41	[4223]	CALL     	R1 2 2 ; R1 := R1(R2)
	42	[4223]	TEST     	R1 1 ; if R1 then PC := 49
	43	[4223]	JMP      	49 ; PC := 49
	44	[4224]	GETUPVAL 	R1 U0 ; R1 := U0
	45	[4224]	GETTABLE 	R1 R1 K1 ; R1 := R1["Invasion"]
	46	[4224]	SELF     	R1 R1 K14 ; R2 := R1; R1 := R1[0x2002e1dc]
	47	[4224]	OP_LOADBOOL	R3 1 0 ; R3 := true
	48	[4224]	CALL     	R1 3 1 ; R1(R2,R3)
	49	[4226]	RETURN   	R0 1 ; return 

function #94 <?:4228,4239> (27 instructions, 108 bytes at 000002111D615AC0)
1 param, 6 slots, 2 upvalues, 0 locals, 9 constants, 0 functions
	1	[4229]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[4229]	SETTABLE 	R1 K0 K1 ; R1["Invasion"] := nil
	3	[4230]	OP_LOADBOOL	R1 0 0 ; R1 := false
	4	[4230]	SETGLOBALHASH	R1 K2 ; mInputBlocked := R1
	5	[4232]	GETGLOBAL	R1 K3 ; R1 := 0x7b998233
	6	[4232]	GETGLOBAL	R2 K4 ; R2 := _T
	7	[4232]	GETTABLE 	R2 R2 K5 ; R2 := R2["SquadOverlay"]
	8	[4232]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[4232]	TEST     	R1 1 ; if R1 then PC := 17
	10	[4232]	JMP      	17 ; PC := 17
	11	[4233]	GETGLOBAL	R1 K4 ; R1 := _T
	12	[4233]	GETTABLE 	R1 R1 K5 ; R1 := R1["SquadOverlay"]
	13	[4233]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0xe4162eed]
	14	[4233]	LOADK    	R3 K7 ; R3 := "OnRadialSolarMapCloseChildMovie"
	15	[4233]	LOADK    	R4 K8 ; R4 := ""
	16	[4233]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	17	[4236]	TEST     	R0 0 ; if not R0 then PC := 27
	18	[4236]	JMP      	27 ; PC := 27
	19	[4236]	EQ       	1 R0 K8 ; if R0 == "" then PC := 27
	20	[4236]	JMP      	27 ; PC := 27
	21	[4237]	GETUPVAL 	R1 U1 ; R1 := U1
	22	[4237]	MOVE     	R2 R0 ; R2 := R0
	23	[4237]	LOADK    	R3 K8 ; R3 := ""
	24	[4237]	LOADK    	R4 K8 ; R4 := ""
	25	[4237]	LOADK    	R5 K8 ; R5 := ""
	26	[4237]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	27	[4239]	RETURN   	R0 1 ; return 

function #95 <?:4241,4285> (122 instructions, 488 bytes at 000002111D615CF0)
1 param, 10 slots, 4 upvalues, 0 locals, 31 constants, 0 functions
	1	[4244]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[4244]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[4244]	GETTABLE 	R2 R2 K1 ; R2 := R2["Movie"]
	4	[4244]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[4244]	TEST     	R1 1 ; if R1 then PC := 14
	6	[4244]	JMP      	14 ; PC := 14
	7	[4244]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[4244]	GETTABLE 	R1 R1 K1 ; R1 := R1["Movie"]
	9	[4244]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xd4cc05b4]
	10	[4244]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[4244]	TEST     	R1 1 ; if R1 then PC := 14
	12	[4244]	JMP      	14 ; PC := 14
	13	[4245]	RETURN   	R0 1 ; return 
	14	[4248]	GETGLOBAL	R1 K3 ; R1 := _T
	15	[4248]	GETTABLE 	R1 R1 K4 ; R1 := R1["CachedVoidStormMissions"]
	16	[4248]	GETTABLE 	R1 R1 R0 ; R1 := R1[R0]
	17	[4249]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	18	[4249]	GETUPVAL 	R3 U1 ; R3 := U1
	19	[4249]	GETTABLE 	R3 R3 K5 ; R3 := R3["VoidProjection"]
	20	[4249]	CALL     	R2 2 2 ; R2 := R2(R3)
	21	[4249]	TEST     	R2 0 ; if not R2 then PC := 30
	22	[4249]	JMP      	30 ; PC := 30
	23	[4249]	GETGLOBAL	R2 K3 ; R2 := _T
	24	[4249]	GETTABLE 	R2 R2 K6 ; R2 := R2["CachedActiveMissions"]
	25	[4249]	GETTABLE 	R2 R2 R0 ; R2 := R2[R0]
	26	[4249]	TEST     	R2 1 ; if R2 then PC := 31
	27	[4249]	JMP      	31 ; PC := 31
	28	[4249]	TEST     	R1 1 ; if R1 then PC := 31
	29	[4249]	JMP      	31 ; PC := 31
	30	[4250]	RETURN   	R0 1 ; return 
	31	[4253]	GETUPVAL 	R2 U2 ; R2 := U2
	32	[4253]	MOVE     	R3 R0 ; R3 := R0
	33	[4253]	CALL     	R2 2 2 ; R2 := R2(R3)
	34	[4253]	TEST     	R2 1 ; if R2 then PC := 37
	35	[4253]	JMP      	37 ; PC := 37
	36	[4254]	RETURN   	R0 1 ; return 
	37	[4257]	GETUPVAL 	R2 U1 ; R2 := U1
	38	[4257]	GETGLOBAL	R3 K7 ; R3 := 0xae91e43b
	39	[4257]	SELF     	R3 R3 K8 ; R4 := R3; R3 := R3[0x1fd6abd0]
	40	[4257]	GETGLOBAL	R5 K9 ; R5 := 0xd7190dd1
	41	[4257]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	42	[4257]	SETTABLE 	R2 K5 R3 ; R2["VoidProjection"] := R3
	43	[4258]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	44	[4258]	GETUPVAL 	R3 U1 ; R3 := U1
	45	[4258]	GETTABLE 	R3 R3 K5 ; R3 := R3["VoidProjection"]
	46	[4258]	CALL     	R2 2 2 ; R2 := R2(R3)
	47	[4258]	TEST     	R2 1 ; if R2 then PC := 110
	48	[4258]	JMP      	110 ; PC := 110
	49	[4259]	GETUPVAL 	R2 U3 ; R2 := U3
	50	[4259]	GETTABLE 	R2 R2 K10 ; R2 := R2["VOID_PROJECTION_ITEMS"]
	51	[4259]	GETTABLE 	R2 R2 K11 ; R2 := R2["VoidT1"]
	52	[4260]	TEST     	R1 0 ; if not R1 then PC := 63
	53	[4260]	JMP      	63 ; PC := 63
	54	[4261]	GETGLOBAL	R3 K12 ; R3 := mVoidTear
	55	[4261]	GETGLOBAL	R4 K3 ; R4 := _T
	56	[4261]	GETTABLE 	R4 R4 K4 ; R4 := R4["CachedVoidStormMissions"]
	57	[4261]	GETTABLE 	R4 R4 R0 ; R4 := R4[R0]
	58	[4261]	GETTABLE 	R4 R4 K14 ; R4 := R4["tier"]
	59	[4261]	SELF     	R4 R4 K15 ; R5 := R4; R4 := R4[0x6d604ba7]
	60	[4261]	CALL     	R4 2 2 ; R4 := R4(R5)
	61	[4261]	SETTABLE 	R3 K13 R4 ; R3["MissionTier"] := R4
	62	[4261]	JMP      	72 ; PC := 72
	63	[4263]	GETGLOBAL	R3 K3 ; R3 := _T
	64	[4263]	GETTABLE 	R3 R3 K6 ; R3 := R3["CachedActiveMissions"]
	65	[4263]	GETTABLE 	R3 R3 R0 ; R3 := R3[R0]
	66	[4263]	GETTABLE 	R3 R3 K16 ; R3 := R3["mMissionInfo"]
	67	[4264]	GETGLOBAL	R4 K12 ; R4 := mVoidTear
	68	[4264]	GETGLOBAL	R5 K17 ; R5 := 0x64fb1586
	69	[4264]	GETTABLE 	R6 R3 K18 ; R6 := R3["activeMissionTag"]
	70	[4264]	CALL     	R5 2 2 ; R5 := R5(R6)
	71	[4264]	SETTABLE 	R4 K13 R5 ; R4["MissionTier"] := R5
	72	[4268]	GETUPVAL 	R4 U3 ; R4 := U3
	73	[4268]	GETTABLE 	R4 R4 K10 ; R4 := R4["VOID_PROJECTION_ITEMS"]
	74	[4268]	GETGLOBAL	R5 K12 ; R5 := mVoidTear
	75	[4268]	GETTABLE 	R5 R5 K13 ; R5 := R5["MissionTier"]
	76	[4268]	GETTABLE 	R4 R4 R5 ; R4 := R4[R5]
	77	[4268]	TEST     	R4 0 ; if not R4 then PC := 84
	78	[4268]	JMP      	84 ; PC := 84
	79	[4269]	GETUPVAL 	R4 U3 ; R4 := U3
	80	[4269]	GETTABLE 	R4 R4 K10 ; R4 := R4["VOID_PROJECTION_ITEMS"]
	81	[4269]	GETGLOBAL	R5 K12 ; R5 := mVoidTear
	82	[4269]	GETTABLE 	R5 R5 K13 ; R5 := R5["MissionTier"]
	83	[4269]	GETTABLE 	R2 R4 R5 ; R2 := R4[R5]
	84	[4272]	GETGLOBAL	R4 K12 ; R4 := mVoidTear
	85	[4272]	SETTABLE 	R4 K19 R0 ; R4["SectorName"] := R0
	86	[4273]	GETUPVAL 	R4 U1 ; R4 := U1
	87	[4273]	GETTABLE 	R4 R4 K5 ; R4 := R4["VoidProjection"]
	88	[4273]	SELF     	R4 R4 K20 ; R5 := R4; R4 := R4[0xf56f3887]
	89	[4273]	LOADK    	R6 K21 ; R6 := "SetExclusiveTier"
	90	[4273]	NEWTABLE 	R7 2 0 ; R7 := {}
	91	[4273]	SELF     	R8 R2 K22 ; R9 := R2; R8 := R2[0xed4e0128]
	92	[4273]	CALL     	R8 2 2 ; R8 := R8(R9)
	93	[4273]	LOADK    	R9 K23 ; R9 := "OnVoidProjectionChosen"
	94	[4273]	SETLIST  	R7 2 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 2
	95	[4273]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	96	[4275]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	97	[4275]	GETUPVAL 	R5 U0 ; R5 := U0
	98	[4275]	GETTABLE 	R5 R5 K1 ; R5 := R5["Movie"]
	99	[4275]	CALL     	R4 2 2 ; R4 := R4(R5)
	100	[4275]	TEST     	R4 1 ; if R4 then PC := 108
	101	[4275]	JMP      	108 ; PC := 108
	102	[4276]	GETUPVAL 	R4 U0 ; R4 := U0
	103	[4276]	GETTABLE 	R4 R4 K1 ; R4 := R4["Movie"]
	104	[4276]	SELF     	R4 R4 K24 ; R5 := R4; R4 := R4[0xe4162eed]
	105	[4276]	LOADK    	R6 K25 ; R6 := "ItemBrowsing"
	106	[4276]	LOADK    	R7 K26 ; R7 := "true"
	107	[4276]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	108	[4279]	OP_LOADBOOL	R4 1 0 ; R4 := true
	109	[4279]	SETGLOBALHASH	R4 K27 ; mInputBlocked := R4
	110	[4282]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	111	[4282]	GETGLOBAL	R5 K3 ; R5 := _T
	112	[4282]	GETTABLE 	R5 R5 K28 ; R5 := R5["SquadOverlay"]
	113	[4282]	CALL     	R4 2 2 ; R4 := R4(R5)
	114	[4282]	TEST     	R4 1 ; if R4 then PC := 122
	115	[4282]	JMP      	122 ; PC := 122
	116	[4283]	GETGLOBAL	R4 K3 ; R4 := _T
	117	[4283]	GETTABLE 	R4 R4 K28 ; R4 := R4["SquadOverlay"]
	118	[4283]	SELF     	R4 R4 K24 ; R5 := R4; R4 := R4[0xe4162eed]
	119	[4283]	LOADK    	R6 K29 ; R6 := "OnRadialSolarMapOpenChildMovie"
	120	[4283]	LOADK    	R7 K30 ; R7 := ""
	121	[4283]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	122	[4285]	RETURN   	R0 1 ; return 

function #96 <?:4287,4306> (60 instructions, 240 bytes at 000002111D616380)
1 param, 7 slots, 4 upvalues, 0 locals, 20 constants, 0 functions
	1	[4288]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[4288]	SETTABLE 	R1 K0 K1 ; R1["VoidProjection"] := nil
	3	[4289]	OP_LOADBOOL	R1 0 0 ; R1 := false
	4	[4289]	SETGLOBALHASH	R1 K2 ; mInputBlocked := R1
	5	[4291]	GETGLOBAL	R1 K3 ; R1 := 0x7b998233
	6	[4291]	GETUPVAL 	R2 U1 ; R2 := U1
	7	[4291]	GETTABLE 	R2 R2 K4 ; R2 := R2["Movie"]
	8	[4291]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[4291]	TEST     	R1 1 ; if R1 then PC := 17
	10	[4291]	JMP      	17 ; PC := 17
	11	[4292]	GETUPVAL 	R1 U1 ; R1 := U1
	12	[4292]	GETTABLE 	R1 R1 K4 ; R1 := R1["Movie"]
	13	[4292]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xe4162eed]
	14	[4292]	LOADK    	R3 K6 ; R3 := "ItemBrowsing"
	15	[4292]	LOADK    	R4 K7 ; R4 := "false"
	16	[4292]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	17	[4295]	GETGLOBAL	R1 K3 ; R1 := 0x7b998233
	18	[4295]	GETGLOBAL	R2 K8 ; R2 := _T
	19	[4295]	GETTABLE 	R2 R2 K9 ; R2 := R2["SquadOverlay"]
	20	[4295]	CALL     	R1 2 2 ; R1 := R1(R2)
	21	[4295]	TEST     	R1 1 ; if R1 then PC := 29
	22	[4295]	JMP      	29 ; PC := 29
	23	[4296]	GETGLOBAL	R1 K8 ; R1 := _T
	24	[4296]	GETTABLE 	R1 R1 K9 ; R1 := R1["SquadOverlay"]
	25	[4296]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xe4162eed]
	26	[4296]	LOADK    	R3 K10 ; R3 := "OnRadialSolarMapCloseChildMovie"
	27	[4296]	LOADK    	R4 K11 ; R4 := ""
	28	[4296]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	29	[4299]	EQ       	0 R0 K12 ; if R0 ~= "true" then PC := 60
	30	[4299]	JMP      	60 ; PC := 60
	31	[4300]	GETGLOBAL	R1 K13 ; R1 := mRailJack
	32	[4300]	GETTABLE 	R1 R1 K14 ; R1 := R1["Active"]
	33	[4300]	TEST     	R1 0 ; if not R1 then PC := 48
	34	[4300]	JMP      	48 ; PC := 48
	35	[4301]	GETUPVAL 	R1 U2 ; R1 := U2
	36	[4301]	GETGLOBAL	R2 K15 ; R2 := mVoidTear
	37	[4301]	GETTABLE 	R2 R2 K16 ; R2 := R2["SectorName"]
	38	[4301]	GETUPVAL 	R3 U3 ; R3 := U3
	39	[4301]	GETTABLE 	R3 R3 K17 ; R3 := R3["VOID_STORM_TAG"]
	40	[4301]	CONCAT   	R2 R2 R3 ; R2 := R2 .. R3
	41	[4301]	LOADK    	R3 K11 ; R3 := ""
	42	[4301]	LOADK    	R4 K11 ; R4 := ""
	43	[4301]	LOADK    	R5 K11 ; R5 := ""
	44	[4301]	GETGLOBAL	R6 K15 ; R6 := mVoidTear
	45	[4301]	GETTABLE 	R6 R6 K18 ; R6 := R6["MissionTier"]
	46	[4301]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	47	[4301]	JMP      	60 ; PC := 60
	48	[4303]	GETUPVAL 	R1 U2 ; R1 := U2
	49	[4303]	GETGLOBAL	R2 K15 ; R2 := mVoidTear
	50	[4303]	GETTABLE 	R2 R2 K16 ; R2 := R2["SectorName"]
	51	[4303]	GETUPVAL 	R3 U3 ; R3 := U3
	52	[4303]	GETTABLE 	R3 R3 K19 ; R3 := R3["ACTIVE_MISSION_TAG"]
	53	[4303]	CONCAT   	R2 R2 R3 ; R2 := R2 .. R3
	54	[4303]	LOADK    	R3 K11 ; R3 := ""
	55	[4303]	LOADK    	R4 K11 ; R4 := ""
	56	[4303]	LOADK    	R5 K11 ; R5 := ""
	57	[4303]	GETGLOBAL	R6 K15 ; R6 := mVoidTear
	58	[4303]	GETTABLE 	R6 R6 K18 ; R6 := R6["MissionTier"]
	59	[4303]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	60	[4306]	RETURN   	R0 1 ; return 

function #97 <?:4308,4309> (1 instruction, 4 bytes at 000002111D616760)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[4309]	RETURN   	R0 1 ; return 

function #98 <?:4311,4331> (34 instructions, 136 bytes at 000002111D616830)
1 param, 5 slots, 3 upvalues, 0 locals, 23 constants, 0 functions
	1	[4312]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[4312]	GETTABLE 	R1 R1 K0 ; R1 := R1["Nightmare"]
	3	[4312]	TEST     	R1 1 ; if R1 then PC := 10
	4	[4312]	JMP      	10 ; PC := 10
	5	[4312]	GETGLOBAL	R1 K1 ; R1 := _T
	6	[4312]	GETTABLE 	R1 R1 K2 ; R1 := R1["CachedSkullNodes"]
	7	[4312]	GETTABLE 	R1 R1 R0 ; R1 := R1[R0]
	8	[4312]	EQ       	0 R1 K3 ; if R1 ~= nil then PC := 11
	9	[4312]	JMP      	11 ; PC := 11
	10	[4313]	RETURN   	R0 1 ; return 
	11	[4316]	GETGLOBAL	R1 K1 ; R1 := _T
	12	[4316]	SETTABLE 	R1 K4 R0 ; R1["gNightmareNodeName"] := R0
	13	[4318]	GETGLOBAL	R1 K5 ; R1 := 0x34291f5c
	14	[4318]	GETTABLE 	R1 R1 K6 ; R1 := R1[0xe27b35bb]
	15	[4318]	CALL     	R1 1 2 ; R1 := R1()
	16	[4319]	SETTABLE 	R1 K7 K8 ; R1["dialogType"] := 5.000000
	17	[4320]	SETTABLE 	R1 K9 K10 ; R1["locString"] := "/Lotus/Language/Menu/ConfirmNightmare"
	18	[4321]	SETTABLE 	R1 K11 K12 ; R1["firstString"] := "/Lotus/Language/Menu/ConfirmNightmareYes"
	19	[4322]	SETTABLE 	R1 K13 K14 ; R1["secondString"] := "/Lotus/Language/Menu/ConfirmNightmareNo"
	20	[4323]	SETTABLE 	R1 K15 K16 ; R1["thirdString"] := "/Menu/Confirm_Item_Cancel"
	21	[4324]	SELF     	R2 R1 K17 ; R3 := R1; R2 := R1[0xe6ccc5b9]
	22	[4324]	LOADK    	R4 K18 ; R4 := "ConfirmNightmare"
	23	[4324]	CALL     	R2 3 1 ; R2(R3,R4)
	24	[4326]	GETUPVAL 	R2 U0 ; R2 := U0
	25	[4326]	GETUPVAL 	R3 U1 ; R3 := U1
	26	[4326]	GETTABLE 	R3 R3 K19 ; R3 := R3[0xe99b84e7]
	27	[4326]	MOVE     	R4 R1 ; R4 := R1
	28	[4326]	CALL     	R3 2 2 ; R3 := R3(R4)
	29	[4326]	SETTABLE 	R2 K0 R3 ; R2["Nightmare"] := R3
	30	[4328]	GETUPVAL 	R2 U2 ; R2 := U2
	31	[4328]	SETTABLE 	R2 K20 K21 ; R2["isLMBDown"] := false
	32	[4330]	OP_LOADBOOL	R2 1 0 ; R2 := true
	33	[4330]	SETGLOBALHASH	R2 K22 ; mInputBlocked := R2
	34	[4331]	RETURN   	R0 1 ; return 

function #99 <?:4333,4352> (34 instructions, 136 bytes at 000002111D616CC0)
1 param, 7 slots, 3 upvalues, 0 locals, 14 constants, 0 functions
	1	[4334]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[4334]	SETTABLE 	R1 K0 K1 ; R1["Nightmare"] := nil
	3	[4335]	OP_LOADBOOL	R1 0 0 ; R1 := false
	4	[4335]	SETGLOBALHASH	R1 K2 ; mInputBlocked := R1
	5	[4337]	EQ       	0 R0 K4 ; if R0 ~= 5.000000 then PC := 8
	6	[4337]	JMP      	8 ; PC := 8
	7	[4338]	RETURN   	R0 1 ; return 
	8	[4341]	GETGLOBAL	R1 K5 ; R1 := _T
	9	[4341]	GETTABLE 	R1 R1 K6 ; R1 := R1["gNightmareNodeName"]
	10	[4343]	EQ       	0 R0 K7 ; if R0 ~= 6.000000 then PC := 22
	11	[4343]	JMP      	22 ; PC := 22
	12	[4344]	GETGLOBAL	R2 K8 ; R2 := 0x0032441c
	13	[4344]	GETTABLE 	R2 R2 K9 ; R2 := R2["CachedGoalInfo"]
	14	[4344]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	15	[4344]	TEST     	R2 0 ; if not R2 then PC := 28
	16	[4344]	JMP      	28 ; PC := 28
	17	[4345]	MOVE     	R2 R1 ; R2 := R1
	18	[4345]	GETUPVAL 	R3 U1 ; R3 := U1
	19	[4345]	GETTABLE 	R3 R3 K10 ; R3 := R3["EVENT_TAG"]
	20	[4345]	CONCAT   	R1 R2 R3 ; R1 := R2 .. R3
	21	[4346]	JMP      	28 ; PC := 28
	22	[4347]	EQ       	0 R0 K11 ; if R0 ~= 4.000000 then PC := 28
	23	[4347]	JMP      	28 ; PC := 28
	24	[4348]	MOVE     	R2 R1 ; R2 := R1
	25	[4348]	GETUPVAL 	R3 U1 ; R3 := U1
	26	[4348]	GETTABLE 	R3 R3 K12 ; R3 := R3["NIGHTMARE_TAG"]
	27	[4348]	CONCAT   	R1 R2 R3 ; R1 := R2 .. R3
	28	[4351]	GETUPVAL 	R2 U2 ; R2 := U2
	29	[4351]	MOVE     	R3 R1 ; R3 := R1
	30	[4351]	LOADK    	R4 K13 ; R4 := ""
	31	[4351]	LOADK    	R5 K13 ; R5 := ""
	32	[4351]	LOADK    	R6 K13 ; R6 := ""
	33	[4351]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	34	[4352]	RETURN   	R0 1 ; return 

function #100 <?:4354,4355> (1 instruction, 4 bytes at 000002111D616F80)
1 param, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[4355]	RETURN   	R0 1 ; return 

function #101 <?:4357,4382> (78 instructions, 312 bytes at 000002111D617050)
4 params, 10 slots, 2 upvalues, 0 locals, 26 constants, 0 functions
	1	[4358]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	2	[4358]	GETGLOBAL	R5 K1 ; R5 := mWagerMission
	3	[4358]	GETTABLE 	R5 R5 K2 ; R5 := R5["MovieInst"]
	4	[4358]	CALL     	R4 2 2 ; R4 := R4(R5)
	5	[4358]	TEST     	R4 1 ; if R4 then PC := 8
	6	[4358]	JMP      	8 ; PC := 8
	7	[4359]	RETURN   	R0 1 ; return 
	8	[4362]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	9	[4362]	GETUPVAL 	R5 U0 ; R5 := U0
	10	[4362]	GETTABLE 	R5 R5 K3 ; R5 := R5["Movie"]
	11	[4362]	CALL     	R4 2 2 ; R4 := R4(R5)
	12	[4362]	TEST     	R4 1 ; if R4 then PC := 20
	13	[4362]	JMP      	20 ; PC := 20
	14	[4363]	GETUPVAL 	R4 U0 ; R4 := U0
	15	[4363]	GETTABLE 	R4 R4 K3 ; R4 := R4["Movie"]
	16	[4363]	SELF     	R4 R4 K4 ; R5 := R4; R4 := R4[0xe4162eed]
	17	[4363]	LOADK    	R6 K5 ; R6 := "ItemBrowsing"
	18	[4363]	LOADK    	R7 K6 ; R7 := "true"
	19	[4363]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	20	[4366]	GETGLOBAL	R4 K1 ; R4 := mWagerMission
	21	[4366]	SETTABLE 	R4 K7 R0 ; R4["SectorName"] := R0
	22	[4367]	GETGLOBAL	R4 K1 ; R4 := mWagerMission
	23	[4367]	SETTABLE 	R4 K8 R2 ; R4["Quest"] := R2
	24	[4368]	GETGLOBAL	R4 K1 ; R4 := mWagerMission
	25	[4368]	SETTABLE 	R4 K9 R3 ; R4["Difficulty"] := R3
	26	[4370]	GETGLOBAL	R4 K1 ; R4 := mWagerMission
	27	[4370]	GETGLOBAL	R5 K10 ; R5 := 0xae91e43b
	28	[4370]	SELF     	R5 R5 K11 ; R6 := R5; R5 := R5[0x1fd6abd0]
	29	[4370]	GETGLOBAL	R7 K12 ; R7 := 0x8f3d7fbc
	30	[4370]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	31	[4370]	SETTABLE 	R4 K2 R5 ; R4["MovieInst"] := R5
	32	[4371]	OP_LOADBOOL	R4 1 0 ; R4 := true
	33	[4371]	SETGLOBALHASH	R4 K13 ; mInputBlocked := R4
	34	[4373]	TEST     	R1 0 ; if not R1 then PC := 57
	35	[4373]	JMP      	57 ; PC := 57
	36	[4373]	GETGLOBAL	R4 K14 ; R4 := 0x7f5022cf
	37	[4373]	GETTABLE 	R4 R4 K15 ; R4 := R4[0xa5c556b9]
	38	[4373]	MOVE     	R5 R1 ; R5 := R1
	39	[4373]	GETUPVAL 	R6 U1 ; R6 := U1
	40	[4373]	GETTABLE 	R6 R6 K16 ; R6 := R6["HARD_MODE_TAG"]
	41	[4373]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	42	[4373]	TEST     	R4 0 ; if not R4 then PC := 57
	43	[4373]	JMP      	57 ; PC := 57
	44	[4374]	GETGLOBAL	R4 K14 ; R4 := 0x7f5022cf
	45	[4374]	GETTABLE 	R4 R4 K17 ; R4 := R4[0x1a94c9cc]
	46	[4374]	MOVE     	R5 R1 ; R5 := R1
	47	[4374]	LOADK    	R6 := 1.000000
	48	[4374]	GETGLOBAL	R7 K14 ; R7 := 0x7f5022cf
	49	[4374]	GETTABLE 	R7 R7 K15 ; R7 := R7[0xa5c556b9]
	50	[4374]	MOVE     	R8 R1 ; R8 := R1
	51	[4374]	GETUPVAL 	R9 U1 ; R9 := U1
	52	[4374]	GETTABLE 	R9 R9 K16 ; R9 := R9["HARD_MODE_TAG"]
	53	[4374]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	54	[4374]	SUB      	R7 R7 K18 ; R7 := R7 - 1.000000
	55	[4374]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	56	[4374]	MOVE     	R1 R4 ; R1 := R4
	57	[4377]	GETGLOBAL	R4 K1 ; R4 := mWagerMission
	58	[4377]	GETTABLE 	R4 R4 K2 ; R4 := R4["MovieInst"]
	59	[4377]	SELF     	R4 R4 K19 ; R5 := R4; R4 := R4[0xf56f3887]
	60	[4377]	LOADK    	R6 K20 ; R6 := "SetSectorNameAndCloseCallback"
	61	[4377]	NEWTABLE 	R7 2 0 ; R7 := {}
	62	[4377]	MOVE     	R8 R1 ; R8 := R1
	63	[4377]	LOADK    	R9 K21 ; R9 := "ConfirmWagerSelection"
	64	[4377]	SETLIST  	R7 2 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 2
	65	[4377]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	66	[4379]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	67	[4379]	GETGLOBAL	R5 K22 ; R5 := _T
	68	[4379]	GETTABLE 	R5 R5 K23 ; R5 := R5["SquadOverlay"]
	69	[4379]	CALL     	R4 2 2 ; R4 := R4(R5)
	70	[4379]	TEST     	R4 1 ; if R4 then PC := 78
	71	[4379]	JMP      	78 ; PC := 78
	72	[4380]	GETGLOBAL	R4 K22 ; R4 := _T
	73	[4380]	GETTABLE 	R4 R4 K23 ; R4 := R4["SquadOverlay"]
	74	[4380]	SELF     	R4 R4 K4 ; R5 := R4; R4 := R4[0xe4162eed]
	75	[4380]	LOADK    	R6 K24 ; R6 := "OnRadialSolarMapOpenChildMovie"
	76	[4380]	LOADK    	R7 K25 ; R7 := ""
	77	[4380]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	78	[4382]	RETURN   	R0 1 ; return 

function #102 <?:4384,4411> (79 instructions, 316 bytes at 000002111D617530)
2 params, 9 slots, 4 upvalues, 0 locals, 23 constants, 0 functions
	1	[4385]	GETGLOBAL	R2 K0 ; R2 := mWagerMission
	2	[4385]	SETTABLE 	R2 K1 K2 ; R2["MovieInst"] := nil
	3	[4386]	OP_LOADBOOL	R2 0 0 ; R2 := false
	4	[4386]	SETGLOBALHASH	R2 K3 ; mInputBlocked := R2
	5	[4388]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	6	[4388]	GETUPVAL 	R3 U0 ; R3 := U0
	7	[4388]	GETTABLE 	R3 R3 K5 ; R3 := R3["Movie"]
	8	[4388]	CALL     	R2 2 2 ; R2 := R2(R3)
	9	[4388]	TEST     	R2 1 ; if R2 then PC := 17
	10	[4388]	JMP      	17 ; PC := 17
	11	[4389]	GETUPVAL 	R2 U0 ; R2 := U0
	12	[4389]	GETTABLE 	R2 R2 K5 ; R2 := R2["Movie"]
	13	[4389]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0xe4162eed]
	14	[4389]	LOADK    	R4 K7 ; R4 := "ItemBrowsing"
	15	[4389]	LOADK    	R5 K8 ; R5 := "false"
	16	[4389]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	17	[4392]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	18	[4392]	GETGLOBAL	R3 K9 ; R3 := _T
	19	[4392]	GETTABLE 	R3 R3 K10 ; R3 := R3["SquadOverlay"]
	20	[4392]	CALL     	R2 2 2 ; R2 := R2(R3)
	21	[4392]	TEST     	R2 1 ; if R2 then PC := 29
	22	[4392]	JMP      	29 ; PC := 29
	23	[4393]	GETGLOBAL	R2 K9 ; R2 := _T
	24	[4393]	GETTABLE 	R2 R2 K10 ; R2 := R2["SquadOverlay"]
	25	[4393]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0xe4162eed]
	26	[4393]	LOADK    	R4 K11 ; R4 := "OnRadialSolarMapCloseChildMovie"
	27	[4393]	LOADK    	R5 K12 ; R5 := ""
	28	[4393]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	29	[4396]	TEST     	R0 0 ; if not R0 then PC := 71
	30	[4396]	JMP      	71 ; PC := 71
	31	[4396]	EQ       	1 R0 K8 ; if R0 == "false" then PC := 71
	32	[4396]	JMP      	71 ; PC := 71
	33	[4397]	GETUPVAL 	R2 U1 ; R2 := U1
	34	[4397]	GETTABLE 	R2 R2 K13 ; R2 := R2["CurrentTier"]
	35	[4397]	LT       	0 K14 R2 ; if 0.000000 >= R2 then PC := 49
	36	[4397]	JMP      	49 ; PC := 49
	37	[4397]	GETGLOBAL	R2 K15 ; R2 := 0x7f5022cf
	38	[4397]	GETTABLE 	R2 R2 K16 ; R2 := R2[0xa5c556b9]
	39	[4397]	MOVE     	R3 R0 ; R3 := R0
	40	[4397]	GETUPVAL 	R4 U2 ; R4 := U2
	41	[4397]	GETTABLE 	R4 R4 K17 ; R4 := R4["HARD_MODE_TAG"]
	42	[4397]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	43	[4397]	TEST     	R2 1 ; if R2 then PC := 49
	44	[4397]	JMP      	49 ; PC := 49
	45	[4398]	MOVE     	R2 R0 ; R2 := R0
	46	[4398]	GETUPVAL 	R3 U2 ; R3 := U2
	47	[4398]	GETTABLE 	R3 R3 K17 ; R3 := R3["HARD_MODE_TAG"]
	48	[4398]	CONCAT   	R0 R2 R3 ; R0 := R2 .. R3
	49	[4401]	GETUPVAL 	R2 U3 ; R2 := U3
	50	[4401]	GETGLOBAL	R3 K0 ; R3 := mWagerMission
	51	[4401]	GETTABLE 	R3 R3 K18 ; R3 := R3["Quest"]
	52	[4401]	TEST     	R3 0 ; if not R3 then PC := 58
	53	[4401]	JMP      	58 ; PC := 58
	54	[4401]	GETGLOBAL	R3 K0 ; R3 := mWagerMission
	55	[4401]	GETTABLE 	R3 R3 K19 ; R3 := R3["SectorName"]
	56	[4401]	TEST     	R3 1 ; if R3 then PC := 59
	57	[4401]	JMP      	59 ; PC := 59
	58	[4401]	MOVE     	R3 R0 ; R3 := R0
	59	[4401]	GETGLOBAL	R4 K0 ; R4 := mWagerMission
	60	[4401]	GETTABLE 	R4 R4 K18 ; R4 := R4["Quest"]
	61	[4401]	LOADNIL  	R5 R5 ; R5 := nil
	62	[4401]	GETGLOBAL	R6 K0 ; R6 := mWagerMission
	63	[4401]	GETTABLE 	R6 R6 K20 ; R6 := R6["Difficulty"]
	64	[4401]	LOADNIL  	R7 R7 ; R7 := nil
	65	[4401]	MOVE     	R8 R1 ; R8 := R1
	66	[4401]	CALL     	R2 7 2 ; R2 := R2(R3,R4,R5,R6,R7,R8)
	67	[4401]	TEST     	R2 1 ; if R2 then PC := 73
	68	[4401]	JMP      	73 ; PC := 73
	69	[4402]	RETURN   	R0 1 ; return 
	70	[4403]	JMP      	73 ; PC := 73
	71	[4405]	GETGLOBAL	R2 K9 ; R2 := _T
	72	[4405]	SETTABLE 	R2 K21 K22 ; R2["MadeWagerChoice"] := false
	73	[4408]	GETGLOBAL	R2 K0 ; R2 := mWagerMission
	74	[4408]	SETTABLE 	R2 K19 K12 ; R2["SectorName"] := ""
	75	[4409]	GETGLOBAL	R2 K0 ; R2 := mWagerMission
	76	[4409]	SETTABLE 	R2 K18 K2 ; R2["Quest"] := nil
	77	[4410]	GETGLOBAL	R2 K0 ; R2 := mWagerMission
	78	[4410]	SETTABLE 	R2 K20 K14 ; R2["Difficulty"] := 0.000000
	79	[4411]	RETURN   	R0 1 ; return 

function #103 <?:4413,4468> (157 instructions, 628 bytes at 000002111D6179E0)
0 params, 19 slots, 4 upvalues, 0 locals, 48 constants, 0 functions
	1	[4414]	OP_LOADBOOL	R0 0 0 ; R0 := false
	2	[4414]	SETGLOBALHASH	R0 K0 ; mInputBlocked := R0
	3	[4416]	GETGLOBAL	R0 K1 ; R0 := mCachedSoloMission
	4	[4416]	GETTABLE 	R0 R0 K2 ; R0 := R0["Node"]
	5	[4416]	TEST     	R0 1 ; if R0 then PC := 8
	6	[4416]	JMP      	8 ; PC := 8
	7	[4417]	RETURN   	R0 1 ; return 
	8	[4420]	GETGLOBAL	R0 K3 ; R0 := 0x89326c93
	9	[4420]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0x18d05d30]
	10	[4420]	CALL     	R0 2 2 ; R0 := R0(R1)
	11	[4420]	TEST     	R0 0 ; if not R0 then PC := 31
	12	[4420]	JMP      	31 ; PC := 31
	13	[4421]	GETGLOBAL	R0 K3 ; R0 := 0x89326c93
	14	[4421]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0x7d108ddb]
	15	[4421]	CALL     	R0 2 2 ; R0 := R0(R1)
	16	[4422]	LOADK    	R1 := 1.000000
	17	[4422]	LEN      	R2 R0 ; R2 := # R0
	18	[4422]	LOADK    	R3 := 1.000000
	19	[4422]	FORPREP  	R1 30 ; R1 -= R3; PC := 30
	20	[4423]	GETTABLE 	R5 R0 R4 ; R5 := R0[R4]
	21	[4423]	SELF     	R5 R5 K6 ; R6 := R5; R5 := R5[0x420402a9]
	22	[4423]	CALL     	R5 2 2 ; R5 := R5(R6)
	23	[4423]	TEST     	R5 1 ; if R5 then PC := 30
	24	[4423]	JMP      	30 ; PC := 30
	25	[4424]	GETGLOBAL	R5 K7 ; R5 := 0xe7f2b02f
	26	[4424]	SELF     	R5 R5 K8 ; R6 := R5; R5 := R5[0x0a7813f5]
	27	[4424]	GETTABLE 	R7 R0 R4 ; R7 := R0[R4]
	28	[4424]	OP_LOADBOOL	R8 0 0 ; R8 := false
	29	[4424]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	30	[4422]	FORLOOP  	R1 20 ; R1 += R3; if R1 <= R2 then begin PC := 20; R4 := R1 end
	31	[4429]	GETGLOBAL	R5 K1 ; R5 := mCachedSoloMission
	32	[4429]	GETTABLE 	R5 R5 K2 ; R5 := R5["Node"]
	33	[4429]	GETTABLE 	R5 R5 K9 ; R5 := R5["radialSector"]
	34	[4429]	GETTABLE 	R5 R5 K10 ; R5 := R5["mission"]
	35	[4430]	GETGLOBAL	R6 K11 ; R6 := 0x64fb1586
	36	[4430]	GETGLOBAL	R7 K1 ; R7 := mCachedSoloMission
	37	[4430]	GETTABLE 	R7 R7 K12 ; R7 := R7["SectorName"]
	38	[4430]	CALL     	R6 2 2 ; R6 := R6(R7)
	39	[4431]	GETGLOBAL	R7 K1 ; R7 := mCachedSoloMission
	40	[4431]	GETTABLE 	R7 R7 K13 ; R7 := R7["SectorQuest"]
	41	[4432]	GETGLOBAL	R8 K14 ; R8 := 0x7f5022cf
	42	[4432]	GETTABLE 	R8 R8 K15 ; R8 := R8[0xa5c556b9]
	43	[4432]	MOVE     	R9 R6 ; R9 := R6
	44	[4432]	GETUPVAL 	R10 U0 ; R10 := U0
	45	[4432]	GETTABLE 	R10 R10 K16 ; R10 := R10["KEY_TAG"]
	46	[4432]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	47	[4433]	EQ       	1 R8 K17 ; if R8 == nil then PC := 78
	48	[4433]	JMP      	78 ; PC := 78
	49	[4434]	GETGLOBAL	R9 K14 ; R9 := 0x7f5022cf
	50	[4434]	GETTABLE 	R9 R9 K18 ; R9 := R9[0x1a94c9cc]
	51	[4434]	MOVE     	R10 R6 ; R10 := R6
	52	[4434]	LOADK    	R11 := 1.000000
	53	[4434]	SUB      	R12 R8 K19 ; R12 := R8 - 1.000000
	54	[4434]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	55	[4435]	GETGLOBAL	R10 K20 ; R10 := 0xb009bbc6
	56	[4435]	MOVE     	R11 R9 ; R11 := R9
	57	[4435]	CALL     	R10 2 2 ; R10 := R10(R11)
	58	[4436]	GETGLOBAL	R11 K21 ; R11 := 0x7b998233
	59	[4436]	MOVE     	R12 R10 ; R12 := R10
	60	[4436]	CALL     	R11 2 2 ; R11 := R11(R12)
	61	[4436]	TEST     	R11 1 ; if R11 then PC := 78
	62	[4436]	JMP      	78 ; PC := 78
	63	[4437]	GETGLOBAL	R11 K23 ; R11 := 0x7ed0a956
	64	[4437]	MOVE     	R12 R9 ; R12 := R9
	65	[4437]	CALL     	R11 2 2 ; R11 := R11(R12)
	66	[4437]	SETTABLE 	R5 K22 R11 ; R5["levelKeyName"] := R11
	67	[4439]	GETGLOBAL	R11 K1 ; R11 := mCachedSoloMission
	68	[4439]	GETTABLE 	R11 R11 K2 ; R11 := R11["Node"]
	69	[4439]	GETTABLE 	R11 R11 K9 ; R11 := R11["radialSector"]
	70	[4439]	GETTABLE 	R11 R11 K24 ; R11 := R11["keyChain"]
	71	[4439]	TEST     	R11 0 ; if not R11 then PC := 78
	72	[4439]	JMP      	78 ; PC := 78
	73	[4440]	GETGLOBAL	R11 K1 ; R11 := mCachedSoloMission
	74	[4440]	GETTABLE 	R11 R11 K2 ; R11 := R11["Node"]
	75	[4440]	GETTABLE 	R11 R11 K9 ; R11 := R11["radialSector"]
	76	[4440]	GETTABLE 	R11 R11 K24 ; R11 := R11["keyChain"]
	77	[4440]	SETTABLE 	R5 K25 R11 ; R5["keyChainName"] := R11
	78	[4445]	GETGLOBAL	R11 K11 ; R11 := 0x64fb1586
	79	[4445]	GETGLOBAL	R12 K1 ; R12 := mCachedSoloMission
	80	[4445]	GETTABLE 	R12 R12 K2 ; R12 := R12["Node"]
	81	[4445]	GETTABLE 	R12 R12 K9 ; R12 := R12["radialSector"]
	82	[4445]	GETTABLE 	R12 R12 K26 ; R12 := R12["name"]
	83	[4445]	CALL     	R11 2 2 ; R11 := R11(R12)
	84	[4446]	GETUPVAL 	R12 U1 ; R12 := U1
	85	[4446]	GETTABLE 	R12 R12 K27 ; R12 := R12["CurrentTier"]
	86	[4446]	LT       	0 K28 R12 ; if 0.000000 >= R12 then PC := 100
	87	[4446]	JMP      	100 ; PC := 100
	88	[4446]	GETGLOBAL	R12 K14 ; R12 := 0x7f5022cf
	89	[4446]	GETTABLE 	R12 R12 K15 ; R12 := R12[0xa5c556b9]
	90	[4446]	MOVE     	R13 R11 ; R13 := R11
	91	[4446]	GETUPVAL 	R14 U0 ; R14 := U0
	92	[4446]	GETTABLE 	R14 R14 K29 ; R14 := R14["HARD_MODE_TAG"]
	93	[4446]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	94	[4446]	TEST     	R12 1 ; if R12 then PC := 100
	95	[4446]	JMP      	100 ; PC := 100
	96	[4447]	MOVE     	R12 R11 ; R12 := R11
	97	[4447]	GETUPVAL 	R13 U0 ; R13 := U0
	98	[4447]	GETTABLE 	R13 R13 K29 ; R13 := R13["HARD_MODE_TAG"]
	99	[4447]	CONCAT   	R11 R12 R13 ; R11 := R12 .. R13
	100	[4449]	GETGLOBAL	R12 K1 ; R12 := mCachedSoloMission
	101	[4449]	SETTABLE 	R12 K2 K17 ; R12["Node"] := nil
	102	[4450]	GETGLOBAL	R12 K1 ; R12 := mCachedSoloMission
	103	[4450]	SETTABLE 	R12 K13 K17 ; R12["SectorQuest"] := nil
	104	[4451]	GETGLOBAL	R12 K30 ; R12 := _T
	105	[4451]	SETTABLE 	R12 K31 K32 ; R12["StartingSoloMission"] := true
	106	[4453]	GETTABLE 	R12 R5 K33 ; R12 := R5["missionType"]
	107	[4453]	EQ       	0 R12 K35 ; if R12 ~= 31.000000 then PC := 141
	108	[4453]	JMP      	141 ; PC := 141
	109	[4454]	GETGLOBAL	R12 K3 ; R12 := 0x89326c93
	110	[4454]	SELF     	R12 R12 K4 ; R13 := R12; R12 := R12[0x18d05d30]
	111	[4454]	CALL     	R12 2 2 ; R12 := R12(R13)
	112	[4454]	TEST     	R12 1 ; if R12 then PC := 119
	113	[4454]	JMP      	119 ; PC := 119
	114	[4455]	GETUPVAL 	R12 U2 ; R12 := U2
	115	[4455]	GETTABLE 	R12 R12 K36 ; R12 := R12[0xe0cba3ca]
	116	[4455]	LOADK    	R13 K37 ; R13 := "/Lotus/Language/Railjack/MissionRequiresOwnRailjack"
	117	[4455]	CALL     	R12 2 1 ; R12(R13)
	118	[4456]	RETURN   	R0 1 ; return 
	119	[4459]	GETGLOBAL	R12 K30 ; R12 := _T
	120	[4459]	NEWTABLE 	R13 0 1 ; R13 := {}
	121	[4459]	SETTABLE 	R13 K26 R11 ; R13["name"] := R11
	122	[4459]	SETTABLE 	R12 K38 R13 ; R12[0x00000001] := R13
	123	[4460]	TEST     	R7 0 ; if not R7 then PC := 131
	124	[4460]	JMP      	131 ; PC := 131
	125	[4461]	GETGLOBAL	R12 K30 ; R12 := _T
	126	[4461]	GETTABLE 	R12 R12 K38 ; R12 := R12["gPendingMission"]
	127	[4461]	SETTABLE 	R12 K39 R7 ; R12["quest"] := R7
	128	[4462]	GETGLOBAL	R12 K30 ; R12 := _T
	129	[4462]	GETTABLE 	R12 R12 K38 ; R12 := R12["gPendingMission"]
	130	[4462]	SETTABLE 	R12 K26 R6 ; R12["name"] := R6
	131	[4464]	GETGLOBAL	R12 K30 ; R12 := _T
	132	[4464]	GETTABLE 	R12 R12 K40 ; R12 := R12["SquadOverlay"]
	133	[4464]	SELF     	R12 R12 K41 ; R13 := R12; R12 := R12[0xf56f3887]
	134	[4464]	LOADK    	R14 K42 ; R14 := "NotifyForceLoadSoloMission"
	135	[4464]	NEWTABLE 	R15 2 0 ; R15 := {}
	136	[4464]	LOADK    	R16 K43 ; R16 := ""
	137	[4464]	LOADK    	R17 K44 ; R17 := "true"
	138	[4464]	SETLIST  	R15 2 1 ; R15[(1-1)*FPF+i] := R(15+i), 1 <= i <= 2
	139	[4464]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	140	[4464]	JMP      	157 ; PC := 157
	141	[4466]	GETUPVAL 	R12 U3 ; R12 := U3
	142	[4466]	GETTABLE 	R12 R12 K45 ; R12 := R12[0xe05d242d]
	143	[4466]	GETGLOBAL	R13 K46 ; R13 := 0x0469f296
	144	[4466]	MOVE     	R14 R11 ; R14 := R11
	145	[4466]	CALL     	R13 2 2 ; R13 := R13(R14)
	146	[4466]	MOVE     	R14 R5 ; R14 := R5
	147	[4466]	GETUPVAL 	R15 U2 ; R15 := U2
	148	[4466]	GETTABLE 	R15 R15 K47 ; R15 := R15[0x06d055f9]
	149	[4466]	GETGLOBAL	R16 K21 ; R16 := 0x7b998233
	150	[4466]	GETTABLE 	R17 R5 K22 ; R17 := R5["levelKeyName"]
	151	[4466]	CALL     	R16 2 2 ; R16 := R16(R17)
	152	[4466]	NOT      	R16 R16 ; R16 := not R16
	153	[4466]	GETTABLE 	R17 R5 K22 ; R17 := R5["levelKeyName"]
	154	[4466]	LOADNIL  	R18 R18 ; R18 := nil
	155	[4466]	CALL     	R15 4 0 ; R15,... := R15(R16,R17,R18)
	156	[4466]	CALL     	R12 0 1 ; R12(R13,...)
	157	[4468]	RETURN   	R0 1 ; return 

function #104 <?:4470,4486> (24 instructions, 96 bytes at 000002111D6182A0)
1 param, 4 slots, 1 upvalue, 0 locals, 12 constants, 0 functions
	1	[4471]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[4471]	SETTABLE 	R1 K0 K1 ; R1["SoloMission"] := nil
	3	[4472]	OP_LOADBOOL	R1 0 0 ; R1 := false
	4	[4472]	SETGLOBALHASH	R1 K2 ; mInputBlocked := R1
	5	[4474]	EQ       	0 R0 K4 ; if R0 ~= 5.000000 then PC := 10
	6	[4474]	JMP      	10 ; PC := 10
	7	[4475]	GETGLOBAL	R1 K5 ; R1 := mCachedSoloMission
	8	[4475]	SETTABLE 	R1 K6 K1 ; R1["Node"] := nil
	9	[4476]	RETURN   	R0 1 ; return 
	10	[4479]	GETGLOBAL	R1 K5 ; R1 := mCachedSoloMission
	11	[4479]	GETTABLE 	R1 R1 K6 ; R1 := R1["Node"]
	12	[4479]	TEST     	R1 1 ; if R1 then PC := 15
	13	[4479]	JMP      	15 ; PC := 15
	14	[4480]	RETURN   	R0 1 ; return 
	15	[4483]	OP_LOADBOOL	R1 1 0 ; R1 := true
	16	[4483]	SETGLOBALHASH	R1 K2 ; mInputBlocked := R1
	17	[4484]	GETGLOBAL	R1 K7 ; R1 := 0x3d106989
	18	[4484]	LOADK    	R2 K8 ; R2 := "ConfirmSoloMission"
	19	[4484]	CALL     	R1 2 1 ; R1(R2)
	20	[4485]	GETGLOBAL	R1 K9 ; R1 := 0xe7f2b02f
	21	[4485]	SELF     	R1 R1 K10 ; R2 := R1; R1 := R1[0x8229d239]
	22	[4485]	LOADK    	R3 K11 ; R3 := "OpenSoloMission"
	23	[4485]	CALL     	R1 3 1 ; R1(R2,R3)
	24	[4486]	RETURN   	R0 1 ; return 

function #105 <?:4488,4731> (272 instructions, 1088 bytes at 000002111D6184E0)
1 param, 27 slots, 6 upvalues, 0 locals, 61 constants, 4 functions
	1	[4489]	OP_LOADBOOL	R1 0 0 ; R1 := false
	2	[4489]	SETGLOBALHASH	R1 K0 ; mInputBlocked := R1
	3	[4490]	GETGLOBAL	R1 K1 ; R1 := _T
	4	[4490]	GETTABLE 	R1 R1 K2 ; R1 := R1["BackgroundMovie"]
	5	[4490]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xe4162eed]
	6	[4490]	LOADK    	R3 K4 ; R3 := "ShowBlockingMessage"
	7	[4490]	LOADK    	R4 K5 ; R4 := "0"
	8	[4490]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	9	[4492]	GETGLOBAL	R1 K6 ; R1 := 0x7b998233
	10	[4492]	GETGLOBAL	R2 K7 ; R2 := mRadialSolarMap
	11	[4492]	CALL     	R1 2 2 ; R1 := R1(R2)
	12	[4492]	TEST     	R1 0 ; if not R1 then PC := 15
	13	[4492]	JMP      	15 ; PC := 15
	14	[4493]	RETURN   	R0 1 ; return 
	15	[4496]	GETGLOBAL	R1 K7 ; R1 := mRadialSolarMap
	16	[4496]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0x6da94ca9]
	17	[4496]	CALL     	R1 2 2 ; R1 := R1(R2)
	18	[4517]	GETGLOBAL	R2 K9 ; R2 := mPendingHubInstances
	19	[4517]	GETTABLE 	R2 R2 K10 ; R2 := R2["sectorName"]
	20	[4518]	GETTABLE 	R3 R1 K11 ; R3 := R1["playerCount"]
	21	[4519]	GETTABLE 	R4 R1 K12 ; R4 := R1["scenarioProgress"]
	22	[4520]	LOADK    	R5 := 0.000000
	23	[4521]	LOADK    	R6 := 0.000000
	24	[4522]	LOADK    	R7 := 100.000000
	25	[4523]	LOADNIL  	R8 R10 ; R8 := R9 := R10 := nil
	26	[4526]	TEST     	R2 0 ; if not R2 then PC := 37
	27	[4526]	JMP      	37 ; PC := 37
	28	[4526]	EQ       	0 R2 K13 ; if R2 ~= "ScenarioEventHub5" then PC := 37
	29	[4526]	JMP      	37 ; PC := 37
	30	[4526]	GETGLOBAL	R11 K14 ; R11 := 0x0032441c
	31	[4526]	GETTABLE 	R11 R11 K15 ; R11 := R11["CachedGoalInfo"]
	32	[4526]	TEST     	R11 0 ; if not R11 then PC := 37
	33	[4526]	JMP      	37 ; PC := 37
	34	[4527]	GETGLOBAL	R11 K14 ; R11 := 0x0032441c
	35	[4527]	GETTABLE 	R11 R11 K15 ; R11 := R11["CachedGoalInfo"]
	36	[4527]	GETTABLE 	R10 R11 R2 ; R10 := R11[R2]
	37	[4529]	TEST     	R10 0 ; if not R10 then PC := 88
	38	[4529]	JMP      	88 ; PC := 88
	39	[4530]	GETTABLE 	R11 R10 K16 ; R11 := R10["mMetadata"]
	40	[4531]	TEST     	R11 0 ; if not R11 then PC := 51
	41	[4531]	JMP      	51 ; PC := 51
	42	[4531]	EQ       	1 R11 K17 ; if R11 == "" then PC := 51
	43	[4531]	JMP      	51 ; PC := 51
	44	[4532]	GETGLOBAL	R12 K18 ; R12 := cjson
	45	[4532]	GETTABLE 	R12 R12 K19 ; R12 := R12[0x7ab914d8]
	46	[4532]	MOVE     	R13 R11 ; R13 := R11
	47	[4532]	CALL     	R12 2 2 ; R12 := R12(R13)
	48	[4533]	TEST     	R12 0 ; if not R12 then PC := 51
	49	[4533]	JMP      	51 ; PC := 51
	50	[4534]	GETTABLE 	R7 R12 K20 ; R7 := R12["progressReq"]
	51	[4538]	GETGLOBAL	R13 K21 ; R13 := 0x34291f5c
	52	[4538]	GETTABLE 	R13 R13 K22 ; R13 := R13[0x397b920f]
	53	[4538]	GETTABLE 	R14 R10 K23 ; R14 := R10["mAltExpiry"]
	54	[4538]	CALL     	R13 2 2 ; R13 := R13(R14)
	55	[4538]	MOVE     	R6 R13 ; R6 := R13
	56	[4539]	LT       	0 R6 K24 ; if R6 >= 0.000000 then PC := 76
	57	[4539]	JMP      	76 ; PC := 76
	58	[4540]	GETGLOBAL	R13 K21 ; R13 := 0x34291f5c
	59	[4540]	GETTABLE 	R13 R13 K22 ; R13 := R13[0x397b920f]
	60	[4540]	GETTABLE 	R14 R10 K25 ; R14 := R10["mNextAltActivation"]
	61	[4540]	CALL     	R13 2 2 ; R13 := R13(R14)
	62	[4540]	MOVE     	R5 R13 ; R5 := R13
	63	[4541]	GETGLOBAL	R13 K26 ; R13 := 0x603636ad
	64	[4541]	LOADK    	R14 K27 ; R14 := "/Lotus/Language/Events/FragmentArrivalTime"
	65	[4541]	NEWTABLE 	R15 0 1 ; R15 := {}
	66	[4541]	GETUPVAL 	R16 U0 ; R16 := U0
	67	[4541]	GETTABLE 	R16 R16 K29 ; R16 := R16[0x817b1503]
	68	[4541]	GETGLOBAL	R17 K30 ; R17 := 0xae91e43b
	69	[4541]	MOVE     	R18 R5 ; R18 := R5
	70	[4541]	LOADK    	R19 K31 ; R19 := "Compact"
	71	[4541]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	72	[4541]	SETTABLE 	R15 K28 R16 ; R15["VALUE"] := R16
	73	[4541]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	74	[4541]	MOVE     	R9 R13 ; R9 := R13
	75	[4541]	JMP      	88 ; PC := 88
	76	[4543]	GETGLOBAL	R13 K26 ; R13 := 0x603636ad
	77	[4543]	LOADK    	R14 K32 ; R14 := "/Lotus/Language/Events/FlotillaTimeRemainingInstanceSelector"
	78	[4543]	NEWTABLE 	R15 0 1 ; R15 := {}
	79	[4543]	GETUPVAL 	R16 U0 ; R16 := U0
	80	[4543]	GETTABLE 	R16 R16 K29 ; R16 := R16[0x817b1503]
	81	[4543]	GETGLOBAL	R17 K30 ; R17 := 0xae91e43b
	82	[4543]	MOVE     	R18 R6 ; R18 := R6
	83	[4543]	LOADK    	R19 K31 ; R19 := "Compact"
	84	[4543]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	85	[4543]	SETTABLE 	R15 K28 R16 ; R15["VALUE"] := R16
	86	[4543]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	87	[4543]	MOVE     	R8 R13 ; R8 := R13
	88	[4547]	GETGLOBAL	R13 K1 ; R13 := _T
	89	[4593]	CLOSURE  	R14 0 ; R14 := closure(Function #1)
	90	[4593]	GETUPVAL 	R0 U1 ; R0 := U1
	91	[4593]	GETUPVAL 	R0 U2 ; R0 := U2
	92	[4593]	GETUPVAL 	R0 U3 ; R0 := U3
	93	[4593]	GETUPVAL 	R0 U0 ; R0 := U0
	94	[4593]	SETTABLE 	R13 K33 R14 ; R13["MenuSelectionDone"] := R14
	95	[4597]	TEST     	R0 0 ; if not R0 then PC := 154
	96	[4597]	JMP      	154 ; PC := 154
	97	[4597]	GETGLOBAL	R13 K9 ; R13 := mPendingHubInstances
	98	[4597]	GETTABLE 	R13 R13 K34 ; R13 := R13["mAutoJoinIfNotBusy"]
	99	[4597]	TEST     	R13 0 ; if not R13 then PC := 154
	100	[4597]	JMP      	154 ; PC := 154
	101	[4597]	GETGLOBAL	R13 K9 ; R13 := mPendingHubInstances
	102	[4597]	GETTABLE 	R13 R13 K35 ; R13 := R13["mBusyPlayerLoad"]
	103	[4597]	LT       	0 K24 R13 ; if 0.000000 >= R13 then PC := 154
	104	[4597]	JMP      	154 ; PC := 154
	105	[4598]	OP_LOADBOOL	R13 1 0 ; R13 := true
	106	[4600]	LEN      	R14 R4 ; R14 := # R4
	107	[4600]	LT       	0 K24 R14 ; if 0.000000 >= R14 then PC := 113
	108	[4600]	JMP      	113 ; PC := 113
	109	[4600]	GETTABLE 	R14 R4 K36 ; R14 := R4[1.000000]
	110	[4600]	LE       	0 R7 R14 ; if R7 > R14 then PC := 113
	111	[4600]	JMP      	113 ; PC := 113
	112	[4602]	OP_LOADBOOL	R13 0 0 ; R13 := false
	113	[4605]	TEST     	R13 0 ; if not R13 then PC := 154
	114	[4605]	JMP      	154 ; PC := 154
	115	[4606]	OP_LOADBOOL	R14 1 0 ; R14 := true
	116	[4607]	LOADK    	R15 := 2.000000
	117	[4607]	LEN      	R16 R3 ; R16 := # R3
	118	[4607]	LOADK    	R17 := 1.000000
	119	[4607]	FORPREP  	R15 125 ; R15 -= R17; PC := 125
	120	[4608]	GETTABLE 	R19 R3 R18 ; R19 := R3[R18]
	121	[4608]	LT       	0 K24 R19 ; if 0.000000 >= R19 then PC := 125
	122	[4608]	JMP      	125 ; PC := 125
	123	[4609]	OP_LOADBOOL	R14 0 0 ; R14 := false
	124	[4610]	JMP      	126 ; PC := 126
	125	[4607]	FORLOOP  	R15 120 ; R15 += R17; if R15 <= R16 then begin PC := 120; R18 := R15 end
	126	[4614]	TEST     	R14 0 ; if not R14 then PC := 154
	127	[4614]	JMP      	154 ; PC := 154
	128	[4615]	GETTABLE 	R19 R3 K36 ; R19 := R3[1.000000]
	129	[4615]	GETTABLE 	R20 R1 K37 ; R20 := R1["hubCapacity"]
	130	[4615]	DIV      	R19 R19 R20 ; R19 := R19 / R20
	131	[4616]	GETGLOBAL	R20 K9 ; R20 := mPendingHubInstances
	132	[4616]	GETTABLE 	R20 R20 K35 ; R20 := R20["mBusyPlayerLoad"]
	133	[4616]	LE       	0 R19 R20 ; if R19 > R20 then PC := 154
	134	[4616]	JMP      	154 ; PC := 154
	135	[4618]	GETGLOBAL	R20 K6 ; R20 := 0x7b998233
	136	[4618]	GETUPVAL 	R21 U1 ; R21 := U1
	137	[4618]	GETTABLE 	R21 R21 K38 ; R21 := R21["MultiMissionSelector"]
	138	[4618]	CALL     	R20 2 2 ; R20 := R20(R21)
	139	[4618]	TEST     	R20 1 ; if R20 then PC := 145
	140	[4618]	JMP      	145 ; PC := 145
	141	[4619]	GETUPVAL 	R20 U1 ; R20 := U1
	142	[4619]	GETTABLE 	R20 R20 K38 ; R20 := R20["MultiMissionSelector"]
	143	[4619]	SELF     	R20 R20 K39 ; R21 := R20; R20 := R20[0x32302b4a]
	144	[4619]	CALL     	R20 2 1 ; R20(R21)
	145	[4621]	GETGLOBAL	R20 K1 ; R20 := _T
	146	[4621]	GETTABLE 	R20 R20 K40 ; R20 := R20[0x6b15b4f5]
	147	[4621]	NEWTABLE 	R21 1 0 ; R21 := {}
	148	[4621]	NEWTABLE 	R22 0 2 ; R22 := {}
	149	[4621]	SETTABLE 	R22 K41 K24 ; R22["Instance"] := 0.000000
	150	[4621]	SETTABLE 	R22 K42 K43 ; R22["IsFull"] := false
	151	[4621]	SETLIST  	R21 1 1 ; R21[(1-1)*FPF+i] := R(21+i), 1 <= i <= 1
	152	[4621]	CALL     	R20 2 1 ; R20(R21)
	153	[4622]	RETURN   	R0 1 ; return 
	154	[4644]	CLOSURE  	R20 1 ; R20 := closure(Function #2)
	155	[4646]	TEST     	R0 0 ; if not R0 then PC := 167
	156	[4646]	JMP      	167 ; PC := 167
	157	[4647]	GETGLOBAL	R21 K1 ; R21 := _T
	158	[4681]	CLOSURE  	R22 2 ; R22 := closure(Function #3)
	159	[4681]	MOVE     	R0 R3 ; R0 := R3
	160	[4681]	MOVE     	R0 R4 ; R0 := R4
	161	[4681]	MOVE     	R0 R1 ; R0 := R1
	162	[4681]	MOVE     	R0 R7 ; R0 := R7
	163	[4681]	MOVE     	R0 R20 ; R0 := R20
	164	[4681]	MOVE     	R0 R6 ; R0 := R6
	165	[4681]	SETTABLE 	R21 K44 R22 ; R21[0x00000000] := R22
	166	[4681]	JMP      	193 ; PC := 193
	167	[4685]	GETGLOBAL	R21 K1 ; R21 := _T
	168	[4693]	CLOSURE  	R22 3 ; R22 := closure(Function #4)
	169	[4693]	SETTABLE 	R21 K44 R22 ; R21[0x00000000] := R22
	170	[4695]	GETUPVAL 	R21 U4 ; R21 := U4
	171	[4695]	TEST     	R21 0 ; if not R21 then PC := 193
	172	[4695]	JMP      	193 ; PC := 193
	173	[4695]	GETGLOBAL	R21 K6 ; R21 := 0x7b998233
	174	[4695]	GETGLOBAL	R22 K45 ; R22 := 0x76ea806b
	175	[4695]	SELF     	R22 R22 K46 ; R23 := R22; R22 := R22[0x3f3ae64c]
	176	[4695]	LOADK    	R24 := 0.000000
	177	[4695]	CALL     	R22 3 0 ; R22,... := R22(R23,R24)
	178	[4695]	CALL     	R21 0 2 ; R21 := R21(R22,...)
	179	[4695]	TEST     	R21 1 ; if R21 then PC := 193
	180	[4695]	JMP      	193 ; PC := 193
	181	[4696]	GETUPVAL 	R21 U2 ; R21 := U2
	182	[4696]	GETTABLE 	R21 R21 K47 ; R21 := R21[0xe0cba3ca]
	183	[4696]	LOADK    	R22 K48 ; R22 := "Warning: Hub Arbiter at "
	184	[4696]	GETGLOBAL	R23 K45 ; R23 := 0x76ea806b
	185	[4696]	SELF     	R23 R23 K46 ; R24 := R23; R23 := R23[0x3f3ae64c]
	186	[4696]	LOADK    	R25 := 0.000000
	187	[4696]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	188	[4696]	SELF     	R23 R23 K49 ; R24 := R23; R23 := R23[0x06687c36]
	189	[4696]	CALL     	R23 2 2 ; R23 := R23(R24)
	190	[4696]	LOADK    	R24 K50 ; R24 := " is down or gave bad response"
	191	[4696]	CONCAT   	R22 R22 R24 ; R22 := R22 .. R23 .. R24
	192	[4696]	CALL     	R21 2 1 ; R21(R22)
	193	[4700]	GETGLOBAL	R21 K1 ; R21 := _T
	194	[4700]	GETTABLE 	R21 R21 K51 ; R21 := R21[0xedfc284b]
	195	[4700]	CALL     	R21 1 2 ; R21 := R21()
	196	[4701]	LEN      	R22 R21 ; R22 := # R21
	197	[4701]	EQ       	0 R22 K36 ; if R22 ~= 1.000000 then PC := 220
	198	[4701]	JMP      	220 ; PC := 220
	199	[4703]	GETGLOBAL	R22 K6 ; R22 := 0x7b998233
	200	[4703]	GETUPVAL 	R23 U1 ; R23 := U1
	201	[4703]	GETTABLE 	R23 R23 K38 ; R23 := R23["MultiMissionSelector"]
	202	[4703]	CALL     	R22 2 2 ; R22 := R22(R23)
	203	[4703]	TEST     	R22 1 ; if R22 then PC := 209
	204	[4703]	JMP      	209 ; PC := 209
	205	[4704]	GETUPVAL 	R22 U1 ; R22 := U1
	206	[4704]	GETTABLE 	R22 R22 K38 ; R22 := R22["MultiMissionSelector"]
	207	[4704]	SELF     	R22 R22 K39 ; R23 := R22; R22 := R22[0x32302b4a]
	208	[4704]	CALL     	R22 2 1 ; R22(R23)
	209	[4707]	GETGLOBAL	R22 K1 ; R22 := _T
	210	[4707]	GETTABLE 	R22 R22 K40 ; R22 := R22[0x6b15b4f5]
	211	[4707]	NEWTABLE 	R23 1 0 ; R23 := {}
	212	[4707]	NEWTABLE 	R24 0 2 ; R24 := {}
	213	[4707]	GETTABLE 	R25 R21 K36 ; R25 := R21[1.000000]
	214	[4707]	GETTABLE 	R25 R25 K41 ; R25 := R25["Instance"]
	215	[4707]	SETTABLE 	R24 K41 R25 ; R24["Instance"] := R25
	216	[4707]	SETTABLE 	R24 K42 K43 ; R24["IsFull"] := false
	217	[4707]	SETLIST  	R23 1 1 ; R23[(1-1)*FPF+i] := R(23+i), 1 <= i <= 1
	218	[4707]	CALL     	R22 2 1 ; R22(R23)
	219	[4709]	RETURN   	R0 1 ; return 
	220	[4712]	LOADK    	R22 K52 ; R22 := "/Lotus/Language/Menu/ConfirmMultiHubInstance"
	221	[4713]	TEST     	R9 1 ; if R9 then PC := 225
	222	[4713]	JMP      	225 ; PC := 225
	223	[4713]	TEST     	R8 0 ; if not R8 then PC := 241
	224	[4713]	JMP      	241 ; PC := 241
	225	[4714]	GETGLOBAL	R23 K26 ; R23 := 0x603636ad
	226	[4714]	MOVE     	R24 R22 ; R24 := R22
	227	[4714]	OP_LOADBOOL	R25 1 0 ; R25 := true
	228	[4714]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	229	[4714]	MOVE     	R22 R23 ; R22 := R23
	230	[4715]	TEST     	R9 0 ; if not R9 then PC := 237
	231	[4715]	JMP      	237 ; PC := 237
	232	[4716]	MOVE     	R23 R22 ; R23 := R22
	233	[4716]	LOADK    	R24 K53 ; R24 := " | "
	234	[4716]	MOVE     	R25 R9 ; R25 := R9
	235	[4716]	CONCAT   	R22 R23 R25 ; R22 := R23 .. R24 .. R25
	236	[4716]	JMP      	241 ; PC := 241
	237	[4718]	MOVE     	R23 R22 ; R23 := R22
	238	[4718]	LOADK    	R24 K53 ; R24 := " | "
	239	[4718]	MOVE     	R25 R8 ; R25 := R8
	240	[4718]	CONCAT   	R22 R23 R25 ; R22 := R23 .. R24 .. R25
	241	[4721]	GETUPVAL 	R23 U1 ; R23 := U1
	242	[4721]	GETGLOBAL	R24 K30 ; R24 := 0xae91e43b
	243	[4721]	SELF     	R24 R24 K54 ; R25 := R24; R24 := R24[0x1fd6abd0]
	244	[4721]	GETGLOBAL	R26 K55 ; R26 := 0x08a5afb4
	245	[4721]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	246	[4721]	SETTABLE 	R23 K38 R24 ; R23[0x3f3e4d12] := R24
	247	[4722]	GETUPVAL 	R23 U1 ; R23 := U1
	248	[4722]	GETTABLE 	R23 R23 K38 ; R23 := R23["MultiMissionSelector"]
	249	[4722]	SELF     	R23 R23 K3 ; R24 := R23; R23 := R23[0xe4162eed]
	250	[4722]	LOADK    	R25 K56 ; R25 := "SetTitle"
	251	[4722]	MOVE     	R26 R22 ; R26 := R22
	252	[4722]	CALL     	R23 4 1 ; R23(R24,R25,R26)
	253	[4723]	GETUPVAL 	R23 U1 ; R23 := U1
	254	[4723]	GETTABLE 	R23 R23 K38 ; R23 := R23["MultiMissionSelector"]
	255	[4723]	SELF     	R23 R23 K3 ; R24 := R23; R23 := R23[0xe4162eed]
	256	[4723]	LOADK    	R25 K57 ; R25 := "SetCallBack"
	257	[4723]	LOADK    	R26 K33 ; R26 := "MenuSelectionDone"
	258	[4723]	CALL     	R23 4 1 ; R23(R24,R25,R26)
	259	[4726]	GETGLOBAL	R23 K21 ; R23 := 0x34291f5c
	260	[4726]	GETTABLE 	R23 R23 K58 ; R23 := R23[0xe6b41adb]
	261	[4726]	CALL     	R23 1 2 ; R23 := R23()
	262	[4726]	TEST     	R23 0 ; if not R23 then PC := 266
	263	[4726]	JMP      	266 ; PC := 266
	264	[4727]	GETUPVAL 	R23 U5 ; R23 := U5
	265	[4727]	SETTABLE 	R23 K59 K43 ; R23["isLMBDown"] := false
	266	[4730]	GETUPVAL 	R23 U1 ; R23 := U1
	267	[4730]	GETTABLE 	R23 R23 K38 ; R23 := R23["MultiMissionSelector"]
	268	[4730]	SELF     	R23 R23 K3 ; R24 := R23; R23 := R23[0xe4162eed]
	269	[4730]	LOADK    	R25 K60 ; R25 := "SetElementsFunction"
	270	[4730]	LOADK    	R26 K44 ; R26 := "GetMenuEntries"
	271	[4730]	CALL     	R23 4 1 ; R23(R24,R25,R26)
	272	[4731]	RETURN   	R0 1 ; return 

function #106 <?:4733,4756> (57 instructions, 228 bytes at 000002111995CD50)
1 param, 7 slots, 1 upvalue, 0 locals, 26 constants, 0 functions
	1	[4734]	GETGLOBAL	R1 K0 ; R1 := 0x64fb1586
	2	[4734]	GETTABLE 	R2 R0 K1 ; R2 := R0["name"]
	3	[4734]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[4735]	GETGLOBAL	R2 K2 ; R2 := mPendingHubInstances
	5	[4735]	SETTABLE 	R2 K3 R1 ; R2["sectorName"] := R1
	6	[4738]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	7	[4738]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0x42b04007]
	8	[4738]	GETGLOBAL	R4 K0 ; R4 := 0x64fb1586
	9	[4738]	GETTABLE 	R5 R0 K6 ; R5 := R0["locTag"]
	10	[4738]	CALL     	R4 2 2 ; R4 := R4(R5)
	11	[4738]	OP_LOADBOOL	R5 0 0 ; R5 := false
	12	[4738]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	13	[4739]	GETGLOBAL	R3 K7 ; R3 := 0x7f5022cf
	14	[4739]	GETTABLE 	R3 R3 K8 ; R3 := R3[0x66edf04f]
	15	[4739]	MOVE     	R4 R2 ; R4 := R2
	16	[4739]	LOADK    	R5 K9 ; R5 := "Relay"
	17	[4739]	LOADK    	R6 K10 ; R6 := ""
	18	[4739]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	19	[4739]	MOVE     	R2 R3 ; R2 := R3
	20	[4740]	GETGLOBAL	R3 K2 ; R3 := mPendingHubInstances
	21	[4740]	SETTABLE 	R3 K11 R2 ; R3["sectorLoc"] := R2
	22	[4742]	GETGLOBAL	R3 K12 ; R3 := 0x7b998233
	23	[4742]	GETGLOBAL	R4 K13 ; R4 := mRadialSolarMap
	24	[4742]	CALL     	R3 2 2 ; R3 := R3(R4)
	25	[4742]	TEST     	R3 0 ; if not R3 then PC := 28
	26	[4742]	JMP      	28 ; PC := 28
	27	[4743]	RETURN   	R0 1 ; return 
	28	[4746]	OP_LOADBOOL	R3 1 0 ; R3 := true
	29	[4746]	SETGLOBALHASH	R3 K14 ; mInputBlocked := R3
	30	[4747]	GETGLOBAL	R3 K15 ; R3 := _T
	31	[4747]	GETTABLE 	R3 R3 K16 ; R3 := R3["BackgroundMovie"]
	32	[4747]	SELF     	R3 R3 K17 ; R4 := R3; R3 := R3[0xe4162eed]
	33	[4747]	LOADK    	R5 K18 ; R5 := "ShowBlockingMessage"
	34	[4747]	LOADK    	R6 K19 ; R6 := "2"
	35	[4747]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	36	[4750]	GETGLOBAL	R3 K13 ; R3 := mRadialSolarMap
	37	[4750]	SELF     	R3 R3 K20 ; R4 := R3; R3 := R3[0xae7cd968]
	38	[4750]	LOADK    	R5 K21 ; R5 := "GotHubInstances"
	39	[4750]	CALL     	R3 3 1 ; R3(R4,R5)
	40	[4751]	GETUPVAL 	R3 U0 ; R3 := U0
	41	[4751]	GETTABLE 	R3 R3 K22 ; R3 := R3["POST_NEW_WAR_MISSIONS"]
	42	[4751]	GETTABLE 	R3 R3 R1 ; R3 := R3[R1]
	43	[4751]	TEST     	R3 0 ; if not R3 then PC := 53
	44	[4751]	JMP      	53 ; PC := 53
	45	[4751]	GETUPVAL 	R3 U0 ; R3 := U0
	46	[4751]	GETTABLE 	R3 R3 K23 ; R3 := R3[0xc14d48af]
	47	[4751]	CALL     	R3 1 2 ; R3 := R3()
	48	[4751]	TEST     	R3 0 ; if not R3 then PC := 53
	49	[4751]	JMP      	53 ; PC := 53
	50	[4753]	LOADK    	R3 K24 ; R3 := "Alt"
	51	[4753]	MOVE     	R4 R1 ; R4 := R1
	52	[4753]	CONCAT   	R1 R3 R4 ; R1 := R3 .. R4
	53	[4755]	GETGLOBAL	R3 K13 ; R3 := mRadialSolarMap
	54	[4755]	SELF     	R3 R3 K25 ; R4 := R3; R3 := R3[0x9b0efd87]
	55	[4755]	MOVE     	R5 R1 ; R5 := R1
	56	[4755]	CALL     	R3 3 1 ; R3(R4,R5)
	57	[4756]	RETURN   	R0 1 ; return 

function #107 <?:4760,4777> (30 instructions, 120 bytes at 000002111995D1C0)
0 params, 5 slots, 2 upvalues, 0 locals, 17 constants, 0 functions
	1	[4761]	GETGLOBAL	R0 K0 ; R0 := 0x25d99d89
	2	[4761]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x4ae54c32]
	3	[4761]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[4761]	GETTABLE 	R2 R2 K2 ; R2 := R2["SF_CLAN"]
	5	[4761]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	6	[4761]	TEST     	R0 1 ; if R0 then PC := 13
	7	[4761]	JMP      	13 ; PC := 13
	8	[4762]	GETUPVAL 	R0 U1 ; R0 := U1
	9	[4762]	GETTABLE 	R0 R0 K3 ; R0 := R0[0xe0cba3ca]
	10	[4762]	LOADK    	R1 K4 ; R1 := "/Lotus/Language/Menu/SolarMap_NoClanShipFeature"
	11	[4762]	CALL     	R0 2 1 ; R0(R1)
	12	[4762]	JMP      	30 ; PC := 30
	13	[4764]	GETGLOBAL	R0 K5 ; R0 := 0x7b998233
	14	[4764]	GETGLOBAL	R1 K6 ; R1 := _T
	15	[4764]	GETTABLE 	R1 R1 K7 ; R1 := R1["SquadOverlay"]
	16	[4764]	CALL     	R0 2 2 ; R0 := R0(R1)
	17	[4764]	TEST     	R0 1 ; if R0 then PC := 30
	18	[4764]	JMP      	30 ; PC := 30
	19	[4765]	NEWTABLE 	R0 0 3 ; R0 := {}
	20	[4765]	SETTABLE 	R0 K8 K9 ; R0["name"] := "DojoHUB_HUB"
	21	[4765]	SETTABLE 	R0 K10 K11 ; R0["quest"] := ""
	22	[4765]	SETTABLE 	R0 K12 K11 ; R0["difficulty"] := ""
	23	[4766]	GETGLOBAL	R1 K13 ; R1 := 0xe7f2b02f
	24	[4766]	SELF     	R1 R1 K14 ; R2 := R1; R1 := R1[0xd8f4f9d0]
	25	[4766]	GETGLOBAL	R3 K15 ; R3 := cjson
	26	[4766]	GETTABLE 	R3 R3 K16 ; R3 := R3[0xb139d7bc]
	27	[4766]	MOVE     	R4 R0 ; R4 := R0
	28	[4766]	CALL     	R3 2 0 ; R3,... := R3(R4)
	29	[4766]	CALL     	R1 0 1 ; R1(R2,...)
	30	[4777]	RETURN   	R0 1 ; return 

function #108 <?:4779,4790> (42 instructions, 168 bytes at 000002111995D530)
1 param, 6 slots, 1 upvalue, 0 locals, 12 constants, 0 functions
	1	[4780]	GETGLOBAL	R1 K0 ; R1 := mRailJack
	2	[4780]	GETTABLE 	R1 R1 K1 ; R1 := R1["Active"]
	3	[4780]	TEST     	R1 0 ; if not R1 then PC := 20
	4	[4780]	JMP      	20 ; PC := 20
	5	[4781]	GETGLOBAL	R1 K2 ; R1 := 0xe7f2b02f
	6	[4781]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x565be9ee]
	7	[4781]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[4782]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	9	[4782]	MOVE     	R3 R1 ; R3 := R1
	10	[4782]	CALL     	R2 2 2 ; R2 := R2(R3)
	11	[4782]	TEST     	R2 1 ; if R2 then PC := 20
	12	[4782]	JMP      	20 ; PC := 20
	13	[4782]	SELF     	R2 R1 K5 ; R3 := R1; R2 := R1[0xfdd3576f]
	14	[4782]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[4782]	GETTABLE 	R2 R2 K6 ; R2 := R2["gameModeId"]
	16	[4782]	EQ       	1 R2 K7 ; if R2 == 0.000000 then PC := 20
	17	[4782]	JMP      	20 ; PC := 20
	18	[4783]	OP_LOADBOOL	R2 0 0 ; R2 := false
	19	[4783]	RETURN   	R2 2 ; return R2 
	20	[4787]	LOADK    	R2 := 30.000000
	21	[4789]	TEST     	R0 1 ; if R0 then PC := 39
	22	[4789]	JMP      	39 ; PC := 39
	23	[4789]	GETGLOBAL	R3 K2 ; R3 := 0xe7f2b02f
	24	[4789]	SELF     	R3 R3 K8 ; R4 := R3; R3 := R3[0xebe2f513]
	25	[4789]	CALL     	R3 2 2 ; R3 := R3(R4)
	26	[4789]	LE       	0 R3 K9 ; if R3 > 1.000000 then PC := 39
	27	[4789]	JMP      	39 ; PC := 39
	28	[4789]	GETUPVAL 	R3 U0 ; R3 := U0
	29	[4789]	GETTABLE 	R3 R3 K10 ; R3 := R3[0xa8947243]
	30	[4789]	CALL     	R3 1 2 ; R3 := R3()
	31	[4789]	TEST     	R3 0 ; if not R3 then PC := 41
	32	[4789]	JMP      	41 ; PC := 41
	33	[4789]	GETGLOBAL	R3 K2 ; R3 := 0xe7f2b02f
	34	[4789]	SELF     	R3 R3 K11 ; R4 := R3; R3 := R3[0x46712ae2]
	35	[4789]	MOVE     	R5 R2 ; R5 := R2
	36	[4789]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	37	[4789]	NOT      	R3 R3 ; R3 := not R3
	38	[4789]	JMP      	41 ; PC := 41
	39	[4789]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 40
	40	[4789]	OP_LOADBOOL	R3 1 0 ; R3 := true
	41	[4789]	RETURN   	R3 2 ; return R3 
	42	[4790]	RETURN   	R0 1 ; return 

function #109 <?:4792,4826> (87 instructions, 348 bytes at 000002111995D810)
1 param, 7 slots, 2 upvalues, 0 locals, 31 constants, 0 functions
	1	[4793]	GETGLOBAL	R1 K0 ; R1 := 0x34291f5c
	2	[4793]	GETTABLE 	R1 R1 K1 ; R1 := R1[0xe6b41adb]
	3	[4793]	CALL     	R1 1 2 ; R1 := R1()
	4	[4793]	TEST     	R1 0 ; if not R1 then PC := 12
	5	[4793]	JMP      	12 ; PC := 12
	6	[4794]	GETGLOBAL	R1 K2 ; R1 := 0x89326c93
	7	[4794]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xfb64e76c]
	8	[4794]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[4794]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x97c4ff93]
	10	[4794]	OP_LOADBOOL	R3 0 0 ; R3 := false
	11	[4794]	CALL     	R1 3 1 ; R1(R2,R3)
	12	[4797]	GETGLOBAL	R1 K5 ; R1 := 0xbe190284
	13	[4797]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x33307f92]
	14	[4797]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[4798]	GETGLOBAL	R2 K7 ; R2 := 0x7b998233
	16	[4798]	MOVE     	R3 R1 ; R3 := R1
	17	[4798]	CALL     	R2 2 2 ; R2 := R2(R3)
	18	[4798]	TEST     	R2 1 ; if R2 then PC := 23
	19	[4798]	JMP      	23 ; PC := 23
	20	[4799]	SELF     	R2 R1 K8 ; R3 := R1; R2 := R1[0x368ad758]
	21	[4799]	OP_LOADBOOL	R4 1 0 ; R4 := true
	22	[4799]	CALL     	R2 3 1 ; R2(R3,R4)
	23	[4802]	GETUPVAL 	R2 U0 ; R2 := U0
	24	[4802]	MOVE     	R3 R0 ; R3 := R0
	25	[4802]	CALL     	R2 2 2 ; R2 := R2(R3)
	26	[4802]	TEST     	R2 0 ; if not R2 then PC := 40
	27	[4802]	JMP      	40 ; PC := 40
	28	[4803]	GETGLOBAL	R2 K7 ; R2 := 0x7b998233
	29	[4803]	GETGLOBAL	R3 K9 ; R3 := _T
	30	[4803]	GETTABLE 	R3 R3 K10 ; R3 := R3["SquadOverlay"]
	31	[4803]	CALL     	R2 2 2 ; R2 := R2(R3)
	32	[4803]	TEST     	R2 1 ; if R2 then PC := 40
	33	[4803]	JMP      	40 ; PC := 40
	34	[4804]	GETGLOBAL	R2 K9 ; R2 := _T
	35	[4804]	GETTABLE 	R2 R2 K10 ; R2 := R2["SquadOverlay"]
	36	[4804]	SELF     	R2 R2 K11 ; R3 := R2; R2 := R2[0xe4162eed]
	37	[4804]	LOADK    	R4 K12 ; R4 := "ForceExitMap"
	38	[4804]	LOADK    	R5 K13 ; R5 := ""
	39	[4804]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	40	[4808]	GETGLOBAL	R2 K9 ; R2 := _T
	41	[4808]	GETTABLE 	R2 R2 K14 ; R2 := R2[0x5e99b976]
	42	[4808]	LOADK    	R3 K15 ; R3 := "Clan"
	43	[4808]	CALL     	R2 2 1 ; R2(R3)
	44	[4809]	GETGLOBAL	R2 K9 ; R2 := _T
	45	[4809]	GETTABLE 	R2 R2 K14 ; R2 := R2[0x5e99b976]
	46	[4809]	LOADK    	R3 K16 ; R3 := "ClanSearch"
	47	[4809]	CALL     	R2 2 1 ; R2(R3)
	48	[4810]	GETGLOBAL	R2 K9 ; R2 := _T
	49	[4810]	GETTABLE 	R2 R2 K14 ; R2 := R2[0x5e99b976]
	50	[4810]	LOADK    	R3 K17 ; R3 := "InvasionSelection"
	51	[4810]	CALL     	R2 2 1 ; R2(R3)
	52	[4812]	GETGLOBAL	R2 K7 ; R2 := 0x7b998233
	53	[4812]	GETGLOBAL	R3 K9 ; R3 := _T
	54	[4812]	GETTABLE 	R3 R3 K18 ; R3 := R3["mTrigger"]
	55	[4812]	CALL     	R2 2 2 ; R2 := R2(R3)
	56	[4812]	TEST     	R2 1 ; if R2 then PC := 65
	57	[4812]	JMP      	65 ; PC := 65
	58	[4813]	GETGLOBAL	R2 K9 ; R2 := _T
	59	[4813]	GETTABLE 	R2 R2 K18 ; R2 := R2["mTrigger"]
	60	[4813]	SELF     	R2 R2 K19 ; R3 := R2; R2 := R2[0x8eb2112d]
	61	[4813]	LOADK    	R4 K20 ; R4 := "Close"
	62	[4813]	CALL     	R2 3 1 ; R2(R3,R4)
	63	[4814]	GETGLOBAL	R2 K9 ; R2 := _T
	64	[4814]	SETTABLE 	R2 K18 K21 ; R2["mTrigger"] := nil
	65	[4816]	GETGLOBAL	R2 K9 ; R2 := _T
	66	[4816]	SETTABLE 	R2 K22 K21 ; R2["DiegeticPosition"] := nil
	67	[4818]	GETUPVAL 	R2 U1 ; R2 := U1
	68	[4818]	GETTABLE 	R2 R2 K23 ; R2 := R2[0x659d451f]
	69	[4818]	GETGLOBAL	R3 K24 ; R3 := 0xb607efe1
	70	[4818]	CALL     	R2 2 1 ; R2(R3)
	71	[4820]	GETGLOBAL	R2 K2 ; R2 := 0x89326c93
	72	[4820]	SELF     	R2 R2 K25 ; R3 := R2; R2 := R2[0x78298275]
	73	[4820]	CALL     	R2 2 2 ; R2 := R2(R3)
	74	[4821]	GETGLOBAL	R3 K7 ; R3 := 0x7b998233
	75	[4821]	MOVE     	R4 R2 ; R4 := R2
	76	[4821]	CALL     	R3 2 2 ; R3 := R3(R4)
	77	[4821]	TEST     	R3 1 ; if R3 then PC := 84
	78	[4821]	JMP      	84 ; PC := 84
	79	[4822]	SELF     	R3 R2 K26 ; R4 := R2; R3 := R2[0xb2532845]
	80	[4822]	GETGLOBAL	R5 K27 ; R5 := 0x0469f296
	81	[4822]	LOADK    	R6 K28 ; R6 := "IDLE"
	82	[4822]	CALL     	R5 2 0 ; R5,... := R5(R6)
	83	[4822]	CALL     	R3 0 1 ; R3(R4,...)
	84	[4825]	GETGLOBAL	R3 K29 ; R3 := 0xae91e43b
	85	[4825]	SELF     	R3 R3 K30 ; R4 := R3; R3 := R3[0x32302b4a]
	86	[4825]	CALL     	R3 2 1 ; R3(R4)
	87	[4826]	RETURN   	R0 1 ; return 

function #110 <?:4828,4849> (47 instructions, 188 bytes at 000002111995DDC0)
1 param, 6 slots, 1 upvalue, 0 locals, 10 constants, 0 functions
	1	[4829]	GETTABLE 	R1 R0 K0 ; R1 := R0["IsHomeNode"]
	2	[4829]	TEST     	R1 1 ; if R1 then PC := 5
	3	[4829]	JMP      	5 ; PC := 5
	4	[4830]	RETURN   	R0 1 ; return 
	5	[4833]	GETTABLE 	R1 R0 K1 ; R1 := R0["SeenTimer"]
	6	[4833]	EQ       	1 R1 K2 ; if R1 == nil then PC := 13
	7	[4833]	JMP      	13 ; PC := 13
	8	[4834]	GETUPVAL 	R1 U0 ; R1 := U0
	9	[4834]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x775c858b]
	10	[4834]	GETTABLE 	R3 R0 K1 ; R3 := R0["SeenTimer"]
	11	[4834]	CALL     	R1 3 1 ; R1(R2,R3)
	12	[4835]	SETTABLE 	R0 K1 K2 ; R0["SeenTimer"] := nil
	13	[4838]	GETGLOBAL	R1 K4 ; R1 := 0x25d99d89
	14	[4838]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xbf6c9575]
	15	[4838]	GETTABLE 	R3 R0 K6 ; R3 := R0["NodeIntro"]
	16	[4838]	CALL     	R1 3 1 ; R1(R2,R3)
	17	[4840]	LOADK    	R1 := 1.000000
	18	[4840]	GETGLOBAL	R2 K7 ; R2 := mFxNodes
	19	[4840]	GETTABLE 	R2 R2 K8 ; R2 := R2["Pending"]
	20	[4840]	LEN      	R2 R2 ; R2 := # R2
	21	[4840]	LOADK    	R3 := 1.000000
	22	[4840]	FORPREP  	R1 46 ; R1 -= R3; PC := 46
	23	[4843]	GETGLOBAL	R5 K7 ; R5 := mFxNodes
	24	[4843]	GETTABLE 	R5 R5 K8 ; R5 := R5["Pending"]
	25	[4843]	GETTABLE 	R5 R5 R4 ; R5 := R5[R4]
	26	[4843]	EQ       	1 R5 K2 ; if R5 == nil then PC := 46
	27	[4843]	JMP      	46 ; PC := 46
	28	[4843]	GETGLOBAL	R5 K7 ; R5 := mFxNodes
	29	[4843]	GETTABLE 	R5 R5 K8 ; R5 := R5["Pending"]
	30	[4843]	GETTABLE 	R5 R5 R4 ; R5 := R5[R4]
	31	[4843]	GETTABLE 	R5 R5 K9 ; R5 := R5["Node"]
	32	[4843]	EQ       	1 R5 K2 ; if R5 == nil then PC := 46
	33	[4843]	JMP      	46 ; PC := 46
	34	[4843]	GETGLOBAL	R5 K7 ; R5 := mFxNodes
	35	[4843]	GETTABLE 	R5 R5 K8 ; R5 := R5["Pending"]
	36	[4843]	GETTABLE 	R5 R5 R4 ; R5 := R5[R4]
	37	[4843]	GETTABLE 	R5 R5 K9 ; R5 := R5["Node"]
	38	[4843]	GETTABLE 	R5 R5 K0 ; R5 := R5["IsHomeNode"]
	39	[4843]	TEST     	R5 0 ; if not R5 then PC := 46
	40	[4843]	JMP      	46 ; PC := 46
	41	[4844]	GETGLOBAL	R5 K7 ; R5 := mFxNodes
	42	[4844]	GETTABLE 	R5 R5 K8 ; R5 := R5["Pending"]
	43	[4844]	GETTABLE 	R5 R5 R4 ; R5 := R5[R4]
	44	[4844]	SETTABLE 	R5 K9 K2 ; R5["Node"] := nil
	45	[4846]	JMP      	47 ; PC := 47
	46	[4840]	FORLOOP  	R1 23 ; R1 += R3; if R1 <= R2 then begin PC := 23; R4 := R1 end
	47	[4849]	RETURN   	R0 1 ; return 

function #111 <?:4851,5105> (1010 instructions, 4040 bytes at 000002111995E0E0)
1 param, 28 slots, 20 upvalues, 0 locals, 161 constants, 1 function
	1	[4852]	GETGLOBAL	R1 K0 ; R1 := mHover
	2	[4852]	GETTABLE 	R1 R1 K1 ; R1 := R1["Node"]
	3	[4852]	TEST     	R1 0 ; if not R1 then PC := 17
	4	[4852]	JMP      	17 ; PC := 17
	5	[4852]	GETGLOBAL	R1 K0 ; R1 := mHover
	6	[4852]	GETTABLE 	R1 R1 K1 ; R1 := R1["Node"]
	7	[4852]	GETTABLE 	R1 R1 K2 ; R1 := R1["locked"]
	8	[4852]	TEST     	R1 0 ; if not R1 then PC := 12
	9	[4852]	JMP      	12 ; PC := 12
	10	[4852]	TEST     	R0 0 ; if not R0 then PC := 17
	11	[4852]	JMP      	17 ; PC := 17
	12	[4852]	GETGLOBAL	R1 K0 ; R1 := mHover
	13	[4852]	GETTABLE 	R1 R1 K1 ; R1 := R1["Node"]
	14	[4852]	GETTABLE 	R1 R1 K3 ; R1 := R1["locationEnabled"]
	15	[4852]	TEST     	R1 1 ; if R1 then PC := 18
	16	[4852]	JMP      	18 ; PC := 18
	17	[4853]	RETURN   	R0 1 ; return 
	18	[4856]	GETGLOBAL	R1 K4 ; R1 := _T
	19	[4856]	GETTABLE 	R1 R1 K5 ; R1 := R1["gPendingMission"]
	20	[4856]	EQ       	1 R1 K6 ; if R1 == nil then PC := 36
	21	[4856]	JMP      	36 ; PC := 36
	22	[4856]	GETGLOBAL	R1 K0 ; R1 := mHover
	23	[4856]	GETTABLE 	R1 R1 K1 ; R1 := R1["Node"]
	24	[4856]	GETTABLE 	R1 R1 K7 ; R1 := R1["radialSector"]
	25	[4856]	EQ       	1 R1 K6 ; if R1 == nil then PC := 36
	26	[4856]	JMP      	36 ; PC := 36
	27	[4856]	GETGLOBAL	R1 K4 ; R1 := _T
	28	[4856]	GETTABLE 	R1 R1 K5 ; R1 := R1["gPendingMission"]
	29	[4856]	GETTABLE 	R1 R1 K8 ; R1 := R1["baseNodeName"]
	30	[4856]	GETGLOBAL	R2 K0 ; R2 := mHover
	31	[4856]	GETTABLE 	R2 R2 K1 ; R2 := R2["Node"]
	32	[4856]	GETTABLE 	R2 R2 K7 ; R2 := R2["radialSector"]
	33	[4856]	GETTABLE 	R2 R2 K9 ; R2 := R2["name"]
	34	[4856]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 37
	35	[4856]	JMP      	37 ; PC := 37
	36	[4856]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 37
	37	[4856]	OP_LOADBOOL	R1 1 0 ; R1 := true
	38	[4857]	GETGLOBAL	R2 K10 ; R2 := 0x7b998233
	39	[4857]	GETGLOBAL	R3 K4 ; R3 := _T
	40	[4857]	GETTABLE 	R3 R3 K11 ; R3 := R3["SquadOverlay"]
	41	[4857]	CALL     	R2 2 2 ; R2 := R2(R3)
	42	[4857]	TEST     	R2 1 ; if R2 then PC := 53
	43	[4857]	JMP      	53 ; PC := 53
	44	[4857]	TEST     	R1 0 ; if not R1 then PC := 53
	45	[4857]	JMP      	53 ; PC := 53
	46	[4858]	GETGLOBAL	R2 K4 ; R2 := _T
	47	[4858]	GETTABLE 	R2 R2 K11 ; R2 := R2["SquadOverlay"]
	48	[4858]	SELF     	R2 R2 K12 ; R3 := R2; R2 := R2[0xe4162eed]
	49	[4858]	LOADK    	R4 K13 ; R4 := "Accept"
	50	[4858]	LOADK    	R5 K14 ; R5 := ""
	51	[4858]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	52	[4859]	RETURN   	R0 1 ; return 
	53	[4862]	GETGLOBAL	R2 K15 ; R2 := 0x64fb1586
	54	[4862]	GETGLOBAL	R3 K0 ; R3 := mHover
	55	[4862]	GETTABLE 	R3 R3 K1 ; R3 := R3["Node"]
	56	[4862]	GETTABLE 	R3 R3 K7 ; R3 := R3["radialSector"]
	57	[4862]	GETTABLE 	R3 R3 K9 ; R3 := R3["name"]
	58	[4862]	CALL     	R2 2 2 ; R2 := R2(R3)
	59	[4863]	GETGLOBAL	R3 K0 ; R3 := mHover
	60	[4863]	GETTABLE 	R3 R3 K1 ; R3 := R3["Node"]
	61	[4863]	GETTABLE 	R3 R3 K7 ; R3 := R3["radialSector"]
	62	[4863]	GETTABLE 	R3 R3 K16 ; R3 := R3["keyChain"]
	63	[4864]	LOADNIL  	R4 R4 ; R4 := nil
	64	[4865]	GETGLOBAL	R5 K0 ; R5 := mHover
	65	[4865]	GETTABLE 	R5 R5 K1 ; R5 := R5["Node"]
	66	[4865]	GETTABLE 	R5 R5 K7 ; R5 := R5["radialSector"]
	67	[4865]	GETTABLE 	R5 R5 K17 ; R5 := R5["mission"]
	68	[4865]	GETTABLE 	R5 R5 K18 ; R5 := R5["difficulty"]
	69	[4866]	OP_LOADBOOL	R6 0 0 ; R6 := false
	70	[4868]	GETGLOBAL	R7 K10 ; R7 := 0x7b998233
	71	[4868]	GETGLOBAL	R8 K0 ; R8 := mHover
	72	[4868]	GETTABLE 	R8 R8 K1 ; R8 := R8["Node"]
	73	[4868]	GETTABLE 	R8 R8 K7 ; R8 := R8["radialSector"]
	74	[4868]	GETTABLE 	R8 R8 K17 ; R8 := R8["mission"]
	75	[4868]	GETTABLE 	R8 R8 K19 ; R8 := R8["levelKeyName"]
	76	[4868]	CALL     	R7 2 2 ; R7 := R7(R8)
	77	[4868]	TEST     	R7 1 ; if R7 then PC := 121
	78	[4868]	JMP      	121 ; PC := 121
	79	[4868]	GETGLOBAL	R7 K20 ; R7 := mRailJack
	80	[4868]	GETTABLE 	R7 R7 K21 ; R7 := R7["Active"]
	81	[4868]	TEST     	R7 0 ; if not R7 then PC := 96
	82	[4868]	JMP      	96 ; PC := 96
	83	[4868]	GETGLOBAL	R7 K22 ; R7 := 0x7f5022cf
	84	[4868]	GETTABLE 	R7 R7 K23 ; R7 := R7[0xa5c556b9]
	85	[4868]	GETGLOBAL	R8 K0 ; R8 := mHover
	86	[4868]	GETTABLE 	R8 R8 K1 ; R8 := R8["Node"]
	87	[4868]	GETTABLE 	R8 R8 K7 ; R8 := R8["radialSector"]
	88	[4868]	GETTABLE 	R8 R8 K17 ; R8 := R8["mission"]
	89	[4868]	GETTABLE 	R8 R8 K19 ; R8 := R8["levelKeyName"]
	90	[4868]	SELF     	R8 R8 K24 ; R9 := R8; R8 := R8[0xed4e0128]
	91	[4868]	CALL     	R8 2 2 ; R8 := R8(R9)
	92	[4868]	LOADK    	R9 K25 ; R9 := "CrewBattle"
	93	[4868]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	94	[4868]	TEST     	R7 0 ; if not R7 then PC := 121
	95	[4868]	JMP      	121 ; PC := 121
	96	[4868]	GETGLOBAL	R7 K22 ; R7 := 0x7f5022cf
	97	[4868]	GETTABLE 	R7 R7 K23 ; R7 := R7[0xa5c556b9]
	98	[4868]	MOVE     	R8 R2 ; R8 := R2
	99	[4868]	GETUPVAL 	R9 U0 ; R9 := U0
	100	[4868]	GETTABLE 	R9 R9 K26 ; R9 := R9["KEY_TAG"]
	101	[4868]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	102	[4868]	TEST     	R7 1 ; if R7 then PC := 121
	103	[4868]	JMP      	121 ; PC := 121
	104	[4868]	GETGLOBAL	R7 K4 ; R7 := _T
	105	[4868]	GETTABLE 	R7 R7 K27 ; R7 := R7["DesiredGoToNodeTag"]
	106	[4868]	TEST     	R7 1 ; if R7 then PC := 121
	107	[4868]	JMP      	121 ; PC := 121
	108	[4870]	GETGLOBAL	R7 K15 ; R7 := 0x64fb1586
	109	[4870]	GETGLOBAL	R8 K0 ; R8 := mHover
	110	[4870]	GETTABLE 	R8 R8 K1 ; R8 := R8["Node"]
	111	[4870]	GETTABLE 	R8 R8 K7 ; R8 := R8["radialSector"]
	112	[4870]	GETTABLE 	R8 R8 K17 ; R8 := R8["mission"]
	113	[4870]	GETTABLE 	R8 R8 K19 ; R8 := R8["levelKeyName"]
	114	[4870]	SELF     	R8 R8 K24 ; R9 := R8; R8 := R8[0xed4e0128]
	115	[4870]	CALL     	R8 2 0 ; R8,... := R8(R9)
	116	[4870]	CALL     	R7 0 2 ; R7 := R7(R8,...)
	117	[4870]	GETUPVAL 	R8 U0 ; R8 := U0
	118	[4870]	GETTABLE 	R8 R8 K26 ; R8 := R8["KEY_TAG"]
	119	[4870]	CONCAT   	R2 R7 R8 ; R2 := R7 .. R8
	120	[4871]	OP_LOADBOOL	R6 1 0 ; R6 := true
	121	[4874]	GETGLOBAL	R7 K10 ; R7 := 0x7b998233
	122	[4874]	MOVE     	R8 R3 ; R8 := R3
	123	[4874]	CALL     	R7 2 2 ; R7 := R7(R8)
	124	[4874]	TEST     	R7 1 ; if R7 then PC := 163
	125	[4874]	JMP      	163 ; PC := 163
	126	[4874]	GETGLOBAL	R7 K28 ; R7 := 0xbe190284
	127	[4874]	SELF     	R7 R7 K29 ; R8 := R7; R7 := R7[0xf2deaf69]
	128	[4874]	GETGLOBAL	R9 K30 ; R9 := gLotusAttractModeGameRulesType
	129	[4874]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	130	[4874]	TEST     	R7 1 ; if R7 then PC := 138
	131	[4874]	JMP      	138 ; PC := 138
	132	[4874]	GETGLOBAL	R7 K28 ; R7 := 0xbe190284
	133	[4874]	SELF     	R7 R7 K29 ; R8 := R7; R7 := R7[0xf2deaf69]
	134	[4874]	GETGLOBAL	R9 K31 ; R9 := gLotusHubGameRulesType
	135	[4874]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	136	[4874]	TEST     	R7 0 ; if not R7 then PC := 163
	137	[4874]	JMP      	163 ; PC := 163
	138	[4875]	LOADNIL  	R7 R7 ; R7 := nil
	139	[4876]	GETGLOBAL	R8 K22 ; R8 := 0x7f5022cf
	140	[4876]	GETTABLE 	R8 R8 K23 ; R8 := R8[0xa5c556b9]
	141	[4876]	MOVE     	R9 R2 ; R9 := R2
	142	[4876]	GETUPVAL 	R10 U0 ; R10 := U0
	143	[4876]	GETTABLE 	R10 R10 K26 ; R10 := R10["KEY_TAG"]
	144	[4876]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	145	[4877]	EQ       	1 R8 K6 ; if R8 == nil then PC := 157
	146	[4877]	JMP      	157 ; PC := 157
	147	[4878]	GETGLOBAL	R9 K22 ; R9 := 0x7f5022cf
	148	[4878]	GETTABLE 	R9 R9 K32 ; R9 := R9[0x1a94c9cc]
	149	[4878]	MOVE     	R10 R2 ; R10 := R2
	150	[4878]	LOADK    	R11 := 1.000000
	151	[4878]	SUB      	R12 R8 K33 ; R12 := R8 - 1.000000
	152	[4878]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	153	[4879]	GETGLOBAL	R10 K34 ; R10 := 0xb009bbc6
	154	[4879]	MOVE     	R11 R9 ; R11 := R9
	155	[4879]	CALL     	R10 2 2 ; R10 := R10(R11)
	156	[4879]	MOVE     	R7 R10 ; R7 := R10
	157	[4881]	GETGLOBAL	R10 K28 ; R10 := 0xbe190284
	158	[4881]	SELF     	R10 R10 K35 ; R11 := R10; R10 := R10[0xf3ab18b1]
	159	[4881]	MOVE     	R12 R3 ; R12 := R3
	160	[4881]	MOVE     	R13 R7 ; R13 := R7
	161	[4881]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	162	[4881]	JMP      	208 ; PC := 208
	163	[4882]	GETGLOBAL	R10 K22 ; R10 := 0x7f5022cf
	164	[4882]	GETTABLE 	R10 R10 K23 ; R10 := R10[0xa5c556b9]
	165	[4882]	MOVE     	R11 R2 ; R11 := R2
	166	[4882]	GETUPVAL 	R12 U0 ; R12 := U0
	167	[4882]	GETTABLE 	R12 R12 K26 ; R12 := R12["KEY_TAG"]
	168	[4882]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	169	[4882]	TEST     	R10 0 ; if not R10 then PC := 208
	170	[4882]	JMP      	208 ; PC := 208
	171	[4883]	GETGLOBAL	R10 K22 ; R10 := 0x7f5022cf
	172	[4883]	GETTABLE 	R10 R10 K23 ; R10 := R10[0xa5c556b9]
	173	[4883]	MOVE     	R11 R2 ; R11 := R2
	174	[4883]	GETUPVAL 	R12 U0 ; R12 := U0
	175	[4883]	GETTABLE 	R12 R12 K26 ; R12 := R12["KEY_TAG"]
	176	[4883]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	177	[4884]	EQ       	1 R10 K6 ; if R10 == nil then PC := 208
	178	[4884]	JMP      	208 ; PC := 208
	179	[4885]	GETGLOBAL	R11 K22 ; R11 := 0x7f5022cf
	180	[4885]	GETTABLE 	R11 R11 K32 ; R11 := R11[0x1a94c9cc]
	181	[4885]	MOVE     	R12 R2 ; R12 := R2
	182	[4885]	LOADK    	R13 := 1.000000
	183	[4885]	SUB      	R14 R10 K33 ; R14 := R10 - 1.000000
	184	[4885]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	185	[4886]	GETGLOBAL	R12 K36 ; R12 := 0x7ed0a956
	186	[4886]	MOVE     	R13 R11 ; R13 := R11
	187	[4886]	CALL     	R12 2 2 ; R12 := R12(R13)
	188	[4887]	GETGLOBAL	R13 K10 ; R13 := 0x7b998233
	189	[4887]	MOVE     	R14 R12 ; R14 := R12
	190	[4887]	CALL     	R13 2 2 ; R13 := R13(R14)
	191	[4887]	TEST     	R13 1 ; if R13 then PC := 208
	192	[4887]	JMP      	208 ; PC := 208
	193	[4887]	GETGLOBAL	R13 K10 ; R13 := 0x7b998233
	194	[4887]	GETUPVAL 	R14 U1 ; R14 := U1
	195	[4887]	GETTABLE 	R14 R14 K37 ; R14 := R14["baseRaidKeyType"]
	196	[4887]	CALL     	R13 2 2 ; R13 := R13(R14)
	197	[4887]	TEST     	R13 1 ; if R13 then PC := 208
	198	[4887]	JMP      	208 ; PC := 208
	199	[4887]	SELF     	R13 R12 K29 ; R14 := R12; R13 := R12[0xf2deaf69]
	200	[4887]	GETUPVAL 	R15 U1 ; R15 := U1
	201	[4887]	GETTABLE 	R15 R15 K37 ; R15 := R15["baseRaidKeyType"]
	202	[4887]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	203	[4887]	TEST     	R13 0 ; if not R13 then PC := 208
	204	[4887]	JMP      	208 ; PC := 208
	205	[4888]	SELF     	R13 R12 K24 ; R14 := R12; R13 := R12[0xed4e0128]
	206	[4888]	CALL     	R13 2 2 ; R13 := R13(R14)
	207	[4888]	MOVE     	R4 R13 ; R4 := R13
	208	[4893]	GETGLOBAL	R13 K22 ; R13 := 0x7f5022cf
	209	[4893]	GETTABLE 	R13 R13 K23 ; R13 := R13[0xa5c556b9]
	210	[4893]	MOVE     	R14 R2 ; R14 := R2
	211	[4893]	LOADK    	R15 K38 ; R15 := "FeaturedDojo"
	212	[4893]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	213	[4893]	TEST     	R13 0 ; if not R13 then PC := 283
	214	[4893]	JMP      	283 ; PC := 283
	215	[4894]	GETUPVAL 	R13 U2 ; R13 := U2
	216	[4894]	GETTABLE 	R13 R13 K39 ; R13 := R13[0x23a862e6]
	217	[4894]	CALL     	R13 1 2 ; R13 := R13()
	218	[4894]	TEST     	R13 1 ; if R13 then PC := 274
	219	[4894]	JMP      	274 ; PC := 274
	220	[4895]	GETGLOBAL	R13 K40 ; R13 := 0x03f57322
	221	[4895]	GETGLOBAL	R14 K22 ; R14 := 0x7f5022cf
	222	[4895]	GETTABLE 	R14 R14 K41 ; R14 := R14[0x348c01f7]
	223	[4895]	MOVE     	R15 R2 ; R15 := R2
	224	[4895]	LOADK    	R16 K42 ; R16 := "%d+"
	225	[4895]	CALL     	R14 3 0 ; R14,... := R14(R15,R16)
	226	[4895]	CALL     	R13 0 2 ; R13 := R13(R14,...)
	227	[4896]	GETGLOBAL	R14 K43 ; R14 := 0x76ea806b
	228	[4896]	SELF     	R14 R14 K44 ; R15 := R14; R14 := R14[0x3f3ae64c]
	229	[4896]	LOADK    	R16 := 0.000000
	230	[4896]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	231	[4896]	SELF     	R14 R14 K45 ; R15 := R14; R14 := R14[0x80563238]
	232	[4896]	CALL     	R14 2 2 ; R14 := R14(R15)
	233	[4896]	SELF     	R14 R14 K46 ; R15 := R14; R14 := R14[0x69727e0b]
	234	[4896]	CALL     	R14 2 2 ; R14 := R14(R15)
	235	[4896]	GETTABLE 	R14 R14 K47 ; R14 := R14["mFeaturedGuilds"]
	236	[4896]	GETTABLE 	R14 R14 R13 ; R14 := R14[R13]
	237	[4896]	GETTABLE 	R14 R14 K48 ; R14 := R14["mId"]
	238	[4897]	GETGLOBAL	R15 K10 ; R15 := 0x7b998233
	239	[4897]	GETGLOBAL	R16 K4 ; R16 := _T
	240	[4897]	GETTABLE 	R16 R16 K11 ; R16 := R16["SquadOverlay"]
	241	[4897]	CALL     	R15 2 2 ; R15 := R15(R16)
	242	[4897]	TEST     	R15 1 ; if R15 then PC := 282
	243	[4897]	JMP      	282 ; PC := 282
	244	[4898]	GETGLOBAL	R15 K10 ; R15 := 0x7b998233
	245	[4898]	GETGLOBAL	R16 K49 ; R16 := 0xcb79539e
	246	[4898]	CALL     	R15 2 2 ; R15 := R15(R16)
	247	[4898]	TEST     	R15 1 ; if R15 then PC := 256
	248	[4898]	JMP      	256 ; PC := 256
	249	[4899]	GETGLOBAL	R15 K49 ; R15 := 0xcb79539e
	250	[4899]	SELF     	R15 R15 K50 ; R16 := R15; R15 := R15[0x8b8fb8b7]
	251	[4899]	GETGLOBAL	R17 K51 ; R17 := 0x0469f296
	252	[4899]	LOADK    	R18 K52 ; R18 := "FEATURED_DOJO"
	253	[4899]	CALL     	R17 2 2 ; R17 := R17(R18)
	254	[4899]	MOVE     	R18 R13 ; R18 := R13
	255	[4899]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	256	[4901]	GETGLOBAL	R15 K4 ; R15 := _T
	257	[4901]	GETTABLE 	R15 R15 K11 ; R15 := R15["SquadOverlay"]
	258	[4901]	SELF     	R15 R15 K12 ; R16 := R15; R15 := R15[0xe4162eed]
	259	[4901]	LOADK    	R17 K53 ; R17 := "InitiateDojoVisit"
	260	[4901]	GETTABLE 	R18 R14 K48 ; R18 := R14["mId"]
	261	[4901]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	262	[4903]	NEWTABLE 	R15 0 3 ; R15 := {}
	263	[4903]	SETTABLE 	R15 K9 K54 ; R15["name"] := "DojoHUB_HUB"
	264	[4903]	SETTABLE 	R15 K55 K14 ; R15["quest"] := ""
	265	[4903]	SETTABLE 	R15 K18 K14 ; R15["difficulty"] := ""
	266	[4904]	GETGLOBAL	R16 K56 ; R16 := 0xe7f2b02f
	267	[4904]	SELF     	R16 R16 K57 ; R17 := R16; R16 := R16[0xd8f4f9d0]
	268	[4904]	GETGLOBAL	R18 K58 ; R18 := cjson
	269	[4904]	GETTABLE 	R18 R18 K59 ; R18 := R18[0xb139d7bc]
	270	[4904]	MOVE     	R19 R15 ; R19 := R15
	271	[4904]	CALL     	R18 2 0 ; R18,... := R18(R19)
	272	[4904]	CALL     	R16 0 1 ; R16(R17,...)
	273	[4905]	JMP      	282 ; PC := 282
	274	[4907]	GETUPVAL 	R16 U2 ; R16 := U2
	275	[4907]	GETTABLE 	R16 R16 K60 ; R16 := R16[0xe0cba3ca]
	276	[4907]	GETGLOBAL	R17 K61 ; R17 := 0xae91e43b
	277	[4907]	SELF     	R17 R17 K62 ; R18 := R17; R17 := R17[0x42b04007]
	278	[4907]	LOADK    	R19 K63 ; R19 := "/Lotus/Language/Clan/RestrictedUGCWarning"
	279	[4907]	OP_LOADBOOL	R20 0 0 ; R20 := false
	280	[4907]	CALL     	R17 4 0 ; R17,... := R17(R18,R19,R20)
	281	[4907]	CALL     	R16 0 1 ; R16(R17,...)
	282	[4909]	RETURN   	R0 1 ; return 
	283	[4912]	GETGLOBAL	R16 K22 ; R16 := 0x7f5022cf
	284	[4912]	GETTABLE 	R16 R16 K23 ; R16 := R16[0xa5c556b9]
	285	[4912]	MOVE     	R17 R2 ; R17 := R2
	286	[4912]	LOADK    	R18 K64 ; R18 := "ToggleBootLevel"
	287	[4912]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	288	[4912]	TEST     	R16 0 ; if not R16 then PC := 343
	289	[4912]	JMP      	343 ; PC := 343
	290	[4913]	GETGLOBAL	R16 K65 ; R16 := 0x25d99d89
	291	[4913]	SELF     	R16 R16 K66 ; R17 := R16; R16 := R16[0x21a1810f]
	292	[4913]	GETGLOBAL	R18 K0 ; R18 := mHover
	293	[4913]	GETTABLE 	R18 R18 K1 ; R18 := R18["Node"]
	294	[4913]	GETTABLE 	R18 R18 K67 ; R18 := R18["NodeIntro"]
	295	[4913]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	296	[4913]	TEST     	R16 1 ; if R16 then PC := 302
	297	[4913]	JMP      	302 ; PC := 302
	298	[4914]	GETUPVAL 	R16 U3 ; R16 := U3
	299	[4914]	GETGLOBAL	R17 K0 ; R17 := mHover
	300	[4914]	GETTABLE 	R17 R17 K1 ; R17 := R17["Node"]
	301	[4914]	CALL     	R16 2 1 ; R16(R17)
	302	[4917]	GETGLOBAL	R16 K65 ; R16 := 0x25d99d89
	303	[4917]	SELF     	R16 R16 K68 ; R17 := R16; R16 := R16[0xcd57f819]
	304	[4917]	OP_LOADBOOL	R18 1 0 ; R18 := true
	305	[4917]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	306	[4917]	GETTABLE 	R16 R16 K69 ; R16 := R16["mBootLocation"]
	307	[4918]	GETUPVAL 	R17 U2 ; R17 := U2
	308	[4918]	GETTABLE 	R17 R17 K70 ; R17 := R17[0x06d055f9]
	309	[4918]	EQ       	1 R16 K72 ; if R16 == 0.000000 then PC := 312
	310	[4918]	JMP      	312 ; PC := 312
	311	[4918]	OP_LOADBOOL	R18 0 1 ; R18 := false; PC := 312
	312	[4918]	OP_LOADBOOL	R18 1 0 ; R18 := true
	313	[4918]	LOADK    	R19 := 1.000000
	314	[4918]	LOADK    	R20 := 0.000000
	315	[4918]	CALL     	R17 4 2 ; R17 := R17(R18,R19,R20)
	316	[4919]	GETGLOBAL	R18 K73 ; R18 := 0x603636ad
	317	[4919]	GETUPVAL 	R19 U2 ; R19 := U2
	318	[4919]	GETTABLE 	R19 R19 K70 ; R19 := R19[0x06d055f9]
	319	[4919]	EQ       	1 R17 K72 ; if R17 == 0.000000 then PC := 322
	320	[4919]	JMP      	322 ; PC := 322
	321	[4919]	OP_LOADBOOL	R20 0 1 ; R20 := false; PC := 322
	322	[4919]	OP_LOADBOOL	R20 1 0 ; R20 := true
	323	[4919]	LOADK    	R21 K74 ; R21 := "/Lotus/Language/NewWar/NewWarP3M1b"
	324	[4919]	LOADK    	R22 K75 ; R22 := "/Lotus/Language/NewWar/NewWarP2DrifterCamp"
	325	[4919]	CALL     	R19 4 2 ; R19 := R19(R20,R21,R22)
	326	[4919]	NEWTABLE 	R20 0 0 ; R20 := {}
	327	[4919]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	328	[4920]	GETGLOBAL	R19 K73 ; R19 := 0x603636ad
	329	[4920]	LOADK    	R20 K76 ; R20 := "/Lotus/Language/NewWar/ChangeBootLevel"
	330	[4920]	NEWTABLE 	R21 0 1 ; R21 := {}
	331	[4920]	SETTABLE 	R21 K77 R18 ; R21["LOCATION"] := R18
	332	[4920]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	333	[4921]	GETUPVAL 	R20 U2 ; R20 := U2
	334	[4921]	GETTABLE 	R20 R20 K78 ; R20 := R20[0xdedfded7]
	335	[4921]	MOVE     	R21 R19 ; R21 := R19
	336	[4945]	CLOSURE  	R22 0 ; R22 := closure(Function #1)
	337	[4945]	MOVE     	R0 R17 ; R0 := R17
	338	[4945]	GETUPVAL 	R0 U2 ; R0 := U2
	339	[4945]	GETUPVAL 	R0 U4 ; R0 := U4
	340	[4921]	CALL     	R20 3 1 ; R20(R21,R22)
	341	[4946]	RETURN   	R0 1 ; return 
	342	[4946]	CLOSE    	R16 ; SAVE R16,...
	343	[4950]	GETUPVAL 	R16 U5 ; R16 := U5
	344	[4950]	GETGLOBAL	R17 K79 ; R17 := 0x89326c93
	345	[4950]	SELF     	R17 R17 K80 ; R18 := R17; R17 := R17[0x78298275]
	346	[4950]	CALL     	R17 2 0 ; R17,... := R17(R18)
	347	[4950]	CALL     	R16 0 2 ; R16 := R16(R17,...)
	348	[4950]	TEST     	R16 1 ; if R16 then PC := 361
	349	[4950]	JMP      	361 ; PC := 361
	350	[4950]	GETGLOBAL	R16 K22 ; R16 := 0x7f5022cf
	351	[4950]	GETTABLE 	R16 R16 K23 ; R16 := R16[0xa5c556b9]
	352	[4950]	MOVE     	R17 R2 ; R17 := R2
	353	[4950]	LOADK    	R18 K81 ; R18 := "Dojo"
	354	[4950]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	355	[4950]	TEST     	R16 0 ; if not R16 then PC := 361
	356	[4950]	JMP      	361 ; PC := 361
	357	[4951]	GETUPVAL 	R16 U6 ; R16 := U6
	358	[4951]	CALL     	R16 1 1 ; R16()
	359	[4952]	RETURN   	R0 1 ; return 
	360	[4952]	JMP      	426 ; PC := 426
	361	[4953]	GETGLOBAL	R16 K22 ; R16 := 0x7f5022cf
	362	[4953]	GETTABLE 	R16 R16 K23 ; R16 := R16[0xa5c556b9]
	363	[4953]	MOVE     	R17 R2 ; R17 := R2
	364	[4953]	LOADK    	R18 K82 ; R18 := "StalkerHideout"
	365	[4953]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	366	[4953]	TEST     	R16 0 ; if not R16 then PC := 426
	367	[4953]	JMP      	426 ; PC := 426
	368	[4954]	LOADNIL  	R16 R16 ; R16 := nil
	369	[4955]	GETGLOBAL	R17 K22 ; R17 := 0x7f5022cf
	370	[4955]	GETTABLE 	R17 R17 K23 ; R17 := R17[0xa5c556b9]
	371	[4955]	MOVE     	R18 R2 ; R18 := R2
	372	[4955]	GETUPVAL 	R19 U0 ; R19 := U0
	373	[4955]	GETTABLE 	R19 R19 K26 ; R19 := R19["KEY_TAG"]
	374	[4955]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	375	[4956]	EQ       	1 R17 K6 ; if R17 == nil then PC := 425
	376	[4956]	JMP      	425 ; PC := 425
	377	[4957]	GETGLOBAL	R18 K22 ; R18 := 0x7f5022cf
	378	[4957]	GETTABLE 	R18 R18 K32 ; R18 := R18[0x1a94c9cc]
	379	[4957]	MOVE     	R19 R2 ; R19 := R2
	380	[4957]	LOADK    	R20 := 1.000000
	381	[4957]	SUB      	R21 R17 K33 ; R21 := R17 - 1.000000
	382	[4957]	CALL     	R18 4 2 ; R18 := R18(R19,R20,R21)
	383	[4958]	GETGLOBAL	R19 K34 ; R19 := 0xb009bbc6
	384	[4958]	MOVE     	R20 R18 ; R20 := R18
	385	[4958]	CALL     	R19 2 2 ; R19 := R19(R20)
	386	[4958]	MOVE     	R16 R19 ; R16 := R19
	387	[4959]	GETGLOBAL	R19 K10 ; R19 := 0x7b998233
	388	[4959]	MOVE     	R20 R16 ; R20 := R16
	389	[4959]	CALL     	R19 2 2 ; R19 := R19(R20)
	390	[4959]	TEST     	R19 1 ; if R19 then PC := 425
	391	[4959]	JMP      	425 ; PC := 425
	392	[4960]	SELF     	R19 R16 K83 ; R20 := R16; R19 := R16[0xef893aec]
	393	[4960]	CALL     	R19 2 2 ; R19 := R19(R20)
	394	[4961]	GETGLOBAL	R20 K10 ; R20 := 0x7b998233
	395	[4961]	GETTABLE 	R21 R19 K84 ; R21 := R19["levelOverride"]
	396	[4961]	CALL     	R20 2 2 ; R20 := R20(R21)
	397	[4961]	TEST     	R20 1 ; if R20 then PC := 425
	398	[4961]	JMP      	425 ; PC := 425
	399	[4962]	GETGLOBAL	R20 K85 ; R20 := 0x0032441c
	400	[4962]	SETTABLE 	R20 K86 K87 ; R20["StalkerMode"] := true
	401	[4964]	GETGLOBAL	R20 K88 ; R20 := 0xa94df70b
	402	[4964]	SELF     	R20 R20 K89 ; R21 := R20; R20 := R20[0x2b0141b8]
	403	[4964]	GETTABLE 	R22 R19 K84 ; R22 := R19["levelOverride"]
	404	[4964]	CALL     	R20 3 1 ; R20(R21,R22)
	405	[4966]	GETGLOBAL	R20 K79 ; R20 := 0x89326c93
	406	[4966]	SELF     	R20 R20 K90 ; R21 := R20; R20 := R20[0x98f20ca5]
	407	[4966]	CALL     	R20 2 2 ; R20 := R20(R21)
	408	[4967]	GETTABLE 	R21 R19 K84 ; R21 := R19["levelOverride"]
	409	[4967]	SETTABLE 	R20 K91 R21 ; R20["level"] := R21
	410	[4968]	GETTABLE 	R21 R19 K92 ; R21 := R19["gameRules"]
	411	[4968]	SETTABLE 	R20 K92 R21 ; R20["gameRules"] := R21
	412	[4969]	GETGLOBAL	R21 K65 ; R21 := 0x25d99d89
	413	[4969]	SELF     	R21 R21 K93 ; R22 := R21; R21 := R21[0xe4b15c4a]
	414	[4969]	MOVE     	R23 R20 ; R23 := R20
	415	[4969]	MOVE     	R24 R2 ; R24 := R2
	416	[4969]	CALL     	R21 4 1 ; R21(R22,R23,R24)
	417	[4970]	GETGLOBAL	R21 K65 ; R21 := 0x25d99d89
	418	[4970]	SELF     	R21 R21 K94 ; R22 := R21; R21 := R21[0x3be62eb2]
	419	[4970]	OP_LOADBOOL	R23 1 0 ; R23 := true
	420	[4970]	CALL     	R21 3 1 ; R21(R22,R23)
	421	[4972]	GETGLOBAL	R21 K95 ; R21 := 0x34291f5c
	422	[4972]	GETTABLE 	R21 R21 K96 ; R21 := R21[0x8ee24660]
	423	[4972]	OP_LOADBOOL	R22 0 0 ; R22 := false
	424	[4972]	CALL     	R21 2 1 ; R21(R22)
	425	[4976]	RETURN   	R0 1 ; return 
	426	[4979]	GETGLOBAL	R21 K85 ; R21 := 0x0032441c
	427	[4979]	GETTABLE 	R21 R21 K86 ; R21 := R21["StalkerMode"]
	428	[4979]	TEST     	R21 0 ; if not R21 then PC := 437
	429	[4979]	JMP      	437 ; PC := 437
	430	[4980]	GETUPVAL 	R21 U7 ; R21 := U7
	431	[4980]	MOVE     	R22 R2 ; R22 := R2
	432	[4980]	MOVE     	R23 R3 ; R23 := R3
	433	[4980]	MOVE     	R24 R4 ; R24 := R4
	434	[4980]	MOVE     	R25 R5 ; R25 := R5
	435	[4980]	CALL     	R21 5 1 ; R21(R22,R23,R24,R25)
	436	[4981]	RETURN   	R0 1 ; return 
	437	[4985]	TEST     	R6 1 ; if R6 then PC := 454
	438	[4985]	JMP      	454 ; PC := 454
	439	[4985]	GETGLOBAL	R21 K10 ; R21 := 0x7b998233
	440	[4985]	MOVE     	R22 R3 ; R22 := R3
	441	[4985]	CALL     	R21 2 2 ; R21 := R21(R22)
	442	[4985]	TEST     	R21 1 ; if R21 then PC := 452
	443	[4985]	JMP      	452 ; PC := 452
	444	[4985]	GETUPVAL 	R21 U1 ; R21 := U1
	445	[4985]	GETTABLE 	R21 R21 K97 ; R21 := R21["vorsPrizeQuestKey"]
	446	[4985]	EQ       	1 R3 R21 ; if R3 == R21 then PC := 453
	447	[4985]	JMP      	453 ; PC := 453
	448	[4985]	GETUPVAL 	R21 U1 ; R21 := U1
	449	[4985]	GETTABLE 	R21 R21 K98 ; R21 := R21["zarimanIntroQuest"]
	450	[4985]	EQ       	1 R3 R21 ; if R3 == R21 then PC := 453
	451	[4985]	JMP      	453 ; PC := 453
	452	[4985]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 453
	453	[4985]	OP_LOADBOOL	R6 1 0 ; R6 := true
	454	[4987]	TEST     	R6 1 ; if R6 then PC := 661
	455	[4987]	JMP      	661 ; PC := 661
	456	[4987]	GETGLOBAL	R21 K99 ; R21 := mNewWarMode
	457	[4987]	TEST     	R21 1 ; if R21 then PC := 661
	458	[4987]	JMP      	661 ; PC := 661
	459	[4987]	GETGLOBAL	R21 K0 ; R21 := mHover
	460	[4987]	GETTABLE 	R21 R21 K1 ; R21 := R21["Node"]
	461	[4987]	GETTABLE 	R21 R21 K7 ; R21 := R21["radialSector"]
	462	[4987]	GETTABLE 	R21 R21 K100 ; R21 := R21["nodeType"]
	463	[4987]	EQ       	1 R21 K72 ; if R21 == 0.000000 then PC := 500
	464	[4987]	JMP      	500 ; PC := 500
	465	[4987]	GETGLOBAL	R21 K0 ; R21 := mHover
	466	[4987]	GETTABLE 	R21 R21 K1 ; R21 := R21["Node"]
	467	[4987]	GETTABLE 	R21 R21 K7 ; R21 := R21["radialSector"]
	468	[4987]	GETTABLE 	R21 R21 K100 ; R21 := R21["nodeType"]
	469	[4987]	EQ       	0 R21 K101 ; if R21 ~= 4.000000 then PC := 661
	470	[4987]	JMP      	661 ; PC := 661
	471	[4987]	GETGLOBAL	R21 K4 ; R21 := _T
	472	[4987]	GETTABLE 	R21 R21 K102 ; R21 := R21["CachedEliteAlertMissions"]
	473	[4987]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	474	[4987]	TEST     	R21 1 ; if R21 then PC := 500
	475	[4987]	JMP      	500 ; PC := 500
	476	[4987]	GETGLOBAL	R21 K4 ; R21 := _T
	477	[4987]	GETTABLE 	R21 R21 K103 ; R21 := R21["CachedNemesisMissions"]
	478	[4987]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	479	[4987]	TEST     	R21 1 ; if R21 then PC := 500
	480	[4987]	JMP      	500 ; PC := 500
	481	[4987]	GETGLOBAL	R21 K4 ; R21 := _T
	482	[4987]	GETTABLE 	R21 R21 K104 ; R21 := R21["CachedHardModeDailyMissions"]
	483	[4987]	TEST     	R21 0 ; if not R21 then PC := 661
	484	[4987]	JMP      	661 ; PC := 661
	485	[4987]	GETGLOBAL	R21 K4 ; R21 := _T
	486	[4987]	GETTABLE 	R21 R21 K104 ; R21 := R21["CachedHardModeDailyMissions"]
	487	[4987]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	488	[4987]	TEST     	R21 0 ; if not R21 then PC := 661
	489	[4987]	JMP      	661 ; PC := 661
	490	[4987]	GETGLOBAL	R21 K4 ; R21 := _T
	491	[4987]	GETTABLE 	R21 R21 K104 ; R21 := R21["CachedHardModeDailyMissions"]
	492	[4987]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	493	[4987]	GETTABLE 	R21 R21 K105 ; R21 := R21["isVisible"]
	494	[4987]	TEST     	R21 0 ; if not R21 then PC := 661
	495	[4987]	JMP      	661 ; PC := 661
	496	[4987]	GETUPVAL 	R21 U8 ; R21 := U8
	497	[4987]	GETTABLE 	R21 R21 K106 ; R21 := R21["CurrentTier"]
	498	[4987]	LT       	0 K72 R21 ; if 0.000000 >= R21 then PC := 661
	499	[4987]	JMP      	661 ; PC := 661
	500	[4987]	GETUPVAL 	R21 U9 ; R21 := U9
	501	[4987]	GETGLOBAL	R22 K0 ; R22 := mHover
	502	[4987]	GETTABLE 	R22 R22 K1 ; R22 := R22["Node"]
	503	[4987]	OP_LOADBOOL	R23 1 0 ; R23 := true
	504	[4987]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	505	[4987]	TEST     	R21 1 ; if R21 then PC := 509
	506	[4987]	JMP      	509 ; PC := 509
	507	[4987]	TEST     	R0 0 ; if not R0 then PC := 661
	508	[4987]	JMP      	661 ; PC := 661
	509	[4988]	GETUPVAL 	R21 U10 ; R21 := U10
	510	[4988]	GETTABLE 	R21 R21 K107 ; R21 := R21[0x7f1a8dc0]
	511	[4988]	GETGLOBAL	R22 K0 ; R22 := mHover
	512	[4988]	GETTABLE 	R22 R22 K1 ; R22 := R22["Node"]
	513	[4988]	GETUPVAL 	R23 U8 ; R23 := U8
	514	[4988]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	515	[4988]	TEST     	R21 0 ; if not R21 then PC := 661
	516	[4988]	JMP      	661 ; PC := 661
	517	[4990]	GETGLOBAL	R21 K4 ; R21 := _T
	518	[4990]	GETTABLE 	R21 R21 K27 ; R21 := R21["DesiredGoToNodeTag"]
	519	[4990]	TEST     	R21 0 ; if not R21 then PC := 562
	520	[4990]	JMP      	562 ; PC := 562
	521	[4991]	GETGLOBAL	R21 K4 ; R21 := _T
	522	[4991]	GETTABLE 	R21 R21 K27 ; R21 := R21["DesiredGoToNodeTag"]
	523	[4991]	GETUPVAL 	R22 U0 ; R22 := U0
	524	[4991]	GETTABLE 	R22 R22 K108 ; R22 := R22["ACTIVE_MISSION_TAG"]
	525	[4991]	EQ       	0 R21 R22 ; if R21 ~= R22 then PC := 533
	526	[4991]	JMP      	533 ; PC := 533
	527	[4992]	GETGLOBAL	R21 K4 ; R21 := _T
	528	[4992]	SETTABLE 	R21 K27 K6 ; R21["DesiredGoToNodeTag"] := nil
	529	[4993]	GETUPVAL 	R21 U11 ; R21 := U11
	530	[4993]	MOVE     	R22 R2 ; R22 := R2
	531	[4993]	CALL     	R21 2 1 ; R21(R22)
	532	[4993]	JMP      	560 ; PC := 560
	533	[4994]	GETGLOBAL	R21 K4 ; R21 := _T
	534	[4994]	GETTABLE 	R21 R21 K27 ; R21 := R21["DesiredGoToNodeTag"]
	535	[4994]	GETUPVAL 	R22 U0 ; R22 := U0
	536	[4994]	GETTABLE 	R22 R22 K109 ; R22 := R22["INVASION_ATTACKER_TAG"]
	537	[4994]	EQ       	0 R21 R22 ; if R21 ~= R22 then PC := 545
	538	[4994]	JMP      	545 ; PC := 545
	539	[4995]	GETGLOBAL	R21 K4 ; R21 := _T
	540	[4995]	SETTABLE 	R21 K27 K6 ; R21["DesiredGoToNodeTag"] := nil
	541	[4996]	GETUPVAL 	R21 U12 ; R21 := U12
	542	[4996]	MOVE     	R22 R2 ; R22 := R2
	543	[4996]	CALL     	R21 2 1 ; R21(R22)
	544	[4996]	JMP      	560 ; PC := 560
	545	[4998]	GETGLOBAL	R21 K15 ; R21 := 0x64fb1586
	546	[4998]	GETGLOBAL	R22 K0 ; R22 := mHover
	547	[4998]	GETTABLE 	R22 R22 K1 ; R22 := R22["Node"]
	548	[4998]	GETTABLE 	R22 R22 K7 ; R22 := R22["radialSector"]
	549	[4998]	GETTABLE 	R22 R22 K9 ; R22 := R22["name"]
	550	[4998]	CALL     	R21 2 2 ; R21 := R21(R22)
	551	[4998]	GETGLOBAL	R22 K4 ; R22 := _T
	552	[4998]	GETTABLE 	R22 R22 K27 ; R22 := R22["DesiredGoToNodeTag"]
	553	[4998]	CONCAT   	R2 R21 R22 ; R2 := R21 .. R22
	554	[4999]	GETGLOBAL	R21 K4 ; R21 := _T
	555	[4999]	SETTABLE 	R21 K27 K6 ; R21["DesiredGoToNodeTag"] := nil
	556	[5000]	GETUPVAL 	R21 U7 ; R21 := U7
	557	[5000]	MOVE     	R22 R2 ; R22 := R2
	558	[5000]	LOADNIL  	R23 R25 ; R23 := R24 := R25 := nil
	559	[5000]	CALL     	R21 5 1 ; R21(R22,R23,R24,R25)
	560	[5002]	RETURN   	R0 1 ; return 
	561	[5002]	JMP      	661 ; PC := 661
	562	[5003]	GETGLOBAL	R21 K0 ; R21 := mHover
	563	[5003]	GETTABLE 	R21 R21 K1 ; R21 := R21["Node"]
	564	[5003]	GETTABLE 	R21 R21 K7 ; R21 := R21["radialSector"]
	565	[5003]	GETTABLE 	R21 R21 K17 ; R21 := R21["mission"]
	566	[5003]	GETTABLE 	R21 R21 K110 ; R21 := R21["missionType"]
	567	[5003]	EQ       	0 R21 K111 ; if R21 ~= 22.000000 then PC := 606
	568	[5003]	JMP      	606 ; PC := 606
	569	[5003]	GETGLOBAL	R21 K0 ; R21 := mHover
	570	[5003]	GETTABLE 	R21 R21 K1 ; R21 := R21["Node"]
	571	[5003]	GETTABLE 	R21 R21 K7 ; R21 := R21["radialSector"]
	572	[5003]	GETTABLE 	R21 R21 K17 ; R21 := R21["mission"]
	573	[5003]	GETTABLE 	R21 R21 K112 ; R21 := R21["faction"]
	574	[5003]	EQ       	0 R21 K33 ; if R21 ~= 1.000000 then PC := 606
	575	[5003]	JMP      	606 ; PC := 606
	576	[5003]	GETGLOBAL	R21 K0 ; R21 := mHover
	577	[5003]	GETTABLE 	R21 R21 K1 ; R21 := R21["Node"]
	578	[5003]	GETTABLE 	R21 R21 K9 ; R21 := R21["name"]
	579	[5003]	TEST     	R21 0 ; if not R21 then PC := 606
	580	[5003]	JMP      	606 ; PC := 606
	581	[5004]	GETGLOBAL	R21 K4 ; R21 := _T
	582	[5004]	GETTABLE 	R21 R21 K113 ; R21 := R21["DesiredGoToQuest"]
	583	[5004]	TEST     	R21 0 ; if not R21 then PC := 590
	584	[5004]	JMP      	590 ; PC := 590
	585	[5005]	GETGLOBAL	R21 K4 ; R21 := _T
	586	[5005]	GETTABLE 	R3 R21 K113 ; R3 := R21["DesiredGoToQuest"]
	587	[5006]	GETGLOBAL	R21 K4 ; R21 := _T
	588	[5006]	SETTABLE 	R21 K113 K6 ; R21["DesiredGoToQuest"] := nil
	589	[5006]	JMP      	598 ; PC := 598
	590	[5007]	GETGLOBAL	R21 K10 ; R21 := 0x7b998233
	591	[5007]	MOVE     	R22 R3 ; R22 := R3
	592	[5007]	CALL     	R21 2 2 ; R21 := R21(R22)
	593	[5007]	TEST     	R21 1 ; if R21 then PC := 598
	594	[5007]	JMP      	598 ; PC := 598
	595	[5008]	SELF     	R21 R3 K24 ; R22 := R3; R21 := R3[0xed4e0128]
	596	[5008]	CALL     	R21 2 2 ; R21 := R21(R22)
	597	[5008]	MOVE     	R3 R21 ; R3 := R21
	598	[5010]	GETUPVAL 	R21 U13 ; R21 := U13
	599	[5010]	MOVE     	R22 R2 ; R22 := R2
	600	[5010]	MOVE     	R23 R2 ; R23 := R2
	601	[5010]	MOVE     	R24 R3 ; R24 := R3
	602	[5010]	MOVE     	R25 R5 ; R25 := R5
	603	[5010]	CALL     	R21 5 1 ; R21(R22,R23,R24,R25)
	604	[5011]	RETURN   	R0 1 ; return 
	605	[5011]	JMP      	661 ; PC := 661
	606	[5012]	GETGLOBAL	R21 K4 ; R21 := _T
	607	[5012]	GETTABLE 	R21 R21 K113 ; R21 := R21["DesiredGoToQuest"]
	608	[5012]	TEST     	R21 0 ; if not R21 then PC := 615
	609	[5012]	JMP      	615 ; PC := 615
	610	[5013]	GETGLOBAL	R21 K4 ; R21 := _T
	611	[5013]	GETTABLE 	R3 R21 K113 ; R3 := R21["DesiredGoToQuest"]
	612	[5014]	GETGLOBAL	R21 K4 ; R21 := _T
	613	[5014]	SETTABLE 	R21 K113 K6 ; R21["DesiredGoToQuest"] := nil
	614	[5014]	JMP      	661 ; PC := 661
	615	[5015]	GETGLOBAL	R21 K0 ; R21 := mHover
	616	[5015]	GETTABLE 	R21 R21 K1 ; R21 := R21["Node"]
	617	[5015]	GETTABLE 	R21 R21 K114 ; R21 := R21["isBlockaded"]
	618	[5015]	TEST     	R21 0 ; if not R21 then PC := 634
	619	[5015]	JMP      	634 ; PC := 634
	620	[5016]	GETGLOBAL	R21 K15 ; R21 := 0x64fb1586
	621	[5016]	GETGLOBAL	R22 K0 ; R22 := mHover
	622	[5016]	GETTABLE 	R22 R22 K1 ; R22 := R22["Node"]
	623	[5016]	GETTABLE 	R22 R22 K7 ; R22 := R22["radialSector"]
	624	[5016]	GETTABLE 	R22 R22 K9 ; R22 := R22["name"]
	625	[5016]	CALL     	R21 2 2 ; R21 := R21(R22)
	626	[5016]	GETUPVAL 	R22 U0 ; R22 := U0
	627	[5016]	GETTABLE 	R22 R22 K115 ; R22 := R22["NEMESIS_MISSION_TAG"]
	628	[5016]	CONCAT   	R2 R21 R22 ; R2 := R21 .. R22
	629	[5017]	GETUPVAL 	R21 U7 ; R21 := U7
	630	[5017]	MOVE     	R22 R2 ; R22 := R2
	631	[5017]	CALL     	R21 2 1 ; R21(R22)
	632	[5018]	RETURN   	R0 1 ; return 
	633	[5018]	JMP      	661 ; PC := 661
	634	[5019]	GETGLOBAL	R21 K85 ; R21 := 0x0032441c
	635	[5019]	GETTABLE 	R21 R21 K116 ; R21 := R21["CachedGoalInfo"]
	636	[5019]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	637	[5019]	TEST     	R21 0 ; if not R21 then PC := 648
	638	[5019]	JMP      	648 ; PC := 648
	639	[5019]	GETGLOBAL	R21 K4 ; R21 := _T
	640	[5019]	GETTABLE 	R21 R21 K117 ; R21 := R21["LockedGoalMissionInfo"]
	641	[5019]	TEST     	R21 0 ; if not R21 then PC := 661
	642	[5019]	JMP      	661 ; PC := 661
	643	[5019]	GETGLOBAL	R21 K4 ; R21 := _T
	644	[5019]	GETTABLE 	R21 R21 K117 ; R21 := R21["LockedGoalMissionInfo"]
	645	[5019]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	646	[5019]	TEST     	R21 0 ; if not R21 then PC := 661
	647	[5019]	JMP      	661 ; PC := 661
	648	[5020]	GETGLOBAL	R21 K118 ; R21 := mInfoTip
	649	[5020]	SELF     	R21 R21 K119 ; R22 := R21; R21 := R21[0x554369c7]
	650	[5020]	GETGLOBAL	R23 K0 ; R23 := mHover
	651	[5020]	GETTABLE 	R23 R23 K1 ; R23 := R23["Node"]
	652	[5020]	GETTABLE 	R23 R23 K7 ; R23 := R23["radialSector"]
	653	[5020]	MOVE     	R24 R3 ; R24 := R3
	654	[5020]	MOVE     	R25 R4 ; R25 := R4
	655	[5020]	GETUPVAL 	R26 U8 ; R26 := U8
	656	[5020]	GETGLOBAL	R27 K20 ; R27 := mRailJack
	657	[5020]	CALL     	R21 7 1 ; R21(R22,R23,R24,R25,R26,R27)
	658	[5021]	GETUPVAL 	R21 U14 ; R21 := U14
	659	[5021]	SETTABLE 	R21 K120 K121 ; R21["isLMBDown"] := false
	660	[5022]	RETURN   	R0 1 ; return 
	661	[5026]	GETGLOBAL	R21 K10 ; R21 := 0x7b998233
	662	[5026]	GETGLOBAL	R22 K0 ; R22 := mHover
	663	[5026]	GETTABLE 	R22 R22 K1 ; R22 := R22["Node"]
	664	[5026]	GETTABLE 	R22 R22 K7 ; R22 := R22["radialSector"]
	665	[5026]	GETTABLE 	R22 R22 K16 ; R22 := R22["keyChain"]
	666	[5026]	CALL     	R21 2 2 ; R21 := R21(R22)
	667	[5026]	TEST     	R21 1 ; if R21 then PC := 677
	668	[5026]	JMP      	677 ; PC := 677
	669	[5027]	GETGLOBAL	R21 K0 ; R21 := mHover
	670	[5027]	GETTABLE 	R21 R21 K1 ; R21 := R21["Node"]
	671	[5027]	GETTABLE 	R21 R21 K7 ; R21 := R21["radialSector"]
	672	[5027]	GETTABLE 	R21 R21 K16 ; R21 := R21["keyChain"]
	673	[5027]	SELF     	R21 R21 K24 ; R22 := R21; R21 := R21[0xed4e0128]
	674	[5027]	CALL     	R21 2 2 ; R21 := R21(R22)
	675	[5027]	MOVE     	R3 R21 ; R3 := R21
	676	[5027]	JMP      	872 ; PC := 872
	677	[5028]	TEST     	R3 1 ; if R3 then PC := 872
	678	[5028]	JMP      	872 ; PC := 872
	679	[5029]	GETGLOBAL	R21 K4 ; R21 := _T
	680	[5029]	GETTABLE 	R21 R21 K122 ; R21 := R21["CachedAlerts"]
	681	[5029]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	682	[5029]	TEST     	R21 0 ; if not R21 then PC := 701
	683	[5029]	JMP      	701 ; PC := 701
	684	[5029]	GETGLOBAL	R21 K4 ; R21 := _T
	685	[5029]	GETTABLE 	R21 R21 K122 ; R21 := R21["CachedAlerts"]
	686	[5029]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	687	[5029]	GETTABLE 	R21 R21 K123 ; R21 := R21["mVisible"]
	688	[5029]	TEST     	R21 0 ; if not R21 then PC := 701
	689	[5029]	JMP      	701 ; PC := 701
	690	[5029]	GETGLOBAL	R21 K4 ; R21 := _T
	691	[5029]	GETTABLE 	R21 R21 K122 ; R21 := R21["CachedAlerts"]
	692	[5029]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	693	[5029]	GETTABLE 	R21 R21 K124 ; R21 := R21["mUnlocked"]
	694	[5029]	TEST     	R21 0 ; if not R21 then PC := 701
	695	[5029]	JMP      	701 ; PC := 701
	696	[5030]	MOVE     	R21 R2 ; R21 := R2
	697	[5030]	GETUPVAL 	R22 U0 ; R22 := U0
	698	[5030]	GETTABLE 	R22 R22 K125 ; R22 := R22["ALERT_TAG"]
	699	[5030]	CONCAT   	R2 R21 R22 ; R2 := R21 .. R22
	700	[5030]	JMP      	872 ; PC := 872
	701	[5031]	GETGLOBAL	R21 K85 ; R21 := 0x0032441c
	702	[5031]	GETTABLE 	R21 R21 K116 ; R21 := R21["CachedGoalInfo"]
	703	[5031]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	704	[5031]	TEST     	R21 0 ; if not R21 then PC := 728
	705	[5031]	JMP      	728 ; PC := 728
	706	[5031]	GETGLOBAL	R21 K0 ; R21 := mHover
	707	[5031]	GETTABLE 	R21 R21 K1 ; R21 := R21["Node"]
	708	[5031]	GETTABLE 	R21 R21 K7 ; R21 := R21["radialSector"]
	709	[5031]	GETTABLE 	R21 R21 K100 ; R21 := R21["nodeType"]
	710	[5031]	EQ       	1 R21 K126 ; if R21 == 3.000000 then PC := 728
	711	[5031]	JMP      	728 ; PC := 728
	712	[5032]	GETGLOBAL	R21 K4 ; R21 := _T
	713	[5032]	GETTABLE 	R21 R21 K127 ; R21 := R21["CachedInvasionInfo"]
	714	[5032]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	715	[5032]	TEST     	R21 0 ; if not R21 then PC := 723
	716	[5032]	JMP      	723 ; PC := 723
	717	[5033]	GETGLOBAL	R21 K4 ; R21 := _T
	718	[5033]	SETTABLE 	R21 K27 K6 ; R21["DesiredGoToNodeTag"] := nil
	719	[5034]	GETUPVAL 	R21 U12 ; R21 := U12
	720	[5034]	MOVE     	R22 R2 ; R22 := R2
	721	[5034]	CALL     	R21 2 1 ; R21(R22)
	722	[5035]	RETURN   	R0 1 ; return 
	723	[5037]	MOVE     	R21 R2 ; R21 := R2
	724	[5037]	GETUPVAL 	R22 U0 ; R22 := U0
	725	[5037]	GETTABLE 	R22 R22 K128 ; R22 := R22["EVENT_TAG"]
	726	[5037]	CONCAT   	R2 R21 R22 ; R2 := R21 .. R22
	727	[5037]	JMP      	872 ; PC := 872
	728	[5038]	GETGLOBAL	R21 K4 ; R21 := _T
	729	[5038]	GETTABLE 	R21 R21 K129 ; R21 := R21["CachedSyndicateMissions"]
	730	[5038]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	731	[5038]	TEST     	R21 0 ; if not R21 then PC := 750
	732	[5038]	JMP      	750 ; PC := 750
	733	[5038]	GETGLOBAL	R21 K4 ; R21 := _T
	734	[5038]	GETTABLE 	R21 R21 K129 ; R21 := R21["CachedSyndicateMissions"]
	735	[5038]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	736	[5038]	GETTABLE 	R21 R21 K123 ; R21 := R21["mVisible"]
	737	[5038]	TEST     	R21 0 ; if not R21 then PC := 750
	738	[5038]	JMP      	750 ; PC := 750
	739	[5038]	GETGLOBAL	R21 K4 ; R21 := _T
	740	[5038]	GETTABLE 	R21 R21 K129 ; R21 := R21["CachedSyndicateMissions"]
	741	[5038]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	742	[5038]	GETTABLE 	R21 R21 K124 ; R21 := R21["mUnlocked"]
	743	[5038]	TEST     	R21 0 ; if not R21 then PC := 750
	744	[5038]	JMP      	750 ; PC := 750
	745	[5039]	MOVE     	R21 R2 ; R21 := R2
	746	[5039]	GETUPVAL 	R22 U0 ; R22 := U0
	747	[5039]	GETTABLE 	R22 R22 K130 ; R22 := R22["SYNDICATE_MISSION_TAG"]
	748	[5039]	CONCAT   	R2 R21 R22 ; R2 := R21 .. R22
	749	[5039]	JMP      	872 ; PC := 872
	750	[5040]	GETGLOBAL	R21 K4 ; R21 := _T
	751	[5040]	GETTABLE 	R21 R21 K131 ; R21 := R21["CachedSortieMissions"]
	752	[5040]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	753	[5040]	TEST     	R21 0 ; if not R21 then PC := 766
	754	[5040]	JMP      	766 ; PC := 766
	755	[5040]	GETGLOBAL	R21 K4 ; R21 := _T
	756	[5040]	GETTABLE 	R21 R21 K131 ; R21 := R21["CachedSortieMissions"]
	757	[5040]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	758	[5040]	GETTABLE 	R21 R21 K132 ; R21 := R21["mShowInStarChart"]
	759	[5040]	TEST     	R21 0 ; if not R21 then PC := 766
	760	[5040]	JMP      	766 ; PC := 766
	761	[5041]	MOVE     	R21 R2 ; R21 := R2
	762	[5041]	GETUPVAL 	R22 U0 ; R22 := U0
	763	[5041]	GETTABLE 	R22 R22 K133 ; R22 := R22["SORTIE_MISSION_TAG"]
	764	[5041]	CONCAT   	R2 R21 R22 ; R2 := R21 .. R22
	765	[5041]	JMP      	872 ; PC := 872
	766	[5042]	GETGLOBAL	R21 K4 ; R21 := _T
	767	[5042]	GETTABLE 	R21 R21 K134 ; R21 := R21["CachedActiveMissions"]
	768	[5042]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	769	[5042]	TEST     	R21 0 ; if not R21 then PC := 788
	770	[5042]	JMP      	788 ; PC := 788
	771	[5042]	GETGLOBAL	R21 K4 ; R21 := _T
	772	[5042]	GETTABLE 	R21 R21 K134 ; R21 := R21["CachedActiveMissions"]
	773	[5042]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	774	[5042]	GETTABLE 	R21 R21 K123 ; R21 := R21["mVisible"]
	775	[5042]	TEST     	R21 0 ; if not R21 then PC := 788
	776	[5042]	JMP      	788 ; PC := 788
	777	[5042]	GETGLOBAL	R21 K4 ; R21 := _T
	778	[5042]	GETTABLE 	R21 R21 K134 ; R21 := R21["CachedActiveMissions"]
	779	[5042]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	780	[5042]	GETTABLE 	R21 R21 K124 ; R21 := R21["mUnlocked"]
	781	[5042]	TEST     	R21 0 ; if not R21 then PC := 788
	782	[5042]	JMP      	788 ; PC := 788
	783	[5043]	GETUPVAL 	R21 U11 ; R21 := U11
	784	[5043]	MOVE     	R22 R2 ; R22 := R2
	785	[5043]	CALL     	R21 2 1 ; R21(R22)
	786	[5044]	RETURN   	R0 1 ; return 
	787	[5044]	JMP      	872 ; PC := 872
	788	[5045]	GETGLOBAL	R21 K4 ; R21 := _T
	789	[5045]	GETTABLE 	R21 R21 K127 ; R21 := R21["CachedInvasionInfo"]
	790	[5045]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	791	[5045]	TEST     	R21 0 ; if not R21 then PC := 798
	792	[5045]	JMP      	798 ; PC := 798
	793	[5046]	GETUPVAL 	R21 U12 ; R21 := U12
	794	[5046]	MOVE     	R22 R2 ; R22 := R2
	795	[5046]	CALL     	R21 2 1 ; R21(R22)
	796	[5047]	RETURN   	R0 1 ; return 
	797	[5047]	JMP      	872 ; PC := 872
	798	[5048]	GETGLOBAL	R21 K4 ; R21 := _T
	799	[5048]	GETTABLE 	R21 R21 K135 ; R21 := R21["CachedSkullNodes"]
	800	[5048]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	801	[5048]	EQ       	1 R21 K6 ; if R21 == nil then PC := 808
	802	[5048]	JMP      	808 ; PC := 808
	803	[5049]	GETUPVAL 	R21 U15 ; R21 := U15
	804	[5049]	MOVE     	R22 R2 ; R22 := R2
	805	[5049]	CALL     	R21 2 1 ; R21(R22)
	806	[5050]	RETURN   	R0 1 ; return 
	807	[5050]	JMP      	872 ; PC := 872
	808	[5051]	GETGLOBAL	R21 K0 ; R21 := mHover
	809	[5051]	GETTABLE 	R21 R21 K1 ; R21 := R21["Node"]
	810	[5051]	GETTABLE 	R21 R21 K7 ; R21 := R21["radialSector"]
	811	[5051]	GETTABLE 	R21 R21 K100 ; R21 := R21["nodeType"]
	812	[5051]	EQ       	0 R21 K136 ; if R21 ~= 2.000000 then PC := 819
	813	[5051]	JMP      	819 ; PC := 819
	814	[5052]	MOVE     	R21 R2 ; R21 := R2
	815	[5052]	GETUPVAL 	R22 U0 ; R22 := U0
	816	[5052]	GETTABLE 	R22 R22 K137 ; R22 := R22["PVP_TAG"]
	817	[5052]	CONCAT   	R2 R21 R22 ; R2 := R21 .. R22
	818	[5052]	JMP      	872 ; PC := 872
	819	[5053]	GETGLOBAL	R21 K0 ; R21 := mHover
	820	[5053]	GETTABLE 	R21 R21 K1 ; R21 := R21["Node"]
	821	[5053]	GETTABLE 	R21 R21 K7 ; R21 := R21["radialSector"]
	822	[5053]	GETTABLE 	R21 R21 K100 ; R21 := R21["nodeType"]
	823	[5053]	EQ       	0 R21 K126 ; if R21 ~= 3.000000 then PC := 846
	824	[5053]	JMP      	846 ; PC := 846
	825	[5054]	GETGLOBAL	R21 K56 ; R21 := 0xe7f2b02f
	826	[5054]	SELF     	R21 R21 K138 ; R22 := R21; R21 := R21[0xca33534d]
	827	[5054]	CALL     	R21 2 2 ; R21 := R21(R22)
	828	[5054]	TEST     	R21 0 ; if not R21 then PC := 839
	829	[5054]	JMP      	839 ; PC := 839
	830	[5055]	GETUPVAL 	R21 U7 ; R21 := U7
	831	[5055]	MOVE     	R22 R2 ; R22 := R2
	832	[5055]	GETUPVAL 	R23 U0 ; R23 := U0
	833	[5055]	GETTABLE 	R23 R23 K139 ; R23 := R23["HUB_TAG"]
	834	[5055]	CONCAT   	R22 R22 R23 ; R22 := R22 .. R23
	835	[5055]	LOADNIL  	R23 R24 ; R23 := R24 := nil
	836	[5055]	LOADK    	R25 := 0.500000
	837	[5055]	CALL     	R21 5 1 ; R21(R22,R23,R24,R25)
	838	[5056]	RETURN   	R0 1 ; return 
	839	[5059]	GETUPVAL 	R21 U16 ; R21 := U16
	840	[5059]	GETGLOBAL	R22 K0 ; R22 := mHover
	841	[5059]	GETTABLE 	R22 R22 K1 ; R22 := R22["Node"]
	842	[5059]	GETTABLE 	R22 R22 K7 ; R22 := R22["radialSector"]
	843	[5059]	CALL     	R21 2 1 ; R21(R22)
	844	[5060]	RETURN   	R0 1 ; return 
	845	[5060]	JMP      	872 ; PC := 872
	846	[5061]	GETUPVAL 	R21 U17 ; R21 := U17
	847	[5061]	CALL     	R21 1 2 ; R21 := R21()
	848	[5061]	LT       	0 K72 R21 ; if 0.000000 >= R21 then PC := 872
	849	[5061]	JMP      	872 ; PC := 872
	850	[5062]	GETGLOBAL	R21 K15 ; R21 := 0x64fb1586
	851	[5062]	GETUPVAL 	R22 U0 ; R22 := U0
	852	[5062]	GETTABLE 	R22 R22 K140 ; R22 := R22["ENTRATI_LANDSCAPE_NODE_TAG"]
	853	[5062]	CALL     	R21 2 2 ; R21 := R21(R22)
	854	[5062]	EQ       	0 R2 R21 ; if R2 ~= R21 then PC := 864
	855	[5062]	JMP      	864 ; PC := 864
	856	[5062]	GETUPVAL 	R21 U0 ; R21 := U0
	857	[5062]	GETTABLE 	R21 R21 K141 ; R21 := R21[0x52fb05b3]
	858	[5062]	GETUPVAL 	R22 U1 ; R22 := U1
	859	[5062]	GETTABLE 	R22 R22 K142 ; R22 := R22["deimosIntroQuestInfo"]
	860	[5062]	GETTABLE 	R22 R22 K55 ; R22 := R22["quest"]
	861	[5062]	CALL     	R21 2 2 ; R21 := R21(R22)
	862	[5062]	TEST     	R21 0 ; if not R21 then PC := 872
	863	[5062]	JMP      	872 ; PC := 872
	864	[5063]	MOVE     	R21 R2 ; R21 := R2
	865	[5063]	GETUPVAL 	R22 U8 ; R22 := U8
	866	[5063]	GETTABLE 	R22 R22 K143 ; R22 := R22["Settings"]
	867	[5063]	GETUPVAL 	R23 U8 ; R23 := U8
	868	[5063]	GETTABLE 	R23 R23 K144 ; R23 := R23["CurrentIndex"]
	869	[5063]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	870	[5063]	GETTABLE 	R22 R22 K145 ; R22 := R22["MissionTag"]
	871	[5063]	CONCAT   	R2 R21 R22 ; R2 := R21 .. R22
	872	[5069]	GETGLOBAL	R21 K0 ; R21 := mHover
	873	[5069]	GETTABLE 	R21 R21 K1 ; R21 := R21["Node"]
	874	[5069]	GETTABLE 	R21 R21 K7 ; R21 := R21["radialSector"]
	875	[5069]	GETTABLE 	R21 R21 K17 ; R21 := R21["mission"]
	876	[5069]	GETTABLE 	R21 R21 K110 ; R21 := R21["missionType"]
	877	[5069]	EQ       	0 R21 K111 ; if R21 ~= 22.000000 then PC := 898
	878	[5069]	JMP      	898 ; PC := 898
	879	[5069]	GETGLOBAL	R21 K0 ; R21 := mHover
	880	[5069]	GETTABLE 	R21 R21 K1 ; R21 := R21["Node"]
	881	[5069]	GETTABLE 	R21 R21 K7 ; R21 := R21["radialSector"]
	882	[5069]	GETTABLE 	R21 R21 K17 ; R21 := R21["mission"]
	883	[5069]	GETTABLE 	R21 R21 K112 ; R21 := R21["faction"]
	884	[5069]	EQ       	0 R21 K33 ; if R21 ~= 1.000000 then PC := 898
	885	[5069]	JMP      	898 ; PC := 898
	886	[5069]	GETGLOBAL	R21 K0 ; R21 := mHover
	887	[5069]	GETTABLE 	R21 R21 K1 ; R21 := R21["Node"]
	888	[5069]	GETTABLE 	R21 R21 K9 ; R21 := R21["name"]
	889	[5069]	TEST     	R21 0 ; if not R21 then PC := 898
	890	[5069]	JMP      	898 ; PC := 898
	891	[5070]	GETUPVAL 	R21 U13 ; R21 := U13
	892	[5070]	MOVE     	R22 R2 ; R22 := R2
	893	[5070]	MOVE     	R23 R2 ; R23 := R2
	894	[5070]	MOVE     	R24 R3 ; R24 := R3
	895	[5070]	MOVE     	R25 R5 ; R25 := R5
	896	[5070]	CALL     	R21 5 1 ; R21(R22,R23,R24,R25)
	897	[5071]	RETURN   	R0 1 ; return 
	898	[5074]	GETGLOBAL	R21 K0 ; R21 := mHover
	899	[5074]	GETTABLE 	R21 R21 K1 ; R21 := R21["Node"]
	900	[5074]	GETTABLE 	R21 R21 K7 ; R21 := R21["radialSector"]
	901	[5074]	GETTABLE 	R21 R21 K17 ; R21 := R21["mission"]
	902	[5074]	GETTABLE 	R21 R21 K146 ; R21 := R21["soloMode"]
	903	[5074]	TEST     	R21 1 ; if R21 then PC := 910
	904	[5074]	JMP      	910 ; PC := 910
	905	[5074]	GETGLOBAL	R21 K0 ; R21 := mHover
	906	[5074]	GETTABLE 	R21 R21 K1 ; R21 := R21["Node"]
	907	[5074]	GETTABLE 	R21 R21 K147 ; R21 := R21["questSoloMode"]
	908	[5074]	TEST     	R21 0 ; if not R21 then PC := 996
	909	[5074]	JMP      	996 ; PC := 996
	910	[5075]	GETGLOBAL	R21 K56 ; R21 := 0xe7f2b02f
	911	[5075]	SELF     	R21 R21 K148 ; R22 := R21; R21 := R21[0xebe2f513]
	912	[5075]	CALL     	R21 2 2 ; R21 := R21(R22)
	913	[5075]	LT       	0 K33 R21 ; if 1.000000 >= R21 then PC := 972
	914	[5075]	JMP      	972 ; PC := 972
	915	[5076]	GETUPVAL 	R21 U18 ; R21 := U18
	916	[5076]	GETTABLE 	R21 R21 K149 ; R21 := R21[0x94098a1d]
	917	[5076]	GETGLOBAL	R22 K51 ; R22 := 0x0469f296
	918	[5076]	MOVE     	R23 R2 ; R23 := R2
	919	[5076]	CALL     	R22 2 2 ; R22 := R22(R23)
	920	[5076]	OP_LOADBOOL	R23 1 0 ; R23 := true
	921	[5076]	LOADNIL  	R24 R24 ; R24 := nil
	922	[5076]	OP_LOADBOOL	R25 1 0 ; R25 := true
	923	[5076]	CALL     	R21 5 2 ; R21 := R21(R22,R23,R24,R25)
	924	[5077]	EQ       	1 R21 K6 ; if R21 == nil then PC := 931
	925	[5077]	JMP      	931 ; PC := 931
	926	[5078]	GETUPVAL 	R22 U18 ; R22 := U18
	927	[5078]	GETTABLE 	R22 R22 K150 ; R22 := R22[0xc0ee6a07]
	928	[5078]	MOVE     	R23 R21 ; R23 := R21
	929	[5078]	CALL     	R22 2 1 ; R22(R23)
	930	[5078]	JMP      	995 ; PC := 995
	931	[5079]	GETGLOBAL	R22 K10 ; R22 := 0x7b998233
	932	[5079]	GETUPVAL 	R23 U19 ; R23 := U19
	933	[5079]	GETTABLE 	R23 R23 K151 ; R23 := R23["SoloMission"]
	934	[5079]	CALL     	R22 2 2 ; R22 := R22(R23)
	935	[5079]	TEST     	R22 0 ; if not R22 then PC := 995
	936	[5079]	JMP      	995 ; PC := 995
	937	[5080]	GETGLOBAL	R22 K20 ; R22 := mRailJack
	938	[5080]	GETTABLE 	R22 R22 K21 ; R22 := R22["Active"]
	939	[5080]	TEST     	R22 0 ; if not R22 then PC := 951
	940	[5080]	JMP      	951 ; PC := 951
	941	[5080]	GETGLOBAL	R22 K79 ; R22 := 0x89326c93
	942	[5080]	SELF     	R22 R22 K152 ; R23 := R22; R22 := R22[0x18d05d30]
	943	[5080]	CALL     	R22 2 2 ; R22 := R22(R23)
	944	[5080]	TEST     	R22 1 ; if R22 then PC := 951
	945	[5080]	JMP      	951 ; PC := 951
	946	[5081]	GETUPVAL 	R22 U2 ; R22 := U2
	947	[5081]	GETTABLE 	R22 R22 K60 ; R22 := R22[0xe0cba3ca]
	948	[5081]	LOADK    	R23 K153 ; R23 := "/Lotus/Language/Railjack/MissionRequiresOwnRailjack"
	949	[5081]	CALL     	R22 2 1 ; R22(R23)
	950	[5082]	RETURN   	R0 1 ; return 
	951	[5085]	GETGLOBAL	R22 K154 ; R22 := mCachedSoloMission
	952	[5085]	GETGLOBAL	R23 K0 ; R23 := mHover
	953	[5085]	GETTABLE 	R23 R23 K1 ; R23 := R23["Node"]
	954	[5085]	SETTABLE 	R22 K1 R23 ; R22["Node"] := R23
	955	[5086]	GETGLOBAL	R22 K154 ; R22 := mCachedSoloMission
	956	[5086]	SETTABLE 	R22 K155 R2 ; R22["SectorName"] := R2
	957	[5087]	TEST     	R3 0 ; if not R3 then PC := 964
	958	[5087]	JMP      	964 ; PC := 964
	959	[5088]	GETGLOBAL	R22 K154 ; R22 := mCachedSoloMission
	960	[5088]	GETGLOBAL	R23 K15 ; R23 := 0x64fb1586
	961	[5088]	MOVE     	R24 R3 ; R24 := R3
	962	[5088]	CALL     	R23 2 2 ; R23 := R23(R24)
	963	[5088]	SETTABLE 	R22 K156 R23 ; R22["SectorQuest"] := R23
	964	[5090]	GETUPVAL 	R22 U19 ; R22 := U19
	965	[5090]	GETUPVAL 	R23 U2 ; R23 := U2
	966	[5090]	GETTABLE 	R23 R23 K78 ; R23 := R23[0xdedfded7]
	967	[5090]	LOADK    	R24 K157 ; R24 := "/Lotus/Language/Menu/SoloModeRequired"
	968	[5090]	LOADK    	R25 K158 ; R25 := "ConfirmSoloMission"
	969	[5090]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	970	[5090]	SETTABLE 	R22 K151 R23 ; R22["SoloMission"] := R23
	971	[5091]	JMP      	995 ; PC := 995
	972	[5092]	GETGLOBAL	R22 K0 ; R22 := mHover
	973	[5092]	GETTABLE 	R22 R22 K1 ; R22 := R22["Node"]
	974	[5092]	TEST     	R22 0 ; if not R22 then PC := 995
	975	[5092]	JMP      	995 ; PC := 995
	976	[5092]	GETGLOBAL	R22 K0 ; R22 := mHover
	977	[5092]	GETTABLE 	R22 R22 K1 ; R22 := R22["Node"]
	978	[5092]	GETTABLE 	R22 R22 K7 ; R22 := R22["radialSector"]
	979	[5092]	TEST     	R22 0 ; if not R22 then PC := 995
	980	[5092]	JMP      	995 ; PC := 995
	981	[5093]	GETUPVAL 	R22 U7 ; R22 := U7
	982	[5093]	MOVE     	R23 R2 ; R23 := R2
	983	[5093]	MOVE     	R24 R3 ; R24 := R3
	984	[5093]	MOVE     	R25 R4 ; R25 := R4
	985	[5093]	MOVE     	R26 R5 ; R26 := R5
	986	[5093]	CALL     	R22 5 2 ; R22 := R22(R23,R24,R25,R26)
	987	[5093]	TEST     	R22 0 ; if not R22 then PC := 995
	988	[5093]	JMP      	995 ; PC := 995
	989	[5094]	GETGLOBAL	R22 K4 ; R22 := _T
	990	[5094]	GETTABLE 	R22 R22 K11 ; R22 := R22["SquadOverlay"]
	991	[5094]	SELF     	R22 R22 K12 ; R23 := R22; R22 := R22[0xe4162eed]
	992	[5094]	LOADK    	R24 K159 ; R24 := "NotifyForceLoadSoloMission"
	993	[5094]	LOADK    	R25 K14 ; R25 := ""
	994	[5094]	CALL     	R22 4 1 ; R22(R23,R24,R25)
	995	[5097]	RETURN   	R0 1 ; return 
	996	[5100]	GETGLOBAL	R22 K20 ; R22 := mRailJack
	997	[5100]	GETTABLE 	R22 R22 K21 ; R22 := R22["Active"]
	998	[5100]	TEST     	R22 0 ; if not R22 then PC := 1004
	999	[5100]	JMP      	1004 ; PC := 1004
	1000	[5101]	GETGLOBAL	R22 K20 ; R22 := mRailJack
	1001	[5101]	GETGLOBAL	R23 K0 ; R23 := mHover
	1002	[5101]	GETTABLE 	R23 R23 K1 ; R23 := R23["Node"]
	1003	[5101]	SETTABLE 	R22 K160 R23 ; R22["SelectionNode"] := R23
	1004	[5104]	GETUPVAL 	R22 U7 ; R22 := U7
	1005	[5104]	MOVE     	R23 R2 ; R23 := R2
	1006	[5104]	MOVE     	R24 R3 ; R24 := R3
	1007	[5104]	MOVE     	R25 R4 ; R25 := R4
	1008	[5104]	MOVE     	R26 R5 ; R26 := R5
	1009	[5104]	CALL     	R22 5 1 ; R22(R23,R24,R25,R26)
	1010	[5105]	RETURN   	R0 1 ; return 

function #112 <?:5107,5114> (10 instructions, 40 bytes at 00000211291B9820)
0 params, 2 slots, 2 upvalues, 0 locals, 6 constants, 0 functions
	1	[5108]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5108]	CALL     	R0 1 1 ; R0()
	3	[5111]	GETUPVAL 	R0 U1 ; R0 := U1
	4	[5111]	SETTABLE 	R0 K0 K1 ; R0["isLMBDown"] := false
	5	[5112]	GETUPVAL 	R0 U1 ; R0 := U1
	6	[5112]	SETTABLE 	R0 K2 K3 ; R0["mHandleJunctionClick"] := nil
	7	[5113]	GETGLOBAL	R0 K4 ; R0 := mDrag
	8	[5113]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0xcc5f3150]
	9	[5113]	CALL     	R0 2 1 ; R0(R1)
	10	[5114]	RETURN   	R0 1 ; return 

function #113 <?:5116,5118> (5 instructions, 20 bytes at 00000211291B99A0)
0 params, 2 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[5117]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[5117]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[5117]	CALL     	R1 1 2 ; R1 := R1()
	4	[5117]	SETTABLE 	R0 K1 R1 ; R0[0x70b8836c] := R1
	5	[5118]	RETURN   	R0 1 ; return 

function #114 <?:5120,5122> (8 instructions, 32 bytes at 00000211291B9AC0)
0 params, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[5121]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5121]	GETTABLE 	R0 R0 K0 ; R0 := R0[0x4c232afc]
	3	[5121]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	4	[5121]	LOADK    	R2 := 1.000000
	5	[5121]	LOADK    	R3 K2 ; R3 := 0.200000
	6	[5121]	LOADK    	R4 := 0.000000
	7	[5121]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	8	[5122]	RETURN   	R0 1 ; return 

function #115 <?:5124,5187> (231 instructions, 924 bytes at 00000211291B9BF0)
0 params, 17 slots, 11 upvalues, 0 locals, 66 constants, 0 functions
	1	[5125]	GETGLOBAL	R0 K0 ; R0 := 0x0032441c
	2	[5125]	GETTABLE 	R0 R0 K1 ; R0 := R0["StalkerMode"]
	3	[5125]	TEST     	R0 1 ; if R0 then PC := 7
	4	[5125]	JMP      	7 ; PC := 7
	5	[5125]	GETGLOBAL	R0 K2 ; R0 := _T
	6	[5125]	GETTABLE 	R0 R0 K3 ; R0 := R0["WareframeChallenge"]
	7	[5126]	GETGLOBAL	R1 K2 ; R1 := _T
	8	[5126]	GETTABLE 	R1 R1 K4 ; R1 := R1["SkippedTeleportFadeIn"]
	9	[5126]	TEST     	R1 0 ; if not R1 then PC := 21
	10	[5126]	JMP      	21 ; PC := 21
	11	[5127]	GETGLOBAL	R1 K2 ; R1 := _T
	12	[5127]	SETTABLE 	R1 K4 K5 ; R1["SkippedTeleportFadeIn"] := nil
	13	[5128]	GETGLOBAL	R1 K6 ; R1 := 0x2d0fad09
	14	[5128]	LOADK    	R2 K7 ; R2 := "Lotus.Scripts.PostProcess.BasePostProcessFade"
	15	[5128]	CALL     	R1 2 2 ; R1 := R1(R2)
	16	[5129]	GETTABLE 	R2 R1 K8 ; R2 := R1[0xd06ddfa8]
	17	[5129]	LOADK    	R3 := 1.000000
	18	[5129]	LOADK    	R4 := 0.000000
	19	[5129]	LOADK    	R5 := 0.000000
	20	[5129]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	21	[5132]	GETGLOBAL	R2 K9 ; R2 := 0x7b998233
	22	[5132]	GETGLOBAL	R3 K2 ; R3 := _T
	23	[5132]	GETTABLE 	R3 R3 K10 ; R3 := R3["SquadOverlay"]
	24	[5132]	CALL     	R2 2 2 ; R2 := R2(R3)
	25	[5132]	TEST     	R2 1 ; if R2 then PC := 80
	26	[5132]	JMP      	80 ; PC := 80
	27	[5132]	GETGLOBAL	R2 K9 ; R2 := 0x7b998233
	28	[5132]	GETGLOBAL	R3 K11 ; R3 := 0xe7f2b02f
	29	[5132]	SELF     	R3 R3 K12 ; R4 := R3; R3 := R3[0x565be9ee]
	30	[5132]	CALL     	R3 2 0 ; R3,... := R3(R4)
	31	[5132]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	32	[5132]	TEST     	R2 0 ; if not R2 then PC := 80
	33	[5132]	JMP      	80 ; PC := 80
	34	[5132]	GETGLOBAL	R2 K9 ; R2 := 0x7b998233
	35	[5132]	GETGLOBAL	R3 K13 ; R3 := 0x83f4e77c
	36	[5132]	CALL     	R2 2 2 ; R2 := R2(R3)
	37	[5132]	TEST     	R2 1 ; if R2 then PC := 80
	38	[5132]	JMP      	80 ; PC := 80
	39	[5132]	GETGLOBAL	R2 K13 ; R2 := 0x83f4e77c
	40	[5132]	SELF     	R2 R2 K14 ; R3 := R2; R2 := R2[0x4f9a9020]
	41	[5132]	CALL     	R2 2 2 ; R2 := R2(R3)
	42	[5132]	TEST     	R2 1 ; if R2 then PC := 80
	43	[5132]	JMP      	80 ; PC := 80
	44	[5132]	TEST     	R0 1 ; if R0 then PC := 80
	45	[5132]	JMP      	80 ; PC := 80
	46	[5132]	GETGLOBAL	R2 K11 ; R2 := 0xe7f2b02f
	47	[5132]	SELF     	R2 R2 K15 ; R3 := R2; R2 := R2[0x53c3399f]
	48	[5132]	CALL     	R2 2 2 ; R2 := R2(R3)
	49	[5132]	EQ       	0 R2 K16 ; if R2 ~= 0.000000 then PC := 80
	50	[5132]	JMP      	80 ; PC := 80
	51	[5132]	GETGLOBAL	R2 K17 ; R2 := mNewWarMode
	52	[5132]	TEST     	R2 1 ; if R2 then PC := 80
	53	[5132]	JMP      	80 ; PC := 80
	54	[5133]	GETUPVAL 	R2 U0 ; R2 := U0
	55	[5133]	GETTABLE 	R2 R2 K18 ; R2 := R2[0x8e7c3b5e]
	56	[5133]	GETGLOBAL	R3 K19 ; R3 := 0x25d99d89
	57	[5133]	CALL     	R2 2 5 ; R2,R3,R4,R5 := R2(R3)
	58	[5134]	GETGLOBAL	R6 K9 ; R6 := 0x7b998233
	59	[5134]	MOVE     	R7 R2 ; R7 := R2
	60	[5134]	CALL     	R6 2 2 ; R6 := R6(R7)
	61	[5134]	TEST     	R6 1 ; if R6 then PC := 67
	62	[5134]	JMP      	67 ; PC := 67
	63	[5134]	GETUPVAL 	R6 U1 ; R6 := U1
	64	[5134]	GETTABLE 	R6 R6 K20 ; R6 := R6["zarimanIntroQuest"]
	65	[5134]	EQ       	1 R2 R6 ; if R2 == R6 then PC := 68
	66	[5134]	JMP      	68 ; PC := 68
	67	[5134]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 68
	68	[5134]	OP_LOADBOOL	R6 1 0 ; R6 := true
	69	[5135]	TEST     	R6 1 ; if R6 then PC := 80
	70	[5135]	JMP      	80 ; PC := 80
	71	[5136]	GETGLOBAL	R7 K21 ; R7 := 0x3d106989
	72	[5136]	LOADK    	R8 K22 ; R8 := "Hosting lobby from MapRedux.lua (InitializeMore)"
	73	[5136]	CALL     	R7 2 1 ; R7(R8)
	74	[5137]	GETGLOBAL	R7 K2 ; R7 := _T
	75	[5137]	GETTABLE 	R7 R7 K10 ; R7 := R7["SquadOverlay"]
	76	[5137]	SELF     	R7 R7 K23 ; R8 := R7; R7 := R7[0xe4162eed]
	77	[5137]	LOADK    	R9 K24 ; R9 := "HostLobby"
	78	[5137]	LOADK    	R10 K25 ; R10 := ""
	79	[5137]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	80	[5141]	GETGLOBAL	R7 K9 ; R7 := 0x7b998233
	81	[5141]	GETGLOBAL	R8 K26 ; R8 := 0xc1625025
	82	[5141]	CALL     	R7 2 2 ; R7 := R7(R8)
	83	[5141]	TEST     	R7 1 ; if R7 then PC := 116
	84	[5141]	JMP      	116 ; PC := 116
	85	[5141]	TEST     	R0 1 ; if R0 then PC := 116
	86	[5141]	JMP      	116 ; PC := 116
	87	[5142]	GETUPVAL 	R7 U2 ; R7 := U2
	88	[5142]	GETGLOBAL	R8 K28 ; R8 := 0x9ba7909f
	89	[5142]	SELF     	R8 R8 K29 ; R9 := R8; R8 := R8[0xbcfb64ab]
	90	[5142]	GETGLOBAL	R10 K26 ; R10 := 0xc1625025
	91	[5142]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	92	[5142]	SETTABLE 	R7 K27 R8 ; R7["Movie"] := R8
	93	[5143]	GETGLOBAL	R7 K9 ; R7 := 0x7b998233
	94	[5143]	GETUPVAL 	R8 U2 ; R8 := U2
	95	[5143]	GETTABLE 	R8 R8 K27 ; R8 := R8["Movie"]
	96	[5143]	CALL     	R7 2 2 ; R7 := R7(R8)
	97	[5143]	TEST     	R7 0 ; if not R7 then PC := 105
	98	[5143]	JMP      	105 ; PC := 105
	99	[5144]	GETUPVAL 	R7 U2 ; R7 := U2
	100	[5144]	GETGLOBAL	R8 K28 ; R8 := 0x9ba7909f
	101	[5144]	SELF     	R8 R8 K30 ; R9 := R8; R8 := R8[0x6dd7aa66]
	102	[5144]	GETGLOBAL	R10 K26 ; R10 := 0xc1625025
	103	[5144]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	104	[5144]	SETTABLE 	R7 K27 R8 ; R7["Movie"] := R8
	105	[5146]	GETGLOBAL	R7 K2 ; R7 := _T
	106	[5146]	GETTABLE 	R7 R7 K31 ; R7 := R7["MAP_HideExtraUI"]
	107	[5146]	TEST     	R7 0 ; if not R7 then PC := 116
	108	[5146]	JMP      	116 ; PC := 116
	109	[5147]	GETUPVAL 	R7 U2 ; R7 := U2
	110	[5147]	GETTABLE 	R7 R7 K27 ; R7 := R7["Movie"]
	111	[5147]	SELF     	R7 R7 K32 ; R8 := R7; R7 := R7[0xaade900e]
	112	[5147]	LOADK    	R9 K33 ; R9 := "_root"
	113	[5147]	LOADK    	R10 := 11.000000
	114	[5147]	OP_LOADBOOL	R11 0 0 ; R11 := false
	115	[5147]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	116	[5151]	GETGLOBAL	R7 K17 ; R7 := mNewWarMode
	117	[5151]	TEST     	R7 1 ; if R7 then PC := 172
	118	[5151]	JMP      	172 ; PC := 172
	119	[5152]	GETUPVAL 	R7 U0 ; R7 := U0
	120	[5152]	GETTABLE 	R7 R7 K34 ; R7 := R7[0x89e663e9]
	121	[5152]	CALL     	R7 1 2 ; R7 := R7()
	122	[5152]	TEST     	R7 1 ; if R7 then PC := 137
	123	[5152]	JMP      	137 ; PC := 137
	124	[5152]	GETGLOBAL	R7 K9 ; R7 := 0x7b998233
	125	[5152]	GETGLOBAL	R8 K19 ; R8 := 0x25d99d89
	126	[5152]	CALL     	R7 2 2 ; R7 := R7(R8)
	127	[5152]	TEST     	R7 1 ; if R7 then PC := 135
	128	[5152]	JMP      	135 ; PC := 135
	129	[5152]	GETGLOBAL	R7 K19 ; R7 := 0x25d99d89
	130	[5152]	SELF     	R7 R7 K35 ; R8 := R7; R7 := R7[0x600a0ad6]
	131	[5152]	CALL     	R7 2 2 ; R7 := R7(R8)
	132	[5152]	SELF     	R7 R7 K36 ; R8 := R7; R7 := R7[0xd8140b94]
	133	[5152]	CALL     	R7 2 2 ; R7 := R7(R8)
	134	[5152]	JMP      	137 ; PC := 137
	135	[5152]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 136
	136	[5152]	OP_LOADBOOL	R7 1 0 ; R7 := true
	137	[5153]	TEST     	R7 0 ; if not R7 then PC := 157
	138	[5153]	JMP      	157 ; PC := 157
	139	[5154]	GETGLOBAL	R8 K37 ; R8 := 0x76ea806b
	140	[5154]	SELF     	R8 R8 K38 ; R9 := R8; R8 := R8[0x3f3ae64c]
	141	[5154]	LOADK    	R10 := 0.000000
	142	[5154]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	143	[5155]	SELF     	R9 R8 K39 ; R10 := R8; R9 := R8[0x40e9c32b]
	144	[5155]	CALL     	R9 2 2 ; R9 := R9(R10)
	145	[5156]	SELF     	R10 R9 K40 ; R11 := R9; R10 := R9[0xae210336]
	146	[5156]	CALL     	R10 2 2 ; R10 := R10(R11)
	147	[5156]	TESTSET  	R7 R10 1 ; if R10 then PC := 151 else R7 := R10 
	148	[5156]	JMP      	151 ; PC := 151
	149	[5156]	GETGLOBAL	R10 K41 ; R10 := mRailJack
	150	[5156]	GETTABLE 	R7 R10 K42 ; R7 := R10["Active"]
	151	[5158]	GETUPVAL 	R10 U3 ; R10 := U3
	152	[5158]	GETGLOBAL	R11 K44 ; R11 := 0xae91e43b
	153	[5158]	SELF     	R11 R11 K45 ; R12 := R11; R11 := R11[0x1fd6abd0]
	154	[5158]	GETGLOBAL	R13 K46 ; R13 := 0xa96c79cf
	155	[5158]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	156	[5158]	SETTABLE 	R10 K43 R11 ; R10["EpisodeStatus"] := R11
	157	[5161]	GETGLOBAL	R10 K2 ; R10 := _T
	158	[5161]	NOT      	R11 R7 ; R11 := not R7
	159	[5161]	SETTABLE 	R10 K47 R11 ; R10["ResourceDroneVisible"] := R11
	160	[5162]	GETUPVAL 	R10 U3 ; R10 := U3
	161	[5162]	GETGLOBAL	R11 K44 ; R11 := 0xae91e43b
	162	[5162]	SELF     	R11 R11 K45 ; R12 := R11; R11 := R11[0x1fd6abd0]
	163	[5162]	GETGLOBAL	R13 K49 ; R13 := 0x2b7ad504
	164	[5162]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	165	[5162]	SETTABLE 	R10 K48 R11 ; R10["ResourceDrone"] := R11
	166	[5163]	GETUPVAL 	R10 U3 ; R10 := U3
	167	[5163]	GETTABLE 	R10 R10 K48 ; R10 := R10["ResourceDrone"]
	168	[5163]	SELF     	R10 R10 K23 ; R11 := R10; R10 := R10[0xe4162eed]
	169	[5163]	LOADK    	R12 K50 ; R12 := "OnRegionZoomOut"
	170	[5163]	LOADK    	R13 K25 ; R13 := ""
	171	[5163]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	172	[5166]	GETUPVAL 	R10 U0 ; R10 := U0
	173	[5166]	GETTABLE 	R10 R10 K52 ; R10 := R10[0x5e35d4d6]
	174	[5166]	CALL     	R10 1 2 ; R10 := R10()
	175	[5166]	SETGLOBALHASH	R10 K51 ; mRadialSolarMap := R10
	176	[5168]	GETGLOBAL	R10 K51 ; R10 := mRadialSolarMap
	177	[5168]	SELF     	R10 R10 K54 ; R11 := R10; R10 := R10[0x20eadc16]
	178	[5168]	CALL     	R10 2 2 ; R10 := R10(R11)
	179	[5168]	SETGLOBALHASH	R10 K53 ; mSuperRegions := R10
	180	[5169]	GETGLOBAL	R10 K51 ; R10 := mRadialSolarMap
	181	[5169]	SELF     	R10 R10 K56 ; R11 := R10; R10 := R10[0xc1dee03f]
	182	[5169]	CALL     	R10 2 2 ; R10 := R10(R11)
	183	[5169]	SETGLOBALHASH	R10 K55 ; mRegions := R10
	184	[5170]	GETGLOBAL	R10 K51 ; R10 := mRadialSolarMap
	185	[5170]	SELF     	R10 R10 K58 ; R11 := R10; R10 := R10[0xd13b47be]
	186	[5170]	CALL     	R10 2 2 ; R10 := R10(R11)
	187	[5170]	SETGLOBALHASH	R10 K57 ; mMapNodes := R10
	188	[5172]	GETGLOBAL	R10 K28 ; R10 := 0x9ba7909f
	189	[5172]	SELF     	R10 R10 K59 ; R11 := R10; R10 := R10[0xb21930e8]
	190	[5172]	CALL     	R10 2 1 ; R10(R11)
	191	[5173]	GETUPVAL 	R10 U4 ; R10 := U4
	192	[5173]	CALL     	R10 1 1 ; R10()
	193	[5174]	GETUPVAL 	R10 U5 ; R10 := U5
	194	[5174]	CALL     	R10 1 1 ; R10()
	195	[5176]	GETUPVAL 	R10 U6 ; R10 := U6
	196	[5176]	CALL     	R10 1 1 ; R10()
	197	[5178]	GETUPVAL 	R10 U7 ; R10 := U7
	198	[5178]	CALL     	R10 1 1 ; R10()
	199	[5180]	GETUPVAL 	R10 U8 ; R10 := U8
	200	[5180]	CALL     	R10 1 1 ; R10()
	201	[5182]	GETGLOBAL	R10 K44 ; R10 := 0xae91e43b
	202	[5182]	SELF     	R10 R10 K32 ; R11 := R10; R10 := R10[0xaade900e]
	203	[5182]	LOADK    	R12 K60 ; R12 := "DifficultySelector"
	204	[5182]	LOADK    	R13 := 11.000000
	205	[5182]	GETGLOBAL	R14 K41 ; R14 := mRailJack
	206	[5182]	GETTABLE 	R14 R14 K42 ; R14 := R14["Active"]
	207	[5182]	TEST     	R14 1 ; if R14 then PC := 212
	208	[5182]	JMP      	212 ; PC := 212
	209	[5182]	GETUPVAL 	R14 U9 ; R14 := U9
	210	[5182]	GETTABLE 	R14 R14 K61 ; R14 := R14["EnableDifficultySelector"]
	211	[5182]	JMP      	214 ; PC := 214
	212	[5182]	OP_LOADBOOL	R14 0 1 ; R14 := false; PC := 213
	213	[5182]	OP_LOADBOOL	R14 1 0 ; R14 := true
	214	[5182]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	215	[5183]	GETGLOBAL	R10 K62 ; R10 := 0x25312c9b
	216	[5183]	GETGLOBAL	R11 K44 ; R11 := 0xae91e43b
	217	[5183]	LOADK    	R12 K60 ; R12 := "DifficultySelector"
	218	[5183]	LOADK    	R13 := 0.000000
	219	[5183]	NEWTABLE 	R14 1 0 ; R14 := {}
	220	[5183]	LOADK    	R15 := 10.000000
	221	[5183]	SETLIST  	R14 1 1 ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 1
	222	[5183]	NEWTABLE 	R15 1 0 ; R15 := {}
	223	[5183]	LOADK    	R16 := 100.000000
	224	[5183]	SETLIST  	R15 1 1 ; R15[(1-1)*FPF+i] := R(15+i), 1 <= i <= 1
	225	[5183]	LOADK    	R16 := 0.500000
	226	[5183]	CALL     	R10 7 1 ; R10(R11,R12,R13,R14,R15,R16)
	227	[5185]	GETUPVAL 	R10 U10 ; R10 := U10
	228	[5185]	CALL     	R10 1 1 ; R10()
	229	[5186]	GETGLOBAL	R10 K2 ; R10 := _T
	230	[5186]	SETTABLE 	R10 K64 K65 ; R10["RadialMapInitialized"] := true
	231	[5187]	RETURN   	R0 1 ; return 

function #116 <?:5189,5191> (3 instructions, 12 bytes at 00000211291BA870)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[5190]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5190]	CALL     	R0 1 1 ; R0()
	3	[5191]	RETURN   	R0 1 ; return 

function #117 <?:5193,5205> (20 instructions, 80 bytes at 00000211291BA940)
0 params, 3 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[5194]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[5194]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[5194]	GETTABLE 	R1 R1 K1 ; R1 := R1["cameraSpot"]
	4	[5194]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[5194]	TEST     	R0 0 ; if not R0 then PC := 8
	6	[5194]	JMP      	8 ; PC := 8
	7	[5195]	RETURN   	R0 1 ; return 
	8	[5198]	GETUPVAL 	R0 U0 ; R0 := U0
	9	[5198]	GETTABLE 	R0 R0 K1 ; R0 := R0["cameraSpot"]
	10	[5198]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x9307aa51]
	11	[5198]	GETUPVAL 	R2 U0 ; R2 := U0
	12	[5198]	GETTABLE 	R2 R2 K3 ; R2 := R2["pos"]
	13	[5198]	CALL     	R0 3 1 ; R0(R1,R2)
	14	[5199]	GETUPVAL 	R0 U0 ; R0 := U0
	15	[5199]	GETTABLE 	R0 R0 K1 ; R0 := R0["cameraSpot"]
	16	[5199]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0x70b8836c]
	17	[5199]	GETUPVAL 	R2 U0 ; R2 := U0
	18	[5199]	GETTABLE 	R2 R2 K5 ; R2 := R2["rotation"]
	19	[5199]	CALL     	R0 3 1 ; R0(R1,R2)
	20	[5205]	RETURN   	R0 1 ; return 

function #118 <?:5207,5215> (34 instructions, 136 bytes at 00000211291BAB00)
0 params, 9 slots, 1 upvalue, 0 locals, 8 constants, 0 functions
	1	[5208]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[5208]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	3	[5208]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xcd73323e]
	4	[5208]	CALL     	R1 2 0 ; R1,... := R1(R2)
	5	[5208]	CALL     	R0 0 2 ; R0 := R0(R1,...)
	6	[5208]	TEST     	R0 0 ; if not R0 then PC := 11
	7	[5208]	JMP      	11 ; PC := 11
	8	[5209]	GETGLOBAL	R0 K3 ; R0 := 0xa421af95
	9	[5209]	TAILCALL 	R0 1 0 ; R0,... := R0()
	10	[5209]	RETURN   	R0 0 ; return R0,... 
	11	[5211]	GETGLOBAL	R0 K1 ; R0 := 0xae91e43b
	12	[5211]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0x548b03be]
	13	[5211]	CALL     	R0 2 2 ; R0 := R0(R1)
	14	[5212]	GETGLOBAL	R1 K5 ; R1 := 0xc2892f65
	15	[5212]	MOVE     	R2 R0 ; R2 := R0
	16	[5212]	CALL     	R1 2 1 ; R1(R2)
	17	[5213]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	18	[5213]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xcd73323e]
	19	[5213]	CALL     	R1 2 2 ; R1 := R1(R2)
	20	[5213]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0xd1586535]
	21	[5213]	CALL     	R1 2 2 ; R1 := R1(R2)
	22	[5214]	GETUPVAL 	R2 U0 ; R2 := U0
	23	[5214]	GETTABLE 	R2 R2 K7 ; R2 := R2[0xd2fc8b86]
	24	[5214]	MOVE     	R3 R1 ; R3 := R1
	25	[5214]	MOVE     	R4 R0 ; R4 := R0
	26	[5214]	GETGLOBAL	R5 K3 ; R5 := 0xa421af95
	27	[5214]	LOADK    	R6 := 0.000000
	28	[5214]	LOADK    	R7 := 0.000000
	29	[5214]	LOADK    	R8 := 1.000000
	30	[5214]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	31	[5214]	LOADK    	R6 := 0.000000
	32	[5214]	TAILCALL 	R2 5 0 ; R2,... := R2(R3,R4,R5,R6)
	33	[5214]	RETURN   	R2 0 ; return R2,... 
	34	[5215]	RETURN   	R0 1 ; return 

function #119 <?:5217,5238> (50 instructions, 200 bytes at 00000211291BAD60)
1 param, 17 slots, 2 upvalues, 0 locals, 11 constants, 1 function
	1	[5218]	GETGLOBAL	R1 K0 ; R1 := mZoomedRegion
	2	[5218]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 5
	3	[5218]	JMP      	5 ; PC := 5
	4	[5219]	RETURN   	R0 1 ; return 
	5	[5222]	SETGLOBALHASH	R0 K0 ; mZoomedRegion := R0
	6	[5224]	GETGLOBAL	R1 K1 ; R1 := mRailJack
	7	[5224]	GETTABLE 	R1 R1 K2 ; R1 := R1["Active"]
	8	[5224]	TEST     	R1 0 ; if not R1 then PC := 50
	9	[5224]	JMP      	50 ; PC := 50
	10	[5225]	GETGLOBAL	R1 K3 ; R1 := 0x7b998233
	11	[5225]	GETGLOBAL	R2 K0 ; R2 := mZoomedRegion
	12	[5225]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[5225]	NOT      	R1 R1 ; R1 := not R1
	14	[5226]	GETUPVAL 	R2 U0 ; R2 := U0
	15	[5226]	GETTABLE 	R2 R2 K4 ; R2 := R2[0x06d055f9]
	16	[5226]	MOVE     	R3 R1 ; R3 := R1
	17	[5226]	LOADK    	R4 := 100.000000
	18	[5226]	LOADK    	R5 := 0.000000
	19	[5226]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	20	[5228]	GETGLOBAL	R3 K5 ; R3 := 0xcfc01047
	21	[5228]	GETUPVAL 	R4 U1 ; R4 := U1
	22	[5228]	CALL     	R3 2 4 ; R3,R4,R5 := R3(R4)
	23	[5228]	JMP      	47 ; PC := 47
	24	[5229]	GETGLOBAL	R8 K3 ; R8 := 0x7b998233
	25	[5229]	GETTABLE 	R9 R7 K6 ; R9 := R7["joinBtn"]
	26	[5229]	CALL     	R8 2 2 ; R8 := R8(R9)
	27	[5229]	TEST     	R8 1 ; if R8 then PC := 46
	28	[5229]	JMP      	46 ; PC := 46
	29	[5231]	GETGLOBAL	R8 K7 ; R8 := 0x25312c9b
	30	[5231]	GETGLOBAL	R9 K8 ; R9 := 0xae91e43b
	31	[5231]	GETTABLE 	R10 R7 K6 ; R10 := R7["joinBtn"]
	32	[5231]	GETTABLE 	R10 R10 K9 ; R10 := R10["mClipName"]
	33	[5231]	LOADK    	R11 := 0.000000
	34	[5231]	NEWTABLE 	R12 1 0 ; R12 := {}
	35	[5231]	LOADK    	R13 := 10.000000
	36	[5231]	SETLIST  	R12 1 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 1
	37	[5231]	NEWTABLE 	R13 1 0 ; R13 := {}
	38	[5231]	MOVE     	R14 R2 ; R14 := R2
	39	[5231]	SETLIST  	R13 1 1 ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 1
	40	[5231]	LOADK    	R14 := 0.500000
	41	[5231]	LOADK    	R15 := 0.000000
	42	[5234]	CLOSURE  	R16 0 ; R16 := closure(Function #1)
	43	[5234]	MOVE     	R0 R7 ; R0 := R7
	44	[5234]	MOVE     	R0 R1 ; R0 := R1
	45	[5231]	CALL     	R8 9 1 ; R8(R9,R10,R11,R12,R13,R14,R15,R16)
	46	[5235]	CLOSE    	R6 ; SAVE R6,...
	47	[5228]	TFORLOOP 	R3 2 ; R6,R7 := R3(R4,R5); if R6 ~= nil then begin PC = 24; R5 := R6 end
	48	[5235]	JMP      	24 ; PC := 24
	49	[5236]	CLOSE    	R1 ; SAVE R1,...
	50	[5238]	RETURN   	R0 1 ; return 

function #120 <?:5240,5396> (331 instructions, 1324 bytes at 00000211291BB1B0)
0 params, 39 slots, 6 upvalues, 0 locals, 50 constants, 3 functions
	1	[5241]	GETGLOBAL	R0 K0 ; R0 := 0xa421af95
	2	[5241]	CALL     	R0 1 2 ; R0 := R0()
	3	[5242]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	4	[5242]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0x548b03be]
	5	[5242]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[5243]	GETGLOBAL	R2 K3 ; R2 := 0xc2892f65
	7	[5243]	MOVE     	R3 R1 ; R3 := R1
	8	[5243]	CALL     	R2 2 1 ; R2(R3)
	9	[5245]	GETGLOBAL	R2 K4 ; R2 := mHover
	10	[5245]	GETTABLE 	R2 R2 K5 ; R2 := R2["Region"]
	11	[5246]	GETGLOBAL	R3 K4 ; R3 := mHover
	12	[5246]	SETTABLE 	R3 K5 K6 ; R3["Region"] := nil
	13	[5247]	LOADK    	R3 := 500.000000
	14	[5248]	LOADNIL  	R4 R5 ; R4 := R5 := nil
	15	[5250]	GETGLOBAL	R6 K0 ; R6 := 0xa421af95
	16	[5250]	CALL     	R6 1 2 ; R6 := R6()
	17	[5251]	GETGLOBAL	R7 K0 ; R7 := 0xa421af95
	18	[5251]	CALL     	R7 1 2 ; R7 := R7()
	19	[5252]	LOADK    	R8 := 0.000000
	20	[5253]	LOADK    	R9 := 0.000000
	21	[5254]	OP_LOADBOOL	R10 0 0 ; R10 := false
	22	[5255]	GETGLOBAL	R11 K0 ; R11 := 0xa421af95
	23	[5255]	CALL     	R11 1 2 ; R11 := R11()
	24	[5256]	GETGLOBAL	R12 K0 ; R12 := 0xa421af95
	25	[5256]	CALL     	R12 1 2 ; R12 := R12()
	26	[5257]	LOADNIL  	R13 R13 ; R13 := nil
	27	[5259]	OP_LOADBOOL	R14 0 0 ; R14 := false
	28	[5260]	LOADK    	R15 := 500.000000
	29	[5261]	GETGLOBAL	R16 K0 ; R16 := 0xa421af95
	30	[5261]	CALL     	R16 1 2 ; R16 := R16()
	31	[5263]	GETGLOBAL	R17 K7 ; R17 := 0x7b998233
	32	[5263]	GETGLOBAL	R18 K8 ; R18 := 0x1211d00f
	33	[5263]	CALL     	R17 2 2 ; R17 := R17(R18)
	34	[5263]	TEST     	R17 1 ; if R17 then PC := 169
	35	[5263]	JMP      	169 ; PC := 169
	36	[5263]	GETGLOBAL	R17 K9 ; R17 := _T
	37	[5263]	GETTABLE 	R17 R17 K10 ; R17 := R17["MouseInWorldStateWindow"]
	38	[5263]	TEST     	R17 1 ; if R17 then PC := 169
	39	[5263]	JMP      	169 ; PC := 169
	40	[5263]	GETGLOBAL	R17 K9 ; R17 := _T
	41	[5263]	GETTABLE 	R17 R17 K11 ; R17 := R17["MouseInChatArea"]
	42	[5263]	TEST     	R17 1 ; if R17 then PC := 169
	43	[5263]	JMP      	169 ; PC := 169
	44	[5264]	GETGLOBAL	R17 K8 ; R17 := 0x1211d00f
	45	[5264]	SELF     	R17 R17 K12 ; R18 := R17; R17 := R17[0xb4364067]
	46	[5264]	CALL     	R17 2 2 ; R17 := R17(R18)
	47	[5264]	SELF     	R17 R17 K13 ; R18 := R17; R17 := R17[0x4078bbf8]
	48	[5264]	MOVE     	R19 R11 ; R19 := R11
	49	[5264]	CALL     	R17 3 1 ; R17(R18,R19)
	50	[5265]	LOADK    	R17 := 1.000000
	51	[5265]	GETGLOBAL	R18 K14 ; R18 := mRegions
	52	[5265]	LEN      	R18 R18 ; R18 := # R18
	53	[5265]	LOADK    	R19 := 1.000000
	54	[5265]	FORPREP  	R17 168 ; R17 -= R19; PC := 168
	55	[5266]	GETGLOBAL	R21 K14 ; R21 := mRegions
	56	[5266]	GETTABLE 	R5 R21 R20 ; R5 := R21[R20]
	57	[5267]	GETGLOBAL	R21 K15 ; R21 := mRegionInstances
	58	[5267]	GETTABLE 	R13 R21 R20 ; R13 := R21[R20]
	59	[5268]	GETGLOBAL	R21 K7 ; R21 := 0x7b998233
	60	[5268]	MOVE     	R22 R13 ; R22 := R13
	61	[5268]	CALL     	R21 2 2 ; R21 := R21(R22)
	62	[5268]	TEST     	R21 1 ; if R21 then PC := 168
	63	[5268]	JMP      	168 ; PC := 168
	64	[5268]	GETGLOBAL	R21 K16 ; R21 := mRailJack
	65	[5268]	GETTABLE 	R21 R21 K17 ; R21 := R21["Active"]
	66	[5268]	TEST     	R21 0 ; if not R21 then PC := 73
	67	[5268]	JMP      	73 ; PC := 73
	68	[5268]	GETGLOBAL	R21 K16 ; R21 := mRailJack
	69	[5268]	GETTABLE 	R21 R21 K18 ; R21 := R21["Regions"]
	70	[5268]	GETTABLE 	R21 R21 R20 ; R21 := R21[R20]
	71	[5268]	TEST     	R21 0 ; if not R21 then PC := 168
	72	[5268]	JMP      	168 ; PC := 168
	73	[5269]	SELF     	R21 R13 K13 ; R22 := R13; R21 := R13[0x4078bbf8]
	74	[5269]	MOVE     	R23 R12 ; R23 := R12
	75	[5269]	CALL     	R21 3 1 ; R21(R22,R23)
	76	[5270]	GETGLOBAL	R21 K19 ; R21 := 0x83ddcc65
	77	[5270]	MOVE     	R22 R6 ; R22 := R6
	78	[5270]	MOVE     	R23 R12 ; R23 := R12
	79	[5270]	MOVE     	R24 R11 ; R24 := R11
	80	[5270]	CALL     	R21 4 1 ; R21(R22,R23,R24)
	81	[5271]	GETGLOBAL	R21 K20 ; R21 := mRegionRadius
	82	[5271]	GETTABLE 	R9 R21 R20 ; R9 := R21[R20]
	83	[5272]	GETUPVAL 	R21 U0 ; R21 := U0
	84	[5272]	GETTABLE 	R21 R21 K21 ; R21 := R21["IsVisible"]
	85	[5272]	TEST     	R21 0 ; if not R21 then PC := 88
	86	[5272]	JMP      	88 ; PC := 88
	87	[5273]	ADD      	R9 R9 K22 ; R9 := R9 + 0.200000
	88	[5276]	GETGLOBAL	R21 K1 ; R21 := 0xae91e43b
	89	[5276]	SELF     	R21 R21 K23 ; R22 := R21; R21 := R21[0x84ca5a07]
	90	[5276]	MOVE     	R23 R7 ; R23 := R7
	91	[5276]	MOVE     	R24 R0 ; R24 := R0
	92	[5276]	MOVE     	R25 R1 ; R25 := R1
	93	[5276]	MOVE     	R26 R6 ; R26 := R6
	94	[5276]	MOVE     	R27 R9 ; R27 := R9
	95	[5276]	CALL     	R21 7 2 ; R21 := R21(R22,R23,R24,R25,R26,R27)
	96	[5276]	MOVE     	R10 R21 ; R10 := R21
	97	[5278]	TEST     	R10 0 ; if not R10 then PC := 108
	98	[5278]	JMP      	108 ; PC := 108
	99	[5278]	GETGLOBAL	R21 K24 ; R21 := 0xae2294fa
	100	[5278]	MOVE     	R22 R7 ; R22 := R7
	101	[5278]	CALL     	R21 2 2 ; R21 := R21(R22)
	102	[5278]	LT       	0 R21 R3 ; if R21 >= R3 then PC := 108
	103	[5278]	JMP      	108 ; PC := 108
	104	[5278]	GETUPVAL 	R21 U1 ; R21 := U1
	105	[5278]	GETTABLE 	R21 R21 R20 ; R21 := R21[R20]
	106	[5278]	TEST     	R21 0 ; if not R21 then PC := 112
	107	[5278]	JMP      	112 ; PC := 112
	108	[5278]	GETGLOBAL	R21 K4 ; R21 := mHover
	109	[5278]	GETTABLE 	R21 R21 K25 ; R21 := R21["RegionLabel"]
	110	[5278]	EQ       	0 R21 R20 ; if R21 ~= R20 then PC := 128
	111	[5278]	JMP      	128 ; PC := 128
	112	[5279]	MOVE     	R4 R7 ; R4 := R7
	113	[5280]	GETGLOBAL	R21 K4 ; R21 := mHover
	114	[5280]	GETTABLE 	R21 R21 K25 ; R21 := R21["RegionLabel"]
	115	[5280]	EQ       	0 R21 R20 ; if R21 ~= R20 then PC := 119
	116	[5280]	JMP      	119 ; PC := 119
	117	[5281]	LOADK    	R3 := 0.000000
	118	[5281]	JMP      	123 ; PC := 123
	119	[5283]	GETGLOBAL	R21 K24 ; R21 := 0xae2294fa
	120	[5283]	MOVE     	R22 R7 ; R22 := R7
	121	[5283]	CALL     	R21 2 2 ; R21 := R21(R22)
	122	[5283]	MOVE     	R3 R21 ; R3 := R21
	123	[5285]	GETGLOBAL	R21 K4 ; R21 := mHover
	124	[5285]	GETGLOBAL	R22 K14 ; R22 := mRegions
	125	[5285]	GETTABLE 	R22 R22 R20 ; R22 := R22[R20]
	126	[5285]	SETTABLE 	R21 K5 R22 ; R21["Region"] := R22
	127	[5286]	MOVE     	R8 R20 ; R8 := R20
	128	[5290]	GETGLOBAL	R21 K26 ; R21 := mSmoothZoom
	129	[5290]	GETTABLE 	R21 R21 K27 ; R21 := R21["mTargetVal"]
	130	[5290]	GETGLOBAL	R22 K28 ; R22 := Zoom
	131	[5290]	GETTABLE 	R22 R22 K29 ; R22 := R22["ZOOM_OUT_THRESHOLD"]
	132	[5290]	LT       	0 R22 R21 ; if R22 >= R21 then PC := 168
	133	[5290]	JMP      	168 ; PC := 168
	134	[5291]	GETUPVAL 	R21 U0 ; R21 := U0
	135	[5291]	GETTABLE 	R21 R21 K21 ; R21 := R21["IsVisible"]
	136	[5291]	TEST     	R21 1 ; if R21 then PC := 139
	137	[5291]	JMP      	139 ; PC := 139
	138	[5292]	ADD      	R9 R9 K22 ; R9 := R9 + 0.200000
	139	[5294]	GETGLOBAL	R21 K1 ; R21 := 0xae91e43b
	140	[5294]	SELF     	R21 R21 K23 ; R22 := R21; R21 := R21[0x84ca5a07]
	141	[5294]	MOVE     	R23 R16 ; R23 := R16
	142	[5294]	MOVE     	R24 R0 ; R24 := R0
	143	[5294]	GETUPVAL 	R25 U2 ; R25 := U2
	144	[5294]	GETTABLE 	R25 R25 K30 ; R25 := R25["CAMERA_FOCUS_DIR"]
	145	[5294]	MOVE     	R26 R6 ; R26 := R6
	146	[5294]	MOVE     	R27 R9 ; R27 := R9
	147	[5294]	CALL     	R21 7 2 ; R21 := R21(R22,R23,R24,R25,R26,R27)
	148	[5294]	MOVE     	R14 R21 ; R14 := R21
	149	[5296]	TEST     	R14 0 ; if not R14 then PC := 168
	150	[5296]	JMP      	168 ; PC := 168
	151	[5296]	GETGLOBAL	R21 K24 ; R21 := 0xae2294fa
	152	[5296]	MOVE     	R22 R16 ; R22 := R16
	153	[5296]	CALL     	R21 2 2 ; R21 := R21(R22)
	154	[5296]	LT       	0 R21 R15 ; if R21 >= R15 then PC := 168
	155	[5296]	JMP      	168 ; PC := 168
	156	[5296]	GETUPVAL 	R21 U1 ; R21 := U1
	157	[5296]	GETTABLE 	R21 R21 R20 ; R21 := R21[R20]
	158	[5296]	TEST     	R21 1 ; if R21 then PC := 168
	159	[5296]	JMP      	168 ; PC := 168
	160	[5297]	GETGLOBAL	R21 K24 ; R21 := 0xae2294fa
	161	[5297]	MOVE     	R22 R16 ; R22 := R16
	162	[5297]	CALL     	R21 2 2 ; R21 := R21(R22)
	163	[5297]	MOVE     	R15 R21 ; R15 := R21
	164	[5298]	GETUPVAL 	R21 U3 ; R21 := U3
	165	[5298]	GETGLOBAL	R22 K14 ; R22 := mRegions
	166	[5298]	GETTABLE 	R22 R22 R20 ; R22 := R22[R20]
	167	[5298]	CALL     	R21 2 1 ; R21(R22)
	168	[5265]	FORLOOP  	R17 55 ; R17 += R19; if R17 <= R18 then begin PC := 55; R20 := R17 end
	169	[5305]	GETGLOBAL	R21 K26 ; R21 := mSmoothZoom
	170	[5305]	GETTABLE 	R21 R21 K31 ; R21 := R21["mCurVal"]
	171	[5305]	LT       	0 K32 R21 ; if -2.000000 >= R21 then PC := 175
	172	[5305]	JMP      	175 ; PC := 175
	173	[5306]	GETGLOBAL	R21 K4 ; R21 := mHover
	174	[5306]	SETTABLE 	R21 K5 K6 ; R21["Region"] := nil
	175	[5309]	GETGLOBAL	R21 K4 ; R21 := mHover
	176	[5309]	GETTABLE 	R21 R21 K5 ; R21 := R21["Region"]
	177	[5309]	EQ       	1 R2 R21 ; if R2 == R21 then PC := 330
	178	[5309]	JMP      	330 ; PC := 330
	179	[5310]	GETGLOBAL	R21 K4 ; R21 := mHover
	180	[5310]	GETTABLE 	R21 R21 K5 ; R21 := R21["Region"]
	181	[5310]	EQ       	1 R21 K6 ; if R21 == nil then PC := 274
	182	[5310]	JMP      	274 ; PC := 274
	183	[5310]	GETGLOBAL	R21 K7 ; R21 := 0x7b998233
	184	[5310]	GETGLOBAL	R22 K4 ; R22 := mHover
	185	[5310]	GETTABLE 	R22 R22 K5 ; R22 := R22["Region"]
	186	[5310]	GETTABLE 	R22 R22 K33 ; R22 := R22["instance"]
	187	[5310]	CALL     	R21 2 2 ; R21 := R21(R22)
	188	[5310]	TEST     	R21 1 ; if R21 then PC := 274
	189	[5310]	JMP      	274 ; PC := 274
	190	[5311]	GETGLOBAL	R21 K34 ; R21 := mInputBlocked
	191	[5311]	TEST     	R21 1 ; if R21 then PC := 197
	192	[5311]	JMP      	197 ; PC := 197
	193	[5312]	GETUPVAL 	R21 U4 ; R21 := U4
	194	[5312]	GETTABLE 	R21 R21 K35 ; R21 := R21[0x659d451f]
	195	[5312]	GETGLOBAL	R22 K36 ; R22 := 0x6146a0ea
	196	[5312]	CALL     	R21 2 1 ; R21(R22)
	197	[5315]	GETGLOBAL	R21 K20 ; R21 := mRegionRadius
	198	[5315]	GETTABLE 	R9 R21 R8 ; R9 := R21[R8]
	199	[5316]	GETGLOBAL	R21 K37 ; R21 := mRegionRings
	200	[5316]	GETTABLE 	R21 R21 R8 ; R21 := R21[R8]
	201	[5316]	EQ       	0 R21 K6 ; if R21 ~= nil then PC := 206
	202	[5316]	JMP      	206 ; PC := 206
	203	[5317]	GETGLOBAL	R21 K37 ; R21 := mRegionRings
	204	[5317]	NEWTABLE 	R22 0 0 ; R22 := {}
	205	[5317]	SETTABLE 	R21 R8 R22 ; R21[R8] := R22
	206	[5320]	EQ       	1 R9 K6 ; if R9 == nil then PC := 274
	207	[5320]	JMP      	274 ; PC := 274
	208	[5322]	GETGLOBAL	R21 K37 ; R21 := mRegionRings
	209	[5322]	GETTABLE 	R21 R21 R8 ; R21 := R21[R8]
	210	[5324]	GETGLOBAL	R22 K7 ; R22 := 0x7b998233
	211	[5324]	GETTABLE 	R23 R21 K38 ; R23 := R21[1.000000]
	212	[5324]	CALL     	R22 2 2 ; R22 := R22(R23)
	213	[5324]	TEST     	R22 0 ; if not R22 then PC := 227
	214	[5324]	JMP      	227 ; PC := 227
	215	[5325]	GETGLOBAL	R22 K8 ; R22 := 0x1211d00f
	216	[5325]	SELF     	R22 R22 K39 ; R23 := R22; R22 := R22[0x05909209]
	217	[5325]	GETGLOBAL	R24 K40 ; R24 := 0x5a16eeaa
	218	[5325]	GETGLOBAL	R25 K4 ; R25 := mHover
	219	[5325]	GETTABLE 	R25 R25 K5 ; R25 := R25["Region"]
	220	[5325]	GETTABLE 	R25 R25 K33 ; R25 := R25["instance"]
	221	[5325]	SELF     	R25 R25 K41 ; R26 := R25; R25 := R25[0xd1586535]
	222	[5325]	CALL     	R25 2 2 ; R25 := R25(R26)
	223	[5325]	GETUPVAL 	R26 U2 ; R26 := U2
	224	[5325]	GETTABLE 	R26 R26 K42 ; R26 := R26["RING_ROTATION"]
	225	[5325]	CALL     	R22 5 2 ; R22 := R22(R23,R24,R25,R26)
	226	[5325]	SETTABLE 	R21 K38 R22 ; R21[1.000000] := R22
	227	[5328]	GETGLOBAL	R22 K7 ; R22 := 0x7b998233
	228	[5328]	GETTABLE 	R23 R21 K43 ; R23 := R21[2.000000]
	229	[5328]	CALL     	R22 2 2 ; R22 := R22(R23)
	230	[5328]	TEST     	R22 0 ; if not R22 then PC := 253
	231	[5328]	JMP      	253 ; PC := 253
	232	[5329]	GETGLOBAL	R22 K8 ; R22 := 0x1211d00f
	233	[5329]	SELF     	R22 R22 K39 ; R23 := R22; R22 := R22[0x05909209]
	234	[5329]	GETGLOBAL	R24 K40 ; R24 := 0x5a16eeaa
	235	[5329]	GETGLOBAL	R25 K4 ; R25 := mHover
	236	[5329]	GETTABLE 	R25 R25 K5 ; R25 := R25["Region"]
	237	[5329]	GETTABLE 	R25 R25 K33 ; R25 := R25["instance"]
	238	[5329]	SELF     	R25 R25 K41 ; R26 := R25; R25 := R25[0xd1586535]
	239	[5329]	CALL     	R25 2 2 ; R25 := R25(R26)
	240	[5329]	GETUPVAL 	R26 U2 ; R26 := U2
	241	[5329]	GETTABLE 	R26 R26 K42 ; R26 := R26["RING_ROTATION"]
	242	[5329]	CALL     	R22 5 2 ; R22 := R22(R23,R24,R25,R26)
	243	[5329]	SETTABLE 	R21 K43 R22 ; R21[2.000000] := R22
	244	[5331]	GETTABLE 	R22 R21 K43 ; R22 := R21[2.000000]
	245	[5331]	SELF     	R22 R22 K44 ; R23 := R22; R22 := R22[0xc2b4e597]
	246	[5331]	GETGLOBAL	R24 K45 ; R24 := 0x60130201
	247	[5331]	LOADK    	R25 := 255.000000
	248	[5331]	LOADK    	R26 := 255.000000
	249	[5331]	LOADK    	R27 := 255.000000
	250	[5331]	LOADK    	R28 := 150.000000
	251	[5331]	CALL     	R24 5 0 ; R24,... := R24(R25,R26,R27,R28)
	252	[5331]	CALL     	R22 0 1 ; R22(R23,...)
	253	[5334]	GETTABLE 	R22 R21 K38 ; R22 := R21[1.000000]
	254	[5335]	GETTABLE 	R23 R21 K43 ; R23 := R21[2.000000]
	255	[5348]	CLOSURE  	R24 0 ; R24 := closure(Function #1)
	256	[5348]	MOVE     	R0 R22 ; R0 := R22
	257	[5348]	MOVE     	R0 R9 ; R0 := R9
	258	[5348]	MOVE     	R0 R23 ; R0 := R23
	259	[5349]	GETGLOBAL	R25 K46 ; R25 := 0x25312c9b
	260	[5349]	GETGLOBAL	R26 K1 ; R26 := 0xae91e43b
	261	[5349]	GETUPVAL 	R27 U5 ; R27 := U5
	262	[5349]	GETTABLE 	R27 R27 R8 ; R27 := R27[R8]
	263	[5349]	GETTABLE 	R27 R27 K47 ; R27 := R27["clipName"]
	264	[5349]	LOADK    	R28 := 2.000000
	265	[5349]	NEWTABLE 	R29 1 0 ; R29 := {}
	266	[5349]	MOVE     	R30 R24 ; R30 := R24
	267	[5349]	SETLIST  	R29 1 1 ; R29[(1-1)*FPF+i] := R(29+i), 1 <= i <= 1
	268	[5349]	NEWTABLE 	R30 1 0 ; R30 := {}
	269	[5349]	LOADK    	R31 := 1.000000
	270	[5349]	SETLIST  	R30 1 1 ; R30[(1-1)*FPF+i] := R(30+i), 1 <= i <= 1
	271	[5349]	LOADK    	R31 := 0.250000
	272	[5349]	CALL     	R25 7 1 ; R25(R26,R27,R28,R29,R30,R31)
	273	[5349]	CLOSE    	R21 ; SAVE R21,...
	274	[5353]	EQ       	1 R2 K6 ; if R2 == nil then PC := 330
	275	[5353]	JMP      	330 ; PC := 330
	276	[5353]	GETGLOBAL	R21 K7 ; R21 := 0x7b998233
	277	[5353]	GETTABLE 	R22 R2 K33 ; R22 := R2["instance"]
	278	[5353]	CALL     	R21 2 2 ; R21 := R21(R22)
	279	[5353]	TEST     	R21 1 ; if R21 then PC := 330
	280	[5353]	JMP      	330 ; PC := 330
	281	[5354]	LOADK    	R21 := 0.000000
	282	[5355]	LOADK    	R22 := 1.000000
	283	[5355]	GETGLOBAL	R23 K14 ; R23 := mRegions
	284	[5355]	LEN      	R23 R23 ; R23 := # R23
	285	[5355]	LOADK    	R24 := 1.000000
	286	[5355]	FORPREP  	R22 293 ; R22 -= R24; PC := 293
	287	[5356]	GETGLOBAL	R26 K14 ; R26 := mRegions
	288	[5356]	GETTABLE 	R26 R26 R25 ; R26 := R26[R25]
	289	[5356]	EQ       	0 R26 R2 ; if R26 ~= R2 then PC := 293
	290	[5356]	JMP      	293 ; PC := 293
	291	[5357]	MOVE     	R21 R25 ; R21 := R25
	292	[5358]	JMP      	294 ; PC := 294
	293	[5355]	FORLOOP  	R22 287 ; R22 += R24; if R22 <= R23 then begin PC := 287; R25 := R22 end
	294	[5362]	GETGLOBAL	R26 K20 ; R26 := mRegionRadius
	295	[5362]	GETTABLE 	R9 R26 R21 ; R9 := R26[R21]
	296	[5364]	EQ       	1 R9 K6 ; if R9 == nil then PC := 330
	297	[5364]	JMP      	330 ; PC := 330
	298	[5364]	GETGLOBAL	R26 K7 ; R26 := 0x7b998233
	299	[5364]	GETTABLE 	R27 R2 K33 ; R27 := R2["instance"]
	300	[5364]	CALL     	R26 2 2 ; R26 := R26(R27)
	301	[5364]	TEST     	R26 1 ; if R26 then PC := 330
	302	[5364]	JMP      	330 ; PC := 330
	303	[5365]	GETGLOBAL	R26 K37 ; R26 := mRegionRings
	304	[5365]	GETTABLE 	R26 R26 R21 ; R26 := R26[R21]
	305	[5366]	GETTABLE 	R27 R26 K38 ; R27 := R26[1.000000]
	306	[5367]	GETTABLE 	R28 R26 K43 ; R28 := R26[2.000000]
	307	[5381]	CLOSURE  	R29 1 ; R29 := closure(Function #2)
	308	[5381]	MOVE     	R0 R27 ; R0 := R27
	309	[5381]	MOVE     	R0 R9 ; R0 := R9
	310	[5381]	MOVE     	R0 R28 ; R0 := R28
	311	[5382]	GETGLOBAL	R30 K46 ; R30 := 0x25312c9b
	312	[5382]	GETGLOBAL	R31 K1 ; R31 := 0xae91e43b
	313	[5382]	GETUPVAL 	R32 U5 ; R32 := U5
	314	[5382]	GETTABLE 	R32 R32 R21 ; R32 := R32[R21]
	315	[5382]	GETTABLE 	R32 R32 K47 ; R32 := R32["clipName"]
	316	[5382]	LOADK    	R33 := 1.000000
	317	[5382]	NEWTABLE 	R34 1 0 ; R34 := {}
	318	[5382]	MOVE     	R35 R29 ; R35 := R29
	319	[5382]	SETLIST  	R34 1 1 ; R34[(1-1)*FPF+i] := R(34+i), 1 <= i <= 1
	320	[5382]	NEWTABLE 	R35 1 0 ; R35 := {}
	321	[5382]	LOADK    	R36 := 1.000000
	322	[5382]	SETLIST  	R35 1 1 ; R35[(1-1)*FPF+i] := R(35+i), 1 <= i <= 1
	323	[5382]	LOADK    	R36 K49 ; R36 := 0.150000
	324	[5382]	LOADK    	R37 := 0.000000
	325	[5390]	CLOSURE  	R38 2 ; R38 := closure(Function #3)
	326	[5390]	MOVE     	R0 R27 ; R0 := R27
	327	[5390]	MOVE     	R0 R28 ; R0 := R28
	328	[5382]	CALL     	R30 9 1 ; R30(R31,R32,R33,R34,R35,R36,R37,R38)
	329	[5390]	CLOSE    	R26 ; SAVE R26,...
	330	[5395]	RETURN   	R4 2 ; return R4 
	331	[5396]	RETURN   	R0 1 ; return 

function #121 <?:5398,5416> (39 instructions, 156 bytes at 00000211291BC660)
0 params, 3 slots, 2 upvalues, 0 locals, 10 constants, 0 functions
	1	[5400]	OP_LOADBOOL	R0 0 0 ; R0 := false
	2	[5401]	GETGLOBAL	R1 K0 ; R1 := mRailJack
	3	[5401]	GETTABLE 	R1 R1 K1 ; R1 := R1["Active"]
	4	[5401]	TEST     	R1 1 ; if R1 then PC := 18
	5	[5401]	JMP      	18 ; PC := 18
	6	[5401]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	7	[5401]	GETUPVAL 	R2 U0 ; R2 := U0
	8	[5401]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[5401]	TEST     	R1 1 ; if R1 then PC := 18
	10	[5401]	JMP      	18 ; PC := 18
	11	[5401]	GETGLOBAL	R1 K3 ; R1 := mPlayerPos
	12	[5401]	GETTABLE 	R1 R1 K4 ; R1 := R1["Locked"]
	13	[5401]	TEST     	R1 1 ; if R1 then PC := 18
	14	[5401]	JMP      	18 ; PC := 18
	15	[5401]	GETGLOBAL	R1 K5 ; R1 := mZoomedRegion
	16	[5401]	EQ       	0 R1 K6 ; if R1 ~= nil then PC := 19
	17	[5401]	JMP      	19 ; PC := 19
	18	[5402]	RETURN   	R0 2 ; return R0 
	19	[5405]	GETGLOBAL	R1 K7 ; R1 := mSmoothZoom
	20	[5405]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0x54ab95f9]
	21	[5405]	CALL     	R1 2 2 ; R1 := R1(R2)
	22	[5406]	GETUPVAL 	R2 U1 ; R2 := U1
	23	[5406]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 37
	24	[5406]	JMP      	37 ; PC := 37
	25	[5407]	LT       	0 K9 R1 ; if -1.000000 >= R1 then PC := 31
	26	[5407]	JMP      	31 ; PC := 31
	27	[5407]	GETUPVAL 	R2 U1 ; R2 := U1
	28	[5407]	LE       	0 R2 K9 ; if R2 > -1.000000 then PC := 31
	29	[5407]	JMP      	31 ; PC := 31
	30	[5408]	OP_LOADBOOL	R0 1 0 ; R0 := true
	31	[5410]	LE       	0 R1 K9 ; if R1 > -1.000000 then PC := 37
	32	[5410]	JMP      	37 ; PC := 37
	33	[5410]	GETUPVAL 	R2 U1 ; R2 := U1
	34	[5410]	LT       	0 K9 R2 ; if -1.000000 >= R2 then PC := 37
	35	[5410]	JMP      	37 ; PC := 37
	36	[5411]	OP_LOADBOOL	R0 1 0 ; R0 := true
	37	[5414]	SETUPVAL 	R1 U1 ; U1 := R1
	38	[5415]	RETURN   	R0 2 ; return R0 
	39	[5416]	RETURN   	R0 1 ; return 

function #122 <?:5418,5753> (1104 instructions, 4416 bytes at 00000211291BC900)
0 params, 90 slots, 23 upvalues, 0 locals, 150 constants, 0 functions
	1	[5419]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5419]	GETUPVAL 	R1 U1 ; R1 := U1
	3	[5419]	GETTABLE 	R1 R1 K0 ; R1 := R1["EDIT_REGIONS"]
	4	[5419]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 83
	5	[5419]	JMP      	83 ; PC := 83
	6	[5419]	GETGLOBAL	R0 K1 ; R0 := 0x7b998233
	7	[5419]	GETUPVAL 	R1 U2 ; R1 := U2
	8	[5419]	GETTABLE 	R1 R1 K2 ; R1 := R1["mMovingRegion"]
	9	[5419]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[5419]	TEST     	R0 1 ; if R0 then PC := 83
	11	[5419]	JMP      	83 ; PC := 83
	12	[5420]	GETUPVAL 	R0 U3 ; R0 := U3
	13	[5420]	CALL     	R0 1 2 ; R0 := R0()
	14	[5421]	GETUPVAL 	R1 U2 ; R1 := U2
	15	[5421]	GETTABLE 	R1 R1 K3 ; R1 := R1["mInitialWorldCursor"]
	16	[5421]	SUB      	R1 R0 R1 ; R1 := R0 - R1
	17	[5422]	GETUPVAL 	R2 U2 ; R2 := U2
	18	[5422]	GETTABLE 	R2 R2 K4 ; R2 := R2["mInitialPosition"]
	19	[5422]	ADD      	R2 R2 R1 ; R2 := R2 + R1
	20	[5423]	SETTABLE 	R2 K5 K6 ; R2["z"] := 0.000000
	21	[5424]	GETUPVAL 	R3 U2 ; R3 := U2
	22	[5424]	GETTABLE 	R3 R3 K2 ; R3 := R3["mMovingRegion"]
	23	[5424]	GETTABLE 	R3 R3 K7 ; R3 := R3["instance"]
	24	[5424]	SELF     	R3 R3 K8 ; R4 := R3; R3 := R3[0x9307aa51]
	25	[5424]	MOVE     	R5 R2 ; R5 := R2
	26	[5424]	CALL     	R3 3 1 ; R3(R4,R5)
	27	[5425]	GETGLOBAL	R3 K9 ; R3 := mRadialSolarMap
	28	[5425]	SELF     	R3 R3 K10 ; R4 := R3; R3 := R3[0x16447aaa]
	29	[5425]	GETUPVAL 	R5 U2 ; R5 := U2
	30	[5425]	GETTABLE 	R5 R5 K2 ; R5 := R5["mMovingRegion"]
	31	[5425]	MOVE     	R6 R2 ; R6 := R2
	32	[5425]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	33	[5427]	LOADNIL  	R3 R3 ; R3 := nil
	34	[5428]	GETGLOBAL	R4 K11 ; R4 := 0xc8802016
	35	[5428]	GETUPVAL 	R5 U2 ; R5 := U2
	36	[5428]	GETTABLE 	R5 R5 K12 ; R5 := R5["mChildNodes"]
	37	[5428]	CALL     	R4 2 4 ; R4,R5,R6 := R4(R5)
	38	[5428]	JMP      	70 ; PC := 70
	39	[5429]	GETUPVAL 	R9 U4 ; R9 := U4
	40	[5429]	GETTABLE 	R10 R8 K13 ; R10 := R8["NodeIndex"]
	41	[5429]	GETTABLE 	R3 R9 R10 ; R3 := R9[R10]
	42	[5430]	GETTABLE 	R9 R8 K14 ; R9 := R8["InitialPosition"]
	43	[5430]	ADD      	R2 R9 R1 ; R2 := R9 + R1
	44	[5431]	SETTABLE 	R3 K15 R2 ; R3["position"] := R2
	45	[5432]	GETUPVAL 	R9 U5 ; R9 := U5
	46	[5432]	MOVE     	R10 R3 ; R10 := R3
	47	[5432]	CALL     	R9 2 2 ; R9 := R9(R10)
	48	[5432]	SETTABLE 	R3 K16 R9 ; R3["isSurfaceNode"] := R9
	49	[5433]	GETGLOBAL	R9 K9 ; R9 := mRadialSolarMap
	50	[5433]	SELF     	R9 R9 K17 ; R10 := R9; R9 := R9[0x251bbc8c]
	51	[5433]	GETTABLE 	R11 R3 K18 ; R11 := R3["radialSector"]
	52	[5433]	MOVE     	R12 R2 ; R12 := R2
	53	[5433]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	54	[5434]	GETTABLE 	R9 R3 K19 ; R9 := R3["deco"]
	55	[5434]	EQ       	1 R9 K20 ; if R9 == nil then PC := 70
	56	[5434]	JMP      	70 ; PC := 70
	57	[5434]	GETGLOBAL	R9 K1 ; R9 := 0x7b998233
	58	[5434]	GETTABLE 	R10 R3 K19 ; R10 := R3["deco"]
	59	[5434]	GETTABLE 	R10 R10 K21 ; R10 := R10["mInstance"]
	60	[5434]	CALL     	R9 2 2 ; R9 := R9(R10)
	61	[5434]	TEST     	R9 1 ; if R9 then PC := 70
	62	[5434]	JMP      	70 ; PC := 70
	63	[5435]	GETTABLE 	R9 R3 K19 ; R9 := R3["deco"]
	64	[5435]	GETTABLE 	R9 R9 K21 ; R9 := R9["mInstance"]
	65	[5435]	SELF     	R9 R9 K8 ; R10 := R9; R9 := R9[0x9307aa51]
	66	[5435]	GETTABLE 	R11 R3 K19 ; R11 := R3["deco"]
	67	[5435]	GETTABLE 	R11 R11 K22 ; R11 := R11["mOffset"]
	68	[5435]	ADD      	R11 R2 R11 ; R11 := R2 + R11
	69	[5435]	CALL     	R9 3 1 ; R9(R10,R11)
	70	[5428]	TFORLOOP 	R4 2 ; R7,R8 := R4(R5,R6); if R7 ~= nil then begin PC = 39; R6 := R7 end
	71	[5436]	JMP      	39 ; PC := 39
	72	[5439]	LOADK    	R9 := 1.000000
	73	[5439]	GETGLOBAL	R10 K23 ; R10 := mFlatEdges
	74	[5439]	LEN      	R10 R10 ; R10 := # R10
	75	[5439]	LOADK    	R11 := 1.000000
	76	[5439]	FORPREP  	R9 81 ; R9 -= R11; PC := 81
	77	[5440]	GETUPVAL 	R13 U6 ; R13 := U6
	78	[5440]	GETGLOBAL	R14 K23 ; R14 := mFlatEdges
	79	[5440]	GETTABLE 	R14 R14 R12 ; R14 := R14[R12]
	80	[5440]	CALL     	R13 2 1 ; R13(R14)
	81	[5439]	FORLOOP  	R9 77 ; R9 += R11; if R9 <= R10 then begin PC := 77; R12 := R9 end
	82	[5443]	RETURN   	R0 1 ; return 
	83	[5446]	GETUPVAL 	R13 U0 ; R13 := U0
	84	[5446]	GETUPVAL 	R14 U1 ; R14 := U1
	85	[5446]	GETTABLE 	R14 R14 K24 ; R14 := R14["EDIT_NODES"]
	86	[5446]	EQ       	0 R13 R14 ; if R13 ~= R14 then PC := 190
	87	[5446]	JMP      	190 ; PC := 190
	88	[5446]	GETGLOBAL	R13 K1 ; R13 := 0x7b998233
	89	[5446]	GETUPVAL 	R14 U2 ; R14 := U2
	90	[5446]	GETTABLE 	R14 R14 K25 ; R14 := R14["mMovingNode"]
	91	[5446]	CALL     	R13 2 2 ; R13 := R13(R14)
	92	[5446]	TEST     	R13 1 ; if R13 then PC := 190
	93	[5446]	JMP      	190 ; PC := 190
	94	[5447]	GETUPVAL 	R13 U2 ; R13 := U2
	95	[5447]	GETTABLE 	R13 R13 K25 ; R13 := R13["mMovingNode"]
	96	[5447]	GETTABLE 	R13 R13 K18 ; R13 := R13["radialSector"]
	97	[5447]	GETTABLE 	R13 R13 K26 ; R13 := R13["region"]
	98	[5448]	LOADNIL  	R14 R14 ; R14 := nil
	99	[5449]	EQ       	1 R13 K27 ; if R13 == 21.000000 then PC := 104
	100	[5449]	JMP      	104 ; PC := 104
	101	[5450]	GETUPVAL 	R15 U7 ; R15 := U7
	102	[5450]	CALL     	R15 1 2 ; R15 := R15()
	103	[5450]	MOVE     	R14 R15 ; R14 := R15
	104	[5452]	EQ       	1 R14 K20 ; if R14 == nil then PC := 108
	105	[5452]	JMP      	108 ; PC := 108
	106	[5452]	EQ       	0 R14 K28 ; if R14 ~= false then PC := 139
	107	[5452]	JMP      	139 ; PC := 139
	108	[5453]	GETUPVAL 	R15 U3 ; R15 := U3
	109	[5453]	CALL     	R15 1 2 ; R15 := R15()
	110	[5454]	LOADNIL  	R16 R16 ; R16 := nil
	111	[5455]	GETUPVAL 	R17 U8 ; R17 := U8
	112	[5455]	GETTABLE 	R17 R17 K29 ; R17 := R17["mShiftDown"]
	113	[5455]	TEST     	R17 0 ; if not R17 then PC := 132
	114	[5455]	JMP      	132 ; PC := 132
	115	[5456]	GETUPVAL 	R17 U9 ; R17 := U9
	116	[5456]	GETTABLE 	R17 R17 K30 ; R17 := R17[0xfa9785e4]
	117	[5456]	GETGLOBAL	R18 K31 ; R18 := 0xae91e43b
	118	[5456]	CALL     	R17 2 2 ; R17 := R17(R18)
	119	[5457]	GETTABLE 	R18 R17 K32 ; R18 := R17["y"]
	120	[5457]	GETUPVAL 	R19 U2 ; R19 := U2
	121	[5457]	GETTABLE 	R19 R19 K33 ; R19 := R19["mInitialMousePosition"]
	122	[5457]	GETTABLE 	R19 R19 K32 ; R19 := R19["y"]
	123	[5457]	SUB      	R18 R18 R19 ; R18 := R18 - R19
	124	[5458]	GETGLOBAL	R19 K34 ; R19 := 0xa421af95
	125	[5458]	LOADK    	R20 := 0.000000
	126	[5458]	LOADK    	R21 := 0.000000
	127	[5458]	UNM      	R22 R18 ; R22 := ^ R18
	128	[5458]	DIV      	R22 R22 K35 ; R22 := R22 / 500.000000
	129	[5458]	CALL     	R19 4 2 ; R19 := R19(R20,R21,R22)
	130	[5458]	MOVE     	R16 R19 ; R16 := R19
	131	[5458]	JMP      	135 ; PC := 135
	132	[5460]	GETUPVAL 	R19 U2 ; R19 := U2
	133	[5460]	GETTABLE 	R19 R19 K3 ; R19 := R19["mInitialWorldCursor"]
	134	[5460]	SUB      	R16 R15 R19 ; R16 := R15 - R19
	135	[5462]	GETUPVAL 	R19 U2 ; R19 := U2
	136	[5462]	GETTABLE 	R19 R19 K4 ; R19 := R19["mInitialPosition"]
	137	[5462]	ADD      	R14 R19 R16 ; R14 := R19 + R16
	138	[5462]	JMP      	145 ; PC := 145
	139	[5464]	GETGLOBAL	R19 K36 ; R19 := 0x1211d00f
	140	[5464]	SELF     	R19 R19 K37 ; R20 := R19; R19 := R19[0xb4364067]
	141	[5464]	CALL     	R19 2 2 ; R19 := R19(R20)
	142	[5464]	SELF     	R19 R19 K38 ; R20 := R19; R19 := R19[0xd1586535]
	143	[5464]	CALL     	R19 2 2 ; R19 := R19(R20)
	144	[5465]	ADD      	R14 R14 R19 ; R14 := R14 + R19
	145	[5468]	GETUPVAL 	R20 U2 ; R20 := U2
	146	[5468]	GETTABLE 	R20 R20 K25 ; R20 := R20["mMovingNode"]
	147	[5468]	SETTABLE 	R20 K15 R14 ; R20["position"] := R14
	148	[5469]	GETUPVAL 	R20 U2 ; R20 := U2
	149	[5469]	GETTABLE 	R20 R20 K25 ; R20 := R20["mMovingNode"]
	150	[5469]	GETUPVAL 	R21 U5 ; R21 := U5
	151	[5469]	GETUPVAL 	R22 U2 ; R22 := U2
	152	[5469]	GETTABLE 	R22 R22 K25 ; R22 := R22["mMovingNode"]
	153	[5469]	CALL     	R21 2 2 ; R21 := R21(R22)
	154	[5469]	SETTABLE 	R20 K16 R21 ; R20["isSurfaceNode"] := R21
	155	[5471]	LOADK    	R20 := 1.000000
	156	[5471]	GETGLOBAL	R21 K23 ; R21 := mFlatEdges
	157	[5471]	LEN      	R21 R21 ; R21 := # R21
	158	[5471]	LOADK    	R22 := 1.000000
	159	[5471]	FORPREP  	R20 178 ; R20 -= R22; PC := 178
	160	[5472]	GETGLOBAL	R24 K23 ; R24 := mFlatEdges
	161	[5472]	GETTABLE 	R24 R24 R23 ; R24 := R24[R23]
	162	[5472]	GETTABLE 	R24 R24 K39 ; R24 := R24["NodeA"]
	163	[5472]	GETTABLE 	R24 R24 K18 ; R24 := R24["radialSector"]
	164	[5472]	GETTABLE 	R24 R24 K26 ; R24 := R24["region"]
	165	[5472]	EQ       	1 R24 R13 ; if R24 == R13 then PC := 174
	166	[5472]	JMP      	174 ; PC := 174
	167	[5472]	GETGLOBAL	R24 K23 ; R24 := mFlatEdges
	168	[5472]	GETTABLE 	R24 R24 R23 ; R24 := R24[R23]
	169	[5472]	GETTABLE 	R24 R24 K40 ; R24 := R24["NodeB"]
	170	[5472]	GETTABLE 	R24 R24 K18 ; R24 := R24["radialSector"]
	171	[5472]	GETTABLE 	R24 R24 K26 ; R24 := R24["region"]
	172	[5472]	EQ       	0 R24 R13 ; if R24 ~= R13 then PC := 178
	173	[5472]	JMP      	178 ; PC := 178
	174	[5473]	GETUPVAL 	R24 U6 ; R24 := U6
	175	[5473]	GETGLOBAL	R25 K23 ; R25 := mFlatEdges
	176	[5473]	GETTABLE 	R25 R25 R23 ; R25 := R25[R23]
	177	[5473]	CALL     	R24 2 1 ; R24(R25)
	178	[5471]	FORLOOP  	R20 160 ; R20 += R22; if R20 <= R21 then begin PC := 160; R23 := R20 end
	179	[5482]	GETGLOBAL	R24 K9 ; R24 := mRadialSolarMap
	180	[5482]	SELF     	R24 R24 K17 ; R25 := R24; R24 := R24[0x251bbc8c]
	181	[5482]	GETUPVAL 	R26 U2 ; R26 := U2
	182	[5482]	GETTABLE 	R26 R26 K25 ; R26 := R26["mMovingNode"]
	183	[5482]	GETTABLE 	R26 R26 K18 ; R26 := R26["radialSector"]
	184	[5482]	MOVE     	R27 R14 ; R27 := R14
	185	[5482]	CALL     	R24 4 1 ; R24(R25,R26,R27)
	186	[5484]	GETUPVAL 	R24 U10 ; R24 := U10
	187	[5484]	GETUPVAL 	R25 U2 ; R25 := U2
	188	[5484]	GETTABLE 	R25 R25 K25 ; R25 := R25["mMovingNode"]
	189	[5484]	CALL     	R24 2 1 ; R24(R25)
	190	[5487]	GETUPVAL 	R24 U0 ; R24 := U0
	191	[5487]	GETUPVAL 	R25 U1 ; R25 := U1
	192	[5487]	GETTABLE 	R25 R25 K41 ; R25 := R25["EDIT_SHORTCUT_CONTROL_POINTS"]
	193	[5487]	EQ       	0 R24 R25 ; if R24 ~= R25 then PC := 338
	194	[5487]	JMP      	338 ; PC := 338
	195	[5488]	GETUPVAL 	R24 U3 ; R24 := U3
	196	[5488]	CALL     	R24 1 2 ; R24 := R24()
	197	[5490]	GETUPVAL 	R25 U2 ; R25 := U2
	198	[5490]	GETTABLE 	R25 R25 K42 ; R25 := R25["mControlPointHeld"]
	199	[5490]	TEST     	R25 1 ; if R25 then PC := 279
	200	[5490]	JMP      	279 ; PC := 279
	201	[5491]	GETUPVAL 	R25 U2 ; R25 := U2
	202	[5491]	GETTABLE 	R25 R25 K43 ; R25 := R25["mMovingControlPoint"]
	203	[5492]	LOADNIL  	R26 R28 ; R26 := R27 := R28 := nil
	204	[5495]	LOADK    	R29 := 1.000000
	205	[5495]	GETGLOBAL	R30 K23 ; R30 := mFlatEdges
	206	[5495]	LEN      	R30 R30 ; R30 := # R30
	207	[5495]	LOADK    	R31 := 1.000000
	208	[5495]	FORPREP  	R29 244 ; R29 -= R31; PC := 244
	209	[5496]	GETGLOBAL	R33 K23 ; R33 := mFlatEdges
	210	[5496]	GETTABLE 	R33 R33 R32 ; R33 := R33[R32]
	211	[5496]	GETTABLE 	R33 R33 K44 ; R33 := R33["IsShortcut"]
	212	[5496]	TEST     	R33 0 ; if not R33 then PC := 244
	213	[5496]	JMP      	244 ; PC := 244
	214	[5497]	GETGLOBAL	R33 K11 ; R33 := 0xc8802016
	215	[5497]	NEWTABLE 	R34 2 0 ; R34 := {}
	216	[5497]	GETGLOBAL	R35 K23 ; R35 := mFlatEdges
	217	[5497]	GETTABLE 	R35 R35 R32 ; R35 := R35[R32]
	218	[5497]	GETTABLE 	R35 R35 K45 ; R35 := R35["controlPointA"]
	219	[5497]	GETGLOBAL	R36 K23 ; R36 := mFlatEdges
	220	[5497]	GETTABLE 	R36 R36 R32 ; R36 := R36[R32]
	221	[5497]	GETTABLE 	R36 R36 K46 ; R36 := R36["controlPointB"]
	222	[5497]	SETLIST  	R34 2 1 ; R34[(1-1)*FPF+i] := R(34+i), 1 <= i <= 2
	223	[5497]	CALL     	R33 2 4 ; R33,R34,R35 := R33(R34)
	224	[5497]	JMP      	242 ; PC := 242
	225	[5498]	GETGLOBAL	R38 K34 ; R38 := 0xa421af95
	226	[5498]	GETTABLE 	R39 R37 K15 ; R39 := R37["position"]
	227	[5498]	GETTABLE 	R39 R39 K47 ; R39 := R39["x"]
	228	[5498]	GETTABLE 	R40 R37 K15 ; R40 := R37["position"]
	229	[5498]	GETTABLE 	R40 R40 K32 ; R40 := R40["y"]
	230	[5498]	LOADK    	R41 := 0.000000
	231	[5498]	CALL     	R38 4 2 ; R38 := R38(R39,R40,R41)
	232	[5498]	MOVE     	R26 R38 ; R26 := R38
	233	[5499]	GETGLOBAL	R38 K48 ; R38 := 0xae2294fa
	234	[5499]	SUB      	R39 R26 R24 ; R39 := R26 - R24
	235	[5499]	CALL     	R38 2 2 ; R38 := R38(R39)
	236	[5499]	LT       	0 R38 K49 ; if R38 >= 0.100000 then PC := 242
	237	[5499]	JMP      	242 ; PC := 242
	238	[5500]	MOVE     	R27 R37 ; R27 := R37
	239	[5501]	GETGLOBAL	R38 K23 ; R38 := mFlatEdges
	240	[5501]	GETTABLE 	R28 R38 R32 ; R28 := R38[R32]
	241	[5502]	JMP      	244 ; PC := 244
	242	[5497]	TFORLOOP 	R33 2 ; R36,R37 := R33(R34,R35); if R36 ~= nil then begin PC = 225; R35 := R36 end
	243	[5503]	JMP      	225 ; PC := 225
	244	[5495]	FORLOOP  	R29 209 ; R29 += R31; if R29 <= R30 then begin PC := 209; R32 := R29 end
	245	[5508]	EQ       	1 R25 R27 ; if R25 == R27 then PC := 279
	246	[5508]	JMP      	279 ; PC := 279
	247	[5509]	GETGLOBAL	R38 K1 ; R38 := 0x7b998233
	248	[5509]	MOVE     	R39 R25 ; R39 := R25
	249	[5509]	CALL     	R38 2 2 ; R38 := R38(R39)
	250	[5509]	TEST     	R38 1 ; if R38 then PC := 261
	251	[5509]	JMP      	261 ; PC := 261
	252	[5510]	GETTABLE 	R38 R25 K50 ; R38 := R25["ringInstance"]
	253	[5510]	SELF     	R38 R38 K51 ; R39 := R38; R38 := R38[0xc2b4e597]
	254	[5510]	GETGLOBAL	R40 K52 ; R40 := 0x60130201
	255	[5510]	LOADK    	R41 := 0.000000
	256	[5510]	LOADK    	R42 := 255.000000
	257	[5510]	LOADK    	R43 := 0.000000
	258	[5510]	LOADK    	R44 := 255.000000
	259	[5510]	CALL     	R40 5 0 ; R40,... := R40(R41,R42,R43,R44)
	260	[5510]	CALL     	R38 0 1 ; R38(R39,...)
	261	[5512]	GETGLOBAL	R38 K1 ; R38 := 0x7b998233
	262	[5512]	MOVE     	R39 R27 ; R39 := R27
	263	[5512]	CALL     	R38 2 2 ; R38 := R38(R39)
	264	[5512]	TEST     	R38 1 ; if R38 then PC := 275
	265	[5512]	JMP      	275 ; PC := 275
	266	[5513]	GETTABLE 	R38 R27 K50 ; R38 := R27["ringInstance"]
	267	[5513]	SELF     	R38 R38 K51 ; R39 := R38; R38 := R38[0xc2b4e597]
	268	[5513]	GETGLOBAL	R40 K52 ; R40 := 0x60130201
	269	[5513]	LOADK    	R41 := 0.000000
	270	[5513]	LOADK    	R42 := 0.000000
	271	[5513]	LOADK    	R43 := 255.000000
	272	[5513]	LOADK    	R44 := 255.000000
	273	[5513]	CALL     	R40 5 0 ; R40,... := R40(R41,R42,R43,R44)
	274	[5513]	CALL     	R38 0 1 ; R38(R39,...)
	275	[5515]	GETUPVAL 	R38 U2 ; R38 := U2
	276	[5515]	SETTABLE 	R38 K43 R27 ; R38["mMovingControlPoint"] := R27
	277	[5516]	GETUPVAL 	R38 U2 ; R38 := U2
	278	[5516]	SETTABLE 	R38 K53 R28 ; R38["mEditingEdge"] := R28
	279	[5520]	GETGLOBAL	R38 K1 ; R38 := 0x7b998233
	280	[5520]	GETUPVAL 	R39 U2 ; R39 := U2
	281	[5520]	GETTABLE 	R39 R39 K43 ; R39 := R39["mMovingControlPoint"]
	282	[5520]	CALL     	R38 2 2 ; R38 := R38(R39)
	283	[5520]	TEST     	R38 1 ; if R38 then PC := 338
	284	[5520]	JMP      	338 ; PC := 338
	285	[5520]	GETUPVAL 	R38 U2 ; R38 := U2
	286	[5520]	GETTABLE 	R38 R38 K42 ; R38 := R38["mControlPointHeld"]
	287	[5520]	TEST     	R38 0 ; if not R38 then PC := 338
	288	[5520]	JMP      	338 ; PC := 338
	289	[5521]	GETUPVAL 	R38 U2 ; R38 := U2
	290	[5521]	GETTABLE 	R38 R38 K43 ; R38 := R38["mMovingControlPoint"]
	291	[5521]	GETTABLE 	R38 R38 K15 ; R38 := R38["position"]
	292	[5521]	GETTABLE 	R38 R38 K5 ; R38 := R38["z"]
	293	[5522]	GETUPVAL 	R39 U2 ; R39 := U2
	294	[5522]	GETTABLE 	R39 R39 K3 ; R39 := R39["mInitialWorldCursor"]
	295	[5522]	SUB      	R39 R24 R39 ; R39 := R24 - R39
	296	[5523]	GETUPVAL 	R40 U2 ; R40 := U2
	297	[5523]	GETTABLE 	R40 R40 K4 ; R40 := R40["mInitialPosition"]
	298	[5523]	ADD      	R40 R40 R39 ; R40 := R40 + R39
	299	[5524]	SETTABLE 	R40 K5 R38 ; R40["z"] := R38
	300	[5525]	GETUPVAL 	R41 U2 ; R41 := U2
	301	[5525]	GETTABLE 	R41 R41 K43 ; R41 := R41["mMovingControlPoint"]
	302	[5525]	SETTABLE 	R41 K15 R40 ; R41["position"] := R40
	303	[5526]	GETUPVAL 	R41 U11 ; R41 := U11
	304	[5526]	GETUPVAL 	R42 U2 ; R42 := U2
	305	[5526]	GETTABLE 	R42 R42 K53 ; R42 := R42["mEditingEdge"]
	306	[5526]	CALL     	R41 2 2 ; R41 := R41(R42)
	307	[5527]	GETUPVAL 	R42 U2 ; R42 := U2
	308	[5527]	GETTABLE 	R42 R42 K53 ; R42 := R42["mEditingEdge"]
	309	[5527]	GETTABLE 	R42 R42 K54 ; R42 := R42["Instance"]
	310	[5527]	SELF     	R42 R42 K55 ; R43 := R42; R42 := R42[0x7ceafc23]
	311	[5527]	MOVE     	R44 R41 ; R44 := R41
	312	[5527]	CALL     	R42 3 1 ; R42(R43,R44)
	313	[5529]	GETUPVAL 	R42 U2 ; R42 := U2
	314	[5529]	GETTABLE 	R42 R42 K43 ; R42 := R42["mMovingControlPoint"]
	315	[5529]	GETTABLE 	R42 R42 K50 ; R42 := R42["ringInstance"]
	316	[5529]	SELF     	R42 R42 K8 ; R43 := R42; R42 := R42[0x9307aa51]
	317	[5529]	MOVE     	R44 R40 ; R44 := R40
	318	[5529]	CALL     	R42 3 1 ; R42(R43,R44)
	319	[5531]	GETGLOBAL	R42 K9 ; R42 := mRadialSolarMap
	320	[5531]	SELF     	R42 R42 K56 ; R43 := R42; R42 := R42[0x3b2960bd]
	321	[5531]	GETUPVAL 	R44 U2 ; R44 := U2
	322	[5531]	GETTABLE 	R44 R44 K53 ; R44 := R44["mEditingEdge"]
	323	[5531]	GETTABLE 	R44 R44 K39 ; R44 := R44["NodeA"]
	324	[5531]	GETTABLE 	R44 R44 K18 ; R44 := R44["radialSector"]
	325	[5531]	GETUPVAL 	R45 U2 ; R45 := U2
	326	[5531]	GETTABLE 	R45 R45 K53 ; R45 := R45["mEditingEdge"]
	327	[5531]	GETTABLE 	R45 R45 K40 ; R45 := R45["NodeB"]
	328	[5531]	GETTABLE 	R45 R45 K18 ; R45 := R45["radialSector"]
	329	[5531]	GETUPVAL 	R46 U2 ; R46 := U2
	330	[5531]	GETTABLE 	R46 R46 K53 ; R46 := R46["mEditingEdge"]
	331	[5531]	GETTABLE 	R46 R46 K45 ; R46 := R46["controlPointA"]
	332	[5531]	GETTABLE 	R46 R46 K15 ; R46 := R46["position"]
	333	[5531]	GETUPVAL 	R47 U2 ; R47 := U2
	334	[5531]	GETTABLE 	R47 R47 K53 ; R47 := R47["mEditingEdge"]
	335	[5531]	GETTABLE 	R47 R47 K46 ; R47 := R47["controlPointB"]
	336	[5531]	GETTABLE 	R47 R47 K15 ; R47 := R47["position"]
	337	[5531]	CALL     	R42 6 1 ; R42(R43,R44,R45,R46,R47)
	338	[5535]	GETUPVAL 	R42 U0 ; R42 := U0
	339	[5535]	GETUPVAL 	R43 U1 ; R43 := U1
	340	[5535]	GETTABLE 	R43 R43 K57 ; R43 := R43["EDIT_NODE_DECOS"]
	341	[5535]	EQ       	0 R42 R43 ; if R42 ~= R43 then PC := 552
	342	[5535]	JMP      	552 ; PC := 552
	343	[5535]	GETGLOBAL	R42 K1 ; R42 := 0x7b998233
	344	[5535]	GETUPVAL 	R43 U2 ; R43 := U2
	345	[5535]	GETTABLE 	R43 R43 K25 ; R43 := R43["mMovingNode"]
	346	[5535]	CALL     	R42 2 2 ; R42 := R42(R43)
	347	[5535]	TEST     	R42 1 ; if R42 then PC := 552
	348	[5535]	JMP      	552 ; PC := 552
	349	[5536]	GETUPVAL 	R42 U2 ; R42 := U2
	350	[5536]	GETTABLE 	R42 R42 K58 ; R42 := R42["mEditingOffset"]
	351	[5536]	TEST     	R42 0 ; if not R42 then PC := 383
	352	[5536]	JMP      	383 ; PC := 383
	353	[5537]	GETUPVAL 	R42 U3 ; R42 := U3
	354	[5537]	CALL     	R42 1 2 ; R42 := R42()
	355	[5538]	GETUPVAL 	R43 U2 ; R43 := U2
	356	[5538]	GETTABLE 	R43 R43 K3 ; R43 := R43["mInitialWorldCursor"]
	357	[5538]	SUB      	R43 R42 R43 ; R43 := R42 - R43
	358	[5539]	GETUPVAL 	R44 U2 ; R44 := U2
	359	[5539]	GETTABLE 	R44 R44 K4 ; R44 := R44["mInitialPosition"]
	360	[5539]	ADD      	R44 R44 R43 ; R44 := R44 + R43
	361	[5541]	GETUPVAL 	R45 U2 ; R45 := U2
	362	[5541]	GETTABLE 	R45 R45 K25 ; R45 := R45["mMovingNode"]
	363	[5541]	GETTABLE 	R45 R45 K19 ; R45 := R45["deco"]
	364	[5541]	SETTABLE 	R45 K22 R44 ; R45["mOffset"] := R44
	365	[5542]	GETUPVAL 	R45 U2 ; R45 := U2
	366	[5542]	GETTABLE 	R45 R45 K25 ; R45 := R45["mMovingNode"]
	367	[5542]	GETTABLE 	R45 R45 K19 ; R45 := R45["deco"]
	368	[5542]	GETTABLE 	R45 R45 K21 ; R45 := R45["mInstance"]
	369	[5542]	SELF     	R45 R45 K8 ; R46 := R45; R45 := R45[0x9307aa51]
	370	[5542]	GETUPVAL 	R47 U2 ; R47 := U2
	371	[5542]	GETTABLE 	R47 R47 K25 ; R47 := R47["mMovingNode"]
	372	[5542]	GETTABLE 	R47 R47 K15 ; R47 := R47["position"]
	373	[5542]	ADD      	R47 R47 R44 ; R47 := R47 + R44
	374	[5542]	CALL     	R45 3 1 ; R45(R46,R47)
	375	[5543]	GETGLOBAL	R45 K9 ; R45 := mRadialSolarMap
	376	[5543]	SELF     	R45 R45 K59 ; R46 := R45; R45 := R45[0xe754ade0]
	377	[5543]	GETUPVAL 	R47 U2 ; R47 := U2
	378	[5543]	GETTABLE 	R47 R47 K25 ; R47 := R47["mMovingNode"]
	379	[5543]	GETTABLE 	R47 R47 K18 ; R47 := R47["radialSector"]
	380	[5543]	MOVE     	R48 R44 ; R48 := R44
	381	[5543]	CALL     	R45 4 1 ; R45(R46,R47,R48)
	382	[5543]	JMP      	548 ; PC := 548
	383	[5544]	GETUPVAL 	R45 U2 ; R45 := U2
	384	[5544]	GETTABLE 	R45 R45 K60 ; R45 := R45["mEditingRotation"]
	385	[5544]	TEST     	R45 0 ; if not R45 then PC := 474
	386	[5544]	JMP      	474 ; PC := 474
	387	[5545]	GETUPVAL 	R45 U9 ; R45 := U9
	388	[5545]	GETTABLE 	R45 R45 K30 ; R45 := R45[0xfa9785e4]
	389	[5545]	GETGLOBAL	R46 K31 ; R46 := 0xae91e43b
	390	[5545]	CALL     	R45 2 2 ; R45 := R45(R46)
	391	[5546]	GETTABLE 	R46 R45 K47 ; R46 := R45["x"]
	392	[5546]	GETUPVAL 	R47 U2 ; R47 := U2
	393	[5546]	GETTABLE 	R47 R47 K33 ; R47 := R47["mInitialMousePosition"]
	394	[5546]	GETTABLE 	R47 R47 K47 ; R47 := R47["x"]
	395	[5546]	SUB      	R46 R46 R47 ; R46 := R46 - R47
	396	[5547]	GETTABLE 	R47 R45 K32 ; R47 := R45["y"]
	397	[5547]	GETUPVAL 	R48 U2 ; R48 := U2
	398	[5547]	GETTABLE 	R48 R48 K33 ; R48 := R48["mInitialMousePosition"]
	399	[5547]	GETTABLE 	R48 R48 K32 ; R48 := R48["y"]
	400	[5547]	SUB      	R47 R47 R48 ; R47 := R47 - R48
	401	[5548]	LOADNIL  	R48 R48 ; R48 := nil
	402	[5549]	GETUPVAL 	R49 U2 ; R49 := U2
	403	[5549]	GETTABLE 	R49 R49 K61 ; R49 := R49["mRotationAxis"]
	404	[5549]	EQ       	0 R49 K62 ; if R49 ~= "heading" then PC := 420
	405	[5549]	JMP      	420 ; PC := 420
	406	[5550]	GETGLOBAL	R49 K63 ; R49 := 0x00046924
	407	[5550]	GETUPVAL 	R50 U2 ; R50 := U2
	408	[5550]	GETTABLE 	R50 R50 K64 ; R50 := R50["mInitialRotation"]
	409	[5550]	GETTABLE 	R50 R50 K62 ; R50 := R50["heading"]
	410	[5550]	ADD      	R50 R50 R46 ; R50 := R50 + R46
	411	[5550]	GETUPVAL 	R51 U2 ; R51 := U2
	412	[5550]	GETTABLE 	R51 R51 K64 ; R51 := R51["mInitialRotation"]
	413	[5550]	GETTABLE 	R51 R51 K65 ; R51 := R51["pitch"]
	414	[5550]	GETUPVAL 	R52 U2 ; R52 := U2
	415	[5550]	GETTABLE 	R52 R52 K64 ; R52 := R52["mInitialRotation"]
	416	[5550]	GETTABLE 	R52 R52 K66 ; R52 := R52["bank"]
	417	[5550]	CALL     	R49 4 2 ; R49 := R49(R50,R51,R52)
	418	[5550]	MOVE     	R48 R49 ; R48 := R49
	419	[5550]	JMP      	455 ; PC := 455
	420	[5551]	GETUPVAL 	R49 U2 ; R49 := U2
	421	[5551]	GETTABLE 	R49 R49 K61 ; R49 := R49["mRotationAxis"]
	422	[5551]	EQ       	0 R49 K65 ; if R49 ~= "pitch" then PC := 438
	423	[5551]	JMP      	438 ; PC := 438
	424	[5552]	GETGLOBAL	R49 K63 ; R49 := 0x00046924
	425	[5552]	GETUPVAL 	R50 U2 ; R50 := U2
	426	[5552]	GETTABLE 	R50 R50 K64 ; R50 := R50["mInitialRotation"]
	427	[5552]	GETTABLE 	R50 R50 K62 ; R50 := R50["heading"]
	428	[5552]	GETUPVAL 	R51 U2 ; R51 := U2
	429	[5552]	GETTABLE 	R51 R51 K64 ; R51 := R51["mInitialRotation"]
	430	[5552]	GETTABLE 	R51 R51 K65 ; R51 := R51["pitch"]
	431	[5552]	ADD      	R51 R51 R47 ; R51 := R51 + R47
	432	[5552]	GETUPVAL 	R52 U2 ; R52 := U2
	433	[5552]	GETTABLE 	R52 R52 K64 ; R52 := R52["mInitialRotation"]
	434	[5552]	GETTABLE 	R52 R52 K66 ; R52 := R52["bank"]
	435	[5552]	CALL     	R49 4 2 ; R49 := R49(R50,R51,R52)
	436	[5552]	MOVE     	R48 R49 ; R48 := R49
	437	[5552]	JMP      	455 ; PC := 455
	438	[5553]	GETUPVAL 	R49 U2 ; R49 := U2
	439	[5553]	GETTABLE 	R49 R49 K61 ; R49 := R49["mRotationAxis"]
	440	[5553]	EQ       	0 R49 K66 ; if R49 ~= "bank" then PC := 455
	441	[5553]	JMP      	455 ; PC := 455
	442	[5554]	GETGLOBAL	R49 K63 ; R49 := 0x00046924
	443	[5554]	GETUPVAL 	R50 U2 ; R50 := U2
	444	[5554]	GETTABLE 	R50 R50 K64 ; R50 := R50["mInitialRotation"]
	445	[5554]	GETTABLE 	R50 R50 K62 ; R50 := R50["heading"]
	446	[5554]	GETUPVAL 	R51 U2 ; R51 := U2
	447	[5554]	GETTABLE 	R51 R51 K64 ; R51 := R51["mInitialRotation"]
	448	[5554]	GETTABLE 	R51 R51 K65 ; R51 := R51["pitch"]
	449	[5554]	GETUPVAL 	R52 U2 ; R52 := U2
	450	[5554]	GETTABLE 	R52 R52 K64 ; R52 := R52["mInitialRotation"]
	451	[5554]	GETTABLE 	R52 R52 K66 ; R52 := R52["bank"]
	452	[5554]	ADD      	R52 R52 R46 ; R52 := R52 + R46
	453	[5554]	CALL     	R49 4 2 ; R49 := R49(R50,R51,R52)
	454	[5554]	MOVE     	R48 R49 ; R48 := R49
	455	[5557]	GETUPVAL 	R49 U2 ; R49 := U2
	456	[5557]	GETTABLE 	R49 R49 K25 ; R49 := R49["mMovingNode"]
	457	[5557]	GETTABLE 	R49 R49 K19 ; R49 := R49["deco"]
	458	[5557]	SETTABLE 	R49 K67 R48 ; R49["mRotation"] := R48
	459	[5558]	GETUPVAL 	R49 U2 ; R49 := U2
	460	[5558]	GETTABLE 	R49 R49 K25 ; R49 := R49["mMovingNode"]
	461	[5558]	GETTABLE 	R49 R49 K19 ; R49 := R49["deco"]
	462	[5558]	GETTABLE 	R49 R49 K21 ; R49 := R49["mInstance"]
	463	[5558]	SELF     	R49 R49 K68 ; R50 := R49; R49 := R49[0x70b8836c]
	464	[5558]	MOVE     	R51 R48 ; R51 := R48
	465	[5558]	CALL     	R49 3 1 ; R49(R50,R51)
	466	[5559]	GETGLOBAL	R49 K9 ; R49 := mRadialSolarMap
	467	[5559]	SELF     	R49 R49 K69 ; R50 := R49; R49 := R49[0x8929c50d]
	468	[5559]	GETUPVAL 	R51 U2 ; R51 := U2
	469	[5559]	GETTABLE 	R51 R51 K25 ; R51 := R51["mMovingNode"]
	470	[5559]	GETTABLE 	R51 R51 K18 ; R51 := R51["radialSector"]
	471	[5559]	MOVE     	R52 R48 ; R52 := R48
	472	[5559]	CALL     	R49 4 1 ; R49(R50,R51,R52)
	473	[5559]	JMP      	548 ; PC := 548
	474	[5560]	GETUPVAL 	R49 U2 ; R49 := U2
	475	[5560]	GETTABLE 	R49 R49 K70 ; R49 := R49["mEditingScale"]
	476	[5560]	TEST     	R49 0 ; if not R49 then PC := 548
	477	[5560]	JMP      	548 ; PC := 548
	478	[5561]	GETUPVAL 	R49 U9 ; R49 := U9
	479	[5561]	GETTABLE 	R49 R49 K30 ; R49 := R49[0xfa9785e4]
	480	[5561]	GETGLOBAL	R50 K31 ; R50 := 0xae91e43b
	481	[5561]	CALL     	R49 2 2 ; R49 := R49(R50)
	482	[5562]	GETGLOBAL	R50 K71 ; R50 := 0x03ea2485
	483	[5562]	MOVE     	R51 R49 ; R51 := R49
	484	[5562]	GETUPVAL 	R52 U2 ; R52 := U2
	485	[5562]	GETTABLE 	R52 R52 K33 ; R52 := R52["mInitialMousePosition"]
	486	[5562]	CALL     	R50 3 2 ; R50 := R50(R51,R52)
	487	[5563]	GETTABLE 	R51 R49 K32 ; R51 := R49["y"]
	488	[5563]	GETUPVAL 	R52 U2 ; R52 := U2
	489	[5563]	GETTABLE 	R52 R52 K33 ; R52 := R52["mInitialMousePosition"]
	490	[5563]	GETTABLE 	R52 R52 K32 ; R52 := R52["y"]
	491	[5563]	LT       	1 R52 R51 ; if R52 < R51 then PC := 494
	492	[5563]	JMP      	494 ; PC := 494
	493	[5563]	OP_LOADBOOL	R51 0 1 ; R51 := false; PC := 494
	494	[5563]	OP_LOADBOOL	R51 1 0 ; R51 := true
	495	[5564]	DIV      	R52 R50 K72 ; R52 := R50 / 200.000000
	496	[5564]	GETUPVAL 	R53 U9 ; R53 := U9
	497	[5564]	GETTABLE 	R53 R53 K73 ; R53 := R53[0x06d055f9]
	498	[5564]	MOVE     	R54 R51 ; R54 := R51
	499	[5564]	LOADK    	R55 := 1.000000
	500	[5564]	LOADK    	R56 := -1.000000
	501	[5564]	CALL     	R53 4 2 ; R53 := R53(R54,R55,R56)
	502	[5564]	MUL      	R52 R52 R53 ; R52 := R52 * R53
	503	[5565]	GETGLOBAL	R53 K74 ; R53 := 0x42dcc9f5
	504	[5565]	GETUPVAL 	R54 U2 ; R54 := U2
	505	[5565]	GETTABLE 	R54 R54 K75 ; R54 := R54["mInitialScale"]
	506	[5565]	SUB      	R55 K76 R52 ; R55 := 1.000000 - R52
	507	[5565]	MUL      	R54 R54 R55 ; R54 := R54 * R55
	508	[5565]	LOADK    	R55 K77 ; R55 := 0.000010
	509	[5565]	LOADK    	R56 := 10.000000
	510	[5565]	CALL     	R53 4 2 ; R53 := R53(R54,R55,R56)
	511	[5567]	GETUPVAL 	R54 U2 ; R54 := U2
	512	[5567]	GETTABLE 	R54 R54 K25 ; R54 := R54["mMovingNode"]
	513	[5567]	GETTABLE 	R54 R54 K19 ; R54 := R54["deco"]
	514	[5567]	SETTABLE 	R54 K78 R53 ; R54["mScale"] := R53
	515	[5568]	GETUPVAL 	R54 U2 ; R54 := U2
	516	[5568]	GETTABLE 	R54 R54 K25 ; R54 := R54["mMovingNode"]
	517	[5568]	GETTABLE 	R54 R54 K19 ; R54 := R54["deco"]
	518	[5568]	GETTABLE 	R54 R54 K21 ; R54 := R54["mInstance"]
	519	[5568]	SELF     	R54 R54 K79 ; R55 := R54; R54 := R54[0x2d9ba74f]
	520	[5568]	GETUPVAL 	R56 U12 ; R56 := U12
	521	[5568]	GETTABLE 	R56 R56 K80 ; R56 := R56["DECO_SCALE_MULTIPLIER"]
	522	[5568]	MUL      	R56 R53 R56 ; R56 := R53 * R56
	523	[5568]	OP_LOADBOOL	R57 1 0 ; R57 := true
	524	[5568]	CALL     	R54 4 1 ; R54(R55,R56,R57)
	525	[5569]	GETGLOBAL	R54 K9 ; R54 := mRadialSolarMap
	526	[5569]	SELF     	R54 R54 K81 ; R55 := R54; R54 := R54[0x50f6b4e4]
	527	[5569]	GETUPVAL 	R56 U2 ; R56 := U2
	528	[5569]	GETTABLE 	R56 R56 K25 ; R56 := R56["mMovingNode"]
	529	[5569]	GETTABLE 	R56 R56 K18 ; R56 := R56["radialSector"]
	530	[5569]	MOVE     	R57 R53 ; R57 := R53
	531	[5569]	CALL     	R54 4 1 ; R54(R55,R56,R57)
	532	[5570]	GETUPVAL 	R54 U2 ; R54 := U2
	533	[5570]	GETTABLE 	R54 R54 K25 ; R54 := R54["mMovingNode"]
	534	[5570]	GETTABLE 	R54 R54 K19 ; R54 := R54["deco"]
	535	[5570]	GETTABLE 	R54 R54 K21 ; R54 := R54["mInstance"]
	536	[5570]	SELF     	R54 R54 K82 ; R55 := R54; R54 := R54[0x905bb2bd]
	537	[5570]	CALL     	R54 2 2 ; R54 := R54(R55)
	538	[5572]	LOADK    	R55 := 1.000000
	539	[5572]	LEN      	R56 R54 ; R56 := # R54
	540	[5572]	LOADK    	R57 := 1.000000
	541	[5572]	FORPREP  	R55 547 ; R55 -= R57; PC := 547
	542	[5573]	GETTABLE 	R59 R54 R58 ; R59 := R54[R58]
	543	[5573]	SELF     	R59 R59 K79 ; R60 := R59; R59 := R59[0x2d9ba74f]
	544	[5573]	LOADK    	R61 := 1.000000
	545	[5573]	OP_LOADBOOL	R62 1 0 ; R62 := true
	546	[5573]	CALL     	R59 4 1 ; R59(R60,R61,R62)
	547	[5572]	FORLOOP  	R55 542 ; R55 += R57; if R55 <= R56 then begin PC := 542; R58 := R55 end
	548	[5576]	GETUPVAL 	R59 U10 ; R59 := U10
	549	[5576]	GETUPVAL 	R60 U2 ; R60 := U2
	550	[5576]	GETTABLE 	R60 R60 K25 ; R60 := R60["mMovingNode"]
	551	[5576]	CALL     	R59 2 1 ; R59(R60)
	552	[5579]	GETGLOBAL	R59 K83 ; R59 := mDrag
	553	[5579]	TEST     	R59 1 ; if R59 then PC := 556
	554	[5579]	JMP      	556 ; PC := 556
	555	[5580]	RETURN   	R0 1 ; return 
	556	[5583]	GETGLOBAL	R59 K84 ; R59 := _T
	557	[5583]	GETTABLE 	R59 R59 K85 ; R59 := R59["MouseInWorldStateWindow"]
	558	[5583]	TEST     	R59 1 ; if R59 then PC := 564
	559	[5583]	JMP      	564 ; PC := 564
	560	[5583]	GETGLOBAL	R59 K84 ; R59 := _T
	561	[5583]	GETTABLE 	R59 R59 K86 ; R59 := R59["MouseInChatArea"]
	562	[5583]	TEST     	R59 0 ; if not R59 then PC := 571
	563	[5583]	JMP      	571 ; PC := 571
	564	[5584]	GETGLOBAL	R59 K83 ; R59 := mDrag
	565	[5584]	GETTABLE 	R59 R59 K87 ; R59 := R59["mDragging"]
	566	[5584]	TEST     	R59 0 ; if not R59 then PC := 571
	567	[5584]	JMP      	571 ; PC := 571
	568	[5585]	GETGLOBAL	R59 K83 ; R59 := mDrag
	569	[5585]	SELF     	R59 R59 K88 ; R60 := R59; R59 := R59[0xcc5f3150]
	570	[5585]	CALL     	R59 2 1 ; R59(R60)
	571	[5589]	GETGLOBAL	R59 K89 ; R59 := 0x67652851
	572	[5589]	CALL     	R59 1 2 ; R59 := R59()
	573	[5590]	GETGLOBAL	R60 K83 ; R60 := mDrag
	574	[5590]	SELF     	R60 R60 K90 ; R61 := R60; R60 := R60[0xfaa69527]
	575	[5590]	MOVE     	R62 R59 ; R62 := R59
	576	[5590]	CALL     	R60 3 1 ; R60(R61,R62)
	577	[5592]	GETGLOBAL	R60 K83 ; R60 := mDrag
	578	[5592]	GETTABLE 	R60 R60 K91 ; R60 := R60["mCurrentScroll"]
	579	[5592]	GETTABLE 	R60 R60 K47 ; R60 := R60["x"]
	580	[5593]	GETGLOBAL	R61 K83 ; R61 := mDrag
	581	[5593]	GETTABLE 	R61 R61 K91 ; R61 := R61["mCurrentScroll"]
	582	[5593]	GETTABLE 	R61 R61 K32 ; R61 := R61["y"]
	583	[5595]	GETGLOBAL	R62 K92 ; R62 := mRailJack
	584	[5595]	GETTABLE 	R62 R62 K93 ; R62 := R62["Active"]
	585	[5595]	TEST     	R62 0 ; if not R62 then PC := 632
	586	[5595]	JMP      	632 ; PC := 632
	587	[5596]	GETUPVAL 	R62 U9 ; R62 := U9
	588	[5596]	GETTABLE 	R62 R62 K94 ; R62 := R62[0x44537adf]
	589	[5596]	GETGLOBAL	R63 K31 ; R63 := 0xae91e43b
	590	[5596]	CALL     	R62 2 3 ; R62,R63 := R62(R63)
	591	[5598]	GETGLOBAL	R64 K74 ; R64 := 0x42dcc9f5
	592	[5598]	GETGLOBAL	R65 K31 ; R65 := 0xae91e43b
	593	[5598]	SELF     	R65 R65 K95 ; R66 := R65; R65 := R65[0x906faf80]
	594	[5598]	CALL     	R65 2 2 ; R65 := R65(R66)
	595	[5598]	LOADK    	R66 := 0.000000
	596	[5598]	MOVE     	R67 R62 ; R67 := R62
	597	[5598]	CALL     	R64 4 2 ; R64 := R64(R65,R66,R67)
	598	[5598]	DIV      	R65 R62 K96 ; R65 := R62 / 2.000000
	599	[5598]	SUB      	R64 R64 R65 ; R64 := R64 - R65
	600	[5599]	GETGLOBAL	R65 K74 ; R65 := 0x42dcc9f5
	601	[5599]	GETGLOBAL	R66 K31 ; R66 := 0xae91e43b
	602	[5599]	SELF     	R66 R66 K97 ; R67 := R66; R66 := R66[0x916fb113]
	603	[5599]	CALL     	R66 2 2 ; R66 := R66(R67)
	604	[5599]	LOADK    	R67 := 0.000000
	605	[5599]	MOVE     	R68 R63 ; R68 := R63
	606	[5599]	CALL     	R65 4 2 ; R65 := R65(R66,R67,R68)
	607	[5599]	DIV      	R66 R63 K96 ; R66 := R63 / 2.000000
	608	[5599]	SUB      	R65 R65 R66 ; R65 := R65 - R66
	609	[5600]	GETGLOBAL	R66 K74 ; R66 := 0x42dcc9f5
	610	[5600]	DIV      	R67 R64 R62 ; R67 := R64 / R62
	611	[5600]	LOADK    	R68 := -1.000000
	612	[5600]	LOADK    	R69 := 1.000000
	613	[5600]	CALL     	R66 4 2 ; R66 := R66(R67,R68,R69)
	614	[5600]	UNM      	R64 R66 ; R64 := ^ R66
	615	[5601]	GETGLOBAL	R66 K74 ; R66 := 0x42dcc9f5
	616	[5601]	DIV      	R67 R65 R63 ; R67 := R65 / R63
	617	[5601]	LOADK    	R68 := -1.000000
	618	[5601]	LOADK    	R69 := 1.000000
	619	[5601]	CALL     	R66 4 2 ; R66 := R66(R67,R68,R69)
	620	[5601]	UNM      	R65 R66 ; R65 := ^ R66
	621	[5603]	GETGLOBAL	R66 K98 ; R66 := mSmoothX
	622	[5603]	SELF     	R66 R66 K99 ; R67 := R66; R66 := R66[0x188e2bee]
	623	[5603]	MUL      	R68 R64 K100 ; R68 := R64 * -0.004000
	624	[5603]	ADD      	R68 R60 R68 ; R68 := R60 + R68
	625	[5603]	CALL     	R66 3 1 ; R66(R67,R68)
	626	[5604]	GETGLOBAL	R66 K101 ; R66 := mSmoothY
	627	[5604]	SELF     	R66 R66 K99 ; R67 := R66; R66 := R66[0x188e2bee]
	628	[5604]	MUL      	R68 R65 K102 ; R68 := R65 * -0.003000
	629	[5604]	ADD      	R68 R61 R68 ; R68 := R61 + R68
	630	[5604]	CALL     	R66 3 1 ; R66(R67,R68)
	631	[5604]	JMP      	640 ; PC := 640
	632	[5606]	GETGLOBAL	R66 K98 ; R66 := mSmoothX
	633	[5606]	SELF     	R66 R66 K99 ; R67 := R66; R66 := R66[0x188e2bee]
	634	[5606]	MOVE     	R68 R60 ; R68 := R60
	635	[5606]	CALL     	R66 3 1 ; R66(R67,R68)
	636	[5607]	GETGLOBAL	R66 K101 ; R66 := mSmoothY
	637	[5607]	SELF     	R66 R66 K99 ; R67 := R66; R66 := R66[0x188e2bee]
	638	[5607]	MOVE     	R68 R61 ; R68 := R61
	639	[5607]	CALL     	R66 3 1 ; R66(R67,R68)
	640	[5609]	GETGLOBAL	R66 K98 ; R66 := mSmoothX
	641	[5609]	GETTABLE 	R66 R66 K103 ; R66 := R66["mCurVal"]
	642	[5610]	GETGLOBAL	R67 K101 ; R67 := mSmoothY
	643	[5610]	GETTABLE 	R67 R67 K103 ; R67 := R67["mCurVal"]
	644	[5611]	GETGLOBAL	R68 K98 ; R68 := mSmoothX
	645	[5611]	SELF     	R68 R68 K90 ; R69 := R68; R68 := R68[0xfaa69527]
	646	[5611]	MOVE     	R70 R59 ; R70 := R59
	647	[5611]	CALL     	R68 3 1 ; R68(R69,R70)
	648	[5612]	GETGLOBAL	R68 K101 ; R68 := mSmoothY
	649	[5612]	SELF     	R68 R68 K90 ; R69 := R68; R68 := R68[0xfaa69527]
	650	[5612]	MOVE     	R70 R59 ; R70 := R59
	651	[5612]	CALL     	R68 3 1 ; R68(R69,R70)
	652	[5614]	GETGLOBAL	R68 K104 ; R68 := 0x5bced4c4
	653	[5614]	GETTABLE 	R68 R68 K105 ; R68 := R68[0xe4a5b3ca]
	654	[5614]	GETGLOBAL	R69 K98 ; R69 := mSmoothX
	655	[5614]	GETTABLE 	R69 R69 K106 ; R69 := R69["mTargetVal"]
	656	[5614]	SUB      	R69 R66 R69 ; R69 := R66 - R69
	657	[5614]	CALL     	R68 2 2 ; R68 := R68(R69)
	658	[5614]	LT       	1 K107 R68 ; if 0.000005 < R68 then PC := 661
	659	[5614]	JMP      	661 ; PC := 661
	660	[5614]	OP_LOADBOOL	R68 0 1 ; R68 := false; PC := 661
	661	[5614]	OP_LOADBOOL	R68 1 0 ; R68 := true
	662	[5615]	TEST     	R68 1 ; if R68 then PC := 675
	663	[5615]	JMP      	675 ; PC := 675
	664	[5615]	GETGLOBAL	R69 K98 ; R69 := mSmoothX
	665	[5615]	GETTABLE 	R69 R69 K103 ; R69 := R69["mCurVal"]
	666	[5615]	GETGLOBAL	R70 K98 ; R70 := mSmoothX
	667	[5615]	GETTABLE 	R70 R70 K106 ; R70 := R70["mTargetVal"]
	668	[5615]	EQ       	1 R69 R70 ; if R69 == R70 then PC := 675
	669	[5615]	JMP      	675 ; PC := 675
	670	[5616]	GETGLOBAL	R69 K98 ; R69 := mSmoothX
	671	[5616]	SELF     	R69 R69 K108 ; R70 := R69; R69 := R69[0xd0f998cd]
	672	[5616]	GETGLOBAL	R71 K98 ; R71 := mSmoothX
	673	[5616]	GETTABLE 	R71 R71 K106 ; R71 := R71["mTargetVal"]
	674	[5616]	CALL     	R69 3 1 ; R69(R70,R71)
	675	[5618]	GETGLOBAL	R69 K104 ; R69 := 0x5bced4c4
	676	[5618]	GETTABLE 	R69 R69 K105 ; R69 := R69[0xe4a5b3ca]
	677	[5618]	GETGLOBAL	R70 K101 ; R70 := mSmoothY
	678	[5618]	GETTABLE 	R70 R70 K106 ; R70 := R70["mTargetVal"]
	679	[5618]	SUB      	R70 R67 R70 ; R70 := R67 - R70
	680	[5618]	CALL     	R69 2 2 ; R69 := R69(R70)
	681	[5618]	LT       	1 K107 R69 ; if 0.000005 < R69 then PC := 684
	682	[5618]	JMP      	684 ; PC := 684
	683	[5618]	OP_LOADBOOL	R69 0 1 ; R69 := false; PC := 684
	684	[5618]	OP_LOADBOOL	R69 1 0 ; R69 := true
	685	[5619]	TEST     	R69 1 ; if R69 then PC := 698
	686	[5619]	JMP      	698 ; PC := 698
	687	[5619]	GETGLOBAL	R70 K101 ; R70 := mSmoothY
	688	[5619]	GETTABLE 	R70 R70 K103 ; R70 := R70["mCurVal"]
	689	[5619]	GETGLOBAL	R71 K101 ; R71 := mSmoothY
	690	[5619]	GETTABLE 	R71 R71 K106 ; R71 := R71["mTargetVal"]
	691	[5619]	EQ       	1 R70 R71 ; if R70 == R71 then PC := 698
	692	[5619]	JMP      	698 ; PC := 698
	693	[5620]	GETGLOBAL	R70 K101 ; R70 := mSmoothY
	694	[5620]	SELF     	R70 R70 K108 ; R71 := R70; R70 := R70[0xd0f998cd]
	695	[5620]	GETGLOBAL	R72 K101 ; R72 := mSmoothY
	696	[5620]	GETTABLE 	R72 R72 K106 ; R72 := R72["mTargetVal"]
	697	[5620]	CALL     	R70 3 1 ; R70(R71,R72)
	698	[5623]	GETGLOBAL	R70 K109 ; R70 := mSmoothZoom
	699	[5623]	GETTABLE 	R70 R70 K103 ; R70 := R70["mCurVal"]
	700	[5624]	GETGLOBAL	R71 K109 ; R71 := mSmoothZoom
	701	[5624]	SELF     	R71 R71 K90 ; R72 := R71; R71 := R71[0xfaa69527]
	702	[5624]	MOVE     	R73 R59 ; R73 := R59
	703	[5624]	CALL     	R71 3 1 ; R71(R72,R73)
	704	[5625]	GETGLOBAL	R71 K104 ; R71 := 0x5bced4c4
	705	[5625]	GETTABLE 	R71 R71 K105 ; R71 := R71[0xe4a5b3ca]
	706	[5625]	GETGLOBAL	R72 K109 ; R72 := mSmoothZoom
	707	[5625]	GETTABLE 	R72 R72 K106 ; R72 := R72["mTargetVal"]
	708	[5625]	SUB      	R72 R70 R72 ; R72 := R70 - R72
	709	[5625]	CALL     	R71 2 2 ; R71 := R71(R72)
	710	[5625]	LT       	1 K110 R71 ; if 0.010000 < R71 then PC := 713
	711	[5625]	JMP      	713 ; PC := 713
	712	[5625]	OP_LOADBOOL	R71 0 1 ; R71 := false; PC := 713
	713	[5625]	OP_LOADBOOL	R71 1 0 ; R71 := true
	714	[5626]	TEST     	R71 1 ; if R71 then PC := 727
	715	[5626]	JMP      	727 ; PC := 727
	716	[5626]	GETGLOBAL	R72 K83 ; R72 := mDrag
	717	[5626]	GETTABLE 	R72 R72 K103 ; R72 := R72["mCurVal"]
	718	[5626]	GETGLOBAL	R73 K83 ; R73 := mDrag
	719	[5626]	GETTABLE 	R73 R73 K106 ; R73 := R73["mTargetVal"]
	720	[5626]	EQ       	1 R72 R73 ; if R72 == R73 then PC := 727
	721	[5626]	JMP      	727 ; PC := 727
	722	[5627]	GETGLOBAL	R72 K83 ; R72 := mDrag
	723	[5627]	SELF     	R72 R72 K108 ; R73 := R72; R72 := R72[0xd0f998cd]
	724	[5627]	GETGLOBAL	R74 K83 ; R74 := mDrag
	725	[5627]	GETTABLE 	R74 R74 K106 ; R74 := R74["mTargetVal"]
	726	[5627]	CALL     	R72 3 1 ; R72(R73,R74)
	727	[5629]	GETUPVAL 	R72 U13 ; R72 := U13
	728	[5629]	TEST     	R72 0 ; if not R72 then PC := 736
	729	[5629]	JMP      	736 ; PC := 736
	730	[5629]	TEST     	R71 1 ; if R71 then PC := 736
	731	[5629]	JMP      	736 ; PC := 736
	732	[5630]	GETUPVAL 	R72 U13 ; R72 := U13
	733	[5630]	CALL     	R72 1 1 ; R72()
	734	[5631]	LOADNIL  	R72 R72 ; R72 := nil
	735	[5631]	SETUPVAL 	R72 U13 ; U13 := R72
	736	[5634]	TEST     	R71 0 ; if not R71 then PC := 740
	737	[5634]	JMP      	740 ; PC := 740
	738	[5635]	GETUPVAL 	R72 U14 ; R72 := U14
	739	[5635]	CALL     	R72 1 1 ; R72()
	740	[5638]	GETGLOBAL	R72 K98 ; R72 := mSmoothX
	741	[5638]	SELF     	R72 R72 K111 ; R73 := R72; R72 := R72[0x54ab95f9]
	742	[5638]	CALL     	R72 2 2 ; R72 := R72(R73)
	743	[5638]	MUL      	R72 R72 K96 ; R72 := R72 * 2.000000
	744	[5638]	SUB      	R72 R72 K76 ; R72 := R72 - 1.000000
	745	[5638]	GETGLOBAL	R73 K112 ; R73 := dragScale
	746	[5638]	MUL      	R72 R72 R73 ; R72 := R72 * R73
	747	[5639]	GETGLOBAL	R73 K101 ; R73 := mSmoothY
	748	[5639]	SELF     	R73 R73 K111 ; R74 := R73; R73 := R73[0x54ab95f9]
	749	[5639]	CALL     	R73 2 2 ; R73 := R73(R74)
	750	[5639]	MUL      	R73 R73 K96 ; R73 := R73 * 2.000000
	751	[5639]	SUB      	R73 R73 K76 ; R73 := R73 - 1.000000
	752	[5639]	GETGLOBAL	R74 K112 ; R74 := dragScale
	753	[5639]	UNM      	R74 R74 ; R74 := ^ R74
	754	[5639]	MUL      	R73 R73 R74 ; R73 := R73 * R74
	755	[5641]	GETGLOBAL	R74 K34 ; R74 := 0xa421af95
	756	[5641]	GETUPVAL 	R75 U15 ; R75 := U15
	757	[5641]	GETTABLE 	R75 R75 K113 ; R75 := R75["origFacing"]
	758	[5641]	GETTABLE 	R75 R75 K47 ; R75 := R75["x"]
	759	[5641]	GETUPVAL 	R76 U15 ; R76 := U15
	760	[5641]	GETTABLE 	R76 R76 K113 ; R76 := R76["origFacing"]
	761	[5641]	GETTABLE 	R76 R76 K32 ; R76 := R76["y"]
	762	[5641]	GETUPVAL 	R77 U15 ; R77 := U15
	763	[5641]	GETTABLE 	R77 R77 K113 ; R77 := R77["origFacing"]
	764	[5641]	GETTABLE 	R77 R77 K5 ; R77 := R77["z"]
	765	[5641]	CALL     	R74 4 2 ; R74 := R74(R75,R76,R77)
	766	[5647]	GETGLOBAL	R75 K109 ; R75 := mSmoothZoom
	767	[5647]	SELF     	R75 R75 K111 ; R76 := R75; R75 := R75[0x54ab95f9]
	768	[5647]	CALL     	R75 2 2 ; R75 := R75(R76)
	769	[5647]	MUL      	R75 R74 R75 ; R75 := R74 * R75
	770	[5649]	GETTABLE 	R76 R75 K47 ; R76 := R75["x"]
	771	[5649]	ADD      	R76 R76 R72 ; R76 := R76 + R72
	772	[5649]	SETTABLE 	R75 K47 R76 ; R75["x"] := R76
	773	[5650]	GETTABLE 	R76 R75 K32 ; R76 := R75["y"]
	774	[5650]	ADD      	R76 R76 R73 ; R76 := R76 + R73
	775	[5650]	SETTABLE 	R75 K32 R76 ; R75["y"] := R76
	776	[5666]	LOADK    	R76 K114 ; R76 := -0.200000
	777	[5667]	LOADK    	R77 K115 ; R77 := 0.400000
	778	[5668]	LOADK    	R78 K116 ; R78 := -0.265000
	779	[5669]	GETGLOBAL	R79 K92 ; R79 := mRailJack
	780	[5669]	GETTABLE 	R79 R79 K93 ; R79 := R79["Active"]
	781	[5669]	TEST     	R79 1 ; if R79 then PC := 901
	782	[5669]	JMP      	901 ; PC := 901
	783	[5669]	GETGLOBAL	R79 K117 ; R79 := mPlayerPos
	784	[5669]	GETTABLE 	R79 R79 K118 ; R79 := R79["Region"]
	785	[5669]	GETGLOBAL	R80 K119 ; R80 := mZoomedRegion
	786	[5669]	EQ       	1 R79 R80 ; if R79 == R80 then PC := 901
	787	[5669]	JMP      	901 ; PC := 901
	788	[5669]	GETGLOBAL	R79 K1 ; R79 := 0x7b998233
	789	[5669]	GETUPVAL 	R80 U16 ; R80 := U16
	790	[5669]	CALL     	R79 2 2 ; R79 := R79(R80)
	791	[5669]	TEST     	R79 1 ; if R79 then PC := 901
	792	[5669]	JMP      	901 ; PC := 901
	793	[5669]	GETGLOBAL	R79 K117 ; R79 := mPlayerPos
	794	[5669]	GETTABLE 	R79 R79 K120 ; R79 := R79["Locked"]
	795	[5669]	TEST     	R79 1 ; if R79 then PC := 901
	796	[5669]	JMP      	901 ; PC := 901
	797	[5670]	GETGLOBAL	R79 K117 ; R79 := mPlayerPos
	798	[5670]	GETUPVAL 	R80 U16 ; R80 := U16
	799	[5670]	SELF     	R80 R80 K38 ; R81 := R80; R80 := R80[0xd1586535]
	800	[5670]	CALL     	R80 2 2 ; R80 := R80(R81)
	801	[5670]	SETTABLE 	R79 K121 R80 ; R79["Previous"] := R80
	802	[5671]	GETGLOBAL	R79 K117 ; R79 := mPlayerPos
	803	[5671]	GETGLOBAL	R80 K119 ; R80 := mZoomedRegion
	804	[5671]	SETTABLE 	R79 K118 R80 ; R79["Region"] := R80
	805	[5672]	GETGLOBAL	R79 K1 ; R79 := 0x7b998233
	806	[5672]	GETGLOBAL	R80 K119 ; R80 := mZoomedRegion
	807	[5672]	CALL     	R79 2 2 ; R79 := R79(R80)
	808	[5672]	TEST     	R79 1 ; if R79 then PC := 833
	809	[5672]	JMP      	833 ; PC := 833
	810	[5673]	GETGLOBAL	R79 K119 ; R79 := mZoomedRegion
	811	[5673]	GETTABLE 	R79 R79 K122 ; R79 := R79["pos"]
	812	[5674]	GETTABLE 	R80 R79 K47 ; R80 := R79["x"]
	813	[5674]	LE       	0 K6 R80 ; if 0.000000 > R80 then PC := 822
	814	[5674]	JMP      	822 ; PC := 822
	815	[5675]	GETGLOBAL	R80 K34 ; R80 := 0xa421af95
	816	[5675]	UNM      	R81 R77 ; R81 := ^ R77
	817	[5675]	MOVE     	R82 R78 ; R82 := R78
	818	[5675]	MOVE     	R83 R76 ; R83 := R76
	819	[5675]	CALL     	R80 4 2 ; R80 := R80(R81,R82,R83)
	820	[5675]	MOVE     	R79 R80 ; R79 := R80
	821	[5675]	JMP      	828 ; PC := 828
	822	[5677]	GETGLOBAL	R80 K34 ; R80 := 0xa421af95
	823	[5677]	ADD      	R81 R77 K123 ; R81 := R77 + 0.200000
	824	[5677]	MOVE     	R82 R78 ; R82 := R78
	825	[5677]	MOVE     	R83 R76 ; R83 := R76
	826	[5677]	CALL     	R80 4 2 ; R80 := R80(R81,R82,R83)
	827	[5677]	MOVE     	R79 R80 ; R79 := R80
	828	[5679]	GETGLOBAL	R80 K117 ; R80 := mPlayerPos
	829	[5679]	GETUPVAL 	R81 U17 ; R81 := U17
	830	[5679]	ADD      	R81 R81 R79 ; R81 := R81 + R79
	831	[5679]	SETTABLE 	R80 K124 R81 ; R80["Target"] := R81
	832	[5679]	JMP      	842 ; PC := 842
	833	[5681]	GETGLOBAL	R80 K117 ; R80 := mPlayerPos
	834	[5681]	GETUPVAL 	R81 U17 ; R81 := U17
	835	[5681]	GETGLOBAL	R82 K34 ; R82 := 0xa421af95
	836	[5681]	LOADK    	R83 K49 ; R83 := 0.100000
	837	[5681]	LOADK    	R84 := 0.000000
	838	[5681]	LOADK    	R85 := 4.000000
	839	[5681]	CALL     	R82 4 2 ; R82 := R82(R83,R84,R85)
	840	[5681]	ADD      	R81 R81 R82 ; R81 := R81 + R82
	841	[5681]	SETTABLE 	R80 K124 R81 ; R80["Target"] := R81
	842	[5683]	GETGLOBAL	R80 K117 ; R80 := mPlayerPos
	843	[5683]	GETTABLE 	R80 R80 K125 ; R80 := R80["Prop"]
	844	[5683]	SELF     	R80 R80 K108 ; R81 := R80; R80 := R80[0xd0f998cd]
	845	[5683]	LOADK    	R82 := 0.000000
	846	[5683]	CALL     	R80 3 1 ; R80(R81,R82)
	847	[5684]	GETGLOBAL	R80 K117 ; R80 := mPlayerPos
	848	[5684]	GETTABLE 	R80 R80 K125 ; R80 := R80["Prop"]
	849	[5684]	SELF     	R80 R80 K99 ; R81 := R80; R80 := R80[0x188e2bee]
	850	[5684]	LOADK    	R82 := 1.000000
	851	[5684]	CALL     	R80 3 1 ; R80(R81,R82)
	852	[5686]	GETGLOBAL	R80 K119 ; R80 := mZoomedRegion
	853	[5686]	EQ       	0 R80 K20 ; if R80 ~= nil then PC := 863
	854	[5686]	JMP      	863 ; PC := 863
	855	[5687]	GETUPVAL 	R80 U16 ; R80 := U16
	856	[5687]	SELF     	R80 R80 K126 ; R81 := R80; R80 := R80[0x5d985c7e]
	857	[5687]	GETUPVAL 	R82 U18 ; R82 := U18
	858	[5687]	OP_LOADBOOL	R83 0 0 ; R83 := false
	859	[5687]	OP_LOADBOOL	R84 1 0 ; R84 := true
	860	[5687]	LOADK    	R85 := 1.000000
	861	[5687]	CALL     	R80 6 1 ; R80(R81,R82,R83,R84,R85)
	862	[5687]	JMP      	896 ; PC := 896
	863	[5688]	GETGLOBAL	R80 K109 ; R80 := mSmoothZoom
	864	[5688]	SELF     	R80 R80 K111 ; R81 := R80; R80 := R80[0x54ab95f9]
	865	[5688]	CALL     	R80 2 2 ; R80 := R80(R81)
	866	[5688]	LT       	0 R80 K127 ; if R80 >= -1.000000 then PC := 876
	867	[5688]	JMP      	876 ; PC := 876
	868	[5689]	GETUPVAL 	R80 U16 ; R80 := U16
	869	[5689]	SELF     	R80 R80 K126 ; R81 := R80; R80 := R80[0x5d985c7e]
	870	[5689]	GETUPVAL 	R82 U18 ; R82 := U18
	871	[5689]	OP_LOADBOOL	R83 0 0 ; R83 := false
	872	[5689]	OP_LOADBOOL	R84 1 0 ; R84 := true
	873	[5689]	LOADK    	R85 := 1.000000
	874	[5689]	CALL     	R80 6 1 ; R80(R81,R82,R83,R84,R85)
	875	[5689]	JMP      	896 ; PC := 896
	876	[5690]	GETGLOBAL	R80 K119 ; R80 := mZoomedRegion
	877	[5690]	GETTABLE 	R80 R80 K122 ; R80 := R80["pos"]
	878	[5690]	GETTABLE 	R80 R80 K47 ; R80 := R80["x"]
	879	[5690]	LE       	0 K6 R80 ; if 0.000000 > R80 then PC := 889
	880	[5690]	JMP      	889 ; PC := 889
	881	[5691]	GETUPVAL 	R80 U16 ; R80 := U16
	882	[5691]	SELF     	R80 R80 K126 ; R81 := R80; R80 := R80[0x5d985c7e]
	883	[5691]	GETGLOBAL	R82 K128 ; R82 := 0xe582b0d3
	884	[5691]	OP_LOADBOOL	R83 0 0 ; R83 := false
	885	[5691]	OP_LOADBOOL	R84 1 0 ; R84 := true
	886	[5691]	LOADK    	R85 := 1.000000
	887	[5691]	CALL     	R80 6 1 ; R80(R81,R82,R83,R84,R85)
	888	[5691]	JMP      	896 ; PC := 896
	889	[5693]	GETUPVAL 	R80 U16 ; R80 := U16
	890	[5693]	SELF     	R80 R80 K126 ; R81 := R80; R80 := R80[0x5d985c7e]
	891	[5693]	GETGLOBAL	R82 K129 ; R82 := 0x0cfe7d32
	892	[5693]	OP_LOADBOOL	R83 0 0 ; R83 := false
	893	[5693]	OP_LOADBOOL	R84 1 0 ; R84 := true
	894	[5693]	LOADK    	R85 := 1.000000
	895	[5693]	CALL     	R80 6 1 ; R80(R81,R82,R83,R84,R85)
	896	[5695]	GETGLOBAL	R80 K109 ; R80 := mSmoothZoom
	897	[5695]	SELF     	R80 R80 K111 ; R81 := R80; R80 := R80[0x54ab95f9]
	898	[5695]	CALL     	R80 2 2 ; R80 := R80(R81)
	899	[5695]	SETUPVAL 	R80 U19 ; U19 := R80
	900	[5695]	JMP      	938 ; PC := 938
	901	[5697]	GETUPVAL 	R80 U20 ; R80 := U20
	902	[5697]	CALL     	R80 1 2 ; R80 := R80()
	903	[5697]	TEST     	R80 0 ; if not R80 then PC := 938
	904	[5697]	JMP      	938 ; PC := 938
	905	[5698]	GETGLOBAL	R80 K109 ; R80 := mSmoothZoom
	906	[5698]	SELF     	R80 R80 K111 ; R81 := R80; R80 := R80[0x54ab95f9]
	907	[5698]	CALL     	R80 2 2 ; R80 := R80(R81)
	908	[5698]	LT       	0 R80 K127 ; if R80 >= -1.000000 then PC := 918
	909	[5698]	JMP      	918 ; PC := 918
	910	[5699]	GETUPVAL 	R80 U16 ; R80 := U16
	911	[5699]	SELF     	R80 R80 K126 ; R81 := R80; R80 := R80[0x5d985c7e]
	912	[5699]	GETUPVAL 	R82 U18 ; R82 := U18
	913	[5699]	OP_LOADBOOL	R83 0 0 ; R83 := false
	914	[5699]	OP_LOADBOOL	R84 1 0 ; R84 := true
	915	[5699]	LOADK    	R85 := 1.000000
	916	[5699]	CALL     	R80 6 1 ; R80(R81,R82,R83,R84,R85)
	917	[5699]	JMP      	938 ; PC := 938
	918	[5700]	GETGLOBAL	R80 K119 ; R80 := mZoomedRegion
	919	[5700]	GETTABLE 	R80 R80 K122 ; R80 := R80["pos"]
	920	[5700]	GETTABLE 	R80 R80 K47 ; R80 := R80["x"]
	921	[5700]	LE       	0 K6 R80 ; if 0.000000 > R80 then PC := 931
	922	[5700]	JMP      	931 ; PC := 931
	923	[5701]	GETUPVAL 	R80 U16 ; R80 := U16
	924	[5701]	SELF     	R80 R80 K126 ; R81 := R80; R80 := R80[0x5d985c7e]
	925	[5701]	GETGLOBAL	R82 K128 ; R82 := 0xe582b0d3
	926	[5701]	OP_LOADBOOL	R83 0 0 ; R83 := false
	927	[5701]	OP_LOADBOOL	R84 1 0 ; R84 := true
	928	[5701]	LOADK    	R85 := 1.000000
	929	[5701]	CALL     	R80 6 1 ; R80(R81,R82,R83,R84,R85)
	930	[5701]	JMP      	938 ; PC := 938
	931	[5703]	GETUPVAL 	R80 U16 ; R80 := U16
	932	[5703]	SELF     	R80 R80 K126 ; R81 := R80; R80 := R80[0x5d985c7e]
	933	[5703]	GETGLOBAL	R82 K129 ; R82 := 0x0cfe7d32
	934	[5703]	OP_LOADBOOL	R83 0 0 ; R83 := false
	935	[5703]	OP_LOADBOOL	R84 1 0 ; R84 := true
	936	[5703]	LOADK    	R85 := 1.000000
	937	[5703]	CALL     	R80 6 1 ; R80(R81,R82,R83,R84,R85)
	938	[5709]	GETUPVAL 	R80 U15 ; R80 := U15
	939	[5709]	GETUPVAL 	R81 U15 ; R81 := U15
	940	[5709]	GETTABLE 	R81 R81 K130 ; R81 := R81["originPos"]
	941	[5709]	ADD      	R81 R81 R75 ; R81 := R81 + R75
	942	[5709]	SETTABLE 	R80 K122 R81 ; R80["pos"] := R81
	943	[5712]	GETUPVAL 	R80 U0 ; R80 := U0
	944	[5712]	GETUPVAL 	R81 U1 ; R81 := U1
	945	[5712]	GETTABLE 	R81 R81 K131 ; R81 := R81["EDIT_REGION_FRAMING"]
	946	[5712]	EQ       	0 R80 R81 ; if R80 ~= R81 then PC := 980
	947	[5712]	JMP      	980 ; PC := 980
	948	[5713]	GETGLOBAL	R80 K132 ; R80 := mRegions
	949	[5713]	GETUPVAL 	R81 U2 ; R81 := U2
	950	[5713]	GETTABLE 	R81 R81 K133 ; R81 := R81["mFramingRegion"]
	951	[5713]	GETTABLE 	R80 R80 R81 ; R80 := R80[R81]
	952	[5714]	TEST     	R80 0 ; if not R80 then PC := 980
	953	[5714]	JMP      	980 ; PC := 980
	954	[5714]	GETTABLE 	R81 R80 K134 ; R81 := R80["zoomedFraming"]
	955	[5714]	GETTABLE 	R81 R81 K47 ; R81 := R81["x"]
	956	[5714]	EQ       	0 R81 R60 ; if R81 ~= R60 then PC := 968
	957	[5714]	JMP      	968 ; PC := 968
	958	[5714]	GETTABLE 	R81 R80 K134 ; R81 := R80["zoomedFraming"]
	959	[5714]	GETTABLE 	R81 R81 K32 ; R81 := R81["y"]
	960	[5714]	EQ       	0 R81 R61 ; if R81 ~= R61 then PC := 968
	961	[5714]	JMP      	968 ; PC := 968
	962	[5714]	GETTABLE 	R81 R80 K134 ; R81 := R80["zoomedFraming"]
	963	[5714]	GETTABLE 	R81 R81 K5 ; R81 := R81["z"]
	964	[5714]	GETGLOBAL	R82 K109 ; R82 := mSmoothZoom
	965	[5714]	GETTABLE 	R82 R82 K106 ; R82 := R82["mTargetVal"]
	966	[5714]	EQ       	1 R81 R82 ; if R81 == R82 then PC := 980
	967	[5714]	JMP      	980 ; PC := 980
	968	[5715]	GETGLOBAL	R81 K34 ; R81 := 0xa421af95
	969	[5715]	MOVE     	R82 R60 ; R82 := R60
	970	[5715]	MOVE     	R83 R61 ; R83 := R61
	971	[5715]	GETGLOBAL	R84 K109 ; R84 := mSmoothZoom
	972	[5715]	GETTABLE 	R84 R84 K106 ; R84 := R84["mTargetVal"]
	973	[5715]	CALL     	R81 4 2 ; R81 := R81(R82,R83,R84)
	974	[5715]	SETTABLE 	R80 K134 R81 ; R80["zoomedFraming"] := R81
	975	[5716]	GETGLOBAL	R81 K9 ; R81 := mRadialSolarMap
	976	[5716]	SELF     	R81 R81 K135 ; R82 := R81; R81 := R81[0x3070289c]
	977	[5716]	MOVE     	R83 R80 ; R83 := R80
	978	[5716]	GETTABLE 	R84 R80 K134 ; R84 := R80["zoomedFraming"]
	979	[5716]	CALL     	R81 4 1 ; R81(R82,R83,R84)
	980	[5720]	GETUPVAL 	R81 U7 ; R81 := U7
	981	[5720]	CALL     	R81 1 1 ; R81()
	982	[5722]	GETGLOBAL	R81 K136 ; R81 := mNodeDuck
	983	[5722]	SELF     	R81 R81 K111 ; R82 := R81; R81 := R81[0x54ab95f9]
	984	[5722]	CALL     	R81 2 2 ; R81 := R81(R82)
	985	[5723]	LOADK    	R82 := 1.000000
	986	[5724]	GETGLOBAL	R83 K84 ; R83 := _T
	987	[5724]	GETTABLE 	R83 R83 K137 ; R83 := R83["HideSquadOverlay"]
	988	[5724]	EQ       	1 R83 K20 ; if R83 == nil then PC := 995
	989	[5724]	JMP      	995 ; PC := 995
	990	[5724]	GETGLOBAL	R83 K84 ; R83 := _T
	991	[5724]	GETTABLE 	R83 R83 K137 ; R83 := R83["HideSquadOverlay"]
	992	[5724]	LE       	1 R83 K6 ; if R83 <= 0.000000 then PC := 995
	993	[5724]	JMP      	995 ; PC := 995
	994	[5724]	OP_LOADBOOL	R83 0 1 ; R83 := false; PC := 995
	995	[5724]	OP_LOADBOOL	R83 1 0 ; R83 := true
	996	[5725]	GETGLOBAL	R84 K84 ; R84 := _T
	997	[5725]	GETTABLE 	R84 R84 K138 ; R84 := R84["BackgroundVisible"]
	998	[5725]	TEST     	R84 1 ; if R84 then PC := 1010
	999	[5725]	JMP      	1010 ; PC := 1010
	1000	[5725]	GETGLOBAL	R84 K84 ; R84 := _T
	1001	[5725]	GETTABLE 	R84 R84 K139 ; R84 := R84["HideMapRedux"]
	1002	[5725]	EQ       	1 R84 K20 ; if R84 == nil then PC := 1008
	1003	[5725]	JMP      	1008 ; PC := 1008
	1004	[5725]	GETGLOBAL	R84 K84 ; R84 := _T
	1005	[5725]	GETTABLE 	R84 R84 K139 ; R84 := R84["HideMapRedux"]
	1006	[5725]	LT       	1 K6 R84 ; if 0.000000 < R84 then PC := 1010
	1007	[5725]	JMP      	1010 ; PC := 1010
	1008	[5725]	TEST     	R83 1 ; if R83 then PC := 1012
	1009	[5725]	JMP      	1012 ; PC := 1012
	1010	[5726]	LOADK    	R82 := 0.000000
	1011	[5726]	JMP      	1027 ; PC := 1027
	1012	[5727]	GETGLOBAL	R84 K140 ; R84 := mHover
	1013	[5727]	GETTABLE 	R84 R84 K141 ; R84 := R84["Node"]
	1014	[5727]	EQ       	0 R84 K20 ; if R84 ~= nil then PC := 1020
	1015	[5727]	JMP      	1020 ; PC := 1020
	1016	[5727]	GETGLOBAL	R84 K84 ; R84 := _T
	1017	[5727]	GETTABLE 	R84 R84 K142 ; R84 := R84["gPendingMission"]
	1018	[5727]	EQ       	1 R84 K20 ; if R84 == nil then PC := 1022
	1019	[5727]	JMP      	1022 ; PC := 1022
	1020	[5728]	LOADK    	R82 K123 ; R82 := 0.200000
	1021	[5728]	JMP      	1027 ; PC := 1027
	1022	[5729]	GETGLOBAL	R84 K84 ; R84 := _T
	1023	[5729]	GETTABLE 	R84 R84 K85 ; R84 := R84["MouseInWorldStateWindow"]
	1024	[5729]	TEST     	R84 0 ; if not R84 then PC := 1027
	1025	[5729]	JMP      	1027 ; PC := 1027
	1026	[5730]	LOADK    	R82 K49 ; R82 := 0.100000
	1027	[5732]	GETGLOBAL	R84 K140 ; R84 := mHover
	1028	[5732]	GETTABLE 	R84 R84 K141 ; R84 := R84["Node"]
	1029	[5732]	EQ       	1 R84 K20 ; if R84 == nil then PC := 1041
	1030	[5732]	JMP      	1041 ; PC := 1041
	1031	[5732]	GETGLOBAL	R84 K140 ; R84 := mHover
	1032	[5732]	GETTABLE 	R84 R84 K141 ; R84 := R84["Node"]
	1033	[5732]	GETTABLE 	R84 R84 K143 ; R84 := R84["hideNode"]
	1034	[5732]	TEST     	R84 0 ; if not R84 then PC := 1041
	1035	[5732]	JMP      	1041 ; PC := 1041
	1036	[5733]	GETGLOBAL	R84 K136 ; R84 := mNodeDuck
	1037	[5733]	SELF     	R84 R84 K99 ; R85 := R84; R84 := R84[0x188e2bee]
	1038	[5733]	LOADK    	R86 := 0.000000
	1039	[5733]	CALL     	R84 3 1 ; R84(R85,R86)
	1040	[5733]	JMP      	1045 ; PC := 1045
	1041	[5735]	GETGLOBAL	R84 K136 ; R84 := mNodeDuck
	1042	[5735]	SELF     	R84 R84 K99 ; R85 := R84; R84 := R84[0x188e2bee]
	1043	[5735]	MOVE     	R86 R82 ; R86 := R82
	1044	[5735]	CALL     	R84 3 1 ; R84(R85,R86)
	1045	[5737]	GETGLOBAL	R84 K136 ; R84 := mNodeDuck
	1046	[5737]	SELF     	R84 R84 K90 ; R85 := R84; R84 := R84[0xfaa69527]
	1047	[5737]	MOVE     	R86 R59 ; R86 := R59
	1048	[5737]	CALL     	R84 3 1 ; R84(R85,R86)
	1049	[5738]	GETGLOBAL	R84 K140 ; R84 := mHover
	1050	[5738]	GETTABLE 	R84 R84 K141 ; R84 := R84["Node"]
	1051	[5738]	EQ       	1 R84 K20 ; if R84 == nil then PC := 1057
	1052	[5738]	JMP      	1057 ; PC := 1057
	1053	[5739]	GETGLOBAL	R84 K144 ; R84 := mPreviousNodeDuck
	1054	[5739]	GETGLOBAL	R85 K140 ; R85 := mHover
	1055	[5739]	GETTABLE 	R85 R85 K141 ; R85 := R85["Node"]
	1056	[5739]	SETTABLE 	R84 K141 R85 ; R84["Node"] := R85
	1057	[5741]	GETGLOBAL	R84 K136 ; R84 := mNodeDuck
	1058	[5741]	SELF     	R84 R84 K111 ; R85 := R84; R84 := R84[0x54ab95f9]
	1059	[5741]	CALL     	R84 2 2 ; R84 := R84(R85)
	1060	[5741]	EQ       	1 R81 R84 ; if R81 == R84 then PC := 1075
	1061	[5741]	JMP      	1075 ; PC := 1075
	1062	[5741]	GETGLOBAL	R84 K1 ; R84 := 0x7b998233
	1063	[5741]	GETGLOBAL	R85 K145 ; R85 := 0x469c30de
	1064	[5741]	CALL     	R84 2 2 ; R84 := R84(R85)
	1065	[5741]	TEST     	R84 1 ; if R84 then PC := 1075
	1066	[5741]	JMP      	1075 ; PC := 1075
	1067	[5742]	GETGLOBAL	R84 K145 ; R84 := 0x469c30de
	1068	[5742]	SELF     	R84 R84 K146 ; R85 := R84; R84 := R84[0x830eea67]
	1069	[5742]	GETUPVAL 	R86 U21 ; R86 := U21
	1070	[5742]	GETTABLE 	R86 R86 K147 ; R86 := R86["UNLIT_ATTEN"]
	1071	[5742]	GETGLOBAL	R87 K136 ; R87 := mNodeDuck
	1072	[5742]	SELF     	R87 R87 K111 ; R88 := R87; R87 := R87[0x54ab95f9]
	1073	[5742]	CALL     	R87 2 0 ; R87,... := R87(R88)
	1074	[5742]	CALL     	R84 0 1 ; R84(R85,...)
	1075	[5745]	GETGLOBAL	R84 K148 ; R84 := mRegionConnectionsDuck
	1076	[5745]	SELF     	R84 R84 K99 ; R85 := R84; R84 := R84[0x188e2bee]
	1077	[5745]	GETUPVAL 	R86 U9 ; R86 := U9
	1078	[5745]	GETTABLE 	R86 R86 K73 ; R86 := R86[0x06d055f9]
	1079	[5745]	GETGLOBAL	R87 K140 ; R87 := mHover
	1080	[5745]	GETTABLE 	R87 R87 K118 ; R87 := R87["Region"]
	1081	[5745]	EQ       	0 R87 K20 ; if R87 ~= nil then PC := 1084
	1082	[5745]	JMP      	1084 ; PC := 1084
	1083	[5745]	OP_LOADBOOL	R87 0 1 ; R87 := false; PC := 1084
	1084	[5745]	OP_LOADBOOL	R87 1 0 ; R87 := true
	1085	[5745]	LOADK    	R88 := 1.000000
	1086	[5745]	LOADK    	R89 := 0.000000
	1087	[5745]	CALL     	R86 4 0 ; R86,... := R86(R87,R88,R89)
	1088	[5745]	CALL     	R84 0 1 ; R84(R85,...)
	1089	[5746]	GETGLOBAL	R84 K148 ; R84 := mRegionConnectionsDuck
	1090	[5746]	SELF     	R84 R84 K90 ; R85 := R84; R84 := R84[0xfaa69527]
	1091	[5746]	GETGLOBAL	R86 K89 ; R86 := 0x67652851
	1092	[5746]	CALL     	R86 1 0 ; R86,... := R86()
	1093	[5746]	CALL     	R84 0 1 ; R84(R85,...)
	1094	[5747]	GETGLOBAL	R84 K140 ; R84 := mHover
	1095	[5747]	GETTABLE 	R84 R84 K118 ; R84 := R84["Region"]
	1096	[5747]	EQ       	1 R84 K20 ; if R84 == nil then PC := 1102
	1097	[5747]	JMP      	1102 ; PC := 1102
	1098	[5748]	GETGLOBAL	R84 K149 ; R84 := mPreviousRegionDuck
	1099	[5748]	GETGLOBAL	R85 K140 ; R85 := mHover
	1100	[5748]	GETTABLE 	R85 R85 K118 ; R85 := R85["Region"]
	1101	[5748]	SETTABLE 	R84 K118 R85 ; R84["Region"] := R85
	1102	[5752]	OP_LOADBOOL	R84 0 0 ; R84 := false
	1103	[5752]	SETUPVAL 	R84 U22 ; U22 := R84
	1104	[5753]	RETURN   	R0 1 ; return 

function #123 <?:5755,5767> (52 instructions, 208 bytes at 00000211291BDD20)
0 params, 13 slots, 1 upvalue, 0 locals, 17 constants, 0 functions
	1	[5756]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[5756]	GETGLOBAL	R1 K1 ; R1 := mShip
	3	[5756]	GETTABLE 	R1 R1 K2 ; R1 := R1["Deco"]
	4	[5756]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[5756]	TEST     	R0 1 ; if R0 then PC := 52
	6	[5756]	JMP      	52 ; PC := 52
	7	[5757]	LOADK    	R0 := 120.000000
	8	[5758]	GETGLOBAL	R1 K3 ; R1 := 0x55156ff7
	9	[5758]	CALL     	R1 1 2 ; R1 := R1()
	10	[5758]	MOD      	R1 R1 R0 ; R1 := R1 % R0
	11	[5758]	DIV      	R1 R1 R0 ; R1 := R1 / R0
	12	[5759]	MUL      	R2 K5 R1 ; R2 := 6.283185 * R1
	13	[5760]	GETGLOBAL	R3 K6 ; R3 := mRegionRadius
	14	[5760]	GETGLOBAL	R4 K1 ; R4 := mShip
	15	[5760]	GETTABLE 	R4 R4 K7 ; R4 := R4["RegionIndex"]
	16	[5760]	GETTABLE 	R3 R3 R4 ; R3 := R3[R4]
	17	[5760]	ADD      	R3 R3 K8 ; R3 := R3 + 0.050000
	18	[5761]	GETGLOBAL	R4 K4 ; R4 := 0x5bced4c4
	19	[5761]	GETTABLE 	R4 R4 K9 ; R4 := R4[0x3eda26fc]
	20	[5761]	MOVE     	R5 R2 ; R5 := R2
	21	[5761]	CALL     	R4 2 2 ; R4 := R4(R5)
	22	[5761]	MUL      	R4 R4 R3 ; R4 := R4 * R3
	23	[5762]	GETGLOBAL	R5 K4 ; R5 := 0x5bced4c4
	24	[5762]	GETTABLE 	R5 R5 K10 ; R5 := R5[0x00fa6bf1]
	25	[5762]	MOVE     	R6 R2 ; R6 := R2
	26	[5762]	CALL     	R5 2 2 ; R5 := R5(R6)
	27	[5762]	MUL      	R5 R5 R3 ; R5 := R5 * R3
	28	[5764]	GETGLOBAL	R6 K1 ; R6 := mShip
	29	[5764]	GETTABLE 	R6 R6 K2 ; R6 := R6["Deco"]
	30	[5764]	SELF     	R6 R6 K11 ; R7 := R6; R6 := R6[0x9307aa51]
	31	[5764]	GETGLOBAL	R8 K1 ; R8 := mShip
	32	[5764]	GETTABLE 	R8 R8 K12 ; R8 := R8["AnchorPosition"]
	33	[5764]	GETGLOBAL	R9 K13 ; R9 := 0xa421af95
	34	[5764]	MOVE     	R10 R4 ; R10 := R4
	35	[5764]	MOVE     	R11 R5 ; R11 := R5
	36	[5764]	LOADK    	R12 := 0.000000
	37	[5764]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	38	[5764]	ADD      	R8 R8 R9 ; R8 := R8 + R9
	39	[5764]	CALL     	R6 3 1 ; R6(R7,R8)
	40	[5765]	GETGLOBAL	R6 K1 ; R6 := mShip
	41	[5765]	GETTABLE 	R6 R6 K2 ; R6 := R6["Deco"]
	42	[5765]	SELF     	R6 R6 K14 ; R7 := R6; R6 := R6[0x70b8836c]
	43	[5765]	GETGLOBAL	R8 K15 ; R8 := 0x00046924
	44	[5765]	LOADK    	R9 := 90.000000
	45	[5765]	GETUPVAL 	R10 U0 ; R10 := U0
	46	[5765]	GETTABLE 	R10 R10 K16 ; R10 := R10[0xd4ea5665]
	47	[5765]	MOVE     	R11 R2 ; R11 := R2
	48	[5765]	CALL     	R10 2 2 ; R10 := R10(R11)
	49	[5765]	LOADK    	R11 := -90.000000
	50	[5765]	CALL     	R8 4 0 ; R8,... := R8(R9,R10,R11)
	51	[5765]	CALL     	R6 0 1 ; R6(R7,...)
	52	[5767]	RETURN   	R0 1 ; return 

function #124 <?:5769,5805> (169 instructions, 676 bytes at 000002112EC95DA0)
0 params, 17 slots, 6 upvalues, 0 locals, 44 constants, 0 functions
	1	[5770]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[5770]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[5770]	GETTABLE 	R1 R1 K1 ; R1 := R1["Region"]
	4	[5770]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[5770]	TEST     	R0 1 ; if R0 then PC := 169
	6	[5770]	JMP      	169 ; PC := 169
	7	[5770]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	8	[5770]	GETGLOBAL	R1 K2 ; R1 := _T
	9	[5770]	GETTABLE 	R1 R1 K3 ; R1 := R1["FortressLocation"]
	10	[5770]	CALL     	R0 2 2 ; R0 := R0(R1)
	11	[5770]	TEST     	R0 1 ; if R0 then PC := 169
	12	[5770]	JMP      	169 ; PC := 169
	13	[5770]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	14	[5770]	GETUPVAL 	R1 U0 ; R1 := U0
	15	[5770]	GETTABLE 	R1 R1 K4 ; R1 := R1["Splines"]
	16	[5770]	GETGLOBAL	R2 K2 ; R2 := _T
	17	[5770]	GETTABLE 	R2 R2 K3 ; R2 := R2["FortressLocation"]
	18	[5770]	GETTABLE 	R2 R2 K5 ; R2 := R2["SplineIndex"]
	19	[5770]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	20	[5770]	CALL     	R0 2 2 ; R0 := R0(R1)
	21	[5770]	TEST     	R0 1 ; if R0 then PC := 169
	22	[5770]	JMP      	169 ; PC := 169
	23	[5771]	GETUPVAL 	R0 U0 ; R0 := U0
	24	[5771]	GETTABLE 	R0 R0 K4 ; R0 := R0["Splines"]
	25	[5771]	GETGLOBAL	R1 K2 ; R1 := _T
	26	[5771]	GETTABLE 	R1 R1 K3 ; R1 := R1["FortressLocation"]
	27	[5771]	GETTABLE 	R1 R1 K5 ; R1 := R1["SplineIndex"]
	28	[5771]	GETTABLE 	R0 R0 R1 ; R0 := R0[R1]
	29	[5771]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0x7482ae82]
	30	[5771]	GETGLOBAL	R2 K2 ; R2 := _T
	31	[5771]	GETTABLE 	R2 R2 K3 ; R2 := R2["FortressLocation"]
	32	[5771]	GETTABLE 	R2 R2 K7 ; R2 := R2["Progress"]
	33	[5771]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	34	[5773]	GETGLOBAL	R1 K8 ; R1 := 0x03ea2485
	35	[5773]	GETUPVAL 	R2 U0 ; R2 := U0
	36	[5773]	GETTABLE 	R2 R2 K1 ; R2 := R2["Region"]
	37	[5773]	GETTABLE 	R2 R2 K9 ; R2 := R2["pos"]
	38	[5773]	MOVE     	R3 R0 ; R3 := R0
	39	[5773]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	40	[5773]	LT       	0 R1 K10 ; if R1 >= 0.001000 then PC := 43
	41	[5773]	JMP      	43 ; PC := 43
	42	[5774]	RETURN   	R0 1 ; return 
	43	[5777]	GETGLOBAL	R1 K11 ; R1 := mRadialSolarMap
	44	[5777]	SELF     	R1 R1 K12 ; R2 := R1; R1 := R1[0x3070289c]
	45	[5777]	GETUPVAL 	R3 U0 ; R3 := U0
	46	[5777]	GETTABLE 	R3 R3 K1 ; R3 := R3["Region"]
	47	[5777]	GETGLOBAL	R4 K13 ; R4 := 0xa421af95
	48	[5777]	GETTABLE 	R5 R0 K14 ; R5 := R0["x"]
	49	[5777]	MUL      	R5 R5 K15 ; R5 := R5 * 0.041000
	50	[5777]	ADD      	R5 K16 R5 ; R5 := 0.500000 + R5
	51	[5777]	GETTABLE 	R6 R0 K17 ; R6 := R0["y"]
	52	[5777]	ADD      	R6 R6 K18 ; R6 := R6 + 0.030000
	53	[5777]	MUL      	R6 R6 K19 ; R6 := R6 * 0.043000
	54	[5777]	SUB      	R6 K16 R6 ; R6 := 0.500000 - R6
	55	[5777]	GETGLOBAL	R7 K20 ; R7 := Zoom
	56	[5777]	GETTABLE 	R7 R7 K21 ; R7 := R7["MAX_ZOOM"]
	57	[5777]	SUB      	R7 R7 K22 ; R7 := R7 - 0.300000
	58	[5777]	GETTABLE 	R8 R0 K23 ; R8 := R0["z"]
	59	[5777]	ADD      	R7 R7 R8 ; R7 := R7 + R8
	60	[5777]	CALL     	R4 4 0 ; R4,... := R4(R5,R6,R7)
	61	[5777]	CALL     	R1 0 1 ; R1(R2,...)
	62	[5779]	GETGLOBAL	R1 K24 ; R1 := mZoomedRegion
	63	[5779]	GETUPVAL 	R2 U0 ; R2 := U0
	64	[5779]	GETTABLE 	R2 R2 K1 ; R2 := R2["Region"]
	65	[5779]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 82
	66	[5779]	JMP      	82 ; PC := 82
	67	[5780]	GETUPVAL 	R1 U1 ; R1 := U1
	68	[5780]	GETGLOBAL	R2 K24 ; R2 := mZoomedRegion
	69	[5780]	GETGLOBAL	R3 K24 ; R3 := mZoomedRegion
	70	[5780]	GETTABLE 	R3 R3 K25 ; R3 := R3["zoomedFraming"]
	71	[5780]	CALL     	R1 3 4 ; R1,R2,R3 := R1(R2,R3)
	72	[5781]	GETGLOBAL	R4 K26 ; R4 := mDrag
	73	[5781]	SELF     	R4 R4 K27 ; R5 := R4; R4 := R4[0x4c4f8717]
	74	[5781]	LOADK    	R6 K14 ; R6 := "x"
	75	[5781]	MOVE     	R7 R1 ; R7 := R1
	76	[5781]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	77	[5782]	GETGLOBAL	R4 K26 ; R4 := mDrag
	78	[5782]	SELF     	R4 R4 K27 ; R5 := R4; R4 := R4[0x4c4f8717]
	79	[5782]	LOADK    	R6 K17 ; R6 := "y"
	80	[5782]	MOVE     	R7 R2 ; R7 := R2
	81	[5782]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	82	[5785]	GETUPVAL 	R4 U0 ; R4 := U0
	83	[5785]	GETTABLE 	R4 R4 K1 ; R4 := R4["Region"]
	84	[5785]	SETTABLE 	R4 K9 R0 ; R4["pos"] := R0
	85	[5787]	GETGLOBAL	R4 K13 ; R4 := 0xa421af95
	86	[5787]	GETUPVAL 	R5 U0 ; R5 := U0
	87	[5787]	GETTABLE 	R5 R5 K1 ; R5 := R5["Region"]
	88	[5787]	GETTABLE 	R5 R5 K9 ; R5 := R5["pos"]
	89	[5787]	GETTABLE 	R5 R5 K14 ; R5 := R5["x"]
	90	[5787]	GETUPVAL 	R6 U0 ; R6 := U0
	91	[5787]	GETTABLE 	R6 R6 K1 ; R6 := R6["Region"]
	92	[5787]	GETTABLE 	R6 R6 K9 ; R6 := R6["pos"]
	93	[5787]	GETTABLE 	R6 R6 K17 ; R6 := R6["y"]
	94	[5787]	GETUPVAL 	R7 U0 ; R7 := U0
	95	[5787]	GETTABLE 	R7 R7 K1 ; R7 := R7["Region"]
	96	[5787]	GETTABLE 	R7 R7 K9 ; R7 := R7["pos"]
	97	[5787]	GETTABLE 	R7 R7 K23 ; R7 := R7["z"]
	98	[5787]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	99	[5788]	GETUPVAL 	R5 U2 ; R5 := U2
	100	[5788]	MOVE     	R6 R4 ; R6 := R4
	101	[5788]	CALL     	R5 2 2 ; R5 := R5(R6)
	102	[5788]	MOVE     	R4 R5 ; R4 := R5
	103	[5790]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	104	[5790]	GETUPVAL 	R6 U0 ; R6 := U0
	105	[5790]	GETTABLE 	R6 R6 K1 ; R6 := R6["Region"]
	106	[5790]	GETTABLE 	R6 R6 K28 ; R6 := R6["instance"]
	107	[5790]	CALL     	R5 2 2 ; R5 := R5(R6)
	108	[5790]	TEST     	R5 1 ; if R5 then PC := 133
	109	[5790]	JMP      	133 ; PC := 133
	110	[5791]	GETUPVAL 	R5 U0 ; R5 := U0
	111	[5791]	GETTABLE 	R5 R5 K1 ; R5 := R5["Region"]
	112	[5791]	GETTABLE 	R5 R5 K28 ; R5 := R5["instance"]
	113	[5791]	SELF     	R5 R5 K29 ; R6 := R5; R5 := R5[0x9307aa51]
	114	[5791]	MOVE     	R7 R4 ; R7 := R4
	115	[5791]	CALL     	R5 3 1 ; R5(R6,R7)
	116	[5792]	GETUPVAL 	R5 U3 ; R5 := U3
	117	[5792]	GETUPVAL 	R6 U0 ; R6 := U0
	118	[5792]	GETTABLE 	R6 R6 K30 ; R6 := R6["SubLabelIndex"]
	119	[5792]	GETTABLE 	R5 R5 R6 ; R5 := R5[R6]
	120	[5792]	GETGLOBAL	R6 K13 ; R6 := 0xa421af95
	121	[5792]	LOADK    	R7 := 0.000000
	122	[5792]	GETUPVAL 	R8 U0 ; R8 := U0
	123	[5792]	GETTABLE 	R8 R8 K1 ; R8 := R8["Region"]
	124	[5792]	GETTABLE 	R8 R8 K31 ; R8 := R8["scale"]
	125	[5792]	MUL      	R8 R8 K32 ; R8 := R8 * 1.050000
	126	[5792]	GETUPVAL 	R9 U4 ; R9 := U4
	127	[5792]	GETTABLE 	R9 R9 K33 ; R9 := R9["PLANET_UNIT_MULTIPLIER"]
	128	[5792]	MUL      	R8 R8 R9 ; R8 := R8 * R9
	129	[5792]	LOADK    	R9 K34 ; R9 := 0.000100
	130	[5792]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	131	[5792]	ADD      	R6 R4 R6 ; R6 := R4 + R6
	132	[5792]	SETTABLE 	R5 K9 R6 ; R5["pos"] := R6
	133	[5795]	GETGLOBAL	R5 K35 ; R5 := 0xcfc01047
	134	[5795]	GETUPVAL 	R6 U0 ; R6 := U0
	135	[5795]	GETTABLE 	R6 R6 K36 ; R6 := R6["Sectors"]
	136	[5795]	CALL     	R5 2 4 ; R5,R6,R7 := R5(R6)
	137	[5795]	JMP      	155 ; PC := 155
	138	[5796]	GETUPVAL 	R10 U0 ; R10 := U0
	139	[5796]	GETTABLE 	R10 R10 K37 ; R10 := R10["Nodes"]
	140	[5796]	EQ       	1 R10 K38 ; if R10 == nil then PC := 155
	141	[5796]	JMP      	155 ; PC := 155
	142	[5796]	GETUPVAL 	R10 U0 ; R10 := U0
	143	[5796]	GETTABLE 	R10 R10 K37 ; R10 := R10["Nodes"]
	144	[5796]	GETTABLE 	R10 R10 R8 ; R10 := R10[R8]
	145	[5796]	EQ       	1 R10 K38 ; if R10 == nil then PC := 155
	146	[5796]	JMP      	155 ; PC := 155
	147	[5797]	GETGLOBAL	R10 K39 ; R10 := 0x808dc004
	148	[5797]	GETUPVAL 	R11 U0 ; R11 := U0
	149	[5797]	GETTABLE 	R11 R11 K37 ; R11 := R11["Nodes"]
	150	[5797]	GETTABLE 	R11 R11 R8 ; R11 := R11[R8]
	151	[5797]	GETTABLE 	R11 R11 K40 ; R11 := R11["position"]
	152	[5797]	MOVE     	R12 R0 ; R12 := R0
	153	[5797]	GETTABLE 	R13 R9 K41 ; R13 := R9["decoOffset"]
	154	[5797]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	155	[5795]	TFORLOOP 	R5 2 ; R8,R9 := R5(R6,R7); if R8 ~= nil then begin PC = 138; R7 := R8 end
	156	[5798]	JMP      	138 ; PC := 138
	157	[5801]	LOADK    	R10 := 1.000000
	158	[5801]	GETGLOBAL	R11 K42 ; R11 := mMovingEdgeIndices
	159	[5801]	LEN      	R11 R11 ; R11 := # R11
	160	[5801]	LOADK    	R12 := 1.000000
	161	[5801]	FORPREP  	R10 168 ; R10 -= R12; PC := 168
	162	[5802]	GETUPVAL 	R14 U5 ; R14 := U5
	163	[5802]	GETGLOBAL	R15 K43 ; R15 := mFlatEdges
	164	[5802]	GETGLOBAL	R16 K42 ; R16 := mMovingEdgeIndices
	165	[5802]	GETTABLE 	R16 R16 R13 ; R16 := R16[R13]
	166	[5802]	GETTABLE 	R15 R15 R16 ; R15 := R15[R16]
	167	[5802]	CALL     	R14 2 1 ; R14(R15)
	168	[5801]	FORLOOP  	R10 162 ; R10 += R12; if R10 <= R11 then begin PC := 162; R13 := R10 end
	169	[5805]	RETURN   	R0 1 ; return 

function #125 <?:5807,5832> (54 instructions, 216 bytes at 000002112EC96680)
0 params, 10 slots, 2 upvalues, 0 locals, 12 constants, 0 functions
	1	[5808]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[5808]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[5808]	GETTABLE 	R1 R1 K1 ; R1 := R1["ResourceDrone"]
	4	[5808]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[5808]	TEST     	R0 0 ; if not R0 then PC := 8
	6	[5808]	JMP      	8 ; PC := 8
	7	[5809]	RETURN   	R0 1 ; return 
	8	[5812]	GETGLOBAL	R0 K2 ; R0 := mSmoothZoom
	9	[5812]	GETTABLE 	R0 R0 K3 ; R0 := R0["mCurVal"]
	10	[5813]	LT       	0 R0 K4 ; if R0 >= -2.000000 then PC := 21
	11	[5813]	JMP      	21 ; PC := 21
	12	[5815]	GETUPVAL 	R1 U0 ; R1 := U0
	13	[5815]	GETTABLE 	R1 R1 K1 ; R1 := R1["ResourceDrone"]
	14	[5815]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xe4162eed]
	15	[5815]	LOADK    	R3 K6 ; R3 := "OnRegionZoomOut"
	16	[5815]	LOADK    	R4 K7 ; R4 := ""
	17	[5815]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	18	[5816]	GETUPVAL 	R1 U1 ; R1 := U1
	19	[5816]	CALL     	R1 1 1 ; R1()
	20	[5817]	RETURN   	R0 1 ; return 
	21	[5822]	LOADK    	R1 := 1.000000
	22	[5822]	GETGLOBAL	R2 K8 ; R2 := mRegions
	23	[5822]	LEN      	R2 R2 ; R2 := # R2
	24	[5822]	LOADK    	R3 := 1.000000
	25	[5822]	FORPREP  	R1 45 ; R1 -= R3; PC := 45
	26	[5824]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	27	[5824]	GETGLOBAL	R6 K9 ; R6 := mZoomedRegion
	28	[5824]	CALL     	R5 2 2 ; R5 := R5(R6)
	29	[5824]	TEST     	R5 1 ; if R5 then PC := 45
	30	[5824]	JMP      	45 ; PC := 45
	31	[5824]	GETGLOBAL	R5 K9 ; R5 := mZoomedRegion
	32	[5824]	GETGLOBAL	R6 K8 ; R6 := mRegions
	33	[5824]	GETTABLE 	R6 R6 R4 ; R6 := R6[R4]
	34	[5824]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 45
	35	[5824]	JMP      	45 ; PC := 45
	36	[5825]	GETUPVAL 	R5 U0 ; R5 := U0
	37	[5825]	GETTABLE 	R5 R5 K1 ; R5 := R5["ResourceDrone"]
	38	[5825]	SELF     	R5 R5 K5 ; R6 := R5; R5 := R5[0xe4162eed]
	39	[5825]	LOADK    	R7 K10 ; R7 := "OnRegionZoomIn"
	40	[5825]	GETGLOBAL	R8 K11 ; R8 := 0x64fb1586
	41	[5825]	MOVE     	R9 R4 ; R9 := R4
	42	[5825]	CALL     	R8 2 0 ; R8,... := R8(R9)
	43	[5825]	CALL     	R5 0 1 ; R5(R6,...)
	44	[5826]	RETURN   	R0 1 ; return 
	45	[5822]	FORLOOP  	R1 26 ; R1 += R3; if R1 <= R2 then begin PC := 26; R4 := R1 end
	46	[5830]	GETUPVAL 	R5 U0 ; R5 := U0
	47	[5830]	GETTABLE 	R5 R5 K1 ; R5 := R5["ResourceDrone"]
	48	[5830]	SELF     	R5 R5 K5 ; R6 := R5; R5 := R5[0xe4162eed]
	49	[5830]	LOADK    	R7 K6 ; R7 := "OnRegionZoomOut"
	50	[5830]	LOADK    	R8 K7 ; R8 := ""
	51	[5830]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	52	[5831]	GETUPVAL 	R5 U1 ; R5 := U1
	53	[5831]	CALL     	R5 1 1 ; R5()
	54	[5832]	RETURN   	R0 1 ; return 

function #126 <?:5834,5839> (15 instructions, 60 bytes at 000002112EC969C0)
2 params, 9 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[5835]	LOADK    	R2 := 0.000000
	2	[5836]	GETUPVAL 	R3 U0 ; R3 := U0
	3	[5836]	GETTABLE 	R3 R3 K0 ; R3 := R3[0xd4ea5665]
	4	[5836]	GETUPVAL 	R4 U0 ; R4 := U0
	5	[5836]	GETTABLE 	R4 R4 K1 ; R4 := R4[0x538cf9d0]
	6	[5836]	GETTABLE 	R5 R1 K2 ; R5 := R1["x"]
	7	[5836]	GETTABLE 	R6 R1 K3 ; R6 := R1["y"]
	8	[5836]	GETTABLE 	R7 R0 K2 ; R7 := R0["x"]
	9	[5836]	GETTABLE 	R8 R0 K3 ; R8 := R0["y"]
	10	[5836]	CALL     	R4 5 0 ; R4,... := R4(R5,R6,R7,R8)
	11	[5836]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	12	[5836]	MOVE     	R2 R3 ; R2 := R3
	13	[5837]	SUB      	R2 R2 K4 ; R2 := R2 - 90.000000
	14	[5838]	RETURN   	R2 2 ; return R2 
	15	[5839]	RETURN   	R0 1 ; return 

function #127 <?:5841,6229> (1506 instructions, 6024 bytes at 000002112EC96B50)
1 param, 86 slots, 20 upvalues, 0 locals, 167 constants, 0 functions
	1	[5842]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[5842]	GETTABLE 	R1 R1 K0 ; R1 := R1["forceUpdate3dElements"]
	3	[5842]	TEST     	R1 0 ; if not R1 then PC := 8
	4	[5842]	JMP      	8 ; PC := 8
	5	[5843]	OP_LOADBOOL	R0 1 0 ; R0 := true
	6	[5845]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[5845]	SETTABLE 	R1 K0 K1 ; R1["forceUpdate3dElements"] := false
	8	[5848]	GETGLOBAL	R1 K2 ; R1 := 0xa421af95
	9	[5848]	CALL     	R1 1 2 ; R1 := R1()
	10	[5849]	GETGLOBAL	R2 K3 ; R2 := mSmoothZoom
	11	[5849]	GETTABLE 	R2 R2 K4 ; R2 := R2["mCurVal"]
	12	[5850]	GETGLOBAL	R3 K5 ; R3 := mPreviousZoom
	13	[5850]	EQ       	0 R3 R2 ; if R3 ~= R2 then PC := 16
	14	[5850]	JMP      	16 ; PC := 16
	15	[5850]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 16
	16	[5850]	OP_LOADBOOL	R3 1 0 ; R3 := true
	17	[5851]	SETGLOBALHASH	R2 K5 ; mPreviousZoom := R2
	18	[5852]	GETGLOBAL	R4 K6 ; R4 := mPreviousDrag
	19	[5852]	GETTABLE 	R4 R4 K7 ; R4 := R4["x"]
	20	[5852]	GETGLOBAL	R5 K8 ; R5 := mSmoothX
	21	[5852]	SELF     	R5 R5 K9 ; R6 := R5; R5 := R5[0x54ab95f9]
	22	[5852]	CALL     	R5 2 2 ; R5 := R5(R6)
	23	[5852]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 39
	24	[5852]	JMP      	39 ; PC := 39
	25	[5852]	GETGLOBAL	R4 K6 ; R4 := mPreviousDrag
	26	[5852]	GETTABLE 	R4 R4 K10 ; R4 := R4["y"]
	27	[5852]	GETGLOBAL	R5 K11 ; R5 := mSmoothY
	28	[5852]	SELF     	R5 R5 K9 ; R6 := R5; R5 := R5[0x54ab95f9]
	29	[5852]	CALL     	R5 2 2 ; R5 := R5(R6)
	30	[5852]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 39
	31	[5852]	JMP      	39 ; PC := 39
	32	[5852]	GETGLOBAL	R4 K12 ; R4 := mHover
	33	[5852]	GETTABLE 	R4 R4 K13 ; R4 := R4["mPrevHoverNode"]
	34	[5852]	GETGLOBAL	R5 K12 ; R5 := mHover
	35	[5852]	GETTABLE 	R5 R5 K14 ; R5 := R5["Node"]
	36	[5852]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 39
	37	[5852]	JMP      	39 ; PC := 39
	38	[5852]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 39
	39	[5852]	OP_LOADBOOL	R4 1 0 ; R4 := true
	40	[5853]	GETGLOBAL	R5 K6 ; R5 := mPreviousDrag
	41	[5853]	GETGLOBAL	R6 K8 ; R6 := mSmoothX
	42	[5853]	SELF     	R6 R6 K9 ; R7 := R6; R6 := R6[0x54ab95f9]
	43	[5853]	CALL     	R6 2 2 ; R6 := R6(R7)
	44	[5853]	SETTABLE 	R5 K7 R6 ; R5["x"] := R6
	45	[5854]	GETGLOBAL	R5 K6 ; R5 := mPreviousDrag
	46	[5854]	GETGLOBAL	R6 K11 ; R6 := mSmoothY
	47	[5854]	SELF     	R6 R6 K9 ; R7 := R6; R6 := R6[0x54ab95f9]
	48	[5854]	CALL     	R6 2 2 ; R6 := R6(R7)
	49	[5854]	SETTABLE 	R5 K10 R6 ; R5["y"] := R6
	50	[5855]	GETGLOBAL	R5 K12 ; R5 := mHover
	51	[5855]	GETGLOBAL	R6 K12 ; R6 := mHover
	52	[5855]	GETTABLE 	R6 R6 K14 ; R6 := R6["Node"]
	53	[5855]	SETTABLE 	R5 K13 R6 ; R5["mPrevHoverNode"] := R6
	54	[5856]	GETGLOBAL	R5 K15 ; R5 := mPreviousNodeDuck
	55	[5856]	GETTABLE 	R5 R5 K16 ; R5 := R5["Alpha"]
	56	[5856]	GETGLOBAL	R6 K17 ; R6 := mNodeDuck
	57	[5856]	SELF     	R6 R6 K9 ; R7 := R6; R6 := R6[0x54ab95f9]
	58	[5856]	CALL     	R6 2 2 ; R6 := R6(R7)
	59	[5856]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 62
	60	[5856]	JMP      	62 ; PC := 62
	61	[5856]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 62
	62	[5856]	OP_LOADBOOL	R5 1 0 ; R5 := true
	63	[5857]	GETGLOBAL	R6 K15 ; R6 := mPreviousNodeDuck
	64	[5857]	GETGLOBAL	R7 K17 ; R7 := mNodeDuck
	65	[5857]	SELF     	R7 R7 K9 ; R8 := R7; R7 := R7[0x54ab95f9]
	66	[5857]	CALL     	R7 2 2 ; R7 := R7(R8)
	67	[5857]	SETTABLE 	R6 K16 R7 ; R6["Alpha"] := R7
	68	[5859]	GETGLOBAL	R6 K12 ; R6 := mHover
	69	[5859]	GETTABLE 	R6 R6 K18 ; R6 := R6["Region"]
	70	[5860]	EQ       	0 R6 K19 ; if R6 ~= nil then PC := 82
	71	[5860]	JMP      	82 ; PC := 82
	72	[5860]	GETGLOBAL	R7 K20 ; R7 := mPreviousRegionDuck
	73	[5860]	GETTABLE 	R7 R7 K18 ; R7 := R7["Region"]
	74	[5860]	EQ       	1 R7 K19 ; if R7 == nil then PC := 82
	75	[5860]	JMP      	82 ; PC := 82
	76	[5860]	GETGLOBAL	R7 K20 ; R7 := mPreviousRegionDuck
	77	[5860]	GETTABLE 	R7 R7 K16 ; R7 := R7["Alpha"]
	78	[5860]	LT       	0 K21 R7 ; if 0.000000 >= R7 then PC := 82
	79	[5860]	JMP      	82 ; PC := 82
	80	[5861]	GETGLOBAL	R7 K20 ; R7 := mPreviousRegionDuck
	81	[5861]	GETTABLE 	R6 R7 K18 ; R6 := R7["Region"]
	82	[5863]	LOADNIL  	R7 R7 ; R7 := nil
	83	[5864]	EQ       	1 R6 K19 ; if R6 == nil then PC := 97
	84	[5864]	JMP      	97 ; PC := 97
	85	[5865]	LOADK    	R8 := 1.000000
	86	[5865]	GETGLOBAL	R9 K22 ; R9 := mRegions
	87	[5865]	LEN      	R9 R9 ; R9 := # R9
	88	[5865]	LOADK    	R10 := 1.000000
	89	[5865]	FORPREP  	R8 96 ; R8 -= R10; PC := 96
	90	[5866]	GETGLOBAL	R12 K22 ; R12 := mRegions
	91	[5866]	GETTABLE 	R12 R12 R11 ; R12 := R12[R11]
	92	[5866]	EQ       	0 R6 R12 ; if R6 ~= R12 then PC := 96
	93	[5866]	JMP      	96 ; PC := 96
	94	[5867]	SUB      	R7 R11 K23 ; R7 := R11 - 1.000000
	95	[5868]	JMP      	97 ; PC := 97
	96	[5865]	FORLOOP  	R8 90 ; R8 += R10; if R8 <= R9 then begin PC := 90; R11 := R8 end
	97	[5873]	GETGLOBAL	R12 K20 ; R12 := mPreviousRegionDuck
	98	[5873]	GETTABLE 	R12 R12 K16 ; R12 := R12["Alpha"]
	99	[5873]	GETGLOBAL	R13 K24 ; R13 := mRegionConnectionsDuck
	100	[5873]	SELF     	R13 R13 K9 ; R14 := R13; R13 := R13[0x54ab95f9]
	101	[5873]	CALL     	R13 2 2 ; R13 := R13(R14)
	102	[5873]	EQ       	0 R12 R13 ; if R12 ~= R13 then PC := 105
	103	[5873]	JMP      	105 ; PC := 105
	104	[5873]	OP_LOADBOOL	R12 0 1 ; R12 := false; PC := 105
	105	[5873]	OP_LOADBOOL	R12 1 0 ; R12 := true
	106	[5874]	GETGLOBAL	R13 K20 ; R13 := mPreviousRegionDuck
	107	[5874]	GETGLOBAL	R14 K24 ; R14 := mRegionConnectionsDuck
	108	[5874]	SELF     	R14 R14 K9 ; R15 := R14; R14 := R14[0x54ab95f9]
	109	[5874]	CALL     	R14 2 2 ; R14 := R14(R15)
	110	[5874]	SETTABLE 	R13 K16 R14 ; R13["Alpha"] := R14
	111	[5876]	GETUPVAL 	R13 U1 ; R13 := U1
	112	[5876]	GETUPVAL 	R14 U2 ; R14 := U2
	113	[5876]	GETTABLE 	R14 R14 K25 ; R14 := R14["READ_ONLY"]
	114	[5876]	EQ       	1 R13 R14 ; if R13 == R14 then PC := 119
	115	[5876]	JMP      	119 ; PC := 119
	116	[5878]	OP_LOADBOOL	R3 1 0 ; R3 := true
	117	[5879]	OP_LOADBOOL	R4 1 0 ; R4 := true
	118	[5879]	JMP      	156 ; PC := 156
	119	[5880]	GETGLOBAL	R13 K26 ; R13 := 0x7b998233
	120	[5880]	GETUPVAL 	R14 U0 ; R14 := U0
	121	[5880]	GETTABLE 	R14 R14 K27 ; R14 := R14["cameraSpot"]
	122	[5880]	CALL     	R13 2 2 ; R13 := R13(R14)
	123	[5880]	TEST     	R13 1 ; if R13 then PC := 156
	124	[5880]	JMP      	156 ; PC := 156
	125	[5881]	GETUPVAL 	R13 U0 ; R13 := U0
	126	[5881]	GETTABLE 	R13 R13 K27 ; R13 := R13["cameraSpot"]
	127	[5881]	SELF     	R13 R13 K28 ; R14 := R13; R13 := R13[0xf6ebd926]
	128	[5881]	CALL     	R13 2 2 ; R13 := R13(R14)
	129	[5881]	GETUPVAL 	R14 U0 ; R14 := U0
	130	[5881]	GETTABLE 	R14 R14 K29 ; R14 := R14["oldPos"]
	131	[5881]	SUB      	R13 R13 R14 ; R13 := R13 - R14
	132	[5882]	GETTABLE 	R14 R13 K7 ; R14 := R13["x"]
	133	[5882]	EQ       	0 R14 K21 ; if R14 ~= 0.000000 then PC := 138
	134	[5882]	JMP      	138 ; PC := 138
	135	[5882]	GETTABLE 	R14 R13 K10 ; R14 := R13["y"]
	136	[5882]	EQ       	1 R14 K21 ; if R14 == 0.000000 then PC := 146
	137	[5882]	JMP      	146 ; PC := 146
	138	[5883]	GETUPVAL 	R14 U0 ; R14 := U0
	139	[5883]	GETUPVAL 	R15 U0 ; R15 := U0
	140	[5883]	GETTABLE 	R15 R15 K27 ; R15 := R15["cameraSpot"]
	141	[5883]	SELF     	R15 R15 K28 ; R16 := R15; R15 := R15[0xf6ebd926]
	142	[5883]	CALL     	R15 2 2 ; R15 := R15(R16)
	143	[5883]	SETTABLE 	R14 K29 R15 ; R14["oldPos"] := R15
	144	[5884]	OP_LOADBOOL	R4 1 0 ; R4 := true
	145	[5884]	JMP      	156 ; PC := 156
	146	[5885]	GETTABLE 	R14 R13 K30 ; R14 := R13["z"]
	147	[5885]	EQ       	1 R14 K21 ; if R14 == 0.000000 then PC := 156
	148	[5885]	JMP      	156 ; PC := 156
	149	[5886]	GETUPVAL 	R14 U0 ; R14 := U0
	150	[5886]	GETUPVAL 	R15 U0 ; R15 := U0
	151	[5886]	GETTABLE 	R15 R15 K27 ; R15 := R15["cameraSpot"]
	152	[5886]	SELF     	R15 R15 K28 ; R16 := R15; R15 := R15[0xf6ebd926]
	153	[5886]	CALL     	R15 2 2 ; R15 := R15(R16)
	154	[5886]	SETTABLE 	R14 K29 R15 ; R14["oldPos"] := R15
	155	[5887]	OP_LOADBOOL	R3 1 0 ; R3 := true
	156	[5891]	LOADNIL  	R14 R15 ; R14 := R15 := nil
	157	[5892]	GETGLOBAL	R16 K2 ; R16 := 0xa421af95
	158	[5892]	CALL     	R16 1 2 ; R16 := R16()
	159	[5893]	GETGLOBAL	R17 K2 ; R17 := 0xa421af95
	160	[5893]	CALL     	R17 1 2 ; R17 := R17()
	161	[5894]	GETGLOBAL	R18 K31 ; R18 := 0x00046924
	162	[5894]	CALL     	R18 1 2 ; R18 := R18()
	163	[5895]	GETGLOBAL	R19 K2 ; R19 := 0xa421af95
	164	[5895]	CALL     	R19 1 2 ; R19 := R19()
	165	[5897]	TEST     	R4 1 ; if R4 then PC := 175
	166	[5897]	JMP      	175 ; PC := 175
	167	[5897]	TEST     	R3 1 ; if R3 then PC := 175
	168	[5897]	JMP      	175 ; PC := 175
	169	[5897]	TEST     	R5 1 ; if R5 then PC := 175
	170	[5897]	JMP      	175 ; PC := 175
	171	[5897]	TEST     	R12 1 ; if R12 then PC := 175
	172	[5897]	JMP      	175 ; PC := 175
	173	[5897]	TEST     	R0 0 ; if not R0 then PC := 1055
	174	[5897]	JMP      	1055 ; PC := 1055
	175	[5899]	LOADK    	R20 := 100.000000
	176	[5899]	LOADNIL  	R21 R23 ; R21 := R22 := R23 := nil
	177	[5901]	TEST     	R3 0 ; if not R3 then PC := 248
	178	[5901]	JMP      	248 ; PC := 248
	179	[5902]	LOADK    	R24 K32 ; R24 := 0.200000
	180	[5903]	GETGLOBAL	R25 K33 ; R25 := 0x42dcc9f5
	181	[5903]	MOVE     	R26 R2 ; R26 := R2
	182	[5903]	GETUPVAL 	R27 U3 ; R27 := U3
	183	[5903]	GETTABLE 	R27 R27 K34 ; R27 := R27["LAYER_1_RANGE"]
	184	[5903]	GETTABLE 	R27 R27 K35 ; R27 := R27["minValue"]
	185	[5903]	GETUPVAL 	R28 U3 ; R28 := U3
	186	[5903]	GETTABLE 	R28 R28 K34 ; R28 := R28["LAYER_1_RANGE"]
	187	[5903]	GETTABLE 	R28 R28 K36 ; R28 := R28["maxValue"]
	188	[5903]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	189	[5903]	MOVE     	R15 R25 ; R15 := R25
	190	[5904]	GETUPVAL 	R25 U3 ; R25 := U3
	191	[5904]	GETTABLE 	R25 R25 K34 ; R25 := R25["LAYER_1_RANGE"]
	192	[5904]	SELF     	R25 R25 K37 ; R26 := R25; R25 := R25[0x3b93153d]
	193	[5904]	MOVE     	R27 R15 ; R27 := R15
	194	[5904]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	195	[5904]	MOVE     	R15 R25 ; R15 := R25
	196	[5905]	LT       	0 R15 R24 ; if R15 >= R24 then PC := 205
	197	[5905]	JMP      	205 ; PC := 205
	198	[5906]	GETGLOBAL	R25 K38 ; R25 := 0x9bafffe3
	199	[5906]	LOADK    	R26 := 0.000000
	200	[5906]	LOADK    	R27 := 80.000000
	201	[5906]	DIV      	R28 R15 R24 ; R28 := R15 / R24
	202	[5906]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	203	[5906]	MOVE     	R20 R25 ; R20 := R25
	204	[5906]	JMP      	218 ; PC := 218
	205	[5907]	SUB      	R25 K23 R24 ; R25 := 1.000000 - R24
	206	[5907]	LT       	0 R25 R15 ; if R25 >= R15 then PC := 217
	207	[5907]	JMP      	217 ; PC := 217
	208	[5908]	GETGLOBAL	R25 K38 ; R25 := 0x9bafffe3
	209	[5908]	LOADK    	R26 := 80.000000
	210	[5908]	LOADK    	R27 := 0.000000
	211	[5908]	SUB      	R28 K23 R24 ; R28 := 1.000000 - R24
	212	[5908]	SUB      	R28 R15 R28 ; R28 := R15 - R28
	213	[5908]	DIV      	R28 R28 R24 ; R28 := R28 / R24
	214	[5908]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	215	[5908]	MOVE     	R20 R25 ; R20 := R25
	216	[5908]	JMP      	218 ; PC := 218
	217	[5910]	LOADK    	R20 := 80.000000
	218	[5913]	GETGLOBAL	R25 K33 ; R25 := 0x42dcc9f5
	219	[5913]	MOVE     	R26 R2 ; R26 := R2
	220	[5913]	GETUPVAL 	R27 U3 ; R27 := U3
	221	[5913]	GETTABLE 	R27 R27 K39 ; R27 := R27["PLANET_VIS_RANGE"]
	222	[5913]	GETTABLE 	R27 R27 K35 ; R27 := R27["minValue"]
	223	[5913]	GETUPVAL 	R28 U3 ; R28 := U3
	224	[5913]	GETTABLE 	R28 R28 K39 ; R28 := R28["PLANET_VIS_RANGE"]
	225	[5913]	GETTABLE 	R28 R28 K36 ; R28 := R28["maxValue"]
	226	[5913]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	227	[5913]	MOVE     	R15 R25 ; R15 := R25
	228	[5914]	GETGLOBAL	R25 K38 ; R25 := 0x9bafffe3
	229	[5914]	LOADK    	R26 := 0.000000
	230	[5914]	LOADK    	R27 := 80.000000
	231	[5914]	GETUPVAL 	R28 U3 ; R28 := U3
	232	[5914]	GETTABLE 	R28 R28 K39 ; R28 := R28["PLANET_VIS_RANGE"]
	233	[5914]	SELF     	R28 R28 K37 ; R29 := R28; R28 := R28[0x3b93153d]
	234	[5914]	MOVE     	R30 R15 ; R30 := R15
	235	[5914]	CALL     	R28 3 0 ; R28,... := R28(R29,R30)
	236	[5914]	CALL     	R25 0 2 ; R25 := R25(R26,...)
	237	[5914]	MOVE     	R21 R25 ; R21 := R25
	238	[5915]	GETGLOBAL	R25 K38 ; R25 := 0x9bafffe3
	239	[5915]	LOADK    	R26 := 50.000000
	240	[5915]	LOADK    	R27 := 80.000000
	241	[5915]	GETUPVAL 	R28 U3 ; R28 := U3
	242	[5915]	GETTABLE 	R28 R28 K39 ; R28 := R28["PLANET_VIS_RANGE"]
	243	[5915]	SELF     	R28 R28 K37 ; R29 := R28; R28 := R28[0x3b93153d]
	244	[5915]	MOVE     	R30 R15 ; R30 := R15
	245	[5915]	CALL     	R28 3 0 ; R28,... := R28(R29,R30)
	246	[5915]	CALL     	R25 0 2 ; R25 := R25(R26,...)
	247	[5915]	MOVE     	R22 R25 ; R22 := R25
	248	[5918]	TEST     	R4 1 ; if R4 then PC := 254
	249	[5918]	JMP      	254 ; PC := 254
	250	[5918]	TEST     	R3 1 ; if R3 then PC := 254
	251	[5918]	JMP      	254 ; PC := 254
	252	[5918]	TEST     	R0 0 ; if not R0 then PC := 315
	253	[5918]	JMP      	315 ; PC := 315
	254	[5919]	LOADK    	R25 := 1.000000
	255	[5919]	GETUPVAL 	R26 U4 ; R26 := U4
	256	[5919]	LEN      	R26 R26 ; R26 := # R26
	257	[5919]	LOADK    	R27 := 1.000000
	258	[5919]	FORPREP  	R25 314 ; R25 -= R27; PC := 314
	259	[5920]	GETGLOBAL	R29 K40 ; R29 := 0xae91e43b
	260	[5920]	SELF     	R29 R29 K41 ; R30 := R29; R29 := R29[0xb9ad3599]
	261	[5920]	MOVE     	R31 R16 ; R31 := R16
	262	[5920]	GETUPVAL 	R32 U4 ; R32 := U4
	263	[5920]	GETTABLE 	R32 R32 R28 ; R32 := R32[R28]
	264	[5920]	GETTABLE 	R32 R32 K42 ; R32 := R32["pos"]
	265	[5920]	OP_LOADBOOL	R33 1 0 ; R33 := true
	266	[5920]	OP_LOADBOOL	R34 0 0 ; R34 := false
	267	[5920]	CALL     	R29 6 1 ; R29(R30,R31,R32,R33,R34)
	268	[5921]	GETGLOBAL	R29 K40 ; R29 := 0xae91e43b
	269	[5921]	SELF     	R29 R29 K43 ; R30 := R29; R29 := R29[0xd38cedf3]
	270	[5921]	GETUPVAL 	R31 U4 ; R31 := U4
	271	[5921]	GETTABLE 	R31 R31 R28 ; R31 := R31[R28]
	272	[5921]	GETTABLE 	R31 R31 K44 ; R31 := R31["memberIndex"]
	273	[5921]	GETTABLE 	R32 R16 K7 ; R32 := R16["x"]
	274	[5921]	GETTABLE 	R33 R16 K10 ; R33 := R16["y"]
	275	[5921]	SUB      	R33 R33 K45 ; R33 := R33 - 10.000000
	276	[5921]	CALL     	R29 5 1 ; R29(R30,R31,R32,R33)
	277	[5923]	TEST     	R3 0 ; if not R3 then PC := 314
	278	[5923]	JMP      	314 ; PC := 314
	279	[5923]	GETUPVAL 	R29 U4 ; R29 := U4
	280	[5923]	GETTABLE 	R29 R29 R28 ; R29 := R29[R28]
	281	[5923]	GETTABLE 	R29 R29 K46 ; R29 := R29["layer"]
	282	[5923]	TEST     	R29 0 ; if not R29 then PC := 314
	283	[5923]	JMP      	314 ; PC := 314
	284	[5924]	LOADK    	R14 := 100.000000
	285	[5926]	GETUPVAL 	R29 U4 ; R29 := U4
	286	[5926]	GETTABLE 	R29 R29 R28 ; R29 := R29[R28]
	287	[5926]	GETTABLE 	R29 R29 K46 ; R29 := R29["layer"]
	288	[5926]	EQ       	0 R29 K23 ; if R29 ~= 1.000000 then PC := 292
	289	[5926]	JMP      	292 ; PC := 292
	290	[5927]	MOVE     	R14 R20 ; R14 := R20
	291	[5927]	JMP      	306 ; PC := 306
	292	[5928]	GETUPVAL 	R29 U4 ; R29 := U4
	293	[5928]	GETTABLE 	R29 R29 R28 ; R29 := R29[R28]
	294	[5928]	GETTABLE 	R29 R29 K46 ; R29 := R29["layer"]
	295	[5928]	EQ       	0 R29 K47 ; if R29 ~= 2.000000 then PC := 306
	296	[5928]	JMP      	306 ; PC := 306
	297	[5929]	MOVE     	R14 R21 ; R14 := R21
	298	[5930]	GETGLOBAL	R29 K40 ; R29 := 0xae91e43b
	299	[5930]	SELF     	R29 R29 K48 ; R30 := R29; R29 := R29[0x9621a812]
	300	[5930]	GETUPVAL 	R31 U4 ; R31 := U4
	301	[5930]	GETTABLE 	R31 R31 R28 ; R31 := R31[R28]
	302	[5930]	GETTABLE 	R31 R31 K44 ; R31 := R31["memberIndex"]
	303	[5930]	MOVE     	R32 R22 ; R32 := R22
	304	[5930]	MOVE     	R33 R22 ; R33 := R22
	305	[5930]	CALL     	R29 5 1 ; R29(R30,R31,R32,R33)
	306	[5933]	GETGLOBAL	R29 K40 ; R29 := 0xae91e43b
	307	[5933]	SELF     	R29 R29 K49 ; R30 := R29; R29 := R29[0xcd12f3f1]
	308	[5933]	GETUPVAL 	R31 U4 ; R31 := U4
	309	[5933]	GETTABLE 	R31 R31 R28 ; R31 := R31[R28]
	310	[5933]	GETTABLE 	R31 R31 K44 ; R31 := R31["memberIndex"]
	311	[5933]	LOADK    	R32 := 10.000000
	312	[5933]	MOVE     	R33 R14 ; R33 := R14
	313	[5933]	CALL     	R29 5 1 ; R29(R30,R31,R32,R33)
	314	[5919]	FORLOOP  	R25 259 ; R25 += R27; if R25 <= R26 then begin PC := 259; R28 := R25 end
	315	[5938]	GETGLOBAL	R29 K33 ; R29 := 0x42dcc9f5
	316	[5938]	MOVE     	R30 R2 ; R30 := R2
	317	[5938]	GETUPVAL 	R31 U3 ; R31 := U3
	318	[5938]	GETTABLE 	R31 R31 K50 ; R31 := R31["LAYER_2_RANGE"]
	319	[5938]	GETTABLE 	R31 R31 K35 ; R31 := R31["minValue"]
	320	[5938]	GETUPVAL 	R32 U3 ; R32 := U3
	321	[5938]	GETTABLE 	R32 R32 K50 ; R32 := R32["LAYER_2_RANGE"]
	322	[5938]	GETTABLE 	R32 R32 K36 ; R32 := R32["maxValue"]
	323	[5938]	CALL     	R29 4 2 ; R29 := R29(R30,R31,R32)
	324	[5938]	MOVE     	R15 R29 ; R15 := R29
	325	[5939]	GETGLOBAL	R29 K51 ; R29 := mNodeAlphaValues
	326	[5939]	GETTABLE 	R29 R29 K52 ; R29 := R29["NodeLayerAlpha"]
	327	[5940]	GETGLOBAL	R30 K38 ; R30 := 0x9bafffe3
	328	[5940]	LOADK    	R31 := 0.000000
	329	[5940]	LOADK    	R32 := 100.000000
	330	[5940]	GETUPVAL 	R33 U3 ; R33 := U3
	331	[5940]	GETTABLE 	R33 R33 K50 ; R33 := R33["LAYER_2_RANGE"]
	332	[5940]	SELF     	R33 R33 K37 ; R34 := R33; R33 := R33[0x3b93153d]
	333	[5940]	MOVE     	R35 R15 ; R35 := R15
	334	[5940]	CALL     	R33 3 0 ; R33,... := R33(R34,R35)
	335	[5940]	CALL     	R30 0 2 ; R30 := R30(R31,...)
	336	[5941]	GETGLOBAL	R31 K51 ; R31 := mNodeAlphaValues
	337	[5941]	GETTABLE 	R31 R31 K53 ; R31 := R31["MinNodeAlphaToClick"]
	338	[5941]	LT       	0 R31 R29 ; if R31 >= R29 then PC := 353
	339	[5941]	JMP      	353 ; PC := 353
	340	[5941]	GETGLOBAL	R31 K51 ; R31 := mNodeAlphaValues
	341	[5941]	GETTABLE 	R31 R31 K53 ; R31 := R31["MinNodeAlphaToClick"]
	342	[5941]	LE       	0 R30 R31 ; if R30 > R31 then PC := 353
	343	[5941]	JMP      	353 ; PC := 353
	344	[5942]	GETUPVAL 	R31 U5 ; R31 := U5
	345	[5942]	CALL     	R31 1 1 ; R31()
	346	[5943]	GETGLOBAL	R31 K40 ; R31 := 0xae91e43b
	347	[5943]	SELF     	R31 R31 K54 ; R32 := R31; R31 := R31[0x0c33ebb2]
	348	[5943]	LOADK    	R33 K55 ; R33 := "Nodes"
	349	[5943]	LOADK    	R34 K56 ; R34 := "noMenuSelection"
	350	[5943]	OP_LOADBOOL	R35 1 0 ; R35 := true
	351	[5943]	CALL     	R31 5 1 ; R31(R32,R33,R34,R35)
	352	[5943]	JMP      	367 ; PC := 367
	353	[5944]	GETGLOBAL	R31 K51 ; R31 := mNodeAlphaValues
	354	[5944]	GETTABLE 	R31 R31 K53 ; R31 := R31["MinNodeAlphaToClick"]
	355	[5944]	LE       	0 R29 R31 ; if R29 > R31 then PC := 367
	356	[5944]	JMP      	367 ; PC := 367
	357	[5944]	GETGLOBAL	R31 K51 ; R31 := mNodeAlphaValues
	358	[5944]	GETTABLE 	R31 R31 K53 ; R31 := R31["MinNodeAlphaToClick"]
	359	[5944]	LT       	0 R31 R30 ; if R31 >= R30 then PC := 367
	360	[5944]	JMP      	367 ; PC := 367
	361	[5945]	GETGLOBAL	R31 K40 ; R31 := 0xae91e43b
	362	[5945]	SELF     	R31 R31 K54 ; R32 := R31; R31 := R31[0x0c33ebb2]
	363	[5945]	LOADK    	R33 K55 ; R33 := "Nodes"
	364	[5945]	LOADK    	R34 K56 ; R34 := "noMenuSelection"
	365	[5945]	OP_LOADBOOL	R35 0 0 ; R35 := false
	366	[5945]	CALL     	R31 5 1 ; R31(R32,R33,R34,R35)
	367	[5948]	GETGLOBAL	R31 K51 ; R31 := mNodeAlphaValues
	368	[5948]	SETTABLE 	R31 K52 R30 ; R31["NodeLayerAlpha"] := R30
	369	[5950]	GETUPVAL 	R31 U3 ; R31 := U3
	370	[5950]	GETTABLE 	R31 R31 K50 ; R31 := R31["LAYER_2_RANGE"]
	371	[5950]	SELF     	R31 R31 K37 ; R32 := R31; R31 := R31[0x3b93153d]
	372	[5950]	MOVE     	R33 R15 ; R33 := R15
	373	[5950]	CALL     	R31 3 2 ; R31 := R31(R32,R33)
	374	[5952]	GETGLOBAL	R32 K33 ; R32 := 0x42dcc9f5
	375	[5952]	MOVE     	R33 R2 ; R33 := R2
	376	[5952]	GETUPVAL 	R34 U3 ; R34 := U3
	377	[5952]	GETTABLE 	R34 R34 K57 ; R34 := R34["SHORTCUT_RANGE"]
	378	[5952]	GETTABLE 	R34 R34 K35 ; R34 := R34["minValue"]
	379	[5952]	GETUPVAL 	R35 U3 ; R35 := U3
	380	[5952]	GETTABLE 	R35 R35 K57 ; R35 := R35["SHORTCUT_RANGE"]
	381	[5952]	GETTABLE 	R35 R35 K36 ; R35 := R35["maxValue"]
	382	[5952]	CALL     	R32 4 2 ; R32 := R32(R33,R34,R35)
	383	[5952]	MOVE     	R15 R32 ; R15 := R32
	384	[5953]	GETGLOBAL	R32 K38 ; R32 := 0x9bafffe3
	385	[5953]	LOADK    	R33 := 0.000000
	386	[5953]	LOADK    	R34 := 100.000000
	387	[5953]	GETUPVAL 	R35 U3 ; R35 := U3
	388	[5953]	GETTABLE 	R35 R35 K57 ; R35 := R35["SHORTCUT_RANGE"]
	389	[5953]	SELF     	R35 R35 K37 ; R36 := R35; R35 := R35[0x3b93153d]
	390	[5953]	MOVE     	R37 R15 ; R37 := R15
	391	[5953]	CALL     	R35 3 0 ; R35,... := R35(R36,R37)
	392	[5953]	CALL     	R32 0 2 ; R32 := R32(R33,...)
	393	[5953]	MOVE     	R23 R32 ; R23 := R32
	394	[5955]	GETUPVAL 	R32 U1 ; R32 := U1
	395	[5955]	GETUPVAL 	R33 U2 ; R33 := U2
	396	[5955]	GETTABLE 	R33 R33 K58 ; R33 := R33["EDIT_NODES"]
	397	[5955]	EQ       	1 R32 R33 ; if R32 == R33 then PC := 409
	398	[5955]	JMP      	409 ; PC := 409
	399	[5955]	GETUPVAL 	R32 U1 ; R32 := U1
	400	[5955]	GETUPVAL 	R33 U2 ; R33 := U2
	401	[5955]	GETTABLE 	R33 R33 K59 ; R33 := R33["EDIT_EDGES"]
	402	[5955]	EQ       	1 R32 R33 ; if R32 == R33 then PC := 409
	403	[5955]	JMP      	409 ; PC := 409
	404	[5955]	GETUPVAL 	R32 U1 ; R32 := U1
	405	[5955]	GETUPVAL 	R33 U2 ; R33 := U2
	406	[5955]	GETTABLE 	R33 R33 K60 ; R33 := R33["EDIT_NODE_DECOS"]
	407	[5955]	EQ       	0 R32 R33 ; if R32 ~= R33 then PC := 411
	408	[5955]	JMP      	411 ; PC := 411
	409	[5956]	GETGLOBAL	R32 K51 ; R32 := mNodeAlphaValues
	410	[5956]	SETTABLE 	R32 K52 K61 ; R32["NodeLayerAlpha"] := 100.000000
	411	[5959]	LOADNIL  	R32 R36 ; R32 := R33 := R34 := R35 := R36 := nil
	412	[5962]	GETGLOBAL	R37 K51 ; R37 := mNodeAlphaValues
	413	[5962]	GETTABLE 	R37 R37 K52 ; R37 := R37["NodeLayerAlpha"]
	414	[5962]	LT       	1 K21 R37 ; if 0.000000 < R37 then PC := 428
	415	[5962]	JMP      	428 ; PC := 428
	416	[5962]	GETGLOBAL	R37 K51 ; R37 := mNodeAlphaValues
	417	[5962]	GETTABLE 	R37 R37 K52 ; R37 := R37["NodeLayerAlpha"]
	418	[5962]	LT       	1 K21 R37 ; if 0.000000 < R37 then PC := 421
	419	[5962]	JMP      	421 ; PC := 421
	420	[5962]	OP_LOADBOOL	R37 0 1 ; R37 := false; PC := 421
	421	[5962]	OP_LOADBOOL	R37 1 0 ; R37 := true
	422	[5962]	LT       	1 K21 R29 ; if 0.000000 < R29 then PC := 425
	423	[5962]	JMP      	425 ; PC := 425
	424	[5962]	OP_LOADBOOL	R38 0 1 ; R38 := false; PC := 425
	425	[5962]	OP_LOADBOOL	R38 1 0 ; R38 := true
	426	[5962]	EQ       	0 R37 R38 ; if R37 ~= R38 then PC := 428
	427	[5962]	JMP      	428 ; PC := 428
	428	[5963]	LOADK    	R37 := 1.000000
	429	[5963]	GETUPVAL 	R38 U6 ; R38 := U6
	430	[5963]	LEN      	R38 R38 ; R38 := # R38
	431	[5963]	LOADK    	R39 := 1.000000
	432	[5963]	FORPREP  	R37 838 ; R37 -= R39; PC := 838
	433	[5964]	GETGLOBAL	R41 K62 ; R41 := 0xce225efa
	434	[5964]	CALL     	R41 1 1 ; R41()
	435	[5966]	GETUPVAL 	R41 U6 ; R41 := U6
	436	[5966]	GETTABLE 	R41 R41 R40 ; R41 := R41[R40]
	437	[5967]	GETTABLE 	R42 R41 K63 ; R42 := R41["radialSector"]
	438	[5969]	TEST     	R4 1 ; if R4 then PC := 444
	439	[5969]	JMP      	444 ; PC := 444
	440	[5969]	TEST     	R3 1 ; if R3 then PC := 444
	441	[5969]	JMP      	444 ; PC := 444
	442	[5969]	TEST     	R0 0 ; if not R0 then PC := 584
	443	[5969]	JMP      	584 ; PC := 584
	444	[5970]	GETTABLE 	R33 R41 K64 ; R33 := R41["position"]
	445	[5972]	GETGLOBAL	R43 K40 ; R43 := 0xae91e43b
	446	[5972]	SELF     	R43 R43 K41 ; R44 := R43; R43 := R43[0xb9ad3599]
	447	[5972]	MOVE     	R45 R16 ; R45 := R16
	448	[5972]	MOVE     	R46 R33 ; R46 := R33
	449	[5972]	OP_LOADBOOL	R47 1 0 ; R47 := true
	450	[5972]	GETUPVAL 	R48 U7 ; R48 := U7
	451	[5972]	CALL     	R43 6 1 ; R43(R44,R45,R46,R47,R48)
	452	[5973]	GETGLOBAL	R43 K40 ; R43 := 0xae91e43b
	453	[5973]	SELF     	R43 R43 K43 ; R44 := R43; R43 := R43[0xd38cedf3]
	454	[5973]	GETTABLE 	R45 R41 K44 ; R45 := R41["memberIndex"]
	455	[5973]	GETTABLE 	R46 R16 K7 ; R46 := R16["x"]
	456	[5973]	GETTABLE 	R47 R16 K10 ; R47 := R16["y"]
	457	[5973]	CALL     	R43 5 1 ; R43(R44,R45,R46,R47)
	458	[5975]	GETGLOBAL	R43 K38 ; R43 := 0x9bafffe3
	459	[5975]	LOADK    	R44 := 20.000000
	460	[5975]	LOADK    	R45 := 50.000000
	461	[5975]	MOVE     	R46 R31 ; R46 := R31
	462	[5975]	CALL     	R43 4 2 ; R43 := R43(R44,R45,R46)
	463	[5975]	MOVE     	R32 R43 ; R32 := R43
	464	[5976]	GETTABLE 	R43 R41 K65 ; R43 := R41["isSurfaceNode"]
	465	[5976]	TEST     	R43 0 ; if not R43 then PC := 559
	466	[5976]	JMP      	559 ; PC := 559
	467	[5977]	LOADK    	R34 := 100.000000
	468	[5978]	GETTABLE 	R35 R33 K30 ; R35 := R33["z"]
	469	[5979]	MUL      	R35 R35 K45 ; R35 := R35 * 10.000000
	470	[5980]	LE       	0 K21 R35 ; if 0.000000 > R35 then PC := 487
	471	[5980]	JMP      	487 ; PC := 487
	472	[5981]	GETGLOBAL	R43 K38 ; R43 := 0x9bafffe3
	473	[5981]	LOADK    	R44 := 75.000000
	474	[5981]	LOADK    	R45 := 50.000000
	475	[5981]	GETGLOBAL	R46 K33 ; R46 := 0x42dcc9f5
	476	[5981]	GETGLOBAL	R47 K66 ; R47 := 0x5bced4c4
	477	[5981]	GETTABLE 	R47 R47 K67 ; R47 := R47[0xa40531d8]
	478	[5981]	MOVE     	R48 R35 ; R48 := R35
	479	[5981]	LOADK    	R49 := 3.000000
	480	[5981]	CALL     	R47 3 2 ; R47 := R47(R48,R49)
	481	[5981]	LOADK    	R48 := 0.000000
	482	[5981]	LOADK    	R49 := 1.000000
	483	[5981]	CALL     	R46 4 0 ; R46,... := R46(R47,R48,R49)
	484	[5981]	CALL     	R43 0 2 ; R43 := R43(R44,...)
	485	[5981]	MOVE     	R34 R43 ; R34 := R43
	486	[5981]	JMP      	504 ; PC := 504
	487	[5983]	GETGLOBAL	R43 K38 ; R43 := 0x9bafffe3
	488	[5983]	LOADK    	R44 := 75.000000
	489	[5983]	LOADK    	R45 := 100.000000
	490	[5983]	GETGLOBAL	R46 K33 ; R46 := 0x42dcc9f5
	491	[5983]	GETGLOBAL	R47 K66 ; R47 := 0x5bced4c4
	492	[5983]	GETTABLE 	R47 R47 K67 ; R47 := R47[0xa40531d8]
	493	[5983]	GETGLOBAL	R48 K66 ; R48 := 0x5bced4c4
	494	[5983]	GETTABLE 	R48 R48 K68 ; R48 := R48[0xe4a5b3ca]
	495	[5983]	MOVE     	R49 R35 ; R49 := R35
	496	[5983]	CALL     	R48 2 2 ; R48 := R48(R49)
	497	[5983]	LOADK    	R49 := 3.000000
	498	[5983]	CALL     	R47 3 2 ; R47 := R47(R48,R49)
	499	[5983]	LOADK    	R48 := 0.000000
	500	[5983]	LOADK    	R49 := 1.000000
	501	[5983]	CALL     	R46 4 0 ; R46,... := R46(R47,R48,R49)
	502	[5983]	CALL     	R43 0 2 ; R43 := R43(R44,...)
	503	[5983]	MOVE     	R34 R43 ; R34 := R43
	504	[5986]	GETGLOBAL	R43 K69 ; R43 := mRegionInstances
	505	[5986]	GETTABLE 	R44 R42 K70 ; R44 := R42["region"]
	506	[5986]	ADD      	R44 R44 K23 ; R44 := R44 + 1.000000
	507	[5986]	GETTABLE 	R36 R43 R44 ; R36 := R43[R44]
	508	[5988]	GETGLOBAL	R43 K26 ; R43 := 0x7b998233
	509	[5988]	MOVE     	R44 R36 ; R44 := R36
	510	[5988]	CALL     	R43 2 2 ; R43 := R43(R44)
	511	[5988]	TEST     	R43 1 ; if R43 then PC := 542
	512	[5988]	JMP      	542 ; PC := 542
	513	[5988]	GETTABLE 	R43 R41 K71 ; R43 := R41["newWarMode"]
	514	[5988]	TEST     	R43 1 ; if R43 then PC := 542
	515	[5988]	JMP      	542 ; PC := 542
	516	[5989]	SELF     	R43 R36 K72 ; R44 := R36; R43 := R36[0x4078bbf8]
	517	[5989]	MOVE     	R45 R17 ; R45 := R17
	518	[5989]	CALL     	R43 3 1 ; R43(R44,R45)
	519	[5990]	GETGLOBAL	R43 K73 ; R43 := 0x83ddcc65
	520	[5990]	MOVE     	R44 R19 ; R44 := R19
	521	[5990]	MOVE     	R45 R33 ; R45 := R33
	522	[5990]	MOVE     	R46 R17 ; R46 := R17
	523	[5990]	CALL     	R43 4 1 ; R43(R44,R45,R46)
	524	[5991]	GETGLOBAL	R43 K74 ; R43 := 0x83a41541
	525	[5991]	MOVE     	R44 R18 ; R44 := R18
	526	[5991]	MOVE     	R45 R1 ; R45 := R1
	527	[5991]	MOVE     	R46 R19 ; R46 := R19
	528	[5991]	CALL     	R43 4 1 ; R43(R44,R45,R46)
	529	[5992]	GETTABLE 	R43 R18 K75 ; R43 := R18["heading"]
	530	[5992]	UNM      	R43 R43 ; R43 := ^ R43
	531	[5992]	SUB      	R43 R43 K76 ; R43 := R43 - 180.000000
	532	[5992]	SETTABLE 	R18 K75 R43 ; R18["heading"] := R43
	533	[5993]	GETGLOBAL	R43 K33 ; R43 := 0x42dcc9f5
	534	[5993]	GETTABLE 	R44 R18 K77 ; R44 := R18["pitch"]
	535	[5993]	MUL      	R44 R44 K78 ; R44 := R44 * 0.750000
	536	[5993]	LOADK    	R45 := -75.000000
	537	[5993]	LOADK    	R46 := 75.000000
	538	[5993]	CALL     	R43 4 2 ; R43 := R43(R44,R45,R46)
	539	[5993]	MUL      	R43 R43 K79 ; R43 := R43 * -1.000000
	540	[5993]	SETTABLE 	R18 K77 R43 ; R18["pitch"] := R43
	541	[5993]	JMP      	544 ; PC := 544
	542	[5995]	SETTABLE 	R18 K75 K21 ; R18["heading"] := 0.000000
	543	[5996]	SETTABLE 	R18 K77 K21 ; R18["pitch"] := 0.000000
	544	[5999]	GETGLOBAL	R43 K40 ; R43 := 0xae91e43b
	545	[5999]	SELF     	R43 R43 K80 ; R44 := R43; R43 := R43[0xf64b7262]
	546	[5999]	GETTABLE 	R45 R41 K81 ; R45 := R41["clipName"]
	547	[5999]	LOADK    	R46 K82 ; R46 := "Node.Container"
	548	[5999]	LOADK    	R47 := 15.000000
	549	[5999]	GETTABLE 	R48 R18 K75 ; R48 := R18["heading"]
	550	[5999]	CALL     	R43 6 1 ; R43(R44,R45,R46,R47,R48)
	551	[6000]	GETGLOBAL	R43 K40 ; R43 := 0xae91e43b
	552	[6000]	SELF     	R43 R43 K80 ; R44 := R43; R43 := R43[0xf64b7262]
	553	[6000]	GETTABLE 	R45 R41 K81 ; R45 := R41["clipName"]
	554	[6000]	LOADK    	R46 K82 ; R46 := "Node.Container"
	555	[6000]	LOADK    	R47 := 16.000000
	556	[6000]	GETTABLE 	R48 R18 K77 ; R48 := R18["pitch"]
	557	[6000]	CALL     	R43 6 1 ; R43(R44,R45,R46,R47,R48)
	558	[6000]	JMP      	578 ; PC := 578
	559	[6001]	GETUPVAL 	R43 U1 ; R43 := U1
	560	[6001]	GETUPVAL 	R44 U2 ; R44 := U2
	561	[6001]	GETTABLE 	R44 R44 K25 ; R44 := R44["READ_ONLY"]
	562	[6001]	EQ       	1 R43 R44 ; if R43 == R44 then PC := 578
	563	[6001]	JMP      	578 ; PC := 578
	564	[6002]	GETGLOBAL	R43 K40 ; R43 := 0xae91e43b
	565	[6002]	SELF     	R43 R43 K80 ; R44 := R43; R43 := R43[0xf64b7262]
	566	[6002]	GETTABLE 	R45 R41 K81 ; R45 := R41["clipName"]
	567	[6002]	LOADK    	R46 K82 ; R46 := "Node.Container"
	568	[6002]	LOADK    	R47 := 15.000000
	569	[6002]	LOADK    	R48 := 0.000000
	570	[6002]	CALL     	R43 6 1 ; R43(R44,R45,R46,R47,R48)
	571	[6003]	GETGLOBAL	R43 K40 ; R43 := 0xae91e43b
	572	[6003]	SELF     	R43 R43 K80 ; R44 := R43; R43 := R43[0xf64b7262]
	573	[6003]	GETTABLE 	R45 R41 K81 ; R45 := R41["clipName"]
	574	[6003]	LOADK    	R46 K82 ; R46 := "Node.Container"
	575	[6003]	LOADK    	R47 := 16.000000
	576	[6003]	LOADK    	R48 := 0.000000
	577	[6003]	CALL     	R43 6 1 ; R43(R44,R45,R46,R47,R48)
	578	[6006]	GETGLOBAL	R43 K40 ; R43 := 0xae91e43b
	579	[6006]	SELF     	R43 R43 K48 ; R44 := R43; R43 := R43[0x9621a812]
	580	[6006]	GETTABLE 	R45 R41 K83 ; R45 := R41["nodeIndex"]
	581	[6006]	MOVE     	R46 R32 ; R46 := R32
	582	[6006]	MOVE     	R47 R32 ; R47 := R32
	583	[6006]	CALL     	R43 5 1 ; R43(R44,R45,R46,R47)
	584	[6009]	GETGLOBAL	R43 K84 ; R43 := 0x34291f5c
	585	[6009]	GETTABLE 	R43 R43 K85 ; R43 := R43[0xe6b41adb]
	586	[6009]	CALL     	R43 1 2 ; R43 := R43()
	587	[6009]	TEST     	R43 1 ; if R43 then PC := 672
	588	[6009]	JMP      	672 ; PC := 672
	589	[6010]	GETGLOBAL	R43 K86 ; R43 := _T
	590	[6010]	GETTABLE 	R43 R43 K87 ; R43 := R43["MouseInWorldStateWindow"]
	591	[6010]	TEST     	R43 1 ; if R43 then PC := 617
	592	[6010]	JMP      	617 ; PC := 617
	593	[6010]	GETGLOBAL	R43 K86 ; R43 := _T
	594	[6010]	GETTABLE 	R43 R43 K88 ; R43 := R43["gPendingMission"]
	595	[6010]	EQ       	0 R43 K19 ; if R43 ~= nil then PC := 617
	596	[6010]	JMP      	617 ; PC := 617
	597	[6010]	GETGLOBAL	R43 K12 ; R43 := mHover
	598	[6010]	GETTABLE 	R43 R43 K14 ; R43 := R43["Node"]
	599	[6010]	EQ       	1 R43 K19 ; if R43 == nil then PC := 607
	600	[6010]	JMP      	607 ; PC := 607
	601	[6010]	GETGLOBAL	R43 K12 ; R43 := mHover
	602	[6010]	GETTABLE 	R43 R43 K14 ; R43 := R43["Node"]
	603	[6010]	GETTABLE 	R43 R43 K83 ; R43 := R43["nodeIndex"]
	604	[6010]	GETTABLE 	R44 R41 K83 ; R44 := R41["nodeIndex"]
	605	[6010]	EQ       	0 R43 R44 ; if R43 ~= R44 then PC := 617
	606	[6010]	JMP      	617 ; PC := 617
	607	[6010]	GETGLOBAL	R43 K15 ; R43 := mPreviousNodeDuck
	608	[6010]	GETTABLE 	R43 R43 K14 ; R43 := R43["Node"]
	609	[6010]	EQ       	1 R43 K19 ; if R43 == nil then PC := 617
	610	[6010]	JMP      	617 ; PC := 617
	611	[6010]	GETGLOBAL	R43 K15 ; R43 := mPreviousNodeDuck
	612	[6010]	GETTABLE 	R43 R43 K14 ; R43 := R43["Node"]
	613	[6010]	GETTABLE 	R43 R43 K83 ; R43 := R43["nodeIndex"]
	614	[6010]	GETTABLE 	R44 R41 K83 ; R44 := R41["nodeIndex"]
	615	[6010]	EQ       	1 R43 R44 ; if R43 == R44 then PC := 630
	616	[6010]	JMP      	630 ; PC := 630
	617	[6011]	GETGLOBAL	R43 K86 ; R43 := _T
	618	[6011]	GETTABLE 	R43 R43 K88 ; R43 := R43["gPendingMission"]
	619	[6011]	EQ       	1 R43 K19 ; if R43 == nil then PC := 638
	620	[6011]	JMP      	638 ; PC := 638
	621	[6011]	GETTABLE 	R43 R41 K63 ; R43 := R41["radialSector"]
	622	[6011]	EQ       	1 R43 K19 ; if R43 == nil then PC := 638
	623	[6011]	JMP      	638 ; PC := 638
	624	[6011]	GETGLOBAL	R43 K86 ; R43 := _T
	625	[6011]	GETTABLE 	R43 R43 K88 ; R43 := R43["gPendingMission"]
	626	[6011]	GETTABLE 	R43 R43 K89 ; R43 := R43["baseNodeName"]
	627	[6011]	GETTABLE 	R44 R42 K90 ; R44 := R42["name"]
	628	[6011]	EQ       	0 R43 R44 ; if R43 ~= R44 then PC := 638
	629	[6011]	JMP      	638 ; PC := 638
	630	[6012]	GETGLOBAL	R43 K40 ; R43 := 0xae91e43b
	631	[6012]	SELF     	R43 R43 K49 ; R44 := R43; R43 := R43[0xcd12f3f1]
	632	[6012]	GETTABLE 	R45 R41 K44 ; R45 := R41["memberIndex"]
	633	[6012]	LOADK    	R46 := 10.000000
	634	[6012]	GETGLOBAL	R47 K51 ; R47 := mNodeAlphaValues
	635	[6012]	GETTABLE 	R47 R47 K52 ; R47 := R47["NodeLayerAlpha"]
	636	[6012]	CALL     	R43 5 1 ; R43(R44,R45,R46,R47)
	637	[6012]	JMP      	793 ; PC := 793
	638	[6013]	EQ       	1 R7 K19 ; if R7 == nil then PC := 660
	639	[6013]	JMP      	660 ; PC := 660
	640	[6013]	GETTABLE 	R43 R41 K91 ; R43 := R41["isShortcut"]
	641	[6013]	TEST     	R43 0 ; if not R43 then PC := 660
	642	[6013]	JMP      	660 ; PC := 660
	643	[6013]	GETTABLE 	R43 R42 K70 ; R43 := R42["region"]
	644	[6013]	EQ       	0 R43 R7 ; if R43 ~= R7 then PC := 660
	645	[6013]	JMP      	660 ; PC := 660
	646	[6014]	GETGLOBAL	R43 K40 ; R43 := 0xae91e43b
	647	[6014]	SELF     	R43 R43 K49 ; R44 := R43; R43 := R43[0xcd12f3f1]
	648	[6014]	GETTABLE 	R45 R41 K44 ; R45 := R41["memberIndex"]
	649	[6014]	LOADK    	R46 := 10.000000
	650	[6014]	GETGLOBAL	R47 K38 ; R47 := 0x9bafffe3
	651	[6014]	GETGLOBAL	R48 K51 ; R48 := mNodeAlphaValues
	652	[6014]	GETTABLE 	R48 R48 K52 ; R48 := R48["NodeLayerAlpha"]
	653	[6014]	MOVE     	R49 R23 ; R49 := R23
	654	[6014]	GETGLOBAL	R50 K24 ; R50 := mRegionConnectionsDuck
	655	[6014]	SELF     	R50 R50 K9 ; R51 := R50; R50 := R50[0x54ab95f9]
	656	[6014]	CALL     	R50 2 0 ; R50,... := R50(R51)
	657	[6014]	CALL     	R47 0 0 ; R47,... := R47(R48,...)
	658	[6014]	CALL     	R43 0 1 ; R43(R44,...)
	659	[6014]	JMP      	793 ; PC := 793
	660	[6016]	GETGLOBAL	R43 K40 ; R43 := 0xae91e43b
	661	[6016]	SELF     	R43 R43 K49 ; R44 := R43; R43 := R43[0xcd12f3f1]
	662	[6016]	GETTABLE 	R45 R41 K44 ; R45 := R41["memberIndex"]
	663	[6016]	LOADK    	R46 := 10.000000
	664	[6016]	GETGLOBAL	R47 K17 ; R47 := mNodeDuck
	665	[6016]	SELF     	R47 R47 K9 ; R48 := R47; R47 := R47[0x54ab95f9]
	666	[6016]	CALL     	R47 2 2 ; R47 := R47(R48)
	667	[6016]	GETGLOBAL	R48 K51 ; R48 := mNodeAlphaValues
	668	[6016]	GETTABLE 	R48 R48 K52 ; R48 := R48["NodeLayerAlpha"]
	669	[6016]	MUL      	R47 R47 R48 ; R47 := R47 * R48
	670	[6016]	CALL     	R43 5 1 ; R43(R44,R45,R46,R47)
	671	[6017]	JMP      	793 ; PC := 793
	672	[6019]	GETUPVAL 	R43 U8 ; R43 := U8
	673	[6019]	GETTABLE 	R43 R43 K92 ; R43 := R43["mNodeVisible"]
	674	[6019]	TEST     	R43 0 ; if not R43 then PC := 687
	675	[6019]	JMP      	687 ; PC := 687
	676	[6019]	GETGLOBAL	R43 K12 ; R43 := mHover
	677	[6019]	GETTABLE 	R43 R43 K14 ; R43 := R43["Node"]
	678	[6019]	EQ       	1 R41 R43 ; if R41 == R43 then PC := 687
	679	[6019]	JMP      	687 ; PC := 687
	680	[6021]	GETGLOBAL	R43 K40 ; R43 := 0xae91e43b
	681	[6021]	SELF     	R43 R43 K49 ; R44 := R43; R43 := R43[0xcd12f3f1]
	682	[6021]	GETTABLE 	R45 R41 K44 ; R45 := R41["memberIndex"]
	683	[6021]	LOADK    	R46 := 10.000000
	684	[6021]	LOADK    	R47 := 0.000000
	685	[6021]	CALL     	R43 5 1 ; R43(R44,R45,R46,R47)
	686	[6021]	JMP      	793 ; PC := 793
	687	[6023]	GETGLOBAL	R43 K86 ; R43 := _T
	688	[6023]	GETTABLE 	R43 R43 K87 ; R43 := R43["MouseInWorldStateWindow"]
	689	[6023]	TEST     	R43 1 ; if R43 then PC := 715
	690	[6023]	JMP      	715 ; PC := 715
	691	[6023]	GETGLOBAL	R43 K86 ; R43 := _T
	692	[6023]	GETTABLE 	R43 R43 K88 ; R43 := R43["gPendingMission"]
	693	[6023]	EQ       	0 R43 K19 ; if R43 ~= nil then PC := 715
	694	[6023]	JMP      	715 ; PC := 715
	695	[6023]	GETGLOBAL	R43 K12 ; R43 := mHover
	696	[6023]	GETTABLE 	R43 R43 K14 ; R43 := R43["Node"]
	697	[6023]	EQ       	1 R43 K19 ; if R43 == nil then PC := 705
	698	[6023]	JMP      	705 ; PC := 705
	699	[6023]	GETGLOBAL	R43 K12 ; R43 := mHover
	700	[6023]	GETTABLE 	R43 R43 K14 ; R43 := R43["Node"]
	701	[6023]	GETTABLE 	R43 R43 K83 ; R43 := R43["nodeIndex"]
	702	[6023]	GETTABLE 	R44 R41 K83 ; R44 := R41["nodeIndex"]
	703	[6023]	EQ       	0 R43 R44 ; if R43 ~= R44 then PC := 715
	704	[6023]	JMP      	715 ; PC := 715
	705	[6023]	GETGLOBAL	R43 K15 ; R43 := mPreviousNodeDuck
	706	[6023]	GETTABLE 	R43 R43 K14 ; R43 := R43["Node"]
	707	[6023]	EQ       	1 R43 K19 ; if R43 == nil then PC := 715
	708	[6023]	JMP      	715 ; PC := 715
	709	[6023]	GETGLOBAL	R43 K15 ; R43 := mPreviousNodeDuck
	710	[6023]	GETTABLE 	R43 R43 K14 ; R43 := R43["Node"]
	711	[6023]	GETTABLE 	R43 R43 K83 ; R43 := R43["nodeIndex"]
	712	[6023]	GETTABLE 	R44 R41 K83 ; R44 := R41["nodeIndex"]
	713	[6023]	EQ       	1 R43 R44 ; if R43 == R44 then PC := 728
	714	[6023]	JMP      	728 ; PC := 728
	715	[6024]	GETGLOBAL	R43 K86 ; R43 := _T
	716	[6024]	GETTABLE 	R43 R43 K88 ; R43 := R43["gPendingMission"]
	717	[6024]	EQ       	1 R43 K19 ; if R43 == nil then PC := 736
	718	[6024]	JMP      	736 ; PC := 736
	719	[6024]	GETTABLE 	R43 R41 K63 ; R43 := R41["radialSector"]
	720	[6024]	EQ       	1 R43 K19 ; if R43 == nil then PC := 736
	721	[6024]	JMP      	736 ; PC := 736
	722	[6024]	GETGLOBAL	R43 K86 ; R43 := _T
	723	[6024]	GETTABLE 	R43 R43 K88 ; R43 := R43["gPendingMission"]
	724	[6024]	GETTABLE 	R43 R43 K89 ; R43 := R43["baseNodeName"]
	725	[6024]	GETTABLE 	R44 R42 K90 ; R44 := R42["name"]
	726	[6024]	EQ       	0 R43 R44 ; if R43 ~= R44 then PC := 736
	727	[6024]	JMP      	736 ; PC := 736
	728	[6025]	GETGLOBAL	R43 K40 ; R43 := 0xae91e43b
	729	[6025]	SELF     	R43 R43 K49 ; R44 := R43; R43 := R43[0xcd12f3f1]
	730	[6025]	GETTABLE 	R45 R41 K44 ; R45 := R41["memberIndex"]
	731	[6025]	LOADK    	R46 := 10.000000
	732	[6025]	GETGLOBAL	R47 K51 ; R47 := mNodeAlphaValues
	733	[6025]	GETTABLE 	R47 R47 K52 ; R47 := R47["NodeLayerAlpha"]
	734	[6025]	CALL     	R43 5 1 ; R43(R44,R45,R46,R47)
	735	[6025]	JMP      	793 ; PC := 793
	736	[6026]	EQ       	1 R7 K19 ; if R7 == nil then PC := 771
	737	[6026]	JMP      	771 ; PC := 771
	738	[6026]	GETTABLE 	R43 R41 K91 ; R43 := R41["isShortcut"]
	739	[6026]	TEST     	R43 0 ; if not R43 then PC := 771
	740	[6026]	JMP      	771 ; PC := 771
	741	[6026]	GETTABLE 	R43 R42 K70 ; R43 := R42["region"]
	742	[6026]	EQ       	0 R43 R7 ; if R43 ~= R7 then PC := 771
	743	[6026]	JMP      	771 ; PC := 771
	744	[6027]	GETGLOBAL	R43 K40 ; R43 := 0xae91e43b
	745	[6027]	SELF     	R43 R43 K49 ; R44 := R43; R43 := R43[0xcd12f3f1]
	746	[6027]	GETTABLE 	R45 R41 K93 ; R45 := R41["labelIndex"]
	747	[6027]	LOADK    	R46 := 10.000000
	748	[6027]	GETGLOBAL	R47 K38 ; R47 := 0x9bafffe3
	749	[6027]	GETGLOBAL	R48 K51 ; R48 := mNodeAlphaValues
	750	[6027]	GETTABLE 	R48 R48 K52 ; R48 := R48["NodeLayerAlpha"]
	751	[6027]	MOVE     	R49 R23 ; R49 := R23
	752	[6027]	GETGLOBAL	R50 K24 ; R50 := mRegionConnectionsDuck
	753	[6027]	SELF     	R50 R50 K9 ; R51 := R50; R50 := R50[0x54ab95f9]
	754	[6027]	CALL     	R50 2 0 ; R50,... := R50(R51)
	755	[6027]	CALL     	R47 0 0 ; R47,... := R47(R48,...)
	756	[6027]	CALL     	R43 0 1 ; R43(R44,...)
	757	[6028]	GETGLOBAL	R43 K40 ; R43 := 0xae91e43b
	758	[6028]	SELF     	R43 R43 K49 ; R44 := R43; R43 := R43[0xcd12f3f1]
	759	[6028]	GETTABLE 	R45 R41 K44 ; R45 := R41["memberIndex"]
	760	[6028]	LOADK    	R46 := 10.000000
	761	[6028]	GETGLOBAL	R47 K38 ; R47 := 0x9bafffe3
	762	[6028]	GETGLOBAL	R48 K51 ; R48 := mNodeAlphaValues
	763	[6028]	GETTABLE 	R48 R48 K52 ; R48 := R48["NodeLayerAlpha"]
	764	[6028]	MOVE     	R49 R23 ; R49 := R23
	765	[6028]	GETGLOBAL	R50 K24 ; R50 := mRegionConnectionsDuck
	766	[6028]	SELF     	R50 R50 K9 ; R51 := R50; R50 := R50[0x54ab95f9]
	767	[6028]	CALL     	R50 2 0 ; R50,... := R50(R51)
	768	[6028]	CALL     	R47 0 0 ; R47,... := R47(R48,...)
	769	[6028]	CALL     	R43 0 1 ; R43(R44,...)
	770	[6028]	JMP      	793 ; PC := 793
	771	[6030]	GETGLOBAL	R43 K40 ; R43 := 0xae91e43b
	772	[6030]	SELF     	R43 R43 K49 ; R44 := R43; R43 := R43[0xcd12f3f1]
	773	[6030]	GETTABLE 	R45 R41 K93 ; R45 := R41["labelIndex"]
	774	[6030]	LOADK    	R46 := 10.000000
	775	[6030]	GETGLOBAL	R47 K17 ; R47 := mNodeDuck
	776	[6030]	SELF     	R47 R47 K9 ; R48 := R47; R47 := R47[0x54ab95f9]
	777	[6030]	CALL     	R47 2 2 ; R47 := R47(R48)
	778	[6030]	GETGLOBAL	R48 K51 ; R48 := mNodeAlphaValues
	779	[6030]	GETTABLE 	R48 R48 K52 ; R48 := R48["NodeLayerAlpha"]
	780	[6030]	MUL      	R47 R47 R48 ; R47 := R47 * R48
	781	[6030]	CALL     	R43 5 1 ; R43(R44,R45,R46,R47)
	782	[6031]	GETGLOBAL	R43 K40 ; R43 := 0xae91e43b
	783	[6031]	SELF     	R43 R43 K49 ; R44 := R43; R43 := R43[0xcd12f3f1]
	784	[6031]	GETTABLE 	R45 R41 K44 ; R45 := R41["memberIndex"]
	785	[6031]	LOADK    	R46 := 10.000000
	786	[6031]	GETGLOBAL	R47 K17 ; R47 := mNodeDuck
	787	[6031]	SELF     	R47 R47 K9 ; R48 := R47; R47 := R47[0x54ab95f9]
	788	[6031]	CALL     	R47 2 2 ; R47 := R47(R48)
	789	[6031]	GETGLOBAL	R48 K51 ; R48 := mNodeAlphaValues
	790	[6031]	GETTABLE 	R48 R48 K52 ; R48 := R48["NodeLayerAlpha"]
	791	[6031]	MUL      	R47 R47 R48 ; R47 := R47 * R48
	792	[6031]	CALL     	R43 5 1 ; R43(R44,R45,R46,R47)
	793	[6036]	GETTABLE 	R43 R41 K91 ; R43 := R41["isShortcut"]
	794	[6036]	TEST     	R43 0 ; if not R43 then PC := 804
	795	[6036]	JMP      	804 ; PC := 804
	796	[6037]	GETGLOBAL	R43 K40 ; R43 := 0xae91e43b
	797	[6037]	SELF     	R43 R43 K49 ; R44 := R43; R43 := R43[0xcd12f3f1]
	798	[6037]	GETTABLE 	R45 R41 K93 ; R45 := R41["labelIndex"]
	799	[6037]	LOADK    	R46 := 10.000000
	800	[6037]	GETGLOBAL	R47 K51 ; R47 := mNodeAlphaValues
	801	[6037]	GETTABLE 	R47 R47 K52 ; R47 := R47["NodeLayerAlpha"]
	802	[6037]	CALL     	R43 5 1 ; R43(R44,R45,R46,R47)
	803	[6037]	JMP      	816 ; PC := 816
	804	[6038]	GETGLOBAL	R43 K94 ; R43 := mNewWarMode
	805	[6038]	TEST     	R43 0 ; if not R43 then PC := 816
	806	[6038]	JMP      	816 ; PC := 816
	807	[6038]	GETTABLE 	R43 R41 K71 ; R43 := R41["newWarMode"]
	808	[6038]	TEST     	R43 1 ; if R43 then PC := 816
	809	[6038]	JMP      	816 ; PC := 816
	810	[6039]	GETGLOBAL	R43 K40 ; R43 := 0xae91e43b
	811	[6039]	SELF     	R43 R43 K49 ; R44 := R43; R43 := R43[0xcd12f3f1]
	812	[6039]	GETTABLE 	R45 R41 K93 ; R45 := R41["labelIndex"]
	813	[6039]	LOADK    	R46 := 10.000000
	814	[6039]	LOADK    	R47 := 0.000000
	815	[6039]	CALL     	R43 5 1 ; R43(R44,R45,R46,R47)
	816	[6042]	GETUPVAL 	R43 U1 ; R43 := U1
	817	[6042]	GETUPVAL 	R44 U2 ; R44 := U2
	818	[6042]	GETTABLE 	R44 R44 K58 ; R44 := R44["EDIT_NODES"]
	819	[6042]	EQ       	0 R43 R44 ; if R43 ~= R44 then PC := 838
	820	[6042]	JMP      	838 ; PC := 838
	821	[6042]	GETTABLE 	R43 R41 K95 ; R43 := R41["deco"]
	822	[6042]	EQ       	1 R43 K19 ; if R43 == nil then PC := 838
	823	[6042]	JMP      	838 ; PC := 838
	824	[6042]	GETGLOBAL	R43 K26 ; R43 := 0x7b998233
	825	[6042]	GETTABLE 	R44 R41 K95 ; R44 := R41["deco"]
	826	[6042]	GETTABLE 	R44 R44 K96 ; R44 := R44["mInstance"]
	827	[6042]	CALL     	R43 2 2 ; R43 := R43(R44)
	828	[6042]	TEST     	R43 1 ; if R43 then PC := 838
	829	[6042]	JMP      	838 ; PC := 838
	830	[6043]	GETTABLE 	R43 R41 K95 ; R43 := R41["deco"]
	831	[6043]	GETTABLE 	R43 R43 K96 ; R43 := R43["mInstance"]
	832	[6043]	SELF     	R43 R43 K97 ; R44 := R43; R43 := R43[0x9307aa51]
	833	[6043]	GETTABLE 	R45 R41 K64 ; R45 := R41["position"]
	834	[6043]	GETTABLE 	R46 R41 K95 ; R46 := R41["deco"]
	835	[6043]	GETTABLE 	R46 R46 K98 ; R46 := R46["mOffset"]
	836	[6043]	ADD      	R45 R45 R46 ; R45 := R45 + R46
	837	[6043]	CALL     	R43 3 1 ; R43(R44,R45)
	838	[5963]	FORLOOP  	R37 433 ; R37 += R39; if R37 <= R38 then begin PC := 433; R40 := R37 end
	839	[6048]	LOADNIL  	R43 R46 ; R43 := R44 := R45 := R46 := nil
	840	[6049]	LOADK    	R47 := 1.000000
	841	[6049]	GETGLOBAL	R48 K99 ; R48 := mFlatEdges
	842	[6049]	LEN      	R48 R48 ; R48 := # R48
	843	[6049]	LOADK    	R49 := 1.000000
	844	[6049]	FORPREP  	R47 965 ; R47 -= R49; PC := 965
	845	[6050]	GETGLOBAL	R51 K99 ; R51 := mFlatEdges
	846	[6050]	GETTABLE 	R43 R51 R50 ; R43 := R51[R50]
	847	[6052]	GETGLOBAL	R51 K26 ; R51 := 0x7b998233
	848	[6052]	GETTABLE 	R52 R43 K100 ; R52 := R43["Instance"]
	849	[6052]	CALL     	R51 2 2 ; R51 := R51(R52)
	850	[6052]	TEST     	R51 1 ; if R51 then PC := 965
	851	[6052]	JMP      	965 ; PC := 965
	852	[6053]	GETTABLE 	R51 R43 K101 ; R51 := R43["IsShortcut"]
	853	[6053]	TEST     	R51 1 ; if R51 then PC := 858
	854	[6053]	JMP      	858 ; PC := 858
	855	[6053]	GETTABLE 	R51 R43 K102 ; R51 := R43["IsJunction"]
	856	[6053]	TEST     	R51 0 ; if not R51 then PC := 910
	857	[6053]	JMP      	910 ; PC := 910
	858	[6054]	GETTABLE 	R51 R43 K101 ; R51 := R43["IsShortcut"]
	859	[6054]	TEST     	R51 0 ; if not R51 then PC := 890
	860	[6054]	JMP      	890 ; PC := 890
	861	[6055]	GETUPVAL 	R51 U9 ; R51 := U9
	862	[6055]	GETTABLE 	R52 R43 K103 ; R52 := R43["NodeA"]
	863	[6055]	GETTABLE 	R52 R52 K64 ; R52 := R52["position"]
	864	[6055]	GETTABLE 	R53 R43 K104 ; R53 := R43["controlPointA"]
	865	[6055]	GETTABLE 	R53 R53 K64 ; R53 := R53["position"]
	866	[6055]	CALL     	R51 3 2 ; R51 := R51(R52,R53)
	867	[6055]	MOVE     	R44 R51 ; R44 := R51
	868	[6056]	GETGLOBAL	R51 K40 ; R51 := 0xae91e43b
	869	[6056]	SELF     	R51 R51 K49 ; R52 := R51; R51 := R51[0xcd12f3f1]
	870	[6056]	GETTABLE 	R53 R43 K103 ; R53 := R43["NodeA"]
	871	[6056]	GETTABLE 	R53 R53 K83 ; R53 := R53["nodeIndex"]
	872	[6056]	LOADK    	R54 := 14.000000
	873	[6056]	MOVE     	R55 R44 ; R55 := R44
	874	[6056]	CALL     	R51 5 1 ; R51(R52,R53,R54,R55)
	875	[6057]	GETUPVAL 	R51 U9 ; R51 := U9
	876	[6057]	GETTABLE 	R52 R43 K105 ; R52 := R43["NodeB"]
	877	[6057]	GETTABLE 	R52 R52 K64 ; R52 := R52["position"]
	878	[6057]	GETTABLE 	R53 R43 K106 ; R53 := R43["controlPointB"]
	879	[6057]	GETTABLE 	R53 R53 K64 ; R53 := R53["position"]
	880	[6057]	CALL     	R51 3 2 ; R51 := R51(R52,R53)
	881	[6057]	MOVE     	R44 R51 ; R44 := R51
	882	[6058]	GETGLOBAL	R51 K40 ; R51 := 0xae91e43b
	883	[6058]	SELF     	R51 R51 K49 ; R52 := R51; R51 := R51[0xcd12f3f1]
	884	[6058]	GETTABLE 	R53 R43 K105 ; R53 := R43["NodeB"]
	885	[6058]	GETTABLE 	R53 R53 K83 ; R53 := R53["nodeIndex"]
	886	[6058]	LOADK    	R54 := 14.000000
	887	[6058]	MOVE     	R55 R44 ; R55 := R44
	888	[6058]	CALL     	R51 5 1 ; R51(R52,R53,R54,R55)
	889	[6058]	JMP      	910 ; PC := 910
	890	[6060]	GETTABLE 	R51 R43 K103 ; R51 := R43["NodeA"]
	891	[6060]	GETTABLE 	R51 R51 K107 ; R51 := R51["isJunction"]
	892	[6060]	TEST     	R51 0 ; if not R51 then PC := 897
	893	[6060]	JMP      	897 ; PC := 897
	894	[6061]	GETTABLE 	R45 R43 K103 ; R45 := R43["NodeA"]
	895	[6062]	GETTABLE 	R46 R43 K105 ; R46 := R43["NodeB"]
	896	[6062]	JMP      	899 ; PC := 899
	897	[6064]	GETTABLE 	R45 R43 K105 ; R45 := R43["NodeB"]
	898	[6065]	GETTABLE 	R46 R43 K103 ; R46 := R43["NodeA"]
	899	[6067]	GETUPVAL 	R51 U9 ; R51 := U9
	900	[6067]	GETTABLE 	R52 R45 K64 ; R52 := R45["position"]
	901	[6067]	GETTABLE 	R53 R46 K64 ; R53 := R46["position"]
	902	[6067]	CALL     	R51 3 2 ; R51 := R51(R52,R53)
	903	[6067]	MOVE     	R44 R51 ; R44 := R51
	904	[6068]	GETGLOBAL	R51 K40 ; R51 := 0xae91e43b
	905	[6068]	SELF     	R51 R51 K49 ; R52 := R51; R51 := R51[0xcd12f3f1]
	906	[6068]	GETTABLE 	R53 R45 K83 ; R53 := R45["nodeIndex"]
	907	[6068]	LOADK    	R54 := 14.000000
	908	[6068]	MOVE     	R55 R44 ; R55 := R44
	909	[6068]	CALL     	R51 5 1 ; R51(R52,R53,R54,R55)
	910	[6072]	GETGLOBAL	R51 K86 ; R51 := _T
	911	[6072]	GETTABLE 	R51 R51 K108 ; R51 := R51["CustomStarChartNodeFilter"]
	912	[6072]	EQ       	1 R51 K19 ; if R51 == nil then PC := 921
	913	[6072]	JMP      	921 ; PC := 921
	914	[6073]	GETTABLE 	R51 R43 K100 ; R51 := R43["Instance"]
	915	[6073]	SELF     	R51 R51 K109 ; R52 := R51; R51 := R51[0x986d2ab8]
	916	[6073]	GETUPVAL 	R53 U10 ; R53 := U10
	917	[6073]	GETTABLE 	R53 R53 K110 ; R53 := R53["ALPHA_ATTEN"]
	918	[6073]	LOADK    	R54 := 0.000000
	919	[6073]	CALL     	R51 4 1 ; R51(R52,R53,R54)
	920	[6073]	JMP      	965 ; PC := 965
	921	[6074]	GETTABLE 	R51 R43 K101 ; R51 := R43["IsShortcut"]
	922	[6074]	TEST     	R51 0 ; if not R51 then PC := 953
	923	[6074]	JMP      	953 ; PC := 953
	924	[6074]	GETTABLE 	R51 R43 K103 ; R51 := R43["NodeA"]
	925	[6074]	GETTABLE 	R51 R51 K63 ; R51 := R51["radialSector"]
	926	[6074]	GETTABLE 	R51 R51 K70 ; R51 := R51["region"]
	927	[6074]	EQ       	1 R51 R7 ; if R51 == R7 then PC := 934
	928	[6074]	JMP      	934 ; PC := 934
	929	[6074]	GETTABLE 	R51 R43 K105 ; R51 := R43["NodeB"]
	930	[6074]	GETTABLE 	R51 R51 K63 ; R51 := R51["radialSector"]
	931	[6074]	GETTABLE 	R51 R51 K70 ; R51 := R51["region"]
	932	[6074]	EQ       	0 R51 R7 ; if R51 ~= R7 then PC := 953
	933	[6074]	JMP      	953 ; PC := 953
	934	[6075]	GETTABLE 	R51 R43 K100 ; R51 := R43["Instance"]
	935	[6075]	SELF     	R51 R51 K109 ; R52 := R51; R51 := R51[0x986d2ab8]
	936	[6075]	GETUPVAL 	R53 U10 ; R53 := U10
	937	[6075]	GETTABLE 	R53 R53 K110 ; R53 := R53["ALPHA_ATTEN"]
	938	[6075]	GETGLOBAL	R54 K38 ; R54 := 0x9bafffe3
	939	[6075]	GETGLOBAL	R55 K51 ; R55 := mNodeAlphaValues
	940	[6075]	GETTABLE 	R55 R55 K52 ; R55 := R55["NodeLayerAlpha"]
	941	[6075]	MOVE     	R56 R23 ; R56 := R23
	942	[6075]	GETGLOBAL	R57 K24 ; R57 := mRegionConnectionsDuck
	943	[6075]	SELF     	R57 R57 K9 ; R58 := R57; R57 := R57[0x54ab95f9]
	944	[6075]	CALL     	R57 2 0 ; R57,... := R57(R58)
	945	[6075]	CALL     	R54 0 2 ; R54 := R54(R55,...)
	946	[6075]	DIV      	R54 R54 K61 ; R54 := R54 / 100.000000
	947	[6075]	GETGLOBAL	R55 K17 ; R55 := mNodeDuck
	948	[6075]	SELF     	R55 R55 K9 ; R56 := R55; R55 := R55[0x54ab95f9]
	949	[6075]	CALL     	R55 2 2 ; R55 := R55(R56)
	950	[6075]	MUL      	R54 R54 R55 ; R54 := R54 * R55
	951	[6075]	CALL     	R51 4 1 ; R51(R52,R53,R54)
	952	[6075]	JMP      	965 ; PC := 965
	953	[6077]	GETTABLE 	R51 R43 K100 ; R51 := R43["Instance"]
	954	[6077]	SELF     	R51 R51 K109 ; R52 := R51; R51 := R51[0x986d2ab8]
	955	[6077]	GETUPVAL 	R53 U10 ; R53 := U10
	956	[6077]	GETTABLE 	R53 R53 K110 ; R53 := R53["ALPHA_ATTEN"]
	957	[6077]	GETGLOBAL	R54 K51 ; R54 := mNodeAlphaValues
	958	[6077]	GETTABLE 	R54 R54 K52 ; R54 := R54["NodeLayerAlpha"]
	959	[6077]	DIV      	R54 R54 K61 ; R54 := R54 / 100.000000
	960	[6077]	GETGLOBAL	R55 K17 ; R55 := mNodeDuck
	961	[6077]	SELF     	R55 R55 K9 ; R56 := R55; R55 := R55[0x54ab95f9]
	962	[6077]	CALL     	R55 2 2 ; R55 := R55(R56)
	963	[6077]	MUL      	R54 R54 R55 ; R54 := R54 * R55
	964	[6077]	CALL     	R51 4 1 ; R51(R52,R53,R54)
	965	[6049]	FORLOOP  	R47 845 ; R47 += R49; if R47 <= R48 then begin PC := 845; R50 := R47 end
	966	[6082]	MOVE     	R15 R2 ; R15 := R2
	967	[6083]	GETGLOBAL	R51 K33 ; R51 := 0x42dcc9f5
	968	[6083]	MOVE     	R52 R15 ; R52 := R15
	969	[6083]	GETUPVAL 	R53 U3 ; R53 := U3
	970	[6083]	GETTABLE 	R53 R53 K34 ; R53 := R53["LAYER_1_RANGE"]
	971	[6083]	GETTABLE 	R53 R53 K35 ; R53 := R53["minValue"]
	972	[6083]	GETUPVAL 	R54 U3 ; R54 := U3
	973	[6083]	GETTABLE 	R54 R54 K34 ; R54 := R54["LAYER_1_RANGE"]
	974	[6083]	GETTABLE 	R54 R54 K36 ; R54 := R54["maxValue"]
	975	[6083]	CALL     	R51 4 2 ; R51 := R51(R52,R53,R54)
	976	[6083]	MOVE     	R15 R51 ; R15 := R51
	977	[6084]	GETGLOBAL	R51 K38 ; R51 := 0x9bafffe3
	978	[6084]	LOADK    	R52 := 30.000000
	979	[6084]	LOADK    	R53 := 10.000000
	980	[6084]	GETUPVAL 	R54 U3 ; R54 := U3
	981	[6084]	GETTABLE 	R54 R54 K34 ; R54 := R54["LAYER_1_RANGE"]
	982	[6084]	SELF     	R54 R54 K37 ; R55 := R54; R54 := R54[0x3b93153d]
	983	[6084]	MOVE     	R56 R15 ; R56 := R15
	984	[6084]	CALL     	R54 3 0 ; R54,... := R54(R55,R56)
	985	[6084]	CALL     	R51 0 2 ; R51 := R51(R52,...)
	986	[6085]	LOADK    	R52 := 1.000000
	987	[6085]	GETGLOBAL	R53 K111 ; R53 := mSuperPoly
	988	[6085]	LEN      	R53 R53 ; R53 := # R53
	989	[6085]	LOADK    	R54 := 1.000000
	990	[6085]	FORPREP  	R52 1008 ; R52 -= R54; PC := 1008
	991	[6086]	MOVE     	R14 R51 ; R14 := R51
	992	[6087]	GETGLOBAL	R56 K26 ; R56 := 0x7b998233
	993	[6087]	GETGLOBAL	R57 K111 ; R57 := mSuperPoly
	994	[6087]	GETTABLE 	R57 R57 R55 ; R57 := R57[R55]
	995	[6087]	CALL     	R56 2 2 ; R56 := R56(R57)
	996	[6087]	TEST     	R56 1 ; if R56 then PC := 1008
	997	[6087]	JMP      	1008 ; PC := 1008
	998	[6088]	GETGLOBAL	R56 K111 ; R56 := mSuperPoly
	999	[6088]	GETTABLE 	R56 R56 R55 ; R56 := R56[R55]
	1000	[6088]	SELF     	R56 R56 K109 ; R57 := R56; R56 := R56[0x986d2ab8]
	1001	[6088]	GETGLOBAL	R58 K112 ; R58 := 0x6c97a788
	1002	[6088]	GETTABLE 	R58 R58 K113 ; R58 := R58["TINT_COLOR"]
	1003	[6088]	LOADK    	R59 := 0.000000
	1004	[6088]	LOADK    	R60 := 0.000000
	1005	[6088]	LOADK    	R61 := 0.000000
	1006	[6088]	DIV      	R62 R14 K61 ; R62 := R14 / 100.000000
	1007	[6088]	CALL     	R56 7 1 ; R56(R57,R58,R59,R60,R61,R62)
	1008	[6085]	FORLOOP  	R52 991 ; R52 += R54; if R52 <= R53 then begin PC := 991; R55 := R52 end
	1009	[6092]	GETGLOBAL	R56 K114 ; R56 := mVoidTrader
	1010	[6092]	GETTABLE 	R56 R56 K115 ; R56 := R56["Active"]
	1011	[6092]	TEST     	R56 0 ; if not R56 then PC := 1051
	1012	[6092]	JMP      	1051 ; PC := 1051
	1013	[6093]	GETGLOBAL	R56 K40 ; R56 := 0xae91e43b
	1014	[6093]	SELF     	R56 R56 K41 ; R57 := R56; R56 := R56[0xb9ad3599]
	1015	[6093]	MOVE     	R58 R16 ; R58 := R16
	1016	[6093]	GETGLOBAL	R59 K114 ; R59 := mVoidTrader
	1017	[6093]	GETTABLE 	R59 R59 K116 ; R59 := R59["Position"]
	1018	[6093]	OP_LOADBOOL	R60 1 0 ; R60 := true
	1019	[6093]	GETUPVAL 	R61 U7 ; R61 := U7
	1020	[6093]	CALL     	R56 6 1 ; R56(R57,R58,R59,R60,R61)
	1021	[6094]	GETGLOBAL	R56 K38 ; R56 := 0x9bafffe3
	1022	[6094]	LOADK    	R57 := 60.000000
	1023	[6094]	LOADK    	R58 := 100.000000
	1024	[6094]	MOVE     	R59 R31 ; R59 := R31
	1025	[6094]	CALL     	R56 4 2 ; R56 := R56(R57,R58,R59)
	1026	[6094]	MOVE     	R32 R56 ; R32 := R56
	1027	[6095]	GETGLOBAL	R56 K40 ; R56 := 0xae91e43b
	1028	[6095]	SELF     	R56 R56 K117 ; R57 := R56; R56 := R56[0x67bc869f]
	1029	[6095]	LOADK    	R58 K118 ; R58 := "VoidTrader"
	1030	[6095]	LOADK    	R59 := 0.000000
	1031	[6095]	GETTABLE 	R60 R16 K7 ; R60 := R16["x"]
	1032	[6095]	CALL     	R56 5 1 ; R56(R57,R58,R59,R60)
	1033	[6096]	GETGLOBAL	R56 K40 ; R56 := 0xae91e43b
	1034	[6096]	SELF     	R56 R56 K117 ; R57 := R56; R56 := R56[0x67bc869f]
	1035	[6096]	LOADK    	R58 K118 ; R58 := "VoidTrader"
	1036	[6096]	LOADK    	R59 := 1.000000
	1037	[6096]	GETTABLE 	R60 R16 K10 ; R60 := R16["y"]
	1038	[6096]	CALL     	R56 5 1 ; R56(R57,R58,R59,R60)
	1039	[6097]	GETGLOBAL	R56 K40 ; R56 := 0xae91e43b
	1040	[6097]	SELF     	R56 R56 K117 ; R57 := R56; R56 := R56[0x67bc869f]
	1041	[6097]	LOADK    	R58 K118 ; R58 := "VoidTrader"
	1042	[6097]	LOADK    	R59 := 5.000000
	1043	[6097]	MOVE     	R60 R32 ; R60 := R32
	1044	[6097]	CALL     	R56 5 1 ; R56(R57,R58,R59,R60)
	1045	[6098]	GETGLOBAL	R56 K40 ; R56 := 0xae91e43b
	1046	[6098]	SELF     	R56 R56 K117 ; R57 := R56; R56 := R56[0x67bc869f]
	1047	[6098]	LOADK    	R58 K118 ; R58 := "VoidTrader"
	1048	[6098]	LOADK    	R59 := 6.000000
	1049	[6098]	MOVE     	R60 R32 ; R60 := R32
	1050	[6098]	CALL     	R56 5 1 ; R56(R57,R58,R59,R60)
	1051	[6101]	GETUPVAL 	R56 U11 ; R56 := U11
	1052	[6101]	CALL     	R56 1 1 ; R56()
	1053	[6104]	GETUPVAL 	R56 U12 ; R56 := U12
	1054	[6104]	CALL     	R56 1 1 ; R56()
	1055	[6107]	GETGLOBAL	R56 K114 ; R56 := mVoidTrader
	1056	[6107]	GETTABLE 	R56 R56 K115 ; R56 := R56["Active"]
	1057	[6107]	TEST     	R56 0 ; if not R56 then PC := 1079
	1058	[6107]	JMP      	1079 ; PC := 1079
	1059	[6109]	GETGLOBAL	R56 K119 ; R56 := 0xcb2f6c8f
	1060	[6109]	CALL     	R56 1 2 ; R56 := R56()
	1061	[6110]	GETGLOBAL	R57 K114 ; R57 := mVoidTrader
	1062	[6110]	GETTABLE 	R57 R57 K121 ; R57 := R57["Expiry"]
	1063	[6110]	SETTABLE 	R56 K120 R57 ; R56["sec"] := R57
	1064	[6111]	GETGLOBAL	R57 K84 ; R57 := 0x34291f5c
	1065	[6111]	GETTABLE 	R57 R57 K122 ; R57 := R57[0x397b920f]
	1066	[6111]	MOVE     	R58 R56 ; R58 := R56
	1067	[6111]	CALL     	R57 2 2 ; R57 := R57(R58)
	1068	[6112]	LE       	0 R57 K21 ; if R57 > 0.000000 then PC := 1079
	1069	[6112]	JMP      	1079 ; PC := 1079
	1070	[6113]	GETGLOBAL	R58 K114 ; R58 := mVoidTrader
	1071	[6113]	SETTABLE 	R58 K115 K1 ; R58["Active"] := false
	1072	[6114]	GETGLOBAL	R58 K40 ; R58 := 0xae91e43b
	1073	[6114]	SELF     	R58 R58 K123 ; R59 := R58; R58 := R58[0xaade900e]
	1074	[6114]	LOADK    	R60 K118 ; R60 := "VoidTrader"
	1075	[6114]	LOADK    	R61 := 11.000000
	1076	[6114]	GETGLOBAL	R62 K114 ; R62 := mVoidTrader
	1077	[6114]	GETTABLE 	R62 R62 K115 ; R62 := R62["Active"]
	1078	[6114]	CALL     	R58 5 1 ; R58(R59,R60,R61,R62)
	1079	[6118]	GETGLOBAL	R58 K26 ; R58 := 0x7b998233
	1080	[6118]	GETUPVAL 	R59 U13 ; R59 := U13
	1081	[6118]	GETTABLE 	R59 R59 K18 ; R59 := R59["Region"]
	1082	[6118]	CALL     	R58 2 2 ; R58 := R58(R59)
	1083	[6118]	TEST     	R58 1 ; if R58 then PC := 1288
	1084	[6118]	JMP      	1288 ; PC := 1288
	1085	[6119]	GETGLOBAL	R58 K33 ; R58 := 0x42dcc9f5
	1086	[6119]	MOVE     	R59 R2 ; R59 := R2
	1087	[6119]	GETUPVAL 	R60 U3 ; R60 := U3
	1088	[6119]	GETTABLE 	R60 R60 K50 ; R60 := R60["LAYER_2_RANGE"]
	1089	[6119]	GETTABLE 	R60 R60 K35 ; R60 := R60["minValue"]
	1090	[6119]	GETUPVAL 	R61 U3 ; R61 := U3
	1091	[6119]	GETTABLE 	R61 R61 K50 ; R61 := R61["LAYER_2_RANGE"]
	1092	[6119]	GETTABLE 	R61 R61 K36 ; R61 := R61["maxValue"]
	1093	[6119]	CALL     	R58 4 2 ; R58 := R58(R59,R60,R61)
	1094	[6119]	MOVE     	R2 R58 ; R2 := R58
	1095	[6120]	GETUPVAL 	R58 U3 ; R58 := U3
	1096	[6120]	GETTABLE 	R58 R58 K50 ; R58 := R58["LAYER_2_RANGE"]
	1097	[6120]	SELF     	R58 R58 K37 ; R59 := R58; R58 := R58[0x3b93153d]
	1098	[6120]	MOVE     	R60 R2 ; R60 := R2
	1099	[6120]	CALL     	R58 3 2 ; R58 := R58(R59,R60)
	1100	[6121]	LOADNIL  	R59 R60 ; R59 := R60 := nil
	1101	[6123]	GETGLOBAL	R61 K124 ; R61 := 0xcfc01047
	1102	[6123]	GETUPVAL 	R62 U13 ; R62 := U13
	1103	[6123]	GETTABLE 	R62 R62 K55 ; R62 := R62["Nodes"]
	1104	[6123]	CALL     	R61 2 4 ; R61,R62,R63 := R61(R62)
	1105	[6123]	JMP      	1264 ; PC := 1264
	1106	[6124]	GETTABLE 	R66 R65 K63 ; R66 := R65["radialSector"]
	1107	[6125]	GETTABLE 	R67 R65 K64 ; R67 := R65["position"]
	1108	[6126]	GETGLOBAL	R68 K40 ; R68 := 0xae91e43b
	1109	[6126]	SELF     	R68 R68 K41 ; R69 := R68; R68 := R68[0xb9ad3599]
	1110	[6126]	MOVE     	R70 R16 ; R70 := R16
	1111	[6126]	MOVE     	R71 R67 ; R71 := R67
	1112	[6126]	OP_LOADBOOL	R72 1 0 ; R72 := true
	1113	[6126]	GETUPVAL 	R73 U7 ; R73 := U7
	1114	[6126]	CALL     	R68 6 1 ; R68(R69,R70,R71,R72,R73)
	1115	[6127]	GETGLOBAL	R68 K40 ; R68 := 0xae91e43b
	1116	[6127]	SELF     	R68 R68 K43 ; R69 := R68; R68 := R68[0xd38cedf3]
	1117	[6127]	GETTABLE 	R70 R65 K44 ; R70 := R65["memberIndex"]
	1118	[6127]	GETTABLE 	R71 R16 K7 ; R71 := R16["x"]
	1119	[6127]	GETTABLE 	R72 R16 K10 ; R72 := R16["y"]
	1120	[6127]	CALL     	R68 5 1 ; R68(R69,R70,R71,R72)
	1121	[6129]	GETGLOBAL	R68 K38 ; R68 := 0x9bafffe3
	1122	[6129]	LOADK    	R69 := 20.000000
	1123	[6129]	LOADK    	R70 := 50.000000
	1124	[6129]	MOVE     	R71 R58 ; R71 := R58
	1125	[6129]	CALL     	R68 4 2 ; R68 := R68(R69,R70,R71)
	1126	[6130]	GETTABLE 	R69 R65 K65 ; R69 := R65["isSurfaceNode"]
	1127	[6130]	TEST     	R69 0 ; if not R69 then PC := 1239
	1128	[6130]	JMP      	1239 ; PC := 1239
	1129	[6131]	LOADK    	R59 := 100.000000
	1130	[6132]	GETTABLE 	R60 R67 K30 ; R60 := R67["z"]
	1131	[6133]	MUL      	R60 R60 K45 ; R60 := R60 * 10.000000
	1132	[6134]	LE       	0 K21 R60 ; if 0.000000 > R60 then PC := 1149
	1133	[6134]	JMP      	1149 ; PC := 1149
	1134	[6135]	GETGLOBAL	R69 K38 ; R69 := 0x9bafffe3
	1135	[6135]	LOADK    	R70 := 75.000000
	1136	[6135]	LOADK    	R71 := 50.000000
	1137	[6135]	GETGLOBAL	R72 K33 ; R72 := 0x42dcc9f5
	1138	[6135]	GETGLOBAL	R73 K66 ; R73 := 0x5bced4c4
	1139	[6135]	GETTABLE 	R73 R73 K67 ; R73 := R73[0xa40531d8]
	1140	[6135]	MOVE     	R74 R60 ; R74 := R60
	1141	[6135]	LOADK    	R75 := 3.000000
	1142	[6135]	CALL     	R73 3 2 ; R73 := R73(R74,R75)
	1143	[6135]	LOADK    	R74 := 0.000000
	1144	[6135]	LOADK    	R75 := 1.000000
	1145	[6135]	CALL     	R72 4 0 ; R72,... := R72(R73,R74,R75)
	1146	[6135]	CALL     	R69 0 2 ; R69 := R69(R70,...)
	1147	[6135]	MOVE     	R59 R69 ; R59 := R69
	1148	[6135]	JMP      	1166 ; PC := 1166
	1149	[6137]	GETGLOBAL	R69 K38 ; R69 := 0x9bafffe3
	1150	[6137]	LOADK    	R70 := 75.000000
	1151	[6137]	LOADK    	R71 := 100.000000
	1152	[6137]	GETGLOBAL	R72 K33 ; R72 := 0x42dcc9f5
	1153	[6137]	GETGLOBAL	R73 K66 ; R73 := 0x5bced4c4
	1154	[6137]	GETTABLE 	R73 R73 K67 ; R73 := R73[0xa40531d8]
	1155	[6137]	GETGLOBAL	R74 K66 ; R74 := 0x5bced4c4
	1156	[6137]	GETTABLE 	R74 R74 K68 ; R74 := R74[0xe4a5b3ca]
	1157	[6137]	MOVE     	R75 R60 ; R75 := R60
	1158	[6137]	CALL     	R74 2 2 ; R74 := R74(R75)
	1159	[6137]	LOADK    	R75 := 3.000000
	1160	[6137]	CALL     	R73 3 2 ; R73 := R73(R74,R75)
	1161	[6137]	LOADK    	R74 := 0.000000
	1162	[6137]	LOADK    	R75 := 1.000000
	1163	[6137]	CALL     	R72 4 0 ; R72,... := R72(R73,R74,R75)
	1164	[6137]	CALL     	R69 0 2 ; R69 := R69(R70,...)
	1165	[6137]	MOVE     	R59 R69 ; R59 := R69
	1166	[6140]	GETGLOBAL	R69 K69 ; R69 := mRegionInstances
	1167	[6140]	GETTABLE 	R70 R66 K70 ; R70 := R66["region"]
	1168	[6140]	ADD      	R70 R70 K23 ; R70 := R70 + 1.000000
	1169	[6140]	GETTABLE 	R69 R69 R70 ; R69 := R69[R70]
	1170	[6142]	GETGLOBAL	R70 K26 ; R70 := 0x7b998233
	1171	[6142]	MOVE     	R71 R69 ; R71 := R69
	1172	[6142]	CALL     	R70 2 2 ; R70 := R70(R71)
	1173	[6142]	TEST     	R70 1 ; if R70 then PC := 1199
	1174	[6142]	JMP      	1199 ; PC := 1199
	1175	[6143]	SELF     	R70 R69 K72 ; R71 := R69; R70 := R69[0x4078bbf8]
	1176	[6143]	MOVE     	R72 R17 ; R72 := R17
	1177	[6143]	CALL     	R70 3 1 ; R70(R71,R72)
	1178	[6144]	GETGLOBAL	R70 K73 ; R70 := 0x83ddcc65
	1179	[6144]	MOVE     	R71 R19 ; R71 := R19
	1180	[6144]	MOVE     	R72 R67 ; R72 := R67
	1181	[6144]	MOVE     	R73 R17 ; R73 := R17
	1182	[6144]	CALL     	R70 4 1 ; R70(R71,R72,R73)
	1183	[6145]	GETGLOBAL	R70 K74 ; R70 := 0x83a41541
	1184	[6145]	MOVE     	R71 R18 ; R71 := R18
	1185	[6145]	MOVE     	R72 R1 ; R72 := R1
	1186	[6145]	MOVE     	R73 R19 ; R73 := R19
	1187	[6145]	CALL     	R70 4 1 ; R70(R71,R72,R73)
	1188	[6146]	GETTABLE 	R70 R18 K75 ; R70 := R18["heading"]
	1189	[6146]	UNM      	R70 R70 ; R70 := ^ R70
	1190	[6146]	SETTABLE 	R18 K75 R70 ; R18["heading"] := R70
	1191	[6147]	GETGLOBAL	R70 K33 ; R70 := 0x42dcc9f5
	1192	[6147]	GETTABLE 	R71 R18 K77 ; R71 := R18["pitch"]
	1193	[6147]	MUL      	R71 R71 K78 ; R71 := R71 * 0.750000
	1194	[6147]	LOADK    	R72 := -75.000000
	1195	[6147]	LOADK    	R73 := 75.000000
	1196	[6147]	CALL     	R70 4 2 ; R70 := R70(R71,R72,R73)
	1197	[6147]	SETTABLE 	R18 K77 R70 ; R18["pitch"] := R70
	1198	[6147]	JMP      	1203 ; PC := 1203
	1199	[6149]	NEWTABLE 	R70 0 2 ; R70 := {}
	1200	[6149]	SETTABLE 	R70 K75 K21 ; R70["heading"] := 0.000000
	1201	[6149]	SETTABLE 	R70 K77 K21 ; R70["pitch"] := 0.000000
	1202	[6149]	MOVE     	R18 R70 ; R18 := R70
	1203	[6152]	GETTABLE 	R70 R65 K125 ; R70 := R65["visibleLabel"]
	1204	[6152]	TEST     	R70 1 ; if R70 then PC := 1224
	1205	[6152]	JMP      	1224 ; PC := 1224
	1206	[6152]	GETTABLE 	R70 R65 K91 ; R70 := R65["isShortcut"]
	1207	[6152]	TEST     	R70 1 ; if R70 then PC := 1224
	1208	[6152]	JMP      	1224 ; PC := 1224
	1209	[6153]	GETGLOBAL	R70 K40 ; R70 := 0xae91e43b
	1210	[6153]	SELF     	R70 R70 K80 ; R71 := R70; R70 := R70[0xf64b7262]
	1211	[6153]	GETTABLE 	R72 R65 K81 ; R72 := R65["clipName"]
	1212	[6153]	LOADK    	R73 K82 ; R73 := "Node.Container"
	1213	[6153]	LOADK    	R74 := 15.000000
	1214	[6153]	GETTABLE 	R75 R18 K75 ; R75 := R18["heading"]
	1215	[6153]	CALL     	R70 6 1 ; R70(R71,R72,R73,R74,R75)
	1216	[6154]	GETGLOBAL	R70 K40 ; R70 := 0xae91e43b
	1217	[6154]	SELF     	R70 R70 K80 ; R71 := R70; R70 := R70[0xf64b7262]
	1218	[6154]	GETTABLE 	R72 R65 K81 ; R72 := R65["clipName"]
	1219	[6154]	LOADK    	R73 K82 ; R73 := "Node.Container"
	1220	[6154]	LOADK    	R74 := 16.000000
	1221	[6154]	GETTABLE 	R75 R18 K77 ; R75 := R18["pitch"]
	1222	[6154]	CALL     	R70 6 1 ; R70(R71,R72,R73,R74,R75)
	1223	[6154]	JMP      	1258 ; PC := 1258
	1224	[6156]	GETGLOBAL	R70 K40 ; R70 := 0xae91e43b
	1225	[6156]	SELF     	R70 R70 K80 ; R71 := R70; R70 := R70[0xf64b7262]
	1226	[6156]	GETTABLE 	R72 R65 K81 ; R72 := R65["clipName"]
	1227	[6156]	LOADK    	R73 K82 ; R73 := "Node.Container"
	1228	[6156]	LOADK    	R74 := 15.000000
	1229	[6156]	GETTABLE 	R75 R18 K75 ; R75 := R18["heading"]
	1230	[6156]	CALL     	R70 6 1 ; R70(R71,R72,R73,R74,R75)
	1231	[6157]	GETGLOBAL	R70 K40 ; R70 := 0xae91e43b
	1232	[6157]	SELF     	R70 R70 K80 ; R71 := R70; R70 := R70[0xf64b7262]
	1233	[6157]	GETTABLE 	R72 R65 K81 ; R72 := R65["clipName"]
	1234	[6157]	LOADK    	R73 K82 ; R73 := "Node.Container"
	1235	[6157]	LOADK    	R74 := 16.000000
	1236	[6157]	GETTABLE 	R75 R18 K77 ; R75 := R18["pitch"]
	1237	[6157]	CALL     	R70 6 1 ; R70(R71,R72,R73,R74,R75)
	1238	[6158]	JMP      	1258 ; PC := 1258
	1239	[6159]	GETUPVAL 	R70 U1 ; R70 := U1
	1240	[6159]	GETUPVAL 	R71 U2 ; R71 := U2
	1241	[6159]	GETTABLE 	R71 R71 K25 ; R71 := R71["READ_ONLY"]
	1242	[6159]	EQ       	1 R70 R71 ; if R70 == R71 then PC := 1258
	1243	[6159]	JMP      	1258 ; PC := 1258
	1244	[6160]	GETGLOBAL	R70 K40 ; R70 := 0xae91e43b
	1245	[6160]	SELF     	R70 R70 K80 ; R71 := R70; R70 := R70[0xf64b7262]
	1246	[6160]	GETTABLE 	R72 R65 K81 ; R72 := R65["clipName"]
	1247	[6160]	LOADK    	R73 K82 ; R73 := "Node.Container"
	1248	[6160]	LOADK    	R74 := 15.000000
	1249	[6160]	LOADK    	R75 := 0.000000
	1250	[6160]	CALL     	R70 6 1 ; R70(R71,R72,R73,R74,R75)
	1251	[6161]	GETGLOBAL	R70 K40 ; R70 := 0xae91e43b
	1252	[6161]	SELF     	R70 R70 K80 ; R71 := R70; R70 := R70[0xf64b7262]
	1253	[6161]	GETTABLE 	R72 R65 K81 ; R72 := R65["clipName"]
	1254	[6161]	LOADK    	R73 K82 ; R73 := "Node.Container"
	1255	[6161]	LOADK    	R74 := 16.000000
	1256	[6161]	LOADK    	R75 := 0.000000
	1257	[6161]	CALL     	R70 6 1 ; R70(R71,R72,R73,R74,R75)
	1258	[6164]	GETGLOBAL	R70 K40 ; R70 := 0xae91e43b
	1259	[6164]	SELF     	R70 R70 K48 ; R71 := R70; R70 := R70[0x9621a812]
	1260	[6164]	GETTABLE 	R72 R65 K83 ; R72 := R65["nodeIndex"]
	1261	[6164]	MOVE     	R73 R68 ; R73 := R68
	1262	[6164]	MOVE     	R74 R68 ; R74 := R68
	1263	[6164]	CALL     	R70 5 1 ; R70(R71,R72,R73,R74)
	1264	[6123]	TFORLOOP 	R61 2 ; R64,R65 := R61(R62,R63); if R64 ~= nil then begin PC = 1106; R63 := R64 end
	1265	[6164]	JMP      	1106 ; PC := 1106
	1266	[6167]	GETGLOBAL	R70 K40 ; R70 := 0xae91e43b
	1267	[6167]	SELF     	R70 R70 K41 ; R71 := R70; R70 := R70[0xb9ad3599]
	1268	[6167]	MOVE     	R72 R16 ; R72 := R16
	1269	[6167]	GETUPVAL 	R73 U4 ; R73 := U4
	1270	[6167]	GETUPVAL 	R74 U13 ; R74 := U13
	1271	[6167]	GETTABLE 	R74 R74 K126 ; R74 := R74["SubLabelIndex"]
	1272	[6167]	GETTABLE 	R73 R73 R74 ; R73 := R73[R74]
	1273	[6167]	GETTABLE 	R73 R73 K42 ; R73 := R73["pos"]
	1274	[6167]	OP_LOADBOOL	R74 1 0 ; R74 := true
	1275	[6167]	OP_LOADBOOL	R75 0 0 ; R75 := false
	1276	[6167]	CALL     	R70 6 1 ; R70(R71,R72,R73,R74,R75)
	1277	[6168]	GETGLOBAL	R70 K40 ; R70 := 0xae91e43b
	1278	[6168]	SELF     	R70 R70 K43 ; R71 := R70; R70 := R70[0xd38cedf3]
	1279	[6168]	GETUPVAL 	R72 U4 ; R72 := U4
	1280	[6168]	GETUPVAL 	R73 U13 ; R73 := U13
	1281	[6168]	GETTABLE 	R73 R73 K126 ; R73 := R73["SubLabelIndex"]
	1282	[6168]	GETTABLE 	R72 R72 R73 ; R72 := R72[R73]
	1283	[6168]	GETTABLE 	R72 R72 K44 ; R72 := R72["memberIndex"]
	1284	[6168]	GETTABLE 	R73 R16 K7 ; R73 := R16["x"]
	1285	[6168]	GETTABLE 	R74 R16 K10 ; R74 := R16["y"]
	1286	[6168]	SUB      	R74 R74 K45 ; R74 := R74 - 10.000000
	1287	[6168]	CALL     	R70 5 1 ; R70(R71,R72,R73,R74)
	1288	[6171]	GETGLOBAL	R70 K12 ; R70 := mHover
	1289	[6171]	GETTABLE 	R70 R70 K14 ; R70 := R70["Node"]
	1290	[6171]	EQ       	1 R70 K19 ; if R70 == nil then PC := 1439
	1291	[6171]	JMP      	1439 ; PC := 1439
	1292	[6171]	GETGLOBAL	R70 K12 ; R70 := mHover
	1293	[6171]	GETTABLE 	R70 R70 K14 ; R70 := R70["Node"]
	1294	[6171]	GETTABLE 	R70 R70 K91 ; R70 := R70["isShortcut"]
	1295	[6171]	TEST     	R70 1 ; if R70 then PC := 1439
	1296	[6171]	JMP      	1439 ; PC := 1439
	1297	[6171]	GETGLOBAL	R70 K12 ; R70 := mHover
	1298	[6171]	GETTABLE 	R70 R70 K14 ; R70 := R70["Node"]
	1299	[6171]	GETTABLE 	R70 R70 K107 ; R70 := R70["isJunction"]
	1300	[6171]	TEST     	R70 1 ; if R70 then PC := 1439
	1301	[6171]	JMP      	1439 ; PC := 1439
	1302	[6172]	GETUPVAL 	R70 U14 ; R70 := U14
	1303	[6172]	GETTABLE 	R70 R70 K127 ; R70 := R70[0xb5be5d4a]
	1304	[6172]	GETGLOBAL	R71 K40 ; R71 := 0xae91e43b
	1305	[6172]	GETGLOBAL	R72 K12 ; R72 := mHover
	1306	[6172]	GETTABLE 	R72 R72 K14 ; R72 := R72["Node"]
	1307	[6172]	GETTABLE 	R72 R72 K81 ; R72 := R72["clipName"]
	1308	[6172]	CALL     	R70 3 3 ; R70,R71 := R70(R71,R72)
	1309	[6173]	LOADK    	R72 := 0.000000
	1310	[6173]	LOADNIL  	R73 R73 ; R73 := nil
	1311	[6174]	LOADK    	R74 := 20.000000
	1312	[6175]	GETGLOBAL	R75 K40 ; R75 := 0xae91e43b
	1313	[6175]	SELF     	R75 R75 K128 ; R76 := R75; R75 := R75[0x091c120e]
	1314	[6175]	CALL     	R75 2 2 ; R75 := R75(R76)
	1315	[6175]	DIV      	R75 R75 K47 ; R75 := R75 / 2.000000
	1316	[6175]	LT       	0 R75 R70 ; if R75 >= R70 then PC := 1321
	1317	[6175]	JMP      	1321 ; PC := 1321
	1318	[6176]	SUB      	R70 R70 K129 ; R70 := R70 - 485.000000
	1319	[6177]	LOADK    	R72 := -20.000000
	1320	[6177]	JMP      	1324 ; PC := 1324
	1321	[6179]	SUB      	R70 R70 K130 ; R70 := R70 - 20.000000
	1322	[6180]	LOADK    	R72 := 20.000000
	1323	[6181]	LOADK    	R74 := -35.000000
	1324	[6184]	GETGLOBAL	R75 K131 ; R75 := mInfoTip
	1325	[6184]	GETTABLE 	R75 R75 K132 ; R75 := R75["BgHeight"]
	1326	[6185]	GETGLOBAL	R76 K131 ; R76 := mInfoTip
	1327	[6185]	GETTABLE 	R76 R76 K133 ; R76 := R76["NodeSelectionOpen"]
	1328	[6185]	TEST     	R76 0 ; if not R76 then PC := 1341
	1329	[6185]	JMP      	1341 ; PC := 1341
	1330	[6186]	GETGLOBAL	R76 K131 ; R76 := mInfoTip
	1331	[6186]	GETTABLE 	R76 R76 K134 ; R76 := R76["mBaseHeight"]
	1332	[6186]	GETGLOBAL	R77 K131 ; R77 := mInfoTip
	1333	[6186]	GETTABLE 	R77 R77 K135 ; R77 := R77["NodeMissionList"]
	1334	[6186]	SELF     	R77 R77 K136 ; R78 := R77; R77 := R77[0x5fbddc1a]
	1335	[6186]	CALL     	R77 2 2 ; R77 := R77(R78)
	1336	[6186]	GETGLOBAL	R78 K131 ; R78 := mInfoTip
	1337	[6186]	GETTABLE 	R78 R78 K135 ; R78 := R78["NodeMissionList"]
	1338	[6186]	GETTABLE 	R78 R78 K137 ; R78 := R78["mForcedVerticalSeparation"]
	1339	[6186]	MUL      	R77 R77 R78 ; R77 := R77 * R78
	1340	[6186]	ADD      	R75 R76 R77 ; R75 := R76 + R77
	1341	[6188]	GETGLOBAL	R76 K40 ; R76 := 0xae91e43b
	1342	[6188]	SELF     	R76 R76 K138 ; R77 := R76; R76 := R76[0x2cc9d281]
	1343	[6188]	CALL     	R76 2 2 ; R76 := R76(R77)
	1344	[6188]	DIV      	R76 R76 K47 ; R76 := R76 / 2.000000
	1345	[6188]	LT       	0 R76 R71 ; if R76 >= R71 then PC := 1352
	1346	[6188]	JMP      	1352 ; PC := 1352
	1347	[6189]	SUB      	R76 R71 R75 ; R76 := R71 - R75
	1348	[6189]	ADD      	R76 R76 K139 ; R76 := R76 + 50.000000
	1349	[6189]	ADD      	R71 R76 R74 ; R71 := R76 + R74
	1350	[6190]	LOADK    	R73 := -20.000000
	1351	[6190]	JMP      	1365 ; PC := 1365
	1352	[6192]	GETGLOBAL	R76 K40 ; R76 := 0xae91e43b
	1353	[6192]	SELF     	R76 R76 K138 ; R77 := R76; R76 := R76[0x2cc9d281]
	1354	[6192]	CALL     	R76 2 2 ; R76 := R76(R77)
	1355	[6192]	MUL      	R76 R76 K140 ; R76 := R76 * 0.950000
	1356	[6192]	SUB      	R76 R76 R75 ; R76 := R76 - R75
	1357	[6193]	GETGLOBAL	R77 K66 ; R77 := 0x5bced4c4
	1358	[6193]	GETTABLE 	R77 R77 K141 ; R77 := R77[0xac1b386a]
	1359	[6193]	ADD      	R78 R71 K142 ; R78 := R71 + 47.000000
	1360	[6193]	SUB      	R78 R78 R74 ; R78 := R78 - R74
	1361	[6193]	MOVE     	R79 R76 ; R79 := R76
	1362	[6193]	CALL     	R77 3 2 ; R77 := R77(R78,R79)
	1363	[6193]	MOVE     	R71 R77 ; R71 := R77
	1364	[6194]	LOADK    	R73 := 20.000000
	1365	[6197]	GETGLOBAL	R77 K40 ; R77 := 0xae91e43b
	1366	[6197]	SELF     	R77 R77 K117 ; R78 := R77; R77 := R77[0x67bc869f]
	1367	[6197]	LOADK    	R79 K143 ; R79 := "InfoTip"
	1368	[6197]	LOADK    	R80 := 0.000000
	1369	[6197]	MOVE     	R81 R70 ; R81 := R70
	1370	[6197]	CALL     	R77 5 1 ; R77(R78,R79,R80,R81)
	1371	[6198]	GETGLOBAL	R77 K131 ; R77 := mInfoTip
	1372	[6198]	GETTABLE 	R77 R77 K11 ; R77 := R77["mSmoothY"]
	1373	[6198]	SELF     	R77 R77 K9 ; R78 := R77; R77 := R77[0x54ab95f9]
	1374	[6198]	CALL     	R77 2 2 ; R77 := R77(R78)
	1375	[6198]	EQ       	0 R77 K79 ; if R77 ~= -1.000000 then PC := 1383
	1376	[6198]	JMP      	1383 ; PC := 1383
	1377	[6199]	GETGLOBAL	R77 K131 ; R77 := mInfoTip
	1378	[6199]	GETTABLE 	R77 R77 K11 ; R77 := R77["mSmoothY"]
	1379	[6199]	SELF     	R77 R77 K144 ; R78 := R77; R77 := R77[0xd0f998cd]
	1380	[6199]	MOVE     	R79 R71 ; R79 := R71
	1381	[6199]	CALL     	R77 3 1 ; R77(R78,R79)
	1382	[6199]	JMP      	1388 ; PC := 1388
	1383	[6201]	GETGLOBAL	R77 K131 ; R77 := mInfoTip
	1384	[6201]	GETTABLE 	R77 R77 K11 ; R77 := R77["mSmoothY"]
	1385	[6201]	SELF     	R77 R77 K145 ; R78 := R77; R77 := R77[0x188e2bee]
	1386	[6201]	MOVE     	R79 R71 ; R79 := R71
	1387	[6201]	CALL     	R77 3 1 ; R77(R78,R79)
	1388	[6203]	GETGLOBAL	R77 K131 ; R77 := mInfoTip
	1389	[6203]	GETTABLE 	R77 R77 K11 ; R77 := R77["mSmoothY"]
	1390	[6203]	SELF     	R77 R77 K146 ; R78 := R77; R77 := R77[0xfaa69527]
	1391	[6203]	GETGLOBAL	R79 K147 ; R79 := 0x67652851
	1392	[6203]	CALL     	R79 1 0 ; R79,... := R79()
	1393	[6203]	CALL     	R77 0 1 ; R77(R78,...)
	1394	[6204]	GETGLOBAL	R77 K40 ; R77 := 0xae91e43b
	1395	[6204]	SELF     	R77 R77 K117 ; R78 := R77; R77 := R77[0x67bc869f]
	1396	[6204]	LOADK    	R79 K143 ; R79 := "InfoTip"
	1397	[6204]	LOADK    	R80 := 1.000000
	1398	[6204]	GETGLOBAL	R81 K131 ; R81 := mInfoTip
	1399	[6204]	GETTABLE 	R81 R81 K11 ; R81 := R81["mSmoothY"]
	1400	[6204]	SELF     	R81 R81 K9 ; R82 := R81; R81 := R81[0x54ab95f9]
	1401	[6204]	CALL     	R81 2 0 ; R81,... := R81(R82)
	1402	[6204]	CALL     	R77 0 1 ; R77(R78,...)
	1403	[6206]	GETGLOBAL	R77 K40 ; R77 := 0xae91e43b
	1404	[6206]	SELF     	R77 R77 K49 ; R78 := R77; R77 := R77[0xcd12f3f1]
	1405	[6206]	GETGLOBAL	R79 K12 ; R79 := mHover
	1406	[6206]	GETTABLE 	R79 R79 K14 ; R79 := R79["Node"]
	1407	[6206]	GETTABLE 	R79 R79 K93 ; R79 := R79["labelIndex"]
	1408	[6206]	LOADK    	R80 := 10.000000
	1409	[6206]	LOADK    	R81 := 100.000000
	1410	[6206]	CALL     	R77 5 1 ; R77(R78,R79,R80,R81)
	1411	[6208]	GETGLOBAL	R77 K26 ; R77 := 0x7b998233
	1412	[6208]	GETGLOBAL	R78 K131 ; R78 := mInfoTip
	1413	[6208]	GETTABLE 	R78 R78 K148 ; R78 := R78["mTransmissionStatus"]
	1414	[6208]	GETTABLE 	R78 R78 K149 ; R78 := R78["Projector"]
	1415	[6208]	CALL     	R77 2 2 ; R77 := R77(R78)
	1416	[6208]	TEST     	R77 0 ; if not R77 then PC := 1439
	1417	[6208]	JMP      	1439 ; PC := 1439
	1418	[6209]	GETGLOBAL	R77 K131 ; R77 := mInfoTip
	1419	[6209]	GETTABLE 	R77 R77 K148 ; R77 := R77["mTransmissionStatus"]
	1420	[6209]	GETGLOBAL	R78 K150 ; R78 := 0x1211d00f
	1421	[6209]	SELF     	R78 R78 K151 ; R79 := R78; R78 := R78[0x05909209]
	1422	[6209]	GETGLOBAL	R80 K152 ; R80 := 0x21d6d17b
	1423	[6209]	GETGLOBAL	R81 K12 ; R81 := mHover
	1424	[6209]	GETTABLE 	R81 R81 K14 ; R81 := R81["Node"]
	1425	[6209]	GETTABLE 	R81 R81 K64 ; R81 := R81["position"]
	1426	[6209]	GETGLOBAL	R82 K31 ; R82 := 0x00046924
	1427	[6209]	MOVE     	R83 R72 ; R83 := R72
	1428	[6209]	MOVE     	R84 R73 ; R84 := R73
	1429	[6209]	LOADK    	R85 := 0.000000
	1430	[6209]	CALL     	R82 4 0 ; R82,... := R82(R83,R84,R85)
	1431	[6209]	CALL     	R78 0 2 ; R78 := R78(R79,...)
	1432	[6209]	SETTABLE 	R77 K149 R78 ; R77["Projector"] := R78
	1433	[6210]	GETGLOBAL	R77 K131 ; R77 := mInfoTip
	1434	[6210]	GETTABLE 	R77 R77 K148 ; R77 := R77["mTransmissionStatus"]
	1435	[6210]	GETTABLE 	R77 R77 K149 ; R77 := R77["Projector"]
	1436	[6210]	SELF     	R77 R77 K153 ; R78 := R77; R77 := R77[0x2d9ba74f]
	1437	[6210]	LOADK    	R79 := 0.125000
	1438	[6210]	CALL     	R77 3 1 ; R77(R78,R79)
	1439	[6214]	GETGLOBAL	R77 K131 ; R77 := mInfoTip
	1440	[6214]	GETTABLE 	R77 R77 K148 ; R77 := R77["mTransmissionStatus"]
	1441	[6214]	GETTABLE 	R77 R77 K154 ; R77 := R77["Playing"]
	1442	[6214]	TEST     	R77 0 ; if not R77 then PC := 1451
	1443	[6214]	JMP      	1451 ; PC := 1451
	1444	[6214]	GETGLOBAL	R77 K12 ; R77 := mHover
	1445	[6214]	GETTABLE 	R77 R77 K14 ; R77 := R77["Node"]
	1446	[6214]	EQ       	0 R77 K19 ; if R77 ~= nil then PC := 1451
	1447	[6214]	JMP      	1451 ; PC := 1451
	1448	[6215]	GETGLOBAL	R77 K131 ; R77 := mInfoTip
	1449	[6215]	SELF     	R77 R77 K155 ; R78 := R77; R77 := R77[0xfe0d9469]
	1450	[6215]	CALL     	R77 2 1 ; R77(R78)
	1451	[6218]	GETUPVAL 	R77 U15 ; R77 := U15
	1452	[6218]	CALL     	R77 1 1 ; R77()
	1453	[6219]	GETUPVAL 	R77 U16 ; R77 := U16
	1454	[6219]	GETUPVAL 	R78 U17 ; R78 := U17
	1455	[6219]	GETTABLE 	R78 R78 K156 ; R78 := R78["REGION_ID_FORTRESS"]
	1456	[6219]	GETTABLE 	R77 R77 R78 ; R77 := R77[R78]
	1457	[6219]	EQ       	1 R77 K157 ; if R77 == true then PC := 1461
	1458	[6219]	JMP      	1461 ; PC := 1461
	1459	[6220]	GETUPVAL 	R77 U18 ; R77 := U18
	1460	[6220]	CALL     	R77 1 1 ; R77()
	1461	[6223]	GETGLOBAL	R77 K158 ; R77 := mPlayerPos
	1462	[6223]	GETTABLE 	R77 R77 K159 ; R77 := R77["Prop"]
	1463	[6223]	SELF     	R77 R77 K9 ; R78 := R77; R77 := R77[0x54ab95f9]
	1464	[6223]	CALL     	R77 2 2 ; R77 := R77(R78)
	1465	[6224]	GETGLOBAL	R78 K158 ; R78 := mPlayerPos
	1466	[6224]	GETTABLE 	R78 R78 K159 ; R78 := R78["Prop"]
	1467	[6224]	SELF     	R78 R78 K146 ; R79 := R78; R78 := R78[0xfaa69527]
	1468	[6224]	GETGLOBAL	R80 K147 ; R80 := 0x67652851
	1469	[6224]	CALL     	R80 1 0 ; R80,... := R80()
	1470	[6224]	CALL     	R78 0 1 ; R78(R79,...)
	1471	[6225]	GETGLOBAL	R78 K66 ; R78 := 0x5bced4c4
	1472	[6225]	GETTABLE 	R78 R78 K68 ; R78 := R78[0xe4a5b3ca]
	1473	[6225]	GETGLOBAL	R79 K158 ; R79 := mPlayerPos
	1474	[6225]	GETTABLE 	R79 R79 K159 ; R79 := R79["Prop"]
	1475	[6225]	GETTABLE 	R79 R79 K160 ; R79 := R79["mTargetVal"]
	1476	[6225]	SUB      	R79 R77 R79 ; R79 := R77 - R79
	1477	[6225]	CALL     	R78 2 2 ; R78 := R78(R79)
	1478	[6225]	LT       	1 K161 R78 ; if 0.010000 < R78 then PC := 1481
	1479	[6225]	JMP      	1481 ; PC := 1481
	1480	[6225]	OP_LOADBOOL	R78 0 1 ; R78 := false; PC := 1481
	1481	[6225]	OP_LOADBOOL	R78 1 0 ; R78 := true
	1482	[6226]	TEST     	R78 0 ; if not R78 then PC := 1506
	1483	[6226]	JMP      	1506 ; PC := 1506
	1484	[6226]	GETGLOBAL	R79 K26 ; R79 := 0x7b998233
	1485	[6226]	GETUPVAL 	R80 U19 ; R80 := U19
	1486	[6226]	CALL     	R79 2 2 ; R79 := R79(R80)
	1487	[6226]	TEST     	R79 1 ; if R79 then PC := 1506
	1488	[6226]	JMP      	1506 ; PC := 1506
	1489	[6226]	GETGLOBAL	R79 K162 ; R79 := mCountDown
	1490	[6226]	GETTABLE 	R79 R79 K163 ; R79 := R79["TransitioningOut"]
	1491	[6226]	TEST     	R79 1 ; if R79 then PC := 1506
	1492	[6226]	JMP      	1506 ; PC := 1506
	1493	[6227]	GETUPVAL 	R79 U19 ; R79 := U19
	1494	[6227]	SELF     	R79 R79 K97 ; R80 := R79; R79 := R79[0x9307aa51]
	1495	[6227]	GETGLOBAL	R81 K164 ; R81 := 0x5db3ce80
	1496	[6227]	GETGLOBAL	R82 K158 ; R82 := mPlayerPos
	1497	[6227]	GETTABLE 	R82 R82 K165 ; R82 := R82["Previous"]
	1498	[6227]	GETGLOBAL	R83 K158 ; R83 := mPlayerPos
	1499	[6227]	GETTABLE 	R83 R83 K166 ; R83 := R83["Target"]
	1500	[6227]	GETGLOBAL	R84 K158 ; R84 := mPlayerPos
	1501	[6227]	GETTABLE 	R84 R84 K159 ; R84 := R84["Prop"]
	1502	[6227]	SELF     	R84 R84 K9 ; R85 := R84; R84 := R84[0x54ab95f9]
	1503	[6227]	CALL     	R84 2 0 ; R84,... := R84(R85)
	1504	[6227]	CALL     	R81 0 0 ; R81,... := R81(R82,...)
	1505	[6227]	CALL     	R79 0 1 ; R79(R80,...)
	1506	[6229]	RETURN   	R0 1 ; return 

function #128 <?:6232,6242> (33 instructions, 132 bytes at 000002112EC98E40)
0 params, 4 slots, 4 upvalues, 0 locals, 6 constants, 0 functions
	1	[6233]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[6233]	TEST     	R0 0 ; if not R0 then PC := 33
	3	[6233]	JMP      	33 ; PC := 33
	4	[6233]	GETUPVAL 	R0 U1 ; R0 := U1
	5	[6233]	GETTABLE 	R0 R0 K0 ; R0 := R0["mControlDown"]
	6	[6233]	TEST     	R0 0 ; if not R0 then PC := 33
	7	[6233]	JMP      	33 ; PC := 33
	8	[6233]	GETGLOBAL	R0 K1 ; R0 := mSuperPoly
	9	[6233]	GETUPVAL 	R1 U0 ; R1 := U0
	10	[6233]	GETTABLE 	R0 R0 R1 ; R0 := R0[R1]
	11	[6233]	TEST     	R0 0 ; if not R0 then PC := 33
	12	[6233]	JMP      	33 ; PC := 33
	13	[6235]	GETUPVAL 	R0 U2 ; R0 := U2
	14	[6235]	CALL     	R0 1 2 ; R0 := R0()
	15	[6236]	GETGLOBAL	R1 K2 ; R1 := 0x03ea2485
	16	[6236]	MOVE     	R2 R0 ; R2 := R0
	17	[6236]	GETUPVAL 	R3 U3 ; R3 := U3
	18	[6236]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	19	[6236]	LT       	0 K3 R1 ; if 0.100000 >= R1 then PC := 33
	20	[6236]	JMP      	33 ; PC := 33
	21	[6237]	GETGLOBAL	R1 K1 ; R1 := mSuperPoly
	22	[6237]	GETUPVAL 	R2 U0 ; R2 := U0
	23	[6237]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	24	[6237]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xf5934be3]
	25	[6237]	MOVE     	R3 R0 ; R3 := R0
	26	[6237]	CALL     	R1 3 1 ; R1(R2,R3)
	27	[6238]	GETGLOBAL	R1 K1 ; R1 := mSuperPoly
	28	[6238]	GETUPVAL 	R2 U0 ; R2 := U0
	29	[6238]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	30	[6238]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0x0744d776]
	31	[6238]	CALL     	R1 2 1 ; R1(R2)
	32	[6239]	SETUPVAL 	R0 U3 ; U3 := R0
	33	[6242]	RETURN   	R0 1 ; return 

function #129 <?:6244,6254> (49 instructions, 196 bytes at 000002112EC99080)
1 param, 13 slots, 3 upvalues, 0 locals, 10 constants, 0 functions
	1	[6245]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[6245]	SETTABLE 	R1 K0 R0 ; R1["IsVisible"] := R0
	3	[6246]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	4	[6246]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xaade900e]
	5	[6246]	LOADK    	R3 K3 ; R3 := "Reticle"
	6	[6246]	LOADK    	R4 := 11.000000
	7	[6246]	MOVE     	R5 R0 ; R5 := R0
	8	[6246]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	9	[6247]	GETUPVAL 	R1 U1 ; R1 := U1
	10	[6247]	LEN      	R1 R1 ; R1 := # R1
	11	[6248]	GETUPVAL 	R2 U2 ; R2 := U2
	12	[6248]	GETTABLE 	R2 R2 K4 ; R2 := R2[0x06d055f9]
	13	[6248]	MOVE     	R3 R0 ; R3 := R0
	14	[6248]	LOADK    	R4 := 48.000000
	15	[6248]	LOADK    	R5 := 32.000000
	16	[6248]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	17	[6249]	LOADK    	R3 := 1.000000
	18	[6249]	MOVE     	R4 R1 ; R4 := R1
	19	[6249]	LOADK    	R5 := 1.000000
	20	[6249]	FORPREP  	R3 48 ; R3 -= R5; PC := 48
	21	[6250]	GETGLOBAL	R7 K1 ; R7 := 0xae91e43b
	22	[6250]	SELF     	R7 R7 K5 ; R8 := R7; R7 := R7[0xf64b7262]
	23	[6250]	GETUPVAL 	R9 U1 ; R9 := U1
	24	[6250]	GETTABLE 	R9 R9 R6 ; R9 := R9[R6]
	25	[6250]	GETTABLE 	R9 R9 K6 ; R9 := R9["clipName"]
	26	[6250]	LOADK    	R10 K7 ; R10 := "Btn"
	27	[6250]	LOADK    	R11 := 12.000000
	28	[6250]	MOVE     	R12 R2 ; R12 := R2
	29	[6250]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	30	[6251]	GETGLOBAL	R7 K1 ; R7 := 0xae91e43b
	31	[6251]	SELF     	R7 R7 K5 ; R8 := R7; R7 := R7[0xf64b7262]
	32	[6251]	GETUPVAL 	R9 U1 ; R9 := U1
	33	[6251]	GETTABLE 	R9 R9 R6 ; R9 := R9[R6]
	34	[6251]	GETTABLE 	R9 R9 K6 ; R9 := R9["clipName"]
	35	[6251]	LOADK    	R10 K7 ; R10 := "Btn"
	36	[6251]	LOADK    	R11 := 13.000000
	37	[6251]	MOVE     	R12 R2 ; R12 := R2
	38	[6251]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	39	[6252]	GETGLOBAL	R7 K1 ; R7 := 0xae91e43b
	40	[6252]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0xc0a3774b]
	41	[6252]	GETUPVAL 	R9 U1 ; R9 := U1
	42	[6252]	GETTABLE 	R9 R9 R6 ; R9 := R9[R6]
	43	[6252]	GETTABLE 	R9 R9 K6 ; R9 := R9["clipName"]
	44	[6252]	LOADK    	R10 K9 ; R10 := "Name"
	45	[6252]	LOADK    	R11 := 59.000000
	46	[6252]	NOT      	R12 R0 ; R12 := not R0
	47	[6252]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	48	[6249]	FORLOOP  	R3 21 ; R3 += R5; if R3 <= R4 then begin PC := 21; R6 := R3 end
	49	[6254]	RETURN   	R0 1 ; return 

function #130 <?:6256,6266> (44 instructions, 176 bytes at 000002112EC99380)
2 params, 10 slots, 2 upvalues, 0 locals, 20 constants, 0 functions
	1	[6257]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[6257]	GETUPVAL 	R3 U0 ; R3 := U0
	3	[6257]	GETTABLE 	R3 R3 K1 ; R3 := R3["JunctionTasks"]
	4	[6257]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[6257]	TEST     	R2 0 ; if not R2 then PC := 44
	6	[6257]	JMP      	44 ; PC := 44
	7	[6258]	GETGLOBAL	R2 K2 ; R2 := mZoomedRegion
	8	[6258]	EQ       	1 R2 K3 ; if R2 == nil then PC := 15
	9	[6258]	JMP      	15 ; PC := 15
	10	[6258]	GETGLOBAL	R2 K2 ; R2 := mZoomedRegion
	11	[6258]	GETTABLE 	R2 R2 K4 ; R2 := R2["pos"]
	12	[6258]	GETTABLE 	R2 R2 K5 ; R2 := R2["x"]
	13	[6258]	LT       	1 R2 K6 ; if R2 < 0.000000 then PC := 16
	14	[6258]	JMP      	16 ; PC := 16
	15	[6258]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 16
	16	[6258]	OP_LOADBOOL	R2 1 0 ; R2 := true
	17	[6260]	GETGLOBAL	R3 K7 ; R3 := _T
	18	[6260]	GETTABLE 	R4 R0 K9 ; R4 := R0["radialSector"]
	19	[6260]	SETTABLE 	R3 K8 R4 ; R3["JunctionTasksUIRadialSector"] := R4
	20	[6261]	GETGLOBAL	R3 K7 ; R3 := _T
	21	[6261]	SETTABLE 	R3 K10 R1 ; R3["JunctionTasksInstant"] := R1
	22	[6262]	GETUPVAL 	R3 U0 ; R3 := U0
	23	[6262]	GETGLOBAL	R4 K11 ; R4 := 0x9ba7909f
	24	[6262]	SELF     	R4 R4 K12 ; R5 := R4; R4 := R4[0x6dd7aa66]
	25	[6262]	GETGLOBAL	R6 K13 ; R6 := 0x49efc1bc
	26	[6262]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	27	[6262]	SETTABLE 	R3 K1 R4 ; R3["JunctionTasks"] := R4
	28	[6263]	GETUPVAL 	R3 U0 ; R3 := U0
	29	[6263]	GETTABLE 	R3 R3 K1 ; R3 := R3["JunctionTasks"]
	30	[6263]	SELF     	R3 R3 K14 ; R4 := R3; R3 := R3[0xaa503602]
	31	[6263]	OP_LOADBOOL	R5 0 0 ; R5 := false
	32	[6263]	CALL     	R3 3 1 ; R3(R4,R5)
	33	[6264]	GETUPVAL 	R3 U0 ; R3 := U0
	34	[6264]	GETTABLE 	R3 R3 K1 ; R3 := R3["JunctionTasks"]
	35	[6264]	SELF     	R3 R3 K15 ; R4 := R3; R3 := R3[0xe4162eed]
	36	[6264]	LOADK    	R5 K16 ; R5 := "SetRightAligned"
	37	[6264]	GETUPVAL 	R6 U1 ; R6 := U1
	38	[6264]	GETTABLE 	R6 R6 K17 ; R6 := R6[0x06d055f9]
	39	[6264]	MOVE     	R7 R2 ; R7 := R2
	40	[6264]	LOADK    	R8 K18 ; R8 := "true"
	41	[6264]	LOADK    	R9 K19 ; R9 := "false"
	42	[6264]	CALL     	R6 4 0 ; R6,... := R6(R7,R8,R9)
	43	[6264]	CALL     	R3 0 1 ; R3(R4,...)
	44	[6266]	RETURN   	R0 1 ; return 

function #131 <?:6268,6279> (52 instructions, 208 bytes at 0000021120AB7230)
0 params, 12 slots, 1 upvalue, 0 locals, 18 constants, 0 functions
	1	[6269]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[6269]	GETGLOBAL	R1 K1 ; R1 := mWagerMission
	3	[6269]	GETTABLE 	R1 R1 K2 ; R1 := R1["MovieInst"]
	4	[6269]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[6269]	TEST     	R0 1 ; if R0 then PC := 13
	6	[6269]	JMP      	13 ; PC := 13
	7	[6270]	GETGLOBAL	R0 K1 ; R0 := mWagerMission
	8	[6270]	GETTABLE 	R0 R0 K2 ; R0 := R0["MovieInst"]
	9	[6270]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0xe4162eed]
	10	[6270]	LOADK    	R2 K4 ; R2 := "ForceClose"
	11	[6270]	LOADK    	R3 K5 ; R3 := ""
	12	[6270]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	13	[6273]	LOADK    	R0 := 1.000000
	14	[6273]	GETUPVAL 	R1 U0 ; R1 := U0
	15	[6273]	LEN      	R1 R1 ; R1 := # R1
	16	[6273]	LOADK    	R2 := 1.000000
	17	[6273]	FORPREP  	R0 51 ; R0 -= R2; PC := 51
	18	[6274]	GETUPVAL 	R4 U0 ; R4 := U0
	19	[6274]	GETTABLE 	R4 R4 R3 ; R4 := R4[R3]
	20	[6275]	GETTABLE 	R5 R4 K6 ; R5 := R4["locked"]
	21	[6275]	TEST     	R5 0 ; if not R5 then PC := 27
	22	[6275]	JMP      	27 ; PC := 27
	23	[6275]	GETTABLE 	R5 R4 K7 ; R5 := R4["forceHover"]
	24	[6275]	EQ       	1 R5 K8 ; if R5 == true then PC := 27
	25	[6275]	JMP      	27 ; PC := 27
	26	[6275]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 27
	27	[6275]	OP_LOADBOOL	R5 1 0 ; R5 := true
	28	[6277]	GETGLOBAL	R6 K9 ; R6 := 0xae91e43b
	29	[6277]	SELF     	R6 R6 K10 ; R7 := R6; R6 := R6[0xaade900e]
	30	[6277]	GETTABLE 	R8 R4 K11 ; R8 := R4["clipName"]
	31	[6277]	LOADK    	R9 := 59.000000
	32	[6277]	TESTSET  	R10 R5 0 ; if not R5 then PC := 50 else R10 := R5 
	33	[6277]	JMP      	50 ; PC := 50
	34	[6277]	GETGLOBAL	R10 K12 ; R10 := _T
	35	[6277]	GETTABLE 	R10 R10 K13 ; R10 := R10["gPendingMission"]
	36	[6277]	EQ       	1 R10 K14 ; if R10 == nil then PC := 49
	37	[6277]	JMP      	49 ; PC := 49
	38	[6277]	GETTABLE 	R10 R4 K15 ; R10 := R4["radialSector"]
	39	[6277]	EQ       	1 R10 K14 ; if R10 == nil then PC := 48
	40	[6277]	JMP      	48 ; PC := 48
	41	[6277]	GETGLOBAL	R10 K12 ; R10 := _T
	42	[6277]	GETTABLE 	R10 R10 K13 ; R10 := R10["gPendingMission"]
	43	[6277]	GETTABLE 	R10 R10 K16 ; R10 := R10["baseNodeName"]
	44	[6277]	GETTABLE 	R11 R4 K15 ; R11 := R4["radialSector"]
	45	[6277]	GETTABLE 	R11 R11 K17 ; R11 := R11["name"]
	46	[6277]	EQ       	1 R10 R11 ; if R10 == R11 then PC := 49
	47	[6277]	JMP      	49 ; PC := 49
	48	[6277]	OP_LOADBOOL	R10 0 1 ; R10 := false; PC := 49
	49	[6277]	OP_LOADBOOL	R10 1 0 ; R10 := true
	50	[6277]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	51	[6273]	FORLOOP  	R0 18 ; R0 += R2; if R0 <= R1 then begin PC := 18; R3 := R0 end
	52	[6279]	RETURN   	R0 1 ; return 

function #132 <?:6281,6293> (48 instructions, 192 bytes at 0000021120AB75B0)
2 params, 11 slots, 1 upvalue, 0 locals, 11 constants, 0 functions
	1	[6282]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[6282]	GETTABLE 	R2 R2 K0 ; R2 := R2[0xd2fc8b86]
	3	[6282]	MOVE     	R3 R0 ; R3 := R0
	4	[6282]	MOVE     	R4 R1 ; R4 := R1
	5	[6282]	GETGLOBAL	R5 K1 ; R5 := 0xa421af95
	6	[6282]	LOADK    	R6 := 0.000000
	7	[6282]	LOADK    	R7 := 0.000000
	8	[6282]	LOADK    	R8 := 1.000000
	9	[6282]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	10	[6282]	GETGLOBAL	R6 K2 ; R6 := mRailJack
	11	[6282]	GETTABLE 	R6 R6 K3 ; R6 := R6["voidDecoData"]
	12	[6282]	GETTABLE 	R6 R6 K4 ; R6 := R6[1.000000]
	13	[6282]	GETTABLE 	R6 R6 K5 ; R6 := R6["pos"]
	14	[6282]	GETTABLE 	R6 R6 K6 ; R6 := R6["z"]
	15	[6282]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	16	[6284]	NEWTABLE 	R3 0 0 ; R3 := {}
	17	[6285]	LOADK    	R4 := 1.000000
	18	[6285]	GETGLOBAL	R5 K2 ; R5 := mRailJack
	19	[6285]	GETTABLE 	R5 R5 K3 ; R5 := R5["voidDecoData"]
	20	[6285]	LEN      	R5 R5 ; R5 := # R5
	21	[6285]	LOADK    	R6 := 1.000000
	22	[6285]	FORPREP  	R4 46 ; R4 -= R6; PC := 46
	23	[6286]	GETGLOBAL	R8 K2 ; R8 := mRailJack
	24	[6286]	GETTABLE 	R8 R8 K3 ; R8 := R8["voidDecoData"]
	25	[6286]	GETTABLE 	R8 R8 R7 ; R8 := R8[R7]
	26	[6286]	GETTABLE 	R8 R8 K7 ; R8 := R8["BMin"]
	27	[6286]	SUB      	R8 R2 R8 ; R8 := R2 - R8
	28	[6287]	GETTABLE 	R9 R8 K8 ; R9 := R8["x"]
	29	[6287]	GETGLOBAL	R10 K2 ; R10 := mRailJack
	30	[6287]	GETTABLE 	R10 R10 K3 ; R10 := R10["voidDecoData"]
	31	[6287]	GETTABLE 	R10 R10 R7 ; R10 := R10[R7]
	32	[6287]	GETTABLE 	R10 R10 K9 ; R10 := R10["BScale"]
	33	[6287]	GETTABLE 	R10 R10 K8 ; R10 := R10["x"]
	34	[6287]	MUL      	R9 R9 R10 ; R9 := R9 * R10
	35	[6287]	SUB      	R9 K4 R9 ; R9 := 1.000000 - R9
	36	[6287]	SETTABLE 	R8 K8 R9 ; R8["x"] := R9
	37	[6288]	GETTABLE 	R9 R8 K10 ; R9 := R8["y"]
	38	[6288]	GETGLOBAL	R10 K2 ; R10 := mRailJack
	39	[6288]	GETTABLE 	R10 R10 K3 ; R10 := R10["voidDecoData"]
	40	[6288]	GETTABLE 	R10 R10 R7 ; R10 := R10[R7]
	41	[6288]	GETTABLE 	R10 R10 K9 ; R10 := R10["BScale"]
	42	[6288]	GETTABLE 	R10 R10 K10 ; R10 := R10["y"]
	43	[6288]	MUL      	R9 R9 R10 ; R9 := R9 * R10
	44	[6288]	SETTABLE 	R8 K10 R9 ; R8["y"] := R9
	45	[6289]	SETTABLE 	R3 R7 R8 ; R3[R7] := R8
	46	[6285]	FORLOOP  	R4 23 ; R4 += R6; if R4 <= R5 then begin PC := 23; R7 := R4 end
	47	[6292]	RETURN   	R3 2 ; return R3 
	48	[6293]	RETURN   	R0 1 ; return 

function #133 <?:6295,6309> (33 instructions, 132 bytes at 0000021120AB78A0)
5 params, 20 slots, 0 upvalues, 0 locals, 10 constants, 0 functions
	1	[6296]	LOADK    	R5 := 1.000000
	2	[6296]	LEN      	R6 R0 ; R6 := # R0
	3	[6296]	LOADK    	R7 := 1.000000
	4	[6296]	FORPREP  	R5 32 ; R5 -= R7; PC := 32
	5	[6297]	GETTABLE 	R9 R0 R8 ; R9 := R0[R8]
	6	[6297]	GETTABLE 	R9 R9 K0 ; R9 := R9["x"]
	7	[6298]	GETTABLE 	R10 R0 R8 ; R10 := R0[R8]
	8	[6298]	GETTABLE 	R10 R10 K1 ; R10 := R10["y"]
	9	[6300]	EQ       	0 R8 K2 ; if R8 ~= 2.000000 then PC := 14
	10	[6300]	JMP      	14 ; PC := 14
	11	[6301]	UNM      	R9 R9 ; R9 := ^ R9
	12	[6302]	UNM      	R10 R10 ; R10 := ^ R10
	13	[6302]	JMP      	15 ; PC := 15
	14	[6304]	UNM      	R9 R9 ; R9 := ^ R9
	15	[6307]	GETGLOBAL	R11 K3 ; R11 := mRailJack
	16	[6307]	GETTABLE 	R11 R11 K4 ; R11 := R11["voidDecos"]
	17	[6307]	GETTABLE 	R11 R11 R8 ; R11 := R11[R8]
	18	[6307]	SELF     	R11 R11 K5 ; R12 := R11; R11 := R11[0x986d2ab8]
	19	[6307]	GETGLOBAL	R13 K3 ; R13 := mRailJack
	20	[6307]	GETTABLE 	R13 R13 K6 ; R13 := R13["uvHoles"]
	21	[6307]	GETTABLE 	R13 R13 R1 ; R13 := R13[R1]
	22	[6307]	MOVE     	R14 R9 ; R14 := R9
	23	[6307]	MOVE     	R15 R10 ; R15 := R10
	24	[6307]	GETGLOBAL	R16 K7 ; R16 := 0x9bafffe3
	25	[6307]	LOADK    	R17 K8 ; R17 := 0.012500
	26	[6307]	LOADK    	R18 K9 ; R18 := 0.050000
	27	[6307]	MOVE     	R19 R2 ; R19 := R2
	28	[6307]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	29	[6307]	MUL      	R16 R16 R3 ; R16 := R16 * R3
	30	[6307]	MOVE     	R17 R4 ; R17 := R4
	31	[6307]	CALL     	R11 7 1 ; R11(R12,R13,R14,R15,R16,R17)
	32	[6296]	FORLOOP  	R5 5 ; R5 += R7; if R5 <= R6 then begin PC := 5; R8 := R5 end
	33	[6309]	RETURN   	R0 1 ; return 

function #134 <?:6311,6768> (1441 instructions, 5764 bytes at 0000021120AB7A70)
0 params, 90 slots, 39 upvalues, 0 locals, 204 constants, 5 functions
	1	[6312]	GETGLOBAL	R0 K0 ; R0 := 0xb693b6c1
	2	[6312]	CALL     	R0 1 2 ; R0 := R0()
	3	[6314]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	4	[6314]	GETGLOBAL	R2 K2 ; R2 := 0xae91e43b
	5	[6314]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[6314]	TEST     	R1 0 ; if not R1 then PC := 9
	7	[6314]	JMP      	9 ; PC := 9
	8	[6315]	RETURN   	R0 1 ; return 
	9	[6318]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	10	[6318]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x8a8c8d5a]
	11	[6318]	MOVE     	R3 R0 ; R3 := R0
	12	[6318]	CALL     	R1 3 1 ; R1(R2,R3)
	13	[6320]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	14	[6320]	GETUPVAL 	R2 U0 ; R2 := U0
	15	[6320]	CALL     	R1 2 2 ; R1 := R1(R2)
	16	[6320]	TEST     	R1 1 ; if R1 then PC := 22
	17	[6320]	JMP      	22 ; PC := 22
	18	[6321]	GETUPVAL 	R1 U0 ; R1 := U0
	19	[6321]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xfaa69527]
	20	[6321]	MOVE     	R3 R0 ; R3 := R0
	21	[6321]	CALL     	R1 3 1 ; R1(R2,R3)
	22	[6324]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	23	[6324]	GETUPVAL 	R2 U1 ; R2 := U1
	24	[6324]	GETTABLE 	R2 R2 K5 ; R2 := R2["sky"]
	25	[6324]	GETTABLE 	R2 R2 K6 ; R2 := R2["Zone"]
	26	[6324]	CALL     	R1 2 2 ; R1 := R1(R2)
	27	[6324]	TEST     	R1 1 ; if R1 then PC := 29
	28	[6324]	JMP      	29 ; PC := 29
	29	[6328]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	30	[6328]	GETGLOBAL	R2 K7 ; R2 := mRailJack
	31	[6328]	GETTABLE 	R2 R2 K8 ; R2 := R2["voidDecos"]
	32	[6328]	CALL     	R1 2 2 ; R1 := R1(R2)
	33	[6328]	TEST     	R1 1 ; if R1 then PC := 297
	34	[6328]	JMP      	297 ; PC := 297
	35	[6328]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	36	[6328]	SELF     	R1 R1 K9 ; R2 := R1; R1 := R1[0xcd73323e]
	37	[6328]	CALL     	R1 2 2 ; R1 := R1(R2)
	38	[6328]	TEST     	R1 0 ; if not R1 then PC := 297
	39	[6328]	JMP      	297 ; PC := 297
	40	[6330]	GETGLOBAL	R1 K10 ; R1 := 0xb7cbd06b
	41	[6330]	GETGLOBAL	R2 K11 ; R2 := Zoom
	42	[6330]	GETTABLE 	R2 R2 K12 ; R2 := R2["MIN_ZOOM"]
	43	[6330]	GETGLOBAL	R3 K11 ; R3 := Zoom
	44	[6330]	GETTABLE 	R3 R3 K13 ; R3 := R3["MAX_ZOOM"]
	45	[6330]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	46	[6331]	GETGLOBAL	R2 K14 ; R2 := 0x42dcc9f5
	47	[6331]	GETGLOBAL	R3 K15 ; R3 := mSmoothZoom
	48	[6331]	GETTABLE 	R3 R3 K16 ; R3 := R3["mCurVal"]
	49	[6331]	GETTABLE 	R4 R1 K17 ; R4 := R1["minValue"]
	50	[6331]	GETTABLE 	R5 R1 K18 ; R5 := R1["maxValue"]
	51	[6331]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	52	[6332]	SELF     	R3 R1 K19 ; R4 := R1; R3 := R1[0x3b93153d]
	53	[6332]	MOVE     	R5 R2 ; R5 := R2
	54	[6332]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	55	[6332]	MOVE     	R2 R3 ; R2 := R3
	56	[6333]	MUL      	R2 R2 R2 ; R2 := R2 * R2
	57	[6335]	GETGLOBAL	R3 K2 ; R3 := 0xae91e43b
	58	[6335]	SELF     	R3 R3 K9 ; R4 := R3; R3 := R3[0xcd73323e]
	59	[6335]	CALL     	R3 2 2 ; R3 := R3(R4)
	60	[6335]	SELF     	R3 R3 K20 ; R4 := R3; R3 := R3[0xd1586535]
	61	[6335]	CALL     	R3 2 2 ; R3 := R3(R4)
	62	[6336]	GETGLOBAL	R4 K21 ; R4 := 0xa421af95
	63	[6336]	CALL     	R4 1 2 ; R4 := R4()
	64	[6336]	SUB      	R4 R4 R3 ; R4 := R4 - R3
	65	[6337]	GETGLOBAL	R5 K22 ; R5 := 0xc2892f65
	66	[6337]	MOVE     	R6 R4 ; R6 := R4
	67	[6337]	CALL     	R5 2 1 ; R5(R6)
	68	[6338]	GETGLOBAL	R5 K7 ; R5 := mRailJack
	69	[6338]	GETTABLE 	R5 R5 K23 ; R5 := R5[0xc95d7929]
	70	[6338]	MOVE     	R6 R3 ; R6 := R3
	71	[6338]	MOVE     	R7 R4 ; R7 := R4
	72	[6338]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	73	[6339]	LOADK    	R6 := 1.000000
	74	[6340]	GETGLOBAL	R7 K7 ; R7 := mRailJack
	75	[6340]	GETTABLE 	R7 R7 K24 ; R7 := R7[0xf6f3d76e]
	76	[6340]	MOVE     	R8 R5 ; R8 := R5
	77	[6340]	MOVE     	R9 R6 ; R9 := R6
	78	[6340]	MOVE     	R10 R2 ; R10 := R2
	79	[6340]	LOADK    	R11 := 3.000000
	80	[6340]	LOADK    	R12 K25 ; R12 := 0.030000
	81	[6340]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	82	[6341]	ADD      	R6 R6 K26 ; R6 := R6 + 1.000000
	83	[6343]	GETGLOBAL	R7 K27 ; R7 := mZoomedRegion
	84	[6343]	TEST     	R7 1 ; if R7 then PC := 141
	85	[6343]	JMP      	141 ; PC := 141
	86	[6344]	LOADK    	R7 := 1.000000
	87	[6344]	GETGLOBAL	R8 K28 ; R8 := mRegions
	88	[6344]	LEN      	R8 R8 ; R8 := # R8
	89	[6344]	LOADK    	R9 := 1.000000
	90	[6344]	FORPREP  	R7 139 ; R7 -= R9; PC := 139
	91	[6345]	GETGLOBAL	R11 K1 ; R11 := 0x7b998233
	92	[6345]	GETGLOBAL	R12 K29 ; R12 := mRegionInstances
	93	[6345]	GETTABLE 	R12 R12 R10 ; R12 := R12[R10]
	94	[6345]	CALL     	R11 2 2 ; R11 := R11(R12)
	95	[6345]	TEST     	R11 1 ; if R11 then PC := 139
	96	[6345]	JMP      	139 ; PC := 139
	97	[6345]	GETGLOBAL	R11 K29 ; R11 := mRegionInstances
	98	[6345]	GETTABLE 	R11 R11 R10 ; R11 := R11[R10]
	99	[6345]	SELF     	R11 R11 K30 ; R12 := R11; R11 := R11[0xd4cc05b4]
	100	[6345]	CALL     	R11 2 2 ; R11 := R11(R12)
	101	[6345]	TEST     	R11 0 ; if not R11 then PC := 139
	102	[6345]	JMP      	139 ; PC := 139
	103	[6346]	GETGLOBAL	R11 K31 ; R11 := 0x7f5022cf
	104	[6346]	GETTABLE 	R11 R11 K32 ; R11 := R11[0xa5c556b9]
	105	[6346]	GETGLOBAL	R12 K28 ; R12 := mRegions
	106	[6346]	GETTABLE 	R12 R12 R10 ; R12 := R12[R10]
	107	[6346]	GETTABLE 	R12 R12 K33 ; R12 := R12["name"]
	108	[6346]	LOADK    	R13 K34 ; R13 := "Space"
	109	[6346]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	110	[6346]	TEST     	R11 1 ; if R11 then PC := 139
	111	[6346]	JMP      	139 ; PC := 139
	112	[6347]	GETGLOBAL	R11 K28 ; R11 := mRegions
	113	[6347]	GETTABLE 	R11 R11 R10 ; R11 := R11[R10]
	114	[6347]	GETTABLE 	R11 R11 K35 ; R11 := R11["pos"]
	115	[6347]	SUB      	R4 R11 R3 ; R4 := R11 - R3
	116	[6348]	GETGLOBAL	R11 K22 ; R11 := 0xc2892f65
	117	[6348]	MOVE     	R12 R4 ; R12 := R4
	118	[6348]	CALL     	R11 2 1 ; R11(R12)
	119	[6349]	GETGLOBAL	R11 K7 ; R11 := mRailJack
	120	[6349]	GETTABLE 	R11 R11 K23 ; R11 := R11[0xc95d7929]
	121	[6349]	MOVE     	R12 R3 ; R12 := R3
	122	[6349]	MOVE     	R13 R4 ; R13 := R4
	123	[6349]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	124	[6349]	MOVE     	R5 R11 ; R5 := R11
	125	[6350]	GETGLOBAL	R11 K7 ; R11 := mRailJack
	126	[6350]	GETTABLE 	R11 R11 K36 ; R11 := R11["uvHoles"]
	127	[6350]	LEN      	R11 R11 ; R11 := # R11
	128	[6350]	LE       	0 R6 R11 ; if R6 > R11 then PC := 139
	129	[6350]	JMP      	139 ; PC := 139
	130	[6351]	GETGLOBAL	R11 K7 ; R11 := mRailJack
	131	[6351]	GETTABLE 	R11 R11 K24 ; R11 := R11[0xf6f3d76e]
	132	[6351]	MOVE     	R12 R5 ; R12 := R5
	133	[6351]	MOVE     	R13 R6 ; R13 := R6
	134	[6351]	MOVE     	R14 R2 ; R14 := R2
	135	[6351]	LOADK    	R15 K37 ; R15 := 1.300000
	136	[6351]	LOADK    	R16 K38 ; R16 := 0.050000
	137	[6351]	CALL     	R11 6 1 ; R11(R12,R13,R14,R15,R16)
	138	[6352]	ADD      	R6 R6 K26 ; R6 := R6 + 1.000000
	139	[6344]	FORLOOP  	R7 91 ; R7 += R9; if R7 <= R8 then begin PC := 91; R10 := R7 end
	140	[6356]	JMP      	271 ; PC := 271
	141	[6359]	GETGLOBAL	R11 K31 ; R11 := 0x7f5022cf
	142	[6359]	GETTABLE 	R11 R11 K32 ; R11 := R11[0xa5c556b9]
	143	[6359]	GETGLOBAL	R12 K27 ; R12 := mZoomedRegion
	144	[6359]	GETTABLE 	R12 R12 K33 ; R12 := R12["name"]
	145	[6359]	LOADK    	R13 K34 ; R13 := "Space"
	146	[6359]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	147	[6359]	TEST     	R11 1 ; if R11 then PC := 175
	148	[6359]	JMP      	175 ; PC := 175
	149	[6360]	GETGLOBAL	R11 K27 ; R11 := mZoomedRegion
	150	[6360]	GETTABLE 	R11 R11 K35 ; R11 := R11["pos"]
	151	[6360]	SUB      	R4 R11 R3 ; R4 := R11 - R3
	152	[6361]	GETGLOBAL	R11 K22 ; R11 := 0xc2892f65
	153	[6361]	MOVE     	R12 R4 ; R12 := R4
	154	[6361]	CALL     	R11 2 1 ; R11(R12)
	155	[6362]	GETGLOBAL	R11 K7 ; R11 := mRailJack
	156	[6362]	GETTABLE 	R11 R11 K23 ; R11 := R11[0xc95d7929]
	157	[6362]	MOVE     	R12 R3 ; R12 := R3
	158	[6362]	MOVE     	R13 R4 ; R13 := R4
	159	[6362]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	160	[6362]	MOVE     	R5 R11 ; R5 := R11
	161	[6363]	GETGLOBAL	R11 K7 ; R11 := mRailJack
	162	[6363]	GETTABLE 	R11 R11 K36 ; R11 := R11["uvHoles"]
	163	[6363]	LEN      	R11 R11 ; R11 := # R11
	164	[6363]	LE       	0 R6 R11 ; if R6 > R11 then PC := 175
	165	[6363]	JMP      	175 ; PC := 175
	166	[6364]	GETGLOBAL	R11 K7 ; R11 := mRailJack
	167	[6364]	GETTABLE 	R11 R11 K24 ; R11 := R11[0xf6f3d76e]
	168	[6364]	MOVE     	R12 R5 ; R12 := R5
	169	[6364]	MOVE     	R13 R6 ; R13 := R6
	170	[6364]	MOVE     	R14 R2 ; R14 := R2
	171	[6364]	LOADK    	R15 K37 ; R15 := 1.300000
	172	[6364]	LOADK    	R16 K38 ; R16 := 0.050000
	173	[6364]	CALL     	R11 6 1 ; R11(R12,R13,R14,R15,R16)
	174	[6365]	ADD      	R6 R6 K26 ; R6 := R6 + 1.000000
	175	[6370]	LOADK    	R11 := 1.000000
	176	[6370]	GETUPVAL 	R12 U2 ; R12 := U2
	177	[6370]	LEN      	R12 R12 ; R12 := # R12
	178	[6370]	LOADK    	R13 := 1.000000
	179	[6370]	FORPREP  	R11 270 ; R11 -= R13; PC := 270
	180	[6371]	GETUPVAL 	R15 U2 ; R15 := U2
	181	[6371]	GETTABLE 	R15 R15 R14 ; R15 := R15[R14]
	182	[6373]	GETUPVAL 	R16 U3 ; R16 := U3
	183	[6373]	GETTABLE 	R16 R16 K39 ; R16 := R16[0xaf1d1047]
	184	[6373]	GETTABLE 	R17 R15 K40 ; R17 := R15["radialSector"]
	185	[6373]	CALL     	R16 2 2 ; R16 := R16(R17)
	186	[6373]	TEST     	R16 0 ; if not R16 then PC := 213
	187	[6373]	JMP      	213 ; PC := 213
	188	[6373]	GETGLOBAL	R16 K41 ; R16 := mParticles
	189	[6373]	GETTABLE 	R16 R16 K42 ; R16 := R16["SentientFx"]
	190	[6373]	GETTABLE 	R16 R16 K26 ; R16 := R16[1.000000]
	191	[6373]	EQ       	1 R16 K43 ; if R16 == nil then PC := 201
	192	[6373]	JMP      	201 ; PC := 201
	193	[6373]	GETGLOBAL	R16 K1 ; R16 := 0x7b998233
	194	[6373]	GETGLOBAL	R17 K41 ; R17 := mParticles
	195	[6373]	GETTABLE 	R17 R17 K42 ; R17 := R17["SentientFx"]
	196	[6373]	GETTABLE 	R17 R17 K26 ; R17 := R17[1.000000]
	197	[6373]	GETTABLE 	R17 R17 K44 ; R17 := R17["mInstance"]
	198	[6373]	CALL     	R16 2 2 ; R16 := R16(R17)
	199	[6373]	TEST     	R16 0 ; if not R16 then PC := 213
	200	[6373]	JMP      	213 ; PC := 213
	201	[6374]	GETGLOBAL	R16 K41 ; R16 := mParticles
	202	[6374]	GETTABLE 	R16 R16 K42 ; R16 := R16["SentientFx"]
	203	[6374]	GETUPVAL 	R17 U4 ; R17 := U4
	204	[6374]	GETTABLE 	R17 R17 K45 ; R17 := R17[0x310355a7]
	205	[6374]	GETGLOBAL	R18 K2 ; R18 := 0xae91e43b
	206	[6374]	GETTABLE 	R19 R15 K46 ; R19 := R15["clipName"]
	207	[6374]	GETGLOBAL	R20 K47 ; R20 := 0x20998951
	208	[6374]	LOADK    	R21 := 0.000000
	209	[6374]	LOADK    	R22 := 0.000000
	210	[6374]	GETGLOBAL	R23 K48 ; R23 := 0x1211d00f
	211	[6374]	CALL     	R17 7 2 ; R17 := R17(R18,R19,R20,R21,R22,R23)
	212	[6374]	SETTABLE 	R16 K26 R17 ; R16[1.000000] := R17
	213	[6377]	GETGLOBAL	R16 K28 ; R16 := mRegions
	214	[6377]	GETTABLE 	R17 R15 K40 ; R17 := R15["radialSector"]
	215	[6377]	GETTABLE 	R17 R17 K49 ; R17 := R17["region"]
	216	[6377]	ADD      	R17 R17 K26 ; R17 := R17 + 1.000000
	217	[6377]	GETTABLE 	R16 R16 R17 ; R16 := R16[R17]
	218	[6378]	GETGLOBAL	R17 K27 ; R17 := mZoomedRegion
	219	[6378]	EQ       	0 R16 R17 ; if R16 ~= R17 then PC := 270
	220	[6378]	JMP      	270 ; PC := 270
	221	[6378]	GETGLOBAL	R17 K1 ; R17 := 0x7b998233
	222	[6378]	GETTABLE 	R18 R15 K50 ; R18 := R15["deco"]
	223	[6378]	CALL     	R17 2 2 ; R17 := R17(R18)
	224	[6378]	TEST     	R17 1 ; if R17 then PC := 270
	225	[6378]	JMP      	270 ; PC := 270
	226	[6378]	GETGLOBAL	R17 K1 ; R17 := 0x7b998233
	227	[6378]	GETTABLE 	R18 R15 K50 ; R18 := R15["deco"]
	228	[6378]	GETTABLE 	R18 R18 K44 ; R18 := R18["mInstance"]
	229	[6378]	CALL     	R17 2 2 ; R17 := R17(R18)
	230	[6378]	TEST     	R17 1 ; if R17 then PC := 270
	231	[6378]	JMP      	270 ; PC := 270
	232	[6379]	GETGLOBAL	R17 K7 ; R17 := mRailJack
	233	[6379]	GETTABLE 	R17 R17 K36 ; R17 := R17["uvHoles"]
	234	[6379]	LEN      	R17 R17 ; R17 := # R17
	235	[6379]	LE       	0 R6 R17 ; if R6 > R17 then PC := 270
	236	[6379]	JMP      	270 ; PC := 270
	237	[6380]	GETTABLE 	R17 R15 K50 ; R17 := R15["deco"]
	238	[6380]	GETTABLE 	R17 R17 K44 ; R17 := R17["mInstance"]
	239	[6380]	SELF     	R17 R17 K51 ; R18 := R17; R17 := R17[0x65d389cb]
	240	[6380]	CALL     	R17 2 2 ; R17 := R17(R18)
	241	[6380]	GETTABLE 	R18 R15 K50 ; R18 := R15["deco"]
	242	[6380]	GETTABLE 	R18 R18 K52 ; R18 := R18["mScale"]
	243	[6380]	DIV      	R17 R17 R18 ; R17 := R17 / R18
	244	[6381]	GETTABLE 	R18 R15 K53 ; R18 := R15["position"]
	245	[6381]	SUB      	R4 R18 R3 ; R4 := R18 - R3
	246	[6382]	GETGLOBAL	R18 K22 ; R18 := 0xc2892f65
	247	[6382]	MOVE     	R19 R4 ; R19 := R4
	248	[6382]	CALL     	R18 2 1 ; R18(R19)
	249	[6383]	GETGLOBAL	R18 K7 ; R18 := mRailJack
	250	[6383]	GETTABLE 	R18 R18 K23 ; R18 := R18[0xc95d7929]
	251	[6383]	MOVE     	R19 R3 ; R19 := R3
	252	[6383]	MOVE     	R20 R4 ; R20 := R4
	253	[6383]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	254	[6383]	MOVE     	R5 R18 ; R5 := R18
	255	[6384]	LOADK    	R18 := 1.000000
	256	[6384]	LEN      	R19 R5 ; R19 := # R5
	257	[6384]	LOADK    	R20 := 1.000000
	258	[6384]	FORPREP  	R18 268 ; R18 -= R20; PC := 268
	259	[6385]	GETGLOBAL	R22 K7 ; R22 := mRailJack
	260	[6385]	GETTABLE 	R22 R22 K24 ; R22 := R22[0xf6f3d76e]
	261	[6385]	MOVE     	R23 R5 ; R23 := R5
	262	[6385]	MOVE     	R24 R6 ; R24 := R6
	263	[6385]	MOVE     	R25 R2 ; R25 := R2
	264	[6385]	MUL      	R26 R17 K38 ; R26 := R17 * 0.050000
	265	[6385]	ADD      	R26 K54 R26 ; R26 := 0.100000 + R26
	266	[6385]	LOADK    	R27 K55 ; R27 := 0.015000
	267	[6385]	CALL     	R22 6 1 ; R22(R23,R24,R25,R26,R27)
	268	[6384]	FORLOOP  	R18 259 ; R18 += R20; if R18 <= R19 then begin PC := 259; R21 := R18 end
	269	[6387]	ADD      	R6 R6 K26 ; R6 := R6 + 1.000000
	270	[6370]	FORLOOP  	R11 180 ; R11 += R13; if R11 <= R12 then begin PC := 180; R14 := R11 end
	271	[6393]	MOVE     	R22 R6 ; R22 := R6
	272	[6393]	GETGLOBAL	R23 K7 ; R23 := mRailJack
	273	[6393]	GETTABLE 	R23 R23 K36 ; R23 := R23["uvHoles"]
	274	[6393]	LEN      	R23 R23 ; R23 := # R23
	275	[6393]	LOADK    	R24 := 1.000000
	276	[6393]	FORPREP  	R22 296 ; R22 -= R24; PC := 296
	277	[6394]	LOADK    	R26 := 1.000000
	278	[6394]	GETGLOBAL	R27 K7 ; R27 := mRailJack
	279	[6394]	GETTABLE 	R27 R27 K8 ; R27 := R27["voidDecos"]
	280	[6394]	LEN      	R27 R27 ; R27 := # R27
	281	[6394]	LOADK    	R28 := 1.000000
	282	[6394]	FORPREP  	R26 295 ; R26 -= R28; PC := 295
	283	[6395]	GETGLOBAL	R30 K7 ; R30 := mRailJack
	284	[6395]	GETTABLE 	R30 R30 K8 ; R30 := R30["voidDecos"]
	285	[6395]	GETTABLE 	R30 R30 R29 ; R30 := R30[R29]
	286	[6395]	SELF     	R30 R30 K56 ; R31 := R30; R30 := R30[0x986d2ab8]
	287	[6395]	GETGLOBAL	R32 K7 ; R32 := mRailJack
	288	[6395]	GETTABLE 	R32 R32 K36 ; R32 := R32["uvHoles"]
	289	[6395]	GETTABLE 	R32 R32 R25 ; R32 := R32[R25]
	290	[6395]	LOADK    	R33 := 0.000000
	291	[6395]	LOADK    	R34 := 0.000000
	292	[6395]	LOADK    	R35 := 0.000000
	293	[6395]	LOADK    	R36 := 0.000000
	294	[6395]	CALL     	R30 7 1 ; R30(R31,R32,R33,R34,R35,R36)
	295	[6394]	FORLOOP  	R26 283 ; R26 += R28; if R26 <= R27 then begin PC := 283; R29 := R26 end
	296	[6393]	FORLOOP  	R22 277 ; R22 += R24; if R22 <= R23 then begin PC := 277; R25 := R22 end
	297	[6401]	GETGLOBAL	R30 K1 ; R30 := 0x7b998233
	298	[6401]	GETUPVAL 	R31 U5 ; R31 := U5
	299	[6401]	CALL     	R30 2 2 ; R30 := R30(R31)
	300	[6401]	TEST     	R30 1 ; if R30 then PC := 326
	301	[6401]	JMP      	326 ; PC := 326
	302	[6402]	LOADK    	R30 := 1.000000
	303	[6402]	LOADK    	R31 := 3.000000
	304	[6402]	LOADK    	R32 := 1.000000
	305	[6402]	FORPREP  	R30 311 ; R30 -= R32; PC := 311
	306	[6403]	GETUPVAL 	R34 U6 ; R34 := U6
	307	[6403]	GETTABLE 	R34 R34 R33 ; R34 := R34[R33]
	308	[6403]	SELF     	R34 R34 K4 ; R35 := R34; R34 := R34[0xfaa69527]
	309	[6403]	MOVE     	R36 R0 ; R36 := R0
	310	[6403]	CALL     	R34 3 1 ; R34(R35,R36)
	311	[6402]	FORLOOP  	R30 306 ; R30 += R32; if R30 <= R31 then begin PC := 306; R33 := R30 end
	312	[6405]	GETUPVAL 	R34 U5 ; R34 := U5
	313	[6405]	SELF     	R34 R34 K57 ; R35 := R34; R34 := R34[0xa3927fe9]
	314	[6405]	GETGLOBAL	R36 K58 ; R36 := 0x60130201
	315	[6405]	GETUPVAL 	R37 U6 ; R37 := U6
	316	[6405]	GETTABLE 	R37 R37 K26 ; R37 := R37[1.000000]
	317	[6405]	GETTABLE 	R37 R37 K16 ; R37 := R37["mCurVal"]
	318	[6405]	GETUPVAL 	R38 U6 ; R38 := U6
	319	[6405]	GETTABLE 	R38 R38 K59 ; R38 := R38[2.000000]
	320	[6405]	GETTABLE 	R38 R38 K16 ; R38 := R38["mCurVal"]
	321	[6405]	GETUPVAL 	R39 U6 ; R39 := U6
	322	[6405]	GETTABLE 	R39 R39 K60 ; R39 := R39[3.000000]
	323	[6405]	GETTABLE 	R39 R39 K16 ; R39 := R39["mCurVal"]
	324	[6405]	CALL     	R36 4 0 ; R36,... := R36(R37,R38,R39)
	325	[6405]	CALL     	R34 0 1 ; R34(R35,...)
	326	[6408]	LOADNIL  	R34 R34 ; R34 := nil
	327	[6408]	SETGLOBALHASH	R34 K61 ; mPriorHoverNode := R34
	328	[6410]	GETGLOBAL	R34 K1 ; R34 := 0x7b998233
	329	[6410]	GETUPVAL 	R35 U7 ; R35 := U7
	330	[6410]	GETTABLE 	R35 R35 K62 ; R35 := R35["ResourceDrone"]
	331	[6410]	CALL     	R34 2 2 ; R34 := R34(R35)
	332	[6410]	TEST     	R34 1 ; if R34 then PC := 349
	333	[6410]	JMP      	349 ; PC := 349
	334	[6411]	GETUPVAL 	R34 U7 ; R34 := U7
	335	[6411]	GETTABLE 	R34 R34 K62 ; R34 := R34["ResourceDrone"]
	336	[6411]	SELF     	R34 R34 K63 ; R35 := R34; R34 := R34[0xe4162eed]
	337	[6411]	LOADK    	R36 K64 ; R36 := "IsBrowsingForDrone"
	338	[6411]	LOADK    	R37 K65 ; R37 := ""
	339	[6411]	CALL     	R34 4 2 ; R34 := R34(R35,R36,R37)
	340	[6411]	TEST     	R34 1 ; if R34 then PC := 351
	341	[6411]	JMP      	351 ; PC := 351
	342	[6411]	GETUPVAL 	R34 U7 ; R34 := U7
	343	[6411]	GETTABLE 	R34 R34 K62 ; R34 := R34["ResourceDrone"]
	344	[6411]	SELF     	R34 R34 K63 ; R35 := R34; R34 := R34[0xe4162eed]
	345	[6411]	LOADK    	R36 K66 ; R36 := "IsViewingExtractAllManifest"
	346	[6411]	LOADK    	R37 K65 ; R37 := ""
	347	[6411]	CALL     	R34 4 2 ; R34 := R34(R35,R36,R37)
	348	[6411]	JMP      	351 ; PC := 351
	349	[6411]	OP_LOADBOOL	R34 0 1 ; R34 := false; PC := 350
	350	[6411]	OP_LOADBOOL	R34 1 0 ; R34 := true
	351	[6412]	GETUPVAL 	R35 U8 ; R35 := U8
	352	[6412]	EQ       	1 R34 R35 ; if R34 == R35 then PC := 368
	353	[6412]	JMP      	368 ; PC := 368
	354	[6413]	GETGLOBAL	R35 K1 ; R35 := 0x7b998233
	355	[6413]	GETUPVAL 	R36 U9 ; R36 := U9
	356	[6413]	GETTABLE 	R36 R36 K67 ; R36 := R36["Movie"]
	357	[6413]	CALL     	R35 2 2 ; R35 := R35(R36)
	358	[6413]	TEST     	R35 1 ; if R35 then PC := 368
	359	[6413]	JMP      	368 ; PC := 368
	360	[6414]	GETUPVAL 	R35 U9 ; R35 := U9
	361	[6414]	GETTABLE 	R35 R35 K67 ; R35 := R35["Movie"]
	362	[6414]	SELF     	R35 R35 K63 ; R36 := R35; R35 := R35[0xe4162eed]
	363	[6414]	LOADK    	R37 K68 ; R37 := "ItemBrowsing"
	364	[6414]	GETGLOBAL	R38 K69 ; R38 := 0x64fb1586
	365	[6414]	MOVE     	R39 R34 ; R39 := R34
	366	[6414]	CALL     	R38 2 0 ; R38,... := R38(R39)
	367	[6414]	CALL     	R35 0 1 ; R35(R36,...)
	368	[6417]	SETUPVAL 	R34 U8 ; U8 := R34
	369	[6418]	GETGLOBAL	R35 K70 ; R35 := _T
	370	[6418]	GETTABLE 	R35 R35 K71 ; R35 := R35["HideSquadOverlay"]
	371	[6418]	EQ       	1 R35 K43 ; if R35 == nil then PC := 378
	372	[6418]	JMP      	378 ; PC := 378
	373	[6418]	GETGLOBAL	R35 K70 ; R35 := _T
	374	[6418]	GETTABLE 	R35 R35 K71 ; R35 := R35["HideSquadOverlay"]
	375	[6418]	LE       	1 R35 K72 ; if R35 <= 0.000000 then PC := 378
	376	[6418]	JMP      	378 ; PC := 378
	377	[6418]	OP_LOADBOOL	R35 0 1 ; R35 := false; PC := 378
	378	[6418]	OP_LOADBOOL	R35 1 0 ; R35 := true
	379	[6419]	GETGLOBAL	R36 K2 ; R36 := 0xae91e43b
	380	[6419]	SELF     	R36 R36 K73 ; R37 := R36; R36 := R36[0x368ad758]
	381	[6419]	GETUPVAL 	R38 U8 ; R38 := U8
	382	[6419]	TEST     	R38 1 ; if R38 then PC := 402
	383	[6419]	JMP      	402 ; PC := 402
	384	[6419]	GETUPVAL 	R38 U9 ; R38 := U9
	385	[6419]	GETTABLE 	R38 R38 K74 ; R38 := R38["DioOpen"]
	386	[6419]	TEST     	R38 1 ; if R38 then PC := 402
	387	[6419]	JMP      	402 ; PC := 402
	388	[6419]	GETGLOBAL	R38 K70 ; R38 := _T
	389	[6419]	GETTABLE 	R38 R38 K75 ; R38 := R38["BackgroundVisible"]
	390	[6419]	TEST     	R38 1 ; if R38 then PC := 402
	391	[6419]	JMP      	402 ; PC := 402
	392	[6419]	GETGLOBAL	R38 K70 ; R38 := _T
	393	[6419]	GETTABLE 	R38 R38 K76 ; R38 := R38["HideMapRedux"]
	394	[6419]	EQ       	1 R38 K43 ; if R38 == nil then PC := 400
	395	[6419]	JMP      	400 ; PC := 400
	396	[6419]	GETGLOBAL	R38 K70 ; R38 := _T
	397	[6419]	GETTABLE 	R38 R38 K76 ; R38 := R38["HideMapRedux"]
	398	[6419]	EQ       	0 R38 K72 ; if R38 ~= 0.000000 then PC := 402
	399	[6419]	JMP      	402 ; PC := 402
	400	[6419]	MOVE     	R38 R35 ; R38 := R35
	401	[6419]	JMP      	404 ; PC := 404
	402	[6419]	OP_LOADBOOL	R38 0 1 ; R38 := false; PC := 403
	403	[6419]	OP_LOADBOOL	R38 1 0 ; R38 := true
	404	[6419]	CALL     	R36 3 1 ; R36(R37,R38)
	405	[6421]	GETUPVAL 	R36 U10 ; R36 := U10
	406	[6421]	CALL     	R36 1 1 ; R36()
	407	[6423]	GETGLOBAL	R36 K77 ; R36 := mInputBlocked
	408	[6423]	TEST     	R36 1 ; if R36 then PC := 551
	409	[6423]	JMP      	551 ; PC := 551
	410	[6423]	GETGLOBAL	R36 K7 ; R36 := mRailJack
	411	[6423]	GETTABLE 	R36 R36 K78 ; R36 := R36["NameNodeMapRebuildQueued"]
	412	[6423]	TEST     	R36 1 ; if R36 then PC := 551
	413	[6423]	JMP      	551 ; PC := 551
	414	[6424]	GETGLOBAL	R36 K70 ; R36 := _T
	415	[6424]	GETTABLE 	R36 R36 K79 ; R36 := R36["DesiredGoToNode"]
	416	[6424]	TEST     	R36 0 ; if not R36 then PC := 508
	417	[6424]	JMP      	508 ; PC := 508
	418	[6425]	GETGLOBAL	R36 K80 ; R36 := 0x0469f296
	419	[6425]	GETGLOBAL	R37 K70 ; R37 := _T
	420	[6425]	GETTABLE 	R37 R37 K79 ; R37 := R37["DesiredGoToNode"]
	421	[6425]	CALL     	R36 2 2 ; R36 := R36(R37)
	422	[6426]	GETUPVAL 	R37 U11 ; R37 := U11
	423	[6426]	GETGLOBAL	R38 K69 ; R38 := 0x64fb1586
	424	[6426]	MOVE     	R39 R36 ; R39 := R36
	425	[6426]	CALL     	R38 2 2 ; R38 := R38(R39)
	426	[6426]	GETTABLE 	R37 R37 R38 ; R37 := R37[R38]
	427	[6440]	CLOSURE  	R38 0 ; R38 := closure(Function #1)
	428	[6440]	MOVE     	R0 R37 ; R0 := R37
	429	[6440]	GETUPVAL 	R0 U12 ; R0 := U12
	430	[6440]	GETUPVAL 	R0 U13 ; R0 := U13
	431	[6440]	GETUPVAL 	R0 U14 ; R0 := U14
	432	[6440]	GETUPVAL 	R0 U15 ; R0 := U15
	433	[6440]	GETUPVAL 	R0 U0 ; R0 := U0
	434	[6442]	TEST     	R37 0 ; if not R37 then PC := 464
	435	[6442]	JMP      	464 ; PC := 464
	436	[6443]	GETGLOBAL	R39 K28 ; R39 := mRegions
	437	[6443]	GETTABLE 	R40 R37 K40 ; R40 := R37["radialSector"]
	438	[6443]	GETTABLE 	R40 R40 K49 ; R40 := R40["region"]
	439	[6443]	ADD      	R40 R40 K26 ; R40 := R40 + 1.000000
	440	[6443]	GETTABLE 	R39 R39 R40 ; R39 := R39[R40]
	441	[6444]	GETUPVAL 	R40 U16 ; R40 := U16
	442	[6444]	GETTABLE 	R41 R37 K40 ; R41 := R37["radialSector"]
	443	[6444]	GETTABLE 	R41 R41 K49 ; R41 := R41["region"]
	444	[6444]	ADD      	R41 R41 K26 ; R41 := R41 + 1.000000
	445	[6444]	GETTABLE 	R40 R40 R41 ; R40 := R40[R41]
	446	[6444]	TEST     	R40 0 ; if not R40 then PC := 451
	447	[6444]	JMP      	451 ; PC := 451
	448	[6445]	MOVE     	R40 R38 ; R40 := R38
	449	[6445]	CALL     	R40 1 1 ; R40()
	450	[6445]	JMP      	504 ; PC := 504
	451	[6446]	GETGLOBAL	R40 K27 ; R40 := mZoomedRegion
	452	[6446]	TEST     	R40 0 ; if not R40 then PC := 459
	453	[6446]	JMP      	459 ; PC := 459
	454	[6447]	GETUPVAL 	R40 U17 ; R40 := U17
	455	[6447]	MOVE     	R41 R39 ; R41 := R39
	456	[6447]	MOVE     	R42 R38 ; R42 := R38
	457	[6447]	CALL     	R40 3 1 ; R40(R41,R42)
	458	[6447]	JMP      	504 ; PC := 504
	459	[6449]	GETUPVAL 	R40 U18 ; R40 := U18
	460	[6449]	MOVE     	R41 R39 ; R41 := R39
	461	[6449]	MOVE     	R42 R38 ; R42 := R38
	462	[6449]	CALL     	R40 3 1 ; R40(R41,R42)
	463	[6450]	JMP      	504 ; PC := 504
	464	[6451]	GETGLOBAL	R40 K7 ; R40 := mRailJack
	465	[6451]	GETTABLE 	R40 R40 K81 ; R40 := R40["Active"]
	466	[6451]	TEST     	R40 1 ; if R40 then PC := 486
	467	[6451]	JMP      	486 ; PC := 486
	468	[6451]	GETUPVAL 	R40 U19 ; R40 := U19
	469	[6451]	GETTABLE 	R40 R40 K82 ; R40 := R40["SANCTUARY_ONSLAUGHT_NODE"]
	470	[6451]	EQ       	1 R36 R40 ; if R36 == R40 then PC := 476
	471	[6451]	JMP      	476 ; PC := 476
	472	[6451]	GETUPVAL 	R40 U19 ; R40 := U19
	473	[6451]	GETTABLE 	R40 R40 K83 ; R40 := R40["SANCTUARY_ONSLAUGHT_CHALLENGE_NODE"]
	474	[6451]	EQ       	0 R36 R40 ; if R36 ~= R40 then PC := 486
	475	[6451]	JMP      	486 ; PC := 486
	476	[6452]	GETUPVAL 	R40 U19 ; R40 := U19
	477	[6452]	GETTABLE 	R40 R40 K84 ; R40 := R40[0x39db3911]
	478	[6452]	GETUPVAL 	R41 U19 ; R41 := U19
	479	[6452]	GETTABLE 	R41 R41 K83 ; R41 := R41["SANCTUARY_ONSLAUGHT_CHALLENGE_NODE"]
	480	[6452]	EQ       	1 R36 R41 ; if R36 == R41 then PC := 483
	481	[6452]	JMP      	483 ; PC := 483
	482	[6452]	OP_LOADBOOL	R41 0 1 ; R41 := false; PC := 483
	483	[6452]	OP_LOADBOOL	R41 1 0 ; R41 := true
	484	[6452]	CALL     	R40 2 1 ; R40(R41)
	485	[6452]	JMP      	504 ; PC := 504
	486	[6453]	GETGLOBAL	R40 K31 ; R40 := 0x7f5022cf
	487	[6453]	GETTABLE 	R40 R40 K32 ; R40 := R40[0xa5c556b9]
	488	[6453]	GETGLOBAL	R41 K70 ; R41 := _T
	489	[6453]	GETTABLE 	R41 R41 K79 ; R41 := R41["DesiredGoToNode"]
	490	[6453]	LOADK    	R42 K85 ; R42 := "CrewBattle"
	491	[6453]	CALL     	R40 3 2 ; R40 := R40(R41,R42)
	492	[6453]	TEST     	R40 0 ; if not R40 then PC := 504
	493	[6453]	JMP      	504 ; PC := 504
	494	[6453]	GETGLOBAL	R40 K7 ; R40 := mRailJack
	495	[6453]	GETTABLE 	R40 R40 K81 ; R40 := R40["Active"]
	496	[6453]	TEST     	R40 1 ; if R40 then PC := 504
	497	[6453]	JMP      	504 ; PC := 504
	498	[6454]	GETGLOBAL	R40 K2 ; R40 := 0xae91e43b
	499	[6454]	SELF     	R40 R40 K63 ; R41 := R40; R40 := R40[0xe4162eed]
	500	[6454]	LOADK    	R42 K86 ; R42 := "ToggleRailJack"
	501	[6454]	LOADK    	R43 K65 ; R43 := ""
	502	[6454]	CALL     	R40 4 1 ; R40(R41,R42,R43)
	503	[6455]	RETURN   	R0 1 ; return 
	504	[6457]	GETGLOBAL	R40 K70 ; R40 := _T
	505	[6457]	SETTABLE 	R40 K79 K43 ; R40["DesiredGoToNode"] := nil
	506	[6457]	CLOSE    	R36 ; SAVE R36,...
	507	[6457]	JMP      	551 ; PC := 551
	508	[6458]	GETGLOBAL	R36 K70 ; R36 := _T
	509	[6458]	GETTABLE 	R36 R36 K87 ; R36 := R36["DesiredGoToRegion"]
	510	[6458]	TEST     	R36 0 ; if not R36 then PC := 551
	511	[6458]	JMP      	551 ; PC := 551
	512	[6459]	GETUPVAL 	R36 U16 ; R36 := U16
	513	[6459]	GETGLOBAL	R37 K70 ; R37 := _T
	514	[6459]	GETTABLE 	R37 R37 K87 ; R37 := R37["DesiredGoToRegion"]
	515	[6459]	GETTABLE 	R36 R36 R37 ; R36 := R36[R37]
	516	[6459]	EQ       	1 R36 K88 ; if R36 == true then PC := 530
	517	[6459]	JMP      	530 ; PC := 530
	518	[6459]	GETGLOBAL	R36 K7 ; R36 := mRailJack
	519	[6459]	GETTABLE 	R36 R36 K81 ; R36 := R36["Active"]
	520	[6459]	TEST     	R36 0 ; if not R36 then PC := 531
	521	[6459]	JMP      	531 ; PC := 531
	522	[6459]	GETGLOBAL	R36 K7 ; R36 := mRailJack
	523	[6459]	GETTABLE 	R36 R36 K89 ; R36 := R36["Regions"]
	524	[6459]	GETGLOBAL	R37 K70 ; R37 := _T
	525	[6459]	GETTABLE 	R37 R37 K87 ; R37 := R37["DesiredGoToRegion"]
	526	[6459]	GETTABLE 	R36 R36 R37 ; R36 := R36[R37]
	527	[6459]	NOT      	R36 R36 ; R36 := not R36
	528	[6459]	JMP      	531 ; PC := 531
	529	[6459]	OP_LOADBOOL	R36 0 1 ; R36 := false; PC := 530
	530	[6459]	OP_LOADBOOL	R36 1 0 ; R36 := true
	531	[6460]	TEST     	R36 1 ; if R36 then PC := 549
	532	[6460]	JMP      	549 ; PC := 549
	533	[6461]	GETGLOBAL	R37 K27 ; R37 := mZoomedRegion
	534	[6461]	TEST     	R37 0 ; if not R37 then PC := 543
	535	[6461]	JMP      	543 ; PC := 543
	536	[6462]	GETUPVAL 	R37 U17 ; R37 := U17
	537	[6462]	GETGLOBAL	R38 K28 ; R38 := mRegions
	538	[6462]	GETGLOBAL	R39 K70 ; R39 := _T
	539	[6462]	GETTABLE 	R39 R39 K87 ; R39 := R39["DesiredGoToRegion"]
	540	[6462]	GETTABLE 	R38 R38 R39 ; R38 := R38[R39]
	541	[6462]	CALL     	R37 2 1 ; R37(R38)
	542	[6462]	JMP      	549 ; PC := 549
	543	[6464]	GETUPVAL 	R37 U18 ; R37 := U18
	544	[6464]	GETGLOBAL	R38 K28 ; R38 := mRegions
	545	[6464]	GETGLOBAL	R39 K70 ; R39 := _T
	546	[6464]	GETTABLE 	R39 R39 K87 ; R39 := R39["DesiredGoToRegion"]
	547	[6464]	GETTABLE 	R38 R38 R39 ; R38 := R38[R39]
	548	[6464]	CALL     	R37 2 1 ; R37(R38)
	549	[6467]	GETGLOBAL	R37 K70 ; R37 := _T
	550	[6467]	SETTABLE 	R37 K87 K43 ; R37["DesiredGoToRegion"] := nil
	551	[6471]	GETUPVAL 	R37 U20 ; R37 := U20
	552	[6471]	CALL     	R37 1 1 ; R37()
	553	[6473]	GETGLOBAL	R37 K1 ; R37 := 0x7b998233
	554	[6473]	GETGLOBAL	R38 K48 ; R38 := 0x1211d00f
	555	[6473]	CALL     	R37 2 2 ; R37 := R37(R38)
	556	[6473]	TEST     	R37 0 ; if not R37 then PC := 559
	557	[6473]	JMP      	559 ; PC := 559
	558	[6474]	RETURN   	R0 1 ; return 
	559	[6477]	GETUPVAL 	R37 U21 ; R37 := U21
	560	[6477]	CALL     	R37 1 1 ; R37()
	561	[6478]	GETUPVAL 	R37 U22 ; R37 := U22
	562	[6478]	CALL     	R37 1 1 ; R37()
	563	[6479]	GETUPVAL 	R37 U23 ; R37 := U23
	564	[6479]	CALL     	R37 1 1 ; R37()
	565	[6481]	GETUPVAL 	R37 U24 ; R37 := U24
	566	[6481]	CALL     	R37 1 1 ; R37()
	567	[6483]	GETGLOBAL	R37 K1 ; R37 := 0x7b998233
	568	[6483]	GETGLOBAL	R38 K7 ; R38 := mRailJack
	569	[6483]	GETTABLE 	R38 R38 K90 ; R38 := R38["Button"]
	570	[6483]	CALL     	R37 2 2 ; R37 := R37(R38)
	571	[6483]	TEST     	R37 1 ; if R37 then PC := 578
	572	[6483]	JMP      	578 ; PC := 578
	573	[6484]	GETGLOBAL	R37 K7 ; R37 := mRailJack
	574	[6484]	GETTABLE 	R37 R37 K90 ; R37 := R37["Button"]
	575	[6484]	SELF     	R37 R37 K4 ; R38 := R37; R37 := R37[0xfaa69527]
	576	[6484]	MOVE     	R39 R0 ; R39 := R0
	577	[6484]	CALL     	R37 3 1 ; R37(R38,R39)
	578	[6487]	GETGLOBAL	R37 K70 ; R37 := _T
	579	[6487]	GETTABLE 	R37 R37 K91 ; R37 := R37["WareframeChallenge"]
	580	[6487]	TEST     	R37 0 ; if not R37 then PC := 584
	581	[6487]	JMP      	584 ; PC := 584
	582	[6488]	GETUPVAL 	R37 U25 ; R37 := U25
	583	[6488]	CALL     	R37 1 1 ; R37()
	584	[6491]	GETGLOBAL	R37 K92 ; R37 := mConfirmSoloMissionQueued
	585	[6491]	TEST     	R37 0 ; if not R37 then PC := 596
	586	[6491]	JMP      	596 ; PC := 596
	587	[6492]	GETUPVAL 	R37 U7 ; R37 := U7
	588	[6492]	GETUPVAL 	R38 U4 ; R38 := U4
	589	[6492]	GETTABLE 	R38 R38 K94 ; R38 := R38[0xdedfded7]
	590	[6492]	LOADK    	R39 K95 ; R39 := "/Lotus/Language/Menu/SoloModeRequired"
	591	[6492]	LOADK    	R40 K96 ; R40 := "ConfirmSoloMission"
	592	[6492]	CALL     	R38 3 2 ; R38 := R38(R39,R40)
	593	[6492]	SETTABLE 	R37 K93 R38 ; R37["SoloMission"] := R38
	594	[6493]	OP_LOADBOOL	R37 0 0 ; R37 := false
	595	[6493]	SETGLOBALHASH	R37 K92 ; mConfirmSoloMissionQueued := R37
	596	[6496]	GETGLOBAL	R37 K1 ; R37 := 0x7b998233
	597	[6496]	GETUPVAL 	R38 U26 ; R38 := U26
	598	[6496]	CALL     	R37 2 2 ; R37 := R37(R38)
	599	[6496]	TEST     	R37 1 ; if R37 then PC := 749
	600	[6496]	JMP      	749 ; PC := 749
	601	[6496]	GETGLOBAL	R37 K1 ; R37 := 0x7b998233
	602	[6496]	GETGLOBAL	R38 K27 ; R38 := mZoomedRegion
	603	[6496]	CALL     	R37 2 2 ; R37 := R37(R38)
	604	[6496]	TEST     	R37 1 ; if R37 then PC := 749
	605	[6496]	JMP      	749 ; PC := 749
	606	[6496]	GETGLOBAL	R37 K1 ; R37 := 0x7b998233
	607	[6496]	GETGLOBAL	R38 K27 ; R38 := mZoomedRegion
	608	[6496]	GETTABLE 	R38 R38 K97 ; R38 := R38["instance"]
	609	[6496]	CALL     	R37 2 2 ; R37 := R37(R38)
	610	[6496]	TEST     	R37 1 ; if R37 then PC := 749
	611	[6496]	JMP      	749 ; PC := 749
	612	[6496]	GETGLOBAL	R37 K1 ; R37 := 0x7b998233
	613	[6496]	GETUPVAL 	R38 U1 ; R38 := U1
	614	[6496]	GETTABLE 	R38 R38 K98 ; R38 := R38["cameraSpot"]
	615	[6496]	CALL     	R37 2 2 ; R37 := R37(R38)
	616	[6496]	TEST     	R37 1 ; if R37 then PC := 749
	617	[6496]	JMP      	749 ; PC := 749
	618	[6497]	GETGLOBAL	R37 K99 ; R37 := 0x67652851
	619	[6497]	CALL     	R37 1 2 ; R37 := R37()
	620	[6498]	GETUPVAL 	R38 U26 ; R38 := U26
	621	[6498]	SELF     	R38 R38 K100 ; R39 := R38; R38 := R38[0xcb3851b8]
	622	[6498]	CALL     	R38 2 2 ; R38 := R38(R39)
	623	[6500]	GETTABLE 	R39 R38 K101 ; R39 := R38["heading"]
	624	[6500]	UNM      	R39 R39 ; R39 := ^ R39
	625	[6500]	SETTABLE 	R38 K101 R39 ; R38["heading"] := R39
	626	[6501]	GETTABLE 	R39 R38 K102 ; R39 := R38["pitch"]
	627	[6501]	UNM      	R39 R39 ; R39 := ^ R39
	628	[6501]	SETTABLE 	R38 K102 R39 ; R38["pitch"] := R39
	629	[6503]	GETGLOBAL	R39 K27 ; R39 := mZoomedRegion
	630	[6503]	GETTABLE 	R39 R39 K97 ; R39 := R39["instance"]
	631	[6503]	SELF     	R39 R39 K20 ; R40 := R39; R39 := R39[0xd1586535]
	632	[6503]	CALL     	R39 2 2 ; R39 := R39(R40)
	633	[6504]	GETGLOBAL	R40 K103 ; R40 := 0x808dc004
	634	[6504]	MOVE     	R41 R39 ; R41 := R39
	635	[6504]	MOVE     	R42 R39 ; R42 := R39
	636	[6504]	GETUPVAL 	R43 U27 ; R43 := U27
	637	[6504]	GETTABLE 	R43 R43 K104 ; R43 := R43["CAMERA_OFFSET"]
	638	[6504]	CALL     	R40 4 1 ; R40(R41,R42,R43)
	639	[6506]	GETGLOBAL	R40 K2 ; R40 := 0xae91e43b
	640	[6506]	SELF     	R40 R40 K105 ; R41 := R40; R40 := R40[0x906faf80]
	641	[6506]	CALL     	R40 2 2 ; R40 := R40(R41)
	642	[6506]	GETGLOBAL	R41 K2 ; R41 := 0xae91e43b
	643	[6506]	SELF     	R41 R41 K106 ; R42 := R41; R41 := R41[0x6b837788]
	644	[6506]	CALL     	R41 2 2 ; R41 := R41(R42)
	645	[6506]	DIV      	R40 R40 R41 ; R40 := R40 / R41
	646	[6507]	GETGLOBAL	R41 K2 ; R41 := 0xae91e43b
	647	[6507]	SELF     	R41 R41 K107 ; R42 := R41; R41 := R41[0x916fb113]
	648	[6507]	CALL     	R41 2 2 ; R41 := R41(R42)
	649	[6507]	GETGLOBAL	R42 K2 ; R42 := 0xae91e43b
	650	[6507]	SELF     	R42 R42 K108 ; R43 := R42; R42 := R42[0xaf9fda9f]
	651	[6507]	CALL     	R42 2 2 ; R42 := R42(R43)
	652	[6507]	DIV      	R41 R41 R42 ; R41 := R41 / R42
	653	[6509]	GETTABLE 	R42 R39 K109 ; R42 := R39["x"]
	654	[6509]	MUL      	R43 R40 K59 ; R43 := R40 * 2.000000
	655	[6509]	SUB      	R43 R43 K26 ; R43 := R43 - 1.000000
	656	[6509]	GETGLOBAL	R44 K110 ; R44 := 0x5bced4c4
	657	[6509]	GETTABLE 	R44 R44 K111 ; R44 := R44[0xd8da5899]
	658	[6509]	LOADK    	R45 K112 ; R45 := 0.698132
	659	[6509]	CALL     	R44 2 2 ; R44 := R44(R45)
	660	[6509]	MUL      	R43 R43 R44 ; R43 := R43 * R44
	661	[6509]	MUL      	R43 R43 K113 ; R43 := R43 * 1.500000
	662	[6509]	ADD      	R42 R42 R43 ; R42 := R42 + R43
	663	[6509]	SETTABLE 	R39 K109 R42 ; R39["x"] := R42
	664	[6510]	GETTABLE 	R42 R39 K114 ; R42 := R39["y"]
	665	[6510]	MUL      	R43 R41 K59 ; R43 := R41 * 2.000000
	666	[6510]	SUB      	R43 R43 K26 ; R43 := R43 - 1.000000
	667	[6510]	UNM      	R43 R43 ; R43 := ^ R43
	668	[6510]	MUL      	R43 R43 K115 ; R43 := R43 * 0.750000
	669	[6510]	ADD      	R42 R42 R43 ; R42 := R42 + R43
	670	[6510]	SETTABLE 	R39 K114 R42 ; R39["y"] := R42
	671	[6517]	GETGLOBAL	R42 K116 ; R42 := 0x83ddcc65
	672	[6517]	MOVE     	R43 R39 ; R43 := R39
	673	[6517]	MOVE     	R44 R39 ; R44 := R39
	674	[6517]	GETUPVAL 	R45 U26 ; R45 := U26
	675	[6517]	SELF     	R45 R45 K117 ; R46 := R45; R45 := R45[0x003c792f]
	676	[6517]	GETUPVAL 	R47 U28 ; R47 := U28
	677	[6517]	GETTABLE 	R47 R47 K118 ; R47 := R47["GAME_C1_HEAD1"]
	678	[6517]	CALL     	R45 3 0 ; R45,... := R45(R46,R47)
	679	[6517]	CALL     	R42 0 1 ; R42(R43,...)
	680	[6518]	GETGLOBAL	R42 K103 ; R42 := 0x808dc004
	681	[6518]	MOVE     	R43 R39 ; R43 := R39
	682	[6518]	MOVE     	R44 R39 ; R44 := R39
	683	[6518]	GETUPVAL 	R45 U1 ; R45 := U1
	684	[6518]	GETTABLE 	R45 R45 K119 ; R45 := R45["skyOrigin"]
	685	[6518]	CALL     	R42 4 1 ; R42(R43,R44,R45)
	686	[6519]	GETUPVAL 	R42 U1 ; R42 := U1
	687	[6519]	GETTABLE 	R42 R42 K98 ; R42 := R42["cameraSpot"]
	688	[6519]	SELF     	R42 R42 K20 ; R43 := R42; R42 := R42[0xd1586535]
	689	[6519]	CALL     	R42 2 2 ; R42 := R42(R43)
	690	[6520]	GETUPVAL 	R43 U29 ; R43 := U29
	691	[6520]	GETTABLE 	R44 R42 K120 ; R44 := R42["z"]
	692	[6520]	CALL     	R43 2 1 ; R43(R44)
	693	[6521]	SETTABLE 	R42 K120 K121 ; R42["z"] := -1.000000
	694	[6522]	GETGLOBAL	R43 K116 ; R43 := 0x83ddcc65
	695	[6522]	MOVE     	R44 R39 ; R44 := R39
	696	[6522]	MOVE     	R45 R39 ; R45 := R39
	697	[6522]	MOVE     	R46 R42 ; R46 := R42
	698	[6522]	CALL     	R43 4 1 ; R43(R44,R45,R46)
	699	[6524]	GETGLOBAL	R43 K122 ; R43 := 0x492c7f2a
	700	[6524]	MOVE     	R44 R39 ; R44 := R39
	701	[6524]	MOVE     	R45 R38 ; R45 := R38
	702	[6524]	CALL     	R43 3 2 ; R43 := R43(R44,R45)
	703	[6526]	GETGLOBAL	R44 K123 ; R44 := 0x20b7f774
	704	[6526]	GETGLOBAL	R45 K124 ; R45 := ZERO_VECTOR
	705	[6526]	MOVE     	R46 R43 ; R46 := R43
	706	[6526]	CALL     	R44 3 2 ; R44 := R44(R45,R46)
	707	[6528]	GETGLOBAL	R45 K14 ; R45 := 0x42dcc9f5
	708	[6528]	GETTABLE 	R46 R44 K101 ; R46 := R44["heading"]
	709	[6528]	LOADK    	R47 := -45.000000
	710	[6528]	LOADK    	R48 := 45.000000
	711	[6528]	CALL     	R45 4 2 ; R45 := R45(R46,R47,R48)
	712	[6528]	SETTABLE 	R44 K101 R45 ; R44["heading"] := R45
	713	[6529]	GETGLOBAL	R45 K14 ; R45 := 0x42dcc9f5
	714	[6529]	GETTABLE 	R46 R44 K102 ; R46 := R44["pitch"]
	715	[6529]	LOADK    	R47 := -35.000000
	716	[6529]	LOADK    	R48 := 35.000000
	717	[6529]	CALL     	R45 4 2 ; R45 := R45(R46,R47,R48)
	718	[6529]	SETTABLE 	R44 K102 R45 ; R44["pitch"] := R45
	719	[6530]	SETTABLE 	R44 K125 K72 ; R44["bank"] := 0.000000
	720	[6532]	GETUPVAL 	R45 U30 ; R45 := U30
	721	[6532]	SELF     	R45 R45 K126 ; R46 := R45; R45 := R45[0x188e2bee]
	722	[6532]	GETTABLE 	R47 R44 K101 ; R47 := R44["heading"]
	723	[6532]	CALL     	R45 3 1 ; R45(R46,R47)
	724	[6533]	GETUPVAL 	R45 U31 ; R45 := U31
	725	[6533]	SELF     	R45 R45 K126 ; R46 := R45; R45 := R45[0x188e2bee]
	726	[6533]	GETTABLE 	R47 R44 K102 ; R47 := R44["pitch"]
	727	[6533]	CALL     	R45 3 1 ; R45(R46,R47)
	728	[6534]	GETUPVAL 	R45 U30 ; R45 := U30
	729	[6534]	SELF     	R45 R45 K4 ; R46 := R45; R45 := R45[0xfaa69527]
	730	[6534]	MOVE     	R47 R37 ; R47 := R37
	731	[6534]	CALL     	R45 3 1 ; R45(R46,R47)
	732	[6535]	GETUPVAL 	R45 U31 ; R45 := U31
	733	[6535]	SELF     	R45 R45 K4 ; R46 := R45; R45 := R45[0xfaa69527]
	734	[6535]	MOVE     	R47 R37 ; R47 := R37
	735	[6535]	CALL     	R45 3 1 ; R45(R46,R47)
	736	[6536]	GETUPVAL 	R45 U30 ; R45 := U30
	737	[6536]	GETTABLE 	R45 R45 K16 ; R45 := R45["mCurVal"]
	738	[6536]	SETTABLE 	R44 K101 R45 ; R44["heading"] := R45
	739	[6537]	GETUPVAL 	R45 U31 ; R45 := U31
	740	[6537]	GETTABLE 	R45 R45 K16 ; R45 := R45["mCurVal"]
	741	[6537]	SETTABLE 	R44 K102 R45 ; R44["pitch"] := R45
	742	[6539]	GETUPVAL 	R45 U26 ; R45 := U26
	743	[6539]	SELF     	R45 R45 K127 ; R46 := R45; R45 := R45[0xb63fc1d8]
	744	[6539]	GETUPVAL 	R47 U28 ; R47 := U28
	745	[6539]	GETTABLE 	R47 R47 K118 ; R47 := R47["GAME_C1_HEAD1"]
	746	[6539]	MOVE     	R48 R44 ; R48 := R44
	747	[6539]	CALL     	R45 4 1 ; R45(R46,R47,R48)
	748	[6539]	JMP      	760 ; PC := 760
	749	[6540]	GETGLOBAL	R45 K1 ; R45 := 0x7b998233
	750	[6540]	GETUPVAL 	R46 U26 ; R46 := U26
	751	[6540]	CALL     	R45 2 2 ; R45 := R45(R46)
	752	[6540]	TEST     	R45 1 ; if R45 then PC := 760
	753	[6540]	JMP      	760 ; PC := 760
	754	[6541]	GETUPVAL 	R45 U26 ; R45 := U26
	755	[6541]	SELF     	R45 R45 K127 ; R46 := R45; R45 := R45[0xb63fc1d8]
	756	[6541]	GETUPVAL 	R47 U28 ; R47 := U28
	757	[6541]	GETTABLE 	R47 R47 K118 ; R47 := R47["GAME_C1_HEAD1"]
	758	[6541]	GETGLOBAL	R48 K128 ; R48 := ZERO_ROTATION
	759	[6541]	CALL     	R45 4 1 ; R45(R46,R47,R48)
	760	[6544]	GETGLOBAL	R45 K70 ; R45 := _T
	761	[6544]	GETTABLE 	R45 R45 K129 ; R45 := R45["SquadCountdownTimer"]
	762	[6544]	EQ       	1 R45 K43 ; if R45 == nil then PC := 873
	763	[6544]	JMP      	873 ; PC := 873
	764	[6545]	GETGLOBAL	R45 K70 ; R45 := _T
	765	[6545]	GETTABLE 	R45 R45 K130 ; R45 := R45["gPendingMission"]
	766	[6545]	EQ       	1 R45 K43 ; if R45 == nil then PC := 798
	767	[6545]	JMP      	798 ; PC := 798
	768	[6546]	GETGLOBAL	R45 K131 ; R45 := mCountDown
	769	[6546]	GETTABLE 	R45 R45 K132 ; R45 := R45["Node"]
	770	[6546]	EQ       	1 R45 K43 ; if R45 == nil then PC := 780
	771	[6546]	JMP      	780 ; PC := 780
	772	[6546]	GETGLOBAL	R45 K131 ; R45 := mCountDown
	773	[6546]	GETTABLE 	R45 R45 K132 ; R45 := R45["Node"]
	774	[6546]	GETTABLE 	R45 R45 K33 ; R45 := R45["name"]
	775	[6546]	GETGLOBAL	R46 K70 ; R46 := _T
	776	[6546]	GETTABLE 	R46 R46 K130 ; R46 := R46["gPendingMission"]
	777	[6546]	GETTABLE 	R46 R46 K133 ; R46 := R46["baseNodeName"]
	778	[6546]	EQ       	1 R45 R46 ; if R45 == R46 then PC := 798
	779	[6546]	JMP      	798 ; PC := 798
	780	[6547]	GETUPVAL 	R45 U11 ; R45 := U11
	781	[6547]	GETGLOBAL	R46 K69 ; R46 := 0x64fb1586
	782	[6547]	GETGLOBAL	R47 K70 ; R47 := _T
	783	[6547]	GETTABLE 	R47 R47 K130 ; R47 := R47["gPendingMission"]
	784	[6547]	GETTABLE 	R47 R47 K133 ; R47 := R47["baseNodeName"]
	785	[6547]	CALL     	R46 2 2 ; R46 := R46(R47)
	786	[6547]	GETTABLE 	R45 R45 R46 ; R45 := R45[R46]
	787	[6547]	EQ       	1 R45 K43 ; if R45 == nil then PC := 798
	788	[6547]	JMP      	798 ; PC := 798
	789	[6548]	GETGLOBAL	R45 K131 ; R45 := mCountDown
	790	[6548]	GETUPVAL 	R46 U11 ; R46 := U11
	791	[6548]	GETGLOBAL	R47 K69 ; R47 := 0x64fb1586
	792	[6548]	GETGLOBAL	R48 K70 ; R48 := _T
	793	[6548]	GETTABLE 	R48 R48 K130 ; R48 := R48["gPendingMission"]
	794	[6548]	GETTABLE 	R48 R48 K133 ; R48 := R48["baseNodeName"]
	795	[6548]	CALL     	R47 2 2 ; R47 := R47(R48)
	796	[6548]	GETTABLE 	R46 R46 R47 ; R46 := R46[R47]
	797	[6548]	SETTABLE 	R45 K132 R46 ; R45[0x64989775] := R46
	798	[6551]	GETGLOBAL	R45 K131 ; R45 := mCountDown
	799	[6551]	GETTABLE 	R45 R45 K132 ; R45 := R45["Node"]
	800	[6551]	EQ       	1 R45 K43 ; if R45 == nil then PC := 873
	801	[6551]	JMP      	873 ; PC := 873
	802	[6551]	GETGLOBAL	R45 K131 ; R45 := mCountDown
	803	[6551]	GETTABLE 	R45 R45 K134 ; R45 := R45["Timer"]
	804	[6551]	GETGLOBAL	R46 K70 ; R46 := _T
	805	[6551]	GETTABLE 	R46 R46 K129 ; R46 := R46["SquadCountdownTimer"]
	806	[6551]	EQ       	1 R45 R46 ; if R45 == R46 then PC := 873
	807	[6551]	JMP      	873 ; PC := 873
	808	[6552]	LOADK    	R45 := -1.000000
	809	[6553]	GETGLOBAL	R46 K131 ; R46 := mCountDown
	810	[6553]	GETTABLE 	R46 R46 K134 ; R46 := R46["Timer"]
	811	[6553]	EQ       	1 R46 K43 ; if R46 == nil then PC := 819
	812	[6553]	JMP      	819 ; PC := 819
	813	[6554]	GETGLOBAL	R46 K110 ; R46 := 0x5bced4c4
	814	[6554]	GETTABLE 	R46 R46 K135 ; R46 := R46[0x99675e23]
	815	[6554]	GETGLOBAL	R47 K131 ; R47 := mCountDown
	816	[6554]	GETTABLE 	R47 R47 K134 ; R47 := R47["Timer"]
	817	[6554]	CALL     	R46 2 2 ; R46 := R46(R47)
	818	[6554]	MOVE     	R45 R46 ; R45 := R46
	819	[6556]	GETGLOBAL	R46 K131 ; R46 := mCountDown
	820	[6556]	GETGLOBAL	R47 K70 ; R47 := _T
	821	[6556]	GETTABLE 	R47 R47 K129 ; R47 := R47["SquadCountdownTimer"]
	822	[6556]	SETTABLE 	R46 K134 R47 ; R46["Timer"] := R47
	823	[6557]	GETGLOBAL	R46 K131 ; R46 := mCountDown
	824	[6557]	GETTABLE 	R46 R46 K134 ; R46 := R46["Timer"]
	825	[6557]	EQ       	0 R46 K121 ; if R46 ~= -1.000000 then PC := 849
	826	[6557]	JMP      	849 ; PC := 849
	827	[6558]	GETGLOBAL	R46 K131 ; R46 := mCountDown
	828	[6558]	SETTABLE 	R46 K132 K43 ; R46["Node"] := nil
	829	[6560]	GETGLOBAL	R46 K131 ; R46 := mCountDown
	830	[6560]	GETTABLE 	R46 R46 K136 ; R46 := R46["TransitioningOut"]
	831	[6560]	TEST     	R46 0 ; if not R46 then PC := 849
	832	[6560]	JMP      	849 ; PC := 849
	833	[6561]	GETGLOBAL	R46 K131 ; R46 := mCountDown
	834	[6561]	SETTABLE 	R46 K136 K137 ; R46["TransitioningOut"] := false
	835	[6562]	GETGLOBAL	R46 K131 ; R46 := mCountDown
	836	[6562]	GETTABLE 	R46 R46 K138 ; R46 := R46["InitialFOV"]
	837	[6562]	EQ       	1 R46 K43 ; if R46 == nil then PC := 845
	838	[6562]	JMP      	845 ; PC := 845
	839	[6563]	GETUPVAL 	R46 U1 ; R46 := U1
	840	[6563]	GETTABLE 	R46 R46 K98 ; R46 := R46["cameraSpot"]
	841	[6563]	SELF     	R46 R46 K139 ; R47 := R46; R46 := R46[0xacea6d71]
	842	[6563]	GETGLOBAL	R48 K131 ; R48 := mCountDown
	843	[6563]	GETTABLE 	R48 R48 K138 ; R48 := R48["InitialFOV"]
	844	[6563]	CALL     	R46 3 1 ; R46(R47,R48)
	845	[6565]	GETGLOBAL	R46 K140 ; R46 := mPlayerPos
	846	[6565]	SETTABLE 	R46 K141 K137 ; R46["Locked"] := false
	847	[6566]	OP_LOADBOOL	R46 0 0 ; R46 := false
	848	[6566]	SETGLOBALHASH	R46 K77 ; mInputBlocked := R46
	849	[6570]	GETGLOBAL	R46 K110 ; R46 := 0x5bced4c4
	850	[6570]	GETTABLE 	R46 R46 K135 ; R46 := R46[0x99675e23]
	851	[6570]	GETGLOBAL	R47 K131 ; R47 := mCountDown
	852	[6570]	GETTABLE 	R47 R47 K134 ; R47 := R47["Timer"]
	853	[6570]	CALL     	R46 2 2 ; R46 := R46(R47)
	854	[6571]	EQ       	1 R45 R46 ; if R45 == R46 then PC := 873
	855	[6571]	JMP      	873 ; PC := 873
	856	[6571]	GETGLOBAL	R47 K131 ; R47 := mCountDown
	857	[6571]	GETTABLE 	R47 R47 K132 ; R47 := R47["Node"]
	858	[6571]	EQ       	1 R47 K43 ; if R47 == nil then PC := 873
	859	[6571]	JMP      	873 ; PC := 873
	860	[6572]	GETGLOBAL	R47 K41 ; R47 := mParticles
	861	[6572]	GETUPVAL 	R48 U4 ; R48 := U4
	862	[6572]	GETTABLE 	R48 R48 K45 ; R48 := R48[0x310355a7]
	863	[6572]	GETGLOBAL	R49 K2 ; R49 := 0xae91e43b
	864	[6572]	GETGLOBAL	R50 K131 ; R50 := mCountDown
	865	[6572]	GETTABLE 	R50 R50 K132 ; R50 := R50["Node"]
	866	[6572]	GETTABLE 	R50 R50 K46 ; R50 := R50["clipName"]
	867	[6572]	GETGLOBAL	R51 K143 ; R51 := 0x72696ae8
	868	[6572]	LOADK    	R52 := 0.000000
	869	[6572]	LOADK    	R53 := 0.000000
	870	[6572]	GETGLOBAL	R54 K48 ; R54 := 0x1211d00f
	871	[6572]	CALL     	R48 7 2 ; R48 := R48(R49,R50,R51,R52,R53,R54)
	872	[6572]	SETTABLE 	R47 K142 R48 ; R47["CountdownFx"] := R48
	873	[6577]	GETGLOBAL	R47 K144 ; R47 := 0x9ba7909f
	874	[6577]	SELF     	R47 R47 K145 ; R48 := R47; R47 := R47[0xc12c4f71]
	875	[6577]	CALL     	R47 2 2 ; R47 := R47(R48)
	876	[6577]	GETGLOBAL	R48 K2 ; R48 := 0xae91e43b
	877	[6577]	EQ       	0 R47 R48 ; if R47 ~= R48 then PC := 1159
	878	[6577]	JMP      	1159 ; PC := 1159
	879	[6578]	GETGLOBAL	R47 K110 ; R47 := 0x5bced4c4
	880	[6578]	GETTABLE 	R47 R47 K146 ; R47 := R47[0xb62ecfe0]
	881	[6578]	GETGLOBAL	R48 K2 ; R48 := 0xae91e43b
	882	[6578]	SELF     	R48 R48 K106 ; R49 := R48; R48 := R48[0x6b837788]
	883	[6578]	CALL     	R48 2 2 ; R48 := R48(R49)
	884	[6578]	GETGLOBAL	R49 K2 ; R49 := 0xae91e43b
	885	[6578]	SELF     	R49 R49 K147 ; R50 := R49; R49 := R49[0x091c120e]
	886	[6578]	CALL     	R49 2 0 ; R49,... := R49(R50)
	887	[6578]	CALL     	R47 0 2 ; R47 := R47(R48,...)
	888	[6579]	GETGLOBAL	R48 K148 ; R48 := mFxNodes
	889	[6579]	GETTABLE 	R48 R48 K149 ; R48 := R48["Pending"]
	890	[6579]	LEN      	R48 R48 ; R48 := # R48
	891	[6579]	LT       	0 K72 R48 ; if 0.000000 >= R48 then PC := 897
	892	[6579]	JMP      	897 ; PC := 897
	893	[6579]	GETGLOBAL	R48 K150 ; R48 := mNodeAlphaValues
	894	[6579]	GETTABLE 	R48 R48 K151 ; R48 := R48["NodeLayerAlpha"]
	895	[6579]	LT       	1 K72 R48 ; if 0.000000 < R48 then PC := 907
	896	[6579]	JMP      	907 ; PC := 907
	897	[6579]	GETGLOBAL	R48 K148 ; R48 := mFxNodes
	898	[6579]	GETTABLE 	R48 R48 K152 ; R48 := R48["Quest"]
	899	[6579]	LEN      	R48 R48 ; R48 := # R48
	900	[6579]	LT       	1 K72 R48 ; if 0.000000 < R48 then PC := 907
	901	[6579]	JMP      	907 ; PC := 907
	902	[6579]	GETGLOBAL	R48 K148 ; R48 := mFxNodes
	903	[6579]	GETTABLE 	R48 R48 K153 ; R48 := R48["Invasion"]
	904	[6579]	LEN      	R48 R48 ; R48 := # R48
	905	[6579]	LT       	0 K72 R48 ; if 0.000000 >= R48 then PC := 1173
	906	[6579]	JMP      	1173 ; PC := 1173
	907	[6580]	GETGLOBAL	R48 K148 ; R48 := mFxNodes
	908	[6580]	GETGLOBAL	R49 K148 ; R49 := mFxNodes
	909	[6580]	GETTABLE 	R49 R49 K154 ; R49 := R49["NotificationTime"]
	910	[6580]	GETGLOBAL	R50 K99 ; R50 := 0x67652851
	911	[6580]	CALL     	R50 1 2 ; R50 := R50()
	912	[6580]	SUB      	R49 R49 R50 ; R49 := R49 - R50
	913	[6580]	SETTABLE 	R48 K154 R49 ; R48["NotificationTime"] := R49
	914	[6581]	GETGLOBAL	R48 K148 ; R48 := mFxNodes
	915	[6581]	GETTABLE 	R48 R48 K154 ; R48 := R48["NotificationTime"]
	916	[6581]	LE       	0 R48 K72 ; if R48 > 0.000000 then PC := 1173
	917	[6581]	JMP      	1173 ; PC := 1173
	918	[6582]	GETGLOBAL	R48 K148 ; R48 := mFxNodes
	919	[6582]	GETUPVAL 	R49 U4 ; R49 := U4
	920	[6582]	GETTABLE 	R49 R49 K155 ; R49 := R49[0x06d055f9]
	921	[6582]	GETGLOBAL	R50 K156 ; R50 := mVorsPrizeQuestActiveNode
	922	[6582]	LOADK    	R51 := 1.000000
	923	[6582]	LOADK    	R52 := 2.000000
	924	[6582]	CALL     	R49 4 2 ; R49 := R49(R50,R51,R52)
	925	[6582]	SETTABLE 	R48 K154 R49 ; R48["NotificationTime"] := R49
	926	[6584]	OP_LOADBOOL	R48 0 0 ; R48 := false
	927	[6585]	GETGLOBAL	R49 K150 ; R49 := mNodeAlphaValues
	928	[6585]	GETTABLE 	R49 R49 K151 ; R49 := R49["NodeLayerAlpha"]
	929	[6585]	LT       	0 K72 R49 ; if 0.000000 >= R49 then PC := 1095
	930	[6585]	JMP      	1095 ; PC := 1095
	931	[6585]	GETGLOBAL	R49 K70 ; R49 := _T
	932	[6585]	GETTABLE 	R49 R49 K157 ; R49 := R49["CustomStarChartNodeFilter"]
	933	[6585]	EQ       	0 R49 K43 ; if R49 ~= nil then PC := 1095
	934	[6585]	JMP      	1095 ; PC := 1095
	935	[6586]	LOADK    	R49 := 1.000000
	936	[6586]	GETGLOBAL	R50 K148 ; R50 := mFxNodes
	937	[6586]	GETTABLE 	R50 R50 K149 ; R50 := R50["Pending"]
	938	[6586]	LEN      	R50 R50 ; R50 := # R50
	939	[6586]	LOADK    	R51 := 1.000000
	940	[6586]	FORPREP  	R49 1003 ; R49 -= R51; PC := 1003
	941	[6587]	GETGLOBAL	R53 K148 ; R53 := mFxNodes
	942	[6587]	GETTABLE 	R53 R53 K149 ; R53 := R53["Pending"]
	943	[6587]	GETTABLE 	R53 R53 R52 ; R53 := R53[R52]
	944	[6587]	GETTABLE 	R53 R53 K132 ; R53 := R53["Node"]
	945	[6587]	EQ       	1 R53 K43 ; if R53 == nil then PC := 1002
	946	[6587]	JMP      	1002 ; PC := 1002
	947	[6588]	GETGLOBAL	R53 K2 ; R53 := 0xae91e43b
	948	[6588]	SELF     	R53 R53 K158 ; R54 := R53; R53 := R53[0xb052d775]
	949	[6588]	GETGLOBAL	R55 K148 ; R55 := mFxNodes
	950	[6588]	GETTABLE 	R55 R55 K149 ; R55 := R55["Pending"]
	951	[6588]	GETTABLE 	R55 R55 R52 ; R55 := R55[R52]
	952	[6588]	GETTABLE 	R55 R55 K132 ; R55 := R55["Node"]
	953	[6588]	GETTABLE 	R55 R55 K159 ; R55 := R55["memberIndex"]
	954	[6588]	LOADK    	R56 := 0.000000
	955	[6588]	CALL     	R53 4 2 ; R53 := R53(R54,R55,R56)
	956	[6589]	GETGLOBAL	R54 K2 ; R54 := 0xae91e43b
	957	[6589]	SELF     	R54 R54 K158 ; R55 := R54; R54 := R54[0xb052d775]
	958	[6589]	GETGLOBAL	R56 K148 ; R56 := mFxNodes
	959	[6589]	GETTABLE 	R56 R56 K149 ; R56 := R56["Pending"]
	960	[6589]	GETTABLE 	R56 R56 R52 ; R56 := R56[R52]
	961	[6589]	GETTABLE 	R56 R56 K132 ; R56 := R56["Node"]
	962	[6589]	GETTABLE 	R56 R56 K159 ; R56 := R56["memberIndex"]
	963	[6589]	LOADK    	R57 := 1.000000
	964	[6589]	CALL     	R54 4 2 ; R54 := R54(R55,R56,R57)
	965	[6591]	GETUPVAL 	R55 U4 ; R55 := U4
	966	[6591]	GETTABLE 	R55 R55 K160 ; R55 := R55[0x6d7e6810]
	967	[6591]	GETGLOBAL	R56 K2 ; R56 := 0xae91e43b
	968	[6591]	NEWTABLE 	R57 0 2 ; R57 := {}
	969	[6591]	SETTABLE 	R57 K109 R53 ; R57["x"] := R53
	970	[6591]	SETTABLE 	R57 K114 R54 ; R57["y"] := R54
	971	[6591]	CALL     	R55 3 2 ; R55 := R55(R56,R57)
	972	[6592]	GETTABLE 	R56 R55 K109 ; R56 := R55["x"]
	973	[6592]	LT       	0 K72 R56 ; if 0.000000 >= R56 then PC := 1002
	974	[6592]	JMP      	1002 ; PC := 1002
	975	[6592]	GETTABLE 	R56 R55 K114 ; R56 := R55["y"]
	976	[6592]	LT       	0 K72 R56 ; if 0.000000 >= R56 then PC := 1002
	977	[6592]	JMP      	1002 ; PC := 1002
	978	[6592]	GETTABLE 	R56 R55 K109 ; R56 := R55["x"]
	979	[6592]	LT       	0 R56 K26 ; if R56 >= 1.000000 then PC := 1002
	980	[6592]	JMP      	1002 ; PC := 1002
	981	[6592]	GETTABLE 	R56 R55 K114 ; R56 := R55["y"]
	982	[6592]	LT       	0 R56 K26 ; if R56 >= 1.000000 then PC := 1002
	983	[6592]	JMP      	1002 ; PC := 1002
	984	[6593]	GETUPVAL 	R56 U0 ; R56 := U0
	985	[6593]	SELF     	R56 R56 K161 ; R57 := R56; R56 := R56[0xbd2e96ea]
	986	[6593]	DIV      	R58 R53 R47 ; R58 := R53 / R47
	987	[6593]	MUL      	R58 R58 K26 ; R58 := R58 * 1.000000
	988	[6604]	CLOSURE  	R59 1 ; R59 := closure(Function #2)
	989	[6604]	MOVE     	R0 R52 ; R0 := R52
	990	[6604]	GETUPVAL 	R0 U4 ; R0 := U4
	991	[6593]	CALL     	R56 4 1 ; R56(R57,R58,R59)
	992	[6605]	TEST     	R48 1 ; if R48 then PC := 1002
	993	[6605]	JMP      	1002 ; PC := 1002
	994	[6606]	OP_LOADBOOL	R48 1 0 ; R48 := true
	995	[6607]	GETUPVAL 	R56 U0 ; R56 := U0
	996	[6607]	SELF     	R56 R56 K161 ; R57 := R56; R56 := R56[0xbd2e96ea]
	997	[6607]	DIV      	R58 R53 R47 ; R58 := R53 / R47
	998	[6607]	MUL      	R58 R58 K26 ; R58 := R58 * 1.000000
	999	[6609]	CLOSURE  	R59 2 ; R59 := closure(Function #3)
	1000	[6609]	GETUPVAL 	R0 U4 ; R0 := U4
	1001	[6607]	CALL     	R56 4 1 ; R56(R57,R58,R59)
	1002	[6612]	CLOSE    	R52 ; SAVE R52,...
	1003	[6586]	FORLOOP  	R49 941 ; R49 += R51; if R49 <= R50 then begin PC := 941; R52 := R49 end
	1004	[6615]	LOADK    	R52 := 1.000000
	1005	[6615]	GETGLOBAL	R53 K148 ; R53 := mFxNodes
	1006	[6615]	GETTABLE 	R53 R53 K153 ; R53 := R53["Invasion"]
	1007	[6615]	LEN      	R53 R53 ; R53 := # R53
	1008	[6615]	LOADK    	R54 := 1.000000
	1009	[6615]	FORPREP  	R52 1094 ; R52 -= R54; PC := 1094
	1010	[6617]	GETGLOBAL	R56 K2 ; R56 := 0xae91e43b
	1011	[6617]	SELF     	R56 R56 K158 ; R57 := R56; R56 := R56[0xb052d775]
	1012	[6617]	GETGLOBAL	R58 K148 ; R58 := mFxNodes
	1013	[6617]	GETTABLE 	R58 R58 K153 ; R58 := R58["Invasion"]
	1014	[6617]	GETTABLE 	R58 R58 R55 ; R58 := R58[R55]
	1015	[6617]	GETTABLE 	R58 R58 K132 ; R58 := R58["Node"]
	1016	[6617]	GETTABLE 	R58 R58 K159 ; R58 := R58["memberIndex"]
	1017	[6617]	LOADK    	R59 := 0.000000
	1018	[6617]	CALL     	R56 4 2 ; R56 := R56(R57,R58,R59)
	1019	[6618]	GETGLOBAL	R57 K2 ; R57 := 0xae91e43b
	1020	[6618]	SELF     	R57 R57 K158 ; R58 := R57; R57 := R57[0xb052d775]
	1021	[6618]	GETGLOBAL	R59 K148 ; R59 := mFxNodes
	1022	[6618]	GETTABLE 	R59 R59 K153 ; R59 := R59["Invasion"]
	1023	[6618]	GETTABLE 	R59 R59 R55 ; R59 := R59[R55]
	1024	[6618]	GETTABLE 	R59 R59 K132 ; R59 := R59["Node"]
	1025	[6618]	GETTABLE 	R59 R59 K159 ; R59 := R59["memberIndex"]
	1026	[6618]	LOADK    	R60 := 1.000000
	1027	[6618]	CALL     	R57 4 2 ; R57 := R57(R58,R59,R60)
	1028	[6620]	GETUPVAL 	R58 U4 ; R58 := U4
	1029	[6620]	GETTABLE 	R58 R58 K160 ; R58 := R58[0x6d7e6810]
	1030	[6620]	GETGLOBAL	R59 K2 ; R59 := 0xae91e43b
	1031	[6620]	NEWTABLE 	R60 0 2 ; R60 := {}
	1032	[6620]	SETTABLE 	R60 K109 R56 ; R60["x"] := R56
	1033	[6620]	SETTABLE 	R60 K114 R57 ; R60["y"] := R57
	1034	[6620]	CALL     	R58 3 2 ; R58 := R58(R59,R60)
	1035	[6621]	GETTABLE 	R59 R58 K109 ; R59 := R58["x"]
	1036	[6621]	LT       	0 K72 R59 ; if 0.000000 >= R59 then PC := 1094
	1037	[6621]	JMP      	1094 ; PC := 1094
	1038	[6621]	GETTABLE 	R59 R58 K114 ; R59 := R58["y"]
	1039	[6621]	LT       	0 K72 R59 ; if 0.000000 >= R59 then PC := 1094
	1040	[6621]	JMP      	1094 ; PC := 1094
	1041	[6621]	GETTABLE 	R59 R58 K109 ; R59 := R58["x"]
	1042	[6621]	LT       	0 R59 K26 ; if R59 >= 1.000000 then PC := 1094
	1043	[6621]	JMP      	1094 ; PC := 1094
	1044	[6621]	GETTABLE 	R59 R58 K114 ; R59 := R58["y"]
	1045	[6621]	LT       	0 R59 K26 ; if R59 >= 1.000000 then PC := 1094
	1046	[6621]	JMP      	1094 ; PC := 1094
	1047	[6623]	GETGLOBAL	R59 K148 ; R59 := mFxNodes
	1048	[6623]	GETTABLE 	R59 R59 K153 ; R59 := R59["Invasion"]
	1049	[6623]	GETTABLE 	R59 R59 R55 ; R59 := R59[R55]
	1050	[6623]	EQ       	1 R59 K43 ; if R59 == nil then PC := 1094
	1051	[6623]	JMP      	1094 ; PC := 1094
	1052	[6624]	GETGLOBAL	R59 K148 ; R59 := mFxNodes
	1053	[6624]	GETTABLE 	R59 R59 K153 ; R59 := R59["Invasion"]
	1054	[6624]	GETTABLE 	R59 R59 R55 ; R59 := R59[R55]
	1055	[6624]	GETTABLE 	R59 R59 K132 ; R59 := R59["Node"]
	1056	[6624]	EQ       	1 R59 K43 ; if R59 == nil then PC := 1094
	1057	[6624]	JMP      	1094 ; PC := 1094
	1058	[6625]	GETGLOBAL	R59 K148 ; R59 := mFxNodes
	1059	[6625]	GETTABLE 	R59 R59 K153 ; R59 := R59["Invasion"]
	1060	[6625]	GETTABLE 	R59 R59 R55 ; R59 := R59[R55]
	1061	[6625]	GETTABLE 	R59 R59 K132 ; R59 := R59["Node"]
	1062	[6625]	GETTABLE 	R59 R59 K46 ; R59 := R59["clipName"]
	1063	[6625]	EQ       	1 R59 K43 ; if R59 == nil then PC := 1094
	1064	[6625]	JMP      	1094 ; PC := 1094
	1065	[6626]	GETGLOBAL	R59 K41 ; R59 := mParticles
	1066	[6626]	GETTABLE 	R59 R59 K162 ; R59 := R59["InvasionFx"]
	1067	[6626]	GETTABLE 	R59 R59 R55 ; R59 := R59[R55]
	1068	[6626]	EQ       	1 R59 K43 ; if R59 == nil then PC := 1078
	1069	[6626]	JMP      	1078 ; PC := 1078
	1070	[6626]	GETGLOBAL	R59 K1 ; R59 := 0x7b998233
	1071	[6626]	GETGLOBAL	R60 K41 ; R60 := mParticles
	1072	[6626]	GETTABLE 	R60 R60 K162 ; R60 := R60["InvasionFx"]
	1073	[6626]	GETTABLE 	R60 R60 R55 ; R60 := R60[R55]
	1074	[6626]	GETTABLE 	R60 R60 K44 ; R60 := R60["mInstance"]
	1075	[6626]	CALL     	R59 2 2 ; R59 := R59(R60)
	1076	[6626]	TEST     	R59 0 ; if not R59 then PC := 1094
	1077	[6626]	JMP      	1094 ; PC := 1094
	1078	[6628]	GETGLOBAL	R59 K41 ; R59 := mParticles
	1079	[6628]	GETTABLE 	R59 R59 K162 ; R59 := R59["InvasionFx"]
	1080	[6628]	GETUPVAL 	R60 U4 ; R60 := U4
	1081	[6628]	GETTABLE 	R60 R60 K45 ; R60 := R60[0x310355a7]
	1082	[6628]	GETGLOBAL	R61 K2 ; R61 := 0xae91e43b
	1083	[6628]	GETGLOBAL	R62 K148 ; R62 := mFxNodes
	1084	[6628]	GETTABLE 	R62 R62 K153 ; R62 := R62["Invasion"]
	1085	[6628]	GETTABLE 	R62 R62 R55 ; R62 := R62[R55]
	1086	[6628]	GETTABLE 	R62 R62 K132 ; R62 := R62["Node"]
	1087	[6628]	GETTABLE 	R62 R62 K46 ; R62 := R62["clipName"]
	1088	[6628]	GETGLOBAL	R63 K163 ; R63 := 0x354261dc
	1089	[6628]	LOADK    	R64 := 0.000000
	1090	[6628]	LOADK    	R65 := 0.000000
	1091	[6628]	GETGLOBAL	R66 K48 ; R66 := 0x1211d00f
	1092	[6628]	CALL     	R60 7 2 ; R60 := R60(R61,R62,R63,R64,R65,R66)
	1093	[6628]	SETTABLE 	R59 R55 R60 ; R59[R55] := R60
	1094	[6615]	FORLOOP  	R52 1010 ; R52 += R54; if R52 <= R53 then begin PC := 1010; R55 := R52 end
	1095	[6633]	LOADK    	R59 := 1.000000
	1096	[6633]	GETGLOBAL	R60 K148 ; R60 := mFxNodes
	1097	[6633]	GETTABLE 	R60 R60 K152 ; R60 := R60["Quest"]
	1098	[6633]	LEN      	R60 R60 ; R60 := # R60
	1099	[6633]	LOADK    	R61 := 1.000000
	1100	[6633]	FORPREP  	R59 1157 ; R59 -= R61; PC := 1157
	1101	[6635]	GETGLOBAL	R63 K2 ; R63 := 0xae91e43b
	1102	[6635]	SELF     	R63 R63 K158 ; R64 := R63; R63 := R63[0xb052d775]
	1103	[6635]	GETGLOBAL	R65 K148 ; R65 := mFxNodes
	1104	[6635]	GETTABLE 	R65 R65 K152 ; R65 := R65["Quest"]
	1105	[6635]	GETTABLE 	R65 R65 R62 ; R65 := R65[R62]
	1106	[6635]	GETTABLE 	R65 R65 K132 ; R65 := R65["Node"]
	1107	[6635]	GETTABLE 	R65 R65 K159 ; R65 := R65["memberIndex"]
	1108	[6635]	LOADK    	R66 := 0.000000
	1109	[6635]	CALL     	R63 4 2 ; R63 := R63(R64,R65,R66)
	1110	[6636]	GETGLOBAL	R64 K2 ; R64 := 0xae91e43b
	1111	[6636]	SELF     	R64 R64 K158 ; R65 := R64; R64 := R64[0xb052d775]
	1112	[6636]	GETGLOBAL	R66 K148 ; R66 := mFxNodes
	1113	[6636]	GETTABLE 	R66 R66 K152 ; R66 := R66["Quest"]
	1114	[6636]	GETTABLE 	R66 R66 R62 ; R66 := R66[R62]
	1115	[6636]	GETTABLE 	R66 R66 K132 ; R66 := R66["Node"]
	1116	[6636]	GETTABLE 	R66 R66 K159 ; R66 := R66["memberIndex"]
	1117	[6636]	LOADK    	R67 := 1.000000
	1118	[6636]	CALL     	R64 4 2 ; R64 := R64(R65,R66,R67)
	1119	[6638]	GETUPVAL 	R65 U4 ; R65 := U4
	1120	[6638]	GETTABLE 	R65 R65 K160 ; R65 := R65[0x6d7e6810]
	1121	[6638]	GETGLOBAL	R66 K2 ; R66 := 0xae91e43b
	1122	[6638]	NEWTABLE 	R67 0 2 ; R67 := {}
	1123	[6638]	SETTABLE 	R67 K109 R63 ; R67["x"] := R63
	1124	[6638]	SETTABLE 	R67 K114 R64 ; R67["y"] := R64
	1125	[6638]	CALL     	R65 3 2 ; R65 := R65(R66,R67)
	1126	[6639]	GETTABLE 	R66 R65 K109 ; R66 := R65["x"]
	1127	[6639]	LT       	0 K72 R66 ; if 0.000000 >= R66 then PC := 1156
	1128	[6639]	JMP      	1156 ; PC := 1156
	1129	[6639]	GETTABLE 	R66 R65 K114 ; R66 := R65["y"]
	1130	[6639]	LT       	0 K72 R66 ; if 0.000000 >= R66 then PC := 1156
	1131	[6639]	JMP      	1156 ; PC := 1156
	1132	[6639]	GETTABLE 	R66 R65 K109 ; R66 := R65["x"]
	1133	[6639]	LT       	0 R66 K26 ; if R66 >= 1.000000 then PC := 1156
	1134	[6639]	JMP      	1156 ; PC := 1156
	1135	[6639]	GETTABLE 	R66 R65 K114 ; R66 := R65["y"]
	1136	[6639]	LT       	0 R66 K26 ; if R66 >= 1.000000 then PC := 1156
	1137	[6639]	JMP      	1156 ; PC := 1156
	1138	[6640]	GETUPVAL 	R66 U0 ; R66 := U0
	1139	[6640]	SELF     	R66 R66 K161 ; R67 := R66; R66 := R66[0xbd2e96ea]
	1140	[6640]	DIV      	R68 R63 R47 ; R68 := R63 / R47
	1141	[6640]	MUL      	R68 R68 K26 ; R68 := R68 * 1.000000
	1142	[6650]	CLOSURE  	R69 3 ; R69 := closure(Function #4)
	1143	[6650]	MOVE     	R0 R62 ; R0 := R62
	1144	[6650]	GETUPVAL 	R0 U4 ; R0 := U4
	1145	[6640]	CALL     	R66 4 1 ; R66(R67,R68,R69)
	1146	[6651]	TEST     	R48 1 ; if R48 then PC := 1156
	1147	[6651]	JMP      	1156 ; PC := 1156
	1148	[6652]	OP_LOADBOOL	R48 1 0 ; R48 := true
	1149	[6653]	GETUPVAL 	R66 U0 ; R66 := U0
	1150	[6653]	SELF     	R66 R66 K161 ; R67 := R66; R66 := R66[0xbd2e96ea]
	1151	[6653]	DIV      	R68 R63 R47 ; R68 := R63 / R47
	1152	[6653]	MUL      	R68 R68 K26 ; R68 := R68 * 1.000000
	1153	[6655]	CLOSURE  	R69 4 ; R69 := closure(Function #5)
	1154	[6655]	GETUPVAL 	R0 U4 ; R0 := U4
	1155	[6653]	CALL     	R66 4 1 ; R66(R67,R68,R69)
	1156	[6657]	CLOSE    	R62 ; SAVE R62,...
	1157	[6633]	FORLOOP  	R59 1101 ; R59 += R61; if R59 <= R60 then begin PC := 1101; R62 := R59 end
	1158	[6660]	JMP      	1173 ; PC := 1173
	1159	[6661]	GETGLOBAL	R62 K70 ; R62 := _T
	1160	[6661]	GETTABLE 	R62 R62 K164 ; R62 := R62["DialogOpen"]
	1161	[6661]	TEST     	R62 0 ; if not R62 then PC := 1173
	1162	[6661]	JMP      	1173 ; PC := 1173
	1163	[6662]	GETGLOBAL	R62 K165 ; R62 := mDrag
	1164	[6662]	EQ       	1 R62 K43 ; if R62 == nil then PC := 1173
	1165	[6662]	JMP      	1173 ; PC := 1173
	1166	[6662]	GETGLOBAL	R62 K165 ; R62 := mDrag
	1167	[6662]	GETTABLE 	R62 R62 K166 ; R62 := R62["mDragging"]
	1168	[6662]	TEST     	R62 0 ; if not R62 then PC := 1173
	1169	[6662]	JMP      	1173 ; PC := 1173
	1170	[6663]	GETGLOBAL	R62 K165 ; R62 := mDrag
	1171	[6663]	SELF     	R62 R62 K167 ; R63 := R62; R62 := R62[0xcc5f3150]
	1172	[6663]	CALL     	R62 2 1 ; R62(R63)
	1173	[6668]	GETGLOBAL	R62 K168 ; R62 := mHover
	1174	[6668]	GETTABLE 	R62 R62 K132 ; R62 := R62["Node"]
	1175	[6668]	EQ       	1 R62 K43 ; if R62 == nil then PC := 1200
	1176	[6668]	JMP      	1200 ; PC := 1200
	1177	[6668]	GETGLOBAL	R62 K168 ; R62 := mHover
	1178	[6668]	GETTABLE 	R62 R62 K169 ; R62 := R62["UpdateTimer"]
	1179	[6668]	EQ       	1 R62 K43 ; if R62 == nil then PC := 1200
	1180	[6668]	JMP      	1200 ; PC := 1200
	1181	[6668]	GETGLOBAL	R62 K168 ; R62 := mHover
	1182	[6668]	GETTABLE 	R62 R62 K170 ; R62 := R62["TimerPre"]
	1183	[6668]	EQ       	1 R62 K43 ; if R62 == nil then PC := 1200
	1184	[6668]	JMP      	1200 ; PC := 1200
	1185	[6668]	GETGLOBAL	R62 K168 ; R62 := mHover
	1186	[6668]	GETTABLE 	R62 R62 K171 ; R62 := R62["TimerPost"]
	1187	[6668]	EQ       	1 R62 K43 ; if R62 == nil then PC := 1200
	1188	[6668]	JMP      	1200 ; PC := 1200
	1189	[6668]	GETGLOBAL	R62 K168 ; R62 := mHover
	1190	[6668]	GETTABLE 	R62 R62 K172 ; R62 := R62["NodeTime"]
	1191	[6668]	EQ       	1 R62 K43 ; if R62 == nil then PC := 1200
	1192	[6668]	JMP      	1200 ; PC := 1200
	1193	[6669]	GETUPVAL 	R62 U32 ; R62 := U32
	1194	[6669]	GETTABLE 	R62 R62 K173 ; R62 := R62[0x1b3b34b9]
	1195	[6669]	GETGLOBAL	R63 K174 ; R63 := mInfoTip
	1196	[6669]	GETGLOBAL	R64 K168 ; R64 := mHover
	1197	[6669]	MOVE     	R65 R0 ; R65 := R0
	1198	[6669]	GETGLOBAL	R66 K175 ; R66 := mMissionInfo
	1199	[6669]	CALL     	R62 5 1 ; R62(R63,R64,R65,R66)
	1200	[6672]	GETGLOBAL	R62 K7 ; R62 := mRailJack
	1201	[6672]	EQ       	1 R62 K43 ; if R62 == nil then PC := 1236
	1202	[6672]	JMP      	1236 ; PC := 1236
	1203	[6672]	GETGLOBAL	R62 K7 ; R62 := mRailJack
	1204	[6672]	GETTABLE 	R62 R62 K90 ; R62 := R62["Button"]
	1205	[6672]	EQ       	1 R62 K43 ; if R62 == nil then PC := 1236
	1206	[6672]	JMP      	1236 ; PC := 1236
	1207	[6672]	GETGLOBAL	R62 K7 ; R62 := mRailJack
	1208	[6672]	GETTABLE 	R62 R62 K90 ; R62 := R62["Button"]
	1209	[6672]	GETTABLE 	R62 R62 K176 ; R62 := R62["mVisible"]
	1210	[6672]	TEST     	R62 0 ; if not R62 then PC := 1236
	1211	[6672]	JMP      	1236 ; PC := 1236
	1212	[6673]	GETGLOBAL	R62 K7 ; R62 := mRailJack
	1213	[6673]	GETTABLE 	R62 R62 K90 ; R62 := R62["Button"]
	1214	[6673]	GETTABLE 	R62 R62 K177 ; R62 := R62["WorldStateUp"]
	1215	[6673]	GETGLOBAL	R63 K70 ; R63 := _T
	1216	[6673]	GETTABLE 	R63 R63 K178 ; R63 := R63["MouseInWorldStateWindow"]
	1217	[6673]	EQ       	1 R62 R63 ; if R62 == R63 then PC := 1236
	1218	[6673]	JMP      	1236 ; PC := 1236
	1219	[6674]	GETGLOBAL	R62 K7 ; R62 := mRailJack
	1220	[6674]	GETTABLE 	R62 R62 K90 ; R62 := R62["Button"]
	1221	[6674]	GETGLOBAL	R63 K70 ; R63 := _T
	1222	[6674]	GETTABLE 	R63 R63 K178 ; R63 := R63["MouseInWorldStateWindow"]
	1223	[6674]	SETTABLE 	R62 K177 R63 ; R62[0x1211d00f] := R63
	1224	[6675]	GETGLOBAL	R62 K7 ; R62 := mRailJack
	1225	[6675]	GETTABLE 	R62 R62 K90 ; R62 := R62["Button"]
	1226	[6675]	SELF     	R62 R62 K179 ; R63 := R62; R62 := R62[0x16ca639e]
	1227	[6675]	GETUPVAL 	R64 U4 ; R64 := U4
	1228	[6675]	GETTABLE 	R64 R64 K155 ; R64 := R64[0x06d055f9]
	1229	[6675]	GETGLOBAL	R65 K7 ; R65 := mRailJack
	1230	[6675]	GETTABLE 	R65 R65 K90 ; R65 := R65["Button"]
	1231	[6675]	GETTABLE 	R65 R65 K177 ; R65 := R65["WorldStateUp"]
	1232	[6675]	LOADK    	R66 := 10.000000
	1233	[6675]	LOADK    	R67 := 100.000000
	1234	[6675]	CALL     	R64 4 0 ; R64,... := R64(R65,R66,R67)
	1235	[6675]	CALL     	R62 0 1 ; R62(R63,...)
	1236	[6680]	GETGLOBAL	R62 K1 ; R62 := 0x7b998233
	1237	[6680]	GETGLOBAL	R63 K41 ; R63 := mParticles
	1238	[6680]	GETTABLE 	R63 R63 K180 ; R63 := R63["CountDownFx"]
	1239	[6680]	CALL     	R62 2 2 ; R62 := R62(R63)
	1240	[6680]	TEST     	R62 1 ; if R62 then PC := 1254
	1241	[6680]	JMP      	1254 ; PC := 1254
	1242	[6680]	GETGLOBAL	R62 K1 ; R62 := 0x7b998233
	1243	[6680]	GETGLOBAL	R63 K41 ; R63 := mParticles
	1244	[6680]	GETTABLE 	R63 R63 K180 ; R63 := R63["CountDownFx"]
	1245	[6680]	GETTABLE 	R63 R63 K44 ; R63 := R63["mInstance"]
	1246	[6680]	CALL     	R62 2 2 ; R62 := R62(R63)
	1247	[6680]	TEST     	R62 1 ; if R62 then PC := 1254
	1248	[6680]	JMP      	1254 ; PC := 1254
	1249	[6681]	GETGLOBAL	R62 K41 ; R62 := mParticles
	1250	[6681]	GETTABLE 	R62 R62 K180 ; R62 := R62["CountDownFx"]
	1251	[6681]	SELF     	R62 R62 K4 ; R63 := R62; R62 := R62[0xfaa69527]
	1252	[6681]	MOVE     	R64 R0 ; R64 := R0
	1253	[6681]	CALL     	R62 3 1 ; R62(R63,R64)
	1254	[6684]	GETGLOBAL	R62 K181 ; R62 := 0xcfc01047
	1255	[6684]	GETGLOBAL	R63 K41 ; R63 := mParticles
	1256	[6684]	GETTABLE 	R63 R63 K182 ; R63 := R63["PendingFx"]
	1257	[6684]	CALL     	R62 2 4 ; R62,R63,R64 := R62(R63)
	1258	[6684]	JMP      	1271 ; PC := 1271
	1259	[6685]	GETGLOBAL	R67 K1 ; R67 := 0x7b998233
	1260	[6685]	GETTABLE 	R68 R66 K44 ; R68 := R66["mInstance"]
	1261	[6685]	CALL     	R67 2 2 ; R67 := R67(R68)
	1262	[6685]	TEST     	R67 1 ; if R67 then PC := 1268
	1263	[6685]	JMP      	1268 ; PC := 1268
	1264	[6686]	SELF     	R67 R66 K4 ; R68 := R66; R67 := R66[0xfaa69527]
	1265	[6686]	MOVE     	R69 R0 ; R69 := R0
	1266	[6686]	CALL     	R67 3 1 ; R67(R68,R69)
	1267	[6686]	JMP      	1271 ; PC := 1271
	1268	[6688]	GETGLOBAL	R67 K41 ; R67 := mParticles
	1269	[6688]	GETTABLE 	R67 R67 K182 ; R67 := R67["PendingFx"]
	1270	[6688]	SETTABLE 	R67 R65 K43 ; R67[R65] := nil
	1271	[6684]	TFORLOOP 	R62 2 ; R65,R66 := R62(R63,R64); if R65 ~= nil then begin PC = 1259; R64 := R65 end
	1272	[6689]	JMP      	1259 ; PC := 1259
	1273	[6692]	GETGLOBAL	R67 K181 ; R67 := 0xcfc01047
	1274	[6692]	GETGLOBAL	R68 K41 ; R68 := mParticles
	1275	[6692]	GETTABLE 	R68 R68 K183 ; R68 := R68["QuestFx"]
	1276	[6692]	CALL     	R67 2 4 ; R67,R68,R69 := R67(R68)
	1277	[6692]	JMP      	1290 ; PC := 1290
	1278	[6693]	GETGLOBAL	R72 K1 ; R72 := 0x7b998233
	1279	[6693]	GETTABLE 	R73 R71 K44 ; R73 := R71["mInstance"]
	1280	[6693]	CALL     	R72 2 2 ; R72 := R72(R73)
	1281	[6693]	TEST     	R72 1 ; if R72 then PC := 1287
	1282	[6693]	JMP      	1287 ; PC := 1287
	1283	[6694]	SELF     	R72 R71 K4 ; R73 := R71; R72 := R71[0xfaa69527]
	1284	[6694]	MOVE     	R74 R0 ; R74 := R0
	1285	[6694]	CALL     	R72 3 1 ; R72(R73,R74)
	1286	[6694]	JMP      	1290 ; PC := 1290
	1287	[6696]	GETGLOBAL	R72 K41 ; R72 := mParticles
	1288	[6696]	GETTABLE 	R72 R72 K183 ; R72 := R72["QuestFx"]
	1289	[6696]	SETTABLE 	R72 R70 K43 ; R72[R70] := nil
	1290	[6692]	TFORLOOP 	R67 2 ; R70,R71 := R67(R68,R69); if R70 ~= nil then begin PC = 1278; R69 := R70 end
	1291	[6697]	JMP      	1278 ; PC := 1278
	1292	[6700]	GETGLOBAL	R72 K181 ; R72 := 0xcfc01047
	1293	[6700]	GETGLOBAL	R73 K41 ; R73 := mParticles
	1294	[6700]	GETTABLE 	R73 R73 K162 ; R73 := R73["InvasionFx"]
	1295	[6700]	CALL     	R72 2 4 ; R72,R73,R74 := R72(R73)
	1296	[6700]	JMP      	1309 ; PC := 1309
	1297	[6701]	GETGLOBAL	R77 K1 ; R77 := 0x7b998233
	1298	[6701]	GETTABLE 	R78 R76 K44 ; R78 := R76["mInstance"]
	1299	[6701]	CALL     	R77 2 2 ; R77 := R77(R78)
	1300	[6701]	TEST     	R77 1 ; if R77 then PC := 1306
	1301	[6701]	JMP      	1306 ; PC := 1306
	1302	[6702]	SELF     	R77 R76 K4 ; R78 := R76; R77 := R76[0xfaa69527]
	1303	[6702]	MOVE     	R79 R0 ; R79 := R0
	1304	[6702]	CALL     	R77 3 1 ; R77(R78,R79)
	1305	[6702]	JMP      	1309 ; PC := 1309
	1306	[6704]	GETGLOBAL	R77 K41 ; R77 := mParticles
	1307	[6704]	GETTABLE 	R77 R77 K162 ; R77 := R77["InvasionFx"]
	1308	[6704]	SETTABLE 	R77 R75 K43 ; R77[R75] := nil
	1309	[6700]	TFORLOOP 	R72 2 ; R75,R76 := R72(R73,R74); if R75 ~= nil then begin PC = 1297; R74 := R75 end
	1310	[6705]	JMP      	1297 ; PC := 1297
	1311	[6708]	GETGLOBAL	R77 K181 ; R77 := 0xcfc01047
	1312	[6708]	GETGLOBAL	R78 K41 ; R78 := mParticles
	1313	[6708]	GETTABLE 	R78 R78 K42 ; R78 := R78["SentientFx"]
	1314	[6708]	CALL     	R77 2 4 ; R77,R78,R79 := R77(R78)
	1315	[6708]	JMP      	1328 ; PC := 1328
	1316	[6709]	GETGLOBAL	R82 K1 ; R82 := 0x7b998233
	1317	[6709]	GETTABLE 	R83 R81 K44 ; R83 := R81["mInstance"]
	1318	[6709]	CALL     	R82 2 2 ; R82 := R82(R83)
	1319	[6709]	TEST     	R82 1 ; if R82 then PC := 1325
	1320	[6709]	JMP      	1325 ; PC := 1325
	1321	[6710]	SELF     	R82 R81 K4 ; R83 := R81; R82 := R81[0xfaa69527]
	1322	[6710]	MOVE     	R84 R0 ; R84 := R0
	1323	[6710]	CALL     	R82 3 1 ; R82(R83,R84)
	1324	[6710]	JMP      	1328 ; PC := 1328
	1325	[6712]	GETGLOBAL	R82 K41 ; R82 := mParticles
	1326	[6712]	GETTABLE 	R82 R82 K42 ; R82 := R82["SentientFx"]
	1327	[6712]	SETTABLE 	R82 R80 K43 ; R82[R80] := nil
	1328	[6708]	TFORLOOP 	R77 2 ; R80,R81 := R77(R78,R79); if R80 ~= nil then begin PC = 1316; R79 := R80 end
	1329	[6713]	JMP      	1316 ; PC := 1316
	1330	[6716]	GETUPVAL 	R82 U33 ; R82 := U33
	1331	[6716]	TEST     	R82 0 ; if not R82 then PC := 1337
	1332	[6716]	JMP      	1337 ; PC := 1337
	1333	[6717]	OP_LOADBOOL	R82 0 0 ; R82 := false
	1334	[6717]	SETUPVAL 	R82 U33 ; U33 := R82
	1335	[6718]	GETUPVAL 	R82 U34 ; R82 := U34
	1336	[6718]	CALL     	R82 1 1 ; R82()
	1337	[6721]	GETGLOBAL	R82 K70 ; R82 := _T
	1338	[6721]	GETTABLE 	R82 R82 K184 ; R82 := R82["UserInvitePending"]
	1339	[6721]	EQ       	0 R82 K43 ; if R82 ~= nil then PC := 1342
	1340	[6721]	JMP      	1342 ; PC := 1342
	1341	[6721]	OP_LOADBOOL	R82 0 1 ; R82 := false; PC := 1342
	1342	[6721]	OP_LOADBOOL	R82 1 0 ; R82 := true
	1343	[6722]	GETGLOBAL	R83 K185 ; R83 := mInvitePopupShowing
	1344	[6722]	EQ       	1 R83 R82 ; if R83 == R82 then PC := 1349
	1345	[6722]	JMP      	1349 ; PC := 1349
	1346	[6723]	SETGLOBALHASH	R82 K185 ; mInvitePopupShowing := R82
	1347	[6724]	GETUPVAL 	R83 U35 ; R83 := U35
	1348	[6724]	CALL     	R83 1 1 ; R83()
	1349	[6730]	GETUPVAL 	R83 U36 ; R83 := U36
	1350	[6730]	GETTABLE 	R83 R83 K186 ; R83 := R83["mHandleJunctionClick"]
	1351	[6730]	TEST     	R83 0 ; if not R83 then PC := 1361
	1352	[6730]	JMP      	1361 ; PC := 1361
	1353	[6732]	GETUPVAL 	R83 U36 ; R83 := U36
	1354	[6732]	GETTABLE 	R83 R83 K187 ; R83 := R83[0xd1b09c9d]
	1355	[6732]	CALL     	R83 1 2 ; R83 := R83()
	1356	[6732]	TEST     	R83 1 ; if R83 then PC := 1413
	1357	[6732]	JMP      	1413 ; PC := 1413
	1358	[6733]	GETUPVAL 	R83 U36 ; R83 := U36
	1359	[6733]	SETTABLE 	R83 K186 K43 ; R83["mHandleJunctionClick"] := nil
	1360	[6734]	JMP      	1413 ; PC := 1413
	1361	[6735]	GETUPVAL 	R83 U36 ; R83 := U36
	1362	[6735]	GETTABLE 	R83 R83 K188 ; R83 := R83["JunctionDrag"]
	1363	[6735]	TEST     	R83 0 ; if not R83 then PC := 1397
	1364	[6735]	JMP      	1397 ; PC := 1397
	1365	[6737]	GETGLOBAL	R83 K189 ; R83 := 0x03f57322
	1366	[6737]	GETGLOBAL	R84 K2 ; R84 := 0xae91e43b
	1367	[6737]	SELF     	R84 R84 K190 ; R85 := R84; R84 := R84[0x5b638cce]
	1368	[6737]	LOADK    	R86 K191 ; R86 := "_root"
	1369	[6737]	LOADK    	R87 K192 ; R87 := "_xmouse"
	1370	[6737]	CALL     	R84 4 0 ; R84,... := R84(R85,R86,R87)
	1371	[6737]	CALL     	R83 0 2 ; R83 := R83(R84,...)
	1372	[6738]	GETGLOBAL	R84 K189 ; R84 := 0x03f57322
	1373	[6738]	GETGLOBAL	R85 K2 ; R85 := 0xae91e43b
	1374	[6738]	SELF     	R85 R85 K190 ; R86 := R85; R85 := R85[0x5b638cce]
	1375	[6738]	LOADK    	R87 K191 ; R87 := "_root"
	1376	[6738]	LOADK    	R88 K193 ; R88 := "_ymouse"
	1377	[6738]	CALL     	R85 4 0 ; R85,... := R85(R86,R87,R88)
	1378	[6738]	CALL     	R84 0 2 ; R84 := R84(R85,...)
	1379	[6739]	LT       	0 K194 R83 ; if -1000.000000 >= R83 then PC := 1413
	1380	[6739]	JMP      	1413 ; PC := 1413
	1381	[6739]	LT       	0 K194 R84 ; if -1000.000000 >= R84 then PC := 1413
	1382	[6739]	JMP      	1413 ; PC := 1413
	1383	[6740]	GETUPVAL 	R85 U4 ; R85 := U4
	1384	[6740]	GETTABLE 	R85 R85 K160 ; R85 := R85[0x6d7e6810]
	1385	[6740]	GETGLOBAL	R86 K2 ; R86 := 0xae91e43b
	1386	[6740]	NEWTABLE 	R87 0 2 ; R87 := {}
	1387	[6740]	SETTABLE 	R87 K109 R83 ; R87["x"] := R83
	1388	[6740]	SETTABLE 	R87 K114 R84 ; R87["y"] := R84
	1389	[6740]	CALL     	R85 3 2 ; R85 := R85(R86,R87)
	1390	[6741]	GETUPVAL 	R86 U7 ; R86 := U7
	1391	[6741]	GETTABLE 	R86 R86 K195 ; R86 := R86["JunctionTasks"]
	1392	[6741]	SELF     	R86 R86 K63 ; R87 := R86; R86 := R86[0xe4162eed]
	1393	[6741]	LOADK    	R88 K196 ; R88 := "UpdateDrag"
	1394	[6741]	GETTABLE 	R89 R85 K114 ; R89 := R85["y"]
	1395	[6741]	CALL     	R86 4 1 ; R86(R87,R88,R89)
	1396	[6742]	JMP      	1413 ; PC := 1413
	1397	[6745]	GETGLOBAL	R86 K197 ; R86 := 0x34291f5c
	1398	[6745]	GETTABLE 	R86 R86 K198 ; R86 := R86[0xe6b41adb]
	1399	[6745]	CALL     	R86 1 2 ; R86 := R86()
	1400	[6745]	TEST     	R86 0 ; if not R86 then PC := 1413
	1401	[6745]	JMP      	1413 ; PC := 1413
	1402	[6745]	GETUPVAL 	R86 U36 ; R86 := U36
	1403	[6745]	GETTABLE 	R86 R86 K199 ; R86 := R86["isLMBDown"]
	1404	[6745]	TEST     	R86 0 ; if not R86 then PC := 1413
	1405	[6745]	JMP      	1413 ; PC := 1413
	1406	[6745]	GETGLOBAL	R86 K165 ; R86 := mDrag
	1407	[6745]	GETTABLE 	R86 R86 K166 ; R86 := R86["mDragging"]
	1408	[6745]	EQ       	0 R86 K137 ; if R86 ~= false then PC := 1413
	1409	[6745]	JMP      	1413 ; PC := 1413
	1410	[6746]	GETGLOBAL	R86 K165 ; R86 := mDrag
	1411	[6746]	SELF     	R86 R86 K200 ; R87 := R86; R86 := R86[0xd033d908]
	1412	[6746]	CALL     	R86 2 1 ; R86(R87)
	1413	[6751]	GETUPVAL 	R86 U36 ; R86 := U36
	1414	[6751]	GETTABLE 	R86 R86 K201 ; R86 := R86["mHandleMouseUp"]
	1415	[6751]	TEST     	R86 0 ; if not R86 then PC := 1434
	1416	[6751]	JMP      	1434 ; PC := 1434
	1417	[6752]	GETUPVAL 	R86 U36 ; R86 := U36
	1418	[6752]	SETTABLE 	R86 K201 K137 ; R86["mHandleMouseUp"] := false
	1419	[6753]	GETUPVAL 	R86 U37 ; R86 := U37
	1420	[6753]	EQ       	1 R86 K43 ; if R86 == nil then PC := 1426
	1421	[6753]	JMP      	1426 ; PC := 1426
	1422	[6754]	GETUPVAL 	R86 U37 ; R86 := U37
	1423	[6754]	CALL     	R86 1 1 ; R86()
	1424	[6755]	LOADNIL  	R86 R86 ; R86 := nil
	1425	[6755]	SETUPVAL 	R86 U37 ; U37 := R86
	1426	[6759]	GETGLOBAL	R86 K168 ; R86 := mHover
	1427	[6759]	GETTABLE 	R86 R86 K202 ; R86 := R86["Region"]
	1428	[6759]	TEST     	R86 0 ; if not R86 then PC := 1434
	1429	[6759]	JMP      	1434 ; PC := 1434
	1430	[6760]	GETGLOBAL	R86 K168 ; R86 := mHover
	1431	[6760]	SETTABLE 	R86 K202 K43 ; R86["Region"] := nil
	1432	[6761]	GETGLOBAL	R86 K168 ; R86 := mHover
	1433	[6761]	SETTABLE 	R86 K203 K43 ; R86["RegionLabel"] := nil
	1434	[6765]	GETGLOBAL	R86 K1 ; R86 := 0x7b998233
	1435	[6765]	GETUPVAL 	R87 U38 ; R87 := U38
	1436	[6765]	CALL     	R86 2 2 ; R86 := R86(R87)
	1437	[6765]	TEST     	R86 1 ; if R86 then PC := 1441
	1438	[6765]	JMP      	1441 ; PC := 1441
	1439	[6766]	GETUPVAL 	R86 U38 ; R86 := U38
	1440	[6766]	CALL     	R86 1 1 ; R86()
	1441	[6768]	RETURN   	R0 1 ; return 

function #135 <?:6770,6855> (235 instructions, 940 bytes at 0000021120AFD9B0)
3 params, 10 slots, 11 upvalues, 0 locals, 53 constants, 1 function
	1	[6771]	TEST     	R0 1 ; if R0 then PC := 106
	2	[6771]	JMP      	106 ; PC := 106
	3	[6772]	GETGLOBAL	R3 K0 ; R3 := mInputBlocked
	4	[6772]	TEST     	R3 0 ; if not R3 then PC := 7
	5	[6772]	JMP      	7 ; PC := 7
	6	[6773]	RETURN   	R0 1 ; return 
	7	[6776]	GETUPVAL 	R3 U0 ; R3 := U0
	8	[6776]	GETTABLE 	R3 R3 K1 ; R3 := R3["Open"]
	9	[6776]	TEST     	R3 1 ; if R3 then PC := 15
	10	[6776]	JMP      	15 ; PC := 15
	11	[6776]	GETUPVAL 	R3 U0 ; R3 := U0
	12	[6776]	GETTABLE 	R3 R3 K2 ; R3 := R3["DioOpen"]
	13	[6776]	TEST     	R3 0 ; if not R3 then PC := 28
	14	[6776]	JMP      	28 ; PC := 28
	15	[6776]	GETGLOBAL	R3 K3 ; R3 := 0x7b998233
	16	[6776]	GETUPVAL 	R4 U0 ; R4 := U0
	17	[6776]	GETTABLE 	R4 R4 K4 ; R4 := R4["Movie"]
	18	[6776]	CALL     	R3 2 2 ; R3 := R3(R4)
	19	[6776]	TEST     	R3 1 ; if R3 then PC := 28
	20	[6776]	JMP      	28 ; PC := 28
	21	[6777]	GETUPVAL 	R3 U0 ; R3 := U0
	22	[6777]	GETTABLE 	R3 R3 K4 ; R3 := R3["Movie"]
	23	[6777]	SELF     	R3 R3 K5 ; R4 := R3; R3 := R3[0xe4162eed]
	24	[6777]	LOADK    	R5 K6 ; R5 := "CancelPressed"
	25	[6777]	LOADK    	R6 K7 ; R6 := ""
	26	[6777]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	27	[6778]	RETURN   	R0 1 ; return 
	28	[6781]	GETGLOBAL	R3 K8 ; R3 := mInfoTip
	29	[6781]	GETTABLE 	R3 R3 K9 ; R3 := R3["NodeSelectionOpen"]
	30	[6781]	TEST     	R3 0 ; if not R3 then PC := 40
	31	[6781]	JMP      	40 ; PC := 40
	32	[6782]	GETGLOBAL	R3 K8 ; R3 := mInfoTip
	33	[6782]	GETTABLE 	R3 R3 K10 ; R3 := R3["NodeMissionList"]
	34	[6782]	SELF     	R3 R3 K11 ; R4 := R3; R3 := R3[0x368ad758]
	35	[6782]	OP_LOADBOOL	R5 0 0 ; R5 := false
	36	[6782]	CALL     	R3 3 1 ; R3(R4,R5)
	37	[6783]	GETUPVAL 	R3 U1 ; R3 := U1
	38	[6783]	CALL     	R3 1 1 ; R3()
	39	[6784]	RETURN   	R0 1 ; return 
	40	[6787]	GETGLOBAL	R3 K12 ; R3 := 0x34291f5c
	41	[6787]	GETTABLE 	R3 R3 K13 ; R3 := R3[0x1467d5f4]
	42	[6787]	CALL     	R3 1 2 ; R3 := R3()
	43	[6787]	TEST     	R3 0 ; if not R3 then PC := 66
	44	[6787]	JMP      	66 ; PC := 66
	45	[6787]	GETGLOBAL	R3 K3 ; R3 := 0x7b998233
	46	[6787]	GETUPVAL 	R4 U2 ; R4 := U2
	47	[6787]	GETTABLE 	R4 R4 K14 ; R4 := R4["ResourceDrone"]
	48	[6787]	CALL     	R3 2 2 ; R3 := R3(R4)
	49	[6787]	TEST     	R3 1 ; if R3 then PC := 66
	50	[6787]	JMP      	66 ; PC := 66
	51	[6787]	GETUPVAL 	R3 U2 ; R3 := U2
	52	[6787]	GETTABLE 	R3 R3 K14 ; R3 := R3["ResourceDrone"]
	53	[6787]	SELF     	R3 R3 K5 ; R4 := R3; R3 := R3[0xe4162eed]
	54	[6787]	LOADK    	R5 K15 ; R5 := "IsExpanded"
	55	[6787]	LOADK    	R6 K7 ; R6 := ""
	56	[6787]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	57	[6787]	TEST     	R3 0 ; if not R3 then PC := 66
	58	[6787]	JMP      	66 ; PC := 66
	59	[6788]	GETUPVAL 	R3 U2 ; R3 := U2
	60	[6788]	GETTABLE 	R3 R3 K14 ; R3 := R3["ResourceDrone"]
	61	[6788]	SELF     	R3 R3 K5 ; R4 := R3; R3 := R3[0xe4162eed]
	62	[6788]	LOADK    	R5 K16 ; R5 := "DroneInfoUnfocused"
	63	[6788]	LOADK    	R6 K7 ; R6 := ""
	64	[6788]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	65	[6789]	RETURN   	R0 1 ; return 
	66	[6792]	GETGLOBAL	R3 K3 ; R3 := 0x7b998233
	67	[6792]	GETGLOBAL	R4 K17 ; R4 := _T
	68	[6792]	GETTABLE 	R4 R4 K18 ; R4 := R4["SquadOverlay"]
	69	[6792]	CALL     	R3 2 2 ; R3 := R3(R4)
	70	[6792]	TEST     	R3 1 ; if R3 then PC := 81
	71	[6792]	JMP      	81 ; PC := 81
	72	[6792]	GETGLOBAL	R3 K17 ; R3 := _T
	73	[6792]	GETTABLE 	R3 R3 K18 ; R3 := R3["SquadOverlay"]
	74	[6792]	SELF     	R3 R3 K5 ; R4 := R3; R3 := R3[0xe4162eed]
	75	[6792]	LOADK    	R5 K19 ; R5 := "CancelMatchmakingDropdown"
	76	[6792]	LOADK    	R6 K7 ; R6 := ""
	77	[6792]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	78	[6792]	TEST     	R3 0 ; if not R3 then PC := 81
	79	[6792]	JMP      	81 ; PC := 81
	80	[6793]	RETURN   	R0 1 ; return 
	81	[6796]	GETUPVAL 	R3 U3 ; R3 := U3
	82	[6796]	GETUPVAL 	R4 U4 ; R4 := U4
	83	[6796]	GETTABLE 	R4 R4 K20 ; R4 := R4["READ_ONLY"]
	84	[6796]	EQ       	1 R3 R4 ; if R3 == R4 then PC := 91
	85	[6796]	JMP      	91 ; PC := 91
	86	[6797]	GETUPVAL 	R3 U5 ; R3 := U5
	87	[6797]	GETUPVAL 	R4 U4 ; R4 := U4
	88	[6797]	GETTABLE 	R4 R4 K20 ; R4 := R4["READ_ONLY"]
	89	[6797]	CALL     	R3 2 1 ; R3(R4)
	90	[6798]	RETURN   	R0 1 ; return 
	91	[6801]	GETGLOBAL	R3 K21 ; R3 := mSmoothZoom
	92	[6801]	GETTABLE 	R3 R3 K22 ; R3 := R3["mTargetVal"]
	93	[6801]	GETGLOBAL	R4 K23 ; R4 := Zoom
	94	[6801]	GETTABLE 	R4 R4 K24 ; R4 := R4["STARTING_ZOOM"]
	95	[6801]	EQ       	1 R3 R4 ; if R3 == R4 then PC := 103
	96	[6801]	JMP      	103 ; PC := 103
	97	[6802]	GETGLOBAL	R3 K25 ; R3 := 0xae91e43b
	98	[6802]	SELF     	R3 R3 K5 ; R4 := R3; R3 := R3[0xe4162eed]
	99	[6802]	LOADK    	R5 K26 ; R5 := "onKeyDown_MENU_RIGHT_CLICK"
	100	[6802]	LOADK    	R6 K7 ; R6 := ""
	101	[6802]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	102	[6803]	RETURN   	R0 1 ; return 
	103	[6806]	EQ       	0 R0 K27 ; if R0 ~= false then PC := 106
	104	[6806]	JMP      	106 ; PC := 106
	105	[6807]	RETURN   	R0 1 ; return 
	106	[6811]	GETGLOBAL	R3 K3 ; R3 := 0x7b998233
	107	[6811]	GETUPVAL 	R4 U0 ; R4 := U0
	108	[6811]	GETTABLE 	R4 R4 K4 ; R4 := R4["Movie"]
	109	[6811]	CALL     	R3 2 2 ; R3 := R3(R4)
	110	[6811]	TEST     	R3 1 ; if R3 then PC := 125
	111	[6811]	JMP      	125 ; PC := 125
	112	[6812]	GETGLOBAL	R3 K28 ; R3 := 0x25312c9b
	113	[6812]	GETUPVAL 	R4 U0 ; R4 := U0
	114	[6812]	GETTABLE 	R4 R4 K4 ; R4 := R4["Movie"]
	115	[6812]	LOADK    	R5 K29 ; R5 := "_root"
	116	[6812]	LOADK    	R6 := 0.000000
	117	[6812]	NEWTABLE 	R7 1 0 ; R7 := {}
	118	[6812]	LOADK    	R8 := 10.000000
	119	[6812]	SETLIST  	R7 1 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
	120	[6812]	NEWTABLE 	R8 1 0 ; R8 := {}
	121	[6812]	LOADK    	R9 := 0.000000
	122	[6812]	SETLIST  	R8 1 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
	123	[6812]	LOADK    	R9 K31 ; R9 := 0.300000
	124	[6812]	CALL     	R3 7 1 ; R3(R4,R5,R6,R7,R8,R9)
	125	[6815]	TEST     	R2 1 ; if R2 then PC := 131
	126	[6815]	JMP      	131 ; PC := 131
	127	[6816]	GETUPVAL 	R3 U6 ; R3 := U6
	128	[6816]	GETTABLE 	R3 R3 K32 ; R3 := R3[0x659d451f]
	129	[6816]	GETGLOBAL	R4 K33 ; R4 := 0xb607efe1
	130	[6816]	CALL     	R3 2 1 ; R3(R4)
	131	[6819]	GETUPVAL 	R3 U7 ; R3 := U7
	132	[6819]	MOVE     	R4 R2 ; R4 := R2
	133	[6819]	CALL     	R3 2 2 ; R3 := R3(R4)
	134	[6819]	TEST     	R3 0 ; if not R3 then PC := 148
	135	[6819]	JMP      	148 ; PC := 148
	136	[6820]	GETGLOBAL	R3 K3 ; R3 := 0x7b998233
	137	[6820]	GETGLOBAL	R4 K17 ; R4 := _T
	138	[6820]	GETTABLE 	R4 R4 K18 ; R4 := R4["SquadOverlay"]
	139	[6820]	CALL     	R3 2 2 ; R3 := R3(R4)
	140	[6820]	TEST     	R3 1 ; if R3 then PC := 148
	141	[6820]	JMP      	148 ; PC := 148
	142	[6821]	GETGLOBAL	R3 K17 ; R3 := _T
	143	[6821]	GETTABLE 	R3 R3 K18 ; R3 := R3["SquadOverlay"]
	144	[6821]	SELF     	R3 R3 K5 ; R4 := R3; R3 := R3[0xe4162eed]
	145	[6821]	LOADK    	R5 K34 ; R5 := "ForceExitMap"
	146	[6821]	LOADK    	R6 K7 ; R6 := ""
	147	[6821]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	148	[6825]	GETGLOBAL	R3 K17 ; R3 := _T
	149	[6825]	GETTABLE 	R3 R3 K35 ; R3 := R3[0x80172c74]
	150	[6825]	CALL     	R3 1 1 ; R3()
	151	[6827]	OP_LOADBOOL	R3 1 0 ; R3 := true
	152	[6827]	SETGLOBALHASH	R3 K0 ; mInputBlocked := R3
	153	[6829]	GETGLOBAL	R3 K3 ; R3 := 0x7b998233
	154	[6829]	GETGLOBAL	R4 K36 ; R4 := mDrag
	155	[6829]	CALL     	R3 2 2 ; R3 := R3(R4)
	156	[6829]	TEST     	R3 1 ; if R3 then PC := 168
	157	[6829]	JMP      	168 ; PC := 168
	158	[6830]	GETGLOBAL	R3 K36 ; R3 := mDrag
	159	[6830]	SELF     	R3 R3 K37 ; R4 := R3; R3 := R3[0x4c4f8717]
	160	[6830]	LOADK    	R5 K38 ; R5 := "x"
	161	[6830]	LOADK    	R6 := 0.500000
	162	[6830]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	163	[6831]	GETGLOBAL	R3 K36 ; R3 := mDrag
	164	[6831]	SELF     	R3 R3 K37 ; R4 := R3; R3 := R3[0x4c4f8717]
	165	[6831]	LOADK    	R5 K39 ; R5 := "y"
	166	[6831]	LOADK    	R6 := 0.500000
	167	[6831]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	168	[6834]	GETGLOBAL	R3 K3 ; R3 := 0x7b998233
	169	[6834]	GETUPVAL 	R4 U8 ; R4 := U8
	170	[6834]	CALL     	R3 2 2 ; R3 := R3(R4)
	171	[6834]	TEST     	R3 1 ; if R3 then PC := 199
	172	[6834]	JMP      	199 ; PC := 199
	173	[6835]	GETGLOBAL	R3 K40 ; R3 := mPlayerPos
	174	[6835]	SETTABLE 	R3 K41 K42 ; R3["Locked"] := true
	175	[6836]	GETGLOBAL	R3 K40 ; R3 := mPlayerPos
	176	[6836]	GETUPVAL 	R4 U8 ; R4 := U8
	177	[6836]	SELF     	R4 R4 K44 ; R5 := R4; R4 := R4[0xd1586535]
	178	[6836]	CALL     	R4 2 2 ; R4 := R4(R5)
	179	[6836]	SETTABLE 	R3 K43 R4 ; R3["Previous"] := R4
	180	[6837]	GETGLOBAL	R3 K40 ; R3 := mPlayerPos
	181	[6837]	GETUPVAL 	R4 U9 ; R4 := U9
	182	[6837]	GETGLOBAL	R5 K46 ; R5 := 0xa421af95
	183	[6837]	LOADK    	R6 := 0.000000
	184	[6837]	LOADK    	R7 := 0.000000
	185	[6837]	LOADK    	R8 := 35.000000
	186	[6837]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	187	[6837]	ADD      	R4 R4 R5 ; R4 := R4 + R5
	188	[6837]	SETTABLE 	R3 K45 R4 ; R3["Target"] := R4
	189	[6838]	GETGLOBAL	R3 K40 ; R3 := mPlayerPos
	190	[6838]	GETTABLE 	R3 R3 K47 ; R3 := R3["Prop"]
	191	[6838]	SELF     	R3 R3 K48 ; R4 := R3; R3 := R3[0xd0f998cd]
	192	[6838]	LOADK    	R5 := 0.000000
	193	[6838]	CALL     	R3 3 1 ; R3(R4,R5)
	194	[6839]	GETGLOBAL	R3 K40 ; R3 := mPlayerPos
	195	[6839]	GETTABLE 	R3 R3 K47 ; R3 := R3["Prop"]
	196	[6839]	SELF     	R3 R3 K49 ; R4 := R3; R3 := R3[0x188e2bee]
	197	[6839]	LOADK    	R5 := 1.000000
	198	[6839]	CALL     	R3 3 1 ; R3(R4,R5)
	199	[6842]	GETGLOBAL	R3 K21 ; R3 := mSmoothZoom
	200	[6842]	SELF     	R3 R3 K49 ; R4 := R3; R3 := R3[0x188e2bee]
	201	[6842]	LOADK    	R5 := -100.000000
	202	[6842]	CALL     	R3 3 1 ; R3(R4,R5)
	203	[6843]	TEST     	R1 0 ; if not R1 then PC := 212
	204	[6843]	JMP      	212 ; PC := 212
	205	[6844]	GETGLOBAL	R3 K50 ; R3 := 0x9ba7909f
	206	[6844]	SELF     	R3 R3 K51 ; R4 := R3; R3 := R3[0xb21930e8]
	207	[6844]	CALL     	R3 2 1 ; R3(R4)
	208	[6845]	GETUPVAL 	R3 U10 ; R3 := U10
	209	[6845]	MOVE     	R4 R2 ; R4 := R2
	210	[6845]	CALL     	R3 2 1 ; R3(R4)
	211	[6845]	JMP      	235 ; PC := 235
	212	[6847]	GETGLOBAL	R3 K28 ; R3 := 0x25312c9b
	213	[6847]	GETGLOBAL	R4 K25 ; R4 := 0xae91e43b
	214	[6847]	LOADK    	R5 K29 ; R5 := "_root"
	215	[6847]	LOADK    	R6 := 0.000000
	216	[6847]	NEWTABLE 	R7 1 0 ; R7 := {}
	217	[6847]	LOADK    	R8 := 10.000000
	218	[6847]	SETLIST  	R7 1 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
	219	[6847]	NEWTABLE 	R8 1 0 ; R8 := {}
	220	[6847]	LOADK    	R9 := 0.000000
	221	[6847]	SETLIST  	R8 1 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
	222	[6847]	LOADK    	R9 K31 ; R9 := 0.300000
	223	[6847]	CALL     	R3 7 1 ; R3(R4,R5,R6,R7,R8,R9)
	224	[6848]	GETUPVAL 	R3 U6 ; R3 := U6
	225	[6848]	GETTABLE 	R3 R3 K52 ; R3 := R3[0x4c232afc]
	226	[6848]	GETGLOBAL	R4 K25 ; R4 := 0xae91e43b
	227	[6848]	LOADK    	R5 := 1.000000
	228	[6848]	LOADK    	R6 K31 ; R6 := 0.300000
	229	[6848]	LOADK    	R7 := 0.000000
	230	[6853]	CLOSURE  	R8 0 ; R8 := closure(Function #1)
	231	[6853]	GETUPVAL 	R0 U10 ; R0 := U10
	232	[6853]	MOVE     	R0 R2 ; R0 := R2
	233	[6853]	GETUPVAL 	R0 U6 ; R0 := U6
	234	[6848]	CALL     	R3 6 1 ; R3(R4,R5,R6,R7,R8)
	235	[6855]	RETURN   	R0 1 ; return 

function #136 <?:6857,6859> (23 instructions, 92 bytes at 0000021120AFE720)
3 params, 7 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[6858]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[6858]	EQ       	1 R0 K0 ; if R0 == "true" then PC := 13
	3	[6858]	JMP      	13 ; PC := 13
	4	[6858]	GETGLOBAL	R4 K1 ; R4 := _T
	5	[6858]	GETTABLE 	R4 R4 K2 ; R4 := R4["SCREEN_EXIT_REASON_FORCE_CLOSE"]
	6	[6858]	EQ       	1 R0 R4 ; if R0 == R4 then PC := 13
	7	[6858]	JMP      	13 ; PC := 13
	8	[6858]	GETGLOBAL	R4 K1 ; R4 := _T
	9	[6858]	GETTABLE 	R4 R4 K3 ; R4 := R4["SCREEN_EXIT_REASON_TELEPORT_TO_CONSOLE"]
	10	[6858]	EQ       	1 R0 R4 ; if R0 == R4 then PC := 13
	11	[6858]	JMP      	13 ; PC := 13
	12	[6858]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 13
	13	[6858]	OP_LOADBOOL	R4 1 0 ; R4 := true
	14	[6858]	EQ       	1 R1 K0 ; if R1 == "true" then PC := 17
	15	[6858]	JMP      	17 ; PC := 17
	16	[6858]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 17
	17	[6858]	OP_LOADBOOL	R5 1 0 ; R5 := true
	18	[6858]	EQ       	1 R2 K0 ; if R2 == "true" then PC := 21
	19	[6858]	JMP      	21 ; PC := 21
	20	[6858]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 21
	21	[6858]	OP_LOADBOOL	R6 1 0 ; R6 := true
	22	[6858]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	23	[6859]	RETURN   	R0 1 ; return 

function #137 <?:6861,6873> (17 instructions, 68 bytes at 0000021120AFE8E0)
2 params, 11 slots, 0 upvalues, 0 locals, 2 constants, 0 functions
	1	[6862]	LOADK    	R2 := 1.000000
	2	[6863]	LOADK    	R3 K0 ; R3 := 100000.000000
	3	[6865]	LOADK    	R4 := 1.000000
	4	[6865]	LEN      	R5 R0 ; R5 := # R0
	5	[6865]	LOADK    	R6 := 1.000000
	6	[6865]	FORPREP  	R4 15 ; R4 -= R6; PC := 15
	7	[6866]	GETGLOBAL	R8 K1 ; R8 := 0x03ea2485
	8	[6866]	GETTABLE 	R9 R0 R7 ; R9 := R0[R7]
	9	[6866]	MOVE     	R10 R1 ; R10 := R1
	10	[6866]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	11	[6867]	LT       	0 R8 R3 ; if R8 >= R3 then PC := 15
	12	[6867]	JMP      	15 ; PC := 15
	13	[6868]	MOVE     	R3 R8 ; R3 := R8
	14	[6869]	MOVE     	R2 R7 ; R2 := R7
	15	[6865]	FORLOOP  	R4 7 ; R4 += R6; if R4 <= R5 then begin PC := 7; R7 := R4 end
	16	[6872]	RETURN   	R2 2 ; return R2 
	17	[6873]	RETURN   	R0 1 ; return 

function #138 <?:6875,6923> (128 instructions, 512 bytes at 0000021120AFEA60)
0 params, 7 slots, 8 upvalues, 0 locals, 36 constants, 0 functions
	1	[6876]	GETGLOBAL	R0 K0 ; R0 := mInputBlocked
	2	[6876]	TEST     	R0 1 ; if R0 then PC := 13
	3	[6876]	JMP      	13 ; PC := 13
	4	[6876]	GETGLOBAL	R0 K1 ; R0 := 0x7b998233
	5	[6876]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	6	[6876]	CALL     	R0 2 2 ; R0 := R0(R1)
	7	[6876]	TEST     	R0 1 ; if R0 then PC := 13
	8	[6876]	JMP      	13 ; PC := 13
	9	[6876]	GETGLOBAL	R0 K3 ; R0 := mInfoTip
	10	[6876]	GETTABLE 	R0 R0 K4 ; R0 := R0["NodeSelectionOpen"]
	11	[6876]	TEST     	R0 0 ; if not R0 then PC := 14
	12	[6876]	JMP      	14 ; PC := 14
	13	[6877]	RETURN   	R0 1 ; return 
	14	[6881]	GETGLOBAL	R0 K5 ; R0 := 0x34291f5c
	15	[6881]	GETTABLE 	R0 R0 K6 ; R0 := R0[0xe6b41adb]
	16	[6881]	CALL     	R0 1 2 ; R0 := R0()
	17	[6881]	TEST     	R0 0 ; if not R0 then PC := 35
	18	[6881]	JMP      	35 ; PC := 35
	19	[6882]	GETUPVAL 	R0 U0 ; R0 := U0
	20	[6882]	SETTABLE 	R0 K7 K8 ; R0["isLMBDown"] := false
	21	[6883]	GETUPVAL 	R0 U1 ; R0 := U1
	22	[6883]	GETTABLE 	R0 R0 K9 ; R0 := R0["JunctionTasks"]
	23	[6883]	TEST     	R0 0 ; if not R0 then PC := 33
	24	[6883]	JMP      	33 ; PC := 33
	25	[6885]	GETUPVAL 	R0 U1 ; R0 := U1
	26	[6885]	GETTABLE 	R0 R0 K9 ; R0 := R0["JunctionTasks"]
	27	[6885]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0xe4162eed]
	28	[6885]	LOADK    	R2 K11 ; R2 := "EndDrag"
	29	[6885]	LOADK    	R3 K12 ; R3 := ""
	30	[6885]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	31	[6886]	GETUPVAL 	R0 U0 ; R0 := U0
	32	[6886]	SETTABLE 	R0 K13 K8 ; R0["JunctionDrag"] := false
	33	[6888]	GETUPVAL 	R0 U0 ; R0 := U0
	34	[6888]	SETTABLE 	R0 K14 K15 ; R0["mHandleMouseUp"] := true
	35	[6891]	GETUPVAL 	R0 U2 ; R0 := U2
	36	[6891]	GETTABLE 	R0 R0 K16 ; R0 := R0[0xfa9785e4]
	37	[6891]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	38	[6891]	CALL     	R0 2 2 ; R0 := R0(R1)
	39	[6892]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	40	[6892]	SELF     	R1 R1 K17 ; R2 := R1; R1 := R1[0x67bc869f]
	41	[6892]	LOADK    	R3 K18 ; R3 := "Reticle"
	42	[6892]	LOADK    	R4 := 0.000000
	43	[6892]	GETUPVAL 	R5 U2 ; R5 := U2
	44	[6892]	GETTABLE 	R5 R5 K19 ; R5 := R5[0x74a11ec6]
	45	[6892]	GETTABLE 	R6 R0 K20 ; R6 := R0["x"]
	46	[6892]	CALL     	R5 2 0 ; R5,... := R5(R6)
	47	[6892]	CALL     	R1 0 1 ; R1(R2,...)
	48	[6893]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	49	[6893]	SELF     	R1 R1 K17 ; R2 := R1; R1 := R1[0x67bc869f]
	50	[6893]	LOADK    	R3 K18 ; R3 := "Reticle"
	51	[6893]	LOADK    	R4 := 1.000000
	52	[6893]	GETUPVAL 	R5 U2 ; R5 := U2
	53	[6893]	GETTABLE 	R5 R5 K19 ; R5 := R5[0x74a11ec6]
	54	[6893]	GETTABLE 	R6 R0 K21 ; R6 := R0["y"]
	55	[6893]	CALL     	R5 2 0 ; R5,... := R5(R6)
	56	[6893]	CALL     	R1 0 1 ; R1(R2,...)
	57	[6895]	GETUPVAL 	R1 U3 ; R1 := U3
	58	[6895]	EQ       	1 R1 K22 ; if R1 == nil then PC := 64
	59	[6895]	JMP      	64 ; PC := 64
	60	[6896]	GETUPVAL 	R1 U3 ; R1 := U3
	61	[6896]	CALL     	R1 1 1 ; R1()
	62	[6897]	LOADNIL  	R1 R1 ; R1 := nil
	63	[6897]	SETUPVAL 	R1 U3 ; U3 := R1
	64	[6900]	GETUPVAL 	R1 U4 ; R1 := U4
	65	[6900]	TEST     	R1 1 ; if R1 then PC := 70
	66	[6900]	JMP      	70 ; PC := 70
	67	[6901]	GETGLOBAL	R1 K23 ; R1 := mDrag
	68	[6901]	SELF     	R1 R1 K24 ; R2 := R1; R1 := R1[0xcc5f3150]
	69	[6901]	CALL     	R1 2 1 ; R1(R2)
	70	[6904]	GETUPVAL 	R1 U5 ; R1 := U5
	71	[6904]	GETUPVAL 	R2 U6 ; R2 := U6
	72	[6904]	GETTABLE 	R2 R2 K25 ; R2 := R2["EDIT_REGIONS"]
	73	[6904]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 85
	74	[6904]	JMP      	85 ; PC := 85
	75	[6904]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	76	[6904]	GETUPVAL 	R2 U7 ; R2 := U7
	77	[6904]	GETTABLE 	R2 R2 K26 ; R2 := R2["mMovingRegion"]
	78	[6904]	CALL     	R1 2 2 ; R1 := R1(R2)
	79	[6904]	TEST     	R1 1 ; if R1 then PC := 85
	80	[6904]	JMP      	85 ; PC := 85
	81	[6905]	GETUPVAL 	R1 U7 ; R1 := U7
	82	[6905]	SETTABLE 	R1 K26 K22 ; R1["mMovingRegion"] := nil
	83	[6906]	GETUPVAL 	R1 U7 ; R1 := U7
	84	[6906]	SETTABLE 	R1 K27 K22 ; R1["mChildNodes"] := nil
	85	[6909]	GETUPVAL 	R1 U5 ; R1 := U5
	86	[6909]	GETUPVAL 	R2 U6 ; R2 := U6
	87	[6909]	GETTABLE 	R2 R2 K28 ; R2 := R2["EDIT_NODES"]
	88	[6909]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 98
	89	[6909]	JMP      	98 ; PC := 98
	90	[6909]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	91	[6909]	GETUPVAL 	R2 U7 ; R2 := U7
	92	[6909]	GETTABLE 	R2 R2 K29 ; R2 := R2["mMovingNode"]
	93	[6909]	CALL     	R1 2 2 ; R1 := R1(R2)
	94	[6909]	TEST     	R1 1 ; if R1 then PC := 98
	95	[6909]	JMP      	98 ; PC := 98
	96	[6910]	GETUPVAL 	R1 U7 ; R1 := U7
	97	[6910]	SETTABLE 	R1 K29 K22 ; R1["mMovingNode"] := nil
	98	[6913]	GETUPVAL 	R1 U5 ; R1 := U5
	99	[6913]	GETUPVAL 	R2 U6 ; R2 := U6
	100	[6913]	GETTABLE 	R2 R2 K30 ; R2 := R2["EDIT_NODE_DECOS"]
	101	[6913]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 117
	102	[6913]	JMP      	117 ; PC := 117
	103	[6913]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	104	[6913]	GETUPVAL 	R2 U7 ; R2 := U7
	105	[6913]	GETTABLE 	R2 R2 K29 ; R2 := R2["mMovingNode"]
	106	[6913]	CALL     	R1 2 2 ; R1 := R1(R2)
	107	[6913]	TEST     	R1 1 ; if R1 then PC := 117
	108	[6913]	JMP      	117 ; PC := 117
	109	[6914]	GETUPVAL 	R1 U7 ; R1 := U7
	110	[6914]	SETTABLE 	R1 K29 K22 ; R1["mMovingNode"] := nil
	111	[6915]	GETUPVAL 	R1 U7 ; R1 := U7
	112	[6915]	SETTABLE 	R1 K31 K8 ; R1["mEditingOffset"] := false
	113	[6916]	GETUPVAL 	R1 U7 ; R1 := U7
	114	[6916]	SETTABLE 	R1 K32 K8 ; R1["mEditingRotation"] := false
	115	[6917]	GETUPVAL 	R1 U7 ; R1 := U7
	116	[6917]	SETTABLE 	R1 K33 K8 ; R1["mEditingScale"] := false
	117	[6920]	GETUPVAL 	R1 U5 ; R1 := U5
	118	[6920]	GETUPVAL 	R2 U6 ; R2 := U6
	119	[6920]	GETTABLE 	R2 R2 K34 ; R2 := R2["EDIT_SHORTCUT_CONTROL_POINTS"]
	120	[6920]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 128
	121	[6920]	JMP      	128 ; PC := 128
	122	[6920]	GETUPVAL 	R1 U7 ; R1 := U7
	123	[6920]	GETTABLE 	R1 R1 K35 ; R1 := R1["mControlPointHeld"]
	124	[6920]	TEST     	R1 0 ; if not R1 then PC := 128
	125	[6920]	JMP      	128 ; PC := 128
	126	[6921]	GETUPVAL 	R1 U7 ; R1 := U7
	127	[6921]	SETTABLE 	R1 K35 K8 ; R1["mControlPointHeld"] := false
	128	[6923]	RETURN   	R0 1 ; return 

function #139 <?:6925,6927> (4 instructions, 16 bytes at 0000021120AFF190)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6926]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[6926]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[6926]	RETURN   	R0 0 ; return R0,... 
	4	[6927]	RETURN   	R0 1 ; return 

function #140 <?:6929,6949> (5 instructions, 20 bytes at 0000021120AFF260)
2 params, 5 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[6948]	GETTABLE 	R2 R1 K0 ; R2 := R1["x"]
	2	[6948]	GETTABLE 	R3 R1 K1 ; R3 := R1["y"]
	3	[6948]	GETTABLE 	R4 R1 K2 ; R4 := R1["z"]
	4	[6948]	RETURN   	R2 4 ; return R2, R3, R4 
	5	[6949]	RETURN   	R0 1 ; return 

function #141 <?:6951,6974> (50 instructions, 200 bytes at 0000021120AFF390)
1 param, 11 slots, 0 upvalues, 0 locals, 15 constants, 0 functions
	1	[6952]	GETTABLE 	R1 R0 K0 ; R1 := R0["position"]
	2	[6953]	GETGLOBAL	R2 K1 ; R2 := 0xa421af95
	3	[6953]	GETTABLE 	R3 R1 K2 ; R3 := R1["x"]
	4	[6953]	GETTABLE 	R4 R1 K3 ; R4 := R1["y"]
	5	[6953]	GETTABLE 	R5 R1 K4 ; R5 := R1["z"]
	6	[6953]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	7	[6955]	LOADNIL  	R3 R3 ; R3 := nil
	8	[6956]	LOADK    	R4 := 1.000000
	9	[6956]	GETGLOBAL	R5 K5 ; R5 := mRegions
	10	[6956]	LEN      	R5 R5 ; R5 := # R5
	11	[6956]	LOADK    	R6 := 1.000000
	12	[6956]	FORPREP  	R4 20 ; R4 -= R6; PC := 20
	13	[6957]	GETTABLE 	R8 R0 K6 ; R8 := R0["radialSector"]
	14	[6957]	GETTABLE 	R8 R8 K7 ; R8 := R8["region"]
	15	[6957]	SUB      	R9 R7 K8 ; R9 := R7 - 1.000000
	16	[6957]	EQ       	0 R8 R9 ; if R8 ~= R9 then PC := 20
	17	[6957]	JMP      	20 ; PC := 20
	18	[6958]	GETGLOBAL	R8 K5 ; R8 := mRegions
	19	[6958]	GETTABLE 	R3 R8 R7 ; R3 := R8[R7]
	20	[6956]	FORLOOP  	R4 13 ; R4 += R6; if R4 <= R5 then begin PC := 13; R7 := R4 end
	21	[6962]	GETTABLE 	R8 R2 K2 ; R8 := R2["x"]
	22	[6962]	GETGLOBAL	R9 K9 ; R9 := dragScale
	23	[6962]	DIV      	R8 R8 R9 ; R8 := R8 / R9
	24	[6962]	SETTABLE 	R2 K2 R8 ; R2["x"] := R8
	25	[6963]	GETTABLE 	R8 R2 K3 ; R8 := R2["y"]
	26	[6963]	UNM      	R8 R8 ; R8 := ^ R8
	27	[6963]	GETGLOBAL	R9 K9 ; R9 := dragScale
	28	[6963]	DIV      	R8 R8 R9 ; R8 := R8 / R9
	29	[6963]	SETTABLE 	R2 K3 R8 ; R2["y"] := R8
	30	[6964]	EQ       	1 R3 K10 ; if R3 == nil then PC := 37
	31	[6964]	JMP      	37 ; PC := 37
	32	[6965]	GETTABLE 	R8 R3 K11 ; R8 := R3["zoomedFraming"]
	33	[6965]	GETTABLE 	R8 R8 K4 ; R8 := R8["z"]
	34	[6965]	ADD      	R8 R8 K12 ; R8 := R8 + 0.650000
	35	[6965]	SETTABLE 	R2 K4 R8 ; R2["z"] := R8
	36	[6965]	JMP      	38 ; PC := 38
	37	[6967]	SETTABLE 	R2 K4 K13 ; R2["z"] := 8.000000
	38	[6970]	GETTABLE 	R8 R2 K2 ; R8 := R2["x"]
	39	[6970]	MUL      	R8 R8 K14 ; R8 := R8 * 0.500000
	40	[6970]	ADD      	R8 R8 K14 ; R8 := R8 + 0.500000
	41	[6970]	SETTABLE 	R2 K2 R8 ; R2["x"] := R8
	42	[6971]	GETTABLE 	R8 R2 K3 ; R8 := R2["y"]
	43	[6971]	MUL      	R8 R8 K14 ; R8 := R8 * 0.500000
	44	[6971]	ADD      	R8 R8 K14 ; R8 := R8 + 0.500000
	45	[6971]	SETTABLE 	R2 K3 R8 ; R2["y"] := R8
	46	[6973]	GETTABLE 	R8 R2 K2 ; R8 := R2["x"]
	47	[6973]	GETTABLE 	R9 R2 K3 ; R9 := R2["y"]
	48	[6973]	GETTABLE 	R10 R2 K4 ; R10 := R2["z"]
	49	[6973]	RETURN   	R8 4 ; return R8, R9, R10 
	50	[6974]	RETURN   	R0 1 ; return 

function #142 <?:6976,6986> (14 instructions, 56 bytes at 0000021120AFF6E0)
0 params, 2 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[6977]	GETGLOBAL	R0 K0 ; R0 := mZoomedRegion
	2	[6977]	EQ       	1 R0 K1 ; if R0 == nil then PC := 14
	3	[6977]	JMP      	14 ; PC := 14
	4	[6978]	GETUPVAL 	R0 U0 ; R0 := U0
	5	[6978]	GETGLOBAL	R1 K0 ; R1 := mZoomedRegion
	6	[6978]	CALL     	R0 2 2 ; R0 := R0(R1)
	7	[6980]	GETGLOBAL	R1 K2 ; R1 := mZoomedSuper
	8	[6980]	EQ       	1 R1 R0 ; if R1 == R0 then PC := 14
	9	[6980]	JMP      	14 ; PC := 14
	10	[6980]	EQ       	1 R0 K1 ; if R0 == nil then PC := 14
	11	[6980]	JMP      	14 ; PC := 14
	12	[6981]	SETGLOBALHASH	R0 K2 ; mZoomedSuper := R0
	13	[6982]	JMP      	14 ; PC := 14
	14	[6986]	RETURN   	R0 1 ; return 

function #143 <?:6988,7047> (168 instructions, 672 bytes at 0000021120AFF850)
3 params, 16 slots, 8 upvalues, 0 locals, 52 constants, 0 functions
	1	[6989]	GETGLOBAL	R3 K0 ; R3 := mZoomedRegion
	2	[6989]	EQ       	0 R3 R0 ; if R3 ~= R0 then PC := 9
	3	[6989]	JMP      	9 ; PC := 9
	4	[6990]	TEST     	R1 0 ; if not R1 then PC := 8
	5	[6990]	JMP      	8 ; PC := 8
	6	[6991]	MOVE     	R3 R1 ; R3 := R1
	7	[6991]	CALL     	R3 1 1 ; R3()
	8	[6993]	RETURN   	R0 1 ; return 
	9	[6995]	GETUPVAL 	R3 U0 ; R3 := U0
	10	[6995]	MOVE     	R4 R0 ; R4 := R0
	11	[6995]	CALL     	R3 2 1 ; R3(R4)
	12	[6997]	GETUPVAL 	R3 U1 ; R3 := U1
	13	[6997]	CALL     	R3 1 1 ; R3()
	14	[6999]	GETUPVAL 	R3 U2 ; R3 := U2
	15	[6999]	MOVE     	R4 R0 ; R4 := R0
	16	[6999]	GETTABLE 	R5 R0 K1 ; R5 := R0["zoomedFraming"]
	17	[6999]	CALL     	R3 3 4 ; R3,R4,R5 := R3(R4,R5)
	18	[7000]	GETGLOBAL	R6 K2 ; R6 := mDrag
	19	[7000]	SELF     	R6 R6 K3 ; R7 := R6; R6 := R6[0x4c4f8717]
	20	[7000]	LOADK    	R8 K4 ; R8 := "x"
	21	[7000]	MOVE     	R9 R3 ; R9 := R3
	22	[7000]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	23	[7001]	GETGLOBAL	R6 K2 ; R6 := mDrag
	24	[7001]	SELF     	R6 R6 K3 ; R7 := R6; R6 := R6[0x4c4f8717]
	25	[7001]	LOADK    	R8 K5 ; R8 := "y"
	26	[7001]	MOVE     	R9 R4 ; R9 := R4
	27	[7001]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	28	[7004]	GETGLOBAL	R6 K6 ; R6 := 0x7b998233
	29	[7004]	MOVE     	R7 R2 ; R7 := R2
	30	[7004]	CALL     	R6 2 2 ; R6 := R6(R7)
	31	[7004]	TEST     	R6 0 ; if not R6 then PC := 38
	32	[7004]	JMP      	38 ; PC := 38
	33	[7005]	GETGLOBAL	R6 K7 ; R6 := mSmoothZoom
	34	[7005]	SELF     	R6 R6 K8 ; R7 := R6; R6 := R6[0x188e2bee]
	35	[7005]	MOVE     	R8 R5 ; R8 := R5
	36	[7005]	CALL     	R6 3 1 ; R6(R7,R8)
	37	[7006]	SETUPVAL 	R1 U3 ; U3 := R1
	38	[7009]	GETGLOBAL	R6 K9 ; R6 := mFxNodes
	39	[7009]	GETUPVAL 	R7 U4 ; R7 := U4
	40	[7009]	GETTABLE 	R7 R7 K11 ; R7 := R7[0x06d055f9]
	41	[7009]	GETGLOBAL	R8 K12 ; R8 := mVorsPrizeQuestActiveNode
	42	[7009]	LOADK    	R9 := 0.500000
	43	[7009]	LOADK    	R10 := 2.000000
	44	[7009]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	45	[7009]	SETTABLE 	R6 K10 R7 ; R6["NotificationTime"] := R7
	46	[7011]	GETUPVAL 	R6 U4 ; R6 := U4
	47	[7011]	GETTABLE 	R6 R6 K13 ; R6 := R6[0x659d451f]
	48	[7011]	GETGLOBAL	R7 K14 ; R7 := 0x4593b059
	49	[7011]	CALL     	R6 2 1 ; R6(R7)
	50	[7013]	GETUPVAL 	R6 U5 ; R6 := U5
	51	[7013]	CALL     	R6 1 1 ; R6()
	52	[7015]	GETGLOBAL	R6 K15 ; R6 := 0x88efc25e
	53	[7015]	GETTABLE 	R7 R0 K16 ; R7 := R0["zoomedInEffects"]
	54	[7015]	CALL     	R6 2 2 ; R6 := R6(R7)
	55	[7016]	GETGLOBAL	R7 K6 ; R7 := 0x7b998233
	56	[7016]	GETTABLE 	R8 R0 K17 ; R8 := R0["instance"]
	57	[7016]	CALL     	R7 2 2 ; R7 := R7(R8)
	58	[7016]	TEST     	R7 1 ; if R7 then PC := 70
	59	[7016]	JMP      	70 ; PC := 70
	60	[7016]	GETGLOBAL	R7 K6 ; R7 := 0x7b998233
	61	[7016]	MOVE     	R8 R6 ; R8 := R6
	62	[7016]	CALL     	R7 2 2 ; R7 := R7(R8)
	63	[7016]	TEST     	R7 1 ; if R7 then PC := 70
	64	[7016]	JMP      	70 ; PC := 70
	65	[7017]	GETTABLE 	R7 R0 K17 ; R7 := R0["instance"]
	66	[7017]	SELF     	R7 R7 K18 ; R8 := R7; R7 := R7[0x47901f07]
	67	[7017]	MOVE     	R9 R6 ; R9 := R6
	68	[7017]	GETGLOBAL	R10 K19 ; R10 := EMPTY_SYMBOL
	69	[7017]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	70	[7020]	GETUPVAL 	R7 U6 ; R7 := U6
	71	[7020]	GETTABLE 	R7 R7 K20 ; R7 := R7[1.000000]
	72	[7020]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x188e2bee]
	73	[7020]	GETTABLE 	R9 R0 K21 ; R9 := R0["color"]
	74	[7020]	GETTABLE 	R9 R9 K22 ; R9 := R9["red"]
	75	[7020]	CALL     	R7 3 1 ; R7(R8,R9)
	76	[7021]	GETUPVAL 	R7 U6 ; R7 := U6
	77	[7021]	GETTABLE 	R7 R7 K23 ; R7 := R7[2.000000]
	78	[7021]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x188e2bee]
	79	[7021]	GETTABLE 	R9 R0 K21 ; R9 := R0["color"]
	80	[7021]	GETTABLE 	R9 R9 K24 ; R9 := R9["green"]
	81	[7021]	CALL     	R7 3 1 ; R7(R8,R9)
	82	[7022]	GETUPVAL 	R7 U6 ; R7 := U6
	83	[7022]	GETTABLE 	R7 R7 K25 ; R7 := R7[3.000000]
	84	[7022]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x188e2bee]
	85	[7022]	GETTABLE 	R9 R0 K21 ; R9 := R0["color"]
	86	[7022]	GETTABLE 	R9 R9 K26 ; R9 := R9["blue"]
	87	[7022]	CALL     	R7 3 1 ; R7(R8,R9)
	88	[7024]	GETGLOBAL	R7 K27 ; R7 := _T
	89	[7024]	GETTABLE 	R7 R7 K28 ; R7 := R7["WareframeChallenge"]
	90	[7024]	TEST     	R7 0 ; if not R7 then PC := 95
	91	[7024]	JMP      	95 ; PC := 95
	92	[7025]	GETGLOBAL	R7 K27 ; R7 := _T
	93	[7025]	GETTABLE 	R7 R7 K28 ; R7 := R7["WareframeChallenge"]
	94	[7025]	SETTABLE 	R7 K29 R0 ; R7["selectedPlanet"] := R0
	95	[7028]	GETGLOBAL	R7 K27 ; R7 := _T
	96	[7028]	GETTABLE 	R7 R7 K30 ; R7 := R7["NemesisRegionTransmissionPlayed"]
	97	[7028]	TEST     	R7 1 ; if R7 then PC := 166
	98	[7028]	JMP      	166 ; PC := 166
	99	[7028]	GETGLOBAL	R7 K31 ; R7 := mRailJack
	100	[7028]	GETTABLE 	R7 R7 K32 ; R7 := R7["Active"]
	101	[7028]	TEST     	R7 1 ; if R7 then PC := 166
	102	[7028]	JMP      	166 ; PC := 166
	103	[7028]	GETGLOBAL	R7 K27 ; R7 := _T
	104	[7028]	GETTABLE 	R7 R7 K33 ; R7 := R7["CustomStarChartNodeFilter"]
	105	[7028]	EQ       	0 R7 K34 ; if R7 ~= nil then PC := 166
	106	[7028]	JMP      	166 ; PC := 166
	107	[7029]	GETGLOBAL	R7 K35 ; R7 := 0x25d99d89
	108	[7029]	SELF     	R7 R7 K36 ; R8 := R7; R7 := R7[0x600a0ad6]
	109	[7029]	CALL     	R7 2 2 ; R7 := R7(R8)
	110	[7030]	GETGLOBAL	R8 K6 ; R8 := 0x7b998233
	111	[7030]	MOVE     	R9 R7 ; R9 := R7
	112	[7030]	CALL     	R8 2 2 ; R8 := R8(R9)
	113	[7030]	TEST     	R8 1 ; if R8 then PC := 166
	114	[7030]	JMP      	166 ; PC := 166
	115	[7031]	GETTABLE 	R8 R7 K37 ; R8 := R7["mInfluenceNodes"]
	116	[7032]	LOADK    	R9 := 1.000000
	117	[7032]	LEN      	R10 R8 ; R10 := # R8
	118	[7032]	LOADK    	R11 := 1.000000
	119	[7032]	FORPREP  	R9 165 ; R9 -= R11; PC := 165
	120	[7033]	GETGLOBAL	R13 K38 ; R13 := mRadialSolarMap
	121	[7033]	SELF     	R13 R13 K39 ; R14 := R13; R13 := R13[0x5484bf3c]
	122	[7033]	GETTABLE 	R15 R8 R12 ; R15 := R8[R12]
	123	[7033]	GETTABLE 	R15 R15 K40 ; R15 := R15["mNode"]
	124	[7033]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	125	[7033]	GETTABLE 	R13 R13 K41 ; R13 := R13["name"]
	126	[7033]	GETTABLE 	R14 R0 K41 ; R14 := R0["name"]
	127	[7033]	EQ       	0 R13 R14 ; if R13 ~= R14 then PC := 165
	128	[7033]	JMP      	165 ; PC := 165
	129	[7034]	GETGLOBAL	R13 K42 ; R13 := 0x0032441c
	130	[7034]	GETGLOBAL	R14 K42 ; R14 := 0x0032441c
	131	[7034]	GETTABLE 	R14 R14 K43 ; R14 := R14["NemesisTauntCooldowns"]
	132	[7034]	TEST     	R14 1 ; if R14 then PC := 135
	133	[7034]	JMP      	135 ; PC := 135
	134	[7034]	NEWTABLE 	R14 0 0 ; R14 := {}
	135	[7034]	SETTABLE 	R13 K43 R14 ; R13["NemesisTauntCooldowns"] := R14
	136	[7035]	GETGLOBAL	R13 K42 ; R13 := 0x0032441c
	137	[7035]	GETTABLE 	R13 R13 K43 ; R13 := R13["NemesisTauntCooldowns"]
	138	[7035]	GETTABLE 	R13 R13 K44 ; R13 := R13["InfluenceRegion"]
	139	[7035]	TEST     	R13 0 ; if not R13 then PC := 150
	140	[7035]	JMP      	150 ; PC := 150
	141	[7035]	GETGLOBAL	R13 K42 ; R13 := 0x0032441c
	142	[7035]	GETTABLE 	R13 R13 K43 ; R13 := R13["NemesisTauntCooldowns"]
	143	[7035]	GETTABLE 	R13 R13 K44 ; R13 := R13["InfluenceRegion"]
	144	[7035]	ADD      	R13 R13 K45 ; R13 := R13 + 1200.000000
	145	[7035]	GETGLOBAL	R14 K46 ; R14 := 0xbe190284
	146	[7035]	SELF     	R14 R14 K47 ; R15 := R14; R14 := R14[0x715c5d7f]
	147	[7035]	CALL     	R14 2 2 ; R14 := R14(R15)
	148	[7035]	LT       	0 R13 R14 ; if R13 >= R14 then PC := 162
	149	[7035]	JMP      	162 ; PC := 162
	150	[7036]	GETUPVAL 	R13 U7 ; R13 := U7
	151	[7036]	GETTABLE 	R13 R13 K48 ; R13 := R13[0x9d3fe9c0]
	152	[7036]	GETGLOBAL	R14 K49 ; R14 := 0x0469f296
	153	[7036]	LOADK    	R15 K44 ; R15 := "InfluenceRegion"
	154	[7036]	CALL     	R14 2 0 ; R14,... := R14(R15)
	155	[7036]	CALL     	R13 0 1 ; R13(R14,...)
	156	[7037]	GETGLOBAL	R13 K42 ; R13 := 0x0032441c
	157	[7037]	GETTABLE 	R13 R13 K43 ; R13 := R13["NemesisTauntCooldowns"]
	158	[7037]	GETGLOBAL	R14 K46 ; R14 := 0xbe190284
	159	[7037]	SELF     	R14 R14 K47 ; R15 := R14; R14 := R14[0x715c5d7f]
	160	[7037]	CALL     	R14 2 2 ; R14 := R14(R15)
	161	[7037]	SETTABLE 	R13 K44 R14 ; R13["InfluenceRegion"] := R14
	162	[7039]	GETGLOBAL	R13 K27 ; R13 := _T
	163	[7039]	SETTABLE 	R13 K30 K50 ; R13["NemesisRegionTransmissionPlayed"] := true
	164	[7040]	JMP      	166 ; PC := 166
	165	[7032]	FORLOOP  	R9 120 ; R9 += R11; if R9 <= R10 then begin PC := 120; R12 := R9 end
	166	[7046]	GETGLOBAL	R13 K27 ; R13 := _T
	167	[7046]	SETTABLE 	R13 K51 R0 ; R13["StarChartSelectedRegion"] := R0
	168	[7047]	RETURN   	R0 1 ; return 

function #144 <?:7049,7115> (123 instructions, 492 bytes at 0000021120B002A0)
2 params, 23 slots, 5 upvalues, 0 locals, 40 constants, 2 functions
	1	[7050]	GETGLOBAL	R2 K0 ; R2 := mZoomedRegion
	2	[7050]	EQ       	0 R2 R0 ; if R2 ~= R0 then PC := 9
	3	[7050]	JMP      	9 ; PC := 9
	4	[7051]	TEST     	R1 0 ; if not R1 then PC := 8
	5	[7051]	JMP      	8 ; PC := 8
	6	[7052]	MOVE     	R2 R1 ; R2 := R1
	7	[7052]	CALL     	R2 1 1 ; R2()
	8	[7054]	RETURN   	R0 1 ; return 
	9	[7056]	GETUPVAL 	R2 U0 ; R2 := U0
	10	[7056]	MOVE     	R3 R0 ; R3 := R0
	11	[7056]	CALL     	R2 2 1 ; R2(R3)
	12	[7058]	GETUPVAL 	R2 U1 ; R2 := U1
	13	[7058]	CALL     	R2 1 1 ; R2()
	14	[7060]	GETGLOBAL	R2 K1 ; R2 := mFxNodes
	15	[7060]	GETUPVAL 	R3 U2 ; R3 := U2
	16	[7060]	GETTABLE 	R3 R3 K3 ; R3 := R3[0x06d055f9]
	17	[7060]	GETGLOBAL	R4 K4 ; R4 := mVorsPrizeQuestActiveNode
	18	[7060]	LOADK    	R5 := 0.500000
	19	[7060]	LOADK    	R6 := 2.000000
	20	[7060]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	21	[7060]	SETTABLE 	R2 K2 R3 ; R2["NotificationTime"] := R3
	22	[7062]	GETUPVAL 	R2 U3 ; R2 := U3
	23	[7062]	MOVE     	R3 R0 ; R3 := R0
	24	[7062]	GETTABLE 	R4 R0 K5 ; R4 := R0["zoomedFraming"]
	25	[7062]	CALL     	R2 3 4 ; R2,R3,R4 := R2(R3,R4)
	26	[7064]	GETGLOBAL	R5 K6 ; R5 := mDrag
	27	[7064]	GETTABLE 	R5 R5 K7 ; R5 := R5["mCurrentScroll"]
	28	[7064]	GETTABLE 	R5 R5 K8 ; R5 := R5["x"]
	29	[7065]	GETGLOBAL	R6 K6 ; R6 := mDrag
	30	[7065]	GETTABLE 	R6 R6 K7 ; R6 := R6["mCurrentScroll"]
	31	[7065]	GETTABLE 	R6 R6 K9 ; R6 := R6["y"]
	32	[7067]	GETUPVAL 	R7 U2 ; R7 := U2
	33	[7067]	GETTABLE 	R7 R7 K10 ; R7 := R7[0x91ed4068]
	34	[7067]	NEWTABLE 	R8 0 2 ; R8 := {}
	35	[7067]	SETTABLE 	R8 K11 R5 ; R8[0x42b04007] := R5
	36	[7067]	SETTABLE 	R8 K12 R6 ; R8["Y"] := R6
	37	[7067]	NEWTABLE 	R9 0 2 ; R9 := {}
	38	[7067]	SETTABLE 	R9 K11 R2 ; R9[0x42b04007] := R2
	39	[7067]	SETTABLE 	R9 K12 R3 ; R9["Y"] := R3
	40	[7067]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	41	[7068]	LOADK    	R8 := 0.000000
	42	[7069]	LOADK    	R9 := 0.000000
	43	[7071]	GETGLOBAL	R10 K13 ; R10 := mSmoothZoom
	44	[7071]	GETTABLE 	R10 R10 K14 ; R10 := R10["mCurVal"]
	45	[7072]	LT       	0 K15 R7 ; if 0.000000 >= R7 then PC := 54
	46	[7072]	JMP      	54 ; PC := 54
	47	[7072]	GETGLOBAL	R11 K16 ; R11 := 0x5bced4c4
	48	[7072]	GETTABLE 	R11 R11 K17 ; R11 := R11[0xb62ecfe0]
	49	[7072]	LOADK    	R12 := 1.500000
	50	[7072]	MUL      	R13 K18 R7 ; R13 := 4.000000 * R7
	51	[7072]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	52	[7072]	TEST     	R11 1 ; if R11 then PC := 55
	53	[7072]	JMP      	55 ; PC := 55
	54	[7072]	LOADK    	R11 := 0.000000
	55	[7073]	LOADK    	R12 := -2.000000
	56	[7096]	CLOSURE  	R13 0 ; R13 := closure(Function #1)
	57	[7096]	MOVE     	R0 R10 ; R0 := R10
	58	[7096]	MOVE     	R0 R12 ; R0 := R12
	59	[7096]	MOVE     	R0 R4 ; R0 := R4
	60	[7096]	MOVE     	R0 R8 ; R0 := R8
	61	[7096]	MOVE     	R0 R5 ; R0 := R5
	62	[7096]	MOVE     	R0 R2 ; R0 := R2
	63	[7096]	MOVE     	R0 R9 ; R0 := R9
	64	[7096]	MOVE     	R0 R6 ; R0 := R6
	65	[7096]	MOVE     	R0 R3 ; R0 := R3
	66	[7097]	OP_LOADBOOL	R14 1 0 ; R14 := true
	67	[7097]	SETGLOBALHASH	R14 K19 ; mInputBlocked := R14
	68	[7098]	GETGLOBAL	R14 K20 ; R14 := 0x25312c9b
	69	[7098]	GETGLOBAL	R15 K21 ; R15 := 0xae91e43b
	70	[7098]	LOADK    	R16 K22 ; R16 := "_root"
	71	[7098]	LOADK    	R17 := 0.000000
	72	[7098]	NEWTABLE 	R18 1 0 ; R18 := {}
	73	[7098]	MOVE     	R19 R13 ; R19 := R13
	74	[7098]	SETLIST  	R18 1 1 ; R18[(1-1)*FPF+i] := R(18+i), 1 <= i <= 1
	75	[7098]	NEWTABLE 	R19 1 0 ; R19 := {}
	76	[7098]	LOADK    	R20 := 1.000000
	77	[7098]	SETLIST  	R19 1 1 ; R19[(1-1)*FPF+i] := R(19+i), 1 <= i <= 1
	78	[7098]	MOVE     	R20 R11 ; R20 := R11
	79	[7098]	LOADK    	R21 := 0.000000
	80	[7104]	CLOSURE  	R22 1 ; R22 := closure(Function #2)
	81	[7104]	MOVE     	R0 R1 ; R0 := R1
	82	[7098]	CALL     	R14 9 1 ; R14(R15,R16,R17,R18,R19,R20,R21,R22)
	83	[7106]	GETUPVAL 	R14 U2 ; R14 := U2
	84	[7106]	GETTABLE 	R14 R14 K24 ; R14 := R14[0x659d451f]
	85	[7106]	GETGLOBAL	R15 K25 ; R15 := 0x00356c12
	86	[7106]	CALL     	R14 2 1 ; R14(R15)
	87	[7107]	GETUPVAL 	R14 U4 ; R14 := U4
	88	[7107]	GETTABLE 	R14 R14 K26 ; R14 := R14[1.000000]
	89	[7107]	SELF     	R14 R14 K27 ; R15 := R14; R14 := R14[0x188e2bee]
	90	[7107]	GETTABLE 	R16 R0 K28 ; R16 := R0["color"]
	91	[7107]	GETTABLE 	R16 R16 K29 ; R16 := R16["red"]
	92	[7107]	CALL     	R14 3 1 ; R14(R15,R16)
	93	[7108]	GETUPVAL 	R14 U4 ; R14 := U4
	94	[7108]	GETTABLE 	R14 R14 K30 ; R14 := R14[2.000000]
	95	[7108]	SELF     	R14 R14 K27 ; R15 := R14; R14 := R14[0x188e2bee]
	96	[7108]	GETTABLE 	R16 R0 K28 ; R16 := R0["color"]
	97	[7108]	GETTABLE 	R16 R16 K31 ; R16 := R16["green"]
	98	[7108]	CALL     	R14 3 1 ; R14(R15,R16)
	99	[7109]	GETUPVAL 	R14 U4 ; R14 := U4
	100	[7109]	GETTABLE 	R14 R14 K32 ; R14 := R14[3.000000]
	101	[7109]	SELF     	R14 R14 K27 ; R15 := R14; R14 := R14[0x188e2bee]
	102	[7109]	GETTABLE 	R16 R0 K28 ; R16 := R0["color"]
	103	[7109]	GETTABLE 	R16 R16 K33 ; R16 := R16["blue"]
	104	[7109]	CALL     	R14 3 1 ; R14(R15,R16)
	105	[7111]	GETGLOBAL	R14 K34 ; R14 := 0x88efc25e
	106	[7111]	GETTABLE 	R15 R0 K35 ; R15 := R0["zoomedInEffects"]
	107	[7111]	CALL     	R14 2 2 ; R14 := R14(R15)
	108	[7112]	GETGLOBAL	R15 K36 ; R15 := 0x7b998233
	109	[7112]	GETTABLE 	R16 R0 K37 ; R16 := R0["instance"]
	110	[7112]	CALL     	R15 2 2 ; R15 := R15(R16)
	111	[7112]	TEST     	R15 1 ; if R15 then PC := 123
	112	[7112]	JMP      	123 ; PC := 123
	113	[7112]	GETGLOBAL	R15 K36 ; R15 := 0x7b998233
	114	[7112]	MOVE     	R16 R14 ; R16 := R14
	115	[7112]	CALL     	R15 2 2 ; R15 := R15(R16)
	116	[7112]	TEST     	R15 1 ; if R15 then PC := 123
	117	[7112]	JMP      	123 ; PC := 123
	118	[7113]	GETTABLE 	R15 R0 K37 ; R15 := R0["instance"]
	119	[7113]	SELF     	R15 R15 K38 ; R16 := R15; R15 := R15[0x47901f07]
	120	[7113]	MOVE     	R17 R14 ; R17 := R14
	121	[7113]	GETGLOBAL	R18 K39 ; R18 := EMPTY_SYMBOL
	122	[7113]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	123	[7115]	RETURN   	R0 1 ; return 

function #145 <?:7117,7123> (18 instructions, 72 bytes at 0000021120B00EC0)
2 params, 8 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[7118]	GETGLOBAL	R2 K0 ; R2 := 0x3d106989
	2	[7118]	LOADK    	R3 K1 ; R3 := "OnEmblemReady("
	3	[7118]	GETGLOBAL	R4 K2 ; R4 := 0x64fb1586
	4	[7118]	MOVE     	R5 R0 ; R5 := R0
	5	[7118]	CALL     	R4 2 2 ; R4 := R4(R5)
	6	[7118]	LOADK    	R5 K3 ; R5 := ", "
	7	[7118]	MOVE     	R6 R1 ; R6 := R1
	8	[7118]	LOADK    	R7 K4 ; R7 := ")"
	9	[7118]	CONCAT   	R3 R3 R7 ; R3 := R3 .. R4 .. R5 .. R6 .. R7
	10	[7118]	CALL     	R2 2 1 ; R2(R3)
	11	[7120]	TEST     	R0 0 ; if not R0 then PC := 18
	12	[7120]	JMP      	18 ; PC := 18
	13	[7121]	GETGLOBAL	R2 K5 ; R2 := mInfoTip
	14	[7121]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0x8a71c110]
	15	[7121]	MOVE     	R4 R1 ; R4 := R1
	16	[7121]	GETGLOBAL	R5 K7 ; R5 := mHover
	17	[7121]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	18	[7123]	RETURN   	R0 1 ; return 

function #146 <?:7125,7127> (6 instructions, 24 bytes at 0000021120B010E0)
1 param, 5 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[7126]	GETGLOBAL	R1 K0 ; R1 := 0xbe190284
	2	[7126]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x8e07e77f]
	3	[7126]	MOVE     	R3 R0 ; R3 := R0
	4	[7126]	LOADK    	R4 K2 ; R4 := "OnEmblemReady"
	5	[7126]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	6	[7127]	RETURN   	R0 1 ; return 

function #147 <?:7129,7214> (337 instructions, 1348 bytes at 0000021120B01210)
1 param, 21 slots, 15 upvalues, 0 locals, 76 constants, 1 function
	1	[7130]	GETGLOBAL	R1 K0 ; R1 := mNodeAlphaValues
	2	[7130]	GETTABLE 	R1 R1 K1 ; R1 := R1["NodeLayerAlpha"]
	3	[7130]	GETGLOBAL	R2 K0 ; R2 := mNodeAlphaValues
	4	[7130]	GETTABLE 	R2 R2 K2 ; R2 := R2["MinNodeAlphaToClick"]
	5	[7130]	LE       	0 R1 R2 ; if R1 > R2 then PC := 8
	6	[7130]	JMP      	8 ; PC := 8
	7	[7131]	RETURN   	R0 1 ; return 
	8	[7134]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	9	[7134]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x91a24e4b]
	10	[7134]	LOADK    	R3 K5 ; R3 := "_root"
	11	[7134]	LOADK    	R4 := 25.000000
	12	[7134]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	13	[7135]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	14	[7135]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0x91a24e4b]
	15	[7135]	LOADK    	R4 K5 ; R4 := "_root"
	16	[7135]	LOADK    	R5 := 26.000000
	17	[7135]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	18	[7136]	LE       	0 R1 K6 ; if R1 > -1000.000000 then PC := 23
	19	[7136]	JMP      	23 ; PC := 23
	20	[7136]	LE       	0 R2 K6 ; if R2 > -1000.000000 then PC := 23
	21	[7136]	JMP      	23 ; PC := 23
	22	[7137]	RETURN   	R0 1 ; return 
	23	[7140]	GETGLOBAL	R3 K7 ; R3 := mHover
	24	[7140]	GETTABLE 	R3 R3 K8 ; R3 := R3["Node"]
	25	[7140]	EQ       	1 R3 K9 ; if R3 == nil then PC := 78
	26	[7140]	JMP      	78 ; PC := 78
	27	[7141]	GETGLOBAL	R3 K3 ; R3 := 0xae91e43b
	28	[7141]	SELF     	R3 R3 K10 ; R4 := R3; R3 := R3[0xf64b7262]
	29	[7141]	GETGLOBAL	R5 K7 ; R5 := mHover
	30	[7141]	GETTABLE 	R5 R5 K8 ; R5 := R5["Node"]
	31	[7141]	GETTABLE 	R5 R5 K11 ; R5 := R5["clipName"]
	32	[7141]	LOADK    	R6 K8 ; R6 := "Node"
	33	[7141]	LOADK    	R7 := 9.000000
	34	[7141]	GETGLOBAL	R8 K12 ; R8 := 0x0032441c
	35	[7141]	GETTABLE 	R8 R8 K13 ; R8 := R8["UIColor_White"]
	36	[7141]	CALL     	R3 6 1 ; R3(R4,R5,R6,R7,R8)
	37	[7142]	GETGLOBAL	R3 K3 ; R3 := 0xae91e43b
	38	[7142]	SELF     	R3 R3 K14 ; R4 := R3; R3 := R3[0xcd12f3f1]
	39	[7142]	GETGLOBAL	R5 K7 ; R5 := mHover
	40	[7142]	GETTABLE 	R5 R5 K8 ; R5 := R5["Node"]
	41	[7142]	GETTABLE 	R5 R5 K15 ; R5 := R5["labelIndex"]
	42	[7142]	LOADK    	R6 := 10.000000
	43	[7142]	GETUPVAL 	R7 U0 ; R7 := U0
	44	[7142]	GETGLOBAL	R8 K7 ; R8 := mHover
	45	[7142]	GETTABLE 	R8 R8 K8 ; R8 := R8["Node"]
	46	[7142]	CALL     	R7 2 0 ; R7,... := R7(R8)
	47	[7142]	CALL     	R3 0 1 ; R3(R4,...)
	48	[7143]	GETGLOBAL	R3 K7 ; R3 := mHover
	49	[7143]	GETTABLE 	R3 R3 K8 ; R3 := R3["Node"]
	50	[7143]	GETTABLE 	R3 R3 K16 ; R3 := R3["guildId"]
	51	[7143]	EQ       	1 R3 K9 ; if R3 == nil then PC := 58
	52	[7143]	JMP      	58 ; PC := 58
	53	[7143]	GETGLOBAL	R3 K7 ; R3 := mHover
	54	[7143]	GETTABLE 	R3 R3 K8 ; R3 := R3["Node"]
	55	[7143]	GETTABLE 	R3 R3 K17 ; R3 := R3["clanTier"]
	56	[7143]	EQ       	0 R3 K9 ; if R3 ~= nil then PC := 59
	57	[7143]	JMP      	59 ; PC := 59
	58	[7143]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 59
	59	[7143]	OP_LOADBOOL	R3 1 0 ; R3 := true
	60	[7144]	TEST     	R3 0 ; if not R3 then PC := 78
	61	[7144]	JMP      	78 ; PC := 78
	62	[7145]	GETGLOBAL	R4 K18 ; R4 := 0x25312c9b
	63	[7145]	GETGLOBAL	R5 K3 ; R5 := 0xae91e43b
	64	[7145]	GETGLOBAL	R6 K7 ; R6 := mHover
	65	[7145]	GETTABLE 	R6 R6 K8 ; R6 := R6["Node"]
	66	[7145]	GETTABLE 	R6 R6 K11 ; R6 := R6["clipName"]
	67	[7145]	LOADK    	R7 K19 ; R7 := ".Node.Container.Node"
	68	[7145]	CONCAT   	R6 R6 R7 ; R6 := R6 .. R7
	69	[7145]	LOADK    	R7 := 0.000000
	70	[7145]	NEWTABLE 	R8 1 0 ; R8 := {}
	71	[7145]	LOADK    	R9 K21 ; R9 := "_alpha"
	72	[7145]	SETLIST  	R8 1 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
	73	[7145]	NEWTABLE 	R9 1 0 ; R9 := {}
	74	[7145]	LOADK    	R10 := 0.000000
	75	[7145]	SETLIST  	R9 1 1 ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
	76	[7145]	LOADK    	R10 := 0.250000
	77	[7145]	CALL     	R4 7 1 ; R4(R5,R6,R7,R8,R9,R10)
	78	[7149]	GETUPVAL 	R4 U1 ; R4 := U1
	79	[7149]	GETTABLE 	R4 R4 R0 ; R4 := R4[R0]
	80	[7150]	OP_LOADBOOL	R5 0 0 ; R5 := false
	81	[7151]	GETGLOBAL	R6 K22 ; R6 := mPriorHoverNode
	82	[7151]	EQ       	0 R4 R6 ; if R4 ~= R6 then PC := 85
	83	[7151]	JMP      	85 ; PC := 85
	84	[7152]	OP_LOADBOOL	R5 1 0 ; R5 := true
	85	[7155]	GETGLOBAL	R6 K23 ; R6 := 0x7b998233
	86	[7155]	MOVE     	R7 R4 ; R7 := R4
	87	[7155]	CALL     	R6 2 2 ; R6 := R6(R7)
	88	[7155]	TEST     	R6 1 ; if R6 then PC := 337
	89	[7155]	JMP      	337 ; PC := 337
	90	[7155]	GETTABLE 	R6 R4 K24 ; R6 := R4["forceHover"]
	91	[7155]	TEST     	R6 1 ; if R6 then PC := 111
	92	[7155]	JMP      	111 ; PC := 111
	93	[7155]	GETTABLE 	R6 R4 K25 ; R6 := R4["locked"]
	94	[7155]	TEST     	R6 0 ; if not R6 then PC := 111
	95	[7155]	JMP      	111 ; PC := 111
	96	[7155]	GETUPVAL 	R6 U2 ; R6 := U2
	97	[7155]	GETUPVAL 	R7 U3 ; R7 := U3
	98	[7155]	GETTABLE 	R7 R7 K26 ; R7 := R7["EDIT_NODES"]
	99	[7155]	EQ       	1 R6 R7 ; if R6 == R7 then PC := 111
	100	[7155]	JMP      	111 ; PC := 111
	101	[7155]	GETUPVAL 	R6 U2 ; R6 := U2
	102	[7155]	GETUPVAL 	R7 U3 ; R7 := U3
	103	[7155]	GETTABLE 	R7 R7 K27 ; R7 := R7["EDIT_EDGES"]
	104	[7155]	EQ       	1 R6 R7 ; if R6 == R7 then PC := 111
	105	[7155]	JMP      	111 ; PC := 111
	106	[7155]	GETUPVAL 	R6 U2 ; R6 := U2
	107	[7155]	GETUPVAL 	R7 U3 ; R7 := U3
	108	[7155]	GETTABLE 	R7 R7 K28 ; R7 := R7["EDIT_NODE_DECOS"]
	109	[7155]	EQ       	0 R6 R7 ; if R6 ~= R7 then PC := 337
	110	[7155]	JMP      	337 ; PC := 337
	111	[7155]	GETTABLE 	R6 R4 K29 ; R6 := R4["locationEnabled"]
	112	[7155]	TEST     	R6 0 ; if not R6 then PC := 337
	113	[7155]	JMP      	337 ; PC := 337
	114	[7156]	GETGLOBAL	R6 K7 ; R6 := mHover
	115	[7156]	SETTABLE 	R6 K8 R4 ; R6["Node"] := R4
	116	[7158]	GETGLOBAL	R6 K23 ; R6 := 0x7b998233
	117	[7158]	GETGLOBAL	R7 K7 ; R7 := mHover
	118	[7158]	GETTABLE 	R7 R7 K8 ; R7 := R7["Node"]
	119	[7158]	CALL     	R6 2 2 ; R6 := R6(R7)
	120	[7158]	TEST     	R6 0 ; if not R6 then PC := 123
	121	[7158]	JMP      	123 ; PC := 123
	122	[7159]	RETURN   	R0 1 ; return 
	123	[7161]	GETGLOBAL	R6 K7 ; R6 := mHover
	124	[7161]	GETTABLE 	R6 R6 K8 ; R6 := R6["Node"]
	125	[7161]	GETTABLE 	R6 R6 K30 ; R6 := R6["radialSector"]
	126	[7161]	GETTABLE 	R6 R6 K31 ; R6 := R6["mission"]
	127	[7161]	GETTABLE 	R6 R6 K32 ; R6 := R6["missionType"]
	128	[7161]	EQ       	0 R6 K34 ; if R6 ~= 0.000000 then PC := 134
	129	[7161]	JMP      	134 ; PC := 134
	130	[7162]	GETUPVAL 	R6 U4 ; R6 := U4
	131	[7162]	GETGLOBAL	R7 K7 ; R7 := mHover
	132	[7162]	GETTABLE 	R7 R7 K8 ; R7 := R7["Node"]
	133	[7162]	CALL     	R6 2 1 ; R6(R7)
	134	[7165]	GETGLOBAL	R6 K7 ; R6 := mHover
	135	[7165]	GETTABLE 	R6 R6 K8 ; R6 := R6["Node"]
	136	[7165]	GETTABLE 	R6 R6 K35 ; R6 := R6["IsHomeNode"]
	137	[7165]	TEST     	R6 0 ; if not R6 then PC := 156
	138	[7165]	JMP      	156 ; PC := 156
	139	[7165]	GETGLOBAL	R6 K36 ; R6 := 0x25d99d89
	140	[7165]	SELF     	R6 R6 K37 ; R7 := R6; R6 := R6[0x21a1810f]
	141	[7165]	GETGLOBAL	R8 K7 ; R8 := mHover
	142	[7165]	GETTABLE 	R8 R8 K8 ; R8 := R8["Node"]
	143	[7165]	GETTABLE 	R8 R8 K38 ; R8 := R8["NodeIntro"]
	144	[7165]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	145	[7165]	TEST     	R6 1 ; if R6 then PC := 156
	146	[7165]	JMP      	156 ; PC := 156
	147	[7166]	GETGLOBAL	R6 K7 ; R6 := mHover
	148	[7166]	GETTABLE 	R6 R6 K8 ; R6 := R6["Node"]
	149	[7166]	GETUPVAL 	R7 U5 ; R7 := U5
	150	[7166]	SELF     	R7 R7 K40 ; R8 := R7; R7 := R7[0xbd2e96ea]
	151	[7166]	LOADK    	R9 := 2.000000
	152	[7169]	CLOSURE  	R10 0 ; R10 := closure(Function #1)
	153	[7169]	GETUPVAL 	R0 U6 ; R0 := U6
	154	[7166]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	155	[7169]	SETTABLE 	R6 K39 R7 ; R6["SeenTimer"] := R7
	156	[7172]	TEST     	R5 1 ; if R5 then PC := 163
	157	[7172]	JMP      	163 ; PC := 163
	158	[7173]	GETUPVAL 	R6 U7 ; R6 := U7
	159	[7173]	GETTABLE 	R6 R6 K41 ; R6 := R6[0x659d451f]
	160	[7173]	GETGLOBAL	R7 K12 ; R7 := 0x0032441c
	161	[7173]	GETTABLE 	R7 R7 K42 ; R7 := R7["UISound_Focus"]
	162	[7173]	CALL     	R6 2 1 ; R6(R7)
	163	[7176]	GETTABLE 	R6 R4 K16 ; R6 := R4["guildId"]
	164	[7176]	EQ       	1 R6 K9 ; if R6 == nil then PC := 169
	165	[7176]	JMP      	169 ; PC := 169
	166	[7176]	GETTABLE 	R6 R4 K17 ; R6 := R4["clanTier"]
	167	[7176]	EQ       	0 R6 K9 ; if R6 ~= nil then PC := 170
	168	[7176]	JMP      	170 ; PC := 170
	169	[7176]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 170
	170	[7176]	OP_LOADBOOL	R6 1 0 ; R6 := true
	171	[7177]	TEST     	R6 0 ; if not R6 then PC := 188
	172	[7177]	JMP      	188 ; PC := 188
	173	[7178]	GETGLOBAL	R7 K18 ; R7 := 0x25312c9b
	174	[7178]	GETGLOBAL	R8 K3 ; R8 := 0xae91e43b
	175	[7178]	GETTABLE 	R9 R4 K11 ; R9 := R4["clipName"]
	176	[7178]	LOADK    	R10 K19 ; R10 := ".Node.Container.Node"
	177	[7178]	CONCAT   	R9 R9 R10 ; R9 := R9 .. R10
	178	[7178]	LOADK    	R10 := 0.000000
	179	[7178]	NEWTABLE 	R11 1 0 ; R11 := {}
	180	[7178]	LOADK    	R12 K21 ; R12 := "_alpha"
	181	[7178]	SETLIST  	R11 1 1 ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 1
	182	[7178]	NEWTABLE 	R12 1 0 ; R12 := {}
	183	[7178]	LOADK    	R13 := 35.000000
	184	[7178]	SETLIST  	R12 1 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 1
	185	[7178]	LOADK    	R13 := 0.250000
	186	[7178]	CALL     	R7 7 1 ; R7(R8,R9,R10,R11,R12,R13)
	187	[7178]	JMP      	225 ; PC := 225
	188	[7179]	GETGLOBAL	R7 K43 ; R7 := _T
	189	[7179]	GETTABLE 	R7 R7 K44 ; R7 := R7["CustomStarChartNodeFilter"]
	190	[7179]	EQ       	1 R7 K9 ; if R7 == nil then PC := 209
	191	[7179]	JMP      	209 ; PC := 209
	192	[7180]	GETGLOBAL	R7 K3 ; R7 := 0xae91e43b
	193	[7180]	SELF     	R7 R7 K10 ; R8 := R7; R7 := R7[0xf64b7262]
	194	[7180]	GETTABLE 	R9 R4 K11 ; R9 := R4["clipName"]
	195	[7180]	LOADK    	R10 K8 ; R10 := "Node"
	196	[7180]	LOADK    	R11 := 9.000000
	197	[7180]	GETGLOBAL	R12 K12 ; R12 := 0x0032441c
	198	[7180]	GETTABLE 	R12 R12 K13 ; R12 := R12["UIColor_White"]
	199	[7180]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	200	[7181]	GETGLOBAL	R7 K3 ; R7 := 0xae91e43b
	201	[7181]	SELF     	R7 R7 K10 ; R8 := R7; R7 := R7[0xf64b7262]
	202	[7181]	GETTABLE 	R9 R4 K11 ; R9 := R4["clipName"]
	203	[7181]	LOADK    	R10 K45 ; R10 := "Name"
	204	[7181]	LOADK    	R11 := 9.000000
	205	[7181]	GETGLOBAL	R12 K12 ; R12 := 0x0032441c
	206	[7181]	GETTABLE 	R12 R12 K46 ; R12 := R12["UIColor_Yellow"]
	207	[7181]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	208	[7181]	JMP      	225 ; PC := 225
	209	[7183]	GETGLOBAL	R7 K3 ; R7 := 0xae91e43b
	210	[7183]	SELF     	R7 R7 K10 ; R8 := R7; R7 := R7[0xf64b7262]
	211	[7183]	GETTABLE 	R9 R4 K11 ; R9 := R4["clipName"]
	212	[7183]	LOADK    	R10 K8 ; R10 := "Node"
	213	[7183]	LOADK    	R11 := 9.000000
	214	[7183]	GETGLOBAL	R12 K12 ; R12 := 0x0032441c
	215	[7183]	GETTABLE 	R12 R12 K46 ; R12 := R12["UIColor_Yellow"]
	216	[7183]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	217	[7184]	GETGLOBAL	R7 K3 ; R7 := 0xae91e43b
	218	[7184]	SELF     	R7 R7 K10 ; R8 := R7; R7 := R7[0xf64b7262]
	219	[7184]	GETTABLE 	R9 R4 K11 ; R9 := R4["clipName"]
	220	[7184]	LOADK    	R10 K45 ; R10 := "Name"
	221	[7184]	LOADK    	R11 := 9.000000
	222	[7184]	GETGLOBAL	R12 K12 ; R12 := 0x0032441c
	223	[7184]	GETTABLE 	R12 R12 K46 ; R12 := R12["UIColor_Yellow"]
	224	[7184]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	225	[7187]	GETGLOBAL	R7 K47 ; R7 := 0x3d106989
	226	[7187]	LOADK    	R8 K48 ; R8 := "MapRedux::NodeRollOver "
	227	[7187]	GETGLOBAL	R9 K49 ; R9 := 0x64fb1586
	228	[7187]	GETTABLE 	R10 R4 K30 ; R10 := R4["radialSector"]
	229	[7187]	GETTABLE 	R10 R10 K50 ; R10 := R10["name"]
	230	[7187]	CALL     	R9 2 2 ; R9 := R9(R10)
	231	[7187]	LOADK    	R10 K51 ; R10 := " - "
	232	[7187]	GETGLOBAL	R11 K3 ; R11 := 0xae91e43b
	233	[7187]	SELF     	R11 R11 K52 ; R12 := R11; R11 := R11[0x42b04007]
	234	[7187]	GETGLOBAL	R13 K49 ; R13 := 0x64fb1586
	235	[7187]	GETTABLE 	R14 R4 K53 ; R14 := R4["locName"]
	236	[7187]	CALL     	R13 2 2 ; R13 := R13(R14)
	237	[7187]	OP_LOADBOOL	R14 0 0 ; R14 := false
	238	[7187]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	239	[7187]	CONCAT   	R8 R8 R11 ; R8 := R8 .. R9 .. R10 .. R11
	240	[7187]	CALL     	R7 2 1 ; R7(R8)
	241	[7189]	GETTABLE 	R7 R4 K30 ; R7 := R4["radialSector"]
	242	[7190]	GETTABLE 	R8 R7 K54 ; R8 := R7["keyChain"]
	243	[7192]	GETTABLE 	R9 R4 K55 ; R9 := R4["isJunction"]
	244	[7192]	TEST     	R9 0 ; if not R9 then PC := 262
	245	[7192]	JMP      	262 ; PC := 262
	246	[7192]	GETUPVAL 	R9 U8 ; R9 := U8
	247	[7192]	CALL     	R9 1 2 ; R9 := R9()
	248	[7192]	EQ       	0 R9 K34 ; if R9 ~= 0.000000 then PC := 262
	249	[7192]	JMP      	262 ; PC := 262
	250	[7193]	GETGLOBAL	R9 K43 ; R9 := _T
	251	[7193]	SETTABLE 	R9 K56 K9 ; R9["JunctionTasksRelayReconstruction"] := nil
	252	[7194]	GETGLOBAL	R9 K57 ; R9 := 0x34291f5c
	253	[7194]	GETTABLE 	R9 R9 K58 ; R9 := R9[0x781669d7]
	254	[7194]	CALL     	R9 1 2 ; R9 := R9()
	255	[7194]	TEST     	R9 1 ; if R9 then PC := 337
	256	[7194]	JMP      	337 ; PC := 337
	257	[7196]	GETUPVAL 	R9 U9 ; R9 := U9
	258	[7196]	MOVE     	R10 R4 ; R10 := R4
	259	[7196]	MOVE     	R11 R5 ; R11 := R5
	260	[7196]	CALL     	R9 3 1 ; R9(R10,R11)
	261	[7197]	JMP      	337 ; PC := 337
	262	[7198]	GETTABLE 	R9 R4 K59 ; R9 := R4["reconstructionProgress"]
	263	[7198]	TEST     	R9 0 ; if not R9 then PC := 298
	264	[7198]	JMP      	298 ; PC := 298
	265	[7198]	GETTABLE 	R9 R4 K59 ; R9 := R4["reconstructionProgress"]
	266	[7198]	EQ       	0 R9 K34 ; if R9 ~= 0.000000 then PC := 298
	267	[7198]	JMP      	298 ; PC := 298
	268	[7199]	GETTABLE 	R9 R4 K50 ; R9 := R4["name"]
	269	[7199]	SELF     	R9 R9 K60 ; R10 := R9; R9 := R9[0x6d604ba7]
	270	[7199]	CALL     	R9 2 2 ; R9 := R9(R10)
	271	[7200]	GETGLOBAL	R10 K61 ; R10 := 0x7f5022cf
	272	[7200]	GETTABLE 	R10 R10 K62 ; R10 := R10[0x1a94c9cc]
	273	[7200]	MOVE     	R11 R9 ; R11 := R9
	274	[7200]	LOADK    	R12 := 1.000000
	275	[7200]	GETGLOBAL	R13 K61 ; R13 := 0x7f5022cf
	276	[7200]	GETTABLE 	R13 R13 K63 ; R13 := R13[0xa5c556b9]
	277	[7200]	MOVE     	R14 R9 ; R14 := R9
	278	[7200]	LOADK    	R15 K64 ; R15 := "Rebuild"
	279	[7200]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	280	[7200]	SUB      	R13 R13 K65 ; R13 := R13 - 1.000000
	281	[7200]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	282	[7200]	MOVE     	R9 R10 ; R9 := R10
	283	[7201]	GETGLOBAL	R10 K43 ; R10 := _T
	284	[7201]	GETGLOBAL	R11 K66 ; R11 := mConstructionProjectNodes
	285	[7201]	GETTABLE 	R11 R11 R9 ; R11 := R11[R9]
	286	[7201]	GETTABLE 	R11 R11 K67 ; R11 := R11["info"]
	287	[7201]	SETTABLE 	R10 K56 R11 ; R10["JunctionTasksRelayReconstruction"] := R11
	288	[7202]	GETGLOBAL	R10 K57 ; R10 := 0x34291f5c
	289	[7202]	GETTABLE 	R10 R10 K58 ; R10 := R10[0x781669d7]
	290	[7202]	CALL     	R10 1 2 ; R10 := R10()
	291	[7202]	TEST     	R10 1 ; if R10 then PC := 337
	292	[7202]	JMP      	337 ; PC := 337
	293	[7204]	GETUPVAL 	R10 U9 ; R10 := U9
	294	[7204]	MOVE     	R11 R4 ; R11 := R4
	295	[7204]	MOVE     	R12 R5 ; R12 := R5
	296	[7204]	CALL     	R10 3 1 ; R10(R11,R12)
	297	[7205]	JMP      	337 ; PC := 337
	298	[7206]	GETUPVAL 	R10 U2 ; R10 := U2
	299	[7206]	GETUPVAL 	R11 U3 ; R11 := U3
	300	[7206]	GETTABLE 	R11 R11 K28 ; R11 := R11["EDIT_NODE_DECOS"]
	301	[7206]	EQ       	1 R10 R11 ; if R10 == R11 then PC := 337
	302	[7206]	JMP      	337 ; PC := 337
	303	[7206]	GETGLOBAL	R10 K68 ; R10 := mVisibleTags
	304	[7206]	TEST     	R10 0 ; if not R10 then PC := 337
	305	[7206]	JMP      	337 ; PC := 337
	306	[7206]	GETTABLE 	R10 R4 K24 ; R10 := R4["forceHover"]
	307	[7206]	TEST     	R10 1 ; if R10 then PC := 312
	308	[7206]	JMP      	312 ; PC := 312
	309	[7206]	GETTABLE 	R10 R4 K25 ; R10 := R4["locked"]
	310	[7206]	TEST     	R10 1 ; if R10 then PC := 337
	311	[7206]	JMP      	337 ; PC := 337
	312	[7206]	GETTABLE 	R10 R4 K69 ; R10 := R4["isShortcut"]
	313	[7206]	TEST     	R10 1 ; if R10 then PC := 337
	314	[7206]	JMP      	337 ; PC := 337
	315	[7207]	GETUPVAL 	R10 U10 ; R10 := U10
	316	[7207]	GETTABLE 	R10 R10 K71 ; R10 := R10[0x0e1d10ad]
	317	[7207]	GETGLOBAL	R11 K72 ; R11 := mInfoTip
	318	[7207]	MOVE     	R12 R4 ; R12 := R4
	319	[7207]	GETUPVAL 	R13 U11 ; R13 := U11
	320	[7207]	GETGLOBAL	R14 K73 ; R14 := mRailJack
	321	[7207]	GETUPVAL 	R15 U12 ; R15 := U12
	322	[7207]	GETGLOBAL	R16 K74 ; R16 := mCodexManifest
	323	[7207]	GETUPVAL 	R17 U13 ; R17 := U13
	324	[7207]	GETGLOBAL	R18 K7 ; R18 := mHover
	325	[7207]	MOVE     	R19 R5 ; R19 := R5
	326	[7207]	MOVE     	R20 R0 ; R20 := R0
	327	[7207]	CALL     	R10 11 2 ; R10 := R10(R11,R12,R13,R14,R15,R16,R17,R18,R19,R20)
	328	[7207]	SETGLOBALHASH	R10 K70 ; mMissionInfo := R10
	329	[7208]	GETGLOBAL	R10 K57 ; R10 := 0x34291f5c
	330	[7208]	GETTABLE 	R10 R10 K58 ; R10 := R10[0x781669d7]
	331	[7208]	CALL     	R10 1 2 ; R10 := R10()
	332	[7208]	TEST     	R10 1 ; if R10 then PC := 337
	333	[7208]	JMP      	337 ; PC := 337
	334	[7210]	GETUPVAL 	R10 U14 ; R10 := U14
	335	[7210]	GETTABLE 	R10 R10 K75 ; R10 := R10[0xc59bc2e0]
	336	[7210]	CALL     	R10 1 1 ; R10()
	337	[7214]	RETURN   	R0 1 ; return 

function #148 <?:7216,7275> (169 instructions, 676 bytes at 0000021138FC9E30)
1 param, 10 slots, 6 upvalues, 0 locals, 43 constants, 1 function
	1	[7217]	GETGLOBAL	R1 K0 ; R1 := mNodeAlphaValues
	2	[7217]	GETTABLE 	R1 R1 K1 ; R1 := R1["NodeLayerAlpha"]
	3	[7217]	GETGLOBAL	R2 K0 ; R2 := mNodeAlphaValues
	4	[7217]	GETTABLE 	R2 R2 K2 ; R2 := R2["MinNodeAlphaToClick"]
	5	[7217]	LE       	1 R1 R2 ; if R1 <= R2 then PC := 16
	6	[7217]	JMP      	16 ; PC := 16
	7	[7217]	GETGLOBAL	R1 K3 ; R1 := 0x7b998233
	8	[7217]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	9	[7217]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[7217]	TEST     	R1 1 ; if R1 then PC := 16
	11	[7217]	JMP      	16 ; PC := 16
	12	[7217]	GETGLOBAL	R1 K5 ; R1 := mInfoTip
	13	[7217]	GETTABLE 	R1 R1 K6 ; R1 := R1["NodeSelectionOpen"]
	14	[7217]	TEST     	R1 0 ; if not R1 then PC := 17
	15	[7217]	JMP      	17 ; PC := 17
	16	[7218]	RETURN   	R0 1 ; return 
	17	[7221]	GETGLOBAL	R1 K7 ; R1 := 0x34291f5c
	18	[7221]	GETTABLE 	R1 R1 K8 ; R1 := R1[0x781669d7]
	19	[7221]	CALL     	R1 1 2 ; R1 := R1()
	20	[7221]	TEST     	R1 0 ; if not R1 then PC := 27
	21	[7221]	JMP      	27 ; PC := 27
	22	[7221]	GETUPVAL 	R1 U0 ; R1 := U0
	23	[7221]	GETTABLE 	R1 R1 K9 ; R1 := R1["mNodeVisible"]
	24	[7221]	TEST     	R1 0 ; if not R1 then PC := 27
	25	[7221]	JMP      	27 ; PC := 27
	26	[7223]	RETURN   	R0 1 ; return 
	27	[7226]	GETGLOBAL	R1 K10 ; R1 := mHover
	28	[7226]	GETTABLE 	R1 R1 K11 ; R1 := R1["Node"]
	29	[7228]	GETGLOBAL	R2 K10 ; R2 := mHover
	30	[7228]	GETTABLE 	R2 R2 K11 ; R2 := R2["Node"]
	31	[7228]	SETGLOBALHASH	R2 K12 ; mPriorHoverNode := R2
	32	[7229]	GETGLOBAL	R2 K10 ; R2 := mHover
	33	[7229]	SETTABLE 	R2 K11 K13 ; R2["Node"] := nil
	34	[7231]	EQ       	1 R0 K13 ; if R0 == nil then PC := 42
	35	[7231]	JMP      	42 ; PC := 42
	36	[7231]	GETUPVAL 	R2 U1 ; R2 := U1
	37	[7231]	GETTABLE 	R2 R2 R0 ; R2 := R2[R0]
	38	[7231]	EQ       	1 R2 K13 ; if R2 == nil then PC := 42
	39	[7231]	JMP      	42 ; PC := 42
	40	[7232]	GETUPVAL 	R2 U1 ; R2 := U1
	41	[7232]	GETTABLE 	R1 R2 R0 ; R1 := R2[R0]
	42	[7235]	GETGLOBAL	R2 K3 ; R2 := 0x7b998233
	43	[7235]	GETGLOBAL	R3 K5 ; R3 := mInfoTip
	44	[7235]	GETTABLE 	R3 R3 K14 ; R3 := R3["mTransmissionStatus"]
	45	[7235]	GETTABLE 	R3 R3 K15 ; R3 := R3["Projector"]
	46	[7235]	CALL     	R2 2 2 ; R2 := R2(R3)
	47	[7235]	TEST     	R2 1 ; if R2 then PC := 55
	48	[7235]	JMP      	55 ; PC := 55
	49	[7236]	GETGLOBAL	R2 K16 ; R2 := 0x1211d00f
	50	[7236]	SELF     	R2 R2 K17 ; R3 := R2; R2 := R2[0x59c96e77]
	51	[7236]	GETGLOBAL	R4 K5 ; R4 := mInfoTip
	52	[7236]	GETTABLE 	R4 R4 K14 ; R4 := R4["mTransmissionStatus"]
	53	[7236]	GETTABLE 	R4 R4 K15 ; R4 := R4["Projector"]
	54	[7236]	CALL     	R2 3 1 ; R2(R3,R4)
	55	[7239]	GETGLOBAL	R2 K3 ; R2 := 0x7b998233
	56	[7239]	MOVE     	R3 R1 ; R3 := R1
	57	[7239]	CALL     	R2 2 2 ; R2 := R2(R3)
	58	[7239]	TEST     	R2 1 ; if R2 then PC := 169
	59	[7239]	JMP      	169 ; PC := 169
	60	[7240]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	61	[7240]	SELF     	R2 R2 K18 ; R3 := R2; R2 := R2[0xf64b7262]
	62	[7240]	GETTABLE 	R4 R1 K19 ; R4 := R1["clipName"]
	63	[7240]	LOADK    	R5 K11 ; R5 := "Node"
	64	[7240]	LOADK    	R6 := 9.000000
	65	[7240]	GETGLOBAL	R7 K20 ; R7 := 0x0032441c
	66	[7240]	GETTABLE 	R7 R7 K21 ; R7 := R7["UIColor_White"]
	67	[7240]	CALL     	R2 6 1 ; R2(R3,R4,R5,R6,R7)
	68	[7241]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	69	[7241]	SELF     	R2 R2 K18 ; R3 := R2; R2 := R2[0xf64b7262]
	70	[7241]	GETTABLE 	R4 R1 K19 ; R4 := R1["clipName"]
	71	[7241]	LOADK    	R5 K22 ; R5 := "Name"
	72	[7241]	LOADK    	R6 := 9.000000
	73	[7241]	GETGLOBAL	R7 K20 ; R7 := 0x0032441c
	74	[7241]	GETTABLE 	R7 R7 K21 ; R7 := R7["UIColor_White"]
	75	[7241]	CALL     	R2 6 1 ; R2(R3,R4,R5,R6,R7)
	76	[7242]	GETGLOBAL	R2 K7 ; R2 := 0x34291f5c
	77	[7242]	GETTABLE 	R2 R2 K23 ; R2 := R2[0xe6b41adb]
	78	[7242]	CALL     	R2 1 2 ; R2 := R2()
	79	[7242]	TEST     	R2 1 ; if R2 then PC := 89
	80	[7242]	JMP      	89 ; PC := 89
	81	[7243]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	82	[7243]	SELF     	R2 R2 K24 ; R3 := R2; R2 := R2[0xcd12f3f1]
	83	[7243]	GETTABLE 	R4 R1 K25 ; R4 := R1["labelIndex"]
	84	[7243]	LOADK    	R5 := 10.000000
	85	[7243]	GETUPVAL 	R6 U2 ; R6 := U2
	86	[7243]	MOVE     	R7 R1 ; R7 := R1
	87	[7243]	CALL     	R6 2 0 ; R6,... := R6(R7)
	88	[7243]	CALL     	R2 0 1 ; R2(R3,...)
	89	[7245]	GETTABLE 	R2 R1 K26 ; R2 := R1["guildId"]
	90	[7245]	EQ       	1 R2 K13 ; if R2 == nil then PC := 95
	91	[7245]	JMP      	95 ; PC := 95
	92	[7245]	GETTABLE 	R2 R1 K27 ; R2 := R1["clanTier"]
	93	[7245]	EQ       	0 R2 K13 ; if R2 ~= nil then PC := 96
	94	[7245]	JMP      	96 ; PC := 96
	95	[7245]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 96
	96	[7245]	OP_LOADBOOL	R2 1 0 ; R2 := true
	97	[7246]	TEST     	R2 0 ; if not R2 then PC := 113
	98	[7246]	JMP      	113 ; PC := 113
	99	[7247]	GETGLOBAL	R3 K28 ; R3 := 0x25312c9b
	100	[7247]	GETGLOBAL	R4 K4 ; R4 := 0xae91e43b
	101	[7247]	GETTABLE 	R5 R1 K19 ; R5 := R1["clipName"]
	102	[7247]	LOADK    	R6 K29 ; R6 := ".Node.Container.Node"
	103	[7247]	CONCAT   	R5 R5 R6 ; R5 := R5 .. R6
	104	[7247]	LOADK    	R6 := 0.000000
	105	[7247]	NEWTABLE 	R7 1 0 ; R7 := {}
	106	[7247]	LOADK    	R8 K31 ; R8 := "_alpha"
	107	[7247]	SETLIST  	R7 1 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
	108	[7247]	NEWTABLE 	R8 1 0 ; R8 := {}
	109	[7247]	LOADK    	R9 := 0.000000
	110	[7247]	SETLIST  	R8 1 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
	111	[7247]	LOADK    	R9 := 0.250000
	112	[7247]	CALL     	R3 7 1 ; R3(R4,R5,R6,R7,R8,R9)
	113	[7250]	GETGLOBAL	R3 K7 ; R3 := 0x34291f5c
	114	[7250]	GETTABLE 	R3 R3 K8 ; R3 := R3[0x781669d7]
	115	[7250]	CALL     	R3 1 2 ; R3 := R3()
	116	[7250]	TEST     	R3 1 ; if R3 then PC := 121
	117	[7250]	JMP      	121 ; PC := 121
	118	[7252]	GETUPVAL 	R3 U0 ; R3 := U0
	119	[7252]	GETTABLE 	R3 R3 K32 ; R3 := R3[0x64ac06bf]
	120	[7252]	CALL     	R3 1 1 ; R3()
	121	[7255]	GETTABLE 	R3 R1 K33 ; R3 := R1["IsHomeNode"]
	122	[7255]	TEST     	R3 0 ; if not R3 then PC := 132
	123	[7255]	JMP      	132 ; PC := 132
	124	[7255]	GETTABLE 	R3 R1 K34 ; R3 := R1["SeenTimer"]
	125	[7255]	EQ       	1 R3 K13 ; if R3 == nil then PC := 132
	126	[7255]	JMP      	132 ; PC := 132
	127	[7256]	GETUPVAL 	R3 U3 ; R3 := U3
	128	[7256]	SELF     	R3 R3 K35 ; R4 := R3; R3 := R3[0x775c858b]
	129	[7256]	GETTABLE 	R5 R1 K34 ; R5 := R1["SeenTimer"]
	130	[7256]	CALL     	R3 3 1 ; R3(R4,R5)
	131	[7257]	SETTABLE 	R1 K34 K13 ; R1["SeenTimer"] := nil
	132	[7260]	GETTABLE 	R3 R1 K36 ; R3 := R1["deco"]
	133	[7260]	EQ       	1 R3 K13 ; if R3 == nil then PC := 155
	134	[7260]	JMP      	155 ; PC := 155
	135	[7260]	GETGLOBAL	R3 K3 ; R3 := 0x7b998233
	136	[7260]	GETTABLE 	R4 R1 K36 ; R4 := R1["deco"]
	137	[7260]	GETTABLE 	R4 R4 K37 ; R4 := R4["mInstance"]
	138	[7260]	CALL     	R3 2 2 ; R3 := R3(R4)
	139	[7260]	TEST     	R3 1 ; if R3 then PC := 155
	140	[7260]	JMP      	155 ; PC := 155
	141	[7261]	GETGLOBAL	R3 K28 ; R3 := 0x25312c9b
	142	[7261]	GETGLOBAL	R4 K4 ; R4 := 0xae91e43b
	143	[7261]	GETTABLE 	R5 R1 K19 ; R5 := R1["clipName"]
	144	[7261]	LOADK    	R6 := 2.000000
	145	[7261]	NEWTABLE 	R7 1 0 ; R7 := {}
	146	[7266]	CLOSURE  	R8 0 ; R8 := closure(Function #1)
	147	[7266]	MOVE     	R0 R1 ; R0 := R1
	148	[7266]	GETUPVAL 	R0 U4 ; R0 := U4
	149	[7266]	SETLIST  	R7 1 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
	150	[7266]	NEWTABLE 	R8 1 0 ; R8 := {}
	151	[7266]	LOADK    	R9 := 1.000000
	152	[7266]	SETLIST  	R8 1 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
	153	[7266]	LOADK    	R9 K38 ; R9 := 0.200000
	154	[7261]	CALL     	R3 7 1 ; R3(R4,R5,R6,R7,R8,R9)
	155	[7269]	GETGLOBAL	R3 K3 ; R3 := 0x7b998233
	156	[7269]	GETUPVAL 	R4 U5 ; R4 := U5
	157	[7269]	GETTABLE 	R4 R4 K39 ; R4 := R4["JunctionTasks"]
	158	[7269]	CALL     	R3 2 2 ; R3 := R3(R4)
	159	[7269]	TEST     	R3 1 ; if R3 then PC := 169
	160	[7269]	JMP      	169 ; PC := 169
	161	[7270]	GETGLOBAL	R3 K40 ; R3 := _T
	162	[7270]	SETTABLE 	R3 K41 K13 ; R3["JunctionTasksUIRadialSector"] := nil
	163	[7271]	GETUPVAL 	R3 U5 ; R3 := U5
	164	[7271]	GETTABLE 	R3 R3 K39 ; R3 := R3["JunctionTasks"]
	165	[7271]	SELF     	R3 R3 K42 ; R4 := R3; R3 := R3[0x32302b4a]
	166	[7271]	CALL     	R3 2 1 ; R3(R4)
	167	[7272]	GETUPVAL 	R3 U5 ; R3 := U5
	168	[7272]	SETTABLE 	R3 K39 K13 ; R3["JunctionTasks"] := nil
	169	[7275]	RETURN   	R0 1 ; return 

function #149 <?:7277,7285> (17 instructions, 68 bytes at 0000021138FCA950)
0 params, 2 slots, 1 upvalue, 0 locals, 7 constants, 0 functions
	1	[7279]	GETGLOBAL	R0 K0 ; R0 := 0x34291f5c
	2	[7279]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x781669d7]
	3	[7279]	CALL     	R0 1 2 ; R0 := R0()
	4	[7279]	TEST     	R0 1 ; if R0 then PC := 11
	5	[7279]	JMP      	11 ; PC := 11
	6	[7280]	GETUPVAL 	R0 U0 ; R0 := U0
	7	[7280]	GETTABLE 	R0 R0 K2 ; R0 := R0[0x282ca791]
	8	[7280]	TAILCALL 	R0 1 0 ; R0,... := R0()
	9	[7280]	RETURN   	R0 0 ; return R0,... 
	10	[7280]	JMP      	17 ; PC := 17
	11	[7282]	GETUPVAL 	R0 U0 ; R0 := U0
	12	[7282]	GETUPVAL 	R1 U0 ; R1 := U0
	13	[7282]	GETTABLE 	R1 R1 K4 ; R1 := R1["HandleMenuClick"]
	14	[7282]	SETTABLE 	R0 K3 R1 ; R0[0x1467d5f4] := R1
	15	[7283]	GETUPVAL 	R0 U0 ; R0 := U0
	16	[7283]	SETTABLE 	R0 K5 K6 ; R0["isLMBDown"] := true
	17	[7285]	RETURN   	R0 1 ; return 

function #150 <?:7287,7500> (794 instructions, 3176 bytes at 0000021138FCAB20)
0 params, 37 slots, 21 upvalues, 0 locals, 120 constants, 0 functions
	1	[7288]	GETGLOBAL	R0 K0 ; R0 := mInputBlocked
	2	[7288]	TEST     	R0 1 ; if R0 then PC := 8
	3	[7288]	JMP      	8 ; PC := 8
	4	[7288]	GETUPVAL 	R0 U0 ; R0 := U0
	5	[7288]	GETTABLE 	R0 R0 K1 ; R0 := R0["DioOpen"]
	6	[7288]	TEST     	R0 0 ; if not R0 then PC := 10
	7	[7288]	JMP      	10 ; PC := 10
	8	[7289]	OP_LOADBOOL	R0 1 0 ; R0 := true
	9	[7289]	RETURN   	R0 2 ; return R0 
	10	[7292]	GETGLOBAL	R0 K2 ; R0 := 0xae91e43b
	11	[7292]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x91a24e4b]
	12	[7292]	LOADK    	R2 K4 ; R2 := "_root"
	13	[7292]	LOADK    	R3 := 25.000000
	14	[7292]	CALL     	R0 4 2 ; R0 := R0(R1,R2,R3)
	15	[7293]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	16	[7293]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x91a24e4b]
	17	[7293]	LOADK    	R3 K4 ; R3 := "_root"
	18	[7293]	LOADK    	R4 := 26.000000
	19	[7293]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	20	[7294]	LE       	0 R0 K5 ; if R0 > -1000.000000 then PC := 25
	21	[7294]	JMP      	25 ; PC := 25
	22	[7294]	LE       	0 R1 K5 ; if R1 > -1000.000000 then PC := 25
	23	[7294]	JMP      	25 ; PC := 25
	24	[7295]	RETURN   	R0 1 ; return 
	25	[7298]	GETGLOBAL	R2 K6 ; R2 := _T
	26	[7298]	GETTABLE 	R2 R2 K7 ; R2 := R2["MouseInWorldStateWindow"]
	27	[7298]	TEST     	R2 1 ; if R2 then PC := 33
	28	[7298]	JMP      	33 ; PC := 33
	29	[7298]	GETGLOBAL	R2 K6 ; R2 := _T
	30	[7298]	GETTABLE 	R2 R2 K8 ; R2 := R2["MouseInChatArea"]
	31	[7298]	TEST     	R2 0 ; if not R2 then PC := 34
	32	[7298]	JMP      	34 ; PC := 34
	33	[7299]	RETURN   	R0 1 ; return 
	34	[7302]	GETGLOBAL	R2 K6 ; R2 := _T
	35	[7302]	GETTABLE 	R2 R2 K9 ; R2 := R2["AcceptInvitePanel"]
	36	[7302]	EQ       	1 R2 K10 ; if R2 == nil then PC := 47
	37	[7302]	JMP      	47 ; PC := 47
	38	[7302]	GETGLOBAL	R2 K6 ; R2 := _T
	39	[7302]	GETTABLE 	R2 R2 K9 ; R2 := R2["AcceptInvitePanel"]
	40	[7302]	SELF     	R2 R2 K11 ; R3 := R2; R2 := R2[0xe4162eed]
	41	[7302]	LOADK    	R4 K12 ; R4 := "HasFocus"
	42	[7302]	LOADK    	R5 K13 ; R5 := ""
	43	[7302]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	44	[7302]	TEST     	R2 0 ; if not R2 then PC := 47
	45	[7302]	JMP      	47 ; PC := 47
	46	[7303]	RETURN   	R0 1 ; return 
	47	[7306]	GETGLOBAL	R2 K6 ; R2 := _T
	48	[7306]	GETTABLE 	R2 R2 K14 ; R2 := R2["TopMenuOpen"]
	49	[7306]	TEST     	R2 0 ; if not R2 then PC := 52
	50	[7306]	JMP      	52 ; PC := 52
	51	[7307]	RETURN   	R0 1 ; return 
	52	[7310]	GETGLOBAL	R2 K15 ; R2 := 0xa94df70b
	53	[7310]	SELF     	R2 R2 K16 ; R3 := R2; R2 := R2[0xf87f9433]
	54	[7310]	CALL     	R2 2 2 ; R2 := R2(R3)
	55	[7310]	TEST     	R2 1 ; if R2 then PC := 68
	56	[7310]	JMP      	68 ; PC := 68
	57	[7310]	GETGLOBAL	R2 K17 ; R2 := mRailJack
	58	[7310]	GETTABLE 	R2 R2 K18 ; R2 := R2["Active"]
	59	[7310]	TEST     	R2 0 ; if not R2 then PC := 158
	60	[7310]	JMP      	158 ; PC := 158
	61	[7310]	GETGLOBAL	R2 K19 ; R2 := 0x14459a1c
	62	[7310]	TEST     	R2 0 ; if not R2 then PC := 158
	63	[7310]	JMP      	158 ; PC := 158
	64	[7310]	GETGLOBAL	R2 K20 ; R2 := mHover
	65	[7310]	GETTABLE 	R2 R2 K21 ; R2 := R2["Node"]
	66	[7310]	TEST     	R2 0 ; if not R2 then PC := 158
	67	[7310]	JMP      	158 ; PC := 158
	68	[7311]	GETGLOBAL	R2 K17 ; R2 := mRailJack
	69	[7311]	GETTABLE 	R2 R2 K18 ; R2 := R2["Active"]
	70	[7311]	TEST     	R2 0 ; if not R2 then PC := 109
	71	[7311]	JMP      	109 ; PC := 109
	72	[7313]	GETGLOBAL	R2 K20 ; R2 := mHover
	73	[7313]	GETTABLE 	R2 R2 K22 ; R2 := R2["Region"]
	74	[7313]	EQ       	1 R2 K10 ; if R2 == nil then PC := 84
	75	[7313]	JMP      	84 ; PC := 84
	76	[7313]	GETGLOBAL	R2 K20 ; R2 := mHover
	77	[7313]	GETTABLE 	R2 R2 K22 ; R2 := R2["Region"]
	78	[7313]	GETGLOBAL	R3 K23 ; R3 := mRegions
	79	[7313]	GETUPVAL 	R4 U1 ; R4 := U1
	80	[7313]	GETTABLE 	R4 R4 K24 ; R4 := R4["REGION_ID_DOJO"]
	81	[7313]	GETTABLE 	R3 R3 R4 ; R3 := R3[R4]
	82	[7313]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 108
	83	[7313]	JMP      	108 ; PC := 108
	84	[7314]	GETGLOBAL	R2 K20 ; R2 := mHover
	85	[7314]	GETTABLE 	R2 R2 K21 ; R2 := R2["Node"]
	86	[7314]	TEST     	R2 0 ; if not R2 then PC := 109
	87	[7314]	JMP      	109 ; PC := 109
	88	[7314]	GETGLOBAL	R2 K20 ; R2 := mHover
	89	[7314]	GETTABLE 	R2 R2 K21 ; R2 := R2["Node"]
	90	[7314]	GETTABLE 	R2 R2 K25 ; R2 := R2["radialSector"]
	91	[7314]	TEST     	R2 0 ; if not R2 then PC := 109
	92	[7314]	JMP      	109 ; PC := 109
	93	[7316]	GETGLOBAL	R2 K20 ; R2 := mHover
	94	[7316]	GETTABLE 	R2 R2 K21 ; R2 := R2["Node"]
	95	[7316]	GETTABLE 	R2 R2 K25 ; R2 := R2["radialSector"]
	96	[7316]	GETTABLE 	R2 R2 K26 ; R2 := R2["region"]
	97	[7316]	GETUPVAL 	R3 U1 ; R3 := U1
	98	[7316]	GETTABLE 	R3 R3 K24 ; R3 := R3["REGION_ID_DOJO"]
	99	[7316]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 108
	100	[7316]	JMP      	108 ; PC := 108
	101	[7317]	GETUPVAL 	R2 U2 ; R2 := U2
	102	[7317]	GETGLOBAL	R3 K20 ; R3 := mHover
	103	[7317]	GETTABLE 	R3 R3 K21 ; R3 := R3["Node"]
	104	[7317]	GETTABLE 	R3 R3 K25 ; R3 := R3["radialSector"]
	105	[7317]	CALL     	R2 2 2 ; R2 := R2(R3)
	106	[7319]	JMP      	109 ; PC := 109
	107	[7319]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 108
	108	[7319]	OP_LOADBOOL	R2 1 0 ; R2 := true
	109	[7321]	TEST     	R2 1 ; if R2 then PC := 133
	110	[7321]	JMP      	133 ; PC := 133
	111	[7321]	GETGLOBAL	R3 K17 ; R3 := mRailJack
	112	[7321]	GETTABLE 	R3 R3 K18 ; R3 := R3["Active"]
	113	[7321]	TEST     	R3 0 ; if not R3 then PC := 133
	114	[7321]	JMP      	133 ; PC := 133
	115	[7323]	GETGLOBAL	R3 K20 ; R3 := mHover
	116	[7323]	GETTABLE 	R3 R3 K21 ; R3 := R3["Node"]
	117	[7323]	TEST     	R3 0 ; if not R3 then PC := 132
	118	[7323]	JMP      	132 ; PC := 132
	119	[7324]	GETGLOBAL	R3 K20 ; R3 := mHover
	120	[7324]	GETTABLE 	R3 R3 K21 ; R3 := R3["Node"]
	121	[7324]	GETTABLE 	R3 R3 K25 ; R3 := R3["radialSector"]
	122	[7324]	TEST     	R3 0 ; if not R3 then PC := 133
	123	[7324]	JMP      	133 ; PC := 133
	124	[7324]	GETGLOBAL	R3 K20 ; R3 := mHover
	125	[7324]	GETTABLE 	R3 R3 K21 ; R3 := R3["Node"]
	126	[7324]	GETTABLE 	R3 R3 K25 ; R3 := R3["radialSector"]
	127	[7324]	GETTABLE 	R3 R3 K27 ; R3 := R3["missionTag"]
	128	[7324]	GETUPVAL 	R4 U3 ; R4 := U3
	129	[7324]	GETTABLE 	R4 R4 K28 ; R4 := R4["SQUAD_LINK_EVENT"]
	130	[7324]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 133
	131	[7324]	JMP      	133 ; PC := 133
	132	[7327]	OP_LOADBOOL	R2 1 0 ; R2 := true
	133	[7330]	TEST     	R2 1 ; if R2 then PC := 158
	134	[7330]	JMP      	158 ; PC := 158
	135	[7331]	LOADNIL  	R3 R3 ; R3 := nil
	136	[7332]	GETGLOBAL	R4 K17 ; R4 := mRailJack
	137	[7332]	GETTABLE 	R4 R4 K18 ; R4 := R4["Active"]
	138	[7332]	TEST     	R4 0 ; if not R4 then PC := 148
	139	[7332]	JMP      	148 ; PC := 148
	140	[7333]	GETUPVAL 	R4 U4 ; R4 := U4
	141	[7333]	GETTABLE 	R4 R4 K29 ; R4 := R4[0x06d055f9]
	142	[7333]	GETGLOBAL	R5 K19 ; R5 := 0x14459a1c
	143	[7333]	LOADK    	R6 K30 ; R6 := "/Lotus/Language/Menu/HostMigrationMissionsBlocked"
	144	[7333]	LOADK    	R7 K31 ; R7 := "/Lotus/Language/Menu/MainMenu_NewBuildMissionsBlockedRailjack"
	145	[7333]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	146	[7333]	MOVE     	R3 R4 ; R3 := R4
	147	[7333]	JMP      	149 ; PC := 149
	148	[7335]	LOADK    	R3 K32 ; R3 := "/Lotus/Language/Menu/MainMenu_NewBuildMissionsBlocked"
	149	[7337]	GETUPVAL 	R4 U4 ; R4 := U4
	150	[7337]	GETTABLE 	R4 R4 K33 ; R4 := R4[0xe0cba3ca]
	151	[7337]	GETGLOBAL	R5 K2 ; R5 := 0xae91e43b
	152	[7337]	SELF     	R5 R5 K34 ; R6 := R5; R5 := R5[0x42b04007]
	153	[7337]	MOVE     	R7 R3 ; R7 := R3
	154	[7337]	OP_LOADBOOL	R8 0 0 ; R8 := false
	155	[7337]	CALL     	R5 4 0 ; R5,... := R5(R6,R7,R8)
	156	[7337]	CALL     	R4 0 1 ; R4(R5,...)
	157	[7338]	RETURN   	R0 1 ; return 
	158	[7342]	GETGLOBAL	R4 K35 ; R4 := 0x34291f5c
	159	[7342]	GETTABLE 	R4 R4 K36 ; R4 := R4[0x1467d5f4]
	160	[7342]	CALL     	R4 1 2 ; R4 := R4()
	161	[7342]	TEST     	R4 0 ; if not R4 then PC := 178
	162	[7342]	JMP      	178 ; PC := 178
	163	[7342]	GETGLOBAL	R4 K37 ; R4 := 0x7b998233
	164	[7342]	GETGLOBAL	R5 K6 ; R5 := _T
	165	[7342]	GETTABLE 	R5 R5 K38 ; R5 := R5["SquadOverlay"]
	166	[7342]	CALL     	R4 2 2 ; R4 := R4(R5)
	167	[7342]	TEST     	R4 1 ; if R4 then PC := 178
	168	[7342]	JMP      	178 ; PC := 178
	169	[7343]	GETGLOBAL	R4 K6 ; R4 := _T
	170	[7343]	GETTABLE 	R4 R4 K38 ; R4 := R4["SquadOverlay"]
	171	[7343]	SELF     	R4 R4 K11 ; R5 := R4; R4 := R4[0xe4162eed]
	172	[7343]	LOADK    	R6 K39 ; R6 := "MatchmakingFocused"
	173	[7343]	LOADK    	R7 K13 ; R7 := ""
	174	[7343]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	175	[7343]	TEST     	R4 0 ; if not R4 then PC := 178
	176	[7343]	JMP      	178 ; PC := 178
	177	[7344]	RETURN   	R0 1 ; return 
	178	[7348]	GETGLOBAL	R4 K35 ; R4 := 0x34291f5c
	179	[7348]	GETTABLE 	R4 R4 K40 ; R4 := R4[0x781669d7]
	180	[7348]	CALL     	R4 1 2 ; R4 := R4()
	181	[7348]	TEST     	R4 0 ; if not R4 then PC := 277
	182	[7348]	JMP      	277 ; PC := 277
	183	[7350]	GETGLOBAL	R4 K37 ; R4 := 0x7b998233
	184	[7350]	GETUPVAL 	R5 U5 ; R5 := U5
	185	[7350]	GETTABLE 	R5 R5 K41 ; R5 := R5["JunctionTasks"]
	186	[7350]	CALL     	R4 2 2 ; R4 := R4(R5)
	187	[7350]	TEST     	R4 1 ; if R4 then PC := 212
	188	[7350]	JMP      	212 ; PC := 212
	189	[7352]	GETUPVAL 	R4 U4 ; R4 := U4
	190	[7352]	GETTABLE 	R4 R4 K42 ; R4 := R4[0x6d7e6810]
	191	[7352]	GETGLOBAL	R5 K2 ; R5 := 0xae91e43b
	192	[7352]	NEWTABLE 	R6 0 2 ; R6 := {}
	193	[7352]	SETTABLE 	R6 K43 R0 ; R6["x"] := R0
	194	[7352]	SETTABLE 	R6 K44 R1 ; R6["y"] := R1
	195	[7352]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	196	[7353]	GETUPVAL 	R5 U5 ; R5 := U5
	197	[7353]	GETTABLE 	R5 R5 K41 ; R5 := R5["JunctionTasks"]
	198	[7353]	SELF     	R5 R5 K11 ; R6 := R5; R5 := R5[0xe4162eed]
	199	[7353]	LOADK    	R7 K45 ; R7 := "StartDrag"
	200	[7353]	GETTABLE 	R8 R4 K43 ; R8 := R4["x"]
	201	[7353]	LOADK    	R9 K46 ; R9 := ", "
	202	[7353]	GETTABLE 	R10 R4 K44 ; R10 := R4["y"]
	203	[7353]	CONCAT   	R8 R8 R10 ; R8 := R8 .. R9 .. R10
	204	[7353]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	205	[7353]	TEST     	R5 0 ; if not R5 then PC := 212
	206	[7353]	JMP      	212 ; PC := 212
	207	[7354]	GETUPVAL 	R5 U6 ; R5 := U6
	208	[7354]	SETTABLE 	R5 K47 K48 ; R5["JunctionDrag"] := true
	209	[7355]	GETUPVAL 	R5 U6 ; R5 := U6
	210	[7355]	SETTABLE 	R5 K49 K50 ; R5["isLMBDown"] := false
	211	[7356]	RETURN   	R0 1 ; return 
	212	[7360]	OP_LOADBOOL	R5 0 0 ; R5 := false
	213	[7362]	GETGLOBAL	R6 K37 ; R6 := 0x7b998233
	214	[7362]	GETUPVAL 	R7 U6 ; R7 := U6
	215	[7362]	GETTABLE 	R7 R7 K51 ; R7 := R7["TooltipNode"]
	216	[7362]	CALL     	R6 2 2 ; R6 := R6(R7)
	217	[7362]	TEST     	R6 1 ; if R6 then PC := 263
	218	[7362]	JMP      	263 ; PC := 263
	219	[7363]	GETGLOBAL	R6 K2 ; R6 := 0xae91e43b
	220	[7363]	SELF     	R6 R6 K52 ; R7 := R6; R6 := R6[0xb052d775]
	221	[7363]	GETUPVAL 	R8 U6 ; R8 := U6
	222	[7363]	GETTABLE 	R8 R8 K51 ; R8 := R8["TooltipNode"]
	223	[7363]	GETTABLE 	R8 R8 K53 ; R8 := R8["memberIndex"]
	224	[7363]	LOADK    	R9 := 12.000000
	225	[7363]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	226	[7364]	GETGLOBAL	R7 K2 ; R7 := 0xae91e43b
	227	[7364]	SELF     	R7 R7 K52 ; R8 := R7; R7 := R7[0xb052d775]
	228	[7364]	GETUPVAL 	R9 U6 ; R9 := U6
	229	[7364]	GETTABLE 	R9 R9 K51 ; R9 := R9["TooltipNode"]
	230	[7364]	GETTABLE 	R9 R9 K53 ; R9 := R9["memberIndex"]
	231	[7364]	LOADK    	R10 := 13.000000
	232	[7364]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	233	[7365]	GETGLOBAL	R8 K2 ; R8 := 0xae91e43b
	234	[7365]	SELF     	R8 R8 K52 ; R9 := R8; R8 := R8[0xb052d775]
	235	[7365]	GETUPVAL 	R10 U6 ; R10 := U6
	236	[7365]	GETTABLE 	R10 R10 K51 ; R10 := R10["TooltipNode"]
	237	[7365]	GETTABLE 	R10 R10 K53 ; R10 := R10["memberIndex"]
	238	[7365]	LOADK    	R11 := 0.000000
	239	[7365]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	240	[7365]	DIV      	R9 R6 K54 ; R9 := R6 / 2.000000
	241	[7365]	SUB      	R8 R8 R9 ; R8 := R8 - R9
	242	[7366]	GETGLOBAL	R9 K2 ; R9 := 0xae91e43b
	243	[7366]	SELF     	R9 R9 K52 ; R10 := R9; R9 := R9[0xb052d775]
	244	[7366]	GETUPVAL 	R11 U6 ; R11 := U6
	245	[7366]	GETTABLE 	R11 R11 K51 ; R11 := R11["TooltipNode"]
	246	[7366]	GETTABLE 	R11 R11 K53 ; R11 := R11["memberIndex"]
	247	[7366]	LOADK    	R12 := 1.000000
	248	[7366]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	249	[7366]	DIV      	R10 R7 K54 ; R10 := R7 / 2.000000
	250	[7366]	SUB      	R9 R9 R10 ; R9 := R9 - R10
	251	[7367]	LT       	0 R8 R0 ; if R8 >= R0 then PC := 261
	252	[7367]	JMP      	261 ; PC := 261
	253	[7367]	ADD      	R10 R8 R6 ; R10 := R8 + R6
	254	[7367]	LT       	0 R0 R10 ; if R0 >= R10 then PC := 261
	255	[7367]	JMP      	261 ; PC := 261
	256	[7367]	LT       	0 R9 R1 ; if R9 >= R1 then PC := 261
	257	[7367]	JMP      	261 ; PC := 261
	258	[7367]	ADD      	R10 R9 R7 ; R10 := R9 + R7
	259	[7367]	LT       	1 R1 R10 ; if R1 < R10 then PC := 262
	260	[7367]	JMP      	262 ; PC := 262
	261	[7367]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 262
	262	[7367]	OP_LOADBOOL	R5 1 0 ; R5 := true
	263	[7370]	GETUPVAL 	R10 U6 ; R10 := U6
	264	[7370]	GETTABLE 	R10 R10 K55 ; R10 := R10["mNodeVisible"]
	265	[7370]	TEST     	R10 0 ; if not R10 then PC := 277
	266	[7370]	JMP      	277 ; PC := 277
	267	[7370]	LT       	0 R1 K56 ; if R1 >= 780.000000 then PC := 277
	268	[7370]	JMP      	277 ; PC := 277
	269	[7370]	TEST     	R5 1 ; if R5 then PC := 277
	270	[7370]	JMP      	277 ; PC := 277
	271	[7371]	GETUPVAL 	R10 U6 ; R10 := U6
	272	[7371]	GETTABLE 	R10 R10 K57 ; R10 := R10[0x64ac06bf]
	273	[7371]	CALL     	R10 1 1 ; R10()
	274	[7372]	GETUPVAL 	R10 U7 ; R10 := U7
	275	[7372]	CALL     	R10 1 1 ; R10()
	276	[7373]	RETURN   	R0 1 ; return 
	277	[7377]	GETUPVAL 	R10 U8 ; R10 := U8
	278	[7377]	GETUPVAL 	R11 U9 ; R11 := U9
	279	[7377]	GETTABLE 	R11 R11 K58 ; R11 := R11["EDIT_REGIONS"]
	280	[7377]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 351
	281	[7377]	JMP      	351 ; PC := 351
	282	[7377]	GETGLOBAL	R10 K37 ; R10 := 0x7b998233
	283	[7377]	GETGLOBAL	R11 K20 ; R11 := mHover
	284	[7377]	GETTABLE 	R11 R11 K22 ; R11 := R11["Region"]
	285	[7377]	CALL     	R10 2 2 ; R10 := R10(R11)
	286	[7377]	TEST     	R10 1 ; if R10 then PC := 351
	287	[7377]	JMP      	351 ; PC := 351
	288	[7378]	GETUPVAL 	R10 U10 ; R10 := U10
	289	[7378]	GETGLOBAL	R11 K20 ; R11 := mHover
	290	[7378]	GETTABLE 	R11 R11 K22 ; R11 := R11["Region"]
	291	[7378]	SETTABLE 	R10 K59 R11 ; R10["mMovingRegion"] := R11
	292	[7379]	GETUPVAL 	R10 U10 ; R10 := U10
	293	[7379]	GETGLOBAL	R11 K20 ; R11 := mHover
	294	[7379]	GETTABLE 	R11 R11 K22 ; R11 := R11["Region"]
	295	[7379]	GETTABLE 	R11 R11 K61 ; R11 := R11["instance"]
	296	[7379]	SELF     	R11 R11 K62 ; R12 := R11; R11 := R11[0xd1586535]
	297	[7379]	CALL     	R11 2 2 ; R11 := R11(R12)
	298	[7379]	SETTABLE 	R10 K60 R11 ; R10["mInitialPosition"] := R11
	299	[7380]	GETUPVAL 	R10 U10 ; R10 := U10
	300	[7380]	GETUPVAL 	R11 U11 ; R11 := U11
	301	[7380]	CALL     	R11 1 2 ; R11 := R11()
	302	[7380]	SETTABLE 	R10 K63 R11 ; R10["mInitialWorldCursor"] := R11
	303	[7382]	LOADNIL  	R10 R10 ; R10 := nil
	304	[7383]	GETGLOBAL	R11 K64 ; R11 := 0xc8802016
	305	[7383]	GETGLOBAL	R12 K23 ; R12 := mRegions
	306	[7383]	CALL     	R11 2 4 ; R11,R12,R13 := R11(R12)
	307	[7383]	JMP      	314 ; PC := 314
	308	[7384]	GETGLOBAL	R16 K20 ; R16 := mHover
	309	[7384]	GETTABLE 	R16 R16 K22 ; R16 := R16["Region"]
	310	[7384]	EQ       	0 R16 R15 ; if R16 ~= R15 then PC := 314
	311	[7384]	JMP      	314 ; PC := 314
	312	[7385]	SUB      	R10 R14 K65 ; R10 := R14 - 1.000000
	313	[7386]	JMP      	316 ; PC := 316
	314	[7383]	TFORLOOP 	R11 2 ; R14,R15 := R11(R12,R13); if R14 ~= nil then begin PC = 308; R13 := R14 end
	315	[7387]	JMP      	308 ; PC := 308
	316	[7390]	GETGLOBAL	R16 K37 ; R16 := 0x7b998233
	317	[7390]	MOVE     	R17 R10 ; R17 := R10
	318	[7390]	CALL     	R16 2 2 ; R16 := R16(R17)
	319	[7390]	TEST     	R16 1 ; if R16 then PC := 792
	320	[7390]	JMP      	792 ; PC := 792
	321	[7391]	GETUPVAL 	R16 U10 ; R16 := U10
	322	[7391]	NEWTABLE 	R17 0 0 ; R17 := {}
	323	[7391]	SETTABLE 	R16 K66 R17 ; R16["mChildNodes"] := R17
	324	[7392]	GETGLOBAL	R16 K64 ; R16 := 0xc8802016
	325	[7392]	GETUPVAL 	R17 U12 ; R17 := U12
	326	[7392]	CALL     	R16 2 4 ; R16,R17,R18 := R16(R17)
	327	[7392]	JMP      	348 ; PC := 348
	328	[7393]	GETTABLE 	R21 R20 K25 ; R21 := R20["radialSector"]
	329	[7393]	GETTABLE 	R21 R21 K26 ; R21 := R21["region"]
	330	[7393]	EQ       	0 R21 R10 ; if R21 ~= R10 then PC := 348
	331	[7393]	JMP      	348 ; PC := 348
	332	[7394]	GETGLOBAL	R21 K67 ; R21 := 0x33bdd652
	333	[7394]	GETTABLE 	R21 R21 K68 ; R21 := R21[0x23d5322f]
	334	[7394]	GETUPVAL 	R22 U10 ; R22 := U10
	335	[7394]	GETTABLE 	R22 R22 K66 ; R22 := R22["mChildNodes"]
	336	[7394]	NEWTABLE 	R23 0 2 ; R23 := {}
	337	[7394]	SETTABLE 	R23 K69 R19 ; R23["NodeIndex"] := R19
	338	[7394]	GETGLOBAL	R24 K71 ; R24 := 0xa421af95
	339	[7394]	GETTABLE 	R25 R20 K72 ; R25 := R20["position"]
	340	[7394]	GETTABLE 	R25 R25 K43 ; R25 := R25["x"]
	341	[7394]	GETTABLE 	R26 R20 K72 ; R26 := R20["position"]
	342	[7394]	GETTABLE 	R26 R26 K44 ; R26 := R26["y"]
	343	[7394]	GETTABLE 	R27 R20 K72 ; R27 := R20["position"]
	344	[7394]	GETTABLE 	R27 R27 K73 ; R27 := R27["z"]
	345	[7394]	CALL     	R24 4 2 ; R24 := R24(R25,R26,R27)
	346	[7394]	SETTABLE 	R23 K70 R24 ; R23["InitialPosition"] := R24
	347	[7394]	CALL     	R21 3 1 ; R21(R22,R23)
	348	[7392]	TFORLOOP 	R16 2 ; R19,R20 := R16(R17,R18); if R19 ~= nil then begin PC = 328; R18 := R19 end
	349	[7395]	JMP      	328 ; PC := 328
	350	[7397]	JMP      	792 ; PC := 792
	351	[7398]	GETUPVAL 	R21 U8 ; R21 := U8
	352	[7398]	GETUPVAL 	R22 U9 ; R22 := U9
	353	[7398]	GETTABLE 	R22 R22 K74 ; R22 := R22["EDIT_NODES"]
	354	[7398]	EQ       	0 R21 R22 ; if R21 ~= R22 then PC := 393
	355	[7398]	JMP      	393 ; PC := 393
	356	[7398]	GETGLOBAL	R21 K37 ; R21 := 0x7b998233
	357	[7398]	GETGLOBAL	R22 K20 ; R22 := mHover
	358	[7398]	GETTABLE 	R22 R22 K21 ; R22 := R22["Node"]
	359	[7398]	CALL     	R21 2 2 ; R21 := R21(R22)
	360	[7398]	TEST     	R21 1 ; if R21 then PC := 393
	361	[7398]	JMP      	393 ; PC := 393
	362	[7399]	GETUPVAL 	R21 U10 ; R21 := U10
	363	[7399]	GETGLOBAL	R22 K20 ; R22 := mHover
	364	[7399]	GETTABLE 	R22 R22 K21 ; R22 := R22["Node"]
	365	[7399]	SETTABLE 	R21 K75 R22 ; R21["mMovingNode"] := R22
	366	[7400]	GETUPVAL 	R21 U10 ; R21 := U10
	367	[7400]	GETGLOBAL	R22 K71 ; R22 := 0xa421af95
	368	[7400]	GETGLOBAL	R23 K20 ; R23 := mHover
	369	[7400]	GETTABLE 	R23 R23 K21 ; R23 := R23["Node"]
	370	[7400]	GETTABLE 	R23 R23 K72 ; R23 := R23["position"]
	371	[7400]	GETTABLE 	R23 R23 K43 ; R23 := R23["x"]
	372	[7400]	GETGLOBAL	R24 K20 ; R24 := mHover
	373	[7400]	GETTABLE 	R24 R24 K21 ; R24 := R24["Node"]
	374	[7400]	GETTABLE 	R24 R24 K72 ; R24 := R24["position"]
	375	[7400]	GETTABLE 	R24 R24 K44 ; R24 := R24["y"]
	376	[7400]	GETGLOBAL	R25 K20 ; R25 := mHover
	377	[7400]	GETTABLE 	R25 R25 K21 ; R25 := R25["Node"]
	378	[7400]	GETTABLE 	R25 R25 K72 ; R25 := R25["position"]
	379	[7400]	GETTABLE 	R25 R25 K73 ; R25 := R25["z"]
	380	[7400]	CALL     	R22 4 2 ; R22 := R22(R23,R24,R25)
	381	[7400]	SETTABLE 	R21 K60 R22 ; R21["mInitialPosition"] := R22
	382	[7401]	GETUPVAL 	R21 U10 ; R21 := U10
	383	[7401]	GETUPVAL 	R22 U11 ; R22 := U11
	384	[7401]	CALL     	R22 1 2 ; R22 := R22()
	385	[7401]	SETTABLE 	R21 K63 R22 ; R21["mInitialWorldCursor"] := R22
	386	[7402]	GETUPVAL 	R21 U10 ; R21 := U10
	387	[7402]	GETUPVAL 	R22 U4 ; R22 := U4
	388	[7402]	GETTABLE 	R22 R22 K77 ; R22 := R22[0xfa9785e4]
	389	[7402]	GETGLOBAL	R23 K2 ; R23 := 0xae91e43b
	390	[7402]	CALL     	R22 2 2 ; R22 := R22(R23)
	391	[7402]	SETTABLE 	R21 K76 R22 ; R21["mInitialMousePosition"] := R22
	392	[7402]	JMP      	792 ; PC := 792
	393	[7403]	GETUPVAL 	R21 U8 ; R21 := U8
	394	[7403]	GETUPVAL 	R22 U9 ; R22 := U9
	395	[7403]	GETTABLE 	R22 R22 K78 ; R22 := R22["EDIT_EDGES"]
	396	[7403]	EQ       	0 R21 R22 ; if R21 ~= R22 then PC := 474
	397	[7403]	JMP      	474 ; PC := 474
	398	[7404]	GETGLOBAL	R21 K37 ; R21 := 0x7b998233
	399	[7404]	GETGLOBAL	R22 K20 ; R22 := mHover
	400	[7404]	GETTABLE 	R22 R22 K21 ; R22 := R22["Node"]
	401	[7404]	CALL     	R21 2 2 ; R21 := R21(R22)
	402	[7404]	TEST     	R21 0 ; if not R21 then PC := 409
	403	[7404]	JMP      	409 ; PC := 409
	404	[7405]	GETUPVAL 	R21 U10 ; R21 := U10
	405	[7405]	SETTABLE 	R21 K79 K10 ; R21["mEdgeNode1"] := nil
	406	[7406]	GETUPVAL 	R21 U10 ; R21 := U10
	407	[7406]	SETTABLE 	R21 K80 K10 ; R21["mEdgeNode2"] := nil
	408	[7406]	JMP      	466 ; PC := 466
	409	[7408]	GETGLOBAL	R21 K37 ; R21 := 0x7b998233
	410	[7408]	GETUPVAL 	R22 U10 ; R22 := U10
	411	[7408]	GETTABLE 	R22 R22 K79 ; R22 := R22["mEdgeNode1"]
	412	[7408]	CALL     	R21 2 2 ; R21 := R21(R22)
	413	[7408]	TEST     	R21 1 ; if R21 then PC := 423
	414	[7408]	JMP      	423 ; PC := 423
	415	[7408]	GETUPVAL 	R21 U13 ; R21 := U13
	416	[7408]	GETTABLE 	R21 R21 K81 ; R21 := R21["mControlDown"]
	417	[7408]	TEST     	R21 1 ; if R21 then PC := 428
	418	[7408]	JMP      	428 ; PC := 428
	419	[7408]	GETUPVAL 	R21 U13 ; R21 := U13
	420	[7408]	GETTABLE 	R21 R21 K82 ; R21 := R21["mShiftDown"]
	421	[7408]	TEST     	R21 1 ; if R21 then PC := 428
	422	[7408]	JMP      	428 ; PC := 428
	423	[7409]	GETUPVAL 	R21 U10 ; R21 := U10
	424	[7409]	GETGLOBAL	R22 K20 ; R22 := mHover
	425	[7409]	GETTABLE 	R22 R22 K21 ; R22 := R22["Node"]
	426	[7409]	SETTABLE 	R21 K79 R22 ; R21["mEdgeNode1"] := R22
	427	[7409]	JMP      	440 ; PC := 440
	428	[7410]	GETGLOBAL	R21 K20 ; R21 := mHover
	429	[7410]	GETTABLE 	R21 R21 K21 ; R21 := R21["Node"]
	430	[7410]	GETTABLE 	R21 R21 K83 ; R21 := R21["name"]
	431	[7410]	GETUPVAL 	R22 U10 ; R22 := U10
	432	[7410]	GETTABLE 	R22 R22 K79 ; R22 := R22["mEdgeNode1"]
	433	[7410]	GETTABLE 	R22 R22 K83 ; R22 := R22["name"]
	434	[7410]	EQ       	1 R21 R22 ; if R21 == R22 then PC := 440
	435	[7410]	JMP      	440 ; PC := 440
	436	[7411]	GETUPVAL 	R21 U10 ; R21 := U10
	437	[7411]	GETGLOBAL	R22 K20 ; R22 := mHover
	438	[7411]	GETTABLE 	R22 R22 K21 ; R22 := R22["Node"]
	439	[7411]	SETTABLE 	R21 K80 R22 ; R21["mEdgeNode2"] := R22
	440	[7413]	GETUPVAL 	R21 U10 ; R21 := U10
	441	[7413]	GETGLOBAL	R22 K71 ; R22 := 0xa421af95
	442	[7413]	GETGLOBAL	R23 K20 ; R23 := mHover
	443	[7413]	GETTABLE 	R23 R23 K21 ; R23 := R23["Node"]
	444	[7413]	GETTABLE 	R23 R23 K72 ; R23 := R23["position"]
	445	[7413]	GETTABLE 	R23 R23 K43 ; R23 := R23["x"]
	446	[7413]	GETGLOBAL	R24 K20 ; R24 := mHover
	447	[7413]	GETTABLE 	R24 R24 K21 ; R24 := R24["Node"]
	448	[7413]	GETTABLE 	R24 R24 K72 ; R24 := R24["position"]
	449	[7413]	GETTABLE 	R24 R24 K44 ; R24 := R24["y"]
	450	[7413]	GETGLOBAL	R25 K20 ; R25 := mHover
	451	[7413]	GETTABLE 	R25 R25 K21 ; R25 := R25["Node"]
	452	[7413]	GETTABLE 	R25 R25 K72 ; R25 := R25["position"]
	453	[7413]	GETTABLE 	R25 R25 K73 ; R25 := R25["z"]
	454	[7413]	CALL     	R22 4 2 ; R22 := R22(R23,R24,R25)
	455	[7413]	SETTABLE 	R21 K60 R22 ; R21["mInitialPosition"] := R22
	456	[7414]	GETUPVAL 	R21 U10 ; R21 := U10
	457	[7414]	GETUPVAL 	R22 U11 ; R22 := U11
	458	[7414]	CALL     	R22 1 2 ; R22 := R22()
	459	[7414]	SETTABLE 	R21 K63 R22 ; R21["mInitialWorldCursor"] := R22
	460	[7415]	GETUPVAL 	R21 U10 ; R21 := U10
	461	[7415]	GETUPVAL 	R22 U4 ; R22 := U4
	462	[7415]	GETTABLE 	R22 R22 K77 ; R22 := R22[0xfa9785e4]
	463	[7415]	GETGLOBAL	R23 K2 ; R23 := 0xae91e43b
	464	[7415]	CALL     	R22 2 2 ; R22 := R22(R23)
	465	[7415]	SETTABLE 	R21 K76 R22 ; R21["mInitialMousePosition"] := R22
	466	[7417]	GETGLOBAL	R21 K2 ; R21 := 0xae91e43b
	467	[7417]	SELF     	R21 R21 K84 ; R22 := R21; R21 := R21[0x5f56eeab]
	468	[7417]	LOADK    	R23 K85 ; R23 := "ScreenModeLabel"
	469	[7417]	LOADK    	R24 := 29.000000
	470	[7417]	GETUPVAL 	R25 U14 ; R25 := U14
	471	[7417]	CALL     	R25 1 0 ; R25,... := R25()
	472	[7417]	CALL     	R21 0 1 ; R21(R22,...)
	473	[7417]	JMP      	792 ; PC := 792
	474	[7418]	GETUPVAL 	R21 U8 ; R21 := U8
	475	[7418]	GETUPVAL 	R22 U9 ; R22 := U9
	476	[7418]	GETTABLE 	R22 R22 K86 ; R22 := R22["EDIT_NODE_DECOS"]
	477	[7418]	EQ       	0 R21 R22 ; if R21 ~= R22 then PC := 590
	478	[7418]	JMP      	590 ; PC := 590
	479	[7418]	GETGLOBAL	R21 K37 ; R21 := 0x7b998233
	480	[7418]	GETGLOBAL	R22 K20 ; R22 := mHover
	481	[7418]	GETTABLE 	R22 R22 K21 ; R22 := R22["Node"]
	482	[7418]	CALL     	R21 2 2 ; R21 := R21(R22)
	483	[7418]	TEST     	R21 1 ; if R21 then PC := 590
	484	[7418]	JMP      	590 ; PC := 590
	485	[7419]	GETGLOBAL	R21 K20 ; R21 := mHover
	486	[7419]	GETTABLE 	R21 R21 K21 ; R21 := R21["Node"]
	487	[7419]	GETTABLE 	R21 R21 K87 ; R21 := R21["deco"]
	488	[7419]	EQ       	1 R21 K10 ; if R21 == nil then PC := 498
	489	[7419]	JMP      	498 ; PC := 498
	490	[7419]	GETGLOBAL	R21 K37 ; R21 := 0x7b998233
	491	[7419]	GETGLOBAL	R22 K20 ; R22 := mHover
	492	[7419]	GETTABLE 	R22 R22 K21 ; R22 := R22["Node"]
	493	[7419]	GETTABLE 	R22 R22 K87 ; R22 := R22["deco"]
	494	[7419]	GETTABLE 	R22 R22 K88 ; R22 := R22["mInstance"]
	495	[7419]	CALL     	R21 2 2 ; R21 := R21(R22)
	496	[7419]	TEST     	R21 0 ; if not R21 then PC := 499
	497	[7419]	JMP      	499 ; PC := 499
	498	[7420]	RETURN   	R0 1 ; return 
	499	[7422]	GETUPVAL 	R21 U10 ; R21 := U10
	500	[7422]	GETGLOBAL	R22 K20 ; R22 := mHover
	501	[7422]	GETTABLE 	R22 R22 K21 ; R22 := R22["Node"]
	502	[7422]	SETTABLE 	R21 K75 R22 ; R21["mMovingNode"] := R22
	503	[7424]	GETUPVAL 	R21 U10 ; R21 := U10
	504	[7424]	SETTABLE 	R21 K89 K50 ; R21["mEditingOffset"] := false
	505	[7425]	GETUPVAL 	R21 U10 ; R21 := U10
	506	[7425]	SETTABLE 	R21 K90 K50 ; R21["mEditingRotation"] := false
	507	[7426]	GETUPVAL 	R21 U10 ; R21 := U10
	508	[7426]	SETTABLE 	R21 K91 K50 ; R21["mEditingScale"] := false
	509	[7428]	GETUPVAL 	R21 U13 ; R21 := U13
	510	[7428]	GETTABLE 	R21 R21 K92 ; R21 := R21["mAltDown"]
	511	[7428]	TEST     	R21 0 ; if not R21 then PC := 528
	512	[7428]	JMP      	528 ; PC := 528
	513	[7429]	GETUPVAL 	R21 U10 ; R21 := U10
	514	[7429]	GETGLOBAL	R22 K20 ; R22 := mHover
	515	[7429]	GETTABLE 	R22 R22 K21 ; R22 := R22["Node"]
	516	[7429]	GETTABLE 	R22 R22 K87 ; R22 := R22["deco"]
	517	[7429]	GETTABLE 	R22 R22 K94 ; R22 := R22["mScale"]
	518	[7429]	SETTABLE 	R21 K93 R22 ; R21["mInitialScale"] := R22
	519	[7430]	GETUPVAL 	R21 U10 ; R21 := U10
	520	[7430]	GETUPVAL 	R22 U4 ; R22 := U4
	521	[7430]	GETTABLE 	R22 R22 K77 ; R22 := R22[0xfa9785e4]
	522	[7430]	GETGLOBAL	R23 K2 ; R23 := 0xae91e43b
	523	[7430]	CALL     	R22 2 2 ; R22 := R22(R23)
	524	[7430]	SETTABLE 	R21 K76 R22 ; R21["mInitialMousePosition"] := R22
	525	[7431]	GETUPVAL 	R21 U10 ; R21 := U10
	526	[7431]	SETTABLE 	R21 K91 K48 ; R21["mEditingScale"] := true
	527	[7431]	JMP      	585 ; PC := 585
	528	[7432]	GETUPVAL 	R21 U13 ; R21 := U13
	529	[7432]	GETTABLE 	R21 R21 K82 ; R21 := R21["mShiftDown"]
	530	[7432]	TEST     	R21 1 ; if R21 then PC := 536
	531	[7432]	JMP      	536 ; PC := 536
	532	[7432]	GETUPVAL 	R21 U13 ; R21 := U13
	533	[7432]	GETTABLE 	R21 R21 K81 ; R21 := R21["mControlDown"]
	534	[7432]	TEST     	R21 0 ; if not R21 then PC := 564
	535	[7432]	JMP      	564 ; PC := 564
	536	[7433]	GETUPVAL 	R21 U10 ; R21 := U10
	537	[7433]	GETGLOBAL	R22 K96 ; R22 := 0x00046924
	538	[7433]	GETGLOBAL	R23 K20 ; R23 := mHover
	539	[7433]	GETTABLE 	R23 R23 K21 ; R23 := R23["Node"]
	540	[7433]	GETTABLE 	R23 R23 K87 ; R23 := R23["deco"]
	541	[7433]	GETTABLE 	R23 R23 K97 ; R23 := R23["mRotation"]
	542	[7433]	GETTABLE 	R23 R23 K98 ; R23 := R23["heading"]
	543	[7433]	GETGLOBAL	R24 K20 ; R24 := mHover
	544	[7433]	GETTABLE 	R24 R24 K21 ; R24 := R24["Node"]
	545	[7433]	GETTABLE 	R24 R24 K87 ; R24 := R24["deco"]
	546	[7433]	GETTABLE 	R24 R24 K97 ; R24 := R24["mRotation"]
	547	[7433]	GETTABLE 	R24 R24 K99 ; R24 := R24["pitch"]
	548	[7433]	GETGLOBAL	R25 K20 ; R25 := mHover
	549	[7433]	GETTABLE 	R25 R25 K21 ; R25 := R25["Node"]
	550	[7433]	GETTABLE 	R25 R25 K87 ; R25 := R25["deco"]
	551	[7433]	GETTABLE 	R25 R25 K97 ; R25 := R25["mRotation"]
	552	[7433]	GETTABLE 	R25 R25 K100 ; R25 := R25["bank"]
	553	[7433]	CALL     	R22 4 2 ; R22 := R22(R23,R24,R25)
	554	[7433]	SETTABLE 	R21 K95 R22 ; R21["mInitialRotation"] := R22
	555	[7434]	GETUPVAL 	R21 U10 ; R21 := U10
	556	[7434]	GETUPVAL 	R22 U4 ; R22 := U4
	557	[7434]	GETTABLE 	R22 R22 K77 ; R22 := R22[0xfa9785e4]
	558	[7434]	GETGLOBAL	R23 K2 ; R23 := 0xae91e43b
	559	[7434]	CALL     	R22 2 2 ; R22 := R22(R23)
	560	[7434]	SETTABLE 	R21 K76 R22 ; R21["mInitialMousePosition"] := R22
	561	[7435]	GETUPVAL 	R21 U10 ; R21 := U10
	562	[7435]	SETTABLE 	R21 K90 K48 ; R21["mEditingRotation"] := true
	563	[7435]	JMP      	585 ; PC := 585
	564	[7437]	GETUPVAL 	R21 U10 ; R21 := U10
	565	[7437]	GETGLOBAL	R22 K71 ; R22 := 0xa421af95
	566	[7437]	GETGLOBAL	R23 K20 ; R23 := mHover
	567	[7437]	GETTABLE 	R23 R23 K21 ; R23 := R23["Node"]
	568	[7437]	GETTABLE 	R23 R23 K87 ; R23 := R23["deco"]
	569	[7437]	GETTABLE 	R23 R23 K101 ; R23 := R23["mOffset"]
	570	[7437]	GETTABLE 	R23 R23 K43 ; R23 := R23["x"]
	571	[7437]	GETGLOBAL	R24 K20 ; R24 := mHover
	572	[7437]	GETTABLE 	R24 R24 K21 ; R24 := R24["Node"]
	573	[7437]	GETTABLE 	R24 R24 K87 ; R24 := R24["deco"]
	574	[7437]	GETTABLE 	R24 R24 K101 ; R24 := R24["mOffset"]
	575	[7437]	GETTABLE 	R24 R24 K44 ; R24 := R24["y"]
	576	[7437]	GETGLOBAL	R25 K20 ; R25 := mHover
	577	[7437]	GETTABLE 	R25 R25 K21 ; R25 := R25["Node"]
	578	[7437]	GETTABLE 	R25 R25 K87 ; R25 := R25["deco"]
	579	[7437]	GETTABLE 	R25 R25 K101 ; R25 := R25["mOffset"]
	580	[7437]	GETTABLE 	R25 R25 K73 ; R25 := R25["z"]
	581	[7437]	CALL     	R22 4 2 ; R22 := R22(R23,R24,R25)
	582	[7437]	SETTABLE 	R21 K60 R22 ; R21["mInitialPosition"] := R22
	583	[7438]	GETUPVAL 	R21 U10 ; R21 := U10
	584	[7438]	SETTABLE 	R21 K89 K48 ; R21["mEditingOffset"] := true
	585	[7440]	GETUPVAL 	R21 U10 ; R21 := U10
	586	[7440]	GETUPVAL 	R22 U11 ; R22 := U11
	587	[7440]	CALL     	R22 1 2 ; R22 := R22()
	588	[7440]	SETTABLE 	R21 K63 R22 ; R21["mInitialWorldCursor"] := R22
	589	[7440]	JMP      	792 ; PC := 792
	590	[7441]	GETUPVAL 	R21 U8 ; R21 := U8
	591	[7441]	GETUPVAL 	R22 U9 ; R22 := U9
	592	[7441]	GETTABLE 	R22 R22 K102 ; R22 := R22["EDIT_REGION_FRAMING"]
	593	[7441]	EQ       	0 R21 R22 ; if R21 ~= R22 then PC := 599
	594	[7441]	JMP      	599 ; PC := 599
	595	[7442]	GETGLOBAL	R21 K103 ; R21 := mDrag
	596	[7442]	SELF     	R21 R21 K104 ; R22 := R21; R21 := R21[0xd033d908]
	597	[7442]	CALL     	R21 2 1 ; R21(R22)
	598	[7442]	JMP      	792 ; PC := 792
	599	[7443]	GETUPVAL 	R21 U8 ; R21 := U8
	600	[7443]	GETUPVAL 	R22 U9 ; R22 := U9
	601	[7443]	GETTABLE 	R22 R22 K105 ; R22 := R22["EDIT_SHORTCUT_CONTROL_POINTS"]
	602	[7443]	EQ       	0 R21 R22 ; if R21 ~= R22 then PC := 633
	603	[7443]	JMP      	633 ; PC := 633
	604	[7443]	GETGLOBAL	R21 K37 ; R21 := 0x7b998233
	605	[7443]	GETUPVAL 	R22 U10 ; R22 := U10
	606	[7443]	GETTABLE 	R22 R22 K106 ; R22 := R22["mMovingControlPoint"]
	607	[7443]	CALL     	R21 2 2 ; R21 := R21(R22)
	608	[7443]	TEST     	R21 1 ; if R21 then PC := 633
	609	[7443]	JMP      	633 ; PC := 633
	610	[7444]	GETUPVAL 	R21 U10 ; R21 := U10
	611	[7444]	SETTABLE 	R21 K107 K48 ; R21["mControlPointHeld"] := true
	612	[7445]	GETUPVAL 	R21 U10 ; R21 := U10
	613	[7445]	GETUPVAL 	R22 U11 ; R22 := U11
	614	[7445]	CALL     	R22 1 2 ; R22 := R22()
	615	[7445]	SETTABLE 	R21 K63 R22 ; R21["mInitialWorldCursor"] := R22
	616	[7446]	GETUPVAL 	R21 U10 ; R21 := U10
	617	[7446]	GETGLOBAL	R22 K71 ; R22 := 0xa421af95
	618	[7446]	GETUPVAL 	R23 U10 ; R23 := U10
	619	[7446]	GETTABLE 	R23 R23 K106 ; R23 := R23["mMovingControlPoint"]
	620	[7446]	GETTABLE 	R23 R23 K72 ; R23 := R23["position"]
	621	[7446]	GETTABLE 	R23 R23 K43 ; R23 := R23["x"]
	622	[7446]	GETUPVAL 	R24 U10 ; R24 := U10
	623	[7446]	GETTABLE 	R24 R24 K106 ; R24 := R24["mMovingControlPoint"]
	624	[7446]	GETTABLE 	R24 R24 K72 ; R24 := R24["position"]
	625	[7446]	GETTABLE 	R24 R24 K44 ; R24 := R24["y"]
	626	[7446]	GETUPVAL 	R25 U10 ; R25 := U10
	627	[7446]	GETTABLE 	R25 R25 K106 ; R25 := R25["mMovingControlPoint"]
	628	[7446]	GETTABLE 	R25 R25 K72 ; R25 := R25["position"]
	629	[7446]	GETTABLE 	R25 R25 K73 ; R25 := R25["z"]
	630	[7446]	CALL     	R22 4 2 ; R22 := R22(R23,R24,R25)
	631	[7446]	SETTABLE 	R21 K60 R22 ; R21["mInitialPosition"] := R22
	632	[7446]	JMP      	792 ; PC := 792
	633	[7447]	GETUPVAL 	R21 U15 ; R21 := U15
	634	[7447]	TEST     	R21 0 ; if not R21 then PC := 745
	635	[7447]	JMP      	745 ; PC := 745
	636	[7448]	GETGLOBAL	R21 K108 ; R21 := mSuperPoly
	637	[7448]	GETUPVAL 	R22 U15 ; R22 := U15
	638	[7448]	GETTABLE 	R21 R21 R22 ; R21 := R21[R22]
	639	[7448]	TEST     	R21 0 ; if not R21 then PC := 792
	640	[7448]	JMP      	792 ; PC := 792
	641	[7449]	GETUPVAL 	R21 U13 ; R21 := U13
	642	[7449]	GETTABLE 	R21 R21 K82 ; R21 := R21["mShiftDown"]
	643	[7449]	TEST     	R21 0 ; if not R21 then PC := 712
	644	[7449]	JMP      	712 ; PC := 712
	645	[7452]	GETGLOBAL	R21 K108 ; R21 := mSuperPoly
	646	[7452]	GETUPVAL 	R22 U16 ; R22 := U16
	647	[7452]	GETTABLE 	R21 R21 R22 ; R21 := R21[R22]
	648	[7452]	TEST     	R21 0 ; if not R21 then PC := 792
	649	[7452]	JMP      	792 ; PC := 792
	650	[7454]	GETUPVAL 	R21 U11 ; R21 := U11
	651	[7454]	CALL     	R21 1 2 ; R21 := R21()
	652	[7456]	GETGLOBAL	R22 K108 ; R22 := mSuperPoly
	653	[7456]	GETUPVAL 	R23 U15 ; R23 := U15
	654	[7456]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	655	[7456]	SELF     	R22 R22 K109 ; R23 := R22; R22 := R22[0x5ff54ca6]
	656	[7456]	MOVE     	R24 R21 ; R24 := R21
	657	[7456]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	658	[7457]	GETGLOBAL	R23 K108 ; R23 := mSuperPoly
	659	[7457]	GETUPVAL 	R24 U15 ; R24 := U15
	660	[7457]	GETTABLE 	R23 R23 R24 ; R23 := R23[R24]
	661	[7457]	SELF     	R23 R23 K110 ; R24 := R23; R23 := R23[0xf04f37dd]
	662	[7457]	CALL     	R23 2 2 ; R23 := R23(R24)
	663	[7458]	GETUPVAL 	R24 U17 ; R24 := U17
	664	[7458]	MOVE     	R25 R23 ; R25 := R23
	665	[7458]	MOVE     	R26 R22 ; R26 := R22
	666	[7458]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	667	[7460]	GETGLOBAL	R25 K111 ; R25 := mStichStart
	668	[7460]	EQ       	0 R25 K10 ; if R25 ~= nil then PC := 672
	669	[7460]	JMP      	672 ; PC := 672
	670	[7461]	SETGLOBALHASH	R24 K111 ; mStichStart := R24
	671	[7461]	JMP      	792 ; PC := 792
	672	[7463]	GETGLOBAL	R25 K111 ; R25 := mStichStart
	673	[7464]	MOVE     	R26 R24 ; R26 := R24
	674	[7465]	GETGLOBAL	R27 K108 ; R27 := mSuperPoly
	675	[7465]	GETUPVAL 	R28 U16 ; R28 := U16
	676	[7465]	GETTABLE 	R27 R27 R28 ; R27 := R27[R28]
	677	[7465]	SELF     	R27 R27 K110 ; R28 := R27; R27 := R27[0xf04f37dd]
	678	[7465]	CALL     	R27 2 2 ; R27 := R27(R28)
	679	[7467]	LOADK    	R28 := 1.000000
	680	[7467]	LEN      	R29 R27 ; R29 := # R27
	681	[7467]	LOADK    	R30 := 1.000000
	682	[7467]	FORPREP  	R28 697 ; R28 -= R30; PC := 697
	683	[7468]	GETGLOBAL	R32 K108 ; R32 := mSuperPoly
	684	[7468]	GETUPVAL 	R33 U16 ; R33 := U16
	685	[7468]	GETTABLE 	R32 R32 R33 ; R32 := R32[R33]
	686	[7468]	SELF     	R32 R32 K112 ; R33 := R32; R32 := R32[0x94c6cf60]
	687	[7468]	GETTABLE 	R34 R27 R31 ; R34 := R27[R31]
	688	[7468]	CALL     	R32 3 2 ; R32 := R32(R33,R34)
	689	[7468]	SETTABLE 	R27 R31 R32 ; R27[R31] := R32
	690	[7469]	GETGLOBAL	R32 K108 ; R32 := mSuperPoly
	691	[7469]	GETUPVAL 	R33 U15 ; R33 := U15
	692	[7469]	GETTABLE 	R32 R32 R33 ; R32 := R32[R33]
	693	[7469]	SELF     	R32 R32 K109 ; R33 := R32; R32 := R32[0x5ff54ca6]
	694	[7469]	GETTABLE 	R34 R27 R31 ; R34 := R27[R31]
	695	[7469]	CALL     	R32 3 2 ; R32 := R32(R33,R34)
	696	[7469]	SETTABLE 	R27 R31 R32 ; R27[R31] := R32
	697	[7467]	FORLOOP  	R28 683 ; R28 += R30; if R28 <= R29 then begin PC := 683; R31 := R28 end
	698	[7471]	GETGLOBAL	R32 K108 ; R32 := mSuperPoly
	699	[7471]	GETUPVAL 	R33 U15 ; R33 := U15
	700	[7471]	GETTABLE 	R32 R32 R33 ; R32 := R32[R33]
	701	[7471]	SELF     	R32 R32 K113 ; R33 := R32; R32 := R32[0xa644477e]
	702	[7471]	MOVE     	R34 R25 ; R34 := R25
	703	[7471]	MOVE     	R35 R26 ; R35 := R26
	704	[7471]	MOVE     	R36 R27 ; R36 := R27
	705	[7471]	CALL     	R32 5 1 ; R32(R33,R34,R35,R36)
	706	[7472]	GETGLOBAL	R32 K108 ; R32 := mSuperPoly
	707	[7472]	GETUPVAL 	R33 U15 ; R33 := U15
	708	[7472]	GETTABLE 	R32 R32 R33 ; R32 := R32[R33]
	709	[7472]	SELF     	R32 R32 K114 ; R33 := R32; R32 := R32[0x0744d776]
	710	[7472]	CALL     	R32 2 1 ; R32(R33)
	711	[7474]	JMP      	792 ; PC := 792
	712	[7476]	GETUPVAL 	R32 U13 ; R32 := U13
	713	[7476]	GETTABLE 	R32 R32 K92 ; R32 := R32["mAltDown"]
	714	[7476]	TEST     	R32 0 ; if not R32 then PC := 728
	715	[7476]	JMP      	728 ; PC := 728
	716	[7477]	GETGLOBAL	R32 K108 ; R32 := mSuperPoly
	717	[7477]	GETUPVAL 	R33 U15 ; R33 := U15
	718	[7477]	GETTABLE 	R32 R32 R33 ; R32 := R32[R33]
	719	[7477]	SELF     	R32 R32 K115 ; R33 := R32; R32 := R32[0x7ceafc23]
	720	[7477]	NEWTABLE 	R34 0 0 ; R34 := {}
	721	[7477]	CALL     	R32 3 1 ; R32(R33,R34)
	722	[7478]	GETGLOBAL	R32 K108 ; R32 := mSuperPoly
	723	[7478]	GETUPVAL 	R33 U15 ; R33 := U15
	724	[7478]	GETTABLE 	R32 R32 R33 ; R32 := R32[R33]
	725	[7478]	SELF     	R32 R32 K114 ; R33 := R32; R32 := R32[0x0744d776]
	726	[7478]	CALL     	R32 2 1 ; R32(R33)
	727	[7478]	JMP      	792 ; PC := 792
	728	[7479]	GETUPVAL 	R32 U13 ; R32 := U13
	729	[7479]	GETTABLE 	R32 R32 K81 ; R32 := R32["mControlDown"]
	730	[7479]	TEST     	R32 1 ; if R32 then PC := 792
	731	[7479]	JMP      	792 ; PC := 792
	732	[7480]	GETGLOBAL	R32 K108 ; R32 := mSuperPoly
	733	[7480]	GETUPVAL 	R33 U15 ; R33 := U15
	734	[7480]	GETTABLE 	R32 R32 R33 ; R32 := R32[R33]
	735	[7480]	SELF     	R32 R32 K116 ; R33 := R32; R32 := R32[0xf5934be3]
	736	[7480]	GETUPVAL 	R34 U11 ; R34 := U11
	737	[7480]	CALL     	R34 1 0 ; R34,... := R34()
	738	[7480]	CALL     	R32 0 1 ; R32(R33,...)
	739	[7481]	GETGLOBAL	R32 K108 ; R32 := mSuperPoly
	740	[7481]	GETUPVAL 	R33 U15 ; R33 := U15
	741	[7481]	GETTABLE 	R32 R32 R33 ; R32 := R32[R33]
	742	[7481]	SELF     	R32 R32 K114 ; R33 := R32; R32 := R32[0x0744d776]
	743	[7481]	CALL     	R32 2 1 ; R32(R33)
	744	[7483]	JMP      	792 ; PC := 792
	745	[7484]	GETGLOBAL	R32 K35 ; R32 := 0x34291f5c
	746	[7484]	GETTABLE 	R32 R32 K40 ; R32 := R32[0x781669d7]
	747	[7484]	CALL     	R32 1 2 ; R32 := R32()
	748	[7484]	TEST     	R32 0 ; if not R32 then PC := 763
	749	[7484]	JMP      	763 ; PC := 763
	750	[7485]	GETGLOBAL	R32 K20 ; R32 := mHover
	751	[7485]	GETTABLE 	R32 R32 K22 ; R32 := R32["Region"]
	752	[7485]	TEST     	R32 0 ; if not R32 then PC := 759
	753	[7485]	JMP      	759 ; PC := 759
	754	[7486]	GETUPVAL 	R32 U18 ; R32 := U18
	755	[7486]	GETGLOBAL	R33 K20 ; R33 := mHover
	756	[7486]	GETTABLE 	R33 R33 K22 ; R33 := R33["Region"]
	757	[7486]	CALL     	R32 2 1 ; R32(R33)
	758	[7486]	JMP      	792 ; PC := 792
	759	[7488]	GETUPVAL 	R32 U6 ; R32 := U6
	760	[7488]	GETTABLE 	R32 R32 K117 ; R32 := R32["NodeClick"]
	761	[7488]	SETUPVAL 	R32 U19 ; U19 := R32
	762	[7489]	JMP      	792 ; PC := 792
	763	[7490]	GETGLOBAL	R32 K20 ; R32 := mHover
	764	[7490]	GETTABLE 	R32 R32 K21 ; R32 := R32["Node"]
	765	[7490]	TEST     	R32 0 ; if not R32 then PC := 771
	766	[7490]	JMP      	771 ; PC := 771
	767	[7491]	GETUPVAL 	R32 U6 ; R32 := U6
	768	[7491]	GETTABLE 	R32 R32 K117 ; R32 := R32["NodeClick"]
	769	[7491]	SETUPVAL 	R32 U19 ; U19 := R32
	770	[7491]	JMP      	792 ; PC := 792
	771	[7492]	GETGLOBAL	R32 K20 ; R32 := mHover
	772	[7492]	GETTABLE 	R32 R32 K22 ; R32 := R32["Region"]
	773	[7492]	TEST     	R32 0 ; if not R32 then PC := 780
	774	[7492]	JMP      	780 ; PC := 780
	775	[7493]	GETUPVAL 	R32 U18 ; R32 := U18
	776	[7493]	GETGLOBAL	R33 K20 ; R33 := mHover
	777	[7493]	GETTABLE 	R33 R33 K22 ; R33 := R33["Region"]
	778	[7493]	CALL     	R32 2 1 ; R32(R33)
	779	[7493]	JMP      	792 ; PC := 792
	780	[7495]	GETUPVAL 	R32 U20 ; R32 := U20
	781	[7495]	GETTABLE 	R32 R32 K118 ; R32 := R32["IsVisible"]
	782	[7495]	TEST     	R32 1 ; if R32 then PC := 792
	783	[7495]	JMP      	792 ; PC := 792
	784	[7495]	GETGLOBAL	R32 K35 ; R32 := 0x34291f5c
	785	[7495]	GETTABLE 	R32 R32 K119 ; R32 := R32[0x86647daf]
	786	[7495]	CALL     	R32 1 2 ; R32 := R32()
	787	[7495]	TEST     	R32 1 ; if R32 then PC := 792
	788	[7495]	JMP      	792 ; PC := 792
	789	[7496]	GETGLOBAL	R32 K103 ; R32 := mDrag
	790	[7496]	SELF     	R32 R32 K104 ; R33 := R32; R32 := R32[0xd033d908]
	791	[7496]	CALL     	R32 2 1 ; R32(R33)
	792	[7499]	OP_LOADBOOL	R32 0 0 ; R32 := false
	793	[7499]	RETURN   	R32 2 ; return R32 
	794	[7500]	RETURN   	R0 1 ; return 

function #151 <?:7503,7510> (21 instructions, 84 bytes at 0000021138FCCD50)
0 params, 4 slots, 2 upvalues, 0 locals, 9 constants, 0 functions
	1	[7504]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[7504]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[7504]	GETTABLE 	R1 R1 K1 ; R1 := R1["JunctionTasks"]
	4	[7504]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[7504]	TEST     	R0 1 ; if R0 then PC := 21
	6	[7504]	JMP      	21 ; PC := 21
	7	[7505]	GETUPVAL 	R0 U0 ; R0 := U0
	8	[7505]	GETTABLE 	R0 R0 K1 ; R0 := R0["JunctionTasks"]
	9	[7505]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xe4162eed]
	10	[7505]	LOADK    	R2 K3 ; R2 := "EndDrag"
	11	[7505]	LOADK    	R3 K4 ; R3 := ""
	12	[7505]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	13	[7506]	GETUPVAL 	R0 U1 ; R0 := U1
	14	[7506]	SETTABLE 	R0 K5 K6 ; R0["JunctionDrag"] := false
	15	[7507]	GETUPVAL 	R0 U0 ; R0 := U0
	16	[7507]	GETTABLE 	R0 R0 K1 ; R0 := R0["JunctionTasks"]
	17	[7507]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0x32302b4a]
	18	[7507]	CALL     	R0 2 1 ; R0(R1)
	19	[7508]	GETUPVAL 	R0 U0 ; R0 := U0
	20	[7508]	SETTABLE 	R0 K1 K8 ; R0["JunctionTasks"] := nil
	21	[7510]	RETURN   	R0 1 ; return 

function #152 <?:7513,7524> (42 instructions, 168 bytes at 0000021138FCCF60)
0 params, 7 slots, 3 upvalues, 0 locals, 14 constants, 0 functions
	1	[7514]	GETGLOBAL	R0 K0 ; R0 := 0x34291f5c
	2	[7514]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x781669d7]
	3	[7514]	CALL     	R0 1 2 ; R0 := R0()
	4	[7514]	TEST     	R0 0 ; if not R0 then PC := 17
	5	[7514]	JMP      	17 ; PC := 17
	6	[7514]	GETGLOBAL	R0 K2 ; R0 := mHover
	7	[7514]	GETTABLE 	R0 R0 K3 ; R0 := R0["Node"]
	8	[7514]	GETTABLE 	R0 R0 K4 ; R0 := R0["isJunction"]
	9	[7514]	TEST     	R0 0 ; if not R0 then PC := 17
	10	[7514]	JMP      	17 ; PC := 17
	11	[7515]	GETUPVAL 	R0 U0 ; R0 := U0
	12	[7515]	GETGLOBAL	R1 K2 ; R1 := mHover
	13	[7515]	GETTABLE 	R1 R1 K3 ; R1 := R1["Node"]
	14	[7515]	OP_LOADBOOL	R2 0 0 ; R2 := false
	15	[7515]	CALL     	R0 3 1 ; R0(R1,R2)
	16	[7515]	JMP      	29 ; PC := 29
	17	[7517]	GETGLOBAL	R0 K5 ; R0 := 0x25312c9b
	18	[7517]	GETGLOBAL	R1 K6 ; R1 := 0xae91e43b
	19	[7517]	LOADK    	R2 K7 ; R2 := "InfoTip"
	20	[7517]	LOADK    	R3 := 0.000000
	21	[7517]	NEWTABLE 	R4 1 0 ; R4 := {}
	22	[7517]	LOADK    	R5 K9 ; R5 := "_alpha"
	23	[7517]	SETLIST  	R4 1 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
	24	[7517]	NEWTABLE 	R5 1 0 ; R5 := {}
	25	[7517]	LOADK    	R6 := 100.000000
	26	[7517]	SETLIST  	R5 1 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
	27	[7517]	LOADK    	R6 K10 ; R6 := 0.200000
	28	[7517]	CALL     	R0 7 1 ; R0(R1,R2,R3,R4,R5,R6)
	29	[7519]	GETGLOBAL	R0 K0 ; R0 := 0x34291f5c
	30	[7519]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x781669d7]
	31	[7519]	CALL     	R0 1 2 ; R0 := R0()
	32	[7519]	TEST     	R0 0 ; if not R0 then PC := 42
	33	[7519]	JMP      	42 ; PC := 42
	34	[7520]	GETUPVAL 	R0 U1 ; R0 := U1
	35	[7520]	GETGLOBAL	R1 K2 ; R1 := mHover
	36	[7520]	GETTABLE 	R1 R1 K3 ; R1 := R1["Node"]
	37	[7520]	SETTABLE 	R0 K11 R1 ; R0["TooltipNode"] := R1
	38	[7521]	GETUPVAL 	R0 U1 ; R0 := U1
	39	[7521]	SETTABLE 	R0 K12 K13 ; R0["mNodeVisible"] := true
	40	[7522]	GETUPVAL 	R0 U2 ; R0 := U2
	41	[7522]	CALL     	R0 1 1 ; R0()
	42	[7524]	RETURN   	R0 1 ; return 

function #153 <?:7527,7544> (57 instructions, 228 bytes at 0000021138FCD260)
0 params, 9 slots, 3 upvalues, 0 locals, 21 constants, 1 function
	1	[7528]	GETGLOBAL	R0 K0 ; R0 := 0x34291f5c
	2	[7528]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x781669d7]
	3	[7528]	CALL     	R0 1 2 ; R0 := R0()
	4	[7528]	TEST     	R0 0 ; if not R0 then PC := 17
	5	[7528]	JMP      	17 ; PC := 17
	6	[7528]	GETGLOBAL	R0 K2 ; R0 := 0x7b998233
	7	[7528]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[7528]	GETTABLE 	R1 R1 K3 ; R1 := R1["JunctionTasks"]
	9	[7528]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[7528]	TEST     	R0 1 ; if R0 then PC := 17
	11	[7528]	JMP      	17 ; PC := 17
	12	[7529]	GETGLOBAL	R0 K4 ; R0 := _T
	13	[7529]	SETTABLE 	R0 K5 K6 ; R0["JunctionTasksUIRadialSector"] := nil
	14	[7530]	GETUPVAL 	R0 U1 ; R0 := U1
	15	[7530]	GETTABLE 	R0 R0 K7 ; R0 := R0[0xd75fc7ea]
	16	[7530]	CALL     	R0 1 1 ; R0()
	17	[7532]	GETGLOBAL	R0 K8 ; R0 := 0x25312c9b
	18	[7532]	GETGLOBAL	R1 K9 ; R1 := 0xae91e43b
	19	[7532]	LOADK    	R2 K10 ; R2 := "InfoTip"
	20	[7532]	LOADK    	R3 := 0.000000
	21	[7532]	NEWTABLE 	R4 1 0 ; R4 := {}
	22	[7532]	LOADK    	R5 K12 ; R5 := "_alpha"
	23	[7532]	SETLIST  	R4 1 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
	24	[7532]	NEWTABLE 	R5 1 0 ; R5 := {}
	25	[7532]	LOADK    	R6 := 0.000000
	26	[7532]	SETLIST  	R5 1 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
	27	[7532]	LOADK    	R6 K13 ; R6 := 0.050000
	28	[7532]	LOADK    	R7 := 0.000000
	29	[7535]	CLOSURE  	R8 0 ; R8 := closure(Function #1)
	30	[7532]	CALL     	R0 9 1 ; R0(R1,R2,R3,R4,R5,R6,R7,R8)
	31	[7536]	GETGLOBAL	R0 K0 ; R0 := 0x34291f5c
	32	[7536]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x781669d7]
	33	[7536]	CALL     	R0 1 2 ; R0 := R0()
	34	[7536]	TEST     	R0 0 ; if not R0 then PC := 57
	35	[7536]	JMP      	57 ; PC := 57
	36	[7537]	GETGLOBAL	R0 K2 ; R0 := 0x7b998233
	37	[7537]	GETUPVAL 	R1 U1 ; R1 := U1
	38	[7537]	GETTABLE 	R1 R1 K14 ; R1 := R1["TooltipNode"]
	39	[7537]	CALL     	R0 2 2 ; R0 := R0(R1)
	40	[7537]	TEST     	R0 1 ; if R0 then PC := 51
	41	[7537]	JMP      	51 ; PC := 51
	42	[7538]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	43	[7538]	SELF     	R0 R0 K15 ; R1 := R0; R0 := R0[0x67bc869f]
	44	[7538]	GETUPVAL 	R2 U1 ; R2 := U1
	45	[7538]	GETTABLE 	R2 R2 K14 ; R2 := R2["TooltipNode"]
	46	[7538]	GETTABLE 	R2 R2 K16 ; R2 := R2["clipName"]
	47	[7538]	LOADK    	R3 := 9.000000
	48	[7538]	GETGLOBAL	R4 K17 ; R4 := 0x0032441c
	49	[7538]	GETTABLE 	R4 R4 K18 ; R4 := R4["UIColor_White"]
	50	[7538]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	51	[7540]	GETUPVAL 	R0 U1 ; R0 := U1
	52	[7540]	SETTABLE 	R0 K14 K6 ; R0["TooltipNode"] := nil
	53	[7541]	GETUPVAL 	R0 U1 ; R0 := U1
	54	[7541]	SETTABLE 	R0 K19 K20 ; R0["mNodeVisible"] := false
	55	[7542]	GETUPVAL 	R0 U2 ; R0 := U2
	56	[7542]	CALL     	R0 1 1 ; R0()
	57	[7544]	RETURN   	R0 1 ; return 

function #154 <?:7546,7588> (166 instructions, 664 bytes at 0000021138FCD7A0)
2 params, 12 slots, 6 upvalues, 0 locals, 38 constants, 0 functions
	1	[7547]	GETGLOBAL	R2 K0 ; R2 := mInputBlocked
	2	[7547]	TEST     	R2 1 ; if R2 then PC := 166
	3	[7547]	JMP      	166 ; PC := 166
	4	[7547]	GETGLOBAL	R2 K1 ; R2 := _T
	5	[7547]	GETTABLE 	R2 R2 K2 ; R2 := R2["MouseInWorldStateWindow"]
	6	[7547]	TEST     	R2 1 ; if R2 then PC := 166
	7	[7547]	JMP      	166 ; PC := 166
	8	[7547]	GETGLOBAL	R2 K1 ; R2 := _T
	9	[7547]	GETTABLE 	R2 R2 K3 ; R2 := R2["MouseInChatArea"]
	10	[7547]	TEST     	R2 1 ; if R2 then PC := 166
	11	[7547]	JMP      	166 ; PC := 166
	12	[7547]	GETGLOBAL	R2 K1 ; R2 := _T
	13	[7547]	GETTABLE 	R2 R2 K4 ; R2 := R2["JunctionTasksUIRadialSector"]
	14	[7547]	EQ       	0 R2 K5 ; if R2 ~= nil then PC := 166
	15	[7547]	JMP      	166 ; PC := 166
	16	[7547]	GETGLOBAL	R2 K6 ; R2 := mInfoTip
	17	[7547]	GETTABLE 	R2 R2 K7 ; R2 := R2["NodeSelectionOpen"]
	18	[7547]	TEST     	R2 1 ; if R2 then PC := 166
	19	[7547]	JMP      	166 ; PC := 166
	20	[7548]	GETGLOBAL	R2 K8 ; R2 := Zoom
	21	[7548]	GETTABLE 	R2 R2 K9 ; R2 := R2["MIN_ZOOM"]
	22	[7549]	GETGLOBAL	R3 K8 ; R3 := Zoom
	23	[7549]	GETTABLE 	R3 R3 K10 ; R3 := R3["MAX_ZOOM"]
	24	[7550]	LOADNIL  	R4 R4 ; R4 := nil
	25	[7551]	GETGLOBAL	R5 K11 ; R5 := 0x34291f5c
	26	[7551]	GETTABLE 	R5 R5 K12 ; R5 := R5[0x781669d7]
	27	[7551]	CALL     	R5 1 2 ; R5 := R5()
	28	[7551]	TEST     	R5 1 ; if R5 then PC := 37
	29	[7551]	JMP      	37 ; PC := 37
	30	[7552]	GETGLOBAL	R5 K8 ; R5 := Zoom
	31	[7552]	GETTABLE 	R5 R5 K10 ; R5 := R5["MAX_ZOOM"]
	32	[7552]	GETGLOBAL	R6 K13 ; R6 := mSmoothZoom
	33	[7552]	GETTABLE 	R6 R6 K14 ; R6 := R6["mTargetVal"]
	34	[7552]	SUB      	R5 R5 R6 ; R5 := R5 - R6
	35	[7552]	DIV      	R4 R5 K15 ; R4 := R5 / 2.000000
	36	[7552]	JMP      	42 ; PC := 42
	37	[7554]	GETGLOBAL	R5 K16 ; R5 := 0x5bced4c4
	38	[7554]	GETTABLE 	R5 R5 K17 ; R5 := R5[0xe4a5b3ca]
	39	[7554]	MOVE     	R6 R1 ; R6 := R1
	40	[7554]	CALL     	R5 2 2 ; R5 := R5(R6)
	41	[7554]	MOVE     	R4 R5 ; R4 := R5
	42	[7556]	GETGLOBAL	R5 K11 ; R5 := 0x34291f5c
	43	[7556]	GETTABLE 	R5 R5 K18 ; R5 := R5[0x1467d5f4]
	44	[7556]	CALL     	R5 1 2 ; R5 := R5()
	45	[7556]	TEST     	R5 0 ; if not R5 then PC := 48
	46	[7556]	JMP      	48 ; PC := 48
	47	[7557]	DIV      	R4 R4 K19 ; R4 := R4 / 10.000000
	48	[7559]	LT       	0 R4 K20 ; if R4 >= 0.050000 then PC := 56
	49	[7559]	JMP      	56 ; PC := 56
	50	[7559]	GETGLOBAL	R5 K11 ; R5 := 0x34291f5c
	51	[7559]	GETTABLE 	R5 R5 K12 ; R5 := R5[0x781669d7]
	52	[7559]	CALL     	R5 1 2 ; R5 := R5()
	53	[7559]	TEST     	R5 1 ; if R5 then PC := 56
	54	[7559]	JMP      	56 ; PC := 56
	55	[7560]	LOADK    	R4 K20 ; R4 := 0.050000
	56	[7562]	GETUPVAL 	R5 U0 ; R5 := U0
	57	[7562]	GETUPVAL 	R6 U1 ; R6 := U1
	58	[7562]	GETTABLE 	R6 R6 K21 ; R6 := R6["EDIT_REGION_FRAMING"]
	59	[7562]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 64
	60	[7562]	JMP      	64 ; PC := 64
	61	[7563]	LOADK    	R4 K20 ; R4 := 0.050000
	62	[7564]	LOADK    	R2 := -999.000000
	63	[7565]	LOADK    	R3 := 999.000000
	64	[7567]	GETGLOBAL	R5 K22 ; R5 := 0x03f57322
	65	[7567]	MOVE     	R6 R1 ; R6 := R1
	66	[7567]	CALL     	R5 2 2 ; R5 := R5(R6)
	67	[7567]	LT       	0 R5 K23 ; if R5 >= 0.000000 then PC := 137
	68	[7567]	JMP      	137 ; PC := 137
	69	[7568]	GETGLOBAL	R5 K24 ; R5 := 0x7b998233
	70	[7568]	GETGLOBAL	R6 K25 ; R6 := mHover
	71	[7568]	CALL     	R5 2 2 ; R5 := R5(R6)
	72	[7568]	TEST     	R5 1 ; if R5 then PC := 108
	73	[7568]	JMP      	108 ; PC := 108
	74	[7568]	GETGLOBAL	R5 K24 ; R5 := 0x7b998233
	75	[7568]	GETGLOBAL	R6 K25 ; R6 := mHover
	76	[7568]	GETTABLE 	R6 R6 K26 ; R6 := R6["Region"]
	77	[7568]	CALL     	R5 2 2 ; R5 := R5(R6)
	78	[7568]	TEST     	R5 1 ; if R5 then PC := 108
	79	[7568]	JMP      	108 ; PC := 108
	80	[7568]	GETGLOBAL	R5 K25 ; R5 := mHover
	81	[7568]	GETTABLE 	R5 R5 K26 ; R5 := R5["Region"]
	82	[7568]	GETGLOBAL	R6 K27 ; R6 := mZoomedRegion
	83	[7568]	EQ       	1 R5 R6 ; if R5 == R6 then PC := 108
	84	[7568]	JMP      	108 ; PC := 108
	85	[7569]	GETUPVAL 	R5 U2 ; R5 := U2
	86	[7569]	GETUPVAL 	R6 U3 ; R6 := U3
	87	[7569]	GETTABLE 	R6 R6 K28 ; R6 := R6[0x74a11ec6]
	88	[7569]	GETGLOBAL	R7 K29 ; R7 := 0xae91e43b
	89	[7569]	SELF     	R7 R7 K30 ; R8 := R7; R7 := R7[0x6b837788]
	90	[7569]	CALL     	R7 2 2 ; R7 := R7(R8)
	91	[7569]	DIV      	R7 R7 K15 ; R7 := R7 / 2.000000
	92	[7569]	CALL     	R6 2 2 ; R6 := R6(R7)
	93	[7569]	GETUPVAL 	R7 U3 ; R7 := U3
	94	[7569]	GETTABLE 	R7 R7 K28 ; R7 := R7[0x74a11ec6]
	95	[7569]	GETGLOBAL	R8 K29 ; R8 := 0xae91e43b
	96	[7569]	SELF     	R8 R8 K31 ; R9 := R8; R8 := R8[0xaf9fda9f]
	97	[7569]	CALL     	R8 2 2 ; R8 := R8(R9)
	98	[7569]	DIV      	R8 R8 K15 ; R8 := R8 / 2.000000
	99	[7569]	CALL     	R7 2 0 ; R7,... := R7(R8)
	100	[7569]	CALL     	R5 0 1 ; R5(R6,...)
	101	[7570]	GETUPVAL 	R5 U4 ; R5 := U4
	102	[7570]	GETGLOBAL	R6 K25 ; R6 := mHover
	103	[7570]	GETTABLE 	R6 R6 K26 ; R6 := R6["Region"]
	104	[7570]	LOADNIL  	R7 R7 ; R7 := nil
	105	[7570]	OP_LOADBOOL	R8 1 0 ; R8 := true
	106	[7570]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	107	[7571]	RETURN   	R0 1 ; return 
	108	[7574]	MOVE     	R5 R3 ; R5 := R3
	109	[7575]	GETGLOBAL	R6 K24 ; R6 := 0x7b998233
	110	[7575]	GETGLOBAL	R7 K27 ; R7 := mZoomedRegion
	111	[7575]	CALL     	R6 2 2 ; R6 := R6(R7)
	112	[7575]	TEST     	R6 1 ; if R6 then PC := 122
	113	[7575]	JMP      	122 ; PC := 122
	114	[7576]	GETGLOBAL	R6 K16 ; R6 := 0x5bced4c4
	115	[7576]	GETTABLE 	R6 R6 K32 ; R6 := R6[0xb62ecfe0]
	116	[7576]	MOVE     	R7 R5 ; R7 := R5
	117	[7576]	GETGLOBAL	R8 K27 ; R8 := mZoomedRegion
	118	[7576]	GETTABLE 	R8 R8 K33 ; R8 := R8["zoomedFraming"]
	119	[7576]	GETTABLE 	R8 R8 K34 ; R8 := R8["z"]
	120	[7576]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	121	[7576]	MOVE     	R5 R6 ; R5 := R6
	122	[7578]	GETGLOBAL	R6 K13 ; R6 := mSmoothZoom
	123	[7578]	GETTABLE 	R6 R6 K14 ; R6 := R6["mTargetVal"]
	124	[7578]	LT       	0 R6 R5 ; if R6 >= R5 then PC := 166
	125	[7578]	JMP      	166 ; PC := 166
	126	[7579]	GETGLOBAL	R6 K13 ; R6 := mSmoothZoom
	127	[7579]	SELF     	R6 R6 K35 ; R7 := R6; R6 := R6[0x188e2bee]
	128	[7579]	GETGLOBAL	R8 K36 ; R8 := 0x42dcc9f5
	129	[7579]	GETGLOBAL	R9 K13 ; R9 := mSmoothZoom
	130	[7579]	GETTABLE 	R9 R9 K14 ; R9 := R9["mTargetVal"]
	131	[7579]	ADD      	R9 R9 R4 ; R9 := R9 + R4
	132	[7579]	MOVE     	R10 R2 ; R10 := R2
	133	[7579]	MOVE     	R11 R5 ; R11 := R5
	134	[7579]	CALL     	R8 4 0 ; R8,... := R8(R9,R10,R11)
	135	[7579]	CALL     	R6 0 1 ; R6(R7,...)
	136	[7580]	JMP      	166 ; PC := 166
	137	[7581]	GETGLOBAL	R6 K22 ; R6 := 0x03f57322
	138	[7581]	MOVE     	R7 R1 ; R7 := R1
	139	[7581]	CALL     	R6 2 2 ; R6 := R6(R7)
	140	[7581]	LT       	0 K23 R6 ; if 0.000000 >= R6 then PC := 166
	141	[7581]	JMP      	166 ; PC := 166
	142	[7582]	GETGLOBAL	R6 K13 ; R6 := mSmoothZoom
	143	[7582]	SELF     	R6 R6 K35 ; R7 := R6; R6 := R6[0x188e2bee]
	144	[7582]	GETGLOBAL	R8 K36 ; R8 := 0x42dcc9f5
	145	[7582]	GETGLOBAL	R9 K13 ; R9 := mSmoothZoom
	146	[7582]	GETTABLE 	R9 R9 K14 ; R9 := R9["mTargetVal"]
	147	[7582]	SUB      	R9 R9 R4 ; R9 := R9 - R4
	148	[7582]	MOVE     	R10 R2 ; R10 := R2
	149	[7582]	MOVE     	R11 R3 ; R11 := R3
	150	[7582]	CALL     	R8 4 0 ; R8,... := R8(R9,R10,R11)
	151	[7582]	CALL     	R6 0 1 ; R6(R7,...)
	152	[7583]	GETGLOBAL	R6 K24 ; R6 := 0x7b998233
	153	[7583]	GETGLOBAL	R7 K27 ; R7 := mZoomedRegion
	154	[7583]	CALL     	R6 2 2 ; R6 := R6(R7)
	155	[7583]	TEST     	R6 1 ; if R6 then PC := 166
	156	[7583]	JMP      	166 ; PC := 166
	157	[7583]	GETGLOBAL	R6 K13 ; R6 := mSmoothZoom
	158	[7583]	GETTABLE 	R6 R6 K14 ; R6 := R6["mTargetVal"]
	159	[7583]	GETGLOBAL	R7 K8 ; R7 := Zoom
	160	[7583]	GETTABLE 	R7 R7 K37 ; R7 := R7["ZOOM_OUT_THRESHOLD"]
	161	[7583]	LE       	0 R6 R7 ; if R6 > R7 then PC := 166
	162	[7583]	JMP      	166 ; PC := 166
	163	[7584]	GETUPVAL 	R6 U5 ; R6 := U5
	164	[7584]	OP_LOADBOOL	R7 0 0 ; R7 := false
	165	[7584]	CALL     	R6 2 1 ; R6(R7)
	166	[7588]	RETURN   	R0 1 ; return 

function #155 <?:7590,7612> (81 instructions, 324 bytes at 0000021138FCE000)
0 params, 3 slots, 5 upvalues, 0 locals, 22 constants, 0 functions
	1	[7591]	GETGLOBAL	R0 K0 ; R0 := mHover
	2	[7591]	GETTABLE 	R0 R0 K1 ; R0 := R0["Node"]
	3	[7591]	EQ       	1 R0 K2 ; if R0 == nil then PC := 81
	4	[7591]	JMP      	81 ; PC := 81
	5	[7592]	GETGLOBAL	R0 K0 ; R0 := mHover
	6	[7592]	GETTABLE 	R0 R0 K1 ; R0 := R0["Node"]
	7	[7592]	GETTABLE 	R0 R0 K3 ; R0 := R0["isShortcut"]
	8	[7592]	TEST     	R0 0 ; if not R0 then PC := 36
	9	[7592]	JMP      	36 ; PC := 36
	10	[7592]	GETGLOBAL	R0 K0 ; R0 := mHover
	11	[7592]	GETTABLE 	R0 R0 K1 ; R0 := R0["Node"]
	12	[7592]	GETTABLE 	R0 R0 K4 ; R0 := R0["locked"]
	13	[7592]	TEST     	R0 1 ; if R0 then PC := 24
	14	[7592]	JMP      	24 ; PC := 24
	15	[7592]	GETGLOBAL	R0 K5 ; R0 := 0x7b998233
	16	[7592]	GETGLOBAL	R1 K0 ; R1 := mHover
	17	[7592]	GETTABLE 	R1 R1 K1 ; R1 := R1["Node"]
	18	[7592]	GETTABLE 	R1 R1 K6 ; R1 := R1["radialSector"]
	19	[7592]	GETTABLE 	R1 R1 K7 ; R1 := R1["mission"]
	20	[7592]	GETTABLE 	R1 R1 K8 ; R1 := R1["levelOverride"]
	21	[7592]	CALL     	R0 2 2 ; R0 := R0(R1)
	22	[7592]	TEST     	R0 1 ; if R0 then PC := 27
	23	[7592]	JMP      	27 ; PC := 27
	24	[7592]	GETUPVAL 	R0 U0 ; R0 := U0
	25	[7592]	TEST     	R0 0 ; if not R0 then PC := 36
	26	[7592]	JMP      	36 ; PC := 36
	27	[7593]	GETUPVAL 	R0 U1 ; R0 := U1
	28	[7593]	GETGLOBAL	R1 K9 ; R1 := mRegions
	29	[7593]	GETGLOBAL	R2 K0 ; R2 := mHover
	30	[7593]	GETTABLE 	R2 R2 K1 ; R2 := R2["Node"]
	31	[7593]	GETTABLE 	R2 R2 K10 ; R2 := R2["targetRegion"]
	32	[7593]	ADD      	R2 R2 K11 ; R2 := R2 + 1.000000
	33	[7593]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	34	[7593]	CALL     	R0 2 1 ; R0(R1)
	35	[7593]	JMP      	81 ; PC := 81
	36	[7594]	GETGLOBAL	R0 K0 ; R0 := mHover
	37	[7594]	GETTABLE 	R0 R0 K1 ; R0 := R0["Node"]
	38	[7594]	GETTABLE 	R0 R0 K4 ; R0 := R0["locked"]
	39	[7594]	TEST     	R0 1 ; if R0 then PC := 81
	40	[7594]	JMP      	81 ; PC := 81
	41	[7595]	GETUPVAL 	R0 U2 ; R0 := U2
	42	[7595]	GETTABLE 	R0 R0 K12 ; R0 := R0[0x659d451f]
	43	[7595]	GETGLOBAL	R1 K13 ; R1 := 0x3ec6380d
	44	[7595]	CALL     	R0 2 1 ; R0(R1)
	45	[7598]	GETGLOBAL	R0 K14 ; R0 := 0x34291f5c
	46	[7598]	GETTABLE 	R0 R0 K15 ; R0 := R0[0x781669d7]
	47	[7598]	CALL     	R0 1 2 ; R0 := R0()
	48	[7599]	TEST     	R0 0 ; if not R0 then PC := 61
	49	[7599]	JMP      	61 ; PC := 61
	50	[7599]	GETGLOBAL	R0 K14 ; R0 := 0x34291f5c
	51	[7599]	GETTABLE 	R0 R0 K15 ; R0 := R0[0x781669d7]
	52	[7599]	CALL     	R0 1 2 ; R0 := R0()
	53	[7599]	TEST     	R0 0 ; if not R0 then PC := 64
	54	[7599]	JMP      	64 ; PC := 64
	55	[7599]	GETGLOBAL	R0 K5 ; R0 := 0x7b998233
	56	[7599]	GETUPVAL 	R1 U3 ; R1 := U3
	57	[7599]	GETTABLE 	R1 R1 K16 ; R1 := R1["TooltipNode"]
	58	[7599]	CALL     	R0 2 2 ; R0 := R0(R1)
	59	[7599]	TEST     	R0 1 ; if R0 then PC := 64
	60	[7599]	JMP      	64 ; PC := 64
	61	[7601]	GETUPVAL 	R0 U4 ; R0 := U4
	62	[7601]	CALL     	R0 1 1 ; R0()
	63	[7601]	JMP      	67 ; PC := 67
	64	[7603]	GETUPVAL 	R0 U3 ; R0 := U3
	65	[7603]	GETTABLE 	R0 R0 K17 ; R0 := R0[0xc59bc2e0]
	66	[7603]	CALL     	R0 1 1 ; R0()
	67	[7606]	GETUPVAL 	R0 U2 ; R0 := U2
	68	[7606]	GETTABLE 	R0 R0 K12 ; R0 := R0[0x659d451f]
	69	[7606]	GETGLOBAL	R1 K18 ; R1 := 0x0032441c
	70	[7606]	GETTABLE 	R1 R1 K19 ; R1 := R1["UISound_Select"]
	71	[7606]	CALL     	R0 2 1 ; R0(R1)
	72	[7607]	GETUPVAL 	R0 U2 ; R0 := U2
	73	[7607]	GETTABLE 	R0 R0 K12 ; R0 := R0[0x659d451f]
	74	[7607]	GETGLOBAL	R1 K18 ; R1 := 0x0032441c
	75	[7607]	GETTABLE 	R1 R1 K20 ; R1 := R1["UISound_ButtonSelect"]
	76	[7607]	CALL     	R0 2 1 ; R0(R1)
	77	[7609]	GETGLOBAL	R0 K21 ; R0 := mCountDown
	78	[7609]	GETGLOBAL	R1 K0 ; R1 := mHover
	79	[7609]	GETTABLE 	R1 R1 K1 ; R1 := R1["Node"]
	80	[7609]	SETTABLE 	R0 K1 R1 ; R0["Node"] := R1
	81	[7612]	RETURN   	R0 1 ; return 

function #156 <?:7614,7616> (4 instructions, 16 bytes at 0000021138FCE4C0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[7615]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[7615]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[7615]	RETURN   	R0 0 ; return R0,... 
	4	[7616]	RETURN   	R0 1 ; return 

function #157 <?:7618,7628> (17 instructions, 68 bytes at 0000021138FCE590)
0 params, 2 slots, 1 upvalue, 0 locals, 7 constants, 0 functions
	1	[7619]	GETGLOBAL	R0 K0 ; R0 := 0x34291f5c
	2	[7619]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x1467d5f4]
	3	[7619]	CALL     	R0 1 2 ; R0 := R0()
	4	[7619]	TEST     	R0 0 ; if not R0 then PC := 10
	5	[7619]	JMP      	10 ; PC := 10
	6	[7619]	GETGLOBAL	R0 K2 ; R0 := mHover
	7	[7619]	GETTABLE 	R0 R0 K3 ; R0 := R0["Region"]
	8	[7619]	EQ       	0 R0 K4 ; if R0 ~= nil then PC := 12
	9	[7619]	JMP      	12 ; PC := 12
	10	[7620]	OP_LOADBOOL	R0 1 0 ; R0 := true
	11	[7620]	RETURN   	R0 2 ; return R0 
	12	[7626]	GETGLOBAL	R0 K2 ; R0 := mHover
	13	[7626]	SETTABLE 	R0 K5 K6 ; R0["InSelectClick"] := true
	14	[7627]	GETUPVAL 	R0 U0 ; R0 := U0
	15	[7627]	TAILCALL 	R0 1 0 ; R0,... := R0()
	16	[7627]	RETURN   	R0 0 ; return R0,... 
	17	[7628]	RETURN   	R0 1 ; return 

function #158 <?:7630,7637> (12 instructions, 48 bytes at 000002112CC34050)
0 params, 2 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[7631]	GETGLOBAL	R0 K0 ; R0 := mHover
	2	[7631]	GETTABLE 	R0 R0 K1 ; R0 := R0["InSelectClick"]
	3	[7631]	TEST     	R0 1 ; if R0 then PC := 7
	4	[7631]	JMP      	7 ; PC := 7
	5	[7632]	OP_LOADBOOL	R0 1 0 ; R0 := true
	6	[7632]	RETURN   	R0 2 ; return R0 
	7	[7635]	GETGLOBAL	R0 K0 ; R0 := mHover
	8	[7635]	SETTABLE 	R0 K1 K2 ; R0["InSelectClick"] := false
	9	[7636]	GETUPVAL 	R0 U0 ; R0 := U0
	10	[7636]	TAILCALL 	R0 1 0 ; R0,... := R0()
	11	[7636]	RETURN   	R0 0 ; return R0,... 
	12	[7637]	RETURN   	R0 1 ; return 

function #159 <?:7639,7647> (11 instructions, 44 bytes at 000002112CC341A0)
0 params, 2 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[7640]	GETGLOBAL	R0 K0 ; R0 := mInputBlocked
	2	[7640]	TEST     	R0 0 ; if not R0 then PC := 5
	3	[7640]	JMP      	5 ; PC := 5
	4	[7641]	RETURN   	R0 1 ; return 
	5	[7644]	GETUPVAL 	R0 U0 ; R0 := U0
	6	[7644]	TEST     	R0 0 ; if not R0 then PC := 11
	7	[7644]	JMP      	11 ; PC := 11
	8	[7645]	GETGLOBAL	R0 K1 ; R0 := mDrag
	9	[7645]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xcc5f3150]
	10	[7645]	CALL     	R0 2 1 ; R0(R1)
	11	[7647]	RETURN   	R0 1 ; return 

function #160 <?:7649,7651> (3 instructions, 12 bytes at 000002112CC342F0)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[7650]	OP_LOADBOOL	R0 1 0 ; R0 := true
	2	[7650]	RETURN   	R0 2 ; return R0 
	3	[7651]	RETURN   	R0 1 ; return 

function #161 <?:7653,7696> (129 instructions, 516 bytes at 000002112CC343C0)
0 params, 5 slots, 9 upvalues, 0 locals, 42 constants, 0 functions
	1	[7654]	GETGLOBAL	R0 K0 ; R0 := mInputBlocked
	2	[7654]	TEST     	R0 1 ; if R0 then PC := 12
	3	[7654]	JMP      	12 ; PC := 12
	4	[7654]	GETUPVAL 	R0 U0 ; R0 := U0
	5	[7654]	GETTABLE 	R0 R0 K1 ; R0 := R0["DioOpen"]
	6	[7654]	TEST     	R0 1 ; if R0 then PC := 12
	7	[7654]	JMP      	12 ; PC := 12
	8	[7654]	GETGLOBAL	R0 K2 ; R0 := mInfoTip
	9	[7654]	GETTABLE 	R0 R0 K3 ; R0 := R0["NodeSelectionOpen"]
	10	[7654]	TEST     	R0 0 ; if not R0 then PC := 13
	11	[7654]	JMP      	13 ; PC := 13
	12	[7655]	RETURN   	R0 1 ; return 
	13	[7658]	GETGLOBAL	R0 K4 ; R0 := _T
	14	[7658]	GETTABLE 	R0 R0 K5 ; R0 := R0["MouseInWorldStateWindow"]
	15	[7658]	TEST     	R0 1 ; if R0 then PC := 21
	16	[7658]	JMP      	21 ; PC := 21
	17	[7658]	GETGLOBAL	R0 K4 ; R0 := _T
	18	[7658]	GETTABLE 	R0 R0 K6 ; R0 := R0["MouseInChatArea"]
	19	[7658]	TEST     	R0 0 ; if not R0 then PC := 22
	20	[7658]	JMP      	22 ; PC := 22
	21	[7659]	RETURN   	R0 1 ; return 
	22	[7662]	GETUPVAL 	R0 U1 ; R0 := U1
	23	[7662]	TEST     	R0 0 ; if not R0 then PC := 29
	24	[7662]	JMP      	29 ; PC := 29
	25	[7663]	GETGLOBAL	R0 K7 ; R0 := mDrag
	26	[7663]	SELF     	R0 R0 K8 ; R1 := R0; R0 := R0[0xd033d908]
	27	[7663]	CALL     	R0 2 1 ; R0(R1)
	28	[7663]	JMP      	129 ; PC := 129
	29	[7664]	GETGLOBAL	R0 K9 ; R0 := mSmoothZoom
	30	[7664]	GETTABLE 	R0 R0 K10 ; R0 := R0["mTargetVal"]
	31	[7664]	GETGLOBAL	R1 K11 ; R1 := Zoom
	32	[7664]	GETTABLE 	R1 R1 K12 ; R1 := R1["STARTING_ZOOM"]
	33	[7664]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 129
	34	[7664]	JMP      	129 ; PC := 129
	35	[7665]	GETGLOBAL	R0 K7 ; R0 := mDrag
	36	[7665]	SELF     	R0 R0 K13 ; R1 := R0; R0 := R0[0x4c4f8717]
	37	[7665]	LOADK    	R2 K14 ; R2 := "x"
	38	[7665]	LOADK    	R3 := 0.500000
	39	[7665]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	40	[7666]	GETGLOBAL	R0 K7 ; R0 := mDrag
	41	[7666]	SELF     	R0 R0 K13 ; R1 := R0; R0 := R0[0x4c4f8717]
	42	[7666]	LOADK    	R2 K15 ; R2 := "y"
	43	[7666]	LOADK    	R3 := 0.500000
	44	[7666]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	45	[7667]	GETGLOBAL	R0 K9 ; R0 := mSmoothZoom
	46	[7667]	SELF     	R0 R0 K16 ; R1 := R0; R0 := R0[0x188e2bee]
	47	[7667]	GETGLOBAL	R2 K11 ; R2 := Zoom
	48	[7667]	GETTABLE 	R2 R2 K12 ; R2 := R2["STARTING_ZOOM"]
	49	[7667]	CALL     	R0 3 1 ; R0(R1,R2)
	50	[7669]	GETGLOBAL	R0 K17 ; R0 := mFxNodes
	51	[7669]	GETUPVAL 	R1 U2 ; R1 := U2
	52	[7669]	GETTABLE 	R1 R1 K19 ; R1 := R1[0x06d055f9]
	53	[7669]	GETGLOBAL	R2 K20 ; R2 := mVorsPrizeQuestActiveNode
	54	[7669]	LOADK    	R3 := 1.000000
	55	[7669]	LOADK    	R4 := 2.000000
	56	[7669]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	57	[7669]	SETTABLE 	R0 K18 R1 ; R0["NotificationTime"] := R1
	58	[7671]	GETGLOBAL	R0 K21 ; R0 := 0x7b998233
	59	[7671]	GETGLOBAL	R1 K22 ; R1 := mZoomedRegion
	60	[7671]	CALL     	R0 2 2 ; R0 := R0(R1)
	61	[7671]	TEST     	R0 1 ; if R0 then PC := 88
	62	[7671]	JMP      	88 ; PC := 88
	63	[7671]	GETGLOBAL	R0 K21 ; R0 := 0x7b998233
	64	[7671]	GETGLOBAL	R1 K22 ; R1 := mZoomedRegion
	65	[7671]	GETTABLE 	R1 R1 K23 ; R1 := R1["instance"]
	66	[7671]	CALL     	R0 2 2 ; R0 := R0(R1)
	67	[7671]	TEST     	R0 1 ; if R0 then PC := 88
	68	[7671]	JMP      	88 ; PC := 88
	69	[7671]	GETGLOBAL	R0 K21 ; R0 := 0x7b998233
	70	[7671]	GETGLOBAL	R1 K22 ; R1 := mZoomedRegion
	71	[7671]	GETTABLE 	R1 R1 K24 ; R1 := R1["zoomedInEffects"]
	72	[7671]	CALL     	R0 2 2 ; R0 := R0(R1)
	73	[7671]	TEST     	R0 1 ; if R0 then PC := 88
	74	[7671]	JMP      	88 ; PC := 88
	75	[7672]	GETGLOBAL	R0 K22 ; R0 := mZoomedRegion
	76	[7672]	GETTABLE 	R0 R0 K23 ; R0 := R0["instance"]
	77	[7672]	SELF     	R0 R0 K25 ; R1 := R0; R0 := R0[0xc9f6a7d7]
	78	[7672]	GETGLOBAL	R2 K22 ; R2 := mZoomedRegion
	79	[7672]	GETTABLE 	R2 R2 K24 ; R2 := R2["zoomedInEffects"]
	80	[7672]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	81	[7673]	GETGLOBAL	R1 K21 ; R1 := 0x7b998233
	82	[7673]	MOVE     	R2 R0 ; R2 := R0
	83	[7673]	CALL     	R1 2 2 ; R1 := R1(R2)
	84	[7673]	TEST     	R1 1 ; if R1 then PC := 88
	85	[7673]	JMP      	88 ; PC := 88
	86	[7674]	SELF     	R1 R0 K26 ; R2 := R0; R1 := R0[0xa2880940]
	87	[7674]	CALL     	R1 2 1 ; R1(R2)
	88	[7677]	GETUPVAL 	R1 U3 ; R1 := U3
	89	[7677]	LOADNIL  	R2 R2 ; R2 := nil
	90	[7677]	CALL     	R1 2 1 ; R1(R2)
	91	[7678]	LOADNIL  	R1 R1 ; R1 := nil
	92	[7678]	SETGLOBALHASH	R1 K27 ; mZoomedSuper := R1
	93	[7680]	GETGLOBAL	R1 K28 ; R1 := 0x34291f5c
	94	[7680]	GETTABLE 	R1 R1 K29 ; R1 := R1[0x781669d7]
	95	[7680]	CALL     	R1 1 2 ; R1 := R1()
	96	[7680]	TEST     	R1 0 ; if not R1 then PC := 103
	97	[7680]	JMP      	103 ; PC := 103
	98	[7682]	GETUPVAL 	R1 U4 ; R1 := U4
	99	[7682]	GETTABLE 	R1 R1 K30 ; R1 := R1[0x64ac06bf]
	100	[7682]	CALL     	R1 1 1 ; R1()
	101	[7683]	GETGLOBAL	R1 K31 ; R1 := mHover
	102	[7683]	SETTABLE 	R1 K32 K33 ; R1["node"] := nil
	103	[7686]	GETUPVAL 	R1 U5 ; R1 := U5
	104	[7686]	CALL     	R1 1 1 ; R1()
	105	[7688]	GETUPVAL 	R1 U2 ; R1 := U2
	106	[7688]	GETTABLE 	R1 R1 K34 ; R1 := R1[0x659d451f]
	107	[7688]	GETGLOBAL	R2 K35 ; R2 := 0xe0344d6e
	108	[7688]	CALL     	R1 2 1 ; R1(R2)
	109	[7690]	GETUPVAL 	R1 U6 ; R1 := U6
	110	[7690]	GETTABLE 	R1 R1 K36 ; R1 := R1[1.000000]
	111	[7690]	SELF     	R1 R1 K16 ; R2 := R1; R1 := R1[0x188e2bee]
	112	[7690]	GETUPVAL 	R3 U7 ; R3 := U7
	113	[7690]	GETTABLE 	R3 R3 K37 ; R3 := R3["red"]
	114	[7690]	CALL     	R1 3 1 ; R1(R2,R3)
	115	[7691]	GETUPVAL 	R1 U6 ; R1 := U6
	116	[7691]	GETTABLE 	R1 R1 K38 ; R1 := R1[2.000000]
	117	[7691]	SELF     	R1 R1 K16 ; R2 := R1; R1 := R1[0x188e2bee]
	118	[7691]	GETUPVAL 	R3 U7 ; R3 := U7
	119	[7691]	GETTABLE 	R3 R3 K39 ; R3 := R3["green"]
	120	[7691]	CALL     	R1 3 1 ; R1(R2,R3)
	121	[7692]	GETUPVAL 	R1 U6 ; R1 := U6
	122	[7692]	GETTABLE 	R1 R1 K40 ; R1 := R1[3.000000]
	123	[7692]	SELF     	R1 R1 K16 ; R2 := R1; R1 := R1[0x188e2bee]
	124	[7692]	GETUPVAL 	R3 U7 ; R3 := U7
	125	[7692]	GETTABLE 	R3 R3 K41 ; R3 := R3["blue"]
	126	[7692]	CALL     	R1 3 1 ; R1(R2,R3)
	127	[7694]	GETUPVAL 	R1 U8 ; R1 := U8
	128	[7694]	CALL     	R1 1 1 ; R1()
	129	[7696]	RETURN   	R0 1 ; return 

function #162 <?:7698,7700> (6 instructions, 24 bytes at 000002112CC34B40)
0 params, 4 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[7699]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[7699]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xe4162eed]
	3	[7699]	LOADK    	R2 K2 ; R2 := "onKeyUp_MENU_RIGHT_CLICK"
	4	[7699]	LOADK    	R3 K3 ; R3 := ""
	5	[7699]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	6	[7700]	RETURN   	R0 1 ; return 

function #163 <?:7702,7704> (6 instructions, 24 bytes at 000002112CC34C30)
0 params, 4 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[7703]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[7703]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xe4162eed]
	3	[7703]	LOADK    	R2 K2 ; R2 := "onKeyDown_MENU_RIGHT_CLICK"
	4	[7703]	LOADK    	R3 K3 ; R3 := ""
	5	[7703]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	6	[7704]	RETURN   	R0 1 ; return 

function #164 <?:7706,7708> (6 instructions, 24 bytes at 000002112CC34D70)
2 params, 5 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[7707]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[7707]	GETTABLE 	R2 R2 K0 ; R2 := R2[0x0ca789f3]
	3	[7707]	MOVE     	R3 R0 ; R3 := R0
	4	[7707]	MOVE     	R4 R1 ; R4 := R1
	5	[7707]	CALL     	R2 3 1 ; R2(R3,R4)
	6	[7708]	RETURN   	R0 1 ; return 

function #165 <?:7710,7713> (9 instructions, 36 bytes at 000002112CC34E80)
2 params, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[7711]	SUB      	R2 R1 K0 ; R2 := R1 - 1.000000
	2	[7711]	UNM      	R2 R2 ; R2 := ^ R2
	3	[7711]	MUL      	R1 R2 K1 ; R1 := R2 * 3.000000
	4	[7712]	GETUPVAL 	R2 U0 ; R2 := U0
	5	[7712]	GETTABLE 	R2 R2 K2 ; R2 := R2[0x0ca789f3]
	6	[7712]	MOVE     	R3 R0 ; R3 := R0
	7	[7712]	MOVE     	R4 R1 ; R4 := R1
	8	[7712]	CALL     	R2 3 1 ; R2(R3,R4)
	9	[7713]	RETURN   	R0 1 ; return 

function #166 <?:7715,7826> (391 instructions, 1564 bytes at 000002112CC34FD0)
3 params, 16 slots, 15 upvalues, 0 locals, 73 constants, 0 functions
	1	[7716]	EQ       	0 R1 K0 ; if R1 ~= "EN_TOUCH_PINCH" then PC := 19
	2	[7716]	JMP      	19 ; PC := 19
	3	[7717]	GETUPVAL 	R3 U0 ; R3 := U0
	4	[7717]	GETTABLE 	R3 R3 K1 ; R3 := R3[0x06d055f9]
	5	[7717]	EQ       	1 R2 K2 ; if R2 == "1" then PC := 8
	6	[7717]	JMP      	8 ; PC := 8
	7	[7717]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 8
	8	[7717]	OP_LOADBOOL	R4 1 0 ; R4 := true
	9	[7717]	OP_LOADBOOL	R5 1 0 ; R5 := true
	10	[7717]	OP_LOADBOOL	R6 0 0 ; R6 := false
	11	[7717]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	12	[7718]	GETUPVAL 	R4 U1 ; R4 := U1
	13	[7718]	SETTABLE 	R4 K3 R3 ; R4["isLMBDown"] := R3
	14	[7719]	TEST     	R3 1 ; if R3 then PC := 19
	15	[7719]	JMP      	19 ; PC := 19
	16	[7720]	GETGLOBAL	R4 K4 ; R4 := mDrag
	17	[7720]	SELF     	R4 R4 K5 ; R5 := R4; R4 := R4[0xcc5f3150]
	18	[7720]	CALL     	R4 2 1 ; R4(R5)
	19	[7723]	GETUPVAL 	R4 U2 ; R4 := U2
	20	[7723]	TEST     	R4 0 ; if not R4 then PC := 391
	21	[7723]	JMP      	391 ; PC := 391
	22	[7724]	GETGLOBAL	R4 K6 ; R4 := 0x9ba7909f
	23	[7724]	SELF     	R4 R4 K7 ; R5 := R4; R4 := R4[0xbcfb64ab]
	24	[7724]	GETUPVAL 	R6 U0 ; R6 := U0
	25	[7724]	GETTABLE 	R6 R6 K8 ; R6 := R6[0xc472e470]
	26	[7724]	CALL     	R6 1 0 ; R6,... := R6()
	27	[7724]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	28	[7725]	GETGLOBAL	R5 K9 ; R5 := 0x7b998233
	29	[7725]	MOVE     	R6 R4 ; R6 := R4
	30	[7725]	CALL     	R5 2 2 ; R5 := R5(R6)
	31	[7725]	TEST     	R5 1 ; if R5 then PC := 38
	32	[7725]	JMP      	38 ; PC := 38
	33	[7725]	SELF     	R5 R4 K10 ; R6 := R4; R5 := R4[0x40eb8ac7]
	34	[7725]	CALL     	R5 2 2 ; R5 := R5(R6)
	35	[7725]	EQ       	0 R5 K11 ; if R5 ~= "MessageBox" then PC := 38
	36	[7725]	JMP      	38 ; PC := 38
	37	[7726]	RETURN   	R0 1 ; return 
	38	[7729]	EQ       	0 R1 K12 ; if R1 ~= "EN_LSHIFT" then PC := 55
	39	[7729]	JMP      	55 ; PC := 55
	40	[7730]	GETUPVAL 	R5 U3 ; R5 := U3
	41	[7730]	EQ       	1 R2 K2 ; if R2 == "1" then PC := 44
	42	[7730]	JMP      	44 ; PC := 44
	43	[7730]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 44
	44	[7730]	OP_LOADBOOL	R6 1 0 ; R6 := true
	45	[7730]	SETTABLE 	R5 K13 R6 ; R5["mShiftDown"] := R6
	46	[7731]	GETUPVAL 	R5 U4 ; R5 := U4
	47	[7731]	GETUPVAL 	R6 U5 ; R6 := U5
	48	[7731]	GETTABLE 	R6 R6 K14 ; R6 := R6["EDIT_NODE_DECOS"]
	49	[7731]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 55
	50	[7731]	JMP      	55 ; PC := 55
	51	[7732]	GETUPVAL 	R5 U6 ; R5 := U6
	52	[7732]	CALL     	R5 1 1 ; R5()
	53	[7733]	GETUPVAL 	R5 U7 ; R5 := U7
	54	[7733]	CALL     	R5 1 1 ; R5()
	55	[7736]	EQ       	0 R1 K15 ; if R1 ~= "EN_LCONTROL" then PC := 72
	56	[7736]	JMP      	72 ; PC := 72
	57	[7737]	GETUPVAL 	R5 U3 ; R5 := U3
	58	[7737]	EQ       	1 R2 K2 ; if R2 == "1" then PC := 61
	59	[7737]	JMP      	61 ; PC := 61
	60	[7737]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 61
	61	[7737]	OP_LOADBOOL	R6 1 0 ; R6 := true
	62	[7737]	SETTABLE 	R5 K16 R6 ; R5[0x03f57322] := R6
	63	[7738]	GETUPVAL 	R5 U4 ; R5 := U4
	64	[7738]	GETUPVAL 	R6 U5 ; R6 := U5
	65	[7738]	GETTABLE 	R6 R6 K14 ; R6 := R6["EDIT_NODE_DECOS"]
	66	[7738]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 72
	67	[7738]	JMP      	72 ; PC := 72
	68	[7739]	GETUPVAL 	R5 U6 ; R5 := U6
	69	[7739]	CALL     	R5 1 1 ; R5()
	70	[7740]	GETUPVAL 	R5 U7 ; R5 := U7
	71	[7740]	CALL     	R5 1 1 ; R5()
	72	[7743]	EQ       	0 R1 K17 ; if R1 ~= "EN_LALT" then PC := 89
	73	[7743]	JMP      	89 ; PC := 89
	74	[7744]	GETUPVAL 	R5 U3 ; R5 := U3
	75	[7744]	EQ       	1 R2 K2 ; if R2 == "1" then PC := 78
	76	[7744]	JMP      	78 ; PC := 78
	77	[7744]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 78
	78	[7744]	OP_LOADBOOL	R6 1 0 ; R6 := true
	79	[7744]	SETTABLE 	R5 K18 R6 ; R5["mAltDown"] := R6
	80	[7745]	GETUPVAL 	R5 U4 ; R5 := U4
	81	[7745]	GETUPVAL 	R6 U5 ; R6 := U5
	82	[7745]	GETTABLE 	R6 R6 K14 ; R6 := R6["EDIT_NODE_DECOS"]
	83	[7745]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 89
	84	[7745]	JMP      	89 ; PC := 89
	85	[7746]	GETUPVAL 	R5 U6 ; R5 := U6
	86	[7746]	CALL     	R5 1 1 ; R5()
	87	[7747]	GETUPVAL 	R5 U7 ; R5 := U7
	88	[7747]	CALL     	R5 1 1 ; R5()
	89	[7751]	EQ       	0 R1 K19 ; if R1 ~= "EN_E" then PC := 106
	90	[7751]	JMP      	106 ; PC := 106
	91	[7751]	EQ       	0 R2 K2 ; if R2 ~= "1" then PC := 106
	92	[7751]	JMP      	106 ; PC := 106
	93	[7752]	GETUPVAL 	R5 U8 ; R5 := U8
	94	[7752]	GETUPVAL 	R6 U0 ; R6 := U0
	95	[7752]	GETTABLE 	R6 R6 K20 ; R6 := R6[0x38a41ce7]
	96	[7752]	GETUPVAL 	R7 U4 ; R7 := U4
	97	[7752]	GETUPVAL 	R8 U0 ; R8 := U0
	98	[7752]	GETTABLE 	R8 R8 K21 ; R8 := R8["INCREMENT"]
	99	[7752]	LOADK    	R9 := 1.000000
	100	[7752]	GETUPVAL 	R10 U5 ; R10 := U5
	101	[7752]	GETTABLE 	R10 R10 K22 ; R10 := R10["MAX_VALUE"]
	102	[7752]	SUB      	R10 R10 K23 ; R10 := R10 - 1.000000
	103	[7752]	CALL     	R6 5 0 ; R6,... := R6(R7,R8,R9,R10)
	104	[7752]	CALL     	R5 0 1 ; R5(R6,...)
	105	[7752]	JMP      	121 ; PC := 121
	106	[7753]	EQ       	0 R1 K24 ; if R1 ~= "EN_S" then PC := 121
	107	[7753]	JMP      	121 ; PC := 121
	108	[7753]	EQ       	0 R2 K2 ; if R2 ~= "1" then PC := 121
	109	[7753]	JMP      	121 ; PC := 121
	110	[7753]	GETGLOBAL	R5 K9 ; R5 := 0x7b998233
	111	[7753]	GETGLOBAL	R6 K25 ; R6 := mRadialSolarMap
	112	[7753]	CALL     	R5 2 2 ; R5 := R5(R6)
	113	[7753]	TEST     	R5 1 ; if R5 then PC := 121
	114	[7753]	JMP      	121 ; PC := 121
	115	[7754]	GETGLOBAL	R5 K25 ; R5 := mRadialSolarMap
	116	[7754]	SELF     	R5 R5 K26 ; R6 := R5; R5 := R5[0x720bebd9]
	117	[7754]	CALL     	R5 2 1 ; R5(R6)
	118	[7755]	GETGLOBAL	R5 K27 ; R5 := 0xd644c2f1
	119	[7755]	LOADK    	R6 K28 ; R6 := "SolarMap Serialized"
	120	[7755]	CALL     	R5 2 1 ; R5(R6)
	121	[7758]	EQ       	0 R1 K29 ; if R1 ~= "EN_A" then PC := 189
	122	[7758]	JMP      	189 ; PC := 189
	123	[7758]	EQ       	0 R2 K2 ; if R2 ~= "1" then PC := 189
	124	[7758]	JMP      	189 ; PC := 189
	125	[7758]	GETUPVAL 	R5 U4 ; R5 := U4
	126	[7758]	GETUPVAL 	R6 U5 ; R6 := U5
	127	[7758]	GETTABLE 	R6 R6 K30 ; R6 := R6["EDIT_EDGES"]
	128	[7758]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 189
	129	[7758]	JMP      	189 ; PC := 189
	130	[7759]	GETGLOBAL	R5 K9 ; R5 := 0x7b998233
	131	[7759]	GETUPVAL 	R6 U9 ; R6 := U9
	132	[7759]	GETTABLE 	R6 R6 K31 ; R6 := R6["mEdgeNode1"]
	133	[7759]	CALL     	R5 2 2 ; R5 := R5(R6)
	134	[7759]	TEST     	R5 1 ; if R5 then PC := 304
	135	[7759]	JMP      	304 ; PC := 304
	136	[7759]	GETGLOBAL	R5 K9 ; R5 := 0x7b998233
	137	[7759]	GETUPVAL 	R6 U9 ; R6 := U9
	138	[7759]	GETTABLE 	R6 R6 K32 ; R6 := R6["mEdgeNode2"]
	139	[7759]	CALL     	R5 2 2 ; R5 := R5(R6)
	140	[7759]	TEST     	R5 1 ; if R5 then PC := 304
	141	[7759]	JMP      	304 ; PC := 304
	142	[7760]	GETGLOBAL	R5 K33 ; R5 := mFlatEdges
	143	[7760]	GETGLOBAL	R6 K33 ; R6 := mFlatEdges
	144	[7760]	LEN      	R6 R6 ; R6 := # R6
	145	[7760]	NEWTABLE 	R7 0 3 ; R7 := {}
	146	[7761]	GETUPVAL 	R8 U9 ; R8 := U9
	147	[7761]	GETTABLE 	R8 R8 K31 ; R8 := R8["mEdgeNode1"]
	148	[7761]	SETTABLE 	R7 K34 R8 ; R7["NodeA"] := R8
	149	[7762]	GETUPVAL 	R8 U9 ; R8 := U9
	150	[7762]	GETTABLE 	R8 R8 K32 ; R8 := R8["mEdgeNode2"]
	151	[7762]	SETTABLE 	R7 K35 R8 ; R7["NodeB"] := R8
	152	[7763]	GETUPVAL 	R8 U9 ; R8 := U9
	153	[7763]	GETTABLE 	R8 R8 K31 ; R8 := R8["mEdgeNode1"]
	154	[7763]	GETTABLE 	R8 R8 K37 ; R8 := R8["isShortcut"]
	155	[7763]	TEST     	R8 0 ; if not R8 then PC := 160
	156	[7763]	JMP      	160 ; PC := 160
	157	[7763]	GETUPVAL 	R8 U9 ; R8 := U9
	158	[7763]	GETTABLE 	R8 R8 K32 ; R8 := R8["mEdgeNode2"]
	159	[7763]	GETTABLE 	R8 R8 K37 ; R8 := R8["isShortcut"]
	160	[7763]	SETTABLE 	R7 K36 R8 ; R7["IsShortcut"] := R8
	161	[7764]	SETTABLE 	R5 R6 R7 ; R5[R6] := R7
	162	[7766]	GETGLOBAL	R5 K25 ; R5 := mRadialSolarMap
	163	[7766]	SELF     	R5 R5 K38 ; R6 := R5; R5 := R5[0xfc9e0a51]
	164	[7766]	GETUPVAL 	R7 U9 ; R7 := U9
	165	[7766]	GETTABLE 	R7 R7 K31 ; R7 := R7["mEdgeNode1"]
	166	[7766]	GETTABLE 	R7 R7 K39 ; R7 := R7["radialSector"]
	167	[7766]	GETUPVAL 	R8 U9 ; R8 := U9
	168	[7766]	GETTABLE 	R8 R8 K32 ; R8 := R8["mEdgeNode2"]
	169	[7766]	GETTABLE 	R8 R8 K39 ; R8 := R8["radialSector"]
	170	[7766]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	171	[7768]	GETGLOBAL	R5 K25 ; R5 := mRadialSolarMap
	172	[7768]	SELF     	R5 R5 K41 ; R6 := R5; R5 := R5[0xb4b2b7b0]
	173	[7768]	CALL     	R5 2 2 ; R5 := R5(R6)
	174	[7768]	SETGLOBALHASH	R5 K40 ; mMapEdges := R5
	175	[7769]	GETUPVAL 	R5 U9 ; R5 := U9
	176	[7769]	SETTABLE 	R5 K31 K42 ; R5["mEdgeNode1"] := nil
	177	[7770]	GETUPVAL 	R5 U9 ; R5 := U9
	178	[7770]	SETTABLE 	R5 K32 K42 ; R5["mEdgeNode2"] := nil
	179	[7771]	GETGLOBAL	R5 K43 ; R5 := 0xae91e43b
	180	[7771]	SELF     	R5 R5 K44 ; R6 := R5; R5 := R5[0x5f56eeab]
	181	[7771]	LOADK    	R7 K45 ; R7 := "ScreenModeLabel"
	182	[7771]	LOADK    	R8 := 29.000000
	183	[7771]	GETUPVAL 	R9 U10 ; R9 := U10
	184	[7771]	CALL     	R9 1 0 ; R9,... := R9()
	185	[7771]	CALL     	R5 0 1 ; R5(R6,...)
	186	[7772]	GETUPVAL 	R5 U11 ; R5 := U11
	187	[7772]	CALL     	R5 1 1 ; R5()
	188	[7773]	JMP      	304 ; PC := 304
	189	[7775]	EQ       	0 R1 K46 ; if R1 ~= "EN_D" then PC := 287
	190	[7775]	JMP      	287 ; PC := 287
	191	[7775]	EQ       	0 R2 K2 ; if R2 ~= "1" then PC := 287
	192	[7775]	JMP      	287 ; PC := 287
	193	[7775]	GETUPVAL 	R5 U4 ; R5 := U4
	194	[7775]	GETUPVAL 	R6 U5 ; R6 := U5
	195	[7775]	GETTABLE 	R6 R6 K30 ; R6 := R6["EDIT_EDGES"]
	196	[7775]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 287
	197	[7775]	JMP      	287 ; PC := 287
	198	[7776]	GETGLOBAL	R5 K9 ; R5 := 0x7b998233
	199	[7776]	GETUPVAL 	R6 U9 ; R6 := U9
	200	[7776]	GETTABLE 	R6 R6 K31 ; R6 := R6["mEdgeNode1"]
	201	[7776]	CALL     	R5 2 2 ; R5 := R5(R6)
	202	[7776]	TEST     	R5 1 ; if R5 then PC := 304
	203	[7776]	JMP      	304 ; PC := 304
	204	[7776]	GETGLOBAL	R5 K9 ; R5 := 0x7b998233
	205	[7776]	GETUPVAL 	R6 U9 ; R6 := U9
	206	[7776]	GETTABLE 	R6 R6 K32 ; R6 := R6["mEdgeNode2"]
	207	[7776]	CALL     	R5 2 2 ; R5 := R5(R6)
	208	[7776]	TEST     	R5 1 ; if R5 then PC := 304
	209	[7776]	JMP      	304 ; PC := 304
	210	[7777]	LOADK    	R5 := 1.000000
	211	[7777]	GETGLOBAL	R6 K33 ; R6 := mFlatEdges
	212	[7777]	LEN      	R6 R6 ; R6 := # R6
	213	[7777]	LOADK    	R7 := 1.000000
	214	[7777]	FORPREP  	R5 259 ; R5 -= R7; PC := 259
	215	[7778]	GETGLOBAL	R9 K33 ; R9 := mFlatEdges
	216	[7778]	GETTABLE 	R9 R9 R8 ; R9 := R9[R8]
	217	[7779]	GETTABLE 	R10 R9 K34 ; R10 := R9["NodeA"]
	218	[7779]	GETTABLE 	R10 R10 K47 ; R10 := R10["name"]
	219	[7779]	GETUPVAL 	R11 U9 ; R11 := U9
	220	[7779]	GETTABLE 	R11 R11 K31 ; R11 := R11["mEdgeNode1"]
	221	[7779]	GETTABLE 	R11 R11 K39 ; R11 := R11["radialSector"]
	222	[7779]	GETTABLE 	R11 R11 K47 ; R11 := R11["name"]
	223	[7779]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 233
	224	[7779]	JMP      	233 ; PC := 233
	225	[7779]	GETTABLE 	R10 R9 K35 ; R10 := R9["NodeB"]
	226	[7779]	GETTABLE 	R10 R10 K47 ; R10 := R10["name"]
	227	[7779]	GETUPVAL 	R11 U9 ; R11 := U9
	228	[7779]	GETTABLE 	R11 R11 K32 ; R11 := R11["mEdgeNode2"]
	229	[7779]	GETTABLE 	R11 R11 K39 ; R11 := R11["radialSector"]
	230	[7779]	GETTABLE 	R11 R11 K47 ; R11 := R11["name"]
	231	[7779]	EQ       	1 R10 R11 ; if R10 == R11 then PC := 249
	232	[7779]	JMP      	249 ; PC := 249
	233	[7780]	GETTABLE 	R10 R9 K35 ; R10 := R9["NodeB"]
	234	[7780]	GETTABLE 	R10 R10 K47 ; R10 := R10["name"]
	235	[7780]	GETUPVAL 	R11 U9 ; R11 := U9
	236	[7780]	GETTABLE 	R11 R11 K31 ; R11 := R11["mEdgeNode1"]
	237	[7780]	GETTABLE 	R11 R11 K39 ; R11 := R11["radialSector"]
	238	[7780]	GETTABLE 	R11 R11 K47 ; R11 := R11["name"]
	239	[7780]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 259
	240	[7780]	JMP      	259 ; PC := 259
	241	[7780]	GETTABLE 	R10 R9 K34 ; R10 := R9["NodeA"]
	242	[7780]	GETTABLE 	R10 R10 K47 ; R10 := R10["name"]
	243	[7780]	GETUPVAL 	R11 U9 ; R11 := U9
	244	[7780]	GETTABLE 	R11 R11 K32 ; R11 := R11["mEdgeNode2"]
	245	[7780]	GETTABLE 	R11 R11 K39 ; R11 := R11["radialSector"]
	246	[7780]	GETTABLE 	R11 R11 K47 ; R11 := R11["name"]
	247	[7780]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 259
	248	[7780]	JMP      	259 ; PC := 259
	249	[7782]	GETGLOBAL	R10 K48 ; R10 := 0x1211d00f
	250	[7782]	SELF     	R10 R10 K49 ; R11 := R10; R10 := R10[0x59c96e77]
	251	[7782]	GETTABLE 	R12 R9 K50 ; R12 := R9["Instance"]
	252	[7782]	CALL     	R10 3 1 ; R10(R11,R12)
	253	[7783]	GETGLOBAL	R10 K51 ; R10 := 0x33bdd652
	254	[7783]	GETTABLE 	R10 R10 K52 ; R10 := R10[0x9c1f3b5a]
	255	[7783]	GETGLOBAL	R11 K33 ; R11 := mFlatEdges
	256	[7783]	MOVE     	R12 R8 ; R12 := R8
	257	[7783]	CALL     	R10 3 1 ; R10(R11,R12)
	258	[7784]	JMP      	260 ; PC := 260
	259	[7777]	FORLOOP  	R5 215 ; R5 += R7; if R5 <= R6 then begin PC := 215; R8 := R5 end
	260	[7788]	GETGLOBAL	R10 K25 ; R10 := mRadialSolarMap
	261	[7788]	SELF     	R10 R10 K53 ; R11 := R10; R10 := R10[0x84b7abdc]
	262	[7788]	GETUPVAL 	R12 U9 ; R12 := U9
	263	[7788]	GETTABLE 	R12 R12 K31 ; R12 := R12["mEdgeNode1"]
	264	[7788]	GETTABLE 	R12 R12 K39 ; R12 := R12["radialSector"]
	265	[7788]	GETUPVAL 	R13 U9 ; R13 := U9
	266	[7788]	GETTABLE 	R13 R13 K32 ; R13 := R13["mEdgeNode2"]
	267	[7788]	GETTABLE 	R13 R13 K39 ; R13 := R13["radialSector"]
	268	[7788]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	269	[7790]	GETGLOBAL	R10 K25 ; R10 := mRadialSolarMap
	270	[7790]	SELF     	R10 R10 K41 ; R11 := R10; R10 := R10[0xb4b2b7b0]
	271	[7790]	CALL     	R10 2 2 ; R10 := R10(R11)
	272	[7790]	SETGLOBALHASH	R10 K40 ; mMapEdges := R10
	273	[7792]	GETUPVAL 	R10 U9 ; R10 := U9
	274	[7792]	SETTABLE 	R10 K31 K42 ; R10["mEdgeNode1"] := nil
	275	[7793]	GETUPVAL 	R10 U9 ; R10 := U9
	276	[7793]	SETTABLE 	R10 K32 K42 ; R10["mEdgeNode2"] := nil
	277	[7794]	GETGLOBAL	R10 K43 ; R10 := 0xae91e43b
	278	[7794]	SELF     	R10 R10 K44 ; R11 := R10; R10 := R10[0x5f56eeab]
	279	[7794]	LOADK    	R12 K45 ; R12 := "ScreenModeLabel"
	280	[7794]	LOADK    	R13 := 29.000000
	281	[7794]	GETUPVAL 	R14 U10 ; R14 := U10
	282	[7794]	CALL     	R14 1 0 ; R14,... := R14()
	283	[7794]	CALL     	R10 0 1 ; R10(R11,...)
	284	[7795]	GETUPVAL 	R10 U11 ; R10 := U11
	285	[7795]	CALL     	R10 1 1 ; R10()
	286	[7796]	JMP      	304 ; PC := 304
	287	[7797]	EQ       	0 R1 K54 ; if R1 ~= "EN_C" then PC := 304
	288	[7797]	JMP      	304 ; PC := 304
	289	[7797]	EQ       	0 R2 K2 ; if R2 ~= "1" then PC := 304
	290	[7797]	JMP      	304 ; PC := 304
	291	[7797]	GETUPVAL 	R10 U4 ; R10 := U4
	292	[7797]	GETUPVAL 	R11 U5 ; R11 := U5
	293	[7797]	GETTABLE 	R11 R11 K30 ; R11 := R11["EDIT_EDGES"]
	294	[7797]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 304
	295	[7797]	JMP      	304 ; PC := 304
	296	[7798]	GETGLOBAL	R10 K9 ; R10 := 0x7b998233
	297	[7798]	GETUPVAL 	R11 U9 ; R11 := U9
	298	[7798]	GETTABLE 	R11 R11 K31 ; R11 := R11["mEdgeNode1"]
	299	[7798]	CALL     	R10 2 2 ; R10 := R10(R11)
	300	[7798]	TEST     	R10 1 ; if R10 then PC := 304
	301	[7798]	JMP      	304 ; PC := 304
	302	[7799]	GETUPVAL 	R10 U11 ; R10 := U11
	303	[7799]	CALL     	R10 1 1 ; R10()
	304	[7803]	EQ       	0 R1 K55 ; if R1 ~= "EN_R" then PC := 333
	305	[7803]	JMP      	333 ; PC := 333
	306	[7803]	EQ       	0 R2 K2 ; if R2 ~= "1" then PC := 333
	307	[7803]	JMP      	333 ; PC := 333
	308	[7803]	GETUPVAL 	R10 U4 ; R10 := U4
	309	[7803]	GETUPVAL 	R11 U5 ; R11 := U5
	310	[7803]	GETTABLE 	R11 R11 K56 ; R11 := R11["EDIT_REGION_FRAMING"]
	311	[7803]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 333
	312	[7803]	JMP      	333 ; PC := 333
	313	[7804]	GETUPVAL 	R10 U9 ; R10 := U9
	314	[7804]	GETUPVAL 	R11 U0 ; R11 := U0
	315	[7804]	GETTABLE 	R11 R11 K20 ; R11 := R11[0x38a41ce7]
	316	[7804]	GETUPVAL 	R12 U9 ; R12 := U9
	317	[7804]	GETTABLE 	R12 R12 K57 ; R12 := R12["mFramingRegion"]
	318	[7804]	GETUPVAL 	R13 U0 ; R13 := U0
	319	[7804]	GETTABLE 	R13 R13 K21 ; R13 := R13["INCREMENT"]
	320	[7804]	LOADK    	R14 := 1.000000
	321	[7804]	GETGLOBAL	R15 K58 ; R15 := mRegions
	322	[7804]	LEN      	R15 R15 ; R15 := # R15
	323	[7804]	CALL     	R11 5 2 ; R11 := R11(R12,R13,R14,R15)
	324	[7804]	SETTABLE 	R10 K57 R11 ; R10["mFramingRegion"] := R11
	325	[7805]	GETUPVAL 	R10 U12 ; R10 := U12
	326	[7805]	GETGLOBAL	R11 K58 ; R11 := mRegions
	327	[7805]	GETUPVAL 	R12 U9 ; R12 := U9
	328	[7805]	GETTABLE 	R12 R12 K57 ; R12 := R12["mFramingRegion"]
	329	[7805]	GETTABLE 	R11 R11 R12 ; R11 := R11[R12]
	330	[7805]	CALL     	R10 2 1 ; R10(R11)
	331	[7806]	GETUPVAL 	R10 U13 ; R10 := U13
	332	[7806]	CALL     	R10 1 1 ; R10()
	333	[7808]	EQ       	0 R1 K59 ; if R1 ~= "EN_L" then PC := 347
	334	[7808]	JMP      	347 ; PC := 347
	335	[7808]	EQ       	0 R2 K2 ; if R2 ~= "1" then PC := 347
	336	[7808]	JMP      	347 ; PC := 347
	337	[7809]	GETGLOBAL	R10 K60 ; R10 := mVisibleTags
	338	[7809]	NOT      	R10 R10 ; R10 := not R10
	339	[7809]	SETGLOBALHASH	R10 K60 ; mVisibleTags := R10
	340	[7810]	GETGLOBAL	R10 K27 ; R10 := 0xd644c2f1
	341	[7810]	LOADK    	R11 K61 ; R11 := "Visible Tags:"
	342	[7810]	GETGLOBAL	R12 K62 ; R12 := 0x64fb1586
	343	[7810]	GETGLOBAL	R13 K60 ; R13 := mVisibleTags
	344	[7810]	CALL     	R12 2 2 ; R12 := R12(R13)
	345	[7810]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	346	[7810]	CALL     	R10 2 1 ; R10(R11)
	347	[7812]	EQ       	0 R1 K63 ; if R1 ~= "EN_U" then PC := 391
	348	[7812]	JMP      	391 ; PC := 391
	349	[7812]	EQ       	0 R2 K2 ; if R2 ~= "1" then PC := 391
	350	[7812]	JMP      	391 ; PC := 391
	351	[7813]	GETGLOBAL	R10 K64 ; R10 := _T
	352	[7813]	GETTABLE 	R10 R10 K65 ; R10 := R10["MAP_HideExtraUI"]
	353	[7813]	EQ       	0 R10 K42 ; if R10 ~= nil then PC := 357
	354	[7813]	JMP      	357 ; PC := 357
	355	[7814]	GETGLOBAL	R10 K64 ; R10 := _T
	356	[7814]	SETTABLE 	R10 K65 K66 ; R10["MAP_HideExtraUI"] := false
	357	[7816]	GETGLOBAL	R10 K64 ; R10 := _T
	358	[7816]	GETGLOBAL	R11 K64 ; R11 := _T
	359	[7816]	GETTABLE 	R11 R11 K65 ; R11 := R11["MAP_HideExtraUI"]
	360	[7816]	NOT      	R11 R11 ; R11 := not R11
	361	[7816]	SETTABLE 	R10 K65 R11 ; R10["MAP_HideExtraUI"] := R11
	362	[7817]	GETGLOBAL	R10 K27 ; R10 := 0xd644c2f1
	363	[7817]	LOADK    	R11 K67 ; R11 := "Visible Extra UI:"
	364	[7817]	GETGLOBAL	R12 K62 ; R12 := 0x64fb1586
	365	[7817]	GETGLOBAL	R13 K64 ; R13 := _T
	366	[7817]	GETTABLE 	R13 R13 K65 ; R13 := R13["MAP_HideExtraUI"]
	367	[7817]	CALL     	R12 2 2 ; R12 := R12(R13)
	368	[7817]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	369	[7817]	CALL     	R10 2 1 ; R10(R11)
	370	[7818]	GETGLOBAL	R10 K64 ; R10 := _T
	371	[7818]	GETTABLE 	R10 R10 K65 ; R10 := R10["MAP_HideExtraUI"]
	372	[7818]	TEST     	R10 0 ; if not R10 then PC := 378
	373	[7818]	JMP      	378 ; PC := 378
	374	[7819]	GETGLOBAL	R10 K64 ; R10 := _T
	375	[7819]	GETTABLE 	R10 R10 K68 ; R10 := R10[0x80172c74]
	376	[7819]	CALL     	R10 1 1 ; R10()
	377	[7819]	JMP      	382 ; PC := 382
	378	[7821]	GETGLOBAL	R10 K64 ; R10 := _T
	379	[7821]	GETTABLE 	R10 R10 K69 ; R10 := R10[0x3b0face1]
	380	[7821]	OP_LOADBOOL	R11 1 0 ; R11 := true
	381	[7821]	CALL     	R10 2 1 ; R10(R11)
	382	[7823]	GETUPVAL 	R10 U14 ; R10 := U14
	383	[7823]	GETTABLE 	R10 R10 K70 ; R10 := R10["Movie"]
	384	[7823]	SELF     	R10 R10 K71 ; R11 := R10; R10 := R10[0xaade900e]
	385	[7823]	LOADK    	R12 K72 ; R12 := "_root"
	386	[7823]	LOADK    	R13 := 11.000000
	387	[7823]	GETGLOBAL	R14 K64 ; R14 := _T
	388	[7823]	GETTABLE 	R14 R14 K65 ; R14 := R14["MAP_HideExtraUI"]
	389	[7823]	NOT      	R14 R14 ; R14 := not R14
	390	[7823]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	391	[7826]	RETURN   	R0 1 ; return 

function #167 <?:7828,7830> (6 instructions, 24 bytes at 000002112CC36420)
1 param, 4 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[7829]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[7829]	GETGLOBAL	R2 K0 ; R2 := 0x03f57322
	3	[7829]	MOVE     	R3 R0 ; R3 := R0
	4	[7829]	CALL     	R2 2 0 ; R2,... := R2(R3)
	5	[7829]	CALL     	R1 0 1 ; R1(R2,...)
	6	[7830]	RETURN   	R0 1 ; return 

function #168 <?:7832,7834> (6 instructions, 24 bytes at 000002112CC36530)
1 param, 4 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[7833]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[7833]	GETGLOBAL	R2 K0 ; R2 := 0x03f57322
	3	[7833]	MOVE     	R3 R0 ; R3 := R0
	4	[7833]	CALL     	R2 2 0 ; R2,... := R2(R3)
	5	[7833]	CALL     	R1 0 1 ; R1(R2,...)
	6	[7834]	RETURN   	R0 1 ; return 

function #169 <?:7836,7845> (23 instructions, 92 bytes at 000002112CC36640)
1 param, 4 slots, 1 upvalue, 0 locals, 7 constants, 0 functions
	1	[7837]	GETGLOBAL	R1 K0 ; R1 := mNodeAlphaValues
	2	[7837]	GETTABLE 	R1 R1 K1 ; R1 := R1["NodeLayerAlpha"]
	3	[7837]	GETGLOBAL	R2 K0 ; R2 := mNodeAlphaValues
	4	[7837]	GETTABLE 	R2 R2 K2 ; R2 := R2["MinNodeAlphaToClick"]
	5	[7837]	LE       	1 R1 R2 ; if R1 <= R2 then PC := 11
	6	[7837]	JMP      	11 ; PC := 11
	7	[7837]	GETGLOBAL	R1 K3 ; R1 := mInfoTip
	8	[7837]	GETTABLE 	R1 R1 K4 ; R1 := R1["NodeSelectionOpen"]
	9	[7837]	TEST     	R1 0 ; if not R1 then PC := 12
	10	[7837]	JMP      	12 ; PC := 12
	11	[7838]	RETURN   	R0 1 ; return 
	12	[7840]	GETGLOBAL	R1 K5 ; R1 := 0x03f57322
	13	[7840]	MOVE     	R2 R0 ; R2 := R0
	14	[7840]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[7840]	MOVE     	R0 R1 ; R0 := R1
	16	[7841]	GETUPVAL 	R1 U0 ; R1 := U0
	17	[7841]	GETTABLE 	R1 R1 R0 ; R1 := R1[R0]
	18	[7842]	GETGLOBAL	R2 K6 ; R2 := 0x7b998233
	19	[7842]	MOVE     	R3 R1 ; R3 := R1
	20	[7842]	CALL     	R2 2 2 ; R2 := R2(R3)
	21	[7842]	TEST     	R2 1 ; if R2 then PC := 23
	22	[7842]	JMP      	23 ; PC := 23
	23	[7845]	RETURN   	R0 1 ; return 

function #170 <?:7847,7850> (16 instructions, 64 bytes at 000002112CC36830)
1 param, 6 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[7848]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	2	[7848]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x0c33ebb2]
	3	[7848]	LOADK    	R3 K2 ; R3 := "_root"
	4	[7848]	LOADK    	R4 K3 ; R4 := "noMenuSelection"
	5	[7848]	EQ       	1 R0 K4 ; if R0 == "true" then PC := 8
	6	[7848]	JMP      	8 ; PC := 8
	7	[7848]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 8
	8	[7848]	OP_LOADBOOL	R5 1 0 ; R5 := true
	9	[7848]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	10	[7849]	GETUPVAL 	R1 U0 ; R1 := U0
	11	[7849]	EQ       	1 R0 K4 ; if R0 == "true" then PC := 14
	12	[7849]	JMP      	14 ; PC := 14
	13	[7849]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 14
	14	[7849]	OP_LOADBOOL	R2 1 0 ; R2 := true
	15	[7849]	SETTABLE 	R1 K5 R2 ; R1["Open"] := R2
	16	[7850]	RETURN   	R0 1 ; return 

function #171 <?:7852,7856> (9 instructions, 36 bytes at 000002112CC369D0)
1 param, 3 slots, 2 upvalues, 0 locals, 2 constants, 0 functions
	1	[7853]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[7853]	EQ       	1 R0 K1 ; if R0 == "true" then PC := 5
	3	[7853]	JMP      	5 ; PC := 5
	4	[7853]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 5
	5	[7853]	OP_LOADBOOL	R2 1 0 ; R2 := true
	6	[7853]	SETTABLE 	R1 K0 R2 ; R1["DioOpen"] := R2
	7	[7855]	GETUPVAL 	R1 U1 ; R1 := U1
	8	[7855]	CALL     	R1 1 1 ; R1()
	9	[7856]	RETURN   	R0 1 ; return 

function #172 <?:7858,7864> (12 instructions, 48 bytes at 000002112CC36B10)
4 params, 6 slots, 3 upvalues, 0 locals, 2 constants, 0 functions
	1	[7859]	GETUPVAL 	R4 U0 ; R4 := U0
	2	[7859]	CALL     	R4 1 1 ; R4()
	3	[7861]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	4	[7861]	GETUPVAL 	R5 U1 ; R5 := U1
	5	[7861]	GETTABLE 	R5 R5 K1 ; R5 := R5["cameraSpot"]
	6	[7861]	CALL     	R4 2 2 ; R4 := R4(R5)
	7	[7861]	TEST     	R4 1 ; if R4 then PC := 12
	8	[7861]	JMP      	12 ; PC := 12
	9	[7862]	GETUPVAL 	R4 U2 ; R4 := U2
	10	[7862]	OP_LOADBOOL	R5 1 0 ; R5 := true
	11	[7862]	CALL     	R4 2 1 ; R4(R5)
	12	[7864]	RETURN   	R0 1 ; return 

function #173 <?:7866,7871> (7 instructions, 28 bytes at 000002112CC36C50)
0 params, 4 slots, 2 upvalues, 0 locals, 2 constants, 1 function
	1	[7867]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[7867]	SELF     	R0 R0 K0 ; R1 := R0; R0 := R0[0xbd2e96ea]
	3	[7867]	LOADK    	R2 K1 ; R2 := 0.050000
	4	[7870]	CLOSURE  	R3 0 ; R3 := closure(Function #1)
	5	[7870]	GETUPVAL 	R0 U1 ; R0 := U1
	6	[7867]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	7	[7871]	RETURN   	R0 1 ; return 

function #174 <?:7873,7875> (3 instructions, 12 bytes at 000002112CC36E90)
0 params, 2 slots, 0 upvalues, 0 locals, 1 constant, 0 functions
	1	[7874]	GETGLOBAL	R0 K0 ; R0 := mInputBlocked
	2	[7874]	RETURN   	R0 2 ; return R0 
	3	[7875]	RETURN   	R0 1 ; return 

function #175 <?:7877,7880> (5 instructions, 20 bytes at 000002112CC36F80)
1 param, 2 slots, 0 upvalues, 0 locals, 2 constants, 0 functions
	1	[7878]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[7878]	SETTABLE 	R1 K1 R0 ; R1[0xae91e43b] := R0
	3	[7879]	OP_LOADBOOL	R1 1 0 ; R1 := true
	4	[7879]	RETURN   	R1 2 ; return R1 
	5	[7880]	RETURN   	R0 1 ; return 

function #176 <?:7882,7905> (71 instructions, 284 bytes at 000002112CC370A0)
0 params, 11 slots, 3 upvalues, 0 locals, 18 constants, 0 functions
	1	[7883]	GETGLOBAL	R0 K0 ; R0 := 0x25d99d89
	2	[7883]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x25a6e75e]
	3	[7883]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[7883]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x8e7c3b5e]
	5	[7883]	CALL     	R0 2 2 ; R0 := R0(R1)
	6	[7884]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[7884]	GETTABLE 	R1 R1 K3 ; R1 := R1["OROKIN_TOWER_NODE_TAG"]
	8	[7886]	LOADK    	R2 := 1.000000
	9	[7886]	GETUPVAL 	R3 U1 ; R3 := U1
	10	[7886]	LEN      	R3 R3 ; R3 := # R3
	11	[7886]	LOADK    	R4 := 1.000000
	12	[7886]	FORPREP  	R2 68 ; R2 -= R4; PC := 68
	13	[7887]	GETGLOBAL	R6 K4 ; R6 := 0xce225efa
	14	[7887]	CALL     	R6 1 1 ; R6()
	15	[7888]	GETUPVAL 	R6 U1 ; R6 := U1
	16	[7888]	GETTABLE 	R6 R6 R5 ; R6 := R6[R5]
	17	[7889]	GETTABLE 	R7 R6 K5 ; R7 := R6["name"]
	18	[7889]	EQ       	0 R7 R1 ; if R7 ~= R1 then PC := 47
	19	[7889]	JMP      	47 ; PC := 47
	20	[7890]	GETGLOBAL	R7 K7 ; R7 := mDebugUnlockAllMissions
	21	[7890]	TEST     	R7 1 ; if R7 then PC := 26
	22	[7890]	JMP      	26 ; PC := 26
	23	[7890]	GETUPVAL 	R7 U0 ; R7 := U0
	24	[7890]	GETTABLE 	R7 R7 K8 ; R7 := R7[0x70bc04d0]
	25	[7890]	CALL     	R7 1 2 ; R7 := R7()
	26	[7890]	SETTABLE 	R6 K6 R7 ; R6["locationEnabled"] := R7
	27	[7891]	GETTABLE 	R7 R6 K6 ; R7 := R6["locationEnabled"]
	28	[7891]	SETTABLE 	R6 K9 R7 ; R6[0x4c4f8717] := R7
	29	[7892]	GETGLOBAL	R7 K10 ; R7 := 0x7b998233
	30	[7892]	GETTABLE 	R8 R6 K11 ; R8 := R6["deco"]
	31	[7892]	CALL     	R7 2 2 ; R7 := R7(R8)
	32	[7892]	TEST     	R7 1 ; if R7 then PC := 68
	33	[7892]	JMP      	68 ; PC := 68
	34	[7892]	GETGLOBAL	R7 K10 ; R7 := 0x7b998233
	35	[7892]	GETTABLE 	R8 R6 K11 ; R8 := R6["deco"]
	36	[7892]	GETTABLE 	R8 R8 K12 ; R8 := R8["mInstance"]
	37	[7892]	CALL     	R7 2 2 ; R7 := R7(R8)
	38	[7892]	TEST     	R7 1 ; if R7 then PC := 68
	39	[7892]	JMP      	68 ; PC := 68
	40	[7893]	GETTABLE 	R7 R6 K11 ; R7 := R6["deco"]
	41	[7893]	GETTABLE 	R7 R7 K12 ; R7 := R7["mInstance"]
	42	[7893]	SELF     	R7 R7 K13 ; R8 := R7; R7 := R7[0x768274d6]
	43	[7893]	GETTABLE 	R9 R6 K6 ; R9 := R6["locationEnabled"]
	44	[7893]	OP_LOADBOOL	R10 1 0 ; R10 := true
	45	[7893]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	46	[7894]	JMP      	68 ; PC := 68
	47	[7896]	GETTABLE 	R7 R6 K14 ; R7 := R6["radialSector"]
	48	[7896]	GETTABLE 	R7 R7 K15 ; R7 := R7["mission"]
	49	[7896]	GETTABLE 	R7 R7 K16 ; R7 := R7["questReq"]
	50	[7897]	GETGLOBAL	R8 K10 ; R8 := 0x7b998233
	51	[7897]	MOVE     	R9 R7 ; R9 := R7
	52	[7897]	CALL     	R8 2 2 ; R8 := R8(R9)
	53	[7897]	TEST     	R8 1 ; if R8 then PC := 68
	54	[7897]	JMP      	68 ; PC := 68
	55	[7898]	EQ       	1 R0 R7 ; if R0 == R7 then PC := 63
	56	[7898]	JMP      	63 ; PC := 63
	57	[7898]	GETUPVAL 	R8 U0 ; R8 := U0
	58	[7898]	GETTABLE 	R8 R8 K17 ; R8 := R8[0x52fb05b3]
	59	[7898]	MOVE     	R9 R7 ; R9 := R7
	60	[7898]	CALL     	R8 2 2 ; R8 := R8(R9)
	61	[7898]	JMP      	64 ; PC := 64
	62	[7898]	OP_LOADBOOL	R8 0 1 ; R8 := false; PC := 63
	63	[7898]	OP_LOADBOOL	R8 1 0 ; R8 := true
	64	[7898]	SETTABLE 	R6 K6 R8 ; R6["locationEnabled"] := R8
	65	[7899]	GETTABLE 	R8 R6 K6 ; R8 := R6["locationEnabled"]
	66	[7899]	NOT      	R8 R8 ; R8 := not R8
	67	[7899]	SETTABLE 	R6 K9 R8 ; R6[0x4c4f8717] := R8
	68	[7886]	FORLOOP  	R2 13 ; R2 += R4; if R2 <= R3 then begin PC := 13; R5 := R2 end
	69	[7904]	GETUPVAL 	R8 U2 ; R8 := U2
	70	[7904]	CALL     	R8 1 1 ; R8()
	71	[7905]	RETURN   	R0 1 ; return 

function #177 <?:7907,7929> (67 instructions, 268 bytes at 000002112CC374C0)
0 params, 7 slots, 2 upvalues, 0 locals, 19 constants, 0 functions
	1	[7908]	GETGLOBAL	R0 K0 ; R0 := mFxNodes
	2	[7908]	NEWTABLE 	R1 0 0 ; R1 := {}
	3	[7908]	SETTABLE 	R0 K1 R1 ; R0["Pending"] := R1
	4	[7909]	GETGLOBAL	R0 K0 ; R0 := mFxNodes
	5	[7909]	NEWTABLE 	R1 0 0 ; R1 := {}
	6	[7909]	SETTABLE 	R0 K2 R1 ; R0["Quest"] := R1
	7	[7912]	GETGLOBAL	R0 K3 ; R0 := 0xcfc01047
	8	[7912]	GETUPVAL 	R1 U0 ; R1 := U0
	9	[7912]	CALL     	R0 2 4 ; R0,R1,R2 := R0(R1)
	10	[7912]	JMP      	65 ; PC := 65
	11	[7913]	GETTABLE 	R5 R4 K4 ; R5 := R4["isShortcut"]
	12	[7913]	TEST     	R5 1 ; if R5 then PC := 65
	13	[7913]	JMP      	65 ; PC := 65
	14	[7913]	GETTABLE 	R5 R4 K5 ; R5 := R4["isJunction"]
	15	[7913]	TEST     	R5 1 ; if R5 then PC := 65
	16	[7913]	JMP      	65 ; PC := 65
	17	[7914]	GETTABLE 	R5 R4 K6 ; R5 := R4["special"]
	18	[7914]	TEST     	R5 1 ; if R5 then PC := 60
	19	[7914]	JMP      	60 ; PC := 60
	20	[7915]	GETGLOBAL	R5 K7 ; R5 := _T
	21	[7915]	GETTABLE 	R5 R5 K8 ; R5 := R5["CachedSortieMissions"]
	22	[7915]	GETTABLE 	R5 R5 R3 ; R5 := R5[R3]
	23	[7915]	EQ       	0 R5 K9 ; if R5 ~= nil then PC := 60
	24	[7915]	JMP      	60 ; PC := 60
	25	[7916]	GETGLOBAL	R5 K7 ; R5 := _T
	26	[7916]	GETTABLE 	R5 R5 K10 ; R5 := R5["CachedActiveMissions"]
	27	[7916]	GETTABLE 	R5 R5 R3 ; R5 := R5[R3]
	28	[7916]	EQ       	0 R5 K9 ; if R5 ~= nil then PC := 60
	29	[7916]	JMP      	60 ; PC := 60
	30	[7917]	GETGLOBAL	R5 K7 ; R5 := _T
	31	[7917]	GETTABLE 	R5 R5 K11 ; R5 := R5["CachedAlerts"]
	32	[7917]	GETTABLE 	R5 R5 R3 ; R5 := R5[R3]
	33	[7917]	EQ       	0 R5 K9 ; if R5 ~= nil then PC := 60
	34	[7917]	JMP      	60 ; PC := 60
	35	[7918]	GETGLOBAL	R5 K7 ; R5 := _T
	36	[7918]	GETTABLE 	R5 R5 K12 ; R5 := R5["CachedInvasionInfo"]
	37	[7918]	GETTABLE 	R5 R5 R3 ; R5 := R5[R3]
	38	[7918]	EQ       	0 R5 K9 ; if R5 ~= nil then PC := 60
	39	[7918]	JMP      	60 ; PC := 60
	40	[7919]	GETGLOBAL	R5 K13 ; R5 := 0x0032441c
	41	[7919]	GETTABLE 	R5 R5 K14 ; R5 := R5["CachedGoalInfo"]
	42	[7919]	GETTABLE 	R5 R5 R3 ; R5 := R5[R3]
	43	[7919]	EQ       	0 R5 K9 ; if R5 ~= nil then PC := 60
	44	[7919]	JMP      	60 ; PC := 60
	45	[7920]	GETGLOBAL	R5 K13 ; R5 := 0x0032441c
	46	[7920]	GETTABLE 	R5 R5 K15 ; R5 := R5["MergedGoalNodes"]
	47	[7920]	GETTABLE 	R5 R5 R3 ; R5 := R5[R3]
	48	[7920]	EQ       	0 R5 K9 ; if R5 ~= nil then PC := 60
	49	[7920]	JMP      	60 ; PC := 60
	50	[7921]	GETGLOBAL	R5 K7 ; R5 := _T
	51	[7921]	GETTABLE 	R5 R5 K16 ; R5 := R5["CachedSyndicateMissions"]
	52	[7921]	GETTABLE 	R5 R5 R3 ; R5 := R5[R3]
	53	[7921]	EQ       	0 R5 K9 ; if R5 ~= nil then PC := 60
	54	[7921]	JMP      	60 ; PC := 60
	55	[7922]	GETGLOBAL	R5 K7 ; R5 := _T
	56	[7922]	GETTABLE 	R5 R5 K17 ; R5 := R5["CachedSkullNodes"]
	57	[7922]	GETTABLE 	R5 R5 R3 ; R5 := R5[R3]
	58	[7922]	EQ       	1 R5 K9 ; if R5 == nil then PC := 65
	59	[7922]	JMP      	65 ; PC := 65
	60	[7925]	GETUPVAL 	R5 U1 ; R5 := U1
	61	[7925]	MOVE     	R6 R4 ; R6 := R4
	62	[7925]	CALL     	R5 2 1 ; R5(R6)
	63	[7926]	GETGLOBAL	R5 K18 ; R5 := 0xce225efa
	64	[7926]	CALL     	R5 1 1 ; R5()
	65	[7912]	TFORLOOP 	R0 2 ; R3,R4 := R0(R1,R2); if R3 ~= nil then begin PC = 11; R2 := R3 end
	66	[7927]	JMP      	11 ; PC := 11
	67	[7929]	RETURN   	R0 1 ; return 

function #178 <?:7931,7951> (50 instructions, 200 bytes at 000002112CC378D0)
1 param, 14 slots, 1 upvalue, 0 locals, 17 constants, 0 functions
	1	[7932]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[7932]	MOVE     	R2 R0 ; R2 := R0
	3	[7932]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[7932]	MOVE     	R0 R1 ; R0 := R1
	5	[7933]	EQ       	0 R0 K1 ; if R0 ~= nil then PC := 8
	6	[7933]	JMP      	8 ; PC := 8
	7	[7934]	RETURN   	R0 1 ; return 
	8	[7937]	GETGLOBAL	R1 K2 ; R1 := mFxNodes
	9	[7937]	NEWTABLE 	R2 0 0 ; R2 := {}
	10	[7937]	SETTABLE 	R1 K3 R2 ; R1["Invasion"] := R2
	11	[7938]	GETGLOBAL	R1 K4 ; R1 := 0xcfc01047
	12	[7938]	GETGLOBAL	R2 K5 ; R2 := mParticles
	13	[7938]	GETTABLE 	R2 R2 K6 ; R2 := R2["InvasionFx"]
	14	[7938]	CALL     	R1 2 4 ; R1,R2,R3 := R1(R2)
	15	[7938]	JMP      	26 ; PC := 26
	16	[7939]	GETGLOBAL	R6 K7 ; R6 := 0x7b998233
	17	[7939]	GETTABLE 	R7 R5 K8 ; R7 := R5["mInstance"]
	18	[7939]	CALL     	R6 2 2 ; R6 := R6(R7)
	19	[7939]	TEST     	R6 1 ; if R6 then PC := 23
	20	[7939]	JMP      	23 ; PC := 23
	21	[7940]	SELF     	R6 R5 K9 ; R7 := R5; R6 := R5[0xa2880940]
	22	[7940]	CALL     	R6 2 1 ; R6(R7)
	23	[7943]	GETGLOBAL	R6 K5 ; R6 := mParticles
	24	[7943]	GETTABLE 	R6 R6 K6 ; R6 := R6["InvasionFx"]
	25	[7943]	SETTABLE 	R6 R4 K1 ; R6[R4] := nil
	26	[7938]	TFORLOOP 	R1 2 ; R4,R5 := R1(R2,R3); if R4 ~= nil then begin PC = 16; R3 := R4 end
	27	[7943]	JMP      	16 ; PC := 16
	28	[7946]	GETGLOBAL	R6 K4 ; R6 := 0xcfc01047
	29	[7946]	GETUPVAL 	R7 U0 ; R7 := U0
	30	[7946]	CALL     	R6 2 4 ; R6,R7,R8 := R6(R7)
	31	[7946]	JMP      	48 ; PC := 48
	32	[7947]	GETGLOBAL	R11 K10 ; R11 := _T
	33	[7947]	GETTABLE 	R11 R11 K11 ; R11 := R11["CachedInvasionInfo"]
	34	[7947]	GETTABLE 	R11 R11 R9 ; R11 := R11[R9]
	35	[7947]	EQ       	1 R11 K1 ; if R11 == nil then PC := 48
	36	[7947]	JMP      	48 ; PC := 48
	37	[7947]	GETTABLE 	R11 R10 K12 ; R11 := R10["radialSector"]
	38	[7947]	GETTABLE 	R11 R11 K13 ; R11 := R11["region"]
	39	[7947]	EQ       	0 R11 R0 ; if R11 ~= R0 then PC := 48
	40	[7947]	JMP      	48 ; PC := 48
	41	[7948]	GETGLOBAL	R11 K14 ; R11 := 0x33bdd652
	42	[7948]	GETTABLE 	R11 R11 K15 ; R11 := R11[0x23d5322f]
	43	[7948]	GETGLOBAL	R12 K2 ; R12 := mFxNodes
	44	[7948]	GETTABLE 	R12 R12 K3 ; R12 := R12["Invasion"]
	45	[7948]	NEWTABLE 	R13 0 1 ; R13 := {}
	46	[7948]	SETTABLE 	R13 K16 R10 ; R13["Node"] := R10
	47	[7948]	CALL     	R11 3 1 ; R11(R12,R13)
	48	[7946]	TFORLOOP 	R6 2 ; R9,R10 := R6(R7,R8); if R9 ~= nil then begin PC = 32; R8 := R9 end
	49	[7949]	JMP      	32 ; PC := 32
	50	[7951]	RETURN   	R0 1 ; return 

function #179 <?:7953,8007> (215 instructions, 860 bytes at 000002112CC37C40)
1 param, 14 slots, 3 upvalues, 0 locals, 46 constants, 0 functions
	1	[7954]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[7954]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	3	[7954]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[7954]	TEST     	R1 0 ; if not R1 then PC := 7
	5	[7954]	JMP      	7 ; PC := 7
	6	[7955]	RETURN   	R0 1 ; return 
	7	[7958]	GETGLOBAL	R1 K2 ; R1 := mCountDown
	8	[7958]	GETTABLE 	R1 R1 K3 ; R1 := R1["Node"]
	9	[7958]	EQ       	1 R1 K4 ; if R1 == nil then PC := 107
	10	[7958]	JMP      	107 ; PC := 107
	11	[7958]	GETGLOBAL	R1 K2 ; R1 := mCountDown
	12	[7958]	GETTABLE 	R1 R1 K5 ; R1 := R1["TransitioningOut"]
	13	[7958]	TEST     	R1 1 ; if R1 then PC := 107
	14	[7958]	JMP      	107 ; PC := 107
	15	[7958]	GETGLOBAL	R1 K2 ; R1 := mCountDown
	16	[7958]	GETTABLE 	R1 R1 K6 ; R1 := R1["Timer"]
	17	[7958]	EQ       	1 R1 K7 ; if R1 == -1.000000 then PC := 107
	18	[7958]	JMP      	107 ; PC := 107
	19	[7959]	GETGLOBAL	R1 K2 ; R1 := mCountDown
	20	[7959]	SETTABLE 	R1 K5 K8 ; R1["TransitioningOut"] := true
	21	[7960]	OP_LOADBOOL	R1 1 0 ; R1 := true
	22	[7960]	SETGLOBALHASH	R1 K9 ; mInputBlocked := R1
	23	[7961]	GETUPVAL 	R1 U0 ; R1 := U0
	24	[7961]	GETGLOBAL	R2 K2 ; R2 := mCountDown
	25	[7961]	GETTABLE 	R2 R2 K3 ; R2 := R2["Node"]
	26	[7961]	CALL     	R1 2 4 ; R1,R2,R3 := R1(R2)
	27	[7963]	GETGLOBAL	R4 K2 ; R4 := mCountDown
	28	[7963]	GETGLOBAL	R5 K11 ; R5 := mDrag
	29	[7963]	GETTABLE 	R5 R5 K12 ; R5 := R5["mCurrentScroll"]
	30	[7963]	GETTABLE 	R5 R5 K13 ; R5 := R5["x"]
	31	[7963]	SETTABLE 	R4 K10 R5 ; R4[0x7b998233] := R5
	32	[7964]	GETGLOBAL	R4 K2 ; R4 := mCountDown
	33	[7964]	GETGLOBAL	R5 K11 ; R5 := mDrag
	34	[7964]	GETTABLE 	R5 R5 K12 ; R5 := R5["mCurrentScroll"]
	35	[7964]	GETTABLE 	R5 R5 K15 ; R5 := R5["y"]
	36	[7964]	SETTABLE 	R4 K14 R5 ; R4[0x03f57322] := R5
	37	[7965]	GETGLOBAL	R4 K2 ; R4 := mCountDown
	38	[7965]	GETGLOBAL	R5 K17 ; R5 := mSmoothZoom
	39	[7965]	GETTABLE 	R5 R5 K18 ; R5 := R5["mCurVal"]
	40	[7965]	SETTABLE 	R4 K16 R5 ; R4["InitialZoom"] := R5
	41	[7967]	GETGLOBAL	R4 K2 ; R4 := mCountDown
	42	[7967]	SETTABLE 	R4 K19 R1 ; R4["TargetX"] := R1
	43	[7968]	GETGLOBAL	R4 K2 ; R4 := mCountDown
	44	[7968]	SETTABLE 	R4 K20 R2 ; R4["TargetY"] := R2
	45	[7969]	GETGLOBAL	R4 K2 ; R4 := mCountDown
	46	[7969]	SETTABLE 	R4 K21 R3 ; R4["TargetZoom"] := R3
	47	[7971]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	48	[7971]	GETUPVAL 	R5 U1 ; R5 := U1
	49	[7971]	GETTABLE 	R5 R5 K22 ; R5 := R5["cameraSpot"]
	50	[7971]	CALL     	R4 2 2 ; R4 := R4(R5)
	51	[7971]	TEST     	R4 1 ; if R4 then PC := 64
	52	[7971]	JMP      	64 ; PC := 64
	53	[7972]	GETGLOBAL	R4 K2 ; R4 := mCountDown
	54	[7972]	GETUPVAL 	R5 U1 ; R5 := U1
	55	[7972]	GETTABLE 	R5 R5 K22 ; R5 := R5["cameraSpot"]
	56	[7972]	SELF     	R5 R5 K24 ; R6 := R5; R5 := R5[0xaac2f3a5]
	57	[7972]	CALL     	R5 2 2 ; R5 := R5(R6)
	58	[7972]	SETTABLE 	R4 K23 R5 ; R4["InitialFOV"] := R5
	59	[7973]	GETGLOBAL	R4 K2 ; R4 := mCountDown
	60	[7973]	GETGLOBAL	R5 K2 ; R5 := mCountDown
	61	[7973]	GETTABLE 	R5 R5 K23 ; R5 := R5["InitialFOV"]
	62	[7973]	DIV      	R5 R5 K26 ; R5 := R5 / 4.000000
	63	[7973]	SETTABLE 	R4 K25 R5 ; R4["TargetFOV"] := R5
	64	[7976]	GETGLOBAL	R4 K27 ; R4 := mPlayerPos
	65	[7976]	SETTABLE 	R4 K28 K8 ; R4["Locked"] := true
	66	[7977]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	67	[7977]	GETUPVAL 	R5 U2 ; R5 := U2
	68	[7977]	CALL     	R4 2 2 ; R4 := R4(R5)
	69	[7977]	TEST     	R4 1 ; if R4 then PC := 77
	70	[7977]	JMP      	77 ; PC := 77
	71	[7978]	GETGLOBAL	R4 K27 ; R4 := mPlayerPos
	72	[7978]	GETUPVAL 	R5 U2 ; R5 := U2
	73	[7978]	SELF     	R5 R5 K30 ; R6 := R5; R5 := R5[0xd1586535]
	74	[7978]	CALL     	R5 2 2 ; R5 := R5(R6)
	75	[7978]	SETTABLE 	R4 K29 R5 ; R4["Previous"] := R5
	76	[7978]	JMP      	81 ; PC := 81
	77	[7980]	GETGLOBAL	R4 K27 ; R4 := mPlayerPos
	78	[7980]	GETGLOBAL	R5 K31 ; R5 := 0xa421af95
	79	[7980]	CALL     	R5 1 2 ; R5 := R5()
	80	[7980]	SETTABLE 	R4 K29 R5 ; R4["Previous"] := R5
	81	[7982]	GETGLOBAL	R4 K27 ; R4 := mPlayerPos
	82	[7982]	GETGLOBAL	R5 K27 ; R5 := mPlayerPos
	83	[7982]	GETTABLE 	R5 R5 K29 ; R5 := R5["Previous"]
	84	[7982]	GETGLOBAL	R6 K31 ; R6 := 0xa421af95
	85	[7982]	LOADK    	R7 := 0.000000
	86	[7982]	LOADK    	R8 := 0.000000
	87	[7982]	GETGLOBAL	R9 K2 ; R9 := mCountDown
	88	[7982]	GETTABLE 	R9 R9 K21 ; R9 := R9["TargetZoom"]
	89	[7982]	GETGLOBAL	R10 K2 ; R10 := mCountDown
	90	[7982]	GETTABLE 	R10 R10 K16 ; R10 := R10["InitialZoom"]
	91	[7982]	SUB      	R9 R9 R10 ; R9 := R9 - R10
	92	[7982]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	93	[7982]	SUB      	R5 R5 R6 ; R5 := R5 - R6
	94	[7982]	SETTABLE 	R4 K32 R5 ; R4["Target"] := R5
	95	[7983]	GETGLOBAL	R4 K27 ; R4 := mPlayerPos
	96	[7983]	GETTABLE 	R4 R4 K33 ; R4 := R4["Prop"]
	97	[7983]	SELF     	R4 R4 K34 ; R5 := R4; R4 := R4[0xd0f998cd]
	98	[7983]	LOADK    	R6 := 1.000000
	99	[7983]	CALL     	R4 3 1 ; R4(R5,R6)
	100	[7984]	GETGLOBAL	R4 K27 ; R4 := mPlayerPos
	101	[7984]	GETTABLE 	R4 R4 K33 ; R4 := R4["Prop"]
	102	[7984]	SELF     	R4 R4 K35 ; R5 := R4; R4 := R4[0x188e2bee]
	103	[7984]	LOADK    	R6 := 1.000000
	104	[7984]	CALL     	R4 3 1 ; R4(R5,R6)
	105	[7985]	GETGLOBAL	R4 K27 ; R4 := mPlayerPos
	106	[7985]	SETTABLE 	R4 K36 K7 ; R4["Region"] := -1.000000
	107	[7988]	GETGLOBAL	R4 K1 ; R4 := 0xae91e43b
	108	[7988]	SELF     	R4 R4 K37 ; R5 := R4; R4 := R4[0x67bc869f]
	109	[7988]	LOADK    	R6 K38 ; R6 := "_root"
	110	[7988]	LOADK    	R7 := 10.000000
	111	[7988]	MUL      	R8 R0 K39 ; R8 := R0 * 100.000000
	112	[7988]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	113	[7990]	SUB      	R4 K40 R0 ; R4 := 1.000000 - R0
	114	[7992]	GETGLOBAL	R5 K2 ; R5 := mCountDown
	115	[7992]	GETTABLE 	R5 R5 K16 ; R5 := R5["InitialZoom"]
	116	[7992]	EQ       	1 R5 K4 ; if R5 == nil then PC := 122
	117	[7992]	JMP      	122 ; PC := 122
	118	[7992]	GETGLOBAL	R5 K2 ; R5 := mCountDown
	119	[7992]	GETTABLE 	R5 R5 K21 ; R5 := R5["TargetZoom"]
	120	[7992]	EQ       	0 R5 K4 ; if R5 ~= nil then PC := 123
	121	[7992]	JMP      	123 ; PC := 123
	122	[7992]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 123
	123	[7992]	OP_LOADBOOL	R5 1 0 ; R5 := true
	124	[7993]	GETGLOBAL	R6 K2 ; R6 := mCountDown
	125	[7993]	GETTABLE 	R6 R6 K23 ; R6 := R6["InitialFOV"]
	126	[7993]	EQ       	1 R6 K4 ; if R6 == nil then PC := 132
	127	[7993]	JMP      	132 ; PC := 132
	128	[7993]	GETGLOBAL	R6 K2 ; R6 := mCountDown
	129	[7993]	GETTABLE 	R6 R6 K25 ; R6 := R6["TargetFOV"]
	130	[7993]	EQ       	0 R6 K4 ; if R6 ~= nil then PC := 133
	131	[7993]	JMP      	133 ; PC := 133
	132	[7993]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 133
	133	[7993]	OP_LOADBOOL	R6 1 0 ; R6 := true
	134	[7994]	TEST     	R5 1 ; if R5 then PC := 138
	135	[7994]	JMP      	138 ; PC := 138
	136	[7994]	TEST     	R6 0 ; if not R6 then PC := 192
	137	[7994]	JMP      	192 ; PC := 192
	138	[7995]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	139	[7995]	GETUPVAL 	R8 U1 ; R8 := U1
	140	[7995]	GETTABLE 	R8 R8 K22 ; R8 := R8["cameraSpot"]
	141	[7995]	CALL     	R7 2 2 ; R7 := R7(R8)
	142	[7995]	TEST     	R7 1 ; if R7 then PC := 158
	143	[7995]	JMP      	158 ; PC := 158
	144	[7995]	TEST     	R6 0 ; if not R6 then PC := 158
	145	[7995]	JMP      	158 ; PC := 158
	146	[7996]	GETUPVAL 	R7 U1 ; R7 := U1
	147	[7996]	GETTABLE 	R7 R7 K22 ; R7 := R7["cameraSpot"]
	148	[7996]	SELF     	R7 R7 K41 ; R8 := R7; R7 := R7[0xacea6d71]
	149	[7996]	GETGLOBAL	R9 K42 ; R9 := 0x9bafffe3
	150	[7996]	GETGLOBAL	R10 K2 ; R10 := mCountDown
	151	[7996]	GETTABLE 	R10 R10 K23 ; R10 := R10["InitialFOV"]
	152	[7996]	GETGLOBAL	R11 K2 ; R11 := mCountDown
	153	[7996]	GETTABLE 	R11 R11 K25 ; R11 := R11["TargetFOV"]
	154	[7996]	MOVE     	R12 R4 ; R12 := R4
	155	[7996]	CALL     	R9 4 0 ; R9,... := R9(R10,R11,R12)
	156	[7996]	CALL     	R7 0 1 ; R7(R8,...)
	157	[7996]	JMP      	170 ; PC := 170
	158	[7997]	TEST     	R5 0 ; if not R5 then PC := 170
	159	[7997]	JMP      	170 ; PC := 170
	160	[7998]	GETGLOBAL	R7 K17 ; R7 := mSmoothZoom
	161	[7998]	SELF     	R7 R7 K34 ; R8 := R7; R7 := R7[0xd0f998cd]
	162	[7998]	GETGLOBAL	R9 K42 ; R9 := 0x9bafffe3
	163	[7998]	GETGLOBAL	R10 K2 ; R10 := mCountDown
	164	[7998]	GETTABLE 	R10 R10 K16 ; R10 := R10["InitialZoom"]
	165	[7998]	GETGLOBAL	R11 K2 ; R11 := mCountDown
	166	[7998]	GETTABLE 	R11 R11 K21 ; R11 := R11["TargetZoom"]
	167	[7998]	MOVE     	R12 R4 ; R12 := R4
	168	[7998]	CALL     	R9 4 0 ; R9,... := R9(R10,R11,R12)
	169	[7998]	CALL     	R7 0 1 ; R7(R8,...)
	170	[8000]	GETGLOBAL	R7 K11 ; R7 := mDrag
	171	[8000]	SELF     	R7 R7 K43 ; R8 := R7; R7 := R7[0x4c4f8717]
	172	[8000]	LOADK    	R9 K13 ; R9 := "x"
	173	[8000]	GETGLOBAL	R10 K42 ; R10 := 0x9bafffe3
	174	[8000]	GETGLOBAL	R11 K2 ; R11 := mCountDown
	175	[8000]	GETTABLE 	R11 R11 K10 ; R11 := R11["InitialX"]
	176	[8000]	GETGLOBAL	R12 K2 ; R12 := mCountDown
	177	[8000]	GETTABLE 	R12 R12 K19 ; R12 := R12["TargetX"]
	178	[8000]	MOVE     	R13 R4 ; R13 := R4
	179	[8000]	CALL     	R10 4 0 ; R10,... := R10(R11,R12,R13)
	180	[8000]	CALL     	R7 0 1 ; R7(R8,...)
	181	[8001]	GETGLOBAL	R7 K11 ; R7 := mDrag
	182	[8001]	SELF     	R7 R7 K43 ; R8 := R7; R7 := R7[0x4c4f8717]
	183	[8001]	LOADK    	R9 K15 ; R9 := "y"
	184	[8001]	GETGLOBAL	R10 K42 ; R10 := 0x9bafffe3
	185	[8001]	GETGLOBAL	R11 K2 ; R11 := mCountDown
	186	[8001]	GETTABLE 	R11 R11 K14 ; R11 := R11["InitialY"]
	187	[8001]	GETGLOBAL	R12 K2 ; R12 := mCountDown
	188	[8001]	GETTABLE 	R12 R12 K20 ; R12 := R12["TargetY"]
	189	[8001]	MOVE     	R13 R4 ; R13 := R4
	190	[8001]	CALL     	R10 4 0 ; R10,... := R10(R11,R12,R13)
	191	[8001]	CALL     	R7 0 1 ; R7(R8,...)
	192	[8004]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	193	[8004]	GETUPVAL 	R8 U2 ; R8 := U2
	194	[8004]	CALL     	R7 2 2 ; R7 := R7(R8)
	195	[8004]	TEST     	R7 1 ; if R7 then PC := 215
	196	[8004]	JMP      	215 ; PC := 215
	197	[8004]	GETGLOBAL	R7 K27 ; R7 := mPlayerPos
	198	[8004]	GETTABLE 	R7 R7 K29 ; R7 := R7["Previous"]
	199	[8004]	EQ       	1 R7 K4 ; if R7 == nil then PC := 215
	200	[8004]	JMP      	215 ; PC := 215
	201	[8004]	GETGLOBAL	R7 K27 ; R7 := mPlayerPos
	202	[8004]	GETTABLE 	R7 R7 K32 ; R7 := R7["Target"]
	203	[8004]	EQ       	1 R7 K4 ; if R7 == nil then PC := 215
	204	[8004]	JMP      	215 ; PC := 215
	205	[8005]	GETUPVAL 	R7 U2 ; R7 := U2
	206	[8005]	SELF     	R7 R7 K44 ; R8 := R7; R7 := R7[0x9307aa51]
	207	[8005]	GETGLOBAL	R9 K45 ; R9 := 0x5db3ce80
	208	[8005]	GETGLOBAL	R10 K27 ; R10 := mPlayerPos
	209	[8005]	GETTABLE 	R10 R10 K29 ; R10 := R10["Previous"]
	210	[8005]	GETGLOBAL	R11 K27 ; R11 := mPlayerPos
	211	[8005]	GETTABLE 	R11 R11 K32 ; R11 := R11["Target"]
	212	[8005]	MOVE     	R12 R4 ; R12 := R4
	213	[8005]	CALL     	R9 4 0 ; R9,... := R9(R10,R11,R12)
	214	[8005]	CALL     	R7 0 1 ; R7(R8,...)
	215	[8007]	RETURN   	R0 1 ; return 

function #180 <?:8009,8014> (10 instructions, 40 bytes at 000002112CC387E0)
0 params, 2 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[8010]	GETGLOBAL	R0 K0 ; R0 := 0x34291f5c
	2	[8010]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x1467d5f4]
	3	[8010]	CALL     	R0 1 2 ; R0 := R0()
	4	[8010]	TEST     	R0 0 ; if not R0 then PC := 8
	5	[8010]	JMP      	8 ; PC := 8
	6	[8011]	GETUPVAL 	R0 U0 ; R0 := U0
	7	[8011]	CALL     	R0 1 1 ; R0()
	8	[8013]	OP_LOADBOOL	R0 1 0 ; R0 := true
	9	[8013]	RETURN   	R0 2 ; return R0 
	10	[8014]	RETURN   	R0 1 ; return 

function #181 <?:8016,8018> (3 instructions, 12 bytes at 000002112CC38920)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[8017]	OP_LOADBOOL	R0 1 0 ; R0 := true
	2	[8017]	SETUPVAL 	R0 U0 ; U0 := R0
	3	[8018]	RETURN   	R0 1 ; return 

function #182 <?:8020,8033> (49 instructions, 196 bytes at 000002112CC389F0)
0 params, 6 slots, 1 upvalue, 0 locals, 15 constants, 0 functions
	1	[8021]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[8021]	GETGLOBAL	R1 K1 ; R1 := mMapLoader
	3	[8021]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[8021]	TEST     	R0 1 ; if R0 then PC := 49
	5	[8021]	JMP      	49 ; PC := 49
	6	[8022]	GETGLOBAL	R0 K2 ; R0 := 0x89326c93
	7	[8022]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0xfb64e76c]
	8	[8022]	CALL     	R0 2 2 ; R0 := R0(R1)
	9	[8023]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	10	[8023]	MOVE     	R2 R0 ; R2 := R0
	11	[8023]	CALL     	R1 2 2 ; R1 := R1(R2)
	12	[8023]	TEST     	R1 1 ; if R1 then PC := 20
	13	[8023]	JMP      	20 ; PC := 20
	14	[8023]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	15	[8023]	SELF     	R2 R0 K4 ; R3 := R0; R2 := R0[0xbb610e5b]
	16	[8023]	CALL     	R2 2 0 ; R2,... := R2(R3)
	17	[8023]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	18	[8023]	TEST     	R1 0 ; if not R1 then PC := 21
	19	[8023]	JMP      	21 ; PC := 21
	20	[8024]	RETURN   	R0 1 ; return 
	21	[8027]	SELF     	R1 R0 K4 ; R2 := R0; R1 := R0[0xbb610e5b]
	22	[8027]	CALL     	R1 2 2 ; R1 := R1(R2)
	23	[8027]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xf2deaf69]
	24	[8027]	GETGLOBAL	R3 K6 ; R3 := 0x7ed0a956
	25	[8027]	LOADK    	R4 K7 ; R4 := "/Lotus/Types/Friendly/Tenno/OperatorHubAvatar"
	26	[8027]	CALL     	R3 2 0 ; R3,... := R3(R4)
	27	[8027]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	28	[8027]	TEST     	R1 1 ; if R1 then PC := 39
	29	[8027]	JMP      	39 ; PC := 39
	30	[8028]	GETGLOBAL	R1 K1 ; R1 := mMapLoader
	31	[8028]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xf5f8978e]
	32	[8028]	GETGLOBAL	R3 K9 ; R3 := 0x0469f296
	33	[8028]	LOADK    	R4 K10 ; R4 := "Player"
	34	[8028]	CALL     	R3 2 2 ; R3 := R3(R4)
	35	[8028]	SELF     	R4 R0 K4 ; R5 := R0; R4 := R0[0xbb610e5b]
	36	[8028]	CALL     	R4 2 2 ; R4 := R4(R5)
	37	[8028]	OP_LOADBOOL	R5 1 0 ; R5 := true
	38	[8028]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	39	[8030]	GETUPVAL 	R1 U0 ; R1 := U0
	40	[8030]	GETTABLE 	R1 R1 K11 ; R1 := R1[0x659d451f]
	41	[8030]	GETGLOBAL	R2 K12 ; R2 := 0x0032441c
	42	[8030]	GETTABLE 	R2 R2 K13 ; R2 := R2["UISound_ButtonSelect"]
	43	[8030]	CALL     	R1 2 1 ; R1(R2)
	44	[8031]	GETUPVAL 	R1 U0 ; R1 := U0
	45	[8031]	GETTABLE 	R1 R1 K11 ; R1 := R1[0x659d451f]
	46	[8031]	GETGLOBAL	R2 K12 ; R2 := 0x0032441c
	47	[8031]	GETTABLE 	R2 R2 K14 ; R2 := R2["UISound_DialogOpen"]
	48	[8031]	CALL     	R1 2 1 ; R1(R2)
	49	[8033]	RETURN   	R0 1 ; return 

function #183 <?:8035,8038> (5 instructions, 20 bytes at 000002112CC38D40)
1 param, 2 slots, 2 upvalues, 0 locals, 0 constants, 0 functions
	1	[8036]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[8036]	CALL     	R1 1 1 ; R1()
	3	[8037]	GETUPVAL 	R1 U1 ; R1 := U1
	4	[8037]	CALL     	R1 1 1 ; R1()
	5	[8038]	RETURN   	R0 1 ; return 

function #184 <?:8040,8042> (3 instructions, 12 bytes at 000002112CC38E30)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[8041]	OP_LOADBOOL	R0 1 0 ; R0 := true
	2	[8041]	RETURN   	R0 2 ; return R0 
	3	[8042]	RETURN   	R0 1 ; return 

function #185 <?:8044,8046> (4 instructions, 16 bytes at 000002112CC38F00)
0 params, 2 slots, 0 upvalues, 0 locals, 2 constants, 0 functions
	1	[8045]	GETGLOBAL	R0 K0 ; R0 := mRailJack
	2	[8045]	GETTABLE 	R0 R0 K1 ; R0 := R0[0xa2cabe13]
	3	[8045]	CALL     	R0 1 1 ; R0()
	4	[8046]	RETURN   	R0 1 ; return 

function #186 <?:8048,8052> (14 instructions, 56 bytes at 000002112CC39000)
1 param, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[8049]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[8049]	GETGLOBAL	R2 K1 ; R2 := mInfoTip
	3	[8049]	GETTABLE 	R2 R2 K2 ; R2 := R2["NodeMissionList"]
	4	[8049]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[8049]	TEST     	R1 1 ; if R1 then PC := 14
	6	[8049]	JMP      	14 ; PC := 14
	7	[8050]	GETGLOBAL	R1 K1 ; R1 := mInfoTip
	8	[8050]	GETTABLE 	R1 R1 K2 ; R1 := R1["NodeMissionList"]
	9	[8050]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xdf42446e]
	10	[8050]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	11	[8050]	MOVE     	R4 R0 ; R4 := R0
	12	[8050]	CALL     	R3 2 0 ; R3,... := R3(R4)
	13	[8050]	CALL     	R1 0 1 ; R1(R2,...)
	14	[8052]	RETURN   	R0 1 ; return 

function #187 <?:8054,8058> (14 instructions, 56 bytes at 000002112CC39190)
1 param, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[8055]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[8055]	GETGLOBAL	R2 K1 ; R2 := mInfoTip
	3	[8055]	GETTABLE 	R2 R2 K2 ; R2 := R2["NodeMissionList"]
	4	[8055]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[8055]	TEST     	R1 1 ; if R1 then PC := 14
	6	[8055]	JMP      	14 ; PC := 14
	7	[8056]	GETGLOBAL	R1 K1 ; R1 := mInfoTip
	8	[8056]	GETTABLE 	R1 R1 K2 ; R1 := R1["NodeMissionList"]
	9	[8056]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xbce5a201]
	10	[8056]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	11	[8056]	MOVE     	R4 R0 ; R4 := R0
	12	[8056]	CALL     	R3 2 0 ; R3,... := R3(R4)
	13	[8056]	CALL     	R1 0 1 ; R1(R2,...)
	14	[8058]	RETURN   	R0 1 ; return 

function #188 <?:8060,8064> (14 instructions, 56 bytes at 000002112CC39320)
1 param, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[8061]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[8061]	GETGLOBAL	R2 K1 ; R2 := mInfoTip
	3	[8061]	GETTABLE 	R2 R2 K2 ; R2 := R2["NodeMissionList"]
	4	[8061]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[8061]	TEST     	R1 1 ; if R1 then PC := 14
	6	[8061]	JMP      	14 ; PC := 14
	7	[8062]	GETGLOBAL	R1 K1 ; R1 := mInfoTip
	8	[8062]	GETTABLE 	R1 R1 K2 ; R1 := R1["NodeMissionList"]
	9	[8062]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x070daa5a]
	10	[8062]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	11	[8062]	MOVE     	R4 R0 ; R4 := R0
	12	[8062]	CALL     	R3 2 0 ; R3,... := R3(R4)
	13	[8062]	CALL     	R1 0 1 ; R1(R2,...)
	14	[8064]	RETURN   	R0 1 ; return 

function #189 <?:8066,8070> (14 instructions, 56 bytes at 000002112CC394B0)
1 param, 5 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[8067]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[8067]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[8067]	GETTABLE 	R2 R2 K1 ; R2 := R2["SelectorList"]
	4	[8067]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[8067]	TEST     	R1 1 ; if R1 then PC := 14
	6	[8067]	JMP      	14 ; PC := 14
	7	[8068]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[8068]	GETTABLE 	R1 R1 K1 ; R1 := R1["SelectorList"]
	9	[8068]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xdf42446e]
	10	[8068]	GETGLOBAL	R3 K3 ; R3 := 0x03f57322
	11	[8068]	MOVE     	R4 R0 ; R4 := R0
	12	[8068]	CALL     	R3 2 0 ; R3,... := R3(R4)
	13	[8068]	CALL     	R1 0 1 ; R1(R2,...)
	14	[8070]	RETURN   	R0 1 ; return 

function #190 <?:8072,8076> (14 instructions, 56 bytes at 000002112CBED3C0)
1 param, 5 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[8073]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[8073]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[8073]	GETTABLE 	R2 R2 K1 ; R2 := R2["SelectorList"]
	4	[8073]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[8073]	TEST     	R1 1 ; if R1 then PC := 14
	6	[8073]	JMP      	14 ; PC := 14
	7	[8074]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[8074]	GETTABLE 	R1 R1 K1 ; R1 := R1["SelectorList"]
	9	[8074]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xbce5a201]
	10	[8074]	GETGLOBAL	R3 K3 ; R3 := 0x03f57322
	11	[8074]	MOVE     	R4 R0 ; R4 := R0
	12	[8074]	CALL     	R3 2 0 ; R3,... := R3(R4)
	13	[8074]	CALL     	R1 0 1 ; R1(R2,...)
	14	[8076]	RETURN   	R0 1 ; return 

function #191 <?:8078,8082> (14 instructions, 56 bytes at 000002112CBED540)
1 param, 5 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[8079]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[8079]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[8079]	GETTABLE 	R2 R2 K1 ; R2 := R2["SelectorList"]
	4	[8079]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[8079]	TEST     	R1 1 ; if R1 then PC := 14
	6	[8079]	JMP      	14 ; PC := 14
	7	[8080]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[8080]	GETTABLE 	R1 R1 K1 ; R1 := R1["SelectorList"]
	9	[8080]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0x070daa5a]
	10	[8080]	GETGLOBAL	R3 K3 ; R3 := 0x03f57322
	11	[8080]	MOVE     	R4 R0 ; R4 := R0
	12	[8080]	CALL     	R3 2 0 ; R3,... := R3(R4)
	13	[8080]	CALL     	R1 0 1 ; R1(R2,...)
	14	[8082]	RETURN   	R0 1 ; return 

function #192 <?:8084,8087> (15 instructions, 60 bytes at 000002112CBED6C0)
0 params, 5 slots, 3 upvalues, 0 locals, 4 constants, 1 function
	1	[8085]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[8085]	SELF     	R0 R0 K0 ; R1 := R0; R0 := R0[0x775c858b]
	3	[8085]	GETUPVAL 	R2 U1 ; R2 := U1
	4	[8085]	GETTABLE 	R2 R2 K1 ; R2 := R2["ExpansionTimerId"]
	5	[8085]	CALL     	R0 3 1 ; R0(R1,R2)
	6	[8086]	GETUPVAL 	R0 U1 ; R0 := U1
	7	[8086]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[8086]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xbd2e96ea]
	9	[8086]	LOADK    	R3 K3 ; R3 := 0.100000
	10	[8086]	CLOSURE  	R4 0 ; R4 := closure(Function #1)
	11	[8086]	GETUPVAL 	R0 U2 ; R0 := U2
	12	[8086]	GETUPVAL 	R0 U1 ; R0 := U1
	13	[8086]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	14	[8086]	SETTABLE 	R0 K1 R1 ; R0["ExpansionTimerId"] := R1
	15	[8087]	RETURN   	R0 1 ; return 

function #193 <?:8089,8092> (15 instructions, 60 bytes at 000002112CBED980)
0 params, 5 slots, 3 upvalues, 0 locals, 4 constants, 1 function
	1	[8090]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[8090]	SELF     	R0 R0 K0 ; R1 := R0; R0 := R0[0x775c858b]
	3	[8090]	GETUPVAL 	R2 U1 ; R2 := U1
	4	[8090]	GETTABLE 	R2 R2 K1 ; R2 := R2["ExpansionTimerId"]
	5	[8090]	CALL     	R0 3 1 ; R0(R1,R2)
	6	[8091]	GETUPVAL 	R0 U1 ; R0 := U1
	7	[8091]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[8091]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xbd2e96ea]
	9	[8091]	LOADK    	R3 K3 ; R3 := 0.100000
	10	[8091]	CLOSURE  	R4 0 ; R4 := closure(Function #1)
	11	[8091]	GETUPVAL 	R0 U2 ; R0 := U2
	12	[8091]	GETUPVAL 	R0 U1 ; R0 := U1
	13	[8091]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	14	[8091]	SETTABLE 	R0 K1 R1 ; R0["ExpansionTimerId"] := R1
	15	[8092]	RETURN   	R0 1 ; return 

function #194 <?:8094,8100> (13 instructions, 52 bytes at 000002112CBEDC40)
0 params, 3 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[8095]	GETGLOBAL	R0 K0 ; R0 := mInfoTip
	2	[8095]	GETTABLE 	R0 R0 K1 ; R0 := R0["NodeSelectionOpen"]
	3	[8095]	TEST     	R0 0 ; if not R0 then PC := 13
	4	[8095]	JMP      	13 ; PC := 13
	5	[8096]	GETGLOBAL	R0 K0 ; R0 := mInfoTip
	6	[8096]	GETTABLE 	R0 R0 K2 ; R0 := R0["NodeMissionList"]
	7	[8096]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x368ad758]
	8	[8096]	OP_LOADBOOL	R2 0 0 ; R2 := false
	9	[8096]	CALL     	R0 3 1 ; R0(R1,R2)
	10	[8097]	GETUPVAL 	R0 U0 ; R0 := U0
	11	[8097]	CALL     	R0 1 1 ; R0()
	12	[8098]	RETURN   	R0 1 ; return 
	13	[8100]	RETURN   	R0 1 ; return 

function #195 <?:8102,8107> (9 instructions, 36 bytes at 000002112CBEDDC0)
0 params, 2 slots, 4 upvalues, 0 locals, 0 constants, 0 functions
	1	[8103]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[8103]	CALL     	R0 1 1 ; R0()
	3	[8104]	GETUPVAL 	R0 U1 ; R0 := U1
	4	[8104]	CALL     	R0 1 1 ; R0()
	5	[8105]	GETUPVAL 	R0 U2 ; R0 := U2
	6	[8105]	CALL     	R0 1 1 ; R0()
	7	[8106]	GETUPVAL 	R0 U3 ; R0 := U3
	8	[8106]	CALL     	R0 1 1 ; R0()
	9	[8107]	RETURN   	R0 1 ; return 

main <?:0,0> (1567 instructions, 6268 bytes at 0000021121AF2B30)
0+ params, 178 slots, 0 upvalues, 0 locals, 381 constants, 195 functions
	1	[120]	SETGLOBALHASH	R0 K0 ; mAnchorMgr := R0
	2	[122]	LOADNIL  	R0 R0 ; R0 := nil
	3	[122]	SETGLOBALHASH	R0 K1 ; mRadialSolarMap := R0
	4	[123]	LOADNIL  	R0 R0 ; R0 := nil
	5	[123]	SETGLOBALHASH	R0 K2 ; mRegions := R0
	6	[124]	NEWTABLE 	R0 0 0 ; R0 := {}
	7	[124]	SETGLOBALHASH	R0 K3 ; mRegionInstances := R0
	8	[125]	NEWTABLE 	R0 0 0 ; R0 := {}
	9	[125]	SETGLOBALHASH	R0 K4 ; mRegionLabels := R0
	10	[126]	LOADNIL  	R0 R0 ; R0 := nil
	11	[126]	SETGLOBALHASH	R0 K5 ; mMapNodes := R0
	12	[127]	LOADNIL  	R0 R0 ; R0 := nil
	13	[127]	SETGLOBALHASH	R0 K6 ; mMapEdges := R0
	14	[128]	LOADNIL  	R0 R0 ; R0 := nil
	15	[128]	SETGLOBALHASH	R0 K7 ; mSuperRegions := R0
	16	[129]	NEWTABLE 	R0 0 0 ; R0 := {}
	17	[129]	SETGLOBALHASH	R0 K8 ; mSuperPoly := R0
	18	[130]	GETGLOBAL	R0 K10 ; R0 := 0xb009bbc6
	19	[130]	LOADK    	R1 K11 ; R1 := "/Lotus/Types/Lore/PrimaryCodexManifest"
	20	[130]	CALL     	R0 2 2 ; R0 := R0(R1)
	21	[130]	SETGLOBALHASH	R0 K9 ; mCodexManifest := R0
	22	[131]	NEWTABLE 	R0 0 7 ; R0 := {}
	23	[132]	GETGLOBAL	R1 K13 ; R1 := 0x7ed0a956
	24	[132]	LOADK    	R2 K14 ; R2 := "/Lotus/Types/Keys/VeyHekKey"
	25	[132]	CALL     	R1 2 2 ; R1 := R1(R2)
	26	[132]	SETTABLE 	R0 K12 R1 ; R0[0x60130201] := R1
	27	[133]	GETGLOBAL	R1 K13 ; R1 := 0x7ed0a956
	28	[133]	LOADK    	R2 K16 ; R2 := "/Lotus/Types/Keys/VorsPrize/VorsPrizeQuestKeyChain"
	29	[133]	CALL     	R1 2 2 ; R1 := R1(R2)
	30	[133]	SETTABLE 	R0 K15 R1 ; R0["vorsPrizeQuestKey"] := R1
	31	[134]	GETGLOBAL	R1 K13 ; R1 := 0x7ed0a956
	32	[134]	LOADK    	R2 K18 ; R2 := "/Lotus/Types/Keys/SolarisQuest/SolarisQuestKeyChain"
	33	[134]	CALL     	R1 2 2 ; R1 := R1(R2)
	34	[134]	SETTABLE 	R0 K17 R1 ; R0["solarisIntroQuest"] := R1
	35	[135]	NEWTABLE 	R1 0 2 ; R1 := {}
	36	[135]	GETGLOBAL	R2 K13 ; R2 := 0x7ed0a956
	37	[135]	LOADK    	R3 K21 ; R3 := "/Lotus/Types/Keys/InfestedMicroplanetQuest/InfestedMicroplanetQuestKeyChain"
	38	[135]	CALL     	R2 2 2 ; R2 := R2(R3)
	39	[135]	SETTABLE 	R1 K20 R2 ; R1["quest"] := R2
	40	[135]	GETGLOBAL	R2 K13 ; R2 := 0x7ed0a956
	41	[135]	LOADK    	R3 K23 ; R3 := "/Lotus/Levels/Proc/Infestation/InfestedMicroplanetLandscapeQuest"
	42	[135]	CALL     	R2 2 2 ; R2 := R2(R3)
	43	[135]	SETTABLE 	R1 K22 R2 ; R1["level"] := R2
	44	[135]	SETTABLE 	R0 K19 R1 ; R0["deimosIntroQuestInfo"] := R1
	45	[136]	GETGLOBAL	R1 K13 ; R1 := 0x7ed0a956
	46	[136]	LOADK    	R2 K25 ; R2 := "/Lotus/Types/Keys/MirageQuest/MirageQuestKeyChain"
	47	[136]	CALL     	R1 2 2 ; R1 := R1(R2)
	48	[136]	SETTABLE 	R0 K24 R1 ; R0["mirageQuestKey"] := R1
	49	[137]	GETGLOBAL	R1 K13 ; R1 := 0x7ed0a956
	50	[137]	LOADK    	R2 K27 ; R2 := "/Lotus/Types/Keys/RaidKeys/BaseRaidKey"
	51	[137]	CALL     	R1 2 2 ; R1 := R1(R2)
	52	[137]	SETTABLE 	R0 K26 R1 ; R0["baseRaidKeyType"] := R1
	53	[138]	GETGLOBAL	R1 K13 ; R1 := 0x7ed0a956
	54	[138]	LOADK    	R2 K29 ; R2 := "/Lotus/Types/Keys/ZarimanQuest/ZarimanQuestKeyChain"
	55	[138]	CALL     	R1 2 2 ; R1 := R1(R2)
	56	[138]	SETTABLE 	R0 K28 R1 ; R0["zarimanIntroQuest"] := R1
	57	[140]	GETGLOBAL	R1 K13 ; R1 := 0x7ed0a956
	58	[140]	LOADK    	R2 K30 ; R2 := "/Lotus/Levels/Proc/Hub/RelayStationHubMain"
	59	[140]	CALL     	R1 2 2 ; R1 := R1(R2)
	60	[142]	NEWTABLE 	R2 0 9 ; R2 := {}
	61	[142]	SETTABLE 	R2 K31 K32 ; R2["forceUpdate3dElements"] := false
	62	[142]	NEWTABLE 	R3 0 0 ; R3 := {}
	63	[142]	SETTABLE 	R2 K33 R3 ; R2["sky"] := R3
	64	[142]	SETTABLE 	R2 K34 K35 ; R2["cameraSpot"] := nil
	65	[142]	GETGLOBAL	R3 K37 ; R3 := 0xa421af95
	66	[142]	CALL     	R3 1 2 ; R3 := R3()
	67	[142]	SETTABLE 	R2 K36 R3 ; R2["pos"] := R3
	68	[142]	GETGLOBAL	R3 K37 ; R3 := 0xa421af95
	69	[142]	CALL     	R3 1 2 ; R3 := R3()
	70	[142]	SETTABLE 	R2 K38 R3 ; R2["oldPos"] := R3
	71	[142]	GETGLOBAL	R3 K37 ; R3 := 0xa421af95
	72	[142]	CALL     	R3 1 2 ; R3 := R3()
	73	[142]	SETTABLE 	R2 K39 R3 ; R2["originPos"] := R3
	74	[142]	GETGLOBAL	R3 K37 ; R3 := 0xa421af95
	75	[142]	CALL     	R3 1 2 ; R3 := R3()
	76	[142]	SETTABLE 	R2 K40 R3 ; R2["origFacing"] := R3
	77	[142]	GETGLOBAL	R3 K37 ; R3 := 0xa421af95
	78	[142]	CALL     	R3 1 2 ; R3 := R3()
	79	[142]	SETTABLE 	R2 K41 R3 ; R2["skyOrigin"] := R3
	80	[142]	SETTABLE 	R2 K42 K43 ; R2["zoomLevel"] := 0.000000
	81	[143]	NEWTABLE 	R3 0 4 ; R3 := {}
	82	[143]	SETTABLE 	R3 K44 K35 ; R3["Movie"] := nil
	83	[143]	SETTABLE 	R3 K45 K32 ; R3["Open"] := false
	84	[143]	SETTABLE 	R3 K46 K32 ; R3["DioOpen"] := false
	85	[143]	SETTABLE 	R3 K47 K35 ; R3["mBossInfo"] := nil
	86	[145]	NEWTABLE 	R4 0 8 ; R4 := {}
	87	[145]	SETTABLE 	R4 K48 K35 ; R4["EpisodeStatus"] := nil
	88	[145]	SETTABLE 	R4 K49 K35 ; R4["ResourceDrone"] := nil
	89	[145]	SETTABLE 	R4 K50 K35 ; R4["Invasion"] := nil
	90	[145]	SETTABLE 	R4 K51 K35 ; R4["VoidProjection"] := nil
	91	[145]	SETTABLE 	R4 K52 K35 ; R4["Nightmare"] := nil
	92	[145]	SETTABLE 	R4 K53 K35 ; R4["SoloMission"] := nil
	93	[145]	SETTABLE 	R4 K54 K35 ; R4["JunctionTasks"] := nil
	94	[145]	SETTABLE 	R4 K55 K35 ; R4["MultiMissionSelector"] := nil
	95	[147]	OP_LOADBOOL	R5 0 0 ; R5 := false
	96	[149]	NEWTABLE 	R6 0 0 ; R6 := {}
	97	[150]	NEWTABLE 	R7 0 0 ; R7 := {}
	98	[151]	NEWTABLE 	R8 0 0 ; R8 := {}
	99	[152]	NEWTABLE 	R9 0 0 ; R9 := {}
	100	[153]	GETGLOBAL	R10 K56 ; R10 := EMPTY_SYMBOL
	101	[155]	NEWTABLE 	R11 0 0 ; R11 := {}
	102	[156]	NEWTABLE 	R12 0 0 ; R12 := {}
	103	[157]	NEWTABLE 	R13 0 0 ; R13 := {}
	104	[159]	NEWTABLE 	R14 0 4 ; R14 := {}
	105	[159]	SETTABLE 	R14 K58 K59 ; R14["STARTING_ZOOM"] := -8.000000
	106	[159]	SETTABLE 	R14 K60 K61 ; R14["MAX_ZOOM"] := 4.500000
	107	[159]	SETTABLE 	R14 K62 K63 ; R14["MIN_ZOOM"] := -15.000000
	108	[159]	SETTABLE 	R14 K64 K59 ; R14["ZOOM_OUT_THRESHOLD"] := -8.000000
	109	[159]	SETGLOBALHASH	R14 K57 ; Zoom := R14
	110	[160]	OP_LOADBOOL	R14 0 0 ; R14 := false
	111	[160]	SETGLOBALHASH	R14 K65 ; mInputBlocked := R14
	112	[161]	LOADNIL  	R14 R14 ; R14 := nil
	113	[161]	SETGLOBALHASH	R14 K66 ; mMapLoader := R14
	114	[162]	LOADNIL  	R14 R14 ; R14 := nil
	115	[162]	SETGLOBALHASH	R14 K67 ; mResLoader := R14
	116	[163]	LOADNIL  	R14 R14 ; R14 := nil
	117	[163]	SETGLOBALHASH	R14 K68 ; mDrag := R14
	118	[164]	GETGLOBAL	R14 K70 ; R14 := 0x78ca68a2
	119	[164]	LOADK    	R15 := 0.500000
	120	[164]	LOADK    	R16 K71 ; R16 := 0.150000
	121	[164]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	122	[164]	SETGLOBALHASH	R14 K69 ; mSmoothX := R14
	123	[165]	GETGLOBAL	R14 K70 ; R14 := 0x78ca68a2
	124	[165]	LOADK    	R15 := 0.500000
	125	[165]	LOADK    	R16 K71 ; R16 := 0.150000
	126	[165]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	127	[165]	SETGLOBALHASH	R14 K72 ; mSmoothY := R14
	128	[166]	GETGLOBAL	R14 K70 ; R14 := 0x78ca68a2
	129	[166]	GETGLOBAL	R15 K57 ; R15 := Zoom
	130	[166]	GETTABLE 	R15 R15 K58 ; R15 := R15["STARTING_ZOOM"]
	131	[166]	LOADK    	R16 K71 ; R16 := 0.150000
	132	[166]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	133	[166]	SETGLOBALHASH	R14 K73 ; mSmoothZoom := R14
	134	[167]	LOADNIL  	R14 R15 ; R14 := R15 := nil
	135	[168]	SETGLOBALHASH	R15 K74 ; mPreviousZoom := R15
	136	[169]	NEWTABLE 	R15 0 0 ; R15 := {}
	137	[169]	SETGLOBALHASH	R15 K75 ; mPreviousDrag := R15
	138	[170]	NEWTABLE 	R15 0 2 ; R15 := {}
	139	[170]	SETTABLE 	R15 K77 K78 ; R15["Alpha"] := 1.000000
	140	[170]	SETTABLE 	R15 K79 K35 ; R15["Node"] := nil
	141	[170]	SETGLOBALHASH	R15 K76 ; mPreviousNodeDuck := R15
	142	[171]	NEWTABLE 	R15 0 2 ; R15 := {}
	143	[171]	SETTABLE 	R15 K77 K78 ; R15["Alpha"] := 1.000000
	144	[171]	SETTABLE 	R15 K81 K35 ; R15["Region"] := nil
	145	[171]	SETGLOBALHASH	R15 K80 ; mPreviousRegionDuck := R15
	146	[173]	LOADNIL  	R15 R15 ; R15 := nil
	147	[173]	SETGLOBALHASH	R15 K82 ; mZoomedRegion := R15
	148	[174]	LOADNIL  	R15 R15 ; R15 := nil
	149	[174]	SETGLOBALHASH	R15 K83 ; mZoomedSuper := R15
	150	[175]	NEWTABLE 	R15 0 7 ; R15 := {}
	151	[175]	SETTABLE 	R15 K85 K32 ; R15["InSelectClick"] := false
	152	[175]	SETTABLE 	R15 K81 K35 ; R15["Region"] := nil
	153	[175]	SETTABLE 	R15 K86 K35 ; R15["RegionLabel"] := nil
	154	[175]	SETTABLE 	R15 K79 K35 ; R15["Node"] := nil
	155	[175]	SETTABLE 	R15 K87 K35 ; R15["UpdateTimer"] := nil
	156	[175]	SETTABLE 	R15 K88 K35 ; R15["NodeTime"] := nil
	157	[175]	SETTABLE 	R15 K89 K35 ; R15["mPrevHoverNode"] := nil
	158	[175]	SETGLOBALHASH	R15 K84 ; mHover := R15
	159	[176]	LOADNIL  	R15 R15 ; R15 := nil
	160	[176]	SETGLOBALHASH	R15 K90 ; mPriorHoverNode := R15
	161	[177]	LOADK    	R15 := 12.000000
	162	[177]	SETGLOBALHASH	R15 K91 ; dragScale := R15
	163	[178]	NEWTABLE 	R15 0 2 ; R15 := {}
	164	[178]	SETTABLE 	R15 K93 K43 ; R15["NodeLayerAlpha"] := 0.000000
	165	[178]	SETTABLE 	R15 K94 K95 ; R15["MinNodeAlphaToClick"] := 50.000000
	166	[178]	SETGLOBALHASH	R15 K92 ; mNodeAlphaValues := R15
	167	[179]	LOADNIL  	R15 R15 ; R15 := nil
	168	[179]	SETGLOBALHASH	R15 K96 ; mMissionInfo := R15
	169	[180]	NEWTABLE 	R15 0 2 ; R15 := {}
	170	[180]	SETTABLE 	R15 K79 K35 ; R15["Node"] := nil
	171	[180]	SETTABLE 	R15 K98 K35 ; R15["SectorName"] := nil
	172	[180]	SETGLOBALHASH	R15 K97 ; mCachedSoloMission := R15
	173	[181]	LOADNIL  	R15 R15 ; R15 := nil
	174	[182]	NEWTABLE 	R16 0 5 ; R16 := {}
	175	[182]	SETTABLE 	R16 K100 K35 ; R16["CountdownFx"] := nil
	176	[182]	NEWTABLE 	R17 0 0 ; R17 := {}
	177	[182]	SETTABLE 	R16 K101 R17 ; R16["PendingFx"] := R17
	178	[182]	NEWTABLE 	R17 0 0 ; R17 := {}
	179	[182]	SETTABLE 	R16 K102 R17 ; R16["QuestFx"] := R17
	180	[182]	NEWTABLE 	R17 0 0 ; R17 := {}
	181	[182]	SETTABLE 	R16 K103 R17 ; R16["SentientFx"] := R17
	182	[182]	NEWTABLE 	R17 0 0 ; R17 := {}
	183	[182]	SETTABLE 	R16 K104 R17 ; R16["InvasionFx"] := R17
	184	[182]	SETGLOBALHASH	R16 K99 ; mParticles := R16
	185	[183]	NEWTABLE 	R16 0 2 ; R16 := {}
	186	[183]	SETTABLE 	R16 K98 K106 ; R16["SectorName"] := ""
	187	[183]	SETTABLE 	R16 K107 K106 ; R16["MissionTier"] := ""
	188	[183]	SETGLOBALHASH	R16 K105 ; mVoidTear := R16
	189	[184]	NEWTABLE 	R16 0 3 ; R16 := {}
	190	[184]	SETTABLE 	R16 K98 K106 ; R16["SectorName"] := ""
	191	[184]	SETTABLE 	R16 K109 K43 ; R16["Difficulty"] := 0.000000
	192	[184]	SETTABLE 	R16 K110 K35 ; R16["MovieInst"] := nil
	193	[184]	SETGLOBALHASH	R16 K108 ; mWagerMission := R16
	194	[185]	LOADNIL  	R16 R16 ; R16 := nil
	195	[185]	SETGLOBALHASH	R16 K111 ; mStichStart := R16
	196	[186]	NEWTABLE 	R16 0 0 ; R16 := {}
	197	[186]	SETGLOBALHASH	R16 K112 ; mInfoTip := R16
	198	[187]	NEWTABLE 	R16 0 0 ; R16 := {}
	199	[187]	SETGLOBALHASH	R16 K113 ; mRegionRadius := R16
	200	[188]	NEWTABLE 	R16 0 0 ; R16 := {}
	201	[188]	SETGLOBALHASH	R16 K114 ; mRegionRings := R16
	202	[190]	NEWTABLE 	R16 0 8 ; R16 := {}
	203	[191]	NEWTABLE 	R17 0 0 ; R17 := {}
	204	[191]	SETTABLE 	R16 K115 R17 ; R16["Settings"] := R17
	205	[192]	SETTABLE 	R16 K116 K78 ; R16["CurrentIndex"] := 1.000000
	206	[193]	SETTABLE 	R16 K117 K43 ; R16["CurrentTier"] := 0.000000
	207	[194]	SETTABLE 	R16 K118 K35 ; R16["SelectorList"] := nil
	208	[195]	SETTABLE 	R16 K119 K43 ; R16["InitY"] := 0.000000
	209	[196]	SETTABLE 	R16 K120 K35 ; R16["ExpansionTimerId"] := nil
	210	[197]	SETTABLE 	R16 K121 K32 ; R16["Expanded"] := false
	211	[198]	SETTABLE 	R16 K122 K32 ; R16["EnableDifficultySelector"] := false
	212	[201]	NEWTABLE 	R17 0 0 ; R17 := {}
	213	[201]	SETGLOBALHASH	R17 K123 ; mFlatEdges := R17
	214	[202]	NEWTABLE 	R17 0 0 ; R17 := {}
	215	[202]	SETGLOBALHASH	R17 K124 ; mMovingEdgeIndices := R17
	216	[203]	OP_LOADBOOL	R17 0 0 ; R17 := false
	217	[203]	SETGLOBALHASH	R17 K125 ; mDebugUnlockAllMissions := R17
	218	[204]	OP_LOADBOOL	R17 0 0 ; R17 := false
	219	[204]	SETGLOBALHASH	R17 K126 ; mInvitePopupShowing := R17
	220	[205]	OP_LOADBOOL	R17 0 0 ; R17 := false
	221	[205]	SETGLOBALHASH	R17 K127 ; mNewWarMode := R17
	222	[206]	OP_LOADBOOL	R17 0 0 ; R17 := false
	223	[206]	SETGLOBALHASH	R17 K128 ; mConfirmSoloMissionQueued := R17
	224	[207]	NEWTABLE 	R17 0 4 ; R17 := {}
	225	[207]	SETTABLE 	R17 K130 K106 ; R17["sectorName"] := ""
	226	[207]	SETTABLE 	R17 K131 K106 ; R17["sectorLoc"] := ""
	227	[207]	SETTABLE 	R17 K132 K133 ; R17["mBusyPlayerLoad"] := 0.700000
	228	[207]	SETTABLE 	R17 K134 K135 ; R17["mAutoJoinIfNotBusy"] := true
	229	[207]	SETGLOBALHASH	R17 K129 ; mPendingHubInstances := R17
	230	[208]	OP_LOADBOOL	R17 1 0 ; R17 := true
	231	[208]	SETGLOBALHASH	R17 K136 ; mVisibleTags := R17
	232	[209]	NEWTABLE 	R17 0 0 ; R17 := {}
	233	[209]	SETGLOBALHASH	R17 K137 ; mShip := R17
	234	[210]	NEWTABLE 	R17 0 2 ; R17 := {}
	235	[210]	SETTABLE 	R17 K79 K35 ; R17["Node"] := nil
	236	[210]	SETTABLE 	R17 K139 K140 ; R17["Timer"] := -1.000000
	237	[210]	SETGLOBALHASH	R17 K138 ; mCountDown := R17
	238	[211]	NEWTABLE 	R17 0 3 ; R17 := {}
	239	[211]	SETTABLE 	R17 K142 K35 ; R17["Previous"] := nil
	240	[211]	SETTABLE 	R17 K143 K35 ; R17["Target"] := nil
	241	[211]	GETGLOBAL	R18 K70 ; R18 := 0x78ca68a2
	242	[211]	LOADK    	R19 := 1.000000
	243	[211]	LOADK    	R20 K145 ; R20 := 0.200000
	244	[211]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	245	[211]	SETTABLE 	R17 K144 R18 ; R17["Prop"] := R18
	246	[211]	SETGLOBALHASH	R17 K141 ; mPlayerPos := R17
	247	[212]	NEWTABLE 	R17 0 0 ; R17 := {}
	248	[212]	SETGLOBALHASH	R17 K146 ; mVoidTrader := R17
	249	[213]	GETGLOBAL	R17 K70 ; R17 := 0x78ca68a2
	250	[213]	LOADK    	R18 := 1.000000
	251	[213]	LOADK    	R19 K148 ; R19 := 0.175000
	252	[213]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	253	[213]	SETGLOBALHASH	R17 K147 ; mNodeDuck := R17
	254	[214]	GETGLOBAL	R17 K70 ; R17 := 0x78ca68a2
	255	[214]	LOADK    	R18 := 0.000000
	256	[214]	LOADK    	R19 K148 ; R19 := 0.175000
	257	[214]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	258	[214]	SETGLOBALHASH	R17 K149 ; mRegionConnectionsDuck := R17
	259	[215]	NEWTABLE 	R17 0 4 ; R17 := {}
	260	[215]	SETTABLE 	R17 K151 K152 ; R17["NotificationTime"] := 10.000000
	261	[215]	NEWTABLE 	R18 0 0 ; R18 := {}
	262	[215]	SETTABLE 	R17 K153 R18 ; R17["Pending"] := R18
	263	[215]	NEWTABLE 	R18 0 0 ; R18 := {}
	264	[215]	SETTABLE 	R17 K154 R18 ; R17["Quest"] := R18
	265	[215]	NEWTABLE 	R18 0 0 ; R18 := {}
	266	[215]	SETTABLE 	R17 K50 R18 ; R17["Invasion"] := R18
	267	[215]	SETGLOBALHASH	R17 K150 ; mFxNodes := R17
	268	[216]	LOADNIL  	R17 R17 ; R17 := nil
	269	[216]	SETGLOBALHASH	R17 K155 ; mConstructionProjectNodes := R17
	270	[217]	LOADK    	R17 K106 ; R17 := ""
	271	[217]	SETGLOBALHASH	R17 K156 ; mLockIcon := R17
	272	[218]	OP_LOADBOOL	R17 0 0 ; R17 := false
	273	[218]	SETGLOBALHASH	R17 K157 ; mAggregationInProgress := R17
	274	[219]	LOADNIL  	R17 R17 ; R17 := nil
	275	[219]	SETGLOBALHASH	R17 K158 ; mVorsPrizeQuestActiveNode := R17
	276	[220]	LOADNIL  	R17 R17 ; R17 := nil
	277	[221]	NEWTABLE 	R18 0 6 ; R18 := {}
	278	[221]	SETTABLE 	R18 K160 K32 ; R18["Active"] := false
	279	[221]	SETTABLE 	R18 K161 K35 ; R18["SelectionNode"] := nil
	280	[221]	SETTABLE 	R18 K162 K35 ; R18["Button"] := nil
	281	[221]	NEWTABLE 	R19 0 0 ; R19 := {}
	282	[221]	SETTABLE 	R18 K163 R19 ; R18["Regions"] := R19
	283	[221]	SETTABLE 	R18 K164 K32 ; R18["CanHost"] := false
	284	[221]	SETTABLE 	R18 K165 K32 ; R18["NameNodeMapRebuildQueued"] := false
	285	[221]	SETGLOBALHASH	R18 K159 ; mRailJack := R18
	286	[222]	NEWTABLE 	R18 0 0 ; R18 := {}
	287	[222]	SETGLOBALHASH	R18 K166 ; mColors := R18
	288	[224]	NEWTABLE 	R18 0 23 ; R18 := {}
	289	[225]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	290	[225]	CALL     	R19 1 2 ; R19 := R19()
	291	[225]	SETTABLE 	R18 K167 R19 ; R18["EMPTY"] := R19
	292	[227]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	293	[227]	LOADK    	R20 K170 ; R20 := "AlphaAtten"
	294	[227]	CALL     	R19 2 2 ; R19 := R19(R20)
	295	[227]	SETTABLE 	R18 K169 R19 ; R18["ALPHA_ATTEN"] := R19
	296	[228]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	297	[228]	LOADK    	R20 K172 ; R20 := "DESTROYED"
	298	[228]	CALL     	R19 2 2 ; R19 := R19(R20)
	299	[228]	SETTABLE 	R18 K171 R19 ; R18["DESTROYED_NODE_TAG"] := R19
	300	[229]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	301	[229]	LOADK    	R20 K174 ; R20 := "RECONSTRUCTION"
	302	[229]	CALL     	R19 2 2 ; R19 := R19(R20)
	303	[229]	SETTABLE 	R18 K173 R19 ; R18["RECONSTRUCTION_NODE_TAG"] := R19
	304	[230]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	305	[230]	LOADK    	R20 K176 ; R20 := "UnderConstruction"
	306	[230]	CALL     	R19 2 2 ; R19 := R19(R20)
	307	[230]	SETTABLE 	R18 K175 R19 ; R18["UNDER_CONSTRUCTION_NODE_TAG"] := R19
	308	[231]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	309	[231]	LOADK    	R20 K178 ; R20 := "EarthToMoonShortcut"
	310	[231]	CALL     	R19 2 2 ; R19 := R19(R20)
	311	[231]	SETTABLE 	R18 K177 R19 ; R18["MOON_SHORTCUT_TAG"] := R19
	312	[232]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	313	[232]	LOADK    	R20 K180 ; R20 := "SentientShip"
	314	[232]	CALL     	R19 2 2 ; R19 := R19(R20)
	315	[232]	SETTABLE 	R18 K179 R19 ; R18["SENTIENT_SHIP_TAG"] := R19
	316	[233]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	317	[233]	LOADK    	R20 K182 ; R20 := "UnlitAtten"
	318	[233]	CALL     	R19 2 2 ; R19 := R19(R20)
	319	[233]	SETTABLE 	R18 K181 R19 ; R18["UNLIT_ATTEN"] := R19
	320	[235]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	321	[235]	LOADK    	R20 K184 ; R20 := "StarChartRoot"
	322	[235]	CALL     	R19 2 2 ; R19 := R19(R20)
	323	[235]	SETTABLE 	R18 K183 R19 ; R18["STAR_CHART_ROOT"] := R19
	324	[236]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	325	[236]	LOADK    	R20 K186 ; R20 := "Player"
	326	[236]	CALL     	R19 2 2 ; R19 := R19(R20)
	327	[236]	SETTABLE 	R18 K185 R19 ; R18["PLAYER"] := R19
	328	[237]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	329	[237]	LOADK    	R20 K188 ; R20 := "PlayerOperator"
	330	[237]	CALL     	R19 2 2 ; R19 := R19(R20)
	331	[237]	SETTABLE 	R18 K187 R19 ; R18["PLAYER_OPERATOR"] := R19
	332	[238]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	333	[238]	LOADK    	R20 K190 ; R20 := "PlayerLight"
	334	[238]	CALL     	R19 2 2 ; R19 := R19(R20)
	335	[238]	SETTABLE 	R18 K189 R19 ; R18["PLAYER_LIGHT"] := R19
	336	[239]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	337	[239]	LOADK    	R20 K192 ; R20 := "SkyCube"
	338	[239]	CALL     	R19 2 2 ; R19 := R19(R20)
	339	[239]	SETTABLE 	R18 K191 R19 ; R18["SKY_CUBE"] := R19
	340	[240]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	341	[240]	LOADK    	R20 K194 ; R20 := "VoidT2"
	342	[240]	CALL     	R19 2 2 ; R19 := R19(R20)
	343	[240]	SETTABLE 	R18 K193 R19 ; R18["VOIDT2"] := R19
	344	[241]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	345	[241]	LOADK    	R20 K196 ; R20 := "VoidT3"
	346	[241]	CALL     	R19 2 2 ; R19 := R19(R20)
	347	[241]	SETTABLE 	R18 K195 R19 ; R18["VOIDT3"] := R19
	348	[242]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	349	[242]	LOADK    	R20 K198 ; R20 := "VoidT4"
	350	[242]	CALL     	R19 2 2 ; R19 := R19(R20)
	351	[242]	SETTABLE 	R18 K197 R19 ; R18["VOIDT4"] := R19
	352	[243]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	353	[243]	LOADK    	R20 K200 ; R20 := "VoidT5"
	354	[243]	CALL     	R19 2 2 ; R19 := R19(R20)
	355	[243]	SETTABLE 	R18 K199 R19 ; R18["VOIDT5"] := R19
	356	[244]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	357	[244]	LOADK    	R20 K201 ; R20 := "GAME_C1_HEAD1"
	358	[244]	CALL     	R19 2 2 ; R19 := R19(R20)
	359	[244]	SETTABLE 	R18 K201 R19 ; R18["GAME_C1_HEAD1"] := R19
	360	[246]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	361	[246]	LOADK    	R20 K203 ; R20 := "MacheteMayhem"
	362	[246]	CALL     	R19 2 2 ; R19 := R19(R20)
	363	[246]	SETTABLE 	R18 K202 R19 ; R18["MACHETE_MAYHEM"] := R19
	364	[248]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	365	[248]	LOADK    	R20 K205 ; R20 := "TennoConRelay"
	366	[248]	CALL     	R19 2 2 ; R19 := R19(R20)
	367	[248]	SETTABLE 	R18 K204 R19 ; R18["TENNOCON_RELAY"] := R19
	368	[249]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	369	[249]	LOADK    	R20 K207 ; R20 := "TennoConRelayB"
	370	[249]	CALL     	R19 2 2 ; R19 := R19(R20)
	371	[249]	SETTABLE 	R18 K206 R19 ; R18["TENNOCON_RELAY_B"] := R19
	372	[250]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	373	[250]	LOADK    	R20 K209 ; R20 := "TennoConBHUB6"
	374	[250]	CALL     	R19 2 2 ; R19 := R19(R20)
	375	[250]	SETTABLE 	R18 K208 R19 ; R18["TENNOCON_RELAY_B_NODE"] := R19
	376	[252]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	377	[252]	LOADK    	R20 K211 ; R20 := "DevStreamRelay"
	378	[252]	CALL     	R19 2 2 ; R19 := R19(R20)
	379	[252]	SETTABLE 	R18 K210 R19 ; R18["DEVSTREAM_RELAY"] := R19
	380	[254]	NEWTABLE 	R19 0 0 ; R19 := {}
	381	[254]	SETTABLE 	R18 K212 R19 ; R18["INFLUENCE_MAP"] := R19
	382	[255]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	383	[255]	LOADK    	R20 K214 ; R20 := "SolNode973"
	384	[255]	CALL     	R19 2 2 ; R19 := R19(R20)
	385	[255]	SETTABLE 	R18 K213 R19 ; R18["FIGHT_NODE_TAG"] := R19
	386	[257]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	387	[257]	LOADK    	R20 K216 ; R20 := "SquadLinkEvent"
	388	[257]	CALL     	R19 2 2 ; R19 := R19(R20)
	389	[257]	SETTABLE 	R18 K215 R19 ; R18["SQUAD_LINK_EVENT"] := R19
	390	[259]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	391	[259]	LOADK    	R20 K218 ; R20 := "NemesisShowdown"
	392	[259]	CALL     	R19 2 2 ; R19 := R19(R20)
	393	[259]	SETTABLE 	R18 K217 R19 ; R18["NEMESIS_SHOWDOWN"] := R19
	394	[261]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	395	[261]	LOADK    	R20 K220 ; R20 := "PrimeVaultTrader"
	396	[261]	CALL     	R19 2 2 ; R19 := R19(R20)
	397	[261]	SETTABLE 	R18 K219 R19 ; R18["PRIME_VAULT_TRADER_GOAL"] := R19
	398	[262]	GETGLOBAL	R19 K168 ; R19 := 0x0469f296
	399	[262]	LOADK    	R20 K222 ; R20 := "TradeHUB1"
	400	[262]	CALL     	R19 2 2 ; R19 := R19(R20)
	401	[262]	SETTABLE 	R18 K221 R19 ; R18["PRIME_VAULT_TRADER_LOCATION"] := R19
	402	[265]	NEWTABLE 	R19 0 14 ; R19 := {}
	403	[266]	GETGLOBAL	R20 K224 ; R20 := 0xb7cbd06b
	404	[266]	LOADK    	R21 := 0.000000
	405	[266]	LOADK    	R22 := 8.000000
	406	[266]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	407	[266]	SETTABLE 	R19 K223 R20 ; R19["LINE_CULL_DISTANCE"] := R20
	408	[267]	GETGLOBAL	R20 K224 ; R20 := 0xb7cbd06b
	409	[267]	LOADK    	R21 := 0.000000
	410	[267]	LOADK    	R22 := 17.000000
	411	[267]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	412	[267]	SETTABLE 	R19 K225 R20 ; R19["SHORTCUT_CULL_DISTANCE"] := R20
	413	[269]	SETTABLE 	R19 K226 K227 ; R19["PLANET_UNIT_MULTIPLIER"] := 0.142600
	414	[271]	SETTABLE 	R19 K228 K229 ; R19["INACTIVE_NODE_ALPHA"] := 100.000000
	415	[272]	SETTABLE 	R19 K230 K229 ; R19["LABEL_ALPHA"] := 100.000000
	416	[274]	SETTABLE 	R19 K231 K232 ; R19["DECO_SCALE_MULTIPLIER"] := 2.000000
	417	[275]	GETGLOBAL	R20 K224 ; R20 := 0xb7cbd06b
	418	[275]	LOADK    	R21 := -2.000000
	419	[275]	LOADK    	R22 := -0.000000
	420	[275]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	421	[275]	SETTABLE 	R19 K233 R20 ; R19["LAYER_1_RANGE"] := R20
	422	[276]	GETGLOBAL	R20 K224 ; R20 := 0xb7cbd06b
	423	[276]	LOADK    	R21 := -2.000000
	424	[276]	LOADK    	R22 := 2.000000
	425	[276]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	426	[276]	SETTABLE 	R19 K234 R20 ; R19["LAYER_2_RANGE"] := R20
	427	[277]	GETGLOBAL	R20 K224 ; R20 := 0xb7cbd06b
	428	[277]	LOADK    	R21 := -12.000000
	429	[277]	LOADK    	R22 := -0.000000
	430	[277]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	431	[277]	SETTABLE 	R19 K235 R20 ; R19["SHORTCUT_RANGE"] := R20
	432	[278]	GETGLOBAL	R20 K224 ; R20 := 0xb7cbd06b
	433	[278]	LOADK    	R21 := -20.000000
	434	[278]	LOADK    	R22 := 0.000000
	435	[278]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	436	[278]	SETTABLE 	R19 K236 R20 ; R19["PLANET_VIS_RANGE"] := R20
	437	[280]	GETGLOBAL	R20 K37 ; R20 := 0xa421af95
	438	[280]	LOADK    	R21 := 0.000000
	439	[280]	LOADK    	R22 := 0.500000
	440	[280]	LOADK    	R23 := 0.000000
	441	[280]	CALL     	R20 4 2 ; R20 := R20(R21,R22,R23)
	442	[280]	SETTABLE 	R19 K237 R20 ; R19["CAMERA_OFFSET"] := R20
	443	[281]	GETGLOBAL	R20 K37 ; R20 := 0xa421af95
	444	[281]	LOADK    	R21 := 0.000000
	445	[281]	LOADK    	R22 := 0.000000
	446	[281]	LOADK    	R23 := 1.000000
	447	[281]	CALL     	R20 4 2 ; R20 := R20(R21,R22,R23)
	448	[281]	SETTABLE 	R19 K238 R20 ; R19["CAMERA_FOCUS_DIR"] := R20
	449	[283]	GETGLOBAL	R20 K240 ; R20 := 0x00046924
	450	[283]	LOADK    	R21 := 0.000000
	451	[283]	LOADK    	R22 := 90.000000
	452	[283]	LOADK    	R23 := 0.000000
	453	[283]	CALL     	R20 4 2 ; R20 := R20(R21,R22,R23)
	454	[283]	SETTABLE 	R19 K239 R20 ; R19["RING_ROTATION"] := R20
	455	[284]	SETTABLE 	R19 K241 K242 ; R19["MAX_SHADER_INFLUENCES"] := 32.000000
	456	[288]	LOADNIL  	R20 R21 ; R20 := R21 := nil
	457	[291]	NEWTABLE 	R22 0 3 ; R22 := {}
	458	[292]	SETTABLE 	R22 K243 K32 ; R22["mShiftDown"] := false
	459	[293]	SETTABLE 	R22 K244 K32 ; R22["mControlDown"] := false
	460	[294]	SETTABLE 	R22 K245 K32 ; R22["mAltDown"] := false
	461	[297]	OP_LOADBOOL	R23 0 0 ; R23 := false
	462	[299]	NEWTABLE 	R24 0 8 ; R24 := {}
	463	[299]	SETTABLE 	R24 K246 K78 ; R24["READ_ONLY"] := 1.000000
	464	[299]	SETTABLE 	R24 K247 K232 ; R24["EDIT_NODES"] := 2.000000
	465	[299]	SETTABLE 	R24 K248 K249 ; R24["EDIT_EDGES"] := 3.000000
	466	[299]	SETTABLE 	R24 K250 K251 ; R24["EDIT_NODE_DECOS"] := 4.000000
	467	[299]	SETTABLE 	R24 K252 K253 ; R24["EDIT_REGIONS"] := 5.000000
	468	[299]	SETTABLE 	R24 K254 K255 ; R24["EDIT_REGION_FRAMING"] := 6.000000
	469	[299]	LOADK    	R25 K256 ; R25 := "EDIT_SHORTCUT_CONTROL_POINTS"
	470	[299]	LOADK    	R26 := 7.000000
	471	[299]	SETTABLE 	R24 R25 R26 ; R24[R25] := R26
	472	[299]	LOADK    	R25 K257 ; R25 := "MAX_VALUE"
	473	[299]	LOADK    	R26 := 8.000000
	474	[299]	SETTABLE 	R24 R25 R26 ; R24[R25] := R26
	475	[300]	GETTABLE 	R25 R24 K246 ; R25 := R24["READ_ONLY"]
	476	[302]	LOADNIL  	R26 R26 ; R26 := nil
	477	[304]	GETGLOBAL	R27 K258 ; R27 := 0x2d0fad09
	478	[304]	LOADK    	R28 K259 ; R28 := "EE.Interface.Utilities"
	479	[304]	CALL     	R27 2 2 ; R27 := R27(R28)
	480	[305]	GETGLOBAL	R28 K258 ; R28 := 0x2d0fad09
	481	[305]	LOADK    	R29 K260 ; R29 := "Lotus.Interface.UIUtilities"
	482	[305]	CALL     	R28 2 2 ; R28 := R28(R29)
	483	[306]	GETGLOBAL	R29 K258 ; R29 := 0x2d0fad09
	484	[306]	LOADK    	R30 K261 ; R30 := "Lotus.Interface.LotusUtilities"
	485	[306]	CALL     	R29 2 2 ; R29 := R29(R30)
	486	[307]	GETGLOBAL	R30 K258 ; R30 := 0x2d0fad09
	487	[307]	LOADK    	R31 K262 ; R31 := "Lotus.Interface.Libs.DioramaLoader"
	488	[307]	CALL     	R30 2 2 ; R30 := R30(R31)
	489	[308]	GETGLOBAL	R31 K258 ; R31 := 0x2d0fad09
	490	[308]	LOADK    	R32 K263 ; R32 := "Lotus.Interface.LotusNetworkUtilities"
	491	[308]	CALL     	R31 2 2 ; R31 := R31(R32)
	492	[309]	GETGLOBAL	R32 K258 ; R32 := 0x2d0fad09
	493	[309]	LOADK    	R33 K264 ; R33 := "Lotus.Interface.MissionRequirementUtilities"
	494	[309]	CALL     	R32 2 2 ; R32 := R32(R33)
	495	[310]	GETGLOBAL	R33 K258 ; R33 := 0x2d0fad09
	496	[310]	LOADK    	R34 K265 ; R34 := "Lotus.Scripts.Nemesis.NemesisGenerator"
	497	[310]	CALL     	R33 2 2 ; R33 := R33(R34)
	498	[311]	GETGLOBAL	R34 K258 ; R34 := 0x2d0fad09
	499	[311]	LOADK    	R35 K266 ; R35 := "Lotus.Interface.WorldStateUtilities"
	500	[311]	CALL     	R34 2 2 ; R34 := R34(R35)
	501	[312]	GETGLOBAL	R35 K258 ; R35 := 0x2d0fad09
	502	[312]	LOADK    	R36 K267 ; R36 := "Lotus.Interface.MapNodeTipUtilities"
	503	[312]	CALL     	R35 2 2 ; R35 := R35(R36)
	504	[313]	LOADNIL  	R36 R38 ; R36 := R37 := R38 := nil
	505	[316]	GETGLOBAL	R39 K70 ; R39 := 0x78ca68a2
	506	[316]	LOADK    	R40 := 0.000000
	507	[316]	LOADK    	R41 K71 ; R41 := 0.150000
	508	[316]	CALL     	R39 3 2 ; R39 := R39(R40,R41)
	509	[317]	GETGLOBAL	R40 K70 ; R40 := 0x78ca68a2
	510	[317]	LOADK    	R41 := 0.000000
	511	[317]	LOADK    	R42 K71 ; R42 := 0.150000
	512	[317]	CALL     	R40 3 2 ; R40 := R40(R41,R42)
	513	[318]	LOADNIL  	R41 R41 ; R41 := nil
	514	[319]	NEWTABLE 	R42 2 0 ; R42 := {}
	515	[319]	GETGLOBAL	R43 K70 ; R43 := 0x78ca68a2
	516	[319]	LOADK    	R44 := 0.000000
	517	[319]	LOADK    	R45 := 1.000000
	518	[319]	CALL     	R43 3 2 ; R43 := R43(R44,R45)
	519	[319]	GETGLOBAL	R44 K70 ; R44 := 0x78ca68a2
	520	[319]	LOADK    	R45 := 0.000000
	521	[319]	LOADK    	R46 := 1.000000
	522	[319]	CALL     	R44 3 2 ; R44 := R44(R45,R46)
	523	[319]	GETGLOBAL	R45 K70 ; R45 := 0x78ca68a2
	524	[319]	LOADK    	R46 := 0.000000
	525	[319]	LOADK    	R47 := 1.000000
	526	[319]	CALL     	R45 3 0 ; R45,... := R45(R46,R47)
	527	[319]	SETLIST  	R42 0 1 ; R42[(1-1)*FPF+i] := R(42+i), 1 <= i <= 0
	528	[320]	GETGLOBAL	R43 K268 ; R43 := 0x60130201
	529	[320]	CALL     	R43 1 2 ; R43 := R43()
	530	[321]	LOADNIL  	R44 R45 ; R44 := R45 := nil
	531	[323]	LOADK    	R46 := 0.000000
	532	[325]	OP_LOADBOOL	R47 0 0 ; R47 := false
	533	[327]	LOADNIL  	R48 R56 ; R48 := R49 := R50 := R51 := R52 := R53 := R54 := R55 := R56 := nil
	534	[337]	NEWTABLE 	R57 0 9 ; R57 := {}
	535	[337]	LOADK    	R58 K269 ; R58 := "IsVisible"
	536	[337]	OP_LOADBOOL	R59 0 0 ; R59 := false
	537	[337]	SETTABLE 	R57 R58 R59 ; R57[R58] := R59
	538	[337]	LOADK    	R58 K270 ; R58 := "X"
	539	[337]	LOADK    	R59 := 0.000000
	540	[337]	SETTABLE 	R57 R58 R59 ; R57[R58] := R59
	541	[337]	LOADK    	R58 K271 ; R58 := "Y"
	542	[337]	LOADK    	R59 := 0.000000
	543	[337]	SETTABLE 	R57 R58 R59 ; R57[R58] := R59
	544	[337]	LOADK    	R58 K272 ; R58 := "SpeedMultiplier"
	545	[337]	LOADK    	R59 := 1.000000
	546	[337]	SETTABLE 	R57 R58 R59 ; R57[R58] := R59
	547	[337]	LOADK    	R58 K273 ; R58 := "MinX"
	548	[337]	LOADK    	R59 := 0.000000
	549	[337]	SETTABLE 	R57 R58 R59 ; R57[R58] := R59
	550	[337]	LOADK    	R58 K274 ; R58 := "MinY"
	551	[337]	LOADK    	R59 := 0.000000
	552	[337]	SETTABLE 	R57 R58 R59 ; R57[R58] := R59
	553	[337]	LOADK    	R58 K275 ; R58 := "MaxX"
	554	[337]	LOADK    	R59 := 0.000000
	555	[337]	SETTABLE 	R57 R58 R59 ; R57[R58] := R59
	556	[337]	LOADK    	R58 K276 ; R58 := "MaxY"
	557	[337]	LOADK    	R59 := 0.000000
	558	[337]	SETTABLE 	R57 R58 R59 ; R57[R58] := R59
	559	[337]	LOADK    	R58 K277 ; R58 := "MouseMoves"
	560	[337]	LOADK    	R59 := 0.000000
	561	[337]	SETTABLE 	R57 R58 R59 ; R57[R58] := R59
	562	[339]	LOADNIL  	R58 R61 ; R58 := R59 := R60 := R61 := nil
	563	[344]	NEWTABLE 	R62 0 5 ; R62 := {}
	564	[344]	LOADK    	R63 K278 ; R63 := "SpaceMultiplier"
	565	[344]	LOADK    	R64 K279 ; R64 := 0.360000
	566	[344]	SETTABLE 	R62 R63 R64 ; R62[R63] := R64
	567	[344]	LOADK    	R63 K280 ; R63 := "ZoomedMultiplier"
	568	[344]	LOADK    	R64 K281 ; R64 := 0.280000
	569	[344]	SETTABLE 	R62 R63 R64 ; R62[R63] := R64
	570	[344]	LOADK    	R63 K282 ; R63 := "SpaceHoveringMultiplier"
	571	[344]	LOADK    	R64 K71 ; R64 := 0.150000
	572	[344]	SETTABLE 	R62 R63 R64 ; R62[R63] := R64
	573	[344]	LOADK    	R63 K283 ; R63 := "ZoomedHoveringMultiplier"
	574	[344]	LOADK    	R64 K284 ; R64 := 0.100000
	575	[344]	SETTABLE 	R62 R63 R64 ; R62[R63] := R64
	576	[344]	LOADK    	R63 K285 ; R63 := "AspectRatio"
	577	[344]	LOADK    	R64 := 1.000000
	578	[344]	SETTABLE 	R62 R63 R64 ; R62[R63] := R64
	579	[346]	NEWTABLE 	R63 0 10 ; R63 := {}
	580	[346]	LOADK    	R64 K286 ; R64 := "Velocity"
	581	[346]	LOADK    	R65 := 0.000000
	582	[346]	SETTABLE 	R63 R64 R65 ; R63[R64] := R65
	583	[346]	LOADK    	R64 K287 ; R64 := "LoopTime"
	584	[346]	LOADK    	R65 K288 ; R65 := 192800.000000
	585	[346]	SETTABLE 	R63 R64 R65 ; R63[R64] := R65
	586	[346]	LOADK    	R64 K289 ; R64 := "Tag"
	587	[346]	LOADK    	R65 K290 ; R65 := "/Lotus/Language/Locations/Fortress"
	588	[346]	SETTABLE 	R63 R64 R65 ; R63[R64] := R65
	589	[346]	LOADNIL  	R64 R64 ; R64 := nil
	590	[346]	SETTABLE 	R63 K81 R64 ; R63["Region"] := R64
	591	[346]	LOADK    	R64 K291 ; R64 := "ShowPath"
	592	[346]	OP_LOADBOOL	R65 0 0 ; R65 := false
	593	[346]	SETTABLE 	R63 R64 R65 ; R63[R64] := R65
	594	[346]	LOADK    	R64 K292 ; R64 := "Splines"
	595	[346]	NEWTABLE 	R65 0 0 ; R65 := {}
	596	[346]	SETTABLE 	R63 R64 R65 ; R63[R64] := R65
	597	[346]	LOADK    	R64 K293 ; R64 := "Sectors"
	598	[346]	NEWTABLE 	R65 0 0 ; R65 := {}
	599	[346]	SETTABLE 	R63 R64 R65 ; R63[R64] := R65
	600	[346]	LOADK    	R64 K294 ; R64 := "Nodes"
	601	[346]	NEWTABLE 	R65 0 0 ; R65 := {}
	602	[346]	SETTABLE 	R63 R64 R65 ; R63[R64] := R65
	603	[346]	LOADK    	R64 K295 ; R64 := "SubLabelIndex"
	604	[346]	LOADNIL  	R65 R65 ; R65 := nil
	605	[346]	SETTABLE 	R63 R64 R65 ; R63[R64] := R65
	606	[346]	LOADK    	R64 K296 ; R64 := "SplinePoints"
	607	[346]	LOADNIL  	R65 R65 ; R65 := nil
	608	[346]	SETTABLE 	R63 R64 R65 ; R63[R64] := R65
	609	[348]	OP_LOADBOOL	R64 0 0 ; R64 := false
	610	[350]	NEWTABLE 	R65 0 0 ; R65 := {}
	611	[351]	NEWTABLE 	R66 0 0 ; R66 := {}
	612	[354]	NEWTABLE 	R67 6 6 ; R67 := {}
	613	[354]	LOADK    	R68 K297 ; R68 := "isLMBDown"
	614	[354]	OP_LOADBOOL	R69 0 0 ; R69 := false
	615	[354]	SETTABLE 	R67 R68 R69 ; R67[R68] := R69
	616	[356]	GETGLOBAL	R68 K298 ; R68 := NodeClick
	617	[357]	GETGLOBAL	R69 K299 ; R69 := MapZoom
	618	[358]	GETGLOBAL	R70 K300 ; R70 := HandleMenuClick
	619	[359]	GETGLOBAL	R71 K301 ; R71 := ShowInfoTip
	620	[360]	GETGLOBAL	R72 K302 ; R72 := HideInfoTip
	621	[361]	GETGLOBAL	R73 K303 ; R73 := CloseJunctionDialog
	622	[361]	LOADK    	R74 K304 ; R74 := "mNodeVisible"
	623	[361]	OP_LOADBOOL	R75 0 0 ; R75 := false
	624	[361]	SETTABLE 	R67 R74 R75 ; R67[R74] := R75
	625	[362]	LOADK    	R74 K305 ; R74 := "JunctionDrag"
	626	[362]	OP_LOADBOOL	R75 0 0 ; R75 := false
	627	[362]	SETTABLE 	R67 R74 R75 ; R67[R74] := R75
	628	[363]	LOADK    	R74 K306 ; R74 := "mHandleJunctionClick"
	629	[363]	LOADNIL  	R75 R75 ; R75 := nil
	630	[363]	SETTABLE 	R67 R74 R75 ; R67[R74] := R75
	631	[364]	LOADK    	R74 K307 ; R74 := "mHandleMouseUp"
	632	[364]	OP_LOADBOOL	R75 0 0 ; R75 := false
	633	[364]	SETTABLE 	R67 R74 R75 ; R67[R74] := R75
	634	[365]	LOADK    	R74 K308 ; R74 := "TooltipNode"
	635	[365]	LOADNIL  	R75 R75 ; R75 := nil
	636	[365]	SETTABLE 	R67 R74 R75 ; R67[R74] := R75
	637	[366]	SETLIST  	R67 6 1 ; R67[(1-1)*FPF+i] := R(67+i), 1 <= i <= 6
	638	[401]	CLOSURE  	R68 0 ; R68 := closure(Function #1)
	639	[401]	MOVE     	R0 R27 ; R0 := R27
	640	[401]	MOVE     	R0 R62 ; R0 := R62
	641	[401]	MOVE     	R0 R57 ; R0 := R57
	642	[408]	CLOSURE  	R69 1 ; R69 := closure(Function #2)
	643	[437]	CLOSURE  	R70 2 ; R70 := closure(Function #3)
	644	[437]	MOVE     	R0 R57 ; R0 := R57
	645	[437]	MOVE     	R0 R27 ; R0 := R27
	646	[437]	MOVE     	R0 R69 ; R0 := R69
	647	[437]	MOVE     	R0 R62 ; R0 := R62
	648	[443]	CLOSURE  	R71 3 ; R71 := closure(Function #4)
	649	[463]	CLOSURE  	R72 4 ; R72 := closure(Function #5)
	650	[463]	MOVE     	R0 R27 ; R0 := R27
	651	[478]	CLOSURE  	R73 5 ; R73 := closure(Function #6)
	652	[495]	CLOSURE  	R74 6 ; R74 := closure(Function #7)
	653	[531]	CLOSURE  	R75 7 ; R75 := closure(Function #8)
	654	[531]	MOVE     	R0 R25 ; R0 := R25
	655	[531]	MOVE     	R0 R24 ; R0 := R24
	656	[531]	MOVE     	R0 R26 ; R0 := R26
	657	[531]	MOVE     	R0 R22 ; R0 := R22
	658	[531]	MOVE     	R0 R18 ; R0 := R18
	659	[538]	CLOSURE  	R76 8 ; R76 := closure(Function #9)
	660	[538]	MOVE     	R0 R7 ; R0 := R7
	661	[538]	MOVE     	R0 R75 ; R0 := R75
	662	[544]	CLOSURE  	R77 9 ; R77 := closure(Function #10)
	663	[540]	SETGLOBAL	R77 K309 ; OnTransmissionDone := R77
	664	[583]	CLOSURE  	R77 10 ; R77 := closure(Function #11)
	665	[583]	MOVE     	R0 R36 ; R0 := R36
	666	[583]	MOVE     	R0 R77 ; R0 := R77
	667	[583]	MOVE     	R0 R3 ; R0 := R3
	668	[583]	MOVE     	R0 R27 ; R0 := R27
	669	[595]	CLOSURE  	R78 11 ; R78 := closure(Function #12)
	670	[595]	MOVE     	R0 R26 ; R0 := R26
	671	[624]	CLOSURE  	R79 12 ; R79 := closure(Function #13)
	672	[624]	MOVE     	R0 R19 ; R0 := R19
	673	[624]	MOVE     	R0 R25 ; R0 := R25
	674	[624]	MOVE     	R0 R24 ; R0 := R24
	675	[624]	MOVE     	R0 R26 ; R0 := R26
	676	[624]	MOVE     	R0 R78 ; R0 := R78
	677	[641]	CLOSURE  	R80 13 ; R80 := closure(Function #14)
	678	[641]	MOVE     	R0 R19 ; R0 := R19
	679	[657]	CLOSURE  	R81 14 ; R81 := closure(Function #15)
	680	[657]	MOVE     	R0 R25 ; R0 := R25
	681	[657]	MOVE     	R0 R24 ; R0 := R24
	682	[657]	MOVE     	R0 R80 ; R0 := R80
	683	[657]	MOVE     	R0 R79 ; R0 := R79
	684	[657]	MOVE     	R0 R76 ; R0 := R76
	685	[747]	CLOSURE  	R82 15 ; R82 := closure(Function #16)
	686	[747]	MOVE     	R0 R12 ; R0 := R12
	687	[747]	MOVE     	R0 R13 ; R0 := R13
	688	[747]	MOVE     	R0 R29 ; R0 := R29
	689	[747]	MOVE     	R0 R27 ; R0 := R27
	690	[747]	MOVE     	R0 R16 ; R0 := R16
	691	[747]	MOVE     	R0 R23 ; R0 := R23
	692	[747]	MOVE     	R0 R8 ; R0 := R8
	693	[759]	CLOSURE  	R83 16 ; R83 := closure(Function #17)
	694	[761]	NEWTABLE 	R84 0 0 ; R84 := {}
	695	[810]	CLOSURE  	R85 17 ; R85 := closure(Function #18)
	696	[810]	MOVE     	R0 R18 ; R0 := R18
	697	[810]	MOVE     	R0 R19 ; R0 := R19
	698	[810]	MOVE     	R0 R84 ; R0 := R84
	699	[810]	MOVE     	R0 R33 ; R0 := R33
	700	[810]	MOVE     	R0 R27 ; R0 := R27
	701	[810]	MOVE     	R0 R8 ; R0 := R8
	702	[890]	CLOSURE  	R86 18 ; R86 := closure(Function #19)
	703	[890]	MOVE     	R0 R27 ; R0 := R27
	704	[890]	MOVE     	R0 R84 ; R0 := R84
	705	[890]	MOVE     	R0 R19 ; R0 := R19
	706	[890]	MOVE     	R0 R18 ; R0 := R18
	707	[894]	CLOSURE  	R87 19 ; R87 := closure(Function #20)
	708	[913]	CLOSURE  	R88 20 ; R88 := closure(Function #21)
	709	[985]	CLOSURE  	R89 21 ; R89 := closure(Function #22)
	710	[985]	MOVE     	R0 R35 ; R0 := R35
	711	[985]	MOVE     	R0 R36 ; R0 := R36
	712	[985]	MOVE     	R0 R29 ; R0 := R29
	713	[985]	MOVE     	R0 R53 ; R0 := R53
	714	[985]	MOVE     	R0 R54 ; R0 := R54
	715	[985]	MOVE     	R0 R8 ; R0 := R8
	716	[985]	MOVE     	R0 R0 ; R0 := R0
	717	[985]	MOVE     	R0 R32 ; R0 := R32
	718	[985]	MOVE     	R0 R4 ; R0 := R4
	719	[985]	MOVE     	R0 R27 ; R0 := R27
	720	[985]	MOVE     	R0 R55 ; R0 := R55
	721	[1025]	CLOSURE  	R90 22 ; R90 := closure(Function #23)
	722	[1025]	MOVE     	R0 R16 ; R0 := R16
	723	[1025]	MOVE     	R0 R60 ; R0 := R60
	724	[1025]	MOVE     	R0 R61 ; R0 := R61
	725	[1025]	MOVE     	R0 R3 ; R0 := R3
	726	[1025]	MOVE     	R0 R35 ; R0 := R35
	727	[1025]	MOVE     	R0 R36 ; R0 := R36
	728	[1025]	MOVE     	R0 R29 ; R0 := R29
	729	[1033]	CLOSURE  	R91 23 ; R91 := closure(Function #24)
	730	[1033]	MOVE     	R0 R16 ; R0 := R16
	731	[1234]	CLOSURE  	R92 24 ; R92 := closure(Function #25)
	732	[1234]	MOVE     	R0 R29 ; R0 := R29
	733	[1234]	MOVE     	R0 R87 ; R0 := R87
	734	[1234]	MOVE     	R0 R17 ; R0 := R17
	735	[1234]	MOVE     	R0 R27 ; R0 := R27
	736	[1234]	MOVE     	R0 R51 ; R0 := R51
	737	[1234]	MOVE     	R0 R23 ; R0 := R23
	738	[1234]	MOVE     	R0 R63 ; R0 := R63
	739	[1234]	MOVE     	R0 R11 ; R0 := R11
	740	[1234]	MOVE     	R0 R0 ; R0 := R0
	741	[1234]	MOVE     	R0 R36 ; R0 := R36
	742	[1234]	MOVE     	R0 R70 ; R0 := R70
	743	[1234]	MOVE     	R0 R82 ; R0 := R82
	744	[1234]	MOVE     	R0 R3 ; R0 := R3
	745	[1234]	MOVE     	R0 R88 ; R0 := R88
	746	[1234]	MOVE     	R0 R89 ; R0 := R89
	747	[1234]	MOVE     	R0 R16 ; R0 := R16
	748	[1234]	MOVE     	R0 R90 ; R0 := R90
	749	[1234]	MOVE     	R0 R81 ; R0 := R81
	750	[1234]	MOVE     	R0 R24 ; R0 := R24
	751	[1234]	MOVE     	R0 R83 ; R0 := R83
	752	[1234]	MOVE     	R0 R58 ; R0 := R58
	753	[1240]	CLOSURE  	R93 25 ; R93 := closure(Function #26)
	754	[1240]	MOVE     	R0 R92 ; R0 := R92
	755	[1236]	SETGLOBAL	R93 K310 ; Initialize := R93
	756	[1264]	CLOSURE  	R93 26 ; R93 := closure(Function #27)
	757	[1264]	MOVE     	R0 R29 ; R0 := R29
	758	[1329]	CLOSURE  	R94 27 ; R94 := closure(Function #28)
	759	[1329]	MOVE     	R0 R3 ; R0 := R3
	760	[1329]	MOVE     	R0 R93 ; R0 := R93
	761	[1329]	MOVE     	R0 R4 ; R0 := R4
	762	[1329]	MOVE     	R0 R27 ; R0 := R27
	763	[1329]	MOVE     	R0 R29 ; R0 := R29
	764	[1339]	CLOSURE  	R95 28 ; R95 := closure(Function #29)
	765	[1339]	MOVE     	R0 R87 ; R0 := R87
	766	[1372]	CLOSURE  	R17 29 ; R17 := closure(Function #30)
	767	[1372]	MOVE     	R0 R29 ; R0 := R29
	768	[1372]	MOVE     	R0 R95 ; R0 := R95
	769	[1372]	MOVE     	R0 R51 ; R0 := R51
	770	[1372]	MOVE     	R0 R94 ; R0 := R94
	771	[1372]	MOVE     	R0 R27 ; R0 := R27
	772	[1372]	MOVE     	R0 R92 ; R0 := R92
	773	[1376]	CLOSURE  	R96 30 ; R96 := closure(Function #31)
	774	[1376]	MOVE     	R0 R17 ; R0 := R17
	775	[1374]	SETGLOBAL	R96 K311 ; ToggleRailJack := R96
	776	[1384]	CLOSURE  	R96 31 ; R96 := closure(Function #32)
	777	[1388]	CLOSURE  	R97 32 ; R97 := closure(Function #33)
	778	[1388]	MOVE     	R0 R96 ; R0 := R96
	779	[1386]	SETGLOBAL	R97 K312 ; FindAnyRailjackMission := R97
	780	[1459]	CLOSURE  	R60 33 ; R60 := closure(Function #34)
	781	[1459]	MOVE     	R0 R67 ; R0 := R67
	782	[1459]	MOVE     	R0 R4 ; R0 := R4
	783	[1459]	MOVE     	R0 R29 ; R0 := R29
	784	[1459]	MOVE     	R0 R52 ; R0 := R52
	785	[1459]	MOVE     	R0 R3 ; R0 := R3
	786	[1459]	MOVE     	R0 R27 ; R0 := R27
	787	[1459]	MOVE     	R0 R72 ; R0 := R72
	788	[1459]	MOVE     	R0 R71 ; R0 := R71
	789	[1459]	MOVE     	R0 R51 ; R0 := R51
	790	[1459]	MOVE     	R0 R23 ; R0 := R23
	791	[1463]	CLOSURE  	R97 34 ; R97 := closure(Function #35)
	792	[1463]	MOVE     	R0 R60 ; R0 := R60
	793	[1461]	SETGLOBAL	R97 K313 ; UpdateButtons := R97
	794	[1468]	CLOSURE  	R52 35 ; R52 := closure(Function #36)
	795	[1468]	MOVE     	R0 R60 ; R0 := R60
	796	[1486]	CLOSURE  	R97 36 ; R97 := closure(Function #37)
	797	[1490]	CLOSURE  	R98 37 ; R98 := closure(Function #38)
	798	[1498]	CLOSURE  	R99 38 ; R99 := closure(Function #39)
	799	[1498]	MOVE     	R0 R19 ; R0 := R19
	800	[1514]	CLOSURE  	R100 39 ; R100 := closure(Function #40)
	801	[1569]	CLOSURE  	R101 40 ; R101 := closure(Function #41)
	802	[1569]	MOVE     	R0 R97 ; R0 := R97
	803	[1569]	MOVE     	R0 R6 ; R0 := R6
	804	[1569]	MOVE     	R0 R100 ; R0 := R100
	805	[1569]	MOVE     	R0 R27 ; R0 := R27
	806	[1569]	MOVE     	R0 R63 ; R0 := R63
	807	[1569]	MOVE     	R0 R19 ; R0 := R19
	808	[1593]	CLOSURE  	R102 41 ; R102 := closure(Function #42)
	809	[1593]	MOVE     	R0 R29 ; R0 := R29
	810	[1593]	MOVE     	R0 R1 ; R0 := R1
	811	[1646]	CLOSURE  	R103 42 ; R103 := closure(Function #43)
	812	[1646]	MOVE     	R0 R91 ; R0 := R91
	813	[1646]	MOVE     	R0 R29 ; R0 := R29
	814	[1646]	MOVE     	R0 R18 ; R0 := R18
	815	[1646]	MOVE     	R0 R23 ; R0 := R23
	816	[1646]	MOVE     	R0 R102 ; R0 := R102
	817	[1699]	CLOSURE  	R104 43 ; R104 := closure(Function #44)
	818	[1699]	MOVE     	R0 R27 ; R0 := R27
	819	[1699]	MOVE     	R0 R18 ; R0 := R18
	820	[1699]	MOVE     	R0 R29 ; R0 := R29
	821	[1699]	MOVE     	R0 R16 ; R0 := R16
	822	[1846]	CLOSURE  	R105 44 ; R105 := closure(Function #45)
	823	[1846]	MOVE     	R0 R73 ; R0 := R73
	824	[1846]	MOVE     	R0 R37 ; R0 := R37
	825	[1846]	MOVE     	R0 R18 ; R0 := R18
	826	[1846]	MOVE     	R0 R38 ; R0 := R38
	827	[1846]	MOVE     	R0 R30 ; R0 := R30
	828	[1846]	MOVE     	R0 R45 ; R0 := R45
	829	[1846]	MOVE     	R0 R41 ; R0 := R41
	830	[1846]	MOVE     	R0 R43 ; R0 := R43
	831	[1846]	MOVE     	R0 R44 ; R0 := R44
	832	[1846]	MOVE     	R0 R19 ; R0 := R19
	833	[1858]	CLOSURE  	R106 45 ; R106 := closure(Function #46)
	834	[1976]	CLOSURE  	R107 46 ; R107 := closure(Function #47)
	835	[1976]	MOVE     	R0 R98 ; R0 := R98
	836	[1976]	MOVE     	R0 R6 ; R0 := R6
	837	[1976]	MOVE     	R0 R63 ; R0 := R63
	838	[1976]	MOVE     	R0 R106 ; R0 := R106
	839	[1976]	MOVE     	R0 R73 ; R0 := R73
	840	[1976]	MOVE     	R0 R11 ; R0 := R11
	841	[1976]	MOVE     	R0 R19 ; R0 := R19
	842	[1976]	MOVE     	R0 R27 ; R0 := R27
	843	[1976]	MOVE     	R0 R101 ; R0 := R101
	844	[1980]	CLOSURE  	R108 47 ; R108 := closure(Function #48)
	845	[1978]	SETGLOBAL	R108 K314 ; RollOverRegionLabel := R108
	846	[1984]	CLOSURE  	R108 48 ; R108 := closure(Function #49)
	847	[1982]	SETGLOBAL	R108 K315 ; RollOutRegionLabel := R108
	848	[1998]	CLOSURE  	R108 49 ; R108 := closure(Function #50)
	849	[1998]	MOVE     	R0 R105 ; R0 := R105
	850	[1998]	MOVE     	R0 R107 ; R0 := R107
	851	[1998]	MOVE     	R0 R19 ; R0 := R19
	852	[2015]	CLOSURE  	R109 50 ; R109 := closure(Function #51)
	853	[2022]	CLOSURE  	R110 51 ; R110 := closure(Function #52)
	854	[2205]	CLOSURE  	R111 52 ; R111 := closure(Function #53)
	855	[2205]	MOVE     	R0 R91 ; R0 := R91
	856	[2205]	MOVE     	R0 R8 ; R0 := R8
	857	[2205]	MOVE     	R0 R29 ; R0 := R29
	858	[2205]	MOVE     	R0 R0 ; R0 := R0
	859	[2205]	MOVE     	R0 R38 ; R0 := R38
	860	[2205]	MOVE     	R0 R44 ; R0 := R44
	861	[2205]	MOVE     	R0 R27 ; R0 := R27
	862	[2205]	MOVE     	R0 R50 ; R0 := R50
	863	[2205]	MOVE     	R0 R36 ; R0 := R36
	864	[2205]	MOVE     	R0 R49 ; R0 := R49
	865	[2205]	MOVE     	R0 R48 ; R0 := R48
	866	[2205]	MOVE     	R0 R60 ; R0 := R60
	867	[2205]	MOVE     	R0 R110 ; R0 := R110
	868	[2205]	MOVE     	R0 R6 ; R0 := R6
	869	[2219]	CLOSURE  	R112 53 ; R112 := closure(Function #54)
	870	[2359]	CLOSURE  	R113 54 ; R113 := closure(Function #55)
	871	[2359]	MOVE     	R0 R29 ; R0 := R29
	872	[2359]	MOVE     	R0 R18 ; R0 := R18
	873	[2359]	MOVE     	R0 R23 ; R0 := R23
	874	[2359]	MOVE     	R0 R102 ; R0 := R102
	875	[2359]	MOVE     	R0 R11 ; R0 := R11
	876	[2359]	MOVE     	R0 R32 ; R0 := R32
	877	[2671]	CLOSURE  	R114 55 ; R114 := closure(Function #56)
	878	[2671]	MOVE     	R0 R113 ; R0 := R113
	879	[2671]	MOVE     	R0 R29 ; R0 := R29
	880	[2671]	MOVE     	R0 R0 ; R0 := R0
	881	[2671]	MOVE     	R0 R10 ; R0 := R10
	882	[2671]	MOVE     	R0 R18 ; R0 := R18
	883	[2671]	MOVE     	R0 R97 ; R0 := R97
	884	[2671]	MOVE     	R0 R7 ; R0 := R7
	885	[2671]	MOVE     	R0 R8 ; R0 := R8
	886	[2671]	MOVE     	R0 R112 ; R0 := R112
	887	[2671]	MOVE     	R0 R19 ; R0 := R19
	888	[2671]	MOVE     	R0 R99 ; R0 := R99
	889	[2671]	MOVE     	R0 R13 ; R0 := R13
	890	[2793]	CLOSURE  	R115 56 ; R115 := closure(Function #57)
	891	[2793]	MOVE     	R0 R35 ; R0 := R35
	892	[2793]	MOVE     	R0 R91 ; R0 := R91
	893	[2793]	MOVE     	R0 R103 ; R0 := R103
	894	[2793]	MOVE     	R0 R104 ; R0 := R104
	895	[2793]	MOVE     	R0 R27 ; R0 := R27
	896	[2793]	MOVE     	R0 R8 ; R0 := R8
	897	[2793]	MOVE     	R0 R18 ; R0 := R18
	898	[2793]	MOVE     	R0 R75 ; R0 := R75
	899	[2908]	CLOSURE  	R116 57 ; R116 := closure(Function #58)
	900	[2908]	MOVE     	R0 R29 ; R0 := R29
	901	[2908]	MOVE     	R0 R8 ; R0 := R8
	902	[2908]	MOVE     	R0 R66 ; R0 := R66
	903	[2908]	MOVE     	R0 R9 ; R0 := R9
	904	[2908]	MOVE     	R0 R27 ; R0 := R27
	905	[2926]	CLOSURE  	R117 58 ; R117 := closure(Function #59)
	906	[2926]	MOVE     	R0 R116 ; R0 := R116
	907	[2926]	MOVE     	R0 R7 ; R0 := R7
	908	[2926]	MOVE     	R0 R115 ; R0 := R115
	909	[2926]	MOVE     	R0 R82 ; R0 := R82
	910	[2935]	CLOSURE  	R118 59 ; R118 := closure(Function #60)
	911	[2935]	MOVE     	R0 R27 ; R0 := R27
	912	[2961]	CLOSURE  	R119 60 ; R119 := closure(Function #61)
	913	[2961]	MOVE     	R0 R91 ; R0 := R91
	914	[2961]	MOVE     	R0 R7 ; R0 := R7
	915	[2961]	MOVE     	R0 R118 ; R0 := R118
	916	[2989]	CLOSURE  	R120 61 ; R120 := closure(Function #62)
	917	[2989]	MOVE     	R0 R91 ; R0 := R91
	918	[2989]	MOVE     	R0 R7 ; R0 := R7
	919	[2989]	MOVE     	R0 R29 ; R0 := R29
	920	[2989]	MOVE     	R0 R115 ; R0 := R115
	921	[2989]	MOVE     	R0 R18 ; R0 := R18
	922	[3013]	CLOSURE  	R121 62 ; R121 := closure(Function #63)
	923	[3013]	MOVE     	R0 R7 ; R0 := R7
	924	[3013]	MOVE     	R0 R27 ; R0 := R27
	925	[3029]	CLOSURE  	R122 63 ; R122 := closure(Function #64)
	926	[3466]	CLOSURE  	R123 64 ; R123 := closure(Function #65)
	927	[3466]	MOVE     	R0 R7 ; R0 := R7
	928	[3466]	MOVE     	R0 R8 ; R0 := R8
	929	[3466]	MOVE     	R0 R98 ; R0 := R98
	930	[3466]	MOVE     	R0 R29 ; R0 := R29
	931	[3466]	MOVE     	R0 R0 ; R0 := R0
	932	[3466]	MOVE     	R0 R10 ; R0 := R10
	933	[3466]	MOVE     	R0 R63 ; R0 := R63
	934	[3466]	MOVE     	R0 R16 ; R0 := R16
	935	[3466]	MOVE     	R0 R114 ; R0 := R114
	936	[3466]	MOVE     	R0 R11 ; R0 := R11
	937	[3466]	MOVE     	R0 R27 ; R0 := R27
	938	[3466]	MOVE     	R0 R122 ; R0 := R122
	939	[3466]	MOVE     	R0 R56 ; R0 := R56
	940	[3466]	MOVE     	R0 R76 ; R0 := R76
	941	[3476]	CLOSURE  	R124 65 ; R124 := closure(Function #66)
	942	[3488]	CLOSURE  	R125 66 ; R125 := closure(Function #67)
	943	[3525]	CLOSURE  	R126 67 ; R126 := closure(Function #68)
	944	[3525]	MOVE     	R0 R8 ; R0 := R8
	945	[3559]	CLOSURE  	R127 68 ; R127 := closure(Function #69)
	946	[3559]	MOVE     	R0 R124 ; R0 := R124
	947	[3559]	MOVE     	R0 R126 ; R0 := R126
	948	[3559]	MOVE     	R0 R125 ; R0 := R125
	949	[3632]	CLOSURE  	R128 69 ; R128 := closure(Function #70)
	950	[3632]	MOVE     	R0 R8 ; R0 := R8
	951	[3632]	MOVE     	R0 R63 ; R0 := R63
	952	[3632]	MOVE     	R0 R23 ; R0 := R23
	953	[3674]	CLOSURE  	R129 70 ; R129 := closure(Function #71)
	954	[3674]	MOVE     	R0 R27 ; R0 := R27
	955	[3674]	MOVE     	R0 R19 ; R0 := R19
	956	[3674]	MOVE     	R0 R127 ; R0 := R127
	957	[3725]	CLOSURE  	R130 71 ; R130 := closure(Function #72)
	958	[3725]	MOVE     	R0 R27 ; R0 := R27
	959	[3735]	CLOSURE  	R131 72 ; R131 := closure(Function #73)
	960	[3735]	MOVE     	R0 R27 ; R0 := R27
	961	[3735]	MOVE     	R0 R7 ; R0 := R7
	962	[3745]	CLOSURE  	R132 73 ; R132 := closure(Function #74)
	963	[3850]	CLOSURE  	R133 74 ; R133 := closure(Function #75)
	964	[3850]	MOVE     	R0 R27 ; R0 := R27
	965	[3850]	MOVE     	R0 R2 ; R0 := R2
	966	[3850]	MOVE     	R0 R18 ; R0 := R18
	967	[3850]	MOVE     	R0 R63 ; R0 := R63
	968	[3850]	MOVE     	R0 R132 ; R0 := R132
	969	[3850]	MOVE     	R0 R108 ; R0 := R108
	970	[3850]	MOVE     	R0 R123 ; R0 := R123
	971	[3850]	MOVE     	R0 R128 ; R0 := R128
	972	[3850]	MOVE     	R0 R131 ; R0 := R131
	973	[3850]	MOVE     	R0 R85 ; R0 := R85
	974	[3850]	MOVE     	R0 R8 ; R0 := R8
	975	[3850]	MOVE     	R0 R61 ; R0 := R61
	976	[3850]	MOVE     	R0 R130 ; R0 := R130
	977	[3850]	MOVE     	R0 R111 ; R0 := R111
	978	[3850]	MOVE     	R0 R93 ; R0 := R93
	979	[3872]	CLOSURE  	R134 75 ; R134 := closure(Function #76)
	980	[3872]	MOVE     	R0 R133 ; R0 := R133
	981	[3872]	MOVE     	R0 R27 ; R0 := R27
	982	[3889]	CLOSURE  	R135 76 ; R135 := closure(Function #77)
	983	[3889]	MOVE     	R0 R30 ; R0 := R30
	984	[3898]	CLOSURE  	R136 77 ; R136 := closure(Function #78)
	985	[3906]	CLOSURE  	R137 78 ; R137 := closure(Function #79)
	986	[3962]	CLOSURE  	R138 79 ; R138 := closure(Function #80)
	987	[3962]	MOVE     	R0 R137 ; R0 := R137
	988	[3962]	MOVE     	R0 R29 ; R0 := R29
	989	[3962]	MOVE     	R0 R136 ; R0 := R136
	990	[3962]	MOVE     	R0 R113 ; R0 := R113
	991	[3989]	CLOSURE  	R139 80 ; R139 := closure(Function #81)
	992	[3989]	MOVE     	R0 R15 ; R0 := R15
	993	[4003]	CLOSURE  	R140 81 ; R140 := closure(Function #82)
	994	[4003]	MOVE     	R0 R26 ; R0 := R26
	995	[4013]	CLOSURE  	R141 82 ; R141 := closure(Function #83)
	996	[4013]	MOVE     	R0 R22 ; R0 := R22
	997	[4013]	MOVE     	R0 R26 ; R0 := R26
	998	[4029]	CLOSURE  	R142 83 ; R142 := closure(Function #84)
	999	[4029]	MOVE     	R0 R29 ; R0 := R29
	1000	[4038]	CLOSURE  	R143 84 ; R143 := closure(Function #85)
	1001	[4038]	MOVE     	R0 R142 ; R0 := R142
	1002	[4031]	SETGLOBAL	R143 K316 ; AbortConfirm := R143
	1003	[4042]	CLOSURE  	R143 85 ; R143 := closure(Function #86)
	1004	[4042]	MOVE     	R0 R27 ; R0 := R27
	1005	[4040]	SETGLOBAL	R143 K317 ; ShowQuestConfirm := R143
	1006	[4050]	CLOSURE  	R143 86 ; R143 := closure(Function #87)
	1007	[4044]	SETGLOBAL	R143 K318 ; CanOpenRailJackMissionInCrewship := R143
	1008	[4053]	CLOSURE  	R143 87 ; R143 := closure(Function #88)
	1009	[4057]	CLOSURE  	R144 88 ; R144 := closure(Function #89)
	1010	[4057]	MOVE     	R0 R143 ; R0 := R143
	1011	[4055]	SETGLOBAL	R144 K319 ; OnUpdateSessionSettings := R144
	1012	[4064]	CLOSURE  	R144 89 ; R144 := closure(Function #90)
	1013	[4064]	MOVE     	R0 R87 ; R0 := R87
	1014	[4095]	CLOSURE  	R145 90 ; R145 := closure(Function #91)
	1015	[4095]	MOVE     	R0 R29 ; R0 := R29
	1016	[4095]	MOVE     	R0 R27 ; R0 := R27
	1017	[4208]	CLOSURE  	R55 91 ; R55 := closure(Function #92)
	1018	[4208]	MOVE     	R0 R32 ; R0 := R32
	1019	[4208]	MOVE     	R0 R29 ; R0 := R29
	1020	[4208]	MOVE     	R0 R145 ; R0 := R145
	1021	[4208]	MOVE     	R0 R144 ; R0 := R144
	1022	[4208]	MOVE     	R0 R31 ; R0 := R31
	1023	[4208]	MOVE     	R0 R143 ; R0 := R143
	1024	[4208]	MOVE     	R0 R51 ; R0 := R51
	1025	[4208]	MOVE     	R0 R142 ; R0 := R142
	1026	[4226]	CLOSURE  	R53 92 ; R53 := closure(Function #93)
	1027	[4226]	MOVE     	R0 R4 ; R0 := R4
	1028	[4239]	CLOSURE  	R146 93 ; R146 := closure(Function #94)
	1029	[4239]	MOVE     	R0 R4 ; R0 := R4
	1030	[4239]	MOVE     	R0 R55 ; R0 := R55
	1031	[4228]	SETGLOBAL	R146 K320 ; ConfirmInvasionFaction := R146
	1032	[4285]	CLOSURE  	R54 94 ; R54 := closure(Function #95)
	1033	[4285]	MOVE     	R0 R3 ; R0 := R3
	1034	[4285]	MOVE     	R0 R4 ; R0 := R4
	1035	[4285]	MOVE     	R0 R145 ; R0 := R145
	1036	[4285]	MOVE     	R0 R29 ; R0 := R29
	1037	[4306]	CLOSURE  	R146 95 ; R146 := closure(Function #96)
	1038	[4306]	MOVE     	R0 R4 ; R0 := R4
	1039	[4306]	MOVE     	R0 R3 ; R0 := R3
	1040	[4306]	MOVE     	R0 R55 ; R0 := R55
	1041	[4306]	MOVE     	R0 R29 ; R0 := R29
	1042	[4287]	SETGLOBAL	R146 K321 ; OnVoidProjectionChosen := R146
	1043	[4309]	CLOSURE  	R146 96 ; R146 := closure(Function #97)
	1044	[4308]	SETGLOBAL	R146 K322 ; ConfirmIncompatibleOnlineMode := R146
	1045	[4331]	CLOSURE  	R146 97 ; R146 := closure(Function #98)
	1046	[4331]	MOVE     	R0 R4 ; R0 := R4
	1047	[4331]	MOVE     	R0 R27 ; R0 := R27
	1048	[4331]	MOVE     	R0 R67 ; R0 := R67
	1049	[4352]	CLOSURE  	R147 98 ; R147 := closure(Function #99)
	1050	[4352]	MOVE     	R0 R4 ; R0 := R4
	1051	[4352]	MOVE     	R0 R29 ; R0 := R29
	1052	[4352]	MOVE     	R0 R55 ; R0 := R55
	1053	[4333]	SETGLOBAL	R147 K323 ; ConfirmNightmare := R147
	1054	[4355]	CLOSURE  	R147 99 ; R147 := closure(Function #100)
	1055	[4354]	SETGLOBAL	R147 K324 ; ConfirmRaidSelection := R147
	1056	[4382]	CLOSURE  	R147 100 ; R147 := closure(Function #101)
	1057	[4382]	MOVE     	R0 R3 ; R0 := R3
	1058	[4382]	MOVE     	R0 R29 ; R0 := R29
	1059	[4411]	CLOSURE  	R148 101 ; R148 := closure(Function #102)
	1060	[4411]	MOVE     	R0 R3 ; R0 := R3
	1061	[4411]	MOVE     	R0 R16 ; R0 := R16
	1062	[4411]	MOVE     	R0 R29 ; R0 := R29
	1063	[4411]	MOVE     	R0 R55 ; R0 := R55
	1064	[4384]	SETGLOBAL	R148 K325 ; ConfirmWagerSelection := R148
	1065	[4468]	CLOSURE  	R148 102 ; R148 := closure(Function #103)
	1066	[4468]	MOVE     	R0 R29 ; R0 := R29
	1067	[4468]	MOVE     	R0 R16 ; R0 := R16
	1068	[4468]	MOVE     	R0 R27 ; R0 := R27
	1069	[4468]	MOVE     	R0 R31 ; R0 := R31
	1070	[4413]	SETGLOBAL	R148 K326 ; OpenSoloMission := R148
	1071	[4486]	CLOSURE  	R148 103 ; R148 := closure(Function #104)
	1072	[4486]	MOVE     	R0 R4 ; R0 := R4
	1073	[4470]	SETGLOBAL	R148 K327 ; ConfirmSoloMission := R148
	1074	[4731]	CLOSURE  	R148 104 ; R148 := closure(Function #105)
	1075	[4731]	MOVE     	R0 R29 ; R0 := R29
	1076	[4731]	MOVE     	R0 R4 ; R0 := R4
	1077	[4731]	MOVE     	R0 R27 ; R0 := R27
	1078	[4731]	MOVE     	R0 R55 ; R0 := R55
	1079	[4731]	MOVE     	R0 R23 ; R0 := R23
	1080	[4731]	MOVE     	R0 R67 ; R0 := R67
	1081	[4488]	SETGLOBAL	R148 K328 ; GotHubInstances := R148
	1082	[4756]	CLOSURE  	R148 105 ; R148 := closure(Function #106)
	1083	[4756]	MOVE     	R0 R29 ; R0 := R29
	1084	[4777]	CLOSURE  	R149 106 ; R149 := closure(Function #107)
	1085	[4777]	MOVE     	R0 R29 ; R0 := R29
	1086	[4777]	MOVE     	R0 R27 ; R0 := R27
	1087	[4790]	CLOSURE  	R150 107 ; R150 := closure(Function #108)
	1088	[4790]	MOVE     	R0 R31 ; R0 := R31
	1089	[4826]	CLOSURE  	R151 108 ; R151 := closure(Function #109)
	1090	[4826]	MOVE     	R0 R150 ; R0 := R150
	1091	[4826]	MOVE     	R0 R27 ; R0 := R27
	1092	[4849]	CLOSURE  	R152 109 ; R152 := closure(Function #110)
	1093	[4849]	MOVE     	R0 R36 ; R0 := R36
	1094	[5105]	CLOSURE  	R153 110 ; R153 := closure(Function #111)
	1095	[5105]	MOVE     	R0 R29 ; R0 := R29
	1096	[5105]	MOVE     	R0 R0 ; R0 := R0
	1097	[5105]	MOVE     	R0 R27 ; R0 := R27
	1098	[5105]	MOVE     	R0 R152 ; R0 := R152
	1099	[5105]	MOVE     	R0 R151 ; R0 := R151
	1100	[5105]	MOVE     	R0 R144 ; R0 := R144
	1101	[5105]	MOVE     	R0 R149 ; R0 := R149
	1102	[5105]	MOVE     	R0 R55 ; R0 := R55
	1103	[5105]	MOVE     	R0 R16 ; R0 := R16
	1104	[5105]	MOVE     	R0 R103 ; R0 := R103
	1105	[5105]	MOVE     	R0 R35 ; R0 := R35
	1106	[5105]	MOVE     	R0 R54 ; R0 := R54
	1107	[5105]	MOVE     	R0 R53 ; R0 := R53
	1108	[5105]	MOVE     	R0 R147 ; R0 := R147
	1109	[5105]	MOVE     	R0 R67 ; R0 := R67
	1110	[5105]	MOVE     	R0 R146 ; R0 := R146
	1111	[5105]	MOVE     	R0 R148 ; R0 := R148
	1112	[5105]	MOVE     	R0 R91 ; R0 := R91
	1113	[5105]	MOVE     	R0 R32 ; R0 := R32
	1114	[5105]	MOVE     	R0 R4 ; R0 := R4
	1115	[5114]	CLOSURE  	R154 111 ; R154 := closure(Function #112)
	1116	[5114]	MOVE     	R0 R153 ; R0 := R153
	1117	[5114]	MOVE     	R0 R67 ; R0 := R67
	1118	[5107]	SETGLOBAL	R154 K329 ; StartMissioniOS := R154
	1119	[5118]	CLOSURE  	R154 112 ; R154 := closure(Function #113)
	1120	[5118]	MOVE     	R0 R95 ; R0 := R95
	1121	[5116]	SETGLOBAL	R154 K330 ; InitializeRailJackMap := R154
	1122	[5122]	CLOSURE  	R154 113 ; R154 := closure(Function #114)
	1123	[5122]	MOVE     	R0 R27 ; R0 := R27
	1124	[5120]	SETGLOBAL	R154 K331 ; InitialFade := R154
	1125	[5187]	CLOSURE  	R154 114 ; R154 := closure(Function #115)
	1126	[5187]	MOVE     	R0 R29 ; R0 := R29
	1127	[5187]	MOVE     	R0 R0 ; R0 := R0
	1128	[5187]	MOVE     	R0 R3 ; R0 := R3
	1129	[5187]	MOVE     	R0 R4 ; R0 := R4
	1130	[5187]	MOVE     	R0 R135 ; R0 := R135
	1131	[5187]	MOVE     	R0 R138 ; R0 := R138
	1132	[5187]	MOVE     	R0 R74 ; R0 := R74
	1133	[5187]	MOVE     	R0 R139 ; R0 := R139
	1134	[5187]	MOVE     	R0 R140 ; R0 := R140
	1135	[5187]	MOVE     	R0 R16 ; R0 := R16
	1136	[5187]	MOVE     	R0 R60 ; R0 := R60
	1137	[5124]	SETGLOBAL	R154 K332 ; InitializeMore := R154
	1138	[5191]	CLOSURE  	R154 115 ; R154 := closure(Function #116)
	1139	[5191]	MOVE     	R0 R94 ; R0 := R94
	1140	[5189]	SETGLOBAL	R154 K333 ; Shutdown := R154
	1141	[5205]	CLOSURE  	R154 116 ; R154 := closure(Function #117)
	1142	[5205]	MOVE     	R0 R2 ; R0 := R2
	1143	[5215]	CLOSURE  	R155 117 ; R155 := closure(Function #118)
	1144	[5215]	MOVE     	R0 R27 ; R0 := R27
	1145	[5238]	CLOSURE  	R156 118 ; R156 := closure(Function #119)
	1146	[5238]	MOVE     	R0 R27 ; R0 := R27
	1147	[5238]	MOVE     	R0 R6 ; R0 := R6
	1148	[5396]	CLOSURE  	R157 119 ; R157 := closure(Function #120)
	1149	[5396]	MOVE     	R0 R57 ; R0 := R57
	1150	[5396]	MOVE     	R0 R11 ; R0 := R11
	1151	[5396]	MOVE     	R0 R19 ; R0 := R19
	1152	[5396]	MOVE     	R0 R156 ; R0 := R156
	1153	[5396]	MOVE     	R0 R27 ; R0 := R27
	1154	[5396]	MOVE     	R0 R6 ; R0 := R6
	1155	[5416]	CLOSURE  	R158 120 ; R158 := closure(Function #121)
	1156	[5416]	MOVE     	R0 R38 ; R0 := R38
	1157	[5416]	MOVE     	R0 R46 ; R0 := R46
	1158	[5753]	CLOSURE  	R159 121 ; R159 := closure(Function #122)
	1159	[5753]	MOVE     	R0 R25 ; R0 := R25
	1160	[5753]	MOVE     	R0 R24 ; R0 := R24
	1161	[5753]	MOVE     	R0 R26 ; R0 := R26
	1162	[5753]	MOVE     	R0 R155 ; R0 := R155
	1163	[5753]	MOVE     	R0 R7 ; R0 := R7
	1164	[5753]	MOVE     	R0 R112 ; R0 := R112
	1165	[5753]	MOVE     	R0 R127 ; R0 := R127
	1166	[5753]	MOVE     	R0 R157 ; R0 := R157
	1167	[5753]	MOVE     	R0 R22 ; R0 := R22
	1168	[5753]	MOVE     	R0 R27 ; R0 := R27
	1169	[5753]	MOVE     	R0 R75 ; R0 := R75
	1170	[5753]	MOVE     	R0 R124 ; R0 := R124
	1171	[5753]	MOVE     	R0 R19 ; R0 := R19
	1172	[5753]	MOVE     	R0 R14 ; R0 := R14
	1173	[5753]	MOVE     	R0 R110 ; R0 := R110
	1174	[5753]	MOVE     	R0 R2 ; R0 := R2
	1175	[5753]	MOVE     	R0 R38 ; R0 := R38
	1176	[5753]	MOVE     	R0 R44 ; R0 := R44
	1177	[5753]	MOVE     	R0 R45 ; R0 := R45
	1178	[5753]	MOVE     	R0 R46 ; R0 := R46
	1179	[5753]	MOVE     	R0 R158 ; R0 := R158
	1180	[5753]	MOVE     	R0 R18 ; R0 := R18
	1181	[5753]	MOVE     	R0 R47 ; R0 := R47
	1182	[5767]	CLOSURE  	R160 122 ; R160 := closure(Function #123)
	1183	[5767]	MOVE     	R0 R27 ; R0 := R27
	1184	[5805]	CLOSURE  	R161 123 ; R161 := closure(Function #124)
	1185	[5805]	MOVE     	R0 R63 ; R0 := R63
	1186	[5805]	MOVE     	R0 R50 ; R0 := R50
	1187	[5805]	MOVE     	R0 R73 ; R0 := R73
	1188	[5805]	MOVE     	R0 R6 ; R0 := R6
	1189	[5805]	MOVE     	R0 R19 ; R0 := R19
	1190	[5805]	MOVE     	R0 R127 ; R0 := R127
	1191	[5832]	CLOSURE  	R162 124 ; R162 := closure(Function #125)
	1192	[5832]	MOVE     	R0 R4 ; R0 := R4
	1193	[5832]	MOVE     	R0 R83 ; R0 := R83
	1194	[5839]	CLOSURE  	R163 125 ; R163 := closure(Function #126)
	1195	[5839]	MOVE     	R0 R27 ; R0 := R27
	1196	[6229]	CLOSURE  	R164 126 ; R164 := closure(Function #127)
	1197	[6229]	MOVE     	R0 R2 ; R0 := R2
	1198	[6229]	MOVE     	R0 R25 ; R0 := R25
	1199	[6229]	MOVE     	R0 R24 ; R0 := R24
	1200	[6229]	MOVE     	R0 R19 ; R0 := R19
	1201	[6229]	MOVE     	R0 R6 ; R0 := R6
	1202	[6229]	MOVE     	R0 R59 ; R0 := R59
	1203	[6229]	MOVE     	R0 R7 ; R0 := R7
	1204	[6229]	MOVE     	R0 R47 ; R0 := R47
	1205	[6229]	MOVE     	R0 R67 ; R0 := R67
	1206	[6229]	MOVE     	R0 R163 ; R0 := R163
	1207	[6229]	MOVE     	R0 R18 ; R0 := R18
	1208	[6229]	MOVE     	R0 R86 ; R0 := R86
	1209	[6229]	MOVE     	R0 R162 ; R0 := R162
	1210	[6229]	MOVE     	R0 R63 ; R0 := R63
	1211	[6229]	MOVE     	R0 R27 ; R0 := R27
	1212	[6229]	MOVE     	R0 R160 ; R0 := R160
	1213	[6229]	MOVE     	R0 R11 ; R0 := R11
	1214	[6229]	MOVE     	R0 R29 ; R0 := R29
	1215	[6229]	MOVE     	R0 R161 ; R0 := R161
	1216	[6229]	MOVE     	R0 R38 ; R0 := R38
	1217	[6231]	GETGLOBAL	R165 K37 ; R165 := 0xa421af95
	1218	[6231]	CALL     	R165 1 2 ; R165 := R165()
	1219	[6242]	CLOSURE  	R166 127 ; R166 := closure(Function #128)
	1220	[6242]	MOVE     	R0 R20 ; R0 := R20
	1221	[6242]	MOVE     	R0 R22 ; R0 := R22
	1222	[6242]	MOVE     	R0 R155 ; R0 := R155
	1223	[6242]	MOVE     	R0 R165 ; R0 := R165
	1224	[6254]	CLOSURE  	R58 128 ; R58 := closure(Function #129)
	1225	[6254]	MOVE     	R0 R57 ; R0 := R57
	1226	[6254]	MOVE     	R0 R7 ; R0 := R7
	1227	[6254]	MOVE     	R0 R27 ; R0 := R27
	1228	[6266]	CLOSURE  	R167 129 ; R167 := closure(Function #130)
	1229	[6266]	MOVE     	R0 R4 ; R0 := R4
	1230	[6266]	MOVE     	R0 R27 ; R0 := R27
	1231	[6279]	CLOSURE  	R168 130 ; R168 := closure(Function #131)
	1232	[6279]	MOVE     	R0 R7 ; R0 := R7
	1233	[6281]	GETGLOBAL	R169 K159 ; R169 := mRailJack
	1234	[6281]	LOADK    	R170 K334 ; R170 := "IntersectVoidPlane"
	1235	[6293]	CLOSURE  	R171 131 ; R171 := closure(Function #132)
	1236	[6293]	MOVE     	R0 R27 ; R0 := R27
	1237	[6293]	SETTABLE 	R169 R170 R171 ; R169[R170] := R171
	1238	[6295]	GETGLOBAL	R169 K159 ; R169 := mRailJack
	1239	[6295]	LOADK    	R170 K335 ; R170 := "SetDistortions"
	1240	[6309]	CLOSURE  	R171 132 ; R171 := closure(Function #133)
	1241	[6309]	SETTABLE 	R169 R170 R171 ; R169[R170] := R171
	1242	[6768]	CLOSURE  	R169 133 ; R169 := closure(Function #134)
	1243	[6768]	MOVE     	R0 R36 ; R0 := R36
	1244	[6768]	MOVE     	R0 R2 ; R0 := R2
	1245	[6768]	MOVE     	R0 R7 ; R0 := R7
	1246	[6768]	MOVE     	R0 R34 ; R0 := R34
	1247	[6768]	MOVE     	R0 R27 ; R0 := R27
	1248	[6768]	MOVE     	R0 R41 ; R0 := R41
	1249	[6768]	MOVE     	R0 R42 ; R0 := R42
	1250	[6768]	MOVE     	R0 R4 ; R0 := R4
	1251	[6768]	MOVE     	R0 R5 ; R0 := R5
	1252	[6768]	MOVE     	R0 R3 ; R0 := R3
	1253	[6768]	MOVE     	R0 R68 ; R0 := R68
	1254	[6768]	MOVE     	R0 R8 ; R0 := R8
	1255	[6768]	MOVE     	R0 R91 ; R0 := R91
	1256	[6768]	MOVE     	R0 R167 ; R0 := R167
	1257	[6768]	MOVE     	R0 R16 ; R0 := R16
	1258	[6768]	MOVE     	R0 R153 ; R0 := R153
	1259	[6768]	MOVE     	R0 R11 ; R0 := R11
	1260	[6768]	MOVE     	R0 R48 ; R0 := R48
	1261	[6768]	MOVE     	R0 R49 ; R0 := R49
	1262	[6768]	MOVE     	R0 R32 ; R0 := R32
	1263	[6768]	MOVE     	R0 R134 ; R0 := R134
	1264	[6768]	MOVE     	R0 R159 ; R0 := R159
	1265	[6768]	MOVE     	R0 R154 ; R0 := R154
	1266	[6768]	MOVE     	R0 R164 ; R0 := R164
	1267	[6768]	MOVE     	R0 R166 ; R0 := R166
	1268	[6768]	MOVE     	R0 R79 ; R0 := R79
	1269	[6768]	MOVE     	R0 R38 ; R0 := R38
	1270	[6768]	MOVE     	R0 R19 ; R0 := R19
	1271	[6768]	MOVE     	R0 R18 ; R0 := R18
	1272	[6768]	MOVE     	R0 R121 ; R0 := R121
	1273	[6768]	MOVE     	R0 R39 ; R0 := R39
	1274	[6768]	MOVE     	R0 R40 ; R0 := R40
	1275	[6768]	MOVE     	R0 R35 ; R0 := R35
	1276	[6768]	MOVE     	R0 R64 ; R0 := R64
	1277	[6768]	MOVE     	R0 R168 ; R0 := R168
	1278	[6768]	MOVE     	R0 R60 ; R0 := R60
	1279	[6768]	MOVE     	R0 R67 ; R0 := R67
	1280	[6768]	MOVE     	R0 R15 ; R0 := R15
	1281	[6768]	MOVE     	R0 R56 ; R0 := R56
	1282	[6311]	SETGLOBAL	R169 K336 ; Update := R169
	1283	[6855]	CLOSURE  	R51 134 ; R51 := closure(Function #135)
	1284	[6855]	MOVE     	R0 R3 ; R0 := R3
	1285	[6855]	MOVE     	R0 R59 ; R0 := R59
	1286	[6855]	MOVE     	R0 R4 ; R0 := R4
	1287	[6855]	MOVE     	R0 R25 ; R0 := R25
	1288	[6855]	MOVE     	R0 R24 ; R0 := R24
	1289	[6855]	MOVE     	R0 R81 ; R0 := R81
	1290	[6855]	MOVE     	R0 R27 ; R0 := R27
	1291	[6855]	MOVE     	R0 R150 ; R0 := R150
	1292	[6855]	MOVE     	R0 R38 ; R0 := R38
	1293	[6855]	MOVE     	R0 R44 ; R0 := R44
	1294	[6855]	MOVE     	R0 R151 ; R0 := R151
	1295	[6859]	CLOSURE  	R169 135 ; R169 := closure(Function #136)
	1296	[6859]	MOVE     	R0 R51 ; R0 := R51
	1297	[6857]	SETGLOBAL	R169 K337 ; TransitionOut := R169
	1298	[6873]	CLOSURE  	R169 136 ; R169 := closure(Function #137)
	1299	[6923]	CLOSURE  	R170 137 ; R170 := closure(Function #138)
	1300	[6923]	MOVE     	R0 R67 ; R0 := R67
	1301	[6923]	MOVE     	R0 R4 ; R0 := R4
	1302	[6923]	MOVE     	R0 R27 ; R0 := R27
	1303	[6923]	MOVE     	R0 R15 ; R0 := R15
	1304	[6923]	MOVE     	R0 R20 ; R0 := R20
	1305	[6923]	MOVE     	R0 R25 ; R0 := R25
	1306	[6923]	MOVE     	R0 R24 ; R0 := R24
	1307	[6923]	MOVE     	R0 R26 ; R0 := R26
	1308	[6927]	CLOSURE  	R171 138 ; R171 := closure(Function #139)
	1309	[6927]	MOVE     	R0 R170 ; R0 := R170
	1310	[6925]	SETGLOBAL	R171 K338 ; onKeyUp_MENU_CLICK := R171
	1311	[6949]	CLOSURE  	R50 139 ; R50 := closure(Function #140)
	1312	[6974]	CLOSURE  	R171 140 ; R171 := closure(Function #141)
	1313	[6986]	CLOSURE  	R172 141 ; R172 := closure(Function #142)
	1314	[6986]	MOVE     	R0 R109 ; R0 := R109
	1315	[7047]	CLOSURE  	R49 142 ; R49 := closure(Function #143)
	1316	[7047]	MOVE     	R0 R156 ; R0 := R156
	1317	[7047]	MOVE     	R0 R172 ; R0 := R172
	1318	[7047]	MOVE     	R0 R50 ; R0 := R50
	1319	[7047]	MOVE     	R0 R14 ; R0 := R14
	1320	[7047]	MOVE     	R0 R27 ; R0 := R27
	1321	[7047]	MOVE     	R0 R60 ; R0 := R60
	1322	[7047]	MOVE     	R0 R42 ; R0 := R42
	1323	[7047]	MOVE     	R0 R33 ; R0 := R33
	1324	[7115]	CLOSURE  	R48 143 ; R48 := closure(Function #144)
	1325	[7115]	MOVE     	R0 R156 ; R0 := R156
	1326	[7115]	MOVE     	R0 R172 ; R0 := R172
	1327	[7115]	MOVE     	R0 R27 ; R0 := R27
	1328	[7115]	MOVE     	R0 R50 ; R0 := R50
	1329	[7115]	MOVE     	R0 R42 ; R0 := R42
	1330	[7123]	CLOSURE  	R173 144 ; R173 := closure(Function #145)
	1331	[7117]	SETGLOBAL	R173 K339 ; OnEmblemReady := R173
	1332	[7127]	CLOSURE  	R173 145 ; R173 := closure(Function #146)
	1333	[7125]	SETGLOBAL	R173 K340 ; LoadClanEmblem := R173
	1334	[7214]	CLOSURE  	R173 146 ; R173 := closure(Function #147)
	1335	[7214]	MOVE     	R0 R99 ; R0 := R99
	1336	[7214]	MOVE     	R0 R7 ; R0 := R7
	1337	[7214]	MOVE     	R0 R25 ; R0 := R25
	1338	[7214]	MOVE     	R0 R24 ; R0 := R24
	1339	[7214]	MOVE     	R0 R77 ; R0 := R77
	1340	[7214]	MOVE     	R0 R36 ; R0 := R36
	1341	[7214]	MOVE     	R0 R152 ; R0 := R152
	1342	[7214]	MOVE     	R0 R27 ; R0 := R27
	1343	[7214]	MOVE     	R0 R91 ; R0 := R91
	1344	[7214]	MOVE     	R0 R167 ; R0 := R167
	1345	[7214]	MOVE     	R0 R35 ; R0 := R35
	1346	[7214]	MOVE     	R0 R16 ; R0 := R16
	1347	[7214]	MOVE     	R0 R8 ; R0 := R8
	1348	[7214]	MOVE     	R0 R13 ; R0 := R13
	1349	[7214]	MOVE     	R0 R67 ; R0 := R67
	1350	[7275]	CLOSURE  	R59 147 ; R59 := closure(Function #148)
	1351	[7275]	MOVE     	R0 R67 ; R0 := R67
	1352	[7275]	MOVE     	R0 R7 ; R0 := R7
	1353	[7275]	MOVE     	R0 R99 ; R0 := R99
	1354	[7275]	MOVE     	R0 R36 ; R0 := R36
	1355	[7275]	MOVE     	R0 R19 ; R0 := R19
	1356	[7275]	MOVE     	R0 R4 ; R0 := R4
	1357	[7285]	CLOSURE  	R174 148 ; R174 := closure(Function #149)
	1358	[7285]	MOVE     	R0 R67 ; R0 := R67
	1359	[7287]	LOADK    	R175 K300 ; R175 := "HandleMenuClick"
	1360	[7500]	CLOSURE  	R176 149 ; R176 := closure(Function #150)
	1361	[7500]	MOVE     	R0 R3 ; R0 := R3
	1362	[7500]	MOVE     	R0 R29 ; R0 := R29
	1363	[7500]	MOVE     	R0 R102 ; R0 := R102
	1364	[7500]	MOVE     	R0 R18 ; R0 := R18
	1365	[7500]	MOVE     	R0 R27 ; R0 := R27
	1366	[7500]	MOVE     	R0 R4 ; R0 := R4
	1367	[7500]	MOVE     	R0 R67 ; R0 := R67
	1368	[7500]	MOVE     	R0 R59 ; R0 := R59
	1369	[7500]	MOVE     	R0 R25 ; R0 := R25
	1370	[7500]	MOVE     	R0 R24 ; R0 := R24
	1371	[7500]	MOVE     	R0 R26 ; R0 := R26
	1372	[7500]	MOVE     	R0 R155 ; R0 := R155
	1373	[7500]	MOVE     	R0 R7 ; R0 := R7
	1374	[7500]	MOVE     	R0 R22 ; R0 := R22
	1375	[7500]	MOVE     	R0 R78 ; R0 := R78
	1376	[7500]	MOVE     	R0 R20 ; R0 := R20
	1377	[7500]	MOVE     	R0 R21 ; R0 := R21
	1378	[7500]	MOVE     	R0 R169 ; R0 := R169
	1379	[7500]	MOVE     	R0 R49 ; R0 := R49
	1380	[7500]	MOVE     	R0 R15 ; R0 := R15
	1381	[7500]	MOVE     	R0 R57 ; R0 := R57
	1382	[7500]	SETTABLE 	R67 R175 R176 ; R67[R175] := R176
	1383	[7503]	LOADK    	R175 K303 ; R175 := "CloseJunctionDialog"
	1384	[7510]	CLOSURE  	R176 150 ; R176 := closure(Function #151)
	1385	[7510]	MOVE     	R0 R4 ; R0 := R4
	1386	[7510]	MOVE     	R0 R67 ; R0 := R67
	1387	[7510]	SETTABLE 	R67 R175 R176 ; R67[R175] := R176
	1388	[7513]	LOADK    	R175 K301 ; R175 := "ShowInfoTip"
	1389	[7524]	CLOSURE  	R176 151 ; R176 := closure(Function #152)
	1390	[7524]	MOVE     	R0 R167 ; R0 := R167
	1391	[7524]	MOVE     	R0 R67 ; R0 := R67
	1392	[7524]	MOVE     	R0 R60 ; R0 := R60
	1393	[7524]	SETTABLE 	R67 R175 R176 ; R67[R175] := R176
	1394	[7527]	LOADK    	R175 K302 ; R175 := "HideInfoTip"
	1395	[7544]	CLOSURE  	R176 152 ; R176 := closure(Function #153)
	1396	[7544]	MOVE     	R0 R4 ; R0 := R4
	1397	[7544]	MOVE     	R0 R67 ; R0 := R67
	1398	[7544]	MOVE     	R0 R60 ; R0 := R60
	1399	[7544]	SETTABLE 	R67 R175 R176 ; R67[R175] := R176
	1400	[7546]	LOADK    	R175 K299 ; R175 := "MapZoom"
	1401	[7588]	CLOSURE  	R176 153 ; R176 := closure(Function #154)
	1402	[7588]	MOVE     	R0 R25 ; R0 := R25
	1403	[7588]	MOVE     	R0 R24 ; R0 := R24
	1404	[7588]	MOVE     	R0 R69 ; R0 := R69
	1405	[7588]	MOVE     	R0 R27 ; R0 := R27
	1406	[7588]	MOVE     	R0 R49 ; R0 := R49
	1407	[7588]	MOVE     	R0 R51 ; R0 := R51
	1408	[7588]	SETTABLE 	R67 R175 R176 ; R67[R175] := R176
	1409	[7590]	LOADK    	R175 K298 ; R175 := "NodeClick"
	1410	[7612]	CLOSURE  	R176 154 ; R176 := closure(Function #155)
	1411	[7612]	MOVE     	R0 R23 ; R0 := R23
	1412	[7612]	MOVE     	R0 R48 ; R0 := R48
	1413	[7612]	MOVE     	R0 R27 ; R0 := R27
	1414	[7612]	MOVE     	R0 R67 ; R0 := R67
	1415	[7612]	MOVE     	R0 R153 ; R0 := R153
	1416	[7612]	SETTABLE 	R67 R175 R176 ; R67[R175] := R176
	1417	[7616]	CLOSURE  	R175 155 ; R175 := closure(Function #156)
	1418	[7616]	MOVE     	R0 R174 ; R0 := R174
	1419	[7614]	SETGLOBAL	R175 K341 ; onKeyDown_MENU_CLICK := R175
	1420	[7628]	CLOSURE  	R175 156 ; R175 := closure(Function #157)
	1421	[7628]	MOVE     	R0 R174 ; R0 := R174
	1422	[7618]	SETGLOBAL	R175 K342 ; onKeyDown_MENU_SELECT := R175
	1423	[7637]	CLOSURE  	R175 157 ; R175 := closure(Function #158)
	1424	[7637]	MOVE     	R0 R170 ; R0 := R170
	1425	[7630]	SETGLOBAL	R175 K343 ; onKeyUp_MENU_SELECT := R175
	1426	[7647]	CLOSURE  	R175 158 ; R175 := closure(Function #159)
	1427	[7647]	MOVE     	R0 R20 ; R0 := R20
	1428	[7639]	SETGLOBAL	R175 K344 ; onKeyUp_MENU_RIGHT_CLICK := R175
	1429	[7651]	CLOSURE  	R175 159 ; R175 := closure(Function #160)
	1430	[7649]	SETGLOBAL	R175 K345 ; onKeyDown_HIDE_PAUSE_MENU := R175
	1431	[7696]	CLOSURE  	R175 160 ; R175 := closure(Function #161)
	1432	[7696]	MOVE     	R0 R3 ; R0 := R3
	1433	[7696]	MOVE     	R0 R20 ; R0 := R20
	1434	[7696]	MOVE     	R0 R27 ; R0 := R27
	1435	[7696]	MOVE     	R0 R156 ; R0 := R156
	1436	[7696]	MOVE     	R0 R67 ; R0 := R67
	1437	[7696]	MOVE     	R0 R59 ; R0 := R59
	1438	[7696]	MOVE     	R0 R42 ; R0 := R42
	1439	[7696]	MOVE     	R0 R43 ; R0 := R43
	1440	[7696]	MOVE     	R0 R60 ; R0 := R60
	1441	[7653]	SETGLOBAL	R175 K346 ; onKeyDown_MENU_RIGHT_CLICK := R175
	1442	[7700]	CLOSURE  	R175 161 ; R175 := closure(Function #162)
	1443	[7698]	SETGLOBAL	R175 K347 ; onKeyUp_NEXT_MENU := R175
	1444	[7704]	CLOSURE  	R175 162 ; R175 := closure(Function #163)
	1445	[7702]	SETGLOBAL	R175 K348 ; onKeyDown_NEXT_MENU := R175
	1446	[7708]	CLOSURE  	R175 163 ; R175 := closure(Function #164)
	1447	[7708]	MOVE     	R0 R67 ; R0 := R67
	1448	[7706]	SETGLOBAL	R175 K349 ; onKeyDown_MENU_MOUSE_Z := R175
	1449	[7713]	CLOSURE  	R175 164 ; R175 := closure(Function #165)
	1450	[7713]	MOVE     	R0 R67 ; R0 := R67
	1451	[7710]	SETGLOBAL	R175 K350 ; onKeyDown_MENU_PINCH_DELTA := R175
	1452	[7826]	CLOSURE  	R175 165 ; R175 := closure(Function #166)
	1453	[7826]	MOVE     	R0 R27 ; R0 := R27
	1454	[7826]	MOVE     	R0 R67 ; R0 := R67
	1455	[7826]	MOVE     	R0 R23 ; R0 := R23
	1456	[7826]	MOVE     	R0 R22 ; R0 := R22
	1457	[7826]	MOVE     	R0 R25 ; R0 := R25
	1458	[7826]	MOVE     	R0 R24 ; R0 := R24
	1459	[7826]	MOVE     	R0 R141 ; R0 := R141
	1460	[7826]	MOVE     	R0 R76 ; R0 := R76
	1461	[7826]	MOVE     	R0 R81 ; R0 := R81
	1462	[7826]	MOVE     	R0 R26 ; R0 := R26
	1463	[7826]	MOVE     	R0 R78 ; R0 := R78
	1464	[7826]	MOVE     	R0 R129 ; R0 := R129
	1465	[7826]	MOVE     	R0 R49 ; R0 := R49
	1466	[7826]	MOVE     	R0 R79 ; R0 := R79
	1467	[7826]	MOVE     	R0 R3 ; R0 := R3
	1468	[7715]	SETGLOBAL	R175 K351 ; onRawInputEvent := R175
	1469	[7830]	CLOSURE  	R175 166 ; R175 := closure(Function #167)
	1470	[7830]	MOVE     	R0 R173 ; R0 := R173
	1471	[7828]	SETGLOBAL	R175 K352 ; NodeRollOver := R175
	1472	[7834]	CLOSURE  	R175 167 ; R175 := closure(Function #168)
	1473	[7834]	MOVE     	R0 R59 ; R0 := R59
	1474	[7832]	SETGLOBAL	R175 K353 ; NodeRollOut := R175
	1475	[7845]	CLOSURE  	R175 168 ; R175 := closure(Function #169)
	1476	[7845]	MOVE     	R0 R7 ; R0 := R7
	1477	[7836]	SETGLOBAL	R175 K354 ; NodeSelect := R175
	1478	[7850]	CLOSURE  	R175 169 ; R175 := closure(Function #170)
	1479	[7850]	MOVE     	R0 R3 ; R0 := R3
	1480	[7847]	SETGLOBAL	R175 K355 ; WorldStateWindowVisChanged := R175
	1481	[7856]	CLOSURE  	R175 170 ; R175 := closure(Function #171)
	1482	[7856]	MOVE     	R0 R3 ; R0 := R3
	1483	[7856]	MOVE     	R0 R60 ; R0 := R60
	1484	[7852]	SETGLOBAL	R175 K356 ; WSWDioramaChanged := R175
	1485	[7864]	CLOSURE  	R175 171 ; R175 := closure(Function #172)
	1486	[7864]	MOVE     	R0 R70 ; R0 := R70
	1487	[7864]	MOVE     	R0 R2 ; R0 := R2
	1488	[7864]	MOVE     	R0 R164 ; R0 := R164
	1489	[7858]	SETGLOBAL	R175 K357 ; onViewportSizeChanged := R175
	1490	[7871]	CLOSURE  	R175 172 ; R175 := closure(Function #173)
	1491	[7871]	MOVE     	R0 R36 ; R0 := R36
	1492	[7871]	MOVE     	R0 R2 ; R0 := R2
	1493	[7866]	SETGLOBAL	R175 K358 ; ForceUpdate3DElements := R175
	1494	[7875]	CLOSURE  	R175 173 ; R175 := closure(Function #174)
	1495	[7873]	SETGLOBAL	R175 K359 ; IsInputBlocked := R175
	1496	[7880]	CLOSURE  	R175 174 ; R175 := closure(Function #175)
	1497	[7877]	SETGLOBAL	R175 K360 ; SetTrigger := R175
	1498	[7905]	CLOSURE  	R175 175 ; R175 := closure(Function #176)
	1499	[7905]	MOVE     	R0 R29 ; R0 := R29
	1500	[7905]	MOVE     	R0 R7 ; R0 := R7
	1501	[7905]	MOVE     	R0 R61 ; R0 := R61
	1502	[7882]	SETGLOBAL	R175 K361 ; OnQuestsChanged := R175
	1503	[7929]	CLOSURE  	R175 176 ; R175 := closure(Function #177)
	1504	[7929]	MOVE     	R0 R8 ; R0 := R8
	1505	[7929]	MOVE     	R0 R115 ; R0 := R115
	1506	[7907]	SETGLOBAL	R175 K362 ; OnWorldStateChanged := R175
	1507	[7951]	CLOSURE  	R175 177 ; R175 := closure(Function #178)
	1508	[7951]	MOVE     	R0 R8 ; R0 := R8
	1509	[7931]	SETGLOBAL	R175 K363 ; PulseInvasionNodes := R175
	1510	[7953]	GETGLOBAL	R175 K364 ; R175 := _T
	1511	[7953]	LOADK    	R176 K365 ; R176 := "RadialSolarMapFade"
	1512	[8007]	CLOSURE  	R177 178 ; R177 := closure(Function #179)
	1513	[8007]	MOVE     	R0 R171 ; R0 := R171
	1514	[8007]	MOVE     	R0 R2 ; R0 := R2
	1515	[8007]	MOVE     	R0 R38 ; R0 := R38
	1516	[8007]	SETTABLE 	R175 R176 R177 ; R175[R176] := R177
	1517	[8014]	CLOSURE  	R175 179 ; R175 := closure(Function #180)
	1518	[8014]	MOVE     	R0 R60 ; R0 := R60
	1519	[8009]	SETGLOBAL	R175 K366 ; PlayersChanged := R175
	1520	[8018]	CLOSURE  	R175 180 ; R175 := closure(Function #181)
	1521	[8018]	MOVE     	R0 R64 ; R0 := R64
	1522	[8016]	SETGLOBAL	R175 K367 ; OnSquadMissionChanged := R175
	1523	[8033]	CLOSURE  	R175 181 ; R175 := closure(Function #182)
	1524	[8033]	MOVE     	R0 R27 ; R0 := R27
	1525	[8020]	SETGLOBAL	R175 K368 ; OnLoadoutChanged := R175
	1526	[8038]	CLOSURE  	R175 182 ; R175 := closure(Function #183)
	1527	[8038]	MOVE     	R0 R60 ; R0 := R60
	1528	[8038]	MOVE     	R0 R131 ; R0 := R131
	1529	[8035]	SETGLOBAL	R175 K369 ; OnGamepadTransition := R175
	1530	[8042]	CLOSURE  	R175 183 ; R175 := closure(Function #184)
	1531	[8040]	SETGLOBAL	R175 K370 ; SupportsThemes := R175
	1532	[8046]	CLOSURE  	R175 184 ; R175 := closure(Function #185)
	1533	[8044]	SETGLOBAL	R175 K371 ; OnMatchMakingModeChanged := R175
	1534	[8052]	CLOSURE  	R175 185 ; R175 := closure(Function #186)
	1535	[8048]	SETGLOBAL	R175 K372 ; EntryFocused := R175
	1536	[8058]	CLOSURE  	R175 186 ; R175 := closure(Function #187)
	1537	[8054]	SETGLOBAL	R175 K373 ; EntryUnfocused := R175
	1538	[8064]	CLOSURE  	R175 187 ; R175 := closure(Function #188)
	1539	[8060]	SETGLOBAL	R175 K374 ; EntryPressed := R175
	1540	[8070]	CLOSURE  	R175 188 ; R175 := closure(Function #189)
	1541	[8070]	MOVE     	R0 R16 ; R0 := R16
	1542	[8066]	SETGLOBAL	R175 K375 ; DifficultySelectorFocused := R175
	1543	[8076]	CLOSURE  	R175 189 ; R175 := closure(Function #190)
	1544	[8076]	MOVE     	R0 R16 ; R0 := R16
	1545	[8072]	SETGLOBAL	R175 K376 ; DifficultySelectorUnfocused := R175
	1546	[8082]	CLOSURE  	R175 190 ; R175 := closure(Function #191)
	1547	[8082]	MOVE     	R0 R16 ; R0 := R16
	1548	[8078]	SETGLOBAL	R175 K377 ; DifficultySelectorPressed := R175
	1549	[8087]	CLOSURE  	R175 191 ; R175 := closure(Function #192)
	1550	[8087]	MOVE     	R0 R36 ; R0 := R36
	1551	[8087]	MOVE     	R0 R16 ; R0 := R16
	1552	[8087]	MOVE     	R0 R35 ; R0 := R35
	1553	[8084]	SETGLOBAL	R175 K378 ; DifficultySelectorExpand := R175
	1554	[8092]	CLOSURE  	R175 192 ; R175 := closure(Function #193)
	1555	[8092]	MOVE     	R0 R36 ; R0 := R36
	1556	[8092]	MOVE     	R0 R16 ; R0 := R16
	1557	[8092]	MOVE     	R0 R35 ; R0 := R35
	1558	[8089]	SETGLOBAL	R175 K379 ; DifficultySelectorCollapse := R175
	1559	[8100]	CLOSURE  	R175 193 ; R175 := closure(Function #194)
	1560	[8100]	MOVE     	R0 R59 ; R0 := R59
	1561	[8094]	SETGLOBAL	R175 K380 ; ClickBlockerClicked := R175
	1562	[8107]	CLOSURE  	R61 194 ; R61 := closure(Function #195)
	1563	[8107]	MOVE     	R0 R117 ; R0 := R117
	1564	[8107]	MOVE     	R0 R119 ; R0 := R119
	1565	[8107]	MOVE     	R0 R120 ; R0 := R120
	1566	[8107]	MOVE     	R0 R129 ; R0 := R129
	1567	[8107]	RETURN   	R0 1 ; return 


function #1 <?:369,401> (124 instructions, 496 bytes at 0000021121352670)
0 params, 18 slots, 3 upvalues, 0 locals, 32 constants, 0 functions
	1	[370]	GETGLOBAL	R0 K0 ; R0 := mHover
	2	[370]	GETTABLE 	R0 R0 K1 ; R0 := R0["Node"]
	3	[370]	EQ       	0 R0 K2 ; if R0 ~= nil then PC := 10
	4	[370]	JMP      	10 ; PC := 10
	5	[370]	GETGLOBAL	R0 K0 ; R0 := mHover
	6	[370]	GETTABLE 	R0 R0 K3 ; R0 := R0["Region"]
	7	[370]	EQ       	0 R0 K2 ; if R0 ~= nil then PC := 10
	8	[370]	JMP      	10 ; PC := 10
	9	[370]	OP_LOADBOOL	R0 0 1 ; R0 := false; PC := 10
	10	[370]	OP_LOADBOOL	R0 1 0 ; R0 := true
	11	[371]	GETGLOBAL	R1 K4 ; R1 := 0xa421af95
	12	[371]	CALL     	R1 1 2 ; R1 := R1()
	13	[373]	GETGLOBAL	R2 K0 ; R2 := mHover
	14	[373]	GETTABLE 	R2 R2 K1 ; R2 := R2["Node"]
	15	[373]	EQ       	1 R2 K2 ; if R2 == nil then PC := 32
	16	[373]	JMP      	32 ; PC := 32
	17	[374]	GETUPVAL 	R2 U0 ; R2 := U0
	18	[374]	GETTABLE 	R2 R2 K5 ; R2 := R2[0xb5be5d4a]
	19	[374]	GETGLOBAL	R3 K6 ; R3 := 0xae91e43b
	20	[374]	GETGLOBAL	R4 K0 ; R4 := mHover
	21	[374]	GETTABLE 	R4 R4 K1 ; R4 := R4["Node"]
	22	[374]	GETTABLE 	R4 R4 K7 ; R4 := R4["clipName"]
	23	[374]	CALL     	R2 3 3 ; R2,R3 := R2(R3,R4)
	24	[375]	GETUPVAL 	R4 U0 ; R4 := U0
	25	[375]	GETTABLE 	R4 R4 K8 ; R4 := R4[0x6d7e6810]
	26	[375]	GETGLOBAL	R5 K6 ; R5 := 0xae91e43b
	27	[375]	NEWTABLE 	R6 0 2 ; R6 := {}
	28	[375]	SETTABLE 	R6 K9 R2 ; R6["x"] := R2
	29	[375]	SETTABLE 	R6 K10 R3 ; R6["y"] := R3
	30	[375]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	31	[375]	MOVE     	R1 R4 ; R1 := R4
	32	[378]	GETGLOBAL	R4 K0 ; R4 := mHover
	33	[378]	GETTABLE 	R4 R4 K3 ; R4 := R4["Region"]
	34	[378]	EQ       	1 R4 K2 ; if R4 == nil then PC := 62
	35	[378]	JMP      	62 ; PC := 62
	36	[378]	GETGLOBAL	R4 K11 ; R4 := 0x7b998233
	37	[378]	GETGLOBAL	R5 K0 ; R5 := mHover
	38	[378]	GETTABLE 	R5 R5 K3 ; R5 := R5["Region"]
	39	[378]	GETTABLE 	R5 R5 K12 ; R5 := R5["instance"]
	40	[378]	CALL     	R4 2 2 ; R4 := R4(R5)
	41	[378]	TEST     	R4 1 ; if R4 then PC := 62
	42	[378]	JMP      	62 ; PC := 62
	43	[379]	GETGLOBAL	R4 K0 ; R4 := mHover
	44	[379]	GETTABLE 	R4 R4 K3 ; R4 := R4["Region"]
	45	[379]	GETTABLE 	R4 R4 K12 ; R4 := R4["instance"]
	46	[379]	SELF     	R4 R4 K13 ; R5 := R4; R4 := R4[0xd1586535]
	47	[379]	CALL     	R4 2 2 ; R4 := R4(R5)
	48	[380]	GETGLOBAL	R5 K6 ; R5 := 0xae91e43b
	49	[380]	SELF     	R5 R5 K14 ; R6 := R5; R5 := R5[0x28209ddc]
	50	[380]	MOVE     	R7 R4 ; R7 := R4
	51	[380]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	52	[381]	GETUPVAL 	R6 U0 ; R6 := U0
	53	[381]	GETTABLE 	R6 R6 K8 ; R6 := R6[0x6d7e6810]
	54	[381]	GETGLOBAL	R7 K6 ; R7 := 0xae91e43b
	55	[381]	NEWTABLE 	R8 0 2 ; R8 := {}
	56	[381]	GETTABLE 	R9 R5 K9 ; R9 := R5["x"]
	57	[381]	SETTABLE 	R8 K9 R9 ; R8["x"] := R9
	58	[381]	GETTABLE 	R9 R5 K10 ; R9 := R5["y"]
	59	[381]	SETTABLE 	R8 K10 R9 ; R8["y"] := R9
	60	[381]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	61	[381]	MOVE     	R1 R6 ; R1 := R6
	62	[384]	NEWTABLE 	R6 0 2 ; R6 := {}
	63	[384]	SETTABLE 	R6 K15 K16 ; R6["outer"] := 0.060000
	64	[384]	SETTABLE 	R6 K17 K18 ; R6["inner"] := 0.020000
	65	[385]	LOADK    	R7 := 0.000000
	66	[386]	GETUPVAL 	R8 U0 ; R8 := U0
	67	[386]	GETTABLE 	R8 R8 K19 ; R8 := R8[0x06d055f9]
	68	[386]	GETGLOBAL	R9 K20 ; R9 := mZoomedRegion
	69	[386]	GETUPVAL 	R10 U1 ; R10 := U1
	70	[386]	GETTABLE 	R10 R10 K21 ; R10 := R10["ZoomedMultiplier"]
	71	[386]	GETUPVAL 	R11 U1 ; R11 := U1
	72	[386]	GETTABLE 	R11 R11 K22 ; R11 := R11["SpaceMultiplier"]
	73	[386]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	74	[388]	GETUPVAL 	R9 U2 ; R9 := U2
	75	[388]	SETTABLE 	R9 K23 R8 ; R9["SpeedMultiplier"] := R8
	76	[389]	TEST     	R0 0 ; if not R0 then PC := 124
	77	[389]	JMP      	124 ; PC := 124
	78	[390]	GETUPVAL 	R9 U0 ; R9 := U0
	79	[390]	GETTABLE 	R9 R9 K19 ; R9 := R9[0x06d055f9]
	80	[390]	GETGLOBAL	R10 K20 ; R10 := mZoomedRegion
	81	[390]	GETUPVAL 	R11 U1 ; R11 := U1
	82	[390]	GETTABLE 	R11 R11 K24 ; R11 := R11["ZoomedHoveringMultiplier"]
	83	[390]	GETUPVAL 	R12 U1 ; R12 := U1
	84	[390]	GETTABLE 	R12 R12 K25 ; R12 := R12["SpaceHoveringMultiplier"]
	85	[390]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	86	[391]	GETUPVAL 	R10 U0 ; R10 := U0
	87	[391]	GETTABLE 	R10 R10 K26 ; R10 := R10[0xfa9785e4]
	88	[391]	GETGLOBAL	R11 K6 ; R11 := 0xae91e43b
	89	[391]	CALL     	R10 2 2 ; R10 := R10(R11)
	90	[392]	GETUPVAL 	R11 U0 ; R11 := U0
	91	[392]	GETTABLE 	R11 R11 K8 ; R11 := R11[0x6d7e6810]
	92	[392]	GETGLOBAL	R12 K6 ; R12 := 0xae91e43b
	93	[392]	NEWTABLE 	R13 0 2 ; R13 := {}
	94	[392]	GETTABLE 	R14 R10 K9 ; R14 := R10["x"]
	95	[392]	SETTABLE 	R13 K9 R14 ; R13["x"] := R14
	96	[392]	GETTABLE 	R14 R10 K10 ; R14 := R10["y"]
	97	[392]	SETTABLE 	R13 K10 R14 ; R13["y"] := R14
	98	[392]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	99	[394]	GETGLOBAL	R12 K27 ; R12 := 0x5bced4c4
	100	[394]	GETTABLE 	R12 R12 K28 ; R12 := R12[0xb62ecfe0]
	101	[394]	GETGLOBAL	R13 K29 ; R13 := 0x03ea2485
	102	[394]	MOVE     	R14 R11 ; R14 := R11
	103	[394]	MOVE     	R15 R1 ; R15 := R1
	104	[394]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	105	[394]	GETTABLE 	R14 R6 K17 ; R14 := R6["inner"]
	106	[394]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	107	[394]	MOVE     	R7 R12 ; R7 := R12
	108	[396]	GETTABLE 	R12 R6 K15 ; R12 := R6["outer"]
	109	[396]	LE       	0 R7 R12 ; if R7 > R12 then PC := 124
	110	[396]	JMP      	124 ; PC := 124
	111	[397]	GETTABLE 	R12 R6 K17 ; R12 := R6["inner"]
	112	[397]	SUB      	R12 R7 R12 ; R12 := R7 - R12
	113	[397]	GETTABLE 	R13 R6 K15 ; R13 := R6["outer"]
	114	[397]	GETTABLE 	R14 R6 K17 ; R14 := R6["inner"]
	115	[397]	SUB      	R13 R13 R14 ; R13 := R13 - R14
	116	[397]	DIV      	R12 R12 R13 ; R12 := R12 / R13
	117	[398]	GETUPVAL 	R13 U2 ; R13 := U2
	118	[398]	GETGLOBAL	R14 K30 ; R14 := 0x9bafffe3
	119	[398]	MOVE     	R15 R8 ; R15 := R8
	120	[398]	MOVE     	R16 R9 ; R16 := R9
	121	[398]	SUB      	R17 K31 R12 ; R17 := 1.000000 - R12
	122	[398]	CALL     	R14 4 2 ; R14 := R14(R15,R16,R17)
	123	[398]	SETTABLE 	R13 K23 R14 ; R13["SpeedMultiplier"] := R14
	124	[401]	RETURN   	R0 1 ; return 

function #2 <?:403,408> (17 instructions, 68 bytes at 0000021121352700)
2 params, 6 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[404]	GETGLOBAL	R2 K0 ; R2 := _T
	2	[404]	GETTABLE 	R2 R2 K1 ; R2 := R2["MapInitLockCursor"]
	3	[404]	TEST     	R2 1 ; if R2 then PC := 17
	4	[404]	JMP      	17 ; PC := 17
	5	[405]	GETGLOBAL	R2 K2 ; R2 := 0x89326c93
	6	[405]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0xfb64e76c]
	7	[405]	CALL     	R2 2 2 ; R2 := R2(R3)
	8	[405]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0x014fd8c7]
	9	[405]	MOVE     	R4 R0 ; R4 := R0
	10	[405]	MOVE     	R5 R1 ; R5 := R1
	11	[405]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	12	[406]	GETGLOBAL	R2 K5 ; R2 := 0x9ba7909f
	13	[406]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0xab457eac]
	14	[406]	MOVE     	R4 R0 ; R4 := R0
	15	[406]	MOVE     	R5 R1 ; R5 := R1
	16	[406]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	17	[408]	RETURN   	R0 1 ; return 

function #3 <?:410,437> (133 instructions, 532 bytes at 000002111E62C770)
0 params, 7 slots, 4 upvalues, 0 locals, 27 constants, 0 functions
	1	[411]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[411]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	3	[411]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0x091c120e]
	4	[411]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[411]	SETTABLE 	R0 K0 R1 ; R0["MaxX"] := R1
	6	[412]	GETUPVAL 	R0 U0 ; R0 := U0
	7	[412]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	8	[412]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x2cc9d281]
	9	[412]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[412]	SETTABLE 	R0 K3 R1 ; R0["MaxY"] := R1
	11	[413]	GETUPVAL 	R0 U0 ; R0 := U0
	12	[413]	GETGLOBAL	R1 K5 ; R1 := 0x5bced4c4
	13	[413]	GETTABLE 	R1 R1 K6 ; R1 := R1[0xb62ecfe0]
	14	[413]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	15	[413]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0x6b837788]
	16	[413]	CALL     	R2 2 2 ; R2 := R2(R3)
	17	[413]	GETUPVAL 	R3 U0 ; R3 := U0
	18	[413]	GETTABLE 	R3 R3 K0 ; R3 := R3["MaxX"]
	19	[413]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	20	[413]	SETTABLE 	R0 K0 R1 ; R0["MaxX"] := R1
	21	[414]	GETUPVAL 	R0 U0 ; R0 := U0
	22	[414]	GETGLOBAL	R1 K5 ; R1 := 0x5bced4c4
	23	[414]	GETTABLE 	R1 R1 K6 ; R1 := R1[0xb62ecfe0]
	24	[414]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	25	[414]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0xaf9fda9f]
	26	[414]	CALL     	R2 2 2 ; R2 := R2(R3)
	27	[414]	GETUPVAL 	R3 U0 ; R3 := U0
	28	[414]	GETTABLE 	R3 R3 K3 ; R3 := R3["MaxY"]
	29	[414]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	30	[414]	SETTABLE 	R0 K3 R1 ; R0["MaxY"] := R1
	31	[415]	GETUPVAL 	R0 U0 ; R0 := U0
	32	[415]	GETUPVAL 	R1 U1 ; R1 := U1
	33	[415]	GETTABLE 	R1 R1 K10 ; R1 := R1[0x74a11ec6]
	34	[415]	GETUPVAL 	R2 U0 ; R2 := U0
	35	[415]	GETTABLE 	R2 R2 K0 ; R2 := R2["MaxX"]
	36	[415]	GETGLOBAL	R3 K11 ; R3 := 0x03f57322
	37	[415]	GETUPVAL 	R4 U0 ; R4 := U0
	38	[415]	GETTABLE 	R4 R4 K12 ; R4 := R4["MinX"]
	39	[415]	CALL     	R3 2 2 ; R3 := R3(R4)
	40	[415]	SUB      	R2 R2 R3 ; R2 := R2 - R3
	41	[415]	DIV      	R2 R2 K13 ; R2 := R2 / 2.000000
	42	[415]	CALL     	R1 2 2 ; R1 := R1(R2)
	43	[415]	SETTABLE 	R0 K9 R1 ; R0[0x00000001] := R1
	44	[416]	GETUPVAL 	R0 U0 ; R0 := U0
	45	[416]	GETUPVAL 	R1 U1 ; R1 := U1
	46	[416]	GETTABLE 	R1 R1 K10 ; R1 := R1[0x74a11ec6]
	47	[416]	GETUPVAL 	R2 U0 ; R2 := U0
	48	[416]	GETTABLE 	R2 R2 K3 ; R2 := R2["MaxY"]
	49	[416]	GETGLOBAL	R3 K11 ; R3 := 0x03f57322
	50	[416]	GETUPVAL 	R4 U0 ; R4 := U0
	51	[416]	GETTABLE 	R4 R4 K15 ; R4 := R4["MinY"]
	52	[416]	CALL     	R3 2 2 ; R3 := R3(R4)
	53	[416]	SUB      	R2 R2 R3 ; R2 := R2 - R3
	54	[416]	DIV      	R2 R2 K13 ; R2 := R2 / 2.000000
	55	[416]	CALL     	R1 2 2 ; R1 := R1(R2)
	56	[416]	SETTABLE 	R0 K14 R1 ; R0["Y"] := R1
	57	[418]	GETGLOBAL	R0 K1 ; R0 := 0xae91e43b
	58	[418]	SELF     	R0 R0 K16 ; R1 := R0; R0 := R0[0x67bc869f]
	59	[418]	LOADK    	R2 K17 ; R2 := "Reticle"
	60	[418]	LOADK    	R3 := 0.000000
	61	[418]	GETUPVAL 	R4 U0 ; R4 := U0
	62	[418]	GETTABLE 	R4 R4 K9 ; R4 := R4["X"]
	63	[418]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	64	[419]	GETGLOBAL	R0 K1 ; R0 := 0xae91e43b
	65	[419]	SELF     	R0 R0 K16 ; R1 := R0; R0 := R0[0x67bc869f]
	66	[419]	LOADK    	R2 K17 ; R2 := "Reticle"
	67	[419]	LOADK    	R3 := 1.000000
	68	[419]	GETUPVAL 	R4 U0 ; R4 := U0
	69	[419]	GETTABLE 	R4 R4 K14 ; R4 := R4["Y"]
	70	[419]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	71	[421]	GETGLOBAL	R0 K1 ; R0 := 0xae91e43b
	72	[421]	SELF     	R0 R0 K18 ; R1 := R0; R0 := R0[0xaade900e]
	73	[421]	LOADK    	R2 K17 ; R2 := "Reticle"
	74	[421]	LOADK    	R3 := 11.000000
	75	[421]	GETUPVAL 	R4 U0 ; R4 := U0
	76	[421]	GETTABLE 	R4 R4 K19 ; R4 := R4["IsVisible"]
	77	[421]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	78	[423]	GETUPVAL 	R0 U2 ; R0 := U2
	79	[423]	GETUPVAL 	R1 U0 ; R1 := U0
	80	[423]	GETTABLE 	R1 R1 K9 ; R1 := R1["X"]
	81	[423]	GETUPVAL 	R2 U0 ; R2 := U0
	82	[423]	GETTABLE 	R2 R2 K14 ; R2 := R2["Y"]
	83	[423]	CALL     	R0 3 1 ; R0(R1,R2)
	84	[425]	GETGLOBAL	R0 K20 ; R0 := 0x7b998233
	85	[425]	GETGLOBAL	R1 K21 ; R1 := mAnchorMgr
	86	[425]	CALL     	R0 2 2 ; R0 := R0(R1)
	87	[425]	TEST     	R0 1 ; if R0 then PC := 98
	88	[425]	JMP      	98 ; PC := 98
	89	[426]	GETGLOBAL	R0 K21 ; R0 := mAnchorMgr
	90	[426]	SELF     	R0 R0 K22 ; R1 := R0; R0 := R0[0xfaa69527]
	91	[426]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	92	[426]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0x6b837788]
	93	[426]	CALL     	R2 2 2 ; R2 := R2(R3)
	94	[426]	GETGLOBAL	R3 K1 ; R3 := 0xae91e43b
	95	[426]	SELF     	R3 R3 K8 ; R4 := R3; R3 := R3[0xaf9fda9f]
	96	[426]	CALL     	R3 2 0 ; R3,... := R3(R4)
	97	[426]	CALL     	R0 0 1 ; R0(R1,...)
	98	[429]	GETUPVAL 	R0 U3 ; R0 := U3
	99	[429]	GETUPVAL 	R1 U0 ; R1 := U0
	100	[429]	GETTABLE 	R1 R1 K0 ; R1 := R1["MaxX"]
	101	[429]	GETUPVAL 	R2 U0 ; R2 := U0
	102	[429]	GETTABLE 	R2 R2 K3 ; R2 := R2["MaxY"]
	103	[429]	DIV      	R1 R1 R2 ; R1 := R1 / R2
	104	[429]	SETTABLE 	R0 K23 R1 ; R0["AspectRatio"] := R1
	105	[431]	GETUPVAL 	R0 U1 ; R0 := U1
	106	[431]	GETTABLE 	R0 R0 K24 ; R0 := R0[0x44537adf]
	107	[431]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	108	[431]	CALL     	R0 2 3 ; R0,R1 := R0(R1)
	109	[432]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	110	[432]	SELF     	R2 R2 K16 ; R3 := R2; R2 := R2[0x67bc869f]
	111	[432]	LOADK    	R4 K25 ; R4 := "InfluenceMap"
	112	[432]	LOADK    	R5 := 12.000000
	113	[432]	MOVE     	R6 R0 ; R6 := R0
	114	[432]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	115	[433]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	116	[433]	SELF     	R2 R2 K16 ; R3 := R2; R2 := R2[0x67bc869f]
	117	[433]	LOADK    	R4 K25 ; R4 := "InfluenceMap"
	118	[433]	LOADK    	R5 := 13.000000
	119	[433]	MOVE     	R6 R1 ; R6 := R1
	120	[433]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	121	[435]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	122	[435]	SELF     	R2 R2 K16 ; R3 := R2; R2 := R2[0x67bc869f]
	123	[435]	LOADK    	R4 K26 ; R4 := "ClickBlocker"
	124	[435]	LOADK    	R5 := 12.000000
	125	[435]	MOVE     	R6 R0 ; R6 := R0
	126	[435]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	127	[436]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	128	[436]	SELF     	R2 R2 K16 ; R3 := R2; R2 := R2[0x67bc869f]
	129	[436]	LOADK    	R4 K26 ; R4 := "ClickBlocker"
	130	[436]	LOADK    	R5 := 13.000000
	131	[436]	MOVE     	R6 R1 ; R6 := R1
	132	[436]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	133	[437]	RETURN   	R0 1 ; return 

function #4 <?:439,443> (13 instructions, 52 bytes at 000002111E62C840)
0 params, 4 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[440]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[440]	GETGLOBAL	R1 K1 ; R1 := _T
	3	[440]	GETTABLE 	R1 R1 K2 ; R1 := R1["SquadOverlay"]
	4	[440]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[440]	TEST     	R0 1 ; if R0 then PC := 13
	6	[440]	JMP      	13 ; PC := 13
	7	[441]	GETGLOBAL	R0 K1 ; R0 := _T
	8	[441]	GETTABLE 	R0 R0 K2 ; R0 := R0["SquadOverlay"]
	9	[441]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0xe4162eed]
	10	[441]	LOADK    	R2 K4 ; R2 := "OpenInvite"
	11	[441]	LOADK    	R3 K5 ; R3 := ""
	12	[441]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	13	[443]	RETURN   	R0 1 ; return 

function #5 <?:445,463> (17 instructions, 68 bytes at 0000021114674060)
0 params, 3 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[446]	GETGLOBAL	R0 K0 ; R0 := 0x0032441c
	2	[446]	GETTABLE 	R0 R0 K1 ; R0 := R0["StalkerMode"]
	3	[446]	TEST     	R0 0 ; if not R0 then PC := 6
	4	[446]	JMP      	6 ; PC := 6
	5	[456]	RETURN   	R0 1 ; return 
	6	[459]	GETUPVAL 	R0 U0 ; R0 := U0
	7	[459]	GETTABLE 	R0 R0 K2 ; R0 := R0[0xa9882367]
	8	[459]	LOADK    	R1 K3 ; R1 := "SwitchLoadout"
	9	[459]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[460]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	11	[460]	MOVE     	R2 R0 ; R2 := R0
	12	[460]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[460]	TEST     	R1 1 ; if R1 then PC := 17
	14	[460]	JMP      	17 ; PC := 17
	15	[461]	SELF     	R1 R0 K5 ; R2 := R0; R1 := R0[0xd91e1179]
	16	[461]	CALL     	R1 2 1 ; R1(R2)
	17	[463]	RETURN   	R0 1 ; return 

function #6 <?:465,478> (20 instructions, 80 bytes at 0000021132CA5AD0)
1 param, 6 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[466]	GETGLOBAL	R1 K0 ; R1 := 0xa421af95
	2	[466]	GETTABLE 	R2 R0 K1 ; R2 := R0["x"]
	3	[466]	GETTABLE 	R3 R0 K2 ; R3 := R0["y"]
	4	[466]	GETTABLE 	R4 R0 K3 ; R4 := R0["z"]
	5	[466]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	6	[467]	LOADK    	R2 := 1.000000
	7	[468]	LOADK    	R3 := 1.000000
	8	[472]	LOADK    	R4 := 1.000000
	9	[473]	GETTABLE 	R5 R1 K1 ; R5 := R1["x"]
	10	[473]	MUL      	R5 R5 R4 ; R5 := R5 * R4
	11	[473]	MUL      	R5 R5 R2 ; R5 := R5 * R2
	12	[473]	SETTABLE 	R1 K1 R5 ; R1["x"] := R5
	13	[474]	GETTABLE 	R5 R1 K2 ; R5 := R1["y"]
	14	[474]	MUL      	R5 R5 R2 ; R5 := R5 * R2
	15	[474]	SETTABLE 	R1 K2 R5 ; R1["y"] := R5
	16	[475]	GETTABLE 	R5 R1 K3 ; R5 := R1["z"]
	17	[475]	MUL      	R5 R5 R3 ; R5 := R5 * R3
	18	[475]	SETTABLE 	R1 K3 R5 ; R1["z"] := R5
	19	[477]	RETURN   	R1 2 ; return R1 
	20	[478]	RETURN   	R0 1 ; return 

function #7 <?:480,495> (30 instructions, 120 bytes at 0000021134C0EB40)
0 params, 14 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[481]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[481]	GETGLOBAL	R1 K1 ; R1 := 0x3ad911b3
	3	[481]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[481]	TEST     	R0 0 ; if not R0 then PC := 7
	5	[481]	JMP      	7 ; PC := 7
	6	[482]	RETURN   	R0 1 ; return 
	7	[485]	LOADK    	R0 := 0.000000
	8	[485]	LOADK    	R1 := 63.000000
	9	[485]	LOADK    	R2 := 1.000000
	10	[485]	FORPREP  	R0 25 ; R0 -= R2; PC := 25
	11	[486]	LOADK    	R4 := 0.000000
	12	[486]	LOADK    	R5 := 63.000000
	13	[486]	LOADK    	R6 := 1.000000
	14	[486]	FORPREP  	R4 24 ; R4 -= R6; PC := 24
	15	[488]	LOADK    	R8 := 255.000000
	16	[489]	GETGLOBAL	R9 K1 ; R9 := 0x3ad911b3
	17	[489]	SELF     	R9 R9 K2 ; R10 := R9; R9 := R9[0x41f69f92]
	18	[489]	MOVE     	R11 R8 ; R11 := R8
	19	[489]	MOVE     	R12 R3 ; R12 := R3
	20	[489]	MOVE     	R13 R7 ; R13 := R7
	21	[489]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	22	[490]	GETGLOBAL	R9 K3 ; R9 := 0xce225efa
	23	[490]	CALL     	R9 1 1 ; R9()
	24	[486]	FORLOOP  	R4 15 ; R4 += R6; if R4 <= R5 then begin PC := 15; R7 := R4 end
	25	[485]	FORLOOP  	R0 11 ; R0 += R2; if R0 <= R1 then begin PC := 11; R3 := R0 end
	26	[494]	GETGLOBAL	R9 K4 ; R9 := 0x9ba7909f
	27	[494]	SELF     	R9 R9 K5 ; R10 := R9; R9 := R9[0xa085e6e7]
	28	[494]	GETGLOBAL	R11 K1 ; R11 := 0x3ad911b3
	29	[494]	CALL     	R9 3 1 ; R9(R10,R11)
	30	[495]	RETURN   	R0 1 ; return 

function #8 <?:497,531> (149 instructions, 596 bytes at 0000021160E553D0)
1 param, 11 slots, 5 upvalues, 0 locals, 45 constants, 0 functions
	1	[498]	LOADK    	R1 K0 ; R1 := ""
	2	[499]	GETTABLE 	R2 R0 K1 ; R2 := R0["guildId"]
	3	[499]	EQ       	0 R2 K2 ; if R2 ~= nil then PC := 127
	4	[499]	JMP      	127 ; PC := 127
	5	[500]	GETTABLE 	R1 R0 K3 ; R1 := R0["locName"]
	6	[501]	GETUPVAL 	R2 U0 ; R2 := U0
	7	[501]	GETUPVAL 	R3 U1 ; R3 := U1
	8	[501]	GETTABLE 	R3 R3 K4 ; R3 := R3["EDIT_NODES"]
	9	[501]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 16
	10	[501]	JMP      	16 ; PC := 16
	11	[501]	GETUPVAL 	R2 U0 ; R2 := U0
	12	[501]	GETUPVAL 	R3 U1 ; R3 := U1
	13	[501]	GETTABLE 	R3 R3 K5 ; R3 := R3["EDIT_EDGES"]
	14	[501]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 50
	15	[501]	JMP      	50 ; PC := 50
	16	[502]	MOVE     	R2 R1 ; R2 := R1
	17	[502]	LOADK    	R3 K6 ; R3 := "\r["
	18	[502]	GETGLOBAL	R4 K7 ; R4 := 0x64fb1586
	19	[502]	GETTABLE 	R5 R0 K8 ; R5 := R0["name"]
	20	[502]	CALL     	R4 2 2 ; R4 := R4(R5)
	21	[502]	LOADK    	R5 K9 ; R5 := "]"
	22	[502]	CONCAT   	R1 R2 R5 ; R1 := R2 .. R3 .. R4 .. R5
	23	[504]	GETGLOBAL	R2 K10 ; R2 := 0x7b998233
	24	[504]	GETTABLE 	R3 R0 K11 ; R3 := R0["radialSector"]
	25	[504]	GETTABLE 	R3 R3 K12 ; R3 := R3["mission"]
	26	[504]	GETTABLE 	R3 R3 K13 ; R3 := R3["levelOverride"]
	27	[504]	CALL     	R2 2 2 ; R2 := R2(R3)
	28	[504]	TEST     	R2 1 ; if R2 then PC := 107
	29	[504]	JMP      	107 ; PC := 107
	30	[504]	GETUPVAL 	R2 U0 ; R2 := U0
	31	[504]	GETUPVAL 	R3 U1 ; R3 := U1
	32	[504]	GETTABLE 	R3 R3 K5 ; R3 := R3["EDIT_EDGES"]
	33	[504]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 107
	34	[504]	JMP      	107 ; PC := 107
	35	[505]	GETTABLE 	R2 R0 K11 ; R2 := R0["radialSector"]
	36	[505]	GETTABLE 	R2 R2 K12 ; R2 := R2["mission"]
	37	[505]	GETTABLE 	R2 R2 K13 ; R2 := R2["levelOverride"]
	38	[505]	SELF     	R2 R2 K14 ; R3 := R2; R2 := R2[0xed4e0128]
	39	[505]	CALL     	R2 2 2 ; R2 := R2(R3)
	40	[506]	GETGLOBAL	R3 K15 ; R3 := 0x7f5022cf
	41	[506]	GETTABLE 	R3 R3 K16 ; R3 := R3[0x348c01f7]
	42	[506]	MOVE     	R4 R2 ; R4 := R2
	43	[506]	LOADK    	R5 K17 ; R5 := ".*/(.*)"
	44	[506]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	45	[507]	MOVE     	R4 R1 ; R4 := R1
	46	[507]	LOADK    	R5 K18 ; R5 := "\r"
	47	[507]	MOVE     	R6 R3 ; R6 := R3
	48	[507]	CONCAT   	R1 R4 R6 ; R1 := R4 .. R5 .. R6
	49	[508]	JMP      	107 ; PC := 107
	50	[509]	GETUPVAL 	R4 U0 ; R4 := U0
	51	[509]	GETUPVAL 	R5 U1 ; R5 := U1
	52	[509]	GETTABLE 	R5 R5 K19 ; R5 := R5["EDIT_NODE_DECOS"]
	53	[509]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 107
	54	[509]	JMP      	107 ; PC := 107
	55	[509]	GETTABLE 	R4 R0 K20 ; R4 := R0["deco"]
	56	[509]	EQ       	1 R4 K2 ; if R4 == nil then PC := 107
	57	[509]	JMP      	107 ; PC := 107
	58	[510]	GETUPVAL 	R4 U2 ; R4 := U2
	59	[510]	GETTABLE 	R4 R4 K21 ; R4 := R4["mEditingRotation"]
	60	[510]	TEST     	R4 1 ; if R4 then PC := 70
	61	[510]	JMP      	70 ; PC := 70
	62	[510]	GETUPVAL 	R4 U3 ; R4 := U3
	63	[510]	GETTABLE 	R4 R4 K22 ; R4 := R4["mShiftDown"]
	64	[510]	TEST     	R4 1 ; if R4 then PC := 70
	65	[510]	JMP      	70 ; PC := 70
	66	[510]	GETUPVAL 	R4 U3 ; R4 := U3
	67	[510]	GETTABLE 	R4 R4 K23 ; R4 := R4["mControlDown"]
	68	[510]	TEST     	R4 0 ; if not R4 then PC := 84
	69	[510]	JMP      	84 ; PC := 84
	70	[511]	MOVE     	R4 R1 ; R4 := R1
	71	[511]	LOADK    	R5 K18 ; R5 := "\r"
	72	[511]	GETUPVAL 	R6 U2 ; R6 := U2
	73	[511]	GETTABLE 	R6 R6 K24 ; R6 := R6["mRotationAxis"]
	74	[511]	LOADK    	R7 K25 ; R7 := "="
	75	[511]	GETGLOBAL	R8 K7 ; R8 := 0x64fb1586
	76	[511]	GETTABLE 	R9 R0 K20 ; R9 := R0["deco"]
	77	[511]	GETTABLE 	R9 R9 K26 ; R9 := R9["mRotation"]
	78	[511]	GETUPVAL 	R10 U2 ; R10 := U2
	79	[511]	GETTABLE 	R10 R10 K24 ; R10 := R10["mRotationAxis"]
	80	[511]	GETTABLE 	R9 R9 R10 ; R9 := R9[R10]
	81	[511]	CALL     	R8 2 2 ; R8 := R8(R9)
	82	[511]	CONCAT   	R1 R4 R8 ; R1 := R4 .. R5 .. R6 .. R7 .. R8
	83	[511]	JMP      	107 ; PC := 107
	84	[512]	GETUPVAL 	R4 U2 ; R4 := U2
	85	[512]	GETTABLE 	R4 R4 K27 ; R4 := R4["mEditingScale"]
	86	[512]	TEST     	R4 1 ; if R4 then PC := 92
	87	[512]	JMP      	92 ; PC := 92
	88	[512]	GETUPVAL 	R4 U3 ; R4 := U3
	89	[512]	GETTABLE 	R4 R4 K28 ; R4 := R4["mAltDown"]
	90	[512]	TEST     	R4 0 ; if not R4 then PC := 100
	91	[512]	JMP      	100 ; PC := 100
	92	[513]	MOVE     	R4 R1 ; R4 := R1
	93	[513]	LOADK    	R5 K29 ; R5 := "\rScale="
	94	[513]	GETGLOBAL	R6 K7 ; R6 := 0x64fb1586
	95	[513]	GETTABLE 	R7 R0 K20 ; R7 := R0["deco"]
	96	[513]	GETTABLE 	R7 R7 K30 ; R7 := R7["mScale"]
	97	[513]	CALL     	R6 2 2 ; R6 := R6(R7)
	98	[513]	CONCAT   	R1 R4 R6 ; R1 := R4 .. R5 .. R6
	99	[513]	JMP      	107 ; PC := 107
	100	[515]	MOVE     	R4 R1 ; R4 := R1
	101	[515]	LOADK    	R5 K18 ; R5 := "\r"
	102	[515]	GETGLOBAL	R6 K7 ; R6 := 0x64fb1586
	103	[515]	GETTABLE 	R7 R0 K20 ; R7 := R0["deco"]
	104	[515]	GETTABLE 	R7 R7 K31 ; R7 := R7["mOffset"]
	105	[515]	CALL     	R6 2 2 ; R6 := R6(R7)
	106	[515]	CONCAT   	R1 R4 R6 ; R1 := R4 .. R5 .. R6
	107	[519]	GETTABLE 	R4 R0 K32 ; R4 := R0["locationEnabled"]
	108	[519]	TEST     	R4 1 ; if R4 then PC := 118
	109	[519]	JMP      	118 ; PC := 118
	110	[519]	GETTABLE 	R4 R0 K11 ; R4 := R0["radialSector"]
	111	[519]	GETTABLE 	R4 R4 K33 ; R4 := R4["missionTag"]
	112	[519]	GETUPVAL 	R5 U4 ; R5 := U4
	113	[519]	GETTABLE 	R5 R5 K34 ; R5 := R5["DESTROYED_NODE_TAG"]
	114	[519]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 118
	115	[519]	JMP      	118 ; PC := 118
	116	[520]	LOADK    	R1 K0 ; R1 := ""
	117	[520]	JMP      	127 ; PC := 127
	118	[521]	GETTABLE 	R4 R0 K35 ; R4 := R0["locked"]
	119	[521]	TEST     	R4 0 ; if not R4 then PC := 127
	120	[521]	JMP      	127 ; PC := 127
	121	[521]	GETTABLE 	R4 R0 K32 ; R4 := R0["locationEnabled"]
	122	[521]	TEST     	R4 0 ; if not R4 then PC := 127
	123	[521]	JMP      	127 ; PC := 127
	124	[522]	GETGLOBAL	R4 K36 ; R4 := mLockIcon
	125	[522]	MOVE     	R5 R1 ; R5 := R1
	126	[522]	CONCAT   	R1 R4 R5 ; R1 := R4 .. R5
	127	[526]	GETGLOBAL	R4 K37 ; R4 := 0xae91e43b
	128	[526]	SELF     	R4 R4 K38 ; R5 := R4; R4 := R4[0xe261aa96]
	129	[526]	GETTABLE 	R6 R0 K39 ; R6 := R0["clipName"]
	130	[526]	LOADK    	R7 K40 ; R7 := "Name.Label"
	131	[526]	LOADK    	R8 := 29.000000
	132	[526]	MOVE     	R9 R1 ; R9 := R1
	133	[526]	CALL     	R4 6 1 ; R4(R5,R6,R7,R8,R9)
	134	[527]	GETGLOBAL	R4 K37 ; R4 := 0xae91e43b
	135	[527]	SELF     	R4 R4 K41 ; R5 := R4; R4 := R4[0x2ce15376]
	136	[527]	GETTABLE 	R6 R0 K39 ; R6 := R0["clipName"]
	137	[527]	LOADK    	R7 K40 ; R7 := "Name.Label"
	138	[527]	LOADK    	R8 := 33.000000
	139	[527]	CALL     	R4 5 2 ; R4 := R4(R5,R6,R7,R8)
	140	[528]	TEST     	R4 0 ; if not R4 then PC := 149
	141	[528]	JMP      	149 ; PC := 149
	142	[529]	GETGLOBAL	R5 K37 ; R5 := 0xae91e43b
	143	[529]	SELF     	R5 R5 K42 ; R6 := R5; R5 := R5[0xf64b7262]
	144	[529]	GETTABLE 	R7 R0 K39 ; R7 := R0["clipName"]
	145	[529]	LOADK    	R8 K43 ; R8 := "Name.Bg"
	146	[529]	LOADK    	R9 := 12.000000
	147	[529]	ADD      	R10 R4 K44 ; R10 := R4 + 7.000000
	148	[529]	CALL     	R5 6 1 ; R5(R6,R7,R8,R9,R10)
	149	[531]	RETURN   	R0 1 ; return 

function #9 <?:533,538> (13 instructions, 52 bytes at 000002112ABA6300)
0 params, 6 slots, 2 upvalues, 0 locals, 1 constant, 0 functions
	1	[534]	LOADK    	R0 := 1.000000
	2	[534]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[534]	LEN      	R1 R1 ; R1 := # R1
	4	[534]	LOADK    	R2 := 1.000000
	5	[534]	FORPREP  	R0 12 ; R0 -= R2; PC := 12
	6	[535]	GETGLOBAL	R4 K0 ; R4 := 0xce225efa
	7	[535]	CALL     	R4 1 1 ; R4()
	8	[536]	GETUPVAL 	R4 U1 ; R4 := U1
	9	[536]	GETUPVAL 	R5 U0 ; R5 := U0
	10	[536]	GETTABLE 	R5 R5 R3 ; R5 := R5[R3]
	11	[536]	CALL     	R4 2 1 ; R4(R5)
	12	[534]	FORLOOP  	R0 6 ; R0 += R2; if R0 <= R1 then begin PC := 6; R3 := R0 end
	13	[538]	RETURN   	R0 1 ; return 

function #10 <?:540,544> (9 instructions, 36 bytes at 0000021134A25A20)
0 params, 2 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[541]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[541]	GETGLOBAL	R1 K1 ; R1 := mInfoTip
	3	[541]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[541]	TEST     	R0 1 ; if R0 then PC := 9
	5	[541]	JMP      	9 ; PC := 9
	6	[542]	GETGLOBAL	R0 K1 ; R0 := mInfoTip
	7	[542]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x4203b007]
	8	[542]	CALL     	R0 2 1 ; R0(R1)
	9	[544]	RETURN   	R0 1 ; return 

function #11 <?:546,583> (101 instructions, 404 bytes at 0000021113FA7470)
1 param, 15 slots, 4 upvalues, 0 locals, 31 constants, 1 function
	1	[547]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[547]	GETTABLE 	R1 R1 K1 ; R1 := R1["CustomStarChartNodeFilter"]
	3	[547]	EQ       	1 R1 K2 ; if R1 == nil then PC := 35
	4	[547]	JMP      	35 ; PC := 35
	5	[547]	GETGLOBAL	R1 K0 ; R1 := _T
	6	[547]	GETTABLE 	R1 R1 K1 ; R1 := R1["CustomStarChartNodeFilter"]
	7	[547]	GETTABLE 	R1 R1 K3 ; R1 := R1["NewWarMode"]
	8	[547]	TEST     	R1 0 ; if not R1 then PC := 35
	9	[547]	JMP      	35 ; PC := 35
	10	[548]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	11	[548]	GETTABLE 	R2 R0 K5 ; R2 := R0["radialSector"]
	12	[548]	GETTABLE 	R2 R2 K6 ; R2 := R2["mission"]
	13	[548]	GETTABLE 	R2 R2 K7 ; R2 := R2["levelKeyName"]
	14	[548]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[548]	TEST     	R1 1 ; if R1 then PC := 34
	16	[548]	JMP      	34 ; PC := 34
	17	[549]	GETGLOBAL	R1 K8 ; R1 := 0xb009bbc6
	18	[549]	GETTABLE 	R2 R0 K5 ; R2 := R0["radialSector"]
	19	[549]	GETTABLE 	R2 R2 K6 ; R2 := R2["mission"]
	20	[549]	GETTABLE 	R2 R2 K7 ; R2 := R2["levelKeyName"]
	21	[549]	CALL     	R1 2 2 ; R1 := R1(R2)
	22	[550]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	23	[550]	MOVE     	R3 R1 ; R3 := R1
	24	[550]	CALL     	R2 2 2 ; R2 := R2(R3)
	25	[550]	TEST     	R2 1 ; if R2 then PC := 34
	26	[550]	JMP      	34 ; PC := 34
	27	[551]	GETGLOBAL	R2 K9 ; R2 := mInfoTip
	28	[551]	SELF     	R2 R2 K10 ; R3 := R2; R2 := R2[0x49dbe0b0]
	29	[551]	MOVE     	R4 R0 ; R4 := R0
	30	[551]	SELF     	R5 R1 K11 ; R6 := R1; R5 := R1[0x10c9eef2]
	31	[551]	CALL     	R5 2 2 ; R5 := R5(R6)
	32	[551]	GETGLOBAL	R6 K12 ; R6 := 0x649e8f83
	33	[551]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	34	[554]	RETURN   	R0 1 ; return 
	35	[557]	GETGLOBAL	R2 K13 ; R2 := 0x9ba7909f
	36	[557]	SELF     	R2 R2 K14 ; R3 := R2; R2 := R2[0xbcfb64ab]
	37	[557]	GETGLOBAL	R4 K15 ; R4 := 0x0032441c
	38	[557]	GETTABLE 	R4 R4 K16 ; R4 := R4["UIMovie_TransmissionMovie"]
	39	[557]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	40	[558]	GETGLOBAL	R3 K4 ; R3 := 0x7b998233
	41	[558]	MOVE     	R4 R2 ; R4 := R2
	42	[558]	CALL     	R3 2 2 ; R3 := R3(R4)
	43	[558]	TEST     	R3 1 ; if R3 then PC := 53
	44	[558]	JMP      	53 ; PC := 53
	45	[559]	GETUPVAL 	R3 U0 ; R3 := U0
	46	[559]	SELF     	R3 R3 K17 ; R4 := R3; R3 := R3[0xbd2e96ea]
	47	[559]	LOADK    	R5 := 2.000000
	48	[564]	CLOSURE  	R6 0 ; R6 := closure(Function #1)
	49	[564]	MOVE     	R0 R0 ; R0 := R0
	50	[564]	GETUPVAL 	R0 U1 ; R0 := U1
	51	[559]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	52	[565]	RETURN   	R0 1 ; return 
	53	[568]	GETGLOBAL	R3 K18 ; R3 := 0x64fb1586
	54	[568]	GETTABLE 	R4 R0 K19 ; R4 := R0["name"]
	55	[568]	CALL     	R3 2 2 ; R3 := R3(R4)
	56	[569]	GETGLOBAL	R4 K0 ; R4 := _T
	57	[569]	GETTABLE 	R4 R4 K20 ; R4 := R4["CachedInvasionInfo"]
	58	[569]	GETTABLE 	R4 R4 R3 ; R4 := R4[R3]
	59	[569]	TEST     	R4 0 ; if not R4 then PC := 69
	60	[569]	JMP      	69 ; PC := 69
	61	[569]	GETGLOBAL	R4 K0 ; R4 := _T
	62	[569]	GETTABLE 	R4 R4 K20 ; R4 := R4["CachedInvasionInfo"]
	63	[569]	GETTABLE 	R4 R4 R3 ; R4 := R4[R3]
	64	[569]	GETTABLE 	R4 R4 K21 ; R4 := R4["mDefenderMissionInfo"]
	65	[569]	GETTABLE 	R4 R4 K22 ; R4 := R4["uniqueName"]
	66	[569]	EQ       	0 R4 K23 ; if R4 ~= "/Lotus/Language/Bosses/BossPhorid" then PC := 69
	67	[569]	JMP      	69 ; PC := 69
	68	[570]	LOADK    	R3 K24 ; R3 := "/Lotus/Types/Keys/SortieBossKeyPhorid"
	69	[575]	LOADK    	R4 := 0.000000
	70	[575]	LOADK    	R5 := 17.000000
	71	[575]	LOADK    	R6 := 1.000000
	72	[575]	FORPREP  	R4 100 ; R4 -= R6; PC := 100
	73	[576]	GETUPVAL 	R8 U2 ; R8 := U2
	74	[576]	GETTABLE 	R8 R8 K26 ; R8 := R8["mBossInfo"]
	75	[576]	GETTABLE 	R8 R8 R7 ; R8 := R8[R7]
	76	[577]	GETGLOBAL	R9 K4 ; R9 := 0x7b998233
	77	[577]	MOVE     	R10 R8 ; R10 := R8
	78	[577]	CALL     	R9 2 2 ; R9 := R9(R10)
	79	[577]	TEST     	R9 1 ; if R9 then PC := 100
	80	[577]	JMP      	100 ; PC := 100
	81	[577]	GETTABLE 	R9 R8 K27 ; R9 := R8["BossNode"]
	82	[577]	EQ       	0 R9 R3 ; if R9 ~= R3 then PC := 100
	83	[577]	JMP      	100 ; PC := 100
	84	[578]	GETUPVAL 	R9 U3 ; R9 := U3
	85	[578]	GETTABLE 	R9 R9 K28 ; R9 := R9[0x06d055f9]
	86	[578]	GETGLOBAL	R10 K4 ; R10 := 0x7b998233
	87	[578]	GETTABLE 	R11 R8 K29 ; R11 := R8["BossNodeTransmission"]
	88	[578]	CALL     	R10 2 2 ; R10 := R10(R11)
	89	[578]	NOT      	R10 R10 ; R10 := not R10
	90	[578]	GETTABLE 	R11 R8 K29 ; R11 := R8["BossNodeTransmission"]
	91	[578]	GETTABLE 	R12 R8 K30 ; R12 := R8["Transmission"]
	92	[578]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	93	[579]	GETGLOBAL	R10 K9 ; R10 := mInfoTip
	94	[579]	SELF     	R10 R10 K10 ; R11 := R10; R10 := R10[0x49dbe0b0]
	95	[579]	MOVE     	R12 R0 ; R12 := R0
	96	[579]	MOVE     	R13 R9 ; R13 := R9
	97	[579]	GETGLOBAL	R14 K12 ; R14 := 0x649e8f83
	98	[579]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	99	[580]	JMP      	101 ; PC := 101
	100	[575]	FORLOOP  	R4 73 ; R4 += R6; if R4 <= R5 then begin PC := 73; R7 := R4 end
	101	[583]	RETURN   	R0 1 ; return 

function #12 <?:585,595> (37 instructions, 148 bytes at 000002111CDF63C0)
0 params, 5 slots, 1 upvalue, 0 locals, 12 constants, 0 functions
	1	[586]	LOADK    	R0 K0 ; R0 := ""
	2	[587]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	3	[587]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[587]	GETTABLE 	R2 R2 K2 ; R2 := R2["mEdgeNode1"]
	5	[587]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[587]	TEST     	R1 1 ; if R1 then PC := 32
	7	[587]	JMP      	32 ; PC := 32
	8	[588]	LOADK    	R1 K3 ; R1 := ": "
	9	[588]	GETGLOBAL	R2 K4 ; R2 := 0x64fb1586
	10	[588]	GETUPVAL 	R3 U0 ; R3 := U0
	11	[588]	GETTABLE 	R3 R3 K2 ; R3 := R3["mEdgeNode1"]
	12	[588]	GETTABLE 	R3 R3 K5 ; R3 := R3["radialSector"]
	13	[588]	GETTABLE 	R3 R3 K6 ; R3 := R3["name"]
	14	[588]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[588]	CONCAT   	R0 R1 R2 ; R0 := R1 .. R2
	16	[589]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	17	[589]	GETUPVAL 	R2 U0 ; R2 := U0
	18	[589]	GETTABLE 	R2 R2 K7 ; R2 := R2["mEdgeNode2"]
	19	[589]	CALL     	R1 2 2 ; R1 := R1(R2)
	20	[589]	TEST     	R1 1 ; if R1 then PC := 32
	21	[589]	JMP      	32 ; PC := 32
	22	[590]	MOVE     	R1 R0 ; R1 := R0
	23	[590]	LOADK    	R2 K8 ; R2 := " TO "
	24	[590]	GETGLOBAL	R3 K4 ; R3 := 0x64fb1586
	25	[590]	GETUPVAL 	R4 U0 ; R4 := U0
	26	[590]	GETTABLE 	R4 R4 K7 ; R4 := R4["mEdgeNode2"]
	27	[590]	GETTABLE 	R4 R4 K5 ; R4 := R4["radialSector"]
	28	[590]	GETTABLE 	R4 R4 K6 ; R4 := R4["name"]
	29	[590]	CALL     	R3 2 2 ; R3 := R3(R4)
	30	[590]	LOADK    	R4 K9 ; R4 := " (A)dd or (D)elete?"
	31	[590]	CONCAT   	R0 R1 R4 ; R0 := R1 .. R2 .. R3 .. R4
	32	[593]	LOADK    	R1 K10 ; R1 := "EDITING EDGES"
	33	[593]	MOVE     	R2 R0 ; R2 := R0
	34	[593]	LOADK    	R3 K11 ; R3 := "\r >CTRL=Multi-select"
	35	[593]	CONCAT   	R1 R1 R3 ; R1 := R1 .. R2 .. R3
	36	[594]	RETURN   	R1 2 ; return R1 
	37	[595]	RETURN   	R0 1 ; return 

function #13 <?:597,624> (89 instructions, 356 bytes at 000002111ADC0120)
0 params, 8 slots, 5 upvalues, 0 locals, 30 constants, 0 functions
	1	[598]	LOADK    	R0 K0 ; R0 := ""
	2	[599]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[599]	SETTABLE 	R1 K1 K2 ; R1["INACTIVE_NODE_ALPHA"] := 0.000000
	4	[600]	GETUPVAL 	R1 U1 ; R1 := U1
	5	[600]	GETUPVAL 	R2 U2 ; R2 := U2
	6	[600]	GETTABLE 	R2 R2 K3 ; R2 := R2["EDIT_REGIONS"]
	7	[600]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 11
	8	[600]	JMP      	11 ; PC := 11
	9	[601]	LOADK    	R0 K4 ; R0 := "EDITING REGIONS"
	10	[601]	JMP      	83 ; PC := 83
	11	[602]	GETUPVAL 	R1 U1 ; R1 := U1
	12	[602]	GETUPVAL 	R2 U2 ; R2 := U2
	13	[602]	GETTABLE 	R2 R2 K5 ; R2 := R2["EDIT_REGION_FRAMING"]
	14	[602]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 37
	15	[602]	JMP      	37 ; PC := 37
	16	[603]	GETGLOBAL	R1 K6 ; R1 := mRegions
	17	[603]	GETUPVAL 	R2 U3 ; R2 := U3
	18	[603]	GETTABLE 	R2 R2 K7 ; R2 := R2["mFramingRegion"]
	19	[603]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	20	[604]	LOADK    	R2 K8 ; R2 := "NONE"
	21	[605]	EQ       	1 R1 K9 ; if R1 == nil then PC := 32
	22	[605]	JMP      	32 ; PC := 32
	23	[606]	GETGLOBAL	R3 K10 ; R3 := 0x7f5022cf
	24	[606]	GETTABLE 	R3 R3 K11 ; R3 := R3[0x3f3e4d12]
	25	[606]	GETGLOBAL	R4 K12 ; R4 := 0xae91e43b
	26	[606]	SELF     	R4 R4 K13 ; R5 := R4; R4 := R4[0x42b04007]
	27	[606]	GETTABLE 	R6 R1 K14 ; R6 := R1["name"]
	28	[606]	OP_LOADBOOL	R7 0 0 ; R7 := false
	29	[606]	CALL     	R4 4 0 ; R4,... := R4(R5,R6,R7)
	30	[606]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	31	[606]	MOVE     	R2 R3 ; R2 := R3
	32	[608]	LOADK    	R3 K15 ; R3 := "EDITING REGION FRAMING ["
	33	[608]	MOVE     	R4 R2 ; R4 := R2
	34	[608]	LOADK    	R5 K16 ; R5 := "]\r >R=Toggle"
	35	[608]	CONCAT   	R0 R3 R5 ; R0 := R3 .. R4 .. R5
	36	[608]	JMP      	83 ; PC := 83
	37	[609]	GETUPVAL 	R3 U1 ; R3 := U1
	38	[609]	GETUPVAL 	R4 U2 ; R4 := U2
	39	[609]	GETTABLE 	R4 R4 K17 ; R4 := R4["EDIT_NODES"]
	40	[609]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 46
	41	[609]	JMP      	46 ; PC := 46
	42	[610]	LOADK    	R0 K18 ; R0 := "EDITING NODES\r >SHIFT=Z Depth"
	43	[611]	GETUPVAL 	R3 U0 ; R3 := U0
	44	[611]	SETTABLE 	R3 K1 K19 ; R3["INACTIVE_NODE_ALPHA"] := 20.000000
	45	[611]	JMP      	83 ; PC := 83
	46	[612]	GETUPVAL 	R3 U1 ; R3 := U1
	47	[612]	GETUPVAL 	R4 U2 ; R4 := U2
	48	[612]	GETTABLE 	R4 R4 K20 ; R4 := R4["EDIT_EDGES"]
	49	[612]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 57
	50	[612]	JMP      	57 ; PC := 57
	51	[613]	GETUPVAL 	R3 U4 ; R3 := U4
	52	[613]	CALL     	R3 1 2 ; R3 := R3()
	53	[613]	MOVE     	R0 R3 ; R0 := R3
	54	[614]	GETUPVAL 	R3 U0 ; R3 := U0
	55	[614]	SETTABLE 	R3 K1 K19 ; R3["INACTIVE_NODE_ALPHA"] := 20.000000
	56	[614]	JMP      	83 ; PC := 83
	57	[615]	GETUPVAL 	R3 U1 ; R3 := U1
	58	[615]	GETUPVAL 	R4 U2 ; R4 := U2
	59	[615]	GETTABLE 	R4 R4 K21 ; R4 := R4["EDIT_NODE_DECOS"]
	60	[615]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 64
	61	[615]	JMP      	64 ; PC := 64
	62	[616]	LOADK    	R0 K22 ; R0 := "EDITING NODE DECOS \r >ALT=Scale\r >SHIFT=Heading\r >CTRL=Pitch\r >SHIFT+CTRL=Bank"
	63	[616]	JMP      	83 ; PC := 83
	64	[617]	GETUPVAL 	R3 U1 ; R3 := U1
	65	[617]	GETUPVAL 	R4 U2 ; R4 := U2
	66	[617]	GETTABLE 	R4 R4 K23 ; R4 := R4["EDIT_SHORTCUT_CONTROL_POINTS"]
	67	[617]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 71
	68	[617]	JMP      	71 ; PC := 71
	69	[618]	LOADK    	R0 K24 ; R0 := "EDITING EDGE CONTROL POINTS \r >SHIFT=Z Depth"
	70	[618]	JMP      	83 ; PC := 83
	71	[619]	GETGLOBAL	R3 K25 ; R3 := _T
	72	[619]	GETTABLE 	R3 R3 K26 ; R3 := R3["WareframeChallenge"]
	73	[619]	TEST     	R3 0 ; if not R3 then PC := 83
	74	[619]	JMP      	83 ; PC := 83
	75	[619]	GETGLOBAL	R3 K25 ; R3 := _T
	76	[619]	GETTABLE 	R3 R3 K26 ; R3 := R3["WareframeChallenge"]
	77	[619]	GETTABLE 	R3 R3 K27 ; R3 := R3["StarChartLabel"]
	78	[619]	TEST     	R3 0 ; if not R3 then PC := 83
	79	[619]	JMP      	83 ; PC := 83
	80	[620]	GETGLOBAL	R3 K25 ; R3 := _T
	81	[620]	GETTABLE 	R3 R3 K26 ; R3 := R3["WareframeChallenge"]
	82	[620]	GETTABLE 	R0 R3 K27 ; R0 := R3["StarChartLabel"]
	83	[623]	GETGLOBAL	R3 K12 ; R3 := 0xae91e43b
	84	[623]	SELF     	R3 R3 K28 ; R4 := R3; R3 := R3[0x5f56eeab]
	85	[623]	LOADK    	R5 K29 ; R5 := "ScreenModeLabel"
	86	[623]	LOADK    	R6 := 29.000000
	87	[623]	MOVE     	R7 R0 ; R7 := R0
	88	[623]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	89	[624]	RETURN   	R0 1 ; return 

function #14 <?:626,641> (58 instructions, 232 bytes at 00000211159D3560)
1 param, 17 slots, 1 upvalue, 0 locals, 18 constants, 0 functions
	1	[627]	LOADK    	R1 := 1.000000
	2	[627]	GETGLOBAL	R2 K0 ; R2 := mFlatEdges
	3	[627]	LEN      	R2 R2 ; R2 := # R2
	4	[627]	LOADK    	R3 := 1.000000
	5	[627]	FORPREP  	R1 57 ; R1 -= R3; PC := 57
	6	[628]	GETGLOBAL	R5 K0 ; R5 := mFlatEdges
	7	[628]	GETTABLE 	R5 R5 R4 ; R5 := R5[R4]
	8	[628]	GETTABLE 	R5 R5 K1 ; R5 := R5["IsShortcut"]
	9	[628]	TEST     	R5 0 ; if not R5 then PC := 57
	10	[628]	JMP      	57 ; PC := 57
	11	[629]	GETGLOBAL	R5 K2 ; R5 := 0xc8802016
	12	[629]	NEWTABLE 	R6 2 0 ; R6 := {}
	13	[629]	GETGLOBAL	R7 K0 ; R7 := mFlatEdges
	14	[629]	GETTABLE 	R7 R7 R4 ; R7 := R7[R4]
	15	[629]	GETTABLE 	R7 R7 K3 ; R7 := R7["controlPointA"]
	16	[629]	GETGLOBAL	R8 K0 ; R8 := mFlatEdges
	17	[629]	GETTABLE 	R8 R8 R4 ; R8 := R8[R4]
	18	[629]	GETTABLE 	R8 R8 K4 ; R8 := R8["controlPointB"]
	19	[629]	SETLIST  	R6 2 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 2
	20	[629]	CALL     	R5 2 4 ; R5,R6,R7 := R5(R6)
	21	[629]	JMP      	55 ; PC := 55
	22	[630]	TEST     	R0 0 ; if not R0 then PC := 51
	23	[630]	JMP      	51 ; PC := 51
	24	[631]	GETGLOBAL	R10 K6 ; R10 := 0x1211d00f
	25	[631]	SELF     	R10 R10 K7 ; R11 := R10; R10 := R10[0x05909209]
	26	[631]	GETGLOBAL	R12 K8 ; R12 := 0x5a16eeaa
	27	[631]	GETTABLE 	R13 R9 K9 ; R13 := R9["position"]
	28	[631]	GETUPVAL 	R14 U0 ; R14 := U0
	29	[631]	GETTABLE 	R14 R14 K10 ; R14 := R14["RING_ROTATION"]
	30	[631]	CALL     	R10 5 2 ; R10 := R10(R11,R12,R13,R14)
	31	[631]	SETTABLE 	R9 K5 R10 ; R9[0xd7d79b74] := R10
	32	[632]	GETTABLE 	R10 R9 K5 ; R10 := R9["ringInstance"]
	33	[632]	SELF     	R10 R10 K11 ; R11 := R10; R10 := R10[0xc2b4e597]
	34	[632]	GETGLOBAL	R12 K12 ; R12 := 0x60130201
	35	[632]	LOADK    	R13 := 0.000000
	36	[632]	LOADK    	R14 := 255.000000
	37	[632]	LOADK    	R15 := 0.000000
	38	[632]	LOADK    	R16 := 255.000000
	39	[632]	CALL     	R12 5 0 ; R12,... := R12(R13,R14,R15,R16)
	40	[632]	CALL     	R10 0 1 ; R10(R11,...)
	41	[633]	GETTABLE 	R10 R9 K5 ; R10 := R9["ringInstance"]
	42	[633]	SELF     	R10 R10 K13 ; R11 := R10; R10 := R10[0x1b50cf3b]
	43	[633]	LOADK    	R12 K14 ; R12 := 0.025000
	44	[633]	LOADK    	R13 K14 ; R13 := 0.025000
	45	[633]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	46	[634]	GETTABLE 	R10 R9 K5 ; R10 := R9["ringInstance"]
	47	[634]	SELF     	R10 R10 K15 ; R11 := R10; R10 := R10[0xce1fc190]
	48	[634]	LOADK    	R12 K16 ; R12 := 0.200000
	49	[634]	CALL     	R10 3 1 ; R10(R11,R12)
	50	[634]	JMP      	55 ; PC := 55
	51	[636]	GETGLOBAL	R10 K6 ; R10 := 0x1211d00f
	52	[636]	SELF     	R10 R10 K17 ; R11 := R10; R10 := R10[0x59c96e77]
	53	[636]	GETTABLE 	R12 R9 K5 ; R12 := R9["ringInstance"]
	54	[636]	CALL     	R10 3 1 ; R10(R11,R12)
	55	[629]	TFORLOOP 	R5 2 ; R8,R9 := R5(R6,R7); if R8 ~= nil then begin PC = 22; R7 := R8 end
	56	[637]	JMP      	22 ; PC := 22
	57	[627]	FORLOOP  	R1 6 ; R1 += R3; if R1 <= R2 then begin PC := 6; R4 := R1 end
	58	[641]	RETURN   	R0 1 ; return 

function #15 <?:643,657> (23 instructions, 92 bytes at 000002111D23DCA0)
1 param, 4 slots, 5 upvalues, 0 locals, 1 constant, 0 functions
	1	[644]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[646]	SETUPVAL 	R0 U0 ; U0 := R0
	3	[648]	GETUPVAL 	R2 U1 ; R2 := U1
	4	[648]	GETTABLE 	R2 R2 K0 ; R2 := R2["EDIT_SHORTCUT_CONTROL_POINTS"]
	5	[648]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 11
	6	[648]	JMP      	11 ; PC := 11
	7	[649]	GETUPVAL 	R2 U2 ; R2 := U2
	8	[649]	OP_LOADBOOL	R3 0 0 ; R3 := false
	9	[649]	CALL     	R2 2 1 ; R2(R3)
	10	[649]	JMP      	19 ; PC := 19
	11	[650]	GETUPVAL 	R2 U0 ; R2 := U0
	12	[650]	GETUPVAL 	R3 U1 ; R3 := U1
	13	[650]	GETTABLE 	R3 R3 K0 ; R3 := R3["EDIT_SHORTCUT_CONTROL_POINTS"]
	14	[650]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 19
	15	[650]	JMP      	19 ; PC := 19
	16	[651]	GETUPVAL 	R2 U2 ; R2 := U2
	17	[651]	OP_LOADBOOL	R3 1 0 ; R3 := true
	18	[651]	CALL     	R2 2 1 ; R2(R3)
	19	[654]	GETUPVAL 	R2 U3 ; R2 := U3
	20	[654]	CALL     	R2 1 1 ; R2()
	21	[656]	GETUPVAL 	R2 U4 ; R2 := U4
	22	[656]	CALL     	R2 1 1 ; R2()
	23	[657]	RETURN   	R0 1 ; return 

function #16 <?:659,747> (249 instructions, 996 bytes at 00000211300D6370)
0 params, 33 slots, 7 upvalues, 0 locals, 58 constants, 1 function
	1	[661]	NEWTABLE 	R0 0 0 ; R0 := {}
	2	[661]	SETUPVAL 	R0 U0 ; U0 := R0
	3	[662]	NEWTABLE 	R0 0 0 ; R0 := {}
	4	[662]	SETUPVAL 	R0 U1 ; U1 := R0
	5	[663]	OP_LOADBOOL	R0 0 0 ; R0 := false
	6	[663]	SETGLOBALHASH	R0 K0 ; mAggregationInProgress := R0
	7	[665]	GETGLOBAL	R0 K1 ; R0 := 0x7b998233
	8	[665]	GETGLOBAL	R1 K2 ; R1 := mRadialSolarMap
	9	[665]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[665]	TEST     	R0 0 ; if not R0 then PC := 13
	11	[665]	JMP      	13 ; PC := 13
	12	[666]	RETURN   	R0 1 ; return 
	13	[669]	NEWTABLE 	R0 10 0 ; R0 := {}
	14	[669]	GETUPVAL 	R1 U2 ; R1 := U2
	15	[669]	GETTABLE 	R1 R1 K3 ; R1 := R1["ALERT_FLAG"]
	16	[669]	GETUPVAL 	R2 U2 ; R2 := U2
	17	[669]	GETTABLE 	R2 R2 K4 ; R2 := R2["EVENT_FLAG"]
	18	[669]	GETUPVAL 	R3 U2 ; R3 := U2
	19	[669]	GETTABLE 	R3 R3 K5 ; R3 := R3["PVP_FLAG"]
	20	[669]	GETUPVAL 	R4 U2 ; R4 := U2
	21	[669]	GETTABLE 	R4 R4 K6 ; R4 := R4["NIGHTMARE_FLAG"]
	22	[669]	GETUPVAL 	R5 U2 ; R5 := U2
	23	[669]	GETTABLE 	R5 R5 K7 ; R5 := R5["INVASION_ATTACKER_FLAG"]
	24	[669]	GETUPVAL 	R6 U2 ; R6 := U2
	25	[669]	GETTABLE 	R6 R6 K8 ; R6 := R6["INVASION_DEFENDER_FLAG"]
	26	[669]	GETUPVAL 	R7 U2 ; R7 := U2
	27	[669]	GETTABLE 	R7 R7 K9 ; R7 := R7["SORTIE_MISSION_FLAG"]
	28	[669]	GETUPVAL 	R8 U2 ; R8 := U2
	29	[669]	GETTABLE 	R8 R8 K10 ; R8 := R8["SYNDICATE_MISSION_FLAG"]
	30	[669]	GETUPVAL 	R9 U2 ; R9 := U2
	31	[669]	GETTABLE 	R9 R9 K11 ; R9 := R9["ACTIVE_MISSION_FLAG"]
	32	[669]	GETUPVAL 	R10 U2 ; R10 := U2
	33	[669]	GETTABLE 	R10 R10 K12 ; R10 := R10["KUVA_TOWER_MISSION_FLAG"]
	34	[669]	SETLIST  	R0 10 1 ; R0[(1-1)*FPF+i] := R(0+i), 1 <= i <= 10
	35	[683]	CLOSURE  	R1 0 ; R1 := closure(Function #1)
	36	[683]	MOVE     	R0 R0 ; R0 := R0
	37	[685]	GETGLOBAL	R2 K13 ; R2 := 0xe7f2b02f
	38	[685]	SELF     	R2 R2 K14 ; R3 := R2; R2 := R2[0xcf705dd6]
	39	[685]	CALL     	R2 2 2 ; R2 := R2(R3)
	40	[686]	OP_LOADBOOL	R3 0 0 ; R3 := false
	41	[686]	TEST     	R3 0 ; if not R3 then PC := 59
	42	[686]	JMP      	59 ; PC := 59
	43	[687]	GETGLOBAL	R3 K15 ; R3 := 0x3d106989
	44	[687]	LOADK    	R4 K16 ; R4 := "Aggregation Results:"
	45	[687]	CALL     	R3 2 1 ; R3(R4)
	46	[688]	GETGLOBAL	R3 K17 ; R3 := 0xcfc01047
	47	[688]	MOVE     	R4 R2 ; R4 := R2
	48	[688]	CALL     	R3 2 4 ; R3,R4,R5 := R3(R4)
	49	[688]	JMP      	57 ; PC := 57
	50	[689]	GETGLOBAL	R8 K15 ; R8 := 0x3d106989
	51	[689]	LOADK    	R9 K18 ; R9 := "gameModeId="
	52	[689]	GETTABLE 	R10 R7 K19 ; R10 := R7["gameModeId"]
	53	[689]	LOADK    	R11 K20 ; R11 := ", count="
	54	[689]	GETTABLE 	R12 R7 K21 ; R12 := R7["count"]
	55	[689]	CONCAT   	R9 R9 R12 ; R9 := R9 .. R10 .. R11 .. R12
	56	[689]	CALL     	R8 2 1 ; R8(R9)
	57	[688]	TFORLOOP 	R3 2 ; R6,R7 := R3(R4,R5); if R6 ~= nil then begin PC = 50; R5 := R6 end
	58	[689]	JMP      	50 ; PC := 50
	59	[693]	LOADNIL  	R8 R10 ; R8 := R9 := R10 := nil
	60	[694]	GETUPVAL 	R11 U3 ; R11 := U3
	61	[694]	GETTABLE 	R11 R11 K22 ; R11 := R11[0x06d055f9]
	62	[694]	GETUPVAL 	R12 U4 ; R12 := U4
	63	[694]	GETTABLE 	R12 R12 K23 ; R12 := R12["CurrentTier"]
	64	[694]	LT       	1 K24 R12 ; if 0.000000 < R12 then PC := 67
	65	[694]	JMP      	67 ; PC := 67
	66	[694]	OP_LOADBOOL	R12 0 1 ; R12 := false; PC := 67
	67	[694]	OP_LOADBOOL	R12 1 0 ; R12 := true
	68	[694]	GETUPVAL 	R13 U2 ; R13 := U2
	69	[694]	GETTABLE 	R13 R13 K25 ; R13 := R13["HARD_MODE_FLAG"]
	70	[694]	LOADK    	R14 := 0.000000
	71	[694]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	72	[697]	GETGLOBAL	R12 K17 ; R12 := 0xcfc01047
	73	[697]	GETGLOBAL	R13 K26 ; R13 := mMapNodes
	74	[697]	CALL     	R12 2 4 ; R12,R13,R14 := R12(R13)
	75	[697]	JMP      	247 ; PC := 247
	76	[698]	GETGLOBAL	R17 K27 ; R17 := 0xce225efa
	77	[698]	LOADK    	R18 := 0.000000
	78	[698]	CALL     	R17 2 1 ; R17(R18)
	79	[700]	GETTABLE 	R17 R16 K28 ; R17 := R16["nodeType"]
	80	[700]	EQ       	1 R17 K30 ; if R17 == 5.000000 then PC := 247
	81	[700]	JMP      	247 ; PC := 247
	82	[702]	GETTABLE 	R17 R16 K31 ; R17 := R16["region"]
	83	[702]	ADD      	R8 R17 K32 ; R8 := R17 + 1.000000
	84	[703]	GETGLOBAL	R17 K33 ; R17 := 0x64fb1586
	85	[703]	GETTABLE 	R18 R16 K34 ; R18 := R16["name"]
	86	[703]	CALL     	R17 2 2 ; R17 := R17(R18)
	87	[703]	MOVE     	R9 R17 ; R9 := R17
	88	[704]	GETUPVAL 	R17 U2 ; R17 := U2
	89	[704]	GETTABLE 	R17 R17 K35 ; R17 := R17[0x7155f039]
	90	[704]	MOVE     	R18 R9 ; R18 := R9
	91	[704]	GETGLOBAL	R19 K2 ; R19 := mRadialSolarMap
	92	[704]	MOVE     	R20 R16 ; R20 := R16
	93	[704]	CALL     	R17 4 2 ; R17 := R17(R18,R19,R20)
	94	[704]	ADD      	R10 R17 R11 ; R10 := R17 + R11
	95	[706]	GETUPVAL 	R17 U1 ; R17 := U1
	96	[706]	SETTABLE 	R17 R10 K24 ; R17[R10] := 0.000000
	97	[708]	GETGLOBAL	R17 K17 ; R17 := 0xcfc01047
	98	[708]	MOVE     	R18 R2 ; R18 := R2
	99	[708]	CALL     	R17 2 4 ; R17,R18,R19 := R17(R18)
	100	[708]	JMP      	137 ; PC := 137
	101	[709]	GETGLOBAL	R22 K36 ; R22 := 0x0032441c
	102	[709]	GETTABLE 	R22 R22 K37 ; R22 := R22["StalkerMode"]
	103	[709]	TEST     	R22 0 ; if not R22 then PC := 125
	104	[709]	JMP      	125 ; PC := 125
	105	[711]	GETTABLE 	R22 R21 K19 ; R22 := R21["gameModeId"]
	106	[711]	EQ       	0 R22 R10 ; if R22 ~= R10 then PC := 137
	107	[711]	JMP      	137 ; PC := 137
	108	[712]	GETTABLE 	R22 R16 K28 ; R22 := R16["nodeType"]
	109	[712]	EQ       	1 R22 K24 ; if R22 == 0.000000 then PC := 114
	110	[712]	JMP      	114 ; PC := 114
	111	[712]	GETTABLE 	R22 R16 K28 ; R22 := R16["nodeType"]
	112	[712]	EQ       	0 R22 K38 ; if R22 ~= 4.000000 then PC := 137
	113	[712]	JMP      	137 ; PC := 137
	114	[712]	GETTABLE 	R22 R16 K39 ; R22 := R16["mission"]
	115	[712]	GETTABLE 	R22 R22 K40 ; R22 := R22["archwingRequired"]
	116	[712]	TEST     	R22 1 ; if R22 then PC := 137
	117	[712]	JMP      	137 ; PC := 137
	118	[713]	GETUPVAL 	R22 U1 ; R22 := U1
	119	[713]	GETUPVAL 	R23 U1 ; R23 := U1
	120	[713]	GETTABLE 	R23 R23 R10 ; R23 := R23[R10]
	121	[713]	GETTABLE 	R24 R21 K21 ; R24 := R21["count"]
	122	[713]	ADD      	R23 R23 R24 ; R23 := R23 + R24
	123	[713]	SETTABLE 	R22 R10 R23 ; R22[R10] := R23
	124	[715]	JMP      	137 ; PC := 137
	125	[716]	MOVE     	R22 R1 ; R22 := R1
	126	[716]	GETTABLE 	R23 R21 K19 ; R23 := R21["gameModeId"]
	127	[716]	MOVE     	R24 R10 ; R24 := R10
	128	[716]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	129	[716]	TEST     	R22 0 ; if not R22 then PC := 137
	130	[716]	JMP      	137 ; PC := 137
	131	[717]	GETUPVAL 	R22 U1 ; R22 := U1
	132	[717]	GETUPVAL 	R23 U1 ; R23 := U1
	133	[717]	GETTABLE 	R23 R23 R10 ; R23 := R23[R10]
	134	[717]	GETTABLE 	R24 R21 K21 ; R24 := R21["count"]
	135	[717]	ADD      	R23 R23 R24 ; R23 := R23 + R24
	136	[717]	SETTABLE 	R22 R10 R23 ; R22[R10] := R23
	137	[708]	TFORLOOP 	R17 2 ; R20,R21 := R17(R18,R19); if R20 ~= nil then begin PC = 101; R19 := R20 end
	138	[718]	JMP      	101 ; PC := 101
	139	[722]	GETUPVAL 	R22 U0 ; R22 := U0
	140	[722]	GETTABLE 	R22 R22 R8 ; R22 := R22[R8]
	141	[722]	EQ       	0 R22 K41 ; if R22 ~= nil then PC := 145
	142	[722]	JMP      	145 ; PC := 145
	143	[723]	GETUPVAL 	R22 U0 ; R22 := U0
	144	[723]	SETTABLE 	R22 R8 K24 ; R22[R8] := 0.000000
	145	[726]	GETUPVAL 	R22 U1 ; R22 := U1
	146	[726]	GETTABLE 	R22 R22 R10 ; R22 := R22[R10]
	147	[726]	EQ       	1 R22 K41 ; if R22 == nil then PC := 156
	148	[726]	JMP      	156 ; PC := 156
	149	[727]	GETUPVAL 	R22 U0 ; R22 := U0
	150	[727]	GETUPVAL 	R23 U0 ; R23 := U0
	151	[727]	GETTABLE 	R23 R23 R8 ; R23 := R23[R8]
	152	[727]	GETUPVAL 	R24 U1 ; R24 := U1
	153	[727]	GETTABLE 	R24 R24 R10 ; R24 := R24[R10]
	154	[727]	ADD      	R23 R23 R24 ; R23 := R23 + R24
	155	[727]	SETTABLE 	R22 R8 R23 ; R22[R8] := R23
	156	[730]	GETGLOBAL	R22 K36 ; R22 := 0x0032441c
	157	[730]	GETTABLE 	R22 R22 K37 ; R22 := R22["StalkerMode"]
	158	[730]	TEST     	R22 0 ; if not R22 then PC := 247
	159	[730]	JMP      	247 ; PC := 247
	160	[731]	GETUPVAL 	R22 U5 ; R22 := U5
	161	[731]	TEST     	R22 0 ; if not R22 then PC := 195
	162	[731]	JMP      	195 ; PC := 195
	163	[732]	EQ       	0 R15 K32 ; if R15 ~= 1.000000 then PC := 170
	164	[732]	JMP      	170 ; PC := 170
	165	[733]	GETGLOBAL	R22 K15 ; R22 := 0x3d106989
	166	[733]	LOADK    	R23 K42 ; R23 := "Total nodes with open squads: "
	167	[733]	LEN      	R24 R2 ; R24 := # R2
	168	[733]	CONCAT   	R23 R23 R24 ; R23 := R23 .. R24
	169	[733]	CALL     	R22 2 1 ; R22(R23)
	170	[735]	GETUPVAL 	R22 U1 ; R22 := U1
	171	[735]	GETTABLE 	R22 R22 R10 ; R22 := R22[R10]
	172	[735]	LT       	0 K24 R22 ; if 0.000000 >= R22 then PC := 195
	173	[735]	JMP      	195 ; PC := 195
	174	[736]	GETGLOBAL	R22 K15 ; R22 := 0x3d106989
	175	[736]	GETGLOBAL	R23 K33 ; R23 := 0x64fb1586
	176	[736]	GETTABLE 	R24 R16 K34 ; R24 := R16["name"]
	177	[736]	CALL     	R23 2 2 ; R23 := R23(R24)
	178	[736]	LOADK    	R24 K43 ; R24 := " ("
	179	[736]	GETGLOBAL	R25 K44 ; R25 := 0x603636ad
	180	[736]	GETGLOBAL	R26 K33 ; R26 := 0x64fb1586
	181	[736]	GETTABLE 	R27 R16 K45 ; R27 := R16["locTag"]
	182	[736]	CALL     	R26 2 2 ; R26 := R26(R27)
	183	[736]	OP_LOADBOOL	R27 0 0 ; R27 := false
	184	[736]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	185	[736]	LOADK    	R26 K46 ; R26 := ")"
	186	[736]	LOADK    	R27 K47 ; R27 := ", matchmakingName="
	187	[736]	MOVE     	R28 R9 ; R28 := R9
	188	[736]	LOADK    	R29 K48 ; R29 := ", matchMakingId="
	189	[736]	MOVE     	R30 R10 ; R30 := R10
	190	[736]	LOADK    	R31 K49 ; R31 := ", sessionsFound="
	191	[736]	GETUPVAL 	R32 U1 ; R32 := U1
	192	[736]	GETTABLE 	R32 R32 R10 ; R32 := R32[R10]
	193	[736]	CONCAT   	R23 R23 R32 ; R23 := R23 .. R24 .. R25 .. R26 .. R27 .. R28 .. R29 .. R30 .. R31 .. R32
	194	[736]	CALL     	R22 2 1 ; R22(R23)
	195	[740]	GETGLOBAL	R22 K1 ; R22 := 0x7b998233
	196	[740]	GETGLOBAL	R23 K50 ; R23 := 0xae91e43b
	197	[740]	CALL     	R22 2 2 ; R22 := R22(R23)
	198	[740]	TEST     	R22 1 ; if R22 then PC := 247
	199	[740]	JMP      	247 ; PC := 247
	200	[740]	GETUPVAL 	R22 U6 ; R22 := U6
	201	[740]	TEST     	R22 0 ; if not R22 then PC := 247
	202	[740]	JMP      	247 ; PC := 247
	203	[740]	GETUPVAL 	R22 U6 ; R22 := U6
	204	[740]	GETTABLE 	R22 R22 R9 ; R22 := R22[R9]
	205	[740]	TEST     	R22 0 ; if not R22 then PC := 247
	206	[740]	JMP      	247 ; PC := 247
	207	[741]	GETGLOBAL	R22 K50 ; R22 := 0xae91e43b
	208	[741]	SELF     	R22 R22 K51 ; R23 := R22; R22 := R22[0xaade900e]
	209	[741]	GETUPVAL 	R24 U6 ; R24 := U6
	210	[741]	GETTABLE 	R24 R24 R9 ; R24 := R24[R9]
	211	[741]	GETTABLE 	R24 R24 K52 ; R24 := R24["clipName"]
	212	[741]	LOADK    	R25 := 11.000000
	213	[741]	GETUPVAL 	R26 U1 ; R26 := U1
	214	[741]	TEST     	R26 0 ; if not R26 then PC := 226
	215	[741]	JMP      	226 ; PC := 226
	216	[741]	GETUPVAL 	R26 U1 ; R26 := U1
	217	[741]	GETTABLE 	R26 R26 R10 ; R26 := R26[R10]
	218	[741]	TEST     	R26 0 ; if not R26 then PC := 226
	219	[741]	JMP      	226 ; PC := 226
	220	[741]	GETUPVAL 	R26 U1 ; R26 := U1
	221	[741]	GETTABLE 	R26 R26 R10 ; R26 := R26[R10]
	222	[741]	LT       	1 K24 R26 ; if 0.000000 < R26 then PC := 225
	223	[741]	JMP      	225 ; PC := 225
	224	[741]	OP_LOADBOOL	R26 0 1 ; R26 := false; PC := 225
	225	[741]	OP_LOADBOOL	R26 1 0 ; R26 := true
	226	[741]	CALL     	R22 5 1 ; R22(R23,R24,R25,R26)
	227	[742]	GETGLOBAL	R22 K50 ; R22 := 0xae91e43b
	228	[742]	SELF     	R22 R22 K53 ; R23 := R22; R22 := R22[0x5f56eeab]
	229	[742]	GETGLOBAL	R24 K54 ; R24 := mRegionLabels
	230	[742]	GETTABLE 	R24 R24 R8 ; R24 := R24[R8]
	231	[742]	LOADK    	R25 K55 ; R25 := ".Name"
	232	[742]	CONCAT   	R24 R24 R25 ; R24 := R24 .. R25
	233	[742]	LOADK    	R25 := 29.000000
	234	[742]	GETGLOBAL	R26 K44 ; R26 := 0x603636ad
	235	[742]	GETGLOBAL	R27 K33 ; R27 := 0x64fb1586
	236	[742]	GETGLOBAL	R28 K56 ; R28 := mRegions
	237	[742]	GETTABLE 	R28 R28 R8 ; R28 := R28[R8]
	238	[742]	GETTABLE 	R28 R28 K34 ; R28 := R28["name"]
	239	[742]	CALL     	R27 2 2 ; R27 := R27(R28)
	240	[742]	OP_LOADBOOL	R28 0 0 ; R28 := false
	241	[742]	CALL     	R26 3 2 ; R26 := R26(R27,R28)
	242	[742]	LOADK    	R27 K57 ; R27 := " "
	243	[742]	GETUPVAL 	R28 U0 ; R28 := U0
	244	[742]	GETTABLE 	R28 R28 R8 ; R28 := R28[R8]
	245	[742]	CONCAT   	R26 R26 R28 ; R26 := R26 .. R27 .. R28
	246	[742]	CALL     	R22 5 1 ; R22(R23,R24,R25,R26)
	247	[697]	TFORLOOP 	R12 2 ; R15,R16 := R12(R13,R14); if R15 ~= nil then begin PC = 76; R14 := R15 end
	248	[745]	JMP      	76 ; PC := 76
	249	[747]	RETURN   	R0 1 ; return 

function #17 <?:749,759> (25 instructions, 100 bytes at 0000021127825E60)
1 param, 8 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[750]	EQ       	1 R0 K0 ; if R0 == true then PC := 4
	2	[750]	JMP      	4 ; PC := 4
	3	[751]	RETURN   	R0 1 ; return 
	4	[754]	TEST     	R0 0 ; if not R0 then PC := 13
	5	[754]	JMP      	13 ; PC := 13
	6	[755]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	7	[755]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0x67bc869f]
	8	[755]	LOADK    	R3 K3 ; R3 := "RegionInfo"
	9	[755]	LOADK    	R4 := 10.000000
	10	[755]	LOADK    	R5 := 0.000000
	11	[755]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	12	[755]	JMP      	25 ; PC := 25
	13	[757]	GETGLOBAL	R1 K4 ; R1 := 0x25312c9b
	14	[757]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	15	[757]	LOADK    	R3 K3 ; R3 := "RegionInfo"
	16	[757]	LOADK    	R4 := 8.000000
	17	[757]	NEWTABLE 	R5 1 0 ; R5 := {}
	18	[757]	LOADK    	R6 K6 ; R6 := "_alpha"
	19	[757]	SETLIST  	R5 1 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
	20	[757]	NEWTABLE 	R6 1 0 ; R6 := {}
	21	[757]	LOADK    	R7 := 0.000000
	22	[757]	SETLIST  	R6 1 1 ; R6[(1-1)*FPF+i] := R(6+i), 1 <= i <= 1
	23	[757]	LOADK    	R7 K7 ; R7 := 0.200000
	24	[757]	CALL     	R1 7 1 ; R1(R2,R3,R4,R5,R6,R7)
	25	[759]	RETURN   	R0 1 ; return 

function #18 <?:763,810> (200 instructions, 800 bytes at 00000211181C1640)
0 params, 31 slots, 6 upvalues, 0 locals, 57 constants, 0 functions
	1	[764]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[764]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xd5181643]
	3	[764]	LOADK    	R2 K2 ; R2 := "InfluenceMap"
	4	[764]	GETGLOBAL	R3 K3 ; R3 := 0x6bd536f8
	5	[764]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	6	[766]	GETUPVAL 	R0 U0 ; R0 := U0
	7	[766]	NEWTABLE 	R1 0 0 ; R1 := {}
	8	[766]	SETTABLE 	R0 K4 R1 ; R0["INFLUENCE_MAP"] := R1
	9	[768]	LOADK    	R0 := 0.000000
	10	[768]	GETUPVAL 	R1 U1 ; R1 := U1
	11	[768]	GETTABLE 	R1 R1 K5 ; R1 := R1["MAX_SHADER_INFLUENCES"]
	12	[768]	SUB      	R1 R1 K6 ; R1 := R1 - 1.000000
	13	[768]	LOADK    	R2 := 1.000000
	14	[768]	FORPREP  	R0 25 ; R0 -= R2; PC := 25
	15	[769]	GETGLOBAL	R4 K7 ; R4 := 0x33bdd652
	16	[769]	GETTABLE 	R4 R4 K8 ; R4 := R4[0x23d5322f]
	17	[769]	GETUPVAL 	R5 U0 ; R5 := U0
	18	[769]	GETTABLE 	R5 R5 K4 ; R5 := R5["INFLUENCE_MAP"]
	19	[769]	GETGLOBAL	R6 K9 ; R6 := 0x0469f296
	20	[769]	LOADK    	R7 K10 ; R7 := "Influence"
	21	[769]	MOVE     	R8 R3 ; R8 := R3
	22	[769]	CONCAT   	R7 R7 R8 ; R7 := R7 .. R8
	23	[769]	CALL     	R6 2 0 ; R6,... := R6(R7)
	24	[769]	CALL     	R4 0 1 ; R4(R5,...)
	25	[768]	FORLOOP  	R0 15 ; R0 += R2; if R0 <= R1 then begin PC := 15; R3 := R0 end
	26	[772]	NEWTABLE 	R4 0 0 ; R4 := {}
	27	[772]	SETUPVAL 	R4 U2 ; U2 := R4
	28	[774]	GETGLOBAL	R4 K11 ; R4 := 0x25d99d89
	29	[774]	SELF     	R4 R4 K12 ; R5 := R4; R4 := R4[0x600a0ad6]
	30	[774]	CALL     	R4 2 2 ; R4 := R4(R5)
	31	[775]	SELF     	R5 R4 K13 ; R6 := R4; R5 := R4[0xd8140b94]
	32	[775]	CALL     	R5 2 2 ; R5 := R5(R6)
	33	[775]	TEST     	R5 0 ; if not R5 then PC := 184
	34	[775]	JMP      	184 ; PC := 184
	35	[775]	GETGLOBAL	R5 K14 ; R5 := _T
	36	[775]	GETTABLE 	R5 R5 K15 ; R5 := R5["CustomStarChartNodeFilter"]
	37	[775]	EQ       	0 R5 K16 ; if R5 ~= nil then PC := 184
	38	[775]	JMP      	184 ; PC := 184
	39	[776]	GETTABLE 	R5 R4 K17 ; R5 := R4["mInfluenceNodes"]
	40	[777]	LOADK    	R6 := 1.000000
	41	[777]	LEN      	R7 R5 ; R7 := # R5
	42	[777]	LOADK    	R8 := 1.000000
	43	[777]	FORPREP  	R6 61 ; R6 -= R8; PC := 61
	44	[778]	GETGLOBAL	R10 K18 ; R10 := 0x9bafffe3
	45	[778]	LOADK    	R11 := 0.500000
	46	[778]	LOADK    	R12 K19 ; R12 := 1.200000
	47	[778]	GETTABLE 	R13 R5 R9 ; R13 := R5[R9]
	48	[778]	GETTABLE 	R13 R13 K20 ; R13 := R13["mInfluence"]
	49	[778]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	50	[779]	GETGLOBAL	R11 K7 ; R11 := 0x33bdd652
	51	[779]	GETTABLE 	R11 R11 K8 ; R11 := R11[0x23d5322f]
	52	[779]	GETUPVAL 	R12 U2 ; R12 := U2
	53	[779]	NEWTABLE 	R13 0 2 ; R13 := {}
	54	[779]	GETTABLE 	R14 R5 R9 ; R14 := R5[R9]
	55	[779]	GETTABLE 	R14 R14 K22 ; R14 := R14["mNode"]
	56	[779]	SELF     	R14 R14 K23 ; R15 := R14; R14 := R14[0x6d604ba7]
	57	[779]	CALL     	R14 2 2 ; R14 := R14(R15)
	58	[779]	SETTABLE 	R13 K21 R14 ; R13["Node"] := R14
	59	[779]	SETTABLE 	R13 K10 R10 ; R13["Influence"] := R10
	60	[779]	CALL     	R11 3 1 ; R11(R12,R13)
	61	[777]	FORLOOP  	R6 44 ; R6 += R8; if R6 <= R7 then begin PC := 44; R9 := R6 end
	62	[782]	NEWTABLE 	R11 0 0 ; R11 := {}
	63	[783]	GETUPVAL 	R12 U3 ; R12 := U3
	64	[783]	GETTABLE 	R12 R12 K24 ; R12 := R12[0x22e50a9c]
	65	[783]	GETUPVAL 	R13 U3 ; R13 := U3
	66	[783]	GETTABLE 	R13 R13 K25 ; R13 := R13[0x6a965652]
	67	[783]	MOVE     	R14 R4 ; R14 := R4
	68	[783]	CALL     	R13 2 0 ; R13,... := R13(R14)
	69	[783]	CALL     	R12 0 2 ; R12 := R12(R13,...)
	70	[784]	GETGLOBAL	R13 K0 ; R13 := 0xae91e43b
	71	[784]	SELF     	R13 R13 K26 ; R14 := R13; R13 := R13[0x42b04007]
	72	[784]	GETUPVAL 	R15 U4 ; R15 := U4
	73	[784]	GETTABLE 	R15 R15 K27 ; R15 := R15[0x06d055f9]
	74	[784]	EQ       	1 R12 K6 ; if R12 == 1.000000 then PC := 77
	75	[784]	JMP      	77 ; PC := 77
	76	[784]	OP_LOADBOOL	R16 0 1 ; R16 := false; PC := 77
	77	[784]	OP_LOADBOOL	R16 1 0 ; R16 := true
	78	[784]	LOADK    	R17 K28 ; R17 := "<KUVA_LICH>"
	79	[784]	LOADK    	R18 K29 ; R18 := "<CORPUS_LICH>"
	80	[784]	CALL     	R15 4 2 ; R15 := R15(R16,R17,R18)
	81	[784]	OP_LOADBOOL	R16 1 0 ; R16 := true
	82	[784]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	83	[785]	EQ       	0 R12 K30 ; if R12 ~= 2.000000 then PC := 90
	84	[785]	JMP      	90 ; PC := 90
	85	[786]	GETGLOBAL	R14 K0 ; R14 := 0xae91e43b
	86	[786]	SELF     	R14 R14 K1 ; R15 := R14; R14 := R14[0xd5181643]
	87	[786]	LOADK    	R16 K2 ; R16 := "InfluenceMap"
	88	[786]	GETGLOBAL	R17 K31 ; R17 := 0x6ac0e7a4
	89	[786]	CALL     	R14 4 1 ; R14(R15,R16,R17)
	90	[788]	LOADK    	R14 := 1.000000
	91	[788]	GETUPVAL 	R15 U2 ; R15 := U2
	92	[788]	LEN      	R15 R15 ; R15 := # R15
	93	[788]	LOADK    	R16 := 1.000000
	94	[788]	FORPREP  	R14 149 ; R14 -= R16; PC := 149
	95	[789]	GETUPVAL 	R18 U5 ; R18 := U5
	96	[789]	GETUPVAL 	R19 U2 ; R19 := U2
	97	[789]	GETTABLE 	R19 R19 R17 ; R19 := R19[R17]
	98	[789]	GETTABLE 	R19 R19 K21 ; R19 := R19["Node"]
	99	[789]	GETTABLE 	R18 R18 R19 ; R18 := R18[R19]
	100	[790]	GETGLOBAL	R19 K32 ; R19 := 0x7b998233
	101	[790]	MOVE     	R20 R18 ; R20 := R18
	102	[790]	CALL     	R19 2 2 ; R19 := R19(R20)
	103	[790]	TEST     	R19 1 ; if R19 then PC := 149
	104	[790]	JMP      	149 ; PC := 149
	105	[791]	GETUPVAL 	R19 U2 ; R19 := U2
	106	[791]	GETTABLE 	R19 R19 R17 ; R19 := R19[R17]
	107	[791]	SETTABLE 	R19 K33 R18 ; R19["NodeData"] := R18
	108	[792]	MOVE     	R19 R13 ; R19 := R13
	109	[792]	GETTABLE 	R20 R18 K34 ; R20 := R18["locName"]
	110	[792]	CONCAT   	R19 R19 R20 ; R19 := R19 .. R20
	111	[792]	SETTABLE 	R18 K34 R19 ; R18["locName"] := R19
	112	[794]	GETTABLE 	R19 R18 K35 ; R19 := R18["radialSector"]
	113	[795]	GETTABLE 	R20 R19 K36 ; R20 := R19["region"]
	114	[795]	ADD      	R20 R20 K6 ; R20 := R20 + 1.000000
	115	[796]	GETUPVAL 	R21 U4 ; R21 := U4
	116	[796]	GETTABLE 	R21 R21 K37 ; R21 := R21[0xcf49d84c]
	117	[796]	MOVE     	R22 R11 ; R22 := R11
	118	[796]	MOVE     	R23 R20 ; R23 := R20
	119	[796]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	120	[796]	TEST     	R21 1 ; if R21 then PC := 149
	121	[796]	JMP      	149 ; PC := 149
	122	[797]	GETGLOBAL	R21 K7 ; R21 := 0x33bdd652
	123	[797]	GETTABLE 	R21 R21 K8 ; R21 := R21[0x23d5322f]
	124	[797]	MOVE     	R22 R11 ; R22 := R11
	125	[797]	MOVE     	R23 R20 ; R23 := R20
	126	[797]	CALL     	R21 3 1 ; R21(R22,R23)
	127	[798]	MOVE     	R21 R13 ; R21 := R13
	128	[798]	GETGLOBAL	R22 K38 ; R22 := 0x7f5022cf
	129	[798]	GETTABLE 	R22 R22 K39 ; R22 := R22[0x3f3e4d12]
	130	[798]	GETGLOBAL	R23 K40 ; R23 := 0x603636ad
	131	[798]	GETGLOBAL	R24 K41 ; R24 := 0x64fb1586
	132	[798]	GETGLOBAL	R25 K42 ; R25 := mRegions
	133	[798]	GETTABLE 	R25 R25 R20 ; R25 := R25[R20]
	134	[798]	GETTABLE 	R25 R25 K43 ; R25 := R25["name"]
	135	[798]	CALL     	R24 2 2 ; R24 := R24(R25)
	136	[798]	OP_LOADBOOL	R25 0 0 ; R25 := false
	137	[798]	CALL     	R23 3 0 ; R23,... := R23(R24,R25)
	138	[798]	CALL     	R22 0 2 ; R22 := R22(R23,...)
	139	[798]	CONCAT   	R21 R21 R22 ; R21 := R21 .. R22
	140	[799]	GETGLOBAL	R22 K0 ; R22 := 0xae91e43b
	141	[799]	SELF     	R22 R22 K44 ; R23 := R22; R22 := R22[0x5f56eeab]
	142	[799]	GETGLOBAL	R24 K45 ; R24 := mRegionLabels
	143	[799]	GETTABLE 	R24 R24 R20 ; R24 := R24[R20]
	144	[799]	LOADK    	R25 K46 ; R25 := ".Name"
	145	[799]	CONCAT   	R24 R24 R25 ; R24 := R24 .. R25
	146	[799]	LOADK    	R25 := 29.000000
	147	[799]	MOVE     	R26 R21 ; R26 := R21
	148	[799]	CALL     	R22 5 1 ; R22(R23,R24,R25,R26)
	149	[788]	FORLOOP  	R14 95 ; R14 += R16; if R14 <= R15 then begin PC := 95; R17 := R14 end
	150	[803]	GETUPVAL 	R22 U2 ; R22 := U2
	151	[803]	LEN      	R22 R22 ; R22 := # R22
	152	[803]	LT       	0 K47 R22 ; if 0.000000 >= R22 then PC := 184
	153	[803]	JMP      	184 ; PC := 184
	154	[803]	GETTABLE 	R22 R4 K48 ; R22 := R4["mWeakened"]
	155	[803]	TEST     	R22 0 ; if not R22 then PC := 184
	156	[803]	JMP      	184 ; PC := 184
	157	[803]	GETGLOBAL	R22 K32 ; R22 := 0x7b998233
	158	[803]	GETGLOBAL	R23 K49 ; R23 := mRailJack
	159	[803]	GETTABLE 	R23 R23 K50 ; R23 := R23["Button"]
	160	[803]	CALL     	R22 2 2 ; R22 := R22(R23)
	161	[803]	TEST     	R22 1 ; if R22 then PC := 184
	162	[803]	JMP      	184 ; PC := 184
	163	[804]	GETUPVAL 	R22 U4 ; R22 := U4
	164	[804]	GETTABLE 	R22 R22 K27 ; R22 := R22[0x06d055f9]
	165	[804]	EQ       	1 R12 K6 ; if R12 == 1.000000 then PC := 168
	166	[804]	JMP      	168 ; PC := 168
	167	[804]	OP_LOADBOOL	R23 0 1 ; R23 := false; PC := 168
	168	[804]	OP_LOADBOOL	R23 1 0 ; R23 := true
	169	[804]	GETGLOBAL	R24 K51 ; R24 := 0xb49168b6
	170	[804]	GETGLOBAL	R25 K52 ; R25 := 0xe2f3f0f7
	171	[804]	CALL     	R22 4 2 ; R22 := R22(R23,R24,R25)
	172	[805]	GETGLOBAL	R23 K49 ; R23 := mRailJack
	173	[805]	GETTABLE 	R23 R23 K50 ; R23 := R23["Button"]
	174	[805]	SELF     	R23 R23 K53 ; R24 := R23; R23 := R23[0x188d45da]
	175	[805]	MOVE     	R25 R22 ; R25 := R22
	176	[805]	CALL     	R23 3 1 ; R23(R24,R25)
	177	[806]	GETGLOBAL	R23 K49 ; R23 := mRailJack
	178	[806]	GETTABLE 	R23 R23 K50 ; R23 := R23["Button"]
	179	[806]	SELF     	R23 R23 K54 ; R24 := R23; R23 := R23[0x46610c50]
	180	[806]	GETGLOBAL	R25 K49 ; R25 := mRailJack
	181	[806]	GETTABLE 	R25 R25 K55 ; R25 := R25["Active"]
	182	[806]	OP_LOADBOOL	R26 1 0 ; R26 := true
	183	[806]	CALL     	R23 4 1 ; R23(R24,R25,R26)
	184	[809]	GETGLOBAL	R23 K0 ; R23 := 0xae91e43b
	185	[809]	SELF     	R23 R23 K56 ; R24 := R23; R23 := R23[0x67bc869f]
	186	[809]	LOADK    	R25 K2 ; R25 := "InfluenceMap"
	187	[809]	LOADK    	R26 := 10.000000
	188	[809]	GETUPVAL 	R27 U4 ; R27 := U4
	189	[809]	GETTABLE 	R27 R27 K27 ; R27 := R27[0x06d055f9]
	190	[809]	GETUPVAL 	R28 U2 ; R28 := U2
	191	[809]	LEN      	R28 R28 ; R28 := # R28
	192	[809]	LT       	1 K47 R28 ; if 0.000000 < R28 then PC := 195
	193	[809]	JMP      	195 ; PC := 195
	194	[809]	OP_LOADBOOL	R28 0 1 ; R28 := false; PC := 195
	195	[809]	OP_LOADBOOL	R28 1 0 ; R28 := true
	196	[809]	LOADK    	R29 := 100.000000
	197	[809]	LOADK    	R30 := 0.000000
	198	[809]	CALL     	R27 4 0 ; R27,... := R27(R28,R29,R30)
	199	[809]	CALL     	R23 0 1 ; R23(R24,...)
	200	[810]	RETURN   	R0 1 ; return 

function #19 <?:812,890> (269 instructions, 1076 bytes at 0000021124F82270)
0 params, 39 slots, 4 upvalues, 0 locals, 48 constants, 0 functions
	1	[813]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[813]	GETTABLE 	R0 R0 K0 ; R0 := R0[0x44537adf]
	3	[813]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	4	[813]	CALL     	R0 2 3 ; R0,R1 := R0(R1)
	5	[815]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	6	[815]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0x091c120e]
	7	[815]	CALL     	R2 2 2 ; R2 := R2(R3)
	8	[815]	SUB      	R2 R0 R2 ; R2 := R0 - R2
	9	[815]	MUL      	R2 R2 K3 ; R2 := R2 * 0.500000
	10	[816]	GETGLOBAL	R3 K1 ; R3 := 0xae91e43b
	11	[816]	SELF     	R3 R3 K4 ; R4 := R3; R3 := R3[0x2cc9d281]
	12	[816]	CALL     	R3 2 2 ; R3 := R3(R4)
	13	[816]	SUB      	R3 R1 R3 ; R3 := R1 - R3
	14	[816]	MUL      	R3 R3 K3 ; R3 := R3 * 0.500000
	15	[817]	GETGLOBAL	R4 K5 ; R4 := 0xb7cbd06b
	16	[817]	GETGLOBAL	R5 K6 ; R5 := Zoom
	17	[817]	GETTABLE 	R5 R5 K7 ; R5 := R5["MIN_ZOOM"]
	18	[817]	GETGLOBAL	R6 K6 ; R6 := Zoom
	19	[817]	GETTABLE 	R6 R6 K8 ; R6 := R6["MAX_ZOOM"]
	20	[817]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	21	[818]	GETGLOBAL	R5 K9 ; R5 := 0x42dcc9f5
	22	[818]	GETGLOBAL	R6 K10 ; R6 := mSmoothZoom
	23	[818]	GETTABLE 	R6 R6 K11 ; R6 := R6["mCurVal"]
	24	[818]	GETTABLE 	R7 R4 K12 ; R7 := R4["minValue"]
	25	[818]	GETTABLE 	R8 R4 K13 ; R8 := R4["maxValue"]
	26	[818]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	27	[819]	SELF     	R6 R4 K14 ; R7 := R4; R6 := R4[0x3b93153d]
	28	[819]	MOVE     	R8 R5 ; R8 := R5
	29	[819]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	30	[819]	MOVE     	R5 R6 ; R5 := R6
	31	[820]	MUL      	R5 R5 R5 ; R5 := R5 * R5
	32	[822]	LOADK    	R6 K15 ; R6 := 0.400000
	33	[823]	LOADK    	R7 K16 ; R7 := 0.940000
	34	[824]	MOVE     	R8 R5 ; R8 := R5
	35	[826]	LE       	0 R8 R6 ; if R8 > R6 then PC := 39
	36	[826]	JMP      	39 ; PC := 39
	37	[827]	MOVE     	R8 R6 ; R8 := R6
	38	[827]	JMP      	50 ; PC := 50
	39	[828]	LE       	0 R7 R8 ; if R7 > R8 then PC := 43
	40	[828]	JMP      	43 ; PC := 43
	41	[829]	MOVE     	R8 R7 ; R8 := R7
	42	[829]	JMP      	50 ; PC := 50
	43	[831]	SUB      	R9 R8 R6 ; R9 := R8 - R6
	44	[831]	SUB      	R10 R7 R6 ; R10 := R7 - R6
	45	[831]	DIV      	R8 R9 R10 ; R8 := R9 / R10
	46	[832]	MUL      	R9 R8 R8 ; R9 := R8 * R8
	47	[832]	MUL      	R10 K17 R8 ; R10 := 2.000000 * R8
	48	[832]	SUB      	R10 K18 R10 ; R10 := 3.000000 - R10
	49	[832]	MUL      	R8 R9 R10 ; R8 := R9 * R10
	50	[835]	MUL      	R9 K19 R8 ; R9 := 0.200000 * R8
	51	[835]	ADD      	R9 K3 R9 ; R9 := 0.500000 + R9
	52	[837]	LOADNIL  	R10 R12 ; R10 := R11 := R12 := nil
	53	[838]	LOADK    	R13 := 1.000000
	54	[839]	LOADK    	R14 := 0.000000
	55	[840]	LOADK    	R15 := 1.000000
	56	[841]	LOADK    	R16 := 0.000000
	57	[842]	DIV      	R17 R1 R0 ; R17 := R1 / R0
	58	[844]	NEWTABLE 	R18 0 0 ; R18 := {}
	59	[846]	LOADK    	R19 := 1.000000
	60	[846]	GETUPVAL 	R20 U1 ; R20 := U1
	61	[846]	LEN      	R20 R20 ; R20 := # R20
	62	[846]	LOADK    	R21 := 1.000000
	63	[846]	FORPREP  	R19 149 ; R19 -= R21; PC := 149
	64	[847]	LOADK    	R10 := 0.000000
	65	[848]	LOADK    	R11 := 0.000000
	66	[849]	LOADK    	R12 := 0.000000
	67	[850]	GETUPVAL 	R23 U1 ; R23 := U1
	68	[850]	GETTABLE 	R23 R23 R22 ; R23 := R23[R22]
	69	[850]	EQ       	1 R23 K20 ; if R23 == nil then PC := 149
	70	[850]	JMP      	149 ; PC := 149
	71	[850]	GETGLOBAL	R23 K21 ; R23 := 0x7b998233
	72	[850]	GETUPVAL 	R24 U1 ; R24 := U1
	73	[850]	GETTABLE 	R24 R24 R22 ; R24 := R24[R22]
	74	[850]	GETTABLE 	R24 R24 K22 ; R24 := R24["NodeData"]
	75	[850]	CALL     	R23 2 2 ; R23 := R23(R24)
	76	[850]	TEST     	R23 1 ; if R23 then PC := 149
	77	[850]	JMP      	149 ; PC := 149
	78	[851]	GETUPVAL 	R23 U1 ; R23 := U1
	79	[851]	GETTABLE 	R23 R23 R22 ; R23 := R23[R22]
	80	[851]	GETTABLE 	R23 R23 K23 ; R23 := R23["Influence"]
	81	[851]	MUL      	R12 R23 R5 ; R12 := R23 * R5
	82	[852]	GETUPVAL 	R23 U0 ; R23 := U0
	83	[852]	GETTABLE 	R23 R23 K24 ; R23 := R23[0xb5be5d4a]
	84	[852]	GETGLOBAL	R24 K1 ; R24 := 0xae91e43b
	85	[852]	GETUPVAL 	R25 U1 ; R25 := U1
	86	[852]	GETTABLE 	R25 R25 R22 ; R25 := R25[R22]
	87	[852]	GETTABLE 	R25 R25 K22 ; R25 := R25["NodeData"]
	88	[852]	GETTABLE 	R25 R25 K25 ; R25 := R25["clipName"]
	89	[852]	CALL     	R23 3 3 ; R23,R24 := R23(R24,R25)
	90	[852]	MOVE     	R11 R24 ; R11 := R24
	91	[852]	MOVE     	R10 R23 ; R10 := R23
	92	[854]	ADD      	R23 R10 R2 ; R23 := R10 + R2
	93	[854]	DIV      	R10 R23 R0 ; R10 := R23 / R0
	94	[855]	ADD      	R23 R11 R3 ; R23 := R11 + R3
	95	[855]	DIV      	R11 R23 R1 ; R11 := R23 / R1
	96	[857]	GETGLOBAL	R23 K26 ; R23 := 0x5bced4c4
	97	[857]	GETTABLE 	R23 R23 K27 ; R23 := R23[0xb62ecfe0]
	98	[857]	LOADK    	R24 K28 ; R24 := 0.010000
	99	[857]	MUL      	R25 R12 K29 ; R25 := R12 * 0.100000
	100	[857]	MUL      	R25 R25 R9 ; R25 := R25 * R9
	101	[857]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	102	[860]	UNM      	R24 R23 ; R24 := ^ R23
	103	[860]	LE       	0 R24 R10 ; if R24 > R10 then PC := 149
	104	[860]	JMP      	149 ; PC := 149
	105	[860]	ADD      	R24 K30 R23 ; R24 := 1.000000 + R23
	106	[860]	LE       	0 R10 R24 ; if R10 > R24 then PC := 149
	107	[860]	JMP      	149 ; PC := 149
	108	[860]	UNM      	R24 R23 ; R24 := ^ R23
	109	[860]	LE       	0 R24 R11 ; if R24 > R11 then PC := 149
	110	[860]	JMP      	149 ; PC := 149
	111	[860]	ADD      	R24 K30 R23 ; R24 := 1.000000 + R23
	112	[860]	LE       	0 R11 R24 ; if R11 > R24 then PC := 149
	113	[860]	JMP      	149 ; PC := 149
	114	[861]	GETGLOBAL	R24 K31 ; R24 := 0x33bdd652
	115	[861]	GETTABLE 	R24 R24 K32 ; R24 := R24[0x23d5322f]
	116	[861]	MOVE     	R25 R18 ; R25 := R18
	117	[861]	GETGLOBAL	R26 K33 ; R26 := 0xa421af95
	118	[861]	MOVE     	R27 R10 ; R27 := R10
	119	[861]	MOVE     	R28 R11 ; R28 := R11
	120	[861]	MOVE     	R29 R23 ; R29 := R23
	121	[861]	CALL     	R26 4 0 ; R26,... := R26(R27,R28,R29)
	122	[861]	CALL     	R24 0 1 ; R24(R25,...)
	123	[862]	GETGLOBAL	R24 K26 ; R24 := 0x5bced4c4
	124	[862]	GETTABLE 	R24 R24 K34 ; R24 := R24[0xac1b386a]
	125	[862]	MOVE     	R25 R13 ; R25 := R13
	126	[862]	MUL      	R26 R23 R17 ; R26 := R23 * R17
	127	[862]	SUB      	R26 R10 R26 ; R26 := R10 - R26
	128	[862]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	129	[862]	MOVE     	R13 R24 ; R13 := R24
	130	[863]	GETGLOBAL	R24 K26 ; R24 := 0x5bced4c4
	131	[863]	GETTABLE 	R24 R24 K27 ; R24 := R24[0xb62ecfe0]
	132	[863]	MOVE     	R25 R14 ; R25 := R14
	133	[863]	MUL      	R26 R23 R17 ; R26 := R23 * R17
	134	[863]	ADD      	R26 R10 R26 ; R26 := R10 + R26
	135	[863]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	136	[863]	MOVE     	R14 R24 ; R14 := R24
	137	[864]	GETGLOBAL	R24 K26 ; R24 := 0x5bced4c4
	138	[864]	GETTABLE 	R24 R24 K34 ; R24 := R24[0xac1b386a]
	139	[864]	MOVE     	R25 R15 ; R25 := R15
	140	[864]	SUB      	R26 R11 R23 ; R26 := R11 - R23
	141	[864]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	142	[864]	MOVE     	R15 R24 ; R15 := R24
	143	[865]	GETGLOBAL	R24 K26 ; R24 := 0x5bced4c4
	144	[865]	GETTABLE 	R24 R24 K27 ; R24 := R24[0xb62ecfe0]
	145	[865]	MOVE     	R25 R16 ; R25 := R16
	146	[865]	ADD      	R26 R11 R23 ; R26 := R11 + R23
	147	[865]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	148	[865]	MOVE     	R16 R24 ; R16 := R24
	149	[846]	FORLOOP  	R19 64 ; R19 += R21; if R19 <= R20 then begin PC := 64; R22 := R19 end
	150	[870]	LEN      	R24 R18 ; R24 := # R18
	151	[870]	GETUPVAL 	R25 U2 ; R25 := U2
	152	[870]	GETTABLE 	R25 R25 K35 ; R25 := R25["MAX_SHADER_INFLUENCES"]
	153	[870]	LT       	0 R25 R24 ; if R25 >= R24 then PC := 161
	154	[870]	JMP      	161 ; PC := 161
	155	[871]	GETGLOBAL	R24 K36 ; R24 := 0xc228b3a9
	156	[871]	MOVE     	R25 R18 ; R25 := R18
	157	[871]	GETUPVAL 	R26 U2 ; R26 := U2
	158	[871]	GETTABLE 	R26 R26 K35 ; R26 := R26["MAX_SHADER_INFLUENCES"]
	159	[871]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	160	[871]	MOVE     	R18 R24 ; R18 := R24
	161	[874]	LOADK    	R24 := 1.000000
	162	[874]	GETGLOBAL	R25 K26 ; R25 := 0x5bced4c4
	163	[874]	GETTABLE 	R25 R25 K34 ; R25 := R25[0xac1b386a]
	164	[874]	GETUPVAL 	R26 U2 ; R26 := U2
	165	[874]	GETTABLE 	R26 R26 K35 ; R26 := R26["MAX_SHADER_INFLUENCES"]
	166	[874]	LEN      	R27 R18 ; R27 := # R18
	167	[874]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	168	[874]	LOADK    	R26 := 1.000000
	169	[874]	FORPREP  	R24 196 ; R24 -= R26; PC := 196
	170	[875]	GETGLOBAL	R28 K37 ; R28 := 0x6bd536f8
	171	[875]	SELF     	R28 R28 K38 ; R29 := R28; R28 := R28[0x830eea67]
	172	[875]	GETUPVAL 	R30 U3 ; R30 := U3
	173	[875]	GETTABLE 	R30 R30 K39 ; R30 := R30["INFLUENCE_MAP"]
	174	[875]	GETTABLE 	R30 R30 R27 ; R30 := R30[R27]
	175	[875]	GETTABLE 	R31 R18 R27 ; R31 := R18[R27]
	176	[875]	GETTABLE 	R31 R31 K40 ; R31 := R31["x"]
	177	[875]	GETTABLE 	R32 R18 R27 ; R32 := R18[R27]
	178	[875]	GETTABLE 	R32 R32 K41 ; R32 := R32["y"]
	179	[875]	LOADK    	R33 := 0.000000
	180	[875]	GETTABLE 	R34 R18 R27 ; R34 := R18[R27]
	181	[875]	GETTABLE 	R34 R34 K42 ; R34 := R34["z"]
	182	[875]	CALL     	R28 7 1 ; R28(R29,R30,R31,R32,R33,R34)
	183	[876]	GETGLOBAL	R28 K43 ; R28 := 0x6ac0e7a4
	184	[876]	SELF     	R28 R28 K38 ; R29 := R28; R28 := R28[0x830eea67]
	185	[876]	GETUPVAL 	R30 U3 ; R30 := U3
	186	[876]	GETTABLE 	R30 R30 K39 ; R30 := R30["INFLUENCE_MAP"]
	187	[876]	GETTABLE 	R30 R30 R27 ; R30 := R30[R27]
	188	[876]	GETTABLE 	R31 R18 R27 ; R31 := R18[R27]
	189	[876]	GETTABLE 	R31 R31 K40 ; R31 := R31["x"]
	190	[876]	GETTABLE 	R32 R18 R27 ; R32 := R18[R27]
	191	[876]	GETTABLE 	R32 R32 K41 ; R32 := R32["y"]
	192	[876]	LOADK    	R33 := 0.000000
	193	[876]	GETTABLE 	R34 R18 R27 ; R34 := R18[R27]
	194	[876]	GETTABLE 	R34 R34 K42 ; R34 := R34["z"]
	195	[876]	CALL     	R28 7 1 ; R28(R29,R30,R31,R32,R33,R34)
	196	[874]	FORLOOP  	R24 170 ; R24 += R26; if R24 <= R25 then begin PC := 170; R27 := R24 end
	197	[879]	LEN      	R28 R18 ; R28 := # R18
	198	[879]	ADD      	R28 R28 K30 ; R28 := R28 + 1.000000
	199	[879]	GETUPVAL 	R29 U2 ; R29 := U2
	200	[879]	GETTABLE 	R29 R29 K35 ; R29 := R29["MAX_SHADER_INFLUENCES"]
	201	[879]	LOADK    	R30 := 1.000000
	202	[879]	FORPREP  	R28 228 ; R28 -= R30; PC := 228
	203	[880]	GETUPVAL 	R32 U3 ; R32 := U3
	204	[880]	GETTABLE 	R32 R32 K39 ; R32 := R32["INFLUENCE_MAP"]
	205	[880]	GETTABLE 	R32 R32 R31 ; R32 := R32[R31]
	206	[880]	TEST     	R32 0 ; if not R32 then PC := 228
	207	[880]	JMP      	228 ; PC := 228
	208	[881]	GETGLOBAL	R32 K37 ; R32 := 0x6bd536f8
	209	[881]	SELF     	R32 R32 K38 ; R33 := R32; R32 := R32[0x830eea67]
	210	[881]	GETUPVAL 	R34 U3 ; R34 := U3
	211	[881]	GETTABLE 	R34 R34 K39 ; R34 := R34["INFLUENCE_MAP"]
	212	[881]	GETTABLE 	R34 R34 R31 ; R34 := R34[R31]
	213	[881]	LOADK    	R35 := 0.000000
	214	[881]	LOADK    	R36 := 0.000000
	215	[881]	LOADK    	R37 := 0.000000
	216	[881]	LOADK    	R38 := 0.000000
	217	[881]	CALL     	R32 7 1 ; R32(R33,R34,R35,R36,R37,R38)
	218	[882]	GETGLOBAL	R32 K43 ; R32 := 0x6ac0e7a4
	219	[882]	SELF     	R32 R32 K38 ; R33 := R32; R32 := R32[0x830eea67]
	220	[882]	GETUPVAL 	R34 U3 ; R34 := U3
	221	[882]	GETTABLE 	R34 R34 K39 ; R34 := R34["INFLUENCE_MAP"]
	222	[882]	GETTABLE 	R34 R34 R31 ; R34 := R34[R31]
	223	[882]	LOADK    	R35 := 0.000000
	224	[882]	LOADK    	R36 := 0.000000
	225	[882]	LOADK    	R37 := 0.000000
	226	[882]	LOADK    	R38 := 0.000000
	227	[882]	CALL     	R32 7 1 ; R32(R33,R34,R35,R36,R37,R38)
	228	[879]	FORLOOP  	R28 203 ; R28 += R30; if R28 <= R29 then begin PC := 203; R31 := R28 end
	229	[886]	GETGLOBAL	R32 K37 ; R32 := 0x6bd536f8
	230	[886]	SELF     	R32 R32 K38 ; R33 := R32; R32 := R32[0x830eea67]
	231	[886]	GETGLOBAL	R34 K44 ; R34 := 0x0469f296
	232	[886]	LOADK    	R35 K45 ; R35 := "ZoomValue_NumNodes"
	233	[886]	CALL     	R34 2 2 ; R34 := R34(R35)
	234	[886]	MOVE     	R35 R5 ; R35 := R5
	235	[886]	LOADK    	R36 := 0.000000
	236	[886]	LOADK    	R37 := 0.000000
	237	[886]	LOADK    	R38 := 0.000000
	238	[886]	CALL     	R32 7 1 ; R32(R33,R34,R35,R36,R37,R38)
	239	[887]	GETGLOBAL	R32 K37 ; R32 := 0x6bd536f8
	240	[887]	SELF     	R32 R32 K38 ; R33 := R32; R32 := R32[0x830eea67]
	241	[887]	GETGLOBAL	R34 K44 ; R34 := 0x0469f296
	242	[887]	LOADK    	R35 K46 ; R35 := "Bounds"
	243	[887]	CALL     	R34 2 2 ; R34 := R34(R35)
	244	[887]	SUB      	R35 R13 K47 ; R35 := R13 - 0.020000
	245	[887]	ADD      	R36 R14 K47 ; R36 := R14 + 0.020000
	246	[887]	SUB      	R37 R15 K47 ; R37 := R15 - 0.020000
	247	[887]	ADD      	R38 R16 K47 ; R38 := R16 + 0.020000
	248	[887]	CALL     	R32 7 1 ; R32(R33,R34,R35,R36,R37,R38)
	249	[888]	GETGLOBAL	R32 K43 ; R32 := 0x6ac0e7a4
	250	[888]	SELF     	R32 R32 K38 ; R33 := R32; R32 := R32[0x830eea67]
	251	[888]	GETGLOBAL	R34 K44 ; R34 := 0x0469f296
	252	[888]	LOADK    	R35 K45 ; R35 := "ZoomValue_NumNodes"
	253	[888]	CALL     	R34 2 2 ; R34 := R34(R35)
	254	[888]	MOVE     	R35 R5 ; R35 := R5
	255	[888]	LOADK    	R36 := 0.000000
	256	[888]	LOADK    	R37 := 0.000000
	257	[888]	LOADK    	R38 := 0.000000
	258	[888]	CALL     	R32 7 1 ; R32(R33,R34,R35,R36,R37,R38)
	259	[889]	GETGLOBAL	R32 K43 ; R32 := 0x6ac0e7a4
	260	[889]	SELF     	R32 R32 K38 ; R33 := R32; R32 := R32[0x830eea67]
	261	[889]	GETGLOBAL	R34 K44 ; R34 := 0x0469f296
	262	[889]	LOADK    	R35 K46 ; R35 := "Bounds"
	263	[889]	CALL     	R34 2 2 ; R34 := R34(R35)
	264	[889]	SUB      	R35 R13 K47 ; R35 := R13 - 0.020000
	265	[889]	ADD      	R36 R14 K47 ; R36 := R14 + 0.020000
	266	[889]	SUB      	R37 R15 K47 ; R37 := R15 - 0.020000
	267	[889]	ADD      	R38 R16 K47 ; R38 := R16 + 0.020000
	268	[889]	CALL     	R32 7 1 ; R32(R33,R34,R35,R36,R37,R38)
	269	[890]	RETURN   	R0 1 ; return 

function #20 <?:892,894> (17 instructions, 68 bytes at 0000021135B44E80)
1 param, 4 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[893]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[893]	MOVE     	R2 R0 ; R2 := R0
	3	[893]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[893]	TEST     	R1 1 ; if R1 then PC := 14
	5	[893]	JMP      	14 ; PC := 14
	6	[893]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	7	[893]	SELF     	R2 R0 K1 ; R3 := R0; R2 := R0[0xde321e6f]
	8	[893]	CALL     	R2 2 2 ; R2 := R2(R3)
	9	[893]	SELF     	R2 R2 K2 ; R3 := R2; R2 := R2[0x33c6e9d3]
	10	[893]	CALL     	R2 2 0 ; R2,... := R2(R3)
	11	[893]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	12	[893]	NOT      	R1 R1 ; R1 := not R1
	13	[893]	JMP      	16 ; PC := 16
	14	[893]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 15
	15	[893]	OP_LOADBOOL	R1 1 0 ; R1 := true
	16	[893]	RETURN   	R1 2 ; return R1 
	17	[894]	RETURN   	R0 1 ; return 

function #21 <?:896,913> (95 instructions, 380 bytes at 000002112EADD730)
0 params, 6 slots, 0 upvalues, 0 locals, 25 constants, 0 functions
	1	[897]	GETGLOBAL	R0 K0 ; R0 := 0x2d0fad09
	2	[897]	LOADK    	R1 K1 ; R1 := "Lotus.Interface.UIStyleUtilities"
	3	[897]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[899]	GETGLOBAL	R1 K2 ; R1 := mColors
	5	[899]	GETTABLE 	R2 R0 K4 ; R2 := R0[0x5d10207d]
	6	[899]	LOADK    	R3 := 9.000000
	7	[899]	OP_LOADBOOL	R4 0 0 ; R4 := false
	8	[899]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	9	[899]	SETTABLE 	R1 K3 R2 ; R1["FloatingContentObject"] := R2
	10	[900]	GETGLOBAL	R1 K2 ; R1 := mColors
	11	[900]	GETGLOBAL	R2 K2 ; R2 := mColors
	12	[900]	GETTABLE 	R2 R2 K3 ; R2 := R2["FloatingContentObject"]
	13	[900]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0xa5d5c8f6]
	14	[900]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[900]	SETTABLE 	R1 K6 R2 ; R1["FloatingContent"] := R2
	16	[901]	GETGLOBAL	R1 K2 ; R1 := mColors
	17	[901]	LOADK    	R2 K9 ; R2 := "#"
	18	[901]	GETGLOBAL	R3 K10 ; R3 := 0x7f5022cf
	19	[901]	GETTABLE 	R3 R3 K11 ; R3 := R3[0xe8072ded]
	20	[901]	LOADK    	R4 K12 ; R4 := "%X"
	21	[901]	GETGLOBAL	R5 K2 ; R5 := mColors
	22	[901]	GETTABLE 	R5 R5 K6 ; R5 := R5["FloatingContent"]
	23	[901]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	24	[901]	CONCAT   	R2 R2 R3 ; R2 := R2 .. R3
	25	[901]	SETTABLE 	R1 K8 R2 ; R1["FloatingContentHtml"] := R2
	26	[902]	GETGLOBAL	R1 K2 ; R1 := mColors
	27	[902]	GETTABLE 	R2 R0 K4 ; R2 := R0[0x5d10207d]
	28	[902]	LOADK    	R3 := 10.000000
	29	[902]	OP_LOADBOOL	R4 0 0 ; R4 := false
	30	[902]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	31	[902]	SETTABLE 	R1 K13 R2 ; R1["FloatingContentHighlightObject"] := R2
	32	[903]	GETGLOBAL	R1 K2 ; R1 := mColors
	33	[903]	GETGLOBAL	R2 K2 ; R2 := mColors
	34	[903]	GETTABLE 	R2 R2 K13 ; R2 := R2["FloatingContentHighlightObject"]
	35	[903]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0xa5d5c8f6]
	36	[903]	CALL     	R2 2 2 ; R2 := R2(R3)
	37	[903]	SETTABLE 	R1 K14 R2 ; R1["FloatingContentHighlight"] := R2
	38	[904]	GETGLOBAL	R1 K2 ; R1 := mColors
	39	[904]	LOADK    	R2 K9 ; R2 := "#"
	40	[904]	GETGLOBAL	R3 K10 ; R3 := 0x7f5022cf
	41	[904]	GETTABLE 	R3 R3 K11 ; R3 := R3[0xe8072ded]
	42	[904]	LOADK    	R4 K12 ; R4 := "%X"
	43	[904]	GETGLOBAL	R5 K2 ; R5 := mColors
	44	[904]	GETTABLE 	R5 R5 K14 ; R5 := R5["FloatingContentHighlight"]
	45	[904]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	46	[904]	CONCAT   	R2 R2 R3 ; R2 := R2 .. R3
	47	[904]	SETTABLE 	R1 K15 R2 ; R1["FloatingContentHighlightHtml"] := R2
	48	[905]	GETGLOBAL	R1 K2 ; R1 := mColors
	49	[905]	GETTABLE 	R2 R0 K4 ; R2 := R0[0x5d10207d]
	50	[905]	LOADK    	R3 := 6.000000
	51	[905]	OP_LOADBOOL	R4 1 0 ; R4 := true
	52	[905]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	53	[905]	SETTABLE 	R1 K16 R2 ; R1["Content"] := R2
	54	[906]	GETGLOBAL	R1 K2 ; R1 := mColors
	55	[906]	LOADK    	R2 K9 ; R2 := "#"
	56	[906]	GETGLOBAL	R3 K10 ; R3 := 0x7f5022cf
	57	[906]	GETTABLE 	R3 R3 K11 ; R3 := R3[0xe8072ded]
	58	[906]	LOADK    	R4 K12 ; R4 := "%X"
	59	[906]	GETGLOBAL	R5 K2 ; R5 := mColors
	60	[906]	GETTABLE 	R5 R5 K16 ; R5 := R5["Content"]
	61	[906]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	62	[906]	CONCAT   	R2 R2 R3 ; R2 := R2 .. R3
	63	[906]	SETTABLE 	R1 K17 R2 ; R1["ContentHtml"] := R2
	64	[907]	GETGLOBAL	R1 K2 ; R1 := mColors
	65	[907]	GETTABLE 	R2 R0 K4 ; R2 := R0[0x5d10207d]
	66	[907]	LOADK    	R3 := 7.000000
	67	[907]	OP_LOADBOOL	R4 1 0 ; R4 := true
	68	[907]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	69	[907]	SETTABLE 	R1 K18 R2 ; R1["ContentHighlight"] := R2
	70	[908]	GETGLOBAL	R1 K2 ; R1 := mColors
	71	[908]	GETTABLE 	R2 R0 K4 ; R2 := R0[0x5d10207d]
	72	[908]	LOADK    	R3 := 2.000000
	73	[908]	OP_LOADBOOL	R4 0 0 ; R4 := false
	74	[908]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	75	[908]	SETTABLE 	R1 K19 R2 ; R1["Background1Object"] := R2
	76	[909]	GETGLOBAL	R1 K2 ; R1 := mColors
	77	[909]	GETGLOBAL	R2 K2 ; R2 := mColors
	78	[909]	GETTABLE 	R2 R2 K19 ; R2 := R2["Background1Object"]
	79	[909]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0xa5d5c8f6]
	80	[909]	CALL     	R2 2 2 ; R2 := R2(R3)
	81	[909]	SETTABLE 	R1 K20 R2 ; R1[0x00000000] := R2
	82	[910]	GETGLOBAL	R1 K2 ; R1 := mColors
	83	[910]	GETTABLE 	R2 R0 K4 ; R2 := R0[0x5d10207d]
	84	[910]	LOADK    	R3 := 1.000000
	85	[910]	OP_LOADBOOL	R4 1 0 ; R4 := true
	86	[910]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	87	[910]	SETTABLE 	R1 K21 R2 ; R1["BackerHighlight"] := R2
	88	[912]	GETGLOBAL	R1 K22 ; R1 := 0xae91e43b
	89	[912]	SELF     	R1 R1 K23 ; R2 := R1; R1 := R1[0x67bc869f]
	90	[912]	LOADK    	R3 K24 ; R3 := "ClickBlocker"
	91	[912]	LOADK    	R4 := 9.000000
	92	[912]	GETGLOBAL	R5 K2 ; R5 := mColors
	93	[912]	GETTABLE 	R5 R5 K20 ; R5 := R5["Background1"]
	94	[912]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	95	[913]	RETURN   	R0 1 ; return 

function #22 <?:915,985> (27 instructions, 108 bytes at 000002112EADD7C0)
0 params, 10 slots, 11 upvalues, 0 locals, 12 constants, 1 function
	1	[916]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[916]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x41376e53]
	3	[916]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	4	[916]	LOADK    	R2 K3 ; R2 := "InfoTip"
	5	[916]	GETUPVAL 	R3 U1 ; R3 := U1
	6	[916]	GETGLOBAL	R4 K4 ; R4 := 0xd918e45a
	7	[916]	GETGLOBAL	R5 K5 ; R5 := 0xa31b86df
	8	[916]	GETGLOBAL	R6 K6 ; R6 := 0xb3f08a76
	9	[916]	GETGLOBAL	R7 K7 ; R7 := 0x188b225c
	10	[916]	GETGLOBAL	R8 K8 ; R8 := 0xcbb66c2a
	11	[916]	GETGLOBAL	R9 K9 ; R9 := 0xe60ebba5
	12	[916]	CALL     	R0 10 2 ; R0 := R0(R1,R2,R3,R4,R5,R6,R7,R8,R9)
	13	[916]	SETGLOBALHASH	R0 K0 ; mInfoTip := R0
	14	[917]	GETGLOBAL	R0 K0 ; R0 := mInfoTip
	15	[917]	GETTABLE 	R0 R0 K10 ; R0 := R0["NodeMissionList"]
	16	[984]	CLOSURE  	R1 0 ; R1 := closure(Function #1)
	17	[984]	GETUPVAL 	R0 U2 ; R0 := U2
	18	[984]	GETUPVAL 	R0 U3 ; R0 := U3
	19	[984]	GETUPVAL 	R0 U4 ; R0 := U4
	20	[984]	GETUPVAL 	R0 U5 ; R0 := U5
	21	[984]	GETUPVAL 	R0 U6 ; R0 := U6
	22	[984]	GETUPVAL 	R0 U7 ; R0 := U7
	23	[984]	GETUPVAL 	R0 U8 ; R0 := U8
	24	[984]	GETUPVAL 	R0 U9 ; R0 := U9
	25	[984]	GETUPVAL 	R0 U10 ; R0 := U10
	26	[984]	SETTABLE 	R0 K11 R1 ; R0["mOnSelectedCallback"] := R1
	27	[985]	RETURN   	R0 1 ; return 

function #23 <?:987,1025> (55 instructions, 220 bytes at 000002111F05A260)
0 params, 11 slots, 7 upvalues, 0 locals, 19 constants, 2 functions
	1	[988]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[988]	GETTABLE 	R0 R0 K0 ; R0 := R0["Settings"]
	3	[988]	LEN      	R0 R0 ; R0 := # R0
	4	[988]	LT       	0 K1 R0 ; if 0.000000 >= R0 then PC := 15
	5	[988]	JMP      	15 ; PC := 15
	6	[990]	GETGLOBAL	R0 K2 ; R0 := 0xae91e43b
	7	[990]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0xaade900e]
	8	[990]	LOADK    	R2 K4 ; R2 := "DifficultySelector"
	9	[990]	LOADK    	R3 := 11.000000
	10	[990]	GETGLOBAL	R4 K5 ; R4 := mRailJack
	11	[990]	GETTABLE 	R4 R4 K6 ; R4 := R4["Active"]
	12	[990]	NOT      	R4 R4 ; R4 := not R4
	13	[990]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	14	[991]	RETURN   	R0 1 ; return 
	15	[994]	GETUPVAL 	R0 U0 ; R0 := U0
	16	[1005]	CLOSURE  	R1 0 ; R1 := closure(Function #1)
	17	[1005]	GETUPVAL 	R0 U1 ; R0 := U1
	18	[1005]	GETUPVAL 	R0 U2 ; R0 := U2
	19	[1005]	GETUPVAL 	R0 U3 ; R0 := U3
	20	[1005]	SETTABLE 	R0 K7 R1 ; R0["OnDifficultyChanged"] := R1
	21	[1007]	GETUPVAL 	R0 U4 ; R0 := U4
	22	[1007]	GETTABLE 	R0 R0 K8 ; R0 := R0[0xde12f95c]
	23	[1007]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	24	[1007]	GETUPVAL 	R2 U5 ; R2 := U5
	25	[1007]	GETGLOBAL	R3 K5 ; R3 := mRailJack
	26	[1007]	GETGLOBAL	R4 K9 ; R4 := mColors
	27	[1007]	GETGLOBAL	R5 K10 ; R5 := 0xe3ed59f3
	28	[1007]	GETUPVAL 	R6 U0 ; R6 := U0
	29	[1007]	CALL     	R0 7 1 ; R0(R1,R2,R3,R4,R5,R6)
	30	[1010]	GETGLOBAL	R0 K5 ; R0 := mRailJack
	31	[1010]	GETTABLE 	R0 R0 K6 ; R0 := R0["Active"]
	32	[1010]	TEST     	R0 1 ; if R0 then PC := 55
	33	[1010]	JMP      	55 ; PC := 55
	34	[1010]	GETUPVAL 	R0 U0 ; R0 := U0
	35	[1010]	GETTABLE 	R0 R0 K11 ; R0 := R0["CurrentTier"]
	36	[1010]	EQ       	0 R0 K1 ; if R0 ~= 0.000000 then PC := 55
	37	[1010]	JMP      	55 ; PC := 55
	38	[1010]	GETGLOBAL	R0 K12 ; R0 := 0x0032441c
	39	[1010]	GETTABLE 	R0 R0 K13 ; R0 := R0["DifficultySelectorPulse"]
	40	[1010]	EQ       	0 R0 K14 ; if R0 ~= nil then PC := 55
	41	[1010]	JMP      	55 ; PC := 55
	42	[1011]	GETUPVAL 	R0 U6 ; R0 := U6
	43	[1011]	GETTABLE 	R0 R0 K15 ; R0 := R0[0x7fa20839]
	44	[1011]	CALL     	R0 1 7 ; R0,R1,R2,R3,R4,R5 := R0()
	45	[1012]	EQ       	0 R3 K1 ; if R3 ~= 0.000000 then PC := 55
	46	[1012]	JMP      	55 ; PC := 55
	47	[1013]	GETGLOBAL	R6 K12 ; R6 := 0x0032441c
	48	[1013]	SETTABLE 	R6 K13 K16 ; R6["DifficultySelectorPulse"] := true
	49	[1014]	GETUPVAL 	R6 U5 ; R6 := U5
	50	[1014]	SELF     	R6 R6 K17 ; R7 := R6; R6 := R6[0xbd2e96ea]
	51	[1014]	LOADK    	R8 K18 ; R8 := 0.050000
	52	[1021]	CLOSURE  	R9 1 ; R9 := closure(Function #2)
	53	[1022]	OP_LOADBOOL	R10 1 0 ; R10 := true
	54	[1014]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	55	[1025]	RETURN   	R0 1 ; return 

function #24 <?:1027,1033> (10 instructions, 40 bytes at 000002111E310B80)
0 params, 2 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[1028]	GETGLOBAL	R0 K0 ; R0 := mRailJack
	2	[1028]	GETTABLE 	R0 R0 K1 ; R0 := R0["Active"]
	3	[1028]	TEST     	R0 0 ; if not R0 then PC := 7
	4	[1028]	JMP      	7 ; PC := 7
	5	[1030]	LOADK    	R0 := 0.000000
	6	[1030]	RETURN   	R0 2 ; return R0 
	7	[1032]	GETUPVAL 	R0 U0 ; R0 := U0
	8	[1032]	GETTABLE 	R0 R0 K2 ; R0 := R0["CurrentTier"]
	9	[1032]	RETURN   	R0 2 ; return R0 
	10	[1033]	RETURN   	R0 1 ; return 

function #25 <?:1035,1234> (603 instructions, 2412 bytes at 000002111E310C90)
1 param, 25 slots, 21 upvalues, 0 locals, 145 constants, 3 functions
	1	[1036]	GETGLOBAL	R1 K0 ; R1 := 0x34291f5c
	2	[1036]	GETTABLE 	R1 R1 K1 ; R1 := R1[0xe6b41adb]
	3	[1036]	CALL     	R1 1 2 ; R1 := R1()
	4	[1036]	TEST     	R1 0 ; if not R1 then PC := 12
	5	[1036]	JMP      	12 ; PC := 12
	6	[1037]	GETGLOBAL	R1 K2 ; R1 := 0x89326c93
	7	[1037]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xfb64e76c]
	8	[1037]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[1037]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x97c4ff93]
	10	[1037]	OP_LOADBOOL	R3 1 0 ; R3 := true
	11	[1037]	CALL     	R1 3 1 ; R1(R2,R3)
	12	[1039]	GETGLOBAL	R1 K5 ; R1 := 0xae91e43b
	13	[1039]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0xaade900e]
	14	[1039]	LOADK    	R3 K7 ; R3 := "VoidTrader"
	15	[1039]	LOADK    	R4 := 11.000000
	16	[1039]	OP_LOADBOOL	R5 0 0 ; R5 := false
	17	[1039]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	18	[1041]	GETGLOBAL	R1 K5 ; R1 := 0xae91e43b
	19	[1041]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0xaade900e]
	20	[1041]	LOADK    	R3 K8 ; R3 := "Nodes.Node"
	21	[1041]	LOADK    	R4 := 11.000000
	22	[1041]	OP_LOADBOOL	R5 0 0 ; R5 := false
	23	[1041]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	24	[1042]	GETGLOBAL	R1 K5 ; R1 := 0xae91e43b
	25	[1042]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0xaade900e]
	26	[1042]	LOADK    	R3 K9 ; R3 := "NodeNotification"
	27	[1042]	LOADK    	R4 := 11.000000
	28	[1042]	OP_LOADBOOL	R5 0 0 ; R5 := false
	29	[1042]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	30	[1043]	GETGLOBAL	R1 K5 ; R1 := 0xae91e43b
	31	[1043]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0xaade900e]
	32	[1043]	LOADK    	R3 K10 ; R3 := "SubLabel"
	33	[1043]	LOADK    	R4 := 11.000000
	34	[1043]	OP_LOADBOOL	R5 0 0 ; R5 := false
	35	[1043]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	36	[1045]	TEST     	R0 0 ; if not R0 then PC := 58
	37	[1045]	JMP      	58 ; PC := 58
	38	[1046]	GETGLOBAL	R1 K11 ; R1 := 0x2d0fad09
	39	[1046]	LOADK    	R2 K12 ; R2 := "Lotus.Interface.Components.ThemedButton"
	40	[1046]	CALL     	R1 2 2 ; R1 := R1(R2)
	41	[1047]	GETTABLE 	R2 R1 K13 ; R2 := R1[0xae6791ba]
	42	[1047]	GETGLOBAL	R3 K5 ; R3 := 0xae91e43b
	43	[1047]	LOADK    	R4 K14 ; R4 := "SubLabel.JoinBtn"
	44	[1047]	LOADK    	R5 K15 ; R5 := ""
	45	[1047]	LOADK    	R6 K15 ; R6 := ""
	46	[1047]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	47	[1048]	SELF     	R3 R2 K16 ; R4 := R2; R3 := R2[0x4e86c602]
	48	[1048]	OP_LOADBOOL	R5 1 0 ; R5 := true
	49	[1048]	CALL     	R3 3 1 ; R3(R4,R5)
	50	[1049]	SELF     	R3 R2 K17 ; R4 := R2; R3 := R2[0x46610c50]
	51	[1049]	OP_LOADBOOL	R5 0 0 ; R5 := false
	52	[1049]	CALL     	R3 3 1 ; R3(R4,R5)
	53	[1050]	SELF     	R3 R2 K18 ; R4 := R2; R3 := R2[0x368ad758]
	54	[1050]	OP_LOADBOOL	R5 0 0 ; R5 := false
	55	[1050]	CALL     	R3 3 1 ; R3(R4,R5)
	56	[1051]	SELF     	R3 R2 K19 ; R4 := R2; R3 := R2[0x71e9ac81]
	57	[1051]	CALL     	R3 2 1 ; R3(R4)
	58	[1054]	GETGLOBAL	R3 K5 ; R3 := 0xae91e43b
	59	[1054]	SELF     	R3 R3 K6 ; R4 := R3; R3 := R3[0xaade900e]
	60	[1054]	LOADK    	R5 K20 ; R5 := "NodeTransmission"
	61	[1054]	LOADK    	R6 := 11.000000
	62	[1054]	OP_LOADBOOL	R7 0 0 ; R7 := false
	63	[1054]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	64	[1055]	GETGLOBAL	R3 K5 ; R3 := 0xae91e43b
	65	[1055]	SELF     	R3 R3 K21 ; R4 := R3; R3 := R3[0x67bc869f]
	66	[1055]	LOADK    	R5 K22 ; R5 := "InfluenceMap"
	67	[1055]	LOADK    	R6 := 10.000000
	68	[1055]	LOADK    	R7 := 0.000000
	69	[1055]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	70	[1057]	GETGLOBAL	R3 K5 ; R3 := 0xae91e43b
	71	[1057]	SELF     	R3 R3 K21 ; R4 := R3; R3 := R3[0x67bc869f]
	72	[1057]	LOADK    	R5 K23 ; R5 := "ClickBlocker"
	73	[1057]	LOADK    	R6 := 10.000000
	74	[1057]	LOADK    	R7 := 0.000000
	75	[1057]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	76	[1058]	GETGLOBAL	R3 K5 ; R3 := 0xae91e43b
	77	[1058]	SELF     	R3 R3 K6 ; R4 := R3; R3 := R3[0xaade900e]
	78	[1058]	LOADK    	R5 K23 ; R5 := "ClickBlocker"
	79	[1058]	LOADK    	R6 := 59.000000
	80	[1058]	OP_LOADBOOL	R7 0 0 ; R7 := false
	81	[1058]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	82	[1060]	GETGLOBAL	R3 K5 ; R3 := 0xae91e43b
	83	[1060]	SELF     	R3 R3 K6 ; R4 := R3; R3 := R3[0xaade900e]
	84	[1060]	LOADK    	R5 K24 ; R5 := "DifficultySelector"
	85	[1060]	LOADK    	R6 := 11.000000
	86	[1060]	OP_LOADBOOL	R7 0 0 ; R7 := false
	87	[1060]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	88	[1061]	GETGLOBAL	R3 K5 ; R3 := 0xae91e43b
	89	[1061]	SELF     	R3 R3 K21 ; R4 := R3; R3 := R3[0x67bc869f]
	90	[1061]	LOADK    	R5 K24 ; R5 := "DifficultySelector"
	91	[1061]	LOADK    	R6 := 10.000000
	92	[1061]	LOADK    	R7 := 0.000000
	93	[1061]	CALL     	R3 5 1 ; R3(R4,R5,R6,R7)
	94	[1063]	GETGLOBAL	R3 K25 ; R3 := 0x76ea806b
	95	[1063]	SELF     	R3 R3 K26 ; R4 := R3; R3 := R3[0x3f3ae64c]
	96	[1063]	LOADK    	R5 := 0.000000
	97	[1063]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	98	[1063]	SELF     	R3 R3 K27 ; R4 := R3; R3 := R3[0x80563238]
	99	[1063]	CALL     	R3 2 2 ; R3 := R3(R4)
	100	[1064]	SELF     	R4 R3 K28 ; R5 := R3; R4 := R3[0x62c81b76]
	101	[1064]	CALL     	R4 2 2 ; R4 := R4(R5)
	102	[1065]	GETGLOBAL	R5 K2 ; R5 := 0x89326c93
	103	[1065]	SELF     	R5 R5 K3 ; R6 := R5; R5 := R5[0xfb64e76c]
	104	[1065]	CALL     	R5 2 2 ; R5 := R5(R6)
	105	[1065]	SELF     	R5 R5 K28 ; R6 := R5; R5 := R5[0x62c81b76]
	106	[1065]	CALL     	R5 2 2 ; R5 := R5(R6)
	107	[1065]	GETTABLE 	R5 R5 K29 ; R5 := R5["mCrewShipLoadOut"]
	108	[1066]	SELF     	R6 R4 K30 ; R7 := R4; R6 := R4[0xb61abfd2]
	109	[1066]	LOADK    	R8 := 2.000000
	110	[1066]	LOADK    	R9 := 0.000000
	111	[1066]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	112	[1067]	SELF     	R7 R4 K30 ; R8 := R4; R7 := R4[0xb61abfd2]
	113	[1067]	LOADK    	R9 := 2.000000
	114	[1067]	LOADK    	R10 := 2.000000
	115	[1067]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	116	[1068]	SELF     	R8 R4 K30 ; R9 := R4; R8 := R4[0xb61abfd2]
	117	[1068]	LOADK    	R10 := 2.000000
	118	[1068]	LOADK    	R11 := 3.000000
	119	[1068]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	120	[1069]	GETGLOBAL	R9 K32 ; R9 := 0x7b998233
	121	[1069]	GETTABLE 	R10 R6 K33 ; R10 := R6["mItemType"]
	122	[1069]	CALL     	R9 2 2 ; R9 := R9(R10)
	123	[1069]	TEST     	R9 1 ; if R9 then PC := 135
	124	[1069]	JMP      	135 ; PC := 135
	125	[1069]	GETGLOBAL	R9 K32 ; R9 := 0x7b998233
	126	[1069]	GETTABLE 	R10 R7 K33 ; R10 := R7["mItemType"]
	127	[1069]	CALL     	R9 2 2 ; R9 := R9(R10)
	128	[1069]	TEST     	R9 1 ; if R9 then PC := 135
	129	[1069]	JMP      	135 ; PC := 135
	130	[1069]	GETGLOBAL	R9 K32 ; R9 := 0x7b998233
	131	[1069]	GETTABLE 	R10 R8 K33 ; R10 := R8["mItemType"]
	132	[1069]	CALL     	R9 2 2 ; R9 := R9(R10)
	133	[1069]	NOT      	R9 R9 ; R9 := not R9
	134	[1069]	JMP      	137 ; PC := 137
	135	[1069]	OP_LOADBOOL	R9 0 1 ; R9 := false; PC := 136
	136	[1069]	OP_LOADBOOL	R9 1 0 ; R9 := true
	137	[1070]	SELF     	R10 R3 K34 ; R11 := R3; R10 := R3[0xc192c12e]
	138	[1070]	CALL     	R10 2 2 ; R10 := R10(R11)
	139	[1072]	GETGLOBAL	R11 K36 ; R11 := _T
	140	[1072]	GETTABLE 	R11 R11 K37 ; R11 := R11["CustomStarChartNodeFilter"]
	141	[1072]	EQ       	1 R11 K38 ; if R11 == nil then PC := 147
	142	[1072]	JMP      	147 ; PC := 147
	143	[1072]	GETGLOBAL	R11 K36 ; R11 := _T
	144	[1072]	GETTABLE 	R11 R11 K37 ; R11 := R11["CustomStarChartNodeFilter"]
	145	[1072]	GETTABLE 	R11 R11 K39 ; R11 := R11["NewWarMode"]
	146	[1072]	JMP      	149 ; PC := 149
	147	[1072]	OP_LOADBOOL	R11 0 1 ; R11 := false; PC := 148
	148	[1072]	OP_LOADBOOL	R11 1 0 ; R11 := true
	149	[1072]	SETGLOBALHASH	R11 K35 ; mNewWarMode := R11
	150	[1074]	GETGLOBAL	R11 K40 ; R11 := mRailJack
	151	[1074]	GETGLOBAL	R12 K32 ; R12 := 0x7b998233
	152	[1074]	GETGLOBAL	R13 K36 ; R13 := _T
	153	[1074]	GETTABLE 	R13 R13 K42 ; R13 := R13["InRailJackMode"]
	154	[1074]	CALL     	R12 2 2 ; R12 := R12(R13)
	155	[1074]	TEST     	R12 1 ; if R12 then PC := 160
	156	[1074]	JMP      	160 ; PC := 160
	157	[1074]	GETGLOBAL	R12 K36 ; R12 := _T
	158	[1074]	GETTABLE 	R12 R12 K42 ; R12 := R12["InRailJackMode"]
	159	[1074]	JMP      	162 ; PC := 162
	160	[1074]	OP_LOADBOOL	R12 0 1 ; R12 := false; PC := 161
	161	[1074]	OP_LOADBOOL	R12 1 0 ; R12 := true
	162	[1074]	SETTABLE 	R11 K41 R12 ; R11["Active"] := R12
	163	[1075]	GETGLOBAL	R11 K40 ; R11 := mRailJack
	164	[1077]	TESTSET  	R12 R10 0 ; if not R10 then PC := 196 else R12 := R10 
	165	[1077]	JMP      	196 ; PC := 196
	166	[1078]	GETGLOBAL	R12 K32 ; R12 := 0x7b998233
	167	[1078]	MOVE     	R13 R5 ; R13 := R5
	168	[1078]	CALL     	R12 2 2 ; R12 := R12(R13)
	169	[1078]	TEST     	R12 1 ; if R12 then PC := 194
	170	[1078]	JMP      	194 ; PC := 194
	171	[1079]	GETGLOBAL	R12 K32 ; R12 := 0x7b998233
	172	[1079]	GETTABLE 	R13 R5 K44 ; R13 := R5["mShip"]
	173	[1079]	CALL     	R12 2 2 ; R12 := R12(R13)
	174	[1079]	TEST     	R12 1 ; if R12 then PC := 194
	175	[1079]	JMP      	194 ; PC := 194
	176	[1080]	GETTABLE 	R12 R5 K44 ; R12 := R5["mShip"]
	177	[1080]	GETTABLE 	R12 R12 K45 ; R12 := R12["mItemId"]
	178	[1080]	GETTABLE 	R12 R12 K46 ; R12 := R12["mId"]
	179	[1080]	GETGLOBAL	R13 K31 ; R13 := 0x6c97a788
	180	[1080]	GETTABLE 	R13 R13 K47 ; R13 := R13["InvalidItemID"]
	181	[1080]	EQ       	1 R12 R13 ; if R12 == R13 then PC := 194
	182	[1080]	JMP      	194 ; PC := 194
	183	[1081]	GETGLOBAL	R12 K48 ; R12 := 0x25d99d89
	184	[1081]	SELF     	R12 R12 K49 ; R13 := R12; R12 := R12[0x4ae54c32]
	185	[1081]	GETUPVAL 	R14 U0 ; R14 := U0
	186	[1081]	GETTABLE 	R14 R14 K50 ; R14 := R14["SF_RAILJACK_KEY"]
	187	[1081]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	188	[1081]	TEST     	R12 0 ; if not R12 then PC := 196
	189	[1081]	JMP      	196 ; PC := 196
	190	[1082]	GETUPVAL 	R12 U0 ; R12 := U0
	191	[1082]	GETTABLE 	R12 R12 K51 ; R12 := R12[0xc00479a5]
	192	[1082]	CALL     	R12 1 2 ; R12 := R12()
	193	[1083]	JMP      	196 ; PC := 196
	194	[1083]	OP_LOADBOOL	R12 0 1 ; R12 := false; PC := 195
	195	[1083]	OP_LOADBOOL	R12 1 0 ; R12 := true
	196	[1083]	SETTABLE 	R11 K43 R12 ; R11["CanHost"] := R12
	197	[1085]	GETGLOBAL	R11 K40 ; R11 := mRailJack
	198	[1085]	GETTABLE 	R11 R11 K52 ; R11 := R11["Button"]
	199	[1085]	EQ       	0 R11 K38 ; if R11 ~= nil then PC := 215
	200	[1085]	JMP      	215 ; PC := 215
	201	[1086]	GETGLOBAL	R11 K11 ; R11 := 0x2d0fad09
	202	[1086]	LOADK    	R12 K53 ; R12 := "Lotus.Interface.Components.RailjackModeButton"
	203	[1086]	CALL     	R11 2 2 ; R11 := R11(R12)
	204	[1087]	GETGLOBAL	R12 K40 ; R12 := mRailJack
	205	[1087]	GETTABLE 	R13 R11 K13 ; R13 := R11[0xae6791ba]
	206	[1087]	GETGLOBAL	R14 K5 ; R14 := 0xae91e43b
	207	[1087]	LOADK    	R15 K54 ; R15 := "RailjackBtn"
	208	[1087]	GETUPVAL 	R16 U1 ; R16 := U1
	209	[1087]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	210	[1087]	SETTABLE 	R12 K52 R13 ; R12["Button"] := R13
	211	[1088]	GETGLOBAL	R12 K40 ; R12 := mRailJack
	212	[1088]	GETTABLE 	R12 R12 K52 ; R12 := R12["Button"]
	213	[1088]	GETUPVAL 	R13 U2 ; R13 := U2
	214	[1088]	SETTABLE 	R12 K55 R13 ; R12["mOnPressedCallback"] := R13
	215	[1090]	GETGLOBAL	R12 K40 ; R12 := mRailJack
	216	[1090]	GETTABLE 	R12 R12 K52 ; R12 := R12["Button"]
	217	[1090]	SELF     	R12 R12 K17 ; R13 := R12; R12 := R12[0x46610c50]
	218	[1090]	GETGLOBAL	R14 K40 ; R14 := mRailJack
	219	[1090]	GETTABLE 	R14 R14 K41 ; R14 := R14["Active"]
	220	[1090]	MOVE     	R15 R0 ; R15 := R0
	221	[1090]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	222	[1091]	GETGLOBAL	R12 K56 ; R12 := 0xe7f2b02f
	223	[1091]	SELF     	R12 R12 K57 ; R13 := R12; R12 := R12[0xca33534d]
	224	[1091]	CALL     	R12 2 2 ; R12 := R12(R13)
	225	[1091]	NOT      	R12 R12 ; R12 := not R12
	226	[1092]	GETGLOBAL	R13 K40 ; R13 := mRailJack
	227	[1092]	GETTABLE 	R13 R13 K52 ; R13 := R13["Button"]
	228	[1092]	SELF     	R13 R13 K18 ; R14 := R13; R13 := R13[0x368ad758]
	229	[1092]	MOVE     	R15 R12 ; R15 := R12
	230	[1092]	CALL     	R13 3 1 ; R13(R14,R15)
	231	[1094]	GETGLOBAL	R13 K40 ; R13 := mRailJack
	232	[1101]	CLOSURE  	R14 0 ; R14 := closure(Function #1)
	233	[1101]	MOVE     	R0 R9 ; R0 := R9
	234	[1101]	MOVE     	R0 R10 ; R0 := R10
	235	[1101]	SETTABLE 	R13 K58 R14 ; R13["UpdateButtonVisibility"] := R14
	236	[1102]	GETGLOBAL	R13 K40 ; R13 := mRailJack
	237	[1102]	GETTABLE 	R13 R13 K59 ; R13 := R13[0xa2cabe13]
	238	[1102]	CALL     	R13 1 1 ; R13()
	239	[1104]	GETGLOBAL	R13 K60 ; R13 := 0xa94df70b
	240	[1104]	SELF     	R13 R13 K61 ; R14 := R13; R13 := R13[0xf87f9433]
	241	[1104]	CALL     	R13 2 2 ; R13 := R13(R14)
	242	[1104]	TEST     	R13 0 ; if not R13 then PC := 259
	243	[1104]	JMP      	259 ; PC := 259
	244	[1104]	GETGLOBAL	R13 K40 ; R13 := mRailJack
	245	[1104]	GETTABLE 	R13 R13 K41 ; R13 := R13["Active"]
	246	[1104]	TEST     	R13 1 ; if R13 then PC := 259
	247	[1104]	JMP      	259 ; PC := 259
	248	[1105]	GETUPVAL 	R13 U3 ; R13 := U3
	249	[1105]	GETTABLE 	R13 R13 K62 ; R13 := R13[0xe0cba3ca]
	250	[1105]	GETGLOBAL	R14 K5 ; R14 := 0xae91e43b
	251	[1105]	SELF     	R14 R14 K63 ; R15 := R14; R14 := R14[0x42b04007]
	252	[1105]	LOADK    	R16 K64 ; R16 := "/Lotus/Language/Menu/MainMenu_NewBuildMissionsBlocked"
	253	[1105]	OP_LOADBOOL	R17 0 0 ; R17 := false
	254	[1105]	CALL     	R14 4 0 ; R14,... := R14(R15,R16,R17)
	255	[1105]	CALL     	R13 0 1 ; R13(R14,...)
	256	[1106]	GETUPVAL 	R13 U4 ; R13 := U4
	257	[1106]	CALL     	R13 1 1 ; R13()
	258	[1107]	RETURN   	R0 1 ; return 
	259	[1110]	GETGLOBAL	R13 K36 ; R13 := _T
	260	[1110]	SETTABLE 	R13 K65 K66 ; R13["RadialSolarMapOpen"] := true
	261	[1111]	GETUPVAL 	R13 U0 ; R13 := U0
	262	[1111]	GETTABLE 	R13 R13 K67 ; R13 := R13[0x9e3d3434]
	263	[1111]	OP_LOADBOOL	R14 1 0 ; R14 := true
	264	[1111]	CALL     	R13 2 1 ; R13(R14)
	265	[1112]	GETGLOBAL	R13 K36 ; R13 := _T
	266	[1112]	GETTABLE 	R13 R13 K69 ; R13 := R13["WareframeChallenge"]
	267	[1112]	EQ       	0 R13 K38 ; if R13 ~= nil then PC := 270
	268	[1112]	JMP      	270 ; PC := 270
	269	[1112]	OP_LOADBOOL	R13 0 1 ; R13 := false; PC := 270
	270	[1112]	OP_LOADBOOL	R13 1 0 ; R13 := true
	271	[1112]	SETGLOBALHASH	R13 K68 ; mDebugUnlockAllMissions := R13
	272	[1113]	OP_LOADBOOL	R13 0 0 ; R13 := false
	273	[1113]	SETUPVAL 	R13 U5 ; U5 := R13
	274	[1115]	GETGLOBAL	R13 K11 ; R13 := 0x2d0fad09
	275	[1115]	LOADK    	R14 K70 ; R14 := "Lotus.Interface.FortressUtilities"
	276	[1115]	CALL     	R13 2 2 ; R13 := R13(R14)
	277	[1116]	GETUPVAL 	R14 U6 ; R14 := U6
	278	[1116]	GETTABLE 	R15 R13 K72 ; R15 := R13[0x7fe6f080]
	279	[1116]	CALL     	R15 1 2 ; R15 := R15()
	280	[1116]	SETTABLE 	R14 K71 R15 ; R14["SplinePoints"] := R15
	281	[1118]	GETGLOBAL	R14 K68 ; R14 := mDebugUnlockAllMissions
	282	[1118]	TEST     	R14 1 ; if R14 then PC := 331
	283	[1118]	JMP      	331 ; PC := 331
	284	[1118]	GETGLOBAL	R14 K32 ; R14 := 0x7b998233
	285	[1118]	GETGLOBAL	R15 K48 ; R15 := 0x25d99d89
	286	[1118]	CALL     	R14 2 2 ; R14 := R14(R15)
	287	[1118]	TEST     	R14 1 ; if R14 then PC := 331
	288	[1118]	JMP      	331 ; PC := 331
	289	[1119]	GETGLOBAL	R14 K48 ; R14 := 0x25d99d89
	290	[1119]	SELF     	R14 R14 K73 ; R15 := R14; R14 := R14[0x5735520e]
	291	[1119]	CALL     	R14 2 2 ; R14 := R14(R15)
	292	[1119]	TEST     	R14 1 ; if R14 then PC := 298
	293	[1119]	JMP      	298 ; PC := 298
	294	[1120]	GETUPVAL 	R14 U7 ; R14 := U7
	295	[1120]	GETUPVAL 	R15 U0 ; R15 := U0
	296	[1120]	GETTABLE 	R15 R15 K74 ; R15 := R15["REGION_ID_MOON"]
	297	[1120]	SETTABLE 	R14 R15 K66 ; R14[R15] := true
	298	[1123]	GETGLOBAL	R14 K48 ; R14 := 0x25d99d89
	299	[1123]	SELF     	R14 R14 K75 ; R15 := R14; R14 := R14[0x5baf7a39]
	300	[1123]	CALL     	R14 2 2 ; R14 := R14(R15)
	301	[1123]	TEST     	R14 1 ; if R14 then PC := 307
	302	[1123]	JMP      	307 ; PC := 307
	303	[1124]	GETUPVAL 	R14 U7 ; R14 := U7
	304	[1124]	GETUPVAL 	R15 U0 ; R15 := U0
	305	[1124]	GETTABLE 	R15 R15 K76 ; R15 := R15["REGION_ID_FORTRESS"]
	306	[1124]	SETTABLE 	R14 R15 K66 ; R14[R15] := true
	307	[1127]	GETUPVAL 	R14 U0 ; R14 := U0
	308	[1127]	GETTABLE 	R14 R14 K77 ; R14 := R14[0x52fb05b3]
	309	[1127]	GETUPVAL 	R15 U8 ; R15 := U8
	310	[1127]	GETTABLE 	R15 R15 K78 ; R15 := R15["zarimanIntroQuest"]
	311	[1127]	CALL     	R14 2 2 ; R14 := R14(R15)
	312	[1127]	TEST     	R14 1 ; if R14 then PC := 327
	313	[1127]	JMP      	327 ; PC := 327
	314	[1127]	GETGLOBAL	R14 K48 ; R14 := 0x25d99d89
	315	[1127]	SELF     	R14 R14 K79 ; R15 := R14; R14 := R14[0x25a6e75e]
	316	[1127]	CALL     	R14 2 2 ; R14 := R14(R15)
	317	[1127]	SELF     	R14 R14 K80 ; R15 := R14; R14 := R14[0x8e7c3b5e]
	318	[1127]	CALL     	R14 2 2 ; R14 := R14(R15)
	319	[1127]	GETUPVAL 	R15 U8 ; R15 := U8
	320	[1127]	GETTABLE 	R15 R15 K78 ; R15 := R15["zarimanIntroQuest"]
	321	[1127]	EQ       	1 R14 R15 ; if R14 == R15 then PC := 327
	322	[1127]	JMP      	327 ; PC := 327
	323	[1128]	GETUPVAL 	R14 U7 ; R14 := U7
	324	[1128]	GETUPVAL 	R15 U0 ; R15 := U0
	325	[1128]	GETTABLE 	R15 R15 K81 ; R15 := R15["REGION_ID_ZARIMAN"]
	326	[1128]	SETTABLE 	R14 R15 K66 ; R14[R15] := true
	327	[1131]	GETUPVAL 	R14 U7 ; R14 := U7
	328	[1131]	GETUPVAL 	R15 U0 ; R15 := U0
	329	[1131]	GETTABLE 	R15 R15 K82 ; R15 := R15["REGION_ID_DARK_SECTOR"]
	330	[1131]	SETTABLE 	R14 R15 K66 ; R14[R15] := true
	331	[1134]	GETUPVAL 	R14 U7 ; R14 := U7
	332	[1134]	GETUPVAL 	R15 U0 ; R15 := U0
	333	[1134]	GETTABLE 	R15 R15 K83 ; R15 := R15["REGION_ID_DEEP_SPACE"]
	334	[1134]	GETGLOBAL	R16 K40 ; R16 := mRailJack
	335	[1134]	GETTABLE 	R16 R16 K41 ; R16 := R16["Active"]
	336	[1134]	NOT      	R16 R16 ; R16 := not R16
	337	[1134]	SETTABLE 	R14 R15 R16 ; R14[R15] := R16
	338	[1136]	GETGLOBAL	R14 K5 ; R14 := 0xae91e43b
	339	[1136]	SELF     	R14 R14 K84 ; R15 := R14; R14 := R14[0xc6a10ab1]
	340	[1136]	LOADK    	R16 := 0.000000
	341	[1136]	CALL     	R14 3 1 ; R14(R15,R16)
	342	[1138]	GETGLOBAL	R14 K11 ; R14 := 0x2d0fad09
	343	[1138]	LOADK    	R15 K85 ; R15 := "Lotus.Interface.Libs.TimerMgr"
	344	[1138]	CALL     	R14 2 2 ; R14 := R14(R15)
	345	[1139]	GETTABLE 	R15 R14 K86 ; R15 := R14[0xde474187]
	346	[1139]	CALL     	R15 1 2 ; R15 := R15()
	347	[1139]	SETUPVAL 	R15 U9 ; U9 := R15
	348	[1140]	GETGLOBAL	R15 K87 ; R15 := mAnchorMgr
	349	[1140]	EQ       	0 R15 K38 ; if R15 ~= nil then PC := 391
	350	[1140]	JMP      	391 ; PC := 391
	351	[1141]	GETGLOBAL	R15 K11 ; R15 := 0x2d0fad09
	352	[1141]	LOADK    	R16 K88 ; R16 := "EE.Interface.AnchorMgr"
	353	[1141]	CALL     	R15 2 2 ; R15 := R15(R16)
	354	[1142]	GETTABLE 	R16 R15 K13 ; R16 := R15[0xae6791ba]
	355	[1142]	GETGLOBAL	R17 K5 ; R17 := 0xae91e43b
	356	[1142]	CALL     	R16 2 2 ; R16 := R16(R17)
	357	[1142]	SETGLOBALHASH	R16 K87 ; mAnchorMgr := R16
	358	[1143]	GETGLOBAL	R16 K87 ; R16 := mAnchorMgr
	359	[1143]	SELF     	R16 R16 K89 ; R17 := R16; R16 := R16[0x20ff29f7]
	360	[1143]	GETGLOBAL	R18 K5 ; R18 := 0xae91e43b
	361	[1143]	LOADK    	R19 K90 ; R19 := "RegionInfo"
	362	[1143]	NEWTABLE 	R20 2 0 ; R20 := {}
	363	[1143]	GETGLOBAL	R21 K87 ; R21 := mAnchorMgr
	364	[1143]	GETTABLE 	R21 R21 K91 ; R21 := R21["ANCHOR_H_RIGHT"]
	365	[1143]	GETGLOBAL	R22 K87 ; R22 := mAnchorMgr
	366	[1143]	GETTABLE 	R22 R22 K92 ; R22 := R22["ANCHOR_V_TOP"]
	367	[1143]	SETLIST  	R20 2 1 ; R20[(1-1)*FPF+i] := R(20+i), 1 <= i <= 2
	368	[1143]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	369	[1144]	GETGLOBAL	R16 K87 ; R16 := mAnchorMgr
	370	[1144]	SELF     	R16 R16 K89 ; R17 := R16; R16 := R16[0x20ff29f7]
	371	[1144]	GETGLOBAL	R18 K5 ; R18 := 0xae91e43b
	372	[1144]	LOADK    	R19 K93 ; R19 := "RailJackBtn"
	373	[1144]	NEWTABLE 	R20 2 0 ; R20 := {}
	374	[1144]	GETGLOBAL	R21 K87 ; R21 := mAnchorMgr
	375	[1144]	GETTABLE 	R21 R21 K91 ; R21 := R21["ANCHOR_H_RIGHT"]
	376	[1144]	GETGLOBAL	R22 K87 ; R22 := mAnchorMgr
	377	[1144]	GETTABLE 	R22 R22 K92 ; R22 := R22["ANCHOR_V_TOP"]
	378	[1144]	SETLIST  	R20 2 1 ; R20[(1-1)*FPF+i] := R(20+i), 1 <= i <= 2
	379	[1144]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	380	[1145]	GETGLOBAL	R16 K87 ; R16 := mAnchorMgr
	381	[1145]	SELF     	R16 R16 K89 ; R17 := R16; R16 := R16[0x20ff29f7]
	382	[1145]	GETGLOBAL	R18 K5 ; R18 := 0xae91e43b
	383	[1145]	LOADK    	R19 K24 ; R19 := "DifficultySelector"
	384	[1145]	NEWTABLE 	R20 2 0 ; R20 := {}
	385	[1145]	GETGLOBAL	R21 K87 ; R21 := mAnchorMgr
	386	[1145]	GETTABLE 	R21 R21 K91 ; R21 := R21["ANCHOR_H_RIGHT"]
	387	[1145]	GETGLOBAL	R22 K87 ; R22 := mAnchorMgr
	388	[1145]	GETTABLE 	R22 R22 K94 ; R22 := R22["ANCHOR_V_CENTRE"]
	389	[1145]	SETLIST  	R20 2 1 ; R20[(1-1)*FPF+i] := R(20+i), 1 <= i <= 2
	390	[1145]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	391	[1148]	TEST     	R0 0 ; if not R0 then PC := 416
	392	[1148]	JMP      	416 ; PC := 416
	393	[1149]	GETUPVAL 	R16 U10 ; R16 := U10
	394	[1149]	CALL     	R16 1 1 ; R16()
	395	[1150]	GETGLOBAL	R16 K5 ; R16 := 0xae91e43b
	396	[1150]	SELF     	R16 R16 K21 ; R17 := R16; R16 := R16[0x67bc869f]
	397	[1150]	LOADK    	R18 K95 ; R18 := "Reticle"
	398	[1150]	LOADK    	R19 := 0.000000
	399	[1150]	GETGLOBAL	R20 K5 ; R20 := 0xae91e43b
	400	[1150]	SELF     	R20 R20 K96 ; R21 := R20; R20 := R20[0x091c120e]
	401	[1150]	CALL     	R20 2 2 ; R20 := R20(R21)
	402	[1150]	MUL      	R20 R20 K97 ; R20 := R20 * 0.500000
	403	[1150]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	404	[1151]	GETGLOBAL	R16 K5 ; R16 := 0xae91e43b
	405	[1151]	SELF     	R16 R16 K21 ; R17 := R16; R16 := R16[0x67bc869f]
	406	[1151]	LOADK    	R18 K95 ; R18 := "Reticle"
	407	[1151]	LOADK    	R19 := 1.000000
	408	[1151]	GETGLOBAL	R20 K5 ; R20 := 0xae91e43b
	409	[1151]	SELF     	R20 R20 K98 ; R21 := R20; R20 := R20[0x2cc9d281]
	410	[1151]	CALL     	R20 2 2 ; R20 := R20(R21)
	411	[1151]	MUL      	R20 R20 K97 ; R20 := R20 * 0.500000
	412	[1151]	CALL     	R16 5 1 ; R16(R17,R18,R19,R20)
	413	[1152]	GETGLOBAL	R16 K36 ; R16 := _T
	414	[1152]	SETTABLE 	R16 K99 K38 ; R16["MapInitLockCursor"] := nil
	415	[1152]	JMP      	418 ; PC := 418
	416	[1154]	GETGLOBAL	R16 K100 ; R16 := mPlayerPos
	417	[1154]	SETTABLE 	R16 K101 K102 ; R16["Locked"] := false
	418	[1157]	GETGLOBAL	R16 K36 ; R16 := _T
	419	[1157]	GETUPVAL 	R17 U11 ; R17 := U11
	420	[1157]	SETTABLE 	R16 K103 R17 ; R16["RadialSolarMap_OnAggregateResults"] := R17
	421	[1159]	GETGLOBAL	R16 K5 ; R16 := 0xae91e43b
	422	[1159]	SELF     	R16 R16 K63 ; R17 := R16; R16 := R16[0x42b04007]
	423	[1159]	LOADK    	R18 K105 ; R18 := "<LOCKED>"
	424	[1159]	OP_LOADBOOL	R19 1 0 ; R19 := true
	425	[1159]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	426	[1159]	SETGLOBALHASH	R16 K104 ; mLockIcon := R16
	427	[1161]	GETGLOBAL	R16 K11 ; R16 := 0x2d0fad09
	428	[1161]	LOADK    	R17 K106 ; R17 := "Lotus.Interface.Libs.SortieGenerator"
	429	[1161]	CALL     	R16 2 2 ; R16 := R16(R17)
	430	[1162]	GETUPVAL 	R17 U12 ; R17 := U12
	431	[1162]	GETTABLE 	R18 R16 K108 ; R18 := R16[0xe2c1afa7]
	432	[1162]	CALL     	R18 1 2 ; R18 := R18()
	433	[1162]	SETTABLE 	R17 K107 R18 ; R17["mBossInfo"] := R18
	434	[1164]	TEST     	R0 0 ; if not R0 then PC := 440
	435	[1164]	JMP      	440 ; PC := 440
	436	[1165]	GETUPVAL 	R17 U3 ; R17 := U3
	437	[1165]	GETTABLE 	R17 R17 K109 ; R17 := R17[0x659d451f]
	438	[1165]	GETGLOBAL	R18 K110 ; R18 := 0x0856e17d
	439	[1165]	CALL     	R17 2 1 ; R17(R18)
	440	[1167]	GETUPVAL 	R17 U13 ; R17 := U13
	441	[1167]	CALL     	R17 1 1 ; R17()
	442	[1169]	GETUPVAL 	R17 U14 ; R17 := U14
	443	[1169]	CALL     	R17 1 1 ; R17()
	444	[1170]	GETGLOBAL	R17 K111 ; R17 := mInfoTip
	445	[1170]	GETGLOBAL	R18 K35 ; R18 := mNewWarMode
	446	[1170]	SETTABLE 	R17 K35 R18 ; R17["mNewWarMode"] := R18
	447	[1171]	GETGLOBAL	R17 K111 ; R17 := mInfoTip
	448	[1171]	GETGLOBAL	R18 K36 ; R18 := _T
	449	[1171]	GETTABLE 	R18 R18 K37 ; R18 := R18["CustomStarChartNodeFilter"]
	450	[1171]	EQ       	0 R18 K38 ; if R18 ~= nil then PC := 453
	451	[1171]	JMP      	453 ; PC := 453
	452	[1171]	OP_LOADBOOL	R18 0 1 ; R18 := false; PC := 453
	453	[1171]	OP_LOADBOOL	R18 1 0 ; R18 := true
	454	[1171]	SETTABLE 	R17 K112 R18 ; R17["mBorderVisible"] := R18
	455	[1173]	GETUPVAL 	R17 U15 ; R17 := U15
	456	[1173]	GETGLOBAL	R18 K35 ; R18 := mNewWarMode
	457	[1173]	TEST     	R18 1 ; if R18 then PC := 470
	458	[1173]	JMP      	470 ; PC := 470
	459	[1173]	GETUPVAL 	R18 U0 ; R18 := U0
	460	[1173]	GETTABLE 	R18 R18 K114 ; R18 := R18[0x1b0c4985]
	461	[1173]	CALL     	R18 1 2 ; R18 := R18()
	462	[1173]	TEST     	R18 0 ; if not R18 then PC := 472
	463	[1173]	JMP      	472 ; PC := 472
	464	[1173]	GETUPVAL 	R18 U0 ; R18 := U0
	465	[1173]	GETTABLE 	R18 R18 K115 ; R18 := R18[0x293ec9c4]
	466	[1173]	GETGLOBAL	R19 K48 ; R19 := 0x25d99d89
	467	[1173]	CALL     	R18 2 2 ; R18 := R18(R19)
	468	[1173]	NOT      	R18 R18 ; R18 := not R18
	469	[1173]	JMP      	472 ; PC := 472
	470	[1173]	OP_LOADBOOL	R18 0 1 ; R18 := false; PC := 471
	471	[1173]	OP_LOADBOOL	R18 1 0 ; R18 := true
	472	[1173]	SETTABLE 	R17 K113 R18 ; R17["EnableDifficultySelector"] := R18
	473	[1175]	GETUPVAL 	R17 U15 ; R17 := U15
	474	[1175]	GETTABLE 	R17 R17 K113 ; R17 := R17["EnableDifficultySelector"]
	475	[1175]	TEST     	R17 0 ; if not R17 then PC := 479
	476	[1175]	JMP      	479 ; PC := 479
	477	[1176]	GETUPVAL 	R17 U16 ; R17 := U16
	478	[1176]	CALL     	R17 1 1 ; R17()
	479	[1179]	OP_LOADBOOL	R17 1 0 ; R17 := true
	480	[1179]	SETGLOBALHASH	R17 K116 ; mInputBlocked := R17
	481	[1181]	GETGLOBAL	R17 K117 ; R17 := 0xbe190284
	482	[1181]	SELF     	R17 R17 K118 ; R18 := R17; R17 := R17[0x33307f92]
	483	[1181]	CALL     	R17 2 2 ; R17 := R17(R18)
	484	[1182]	GETGLOBAL	R18 K32 ; R18 := 0x7b998233
	485	[1182]	MOVE     	R19 R17 ; R19 := R17
	486	[1182]	CALL     	R18 2 2 ; R18 := R18(R19)
	487	[1182]	TEST     	R18 1 ; if R18 then PC := 492
	488	[1182]	JMP      	492 ; PC := 492
	489	[1183]	SELF     	R18 R17 K18 ; R19 := R17; R18 := R17[0x368ad758]
	490	[1183]	OP_LOADBOOL	R20 0 0 ; R20 := false
	491	[1183]	CALL     	R18 3 1 ; R18(R19,R20)
	492	[1185]	GETGLOBAL	R18 K5 ; R18 := 0xae91e43b
	493	[1185]	SELF     	R18 R18 K119 ; R19 := R18; R18 := R18[0x767c0947]
	494	[1185]	OP_LOADBOOL	R20 1 0 ; R20 := true
	495	[1185]	CALL     	R18 3 1 ; R18(R19,R20)
	496	[1187]	GETUPVAL 	R18 U17 ; R18 := U17
	497	[1187]	GETUPVAL 	R19 U18 ; R19 := U18
	498	[1187]	GETTABLE 	R19 R19 K120 ; R19 := R19["READ_ONLY"]
	499	[1187]	CALL     	R18 2 1 ; R18(R19)
	500	[1189]	GETGLOBAL	R18 K121 ; R18 := 0x38f10e85
	501	[1189]	GETGLOBAL	R19 K5 ; R19 := 0xae91e43b
	502	[1189]	LOADK    	R20 K122 ; R20 := "Reticle.swapDepths"
	503	[1189]	LOADK    	R21 := 605.000000
	504	[1189]	CALL     	R18 4 1 ; R18(R19,R20,R21)
	505	[1190]	GETGLOBAL	R18 K121 ; R18 := 0x38f10e85
	506	[1190]	GETGLOBAL	R19 K5 ; R19 := 0xae91e43b
	507	[1190]	LOADK    	R20 K123 ; R20 := "NodeTransmission.swapDepths"
	508	[1190]	LOADK    	R21 := 480.000000
	509	[1190]	CALL     	R18 4 1 ; R18(R19,R20,R21)
	510	[1192]	GETUPVAL 	R18 U19 ; R18 := U19
	511	[1192]	OP_LOADBOOL	R19 1 0 ; R19 := true
	512	[1192]	CALL     	R18 2 1 ; R18(R19)
	513	[1194]	GETGLOBAL	R18 K36 ; R18 := _T
	514	[1194]	GETTABLE 	R18 R18 K124 ; R18 := R18["MAP_HideExtraUI"]
	515	[1194]	TEST     	R18 1 ; if R18 then PC := 521
	516	[1194]	JMP      	521 ; PC := 521
	517	[1195]	GETGLOBAL	R18 K36 ; R18 := _T
	518	[1195]	GETTABLE 	R18 R18 K125 ; R18 := R18[0x3b0face1]
	519	[1195]	OP_LOADBOOL	R19 1 0 ; R19 := true
	520	[1195]	CALL     	R18 2 1 ; R18(R19)
	521	[1198]	GETGLOBAL	R18 K126 ; R18 := 0x9ba7909f
	522	[1198]	SELF     	R18 R18 K127 ; R19 := R18; R18 := R18[0xbcfb64ab]
	523	[1198]	GETUPVAL 	R20 U3 ; R20 := U3
	524	[1198]	GETTABLE 	R20 R20 K128 ; R20 := R20[0xc472e470]
	525	[1198]	CALL     	R20 1 0 ; R20,... := R20()
	526	[1198]	CALL     	R18 0 2 ; R18 := R18(R19,...)
	527	[1199]	GETGLOBAL	R19 K32 ; R19 := 0x7b998233
	528	[1199]	MOVE     	R20 R18 ; R20 := R18
	529	[1199]	CALL     	R19 2 2 ; R19 := R19(R20)
	530	[1199]	TEST     	R19 1 ; if R19 then PC := 535
	531	[1199]	JMP      	535 ; PC := 535
	532	[1200]	SELF     	R19 R18 K129 ; R20 := R18; R19 := R18[0x2002e1dc]
	533	[1200]	OP_LOADBOOL	R21 1 0 ; R21 := true
	534	[1200]	CALL     	R19 3 1 ; R19(R20,R21)
	535	[1203]	GETGLOBAL	R19 K5 ; R19 := 0xae91e43b
	536	[1203]	SELF     	R19 R19 K119 ; R20 := R19; R19 := R19[0x767c0947]
	537	[1203]	OP_LOADBOOL	R21 1 0 ; R21 := true
	538	[1203]	CALL     	R19 3 1 ; R19(R20,R21)
	539	[1205]	GETGLOBAL	R19 K2 ; R19 := 0x89326c93
	540	[1205]	SELF     	R19 R19 K130 ; R20 := R19; R19 := R19[0x78298275]
	541	[1205]	CALL     	R19 2 2 ; R19 := R19(R20)
	542	[1206]	TEST     	R0 0 ; if not R0 then PC := 558
	543	[1206]	JMP      	558 ; PC := 558
	544	[1206]	GETGLOBAL	R20 K40 ; R20 := mRailJack
	545	[1206]	GETTABLE 	R20 R20 K41 ; R20 := R20["Active"]
	546	[1206]	TEST     	R20 1 ; if R20 then PC := 558
	547	[1206]	JMP      	558 ; PC := 558
	548	[1206]	GETGLOBAL	R20 K32 ; R20 := 0x7b998233
	549	[1206]	MOVE     	R21 R19 ; R21 := R19
	550	[1206]	CALL     	R20 2 2 ; R20 := R20(R21)
	551	[1206]	TEST     	R20 1 ; if R20 then PC := 558
	552	[1206]	JMP      	558 ; PC := 558
	553	[1207]	SELF     	R20 R19 K131 ; R21 := R19; R20 := R19[0xb2532845]
	554	[1207]	GETGLOBAL	R22 K132 ; R22 := 0x0469f296
	555	[1207]	LOADK    	R23 K133 ; R23 := "InstantKneel"
	556	[1207]	CALL     	R22 2 0 ; R22,... := R22(R23)
	557	[1207]	CALL     	R20 0 1 ; R20(R21,...)
	558	[1210]	GETUPVAL 	R20 U9 ; R20 := U9
	559	[1210]	SELF     	R20 R20 K134 ; R21 := R20; R20 := R20[0xbd2e96ea]
	560	[1210]	LOADK    	R22 K135 ; R22 := 0.300000
	561	[1213]	CLOSURE  	R23 1 ; R23 := closure(Function #2)
	562	[1210]	CALL     	R20 4 1 ; R20(R21,R22,R23)
	563	[1215]	GETUPVAL 	R20 U9 ; R20 := U9
	564	[1215]	SELF     	R20 R20 K134 ; R21 := R20; R20 := R20[0xbd2e96ea]
	565	[1215]	LOADK    	R22 K136 ; R22 := 0.600000
	566	[1220]	CLOSURE  	R23 2 ; R23 := closure(Function #3)
	567	[1215]	CALL     	R20 4 1 ; R20(R21,R22,R23)
	568	[1222]	GETGLOBAL	R20 K32 ; R20 := 0x7b998233
	569	[1222]	GETGLOBAL	R21 K137 ; R21 := 0xcb79539e
	570	[1222]	CALL     	R20 2 2 ; R20 := R20(R21)
	571	[1222]	TEST     	R20 1 ; if R20 then PC := 580
	572	[1222]	JMP      	580 ; PC := 580
	573	[1223]	GETGLOBAL	R20 K137 ; R20 := 0xcb79539e
	574	[1223]	SELF     	R20 R20 K138 ; R21 := R20; R20 := R20[0xa9136b2f]
	575	[1223]	GETGLOBAL	R22 K132 ; R22 := 0x0469f296
	576	[1223]	LOADK    	R23 K139 ; R23 := "IN_SHIP_VIEW_TIME"
	577	[1223]	CALL     	R22 2 2 ; R22 := R22(R23)
	578	[1223]	LOADK    	R23 K140 ; R23 := "STARCHART"
	579	[1223]	CALL     	R20 4 1 ; R20(R21,R22,R23)
	580	[1226]	GETUPVAL 	R20 U20 ; R20 := U20
	581	[1226]	OP_LOADBOOL	R21 0 0 ; R21 := false
	582	[1226]	CALL     	R20 2 1 ; R20(R21)
	583	[1227]	GETGLOBAL	R20 K36 ; R20 := _T
	584	[1227]	SETTABLE 	R20 K141 K38 ; R20["RadialMapInitialized"] := nil
	585	[1228]	GETGLOBAL	R20 K32 ; R20 := 0x7b998233
	586	[1228]	GETGLOBAL	R21 K142 ; R21 := 0xf5e16f12
	587	[1228]	CALL     	R20 2 2 ; R20 := R20(R21)
	588	[1228]	TEST     	R20 1 ; if R20 then PC := 603
	589	[1228]	JMP      	603 ; PC := 603
	590	[1229]	GETGLOBAL	R20 K126 ; R20 := 0x9ba7909f
	591	[1229]	SELF     	R20 R20 K127 ; R21 := R20; R20 := R20[0xbcfb64ab]
	592	[1229]	GETGLOBAL	R22 K142 ; R22 := 0xf5e16f12
	593	[1229]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	594	[1230]	GETGLOBAL	R21 K32 ; R21 := 0x7b998233
	595	[1230]	MOVE     	R22 R20 ; R22 := R20
	596	[1230]	CALL     	R21 2 2 ; R21 := R21(R22)
	597	[1230]	TEST     	R21 1 ; if R21 then PC := 603
	598	[1230]	JMP      	603 ; PC := 603
	599	[1231]	SELF     	R21 R20 K143 ; R22 := R20; R21 := R20[0xe4162eed]
	600	[1231]	LOADK    	R23 K144 ; R23 := "Close"
	601	[1231]	LOADK    	R24 K15 ; R24 := ""
	602	[1231]	CALL     	R21 4 1 ; R21(R22,R23,R24)
	603	[1234]	RETURN   	R0 1 ; return 

function #26 <?:1236,1240> (11 instructions, 44 bytes at 0000021125411260)
0 params, 7 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[1237]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[1237]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x1e5b5cfe]
	3	[1237]	LOADK    	R2 K2 ; R2 := "ClickBlocker"
	4	[1237]	LOADNIL  	R3 R4 ; R3 := R4 := nil
	5	[1237]	LOADK    	R5 K3 ; R5 := "ClickBlockerClicked"
	6	[1237]	LOADNIL  	R6 R6 ; R6 := nil
	7	[1237]	CALL     	R0 7 1 ; R0(R1,R2,R3,R4,R5,R6)
	8	[1239]	GETUPVAL 	R0 U0 ; R0 := U0
	9	[1239]	OP_LOADBOOL	R1 1 0 ; R1 := true
	10	[1239]	CALL     	R0 2 1 ; R0(R1)
	11	[1240]	RETURN   	R0 1 ; return 

function #27 <?:1242,1264> (57 instructions, 228 bytes at 0000021133C68260)
0 params, 7 slots, 1 upvalue, 0 locals, 13 constants, 0 functions
	1	[1244]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[1244]	GETTABLE 	R0 R0 K1 ; R0 := R0["gPendingMission"]
	3	[1244]	EQ       	0 R0 K2 ; if R0 ~= nil then PC := 7
	4	[1244]	JMP      	7 ; PC := 7
	5	[1245]	OP_LOADBOOL	R0 0 0 ; R0 := false
	6	[1245]	RETURN   	R0 2 ; return R0 
	7	[1248]	GETGLOBAL	R0 K0 ; R0 := _T
	8	[1248]	GETTABLE 	R0 R0 K1 ; R0 := R0["gPendingMission"]
	9	[1248]	GETTABLE 	R0 R0 K3 ; R0 := R0["quest"]
	10	[1248]	EQ       	1 R0 K2 ; if R0 == nil then PC := 19
	11	[1248]	JMP      	19 ; PC := 19
	12	[1248]	GETGLOBAL	R0 K0 ; R0 := _T
	13	[1248]	GETTABLE 	R0 R0 K1 ; R0 := R0["gPendingMission"]
	14	[1248]	GETTABLE 	R0 R0 K3 ; R0 := R0["quest"]
	15	[1248]	EQ       	1 R0 K4 ; if R0 == "" then PC := 19
	16	[1248]	JMP      	19 ; PC := 19
	17	[1249]	OP_LOADBOOL	R0 1 0 ; R0 := true
	18	[1249]	RETURN   	R0 2 ; return R0 
	19	[1252]	GETGLOBAL	R0 K5 ; R0 := 0x0032441c
	20	[1252]	GETTABLE 	R0 R0 K6 ; R0 := R0["QuestNodeNames"]
	21	[1252]	EQ       	1 R0 K2 ; if R0 == nil then PC := 55
	22	[1252]	JMP      	55 ; PC := 55
	23	[1253]	GETGLOBAL	R0 K7 ; R0 := 0x64fb1586
	24	[1253]	GETGLOBAL	R1 K0 ; R1 := _T
	25	[1253]	GETTABLE 	R1 R1 K1 ; R1 := R1["gPendingMission"]
	26	[1253]	GETTABLE 	R1 R1 K8 ; R1 := R1["name"]
	27	[1253]	CALL     	R0 2 2 ; R0 := R0(R1)
	28	[1254]	GETGLOBAL	R1 K9 ; R1 := 0x7f5022cf
	29	[1254]	GETTABLE 	R1 R1 K10 ; R1 := R1[0xa5c556b9]
	30	[1254]	MOVE     	R2 R0 ; R2 := R0
	31	[1254]	GETUPVAL 	R3 U0 ; R3 := U0
	32	[1254]	GETTABLE 	R3 R3 K11 ; R3 := R3["HUB_TAG"]
	33	[1254]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	34	[1254]	EQ       	1 R1 K2 ; if R1 == nil then PC := 55
	35	[1254]	JMP      	55 ; PC := 55
	36	[1255]	GETGLOBAL	R1 K7 ; R1 := 0x64fb1586
	37	[1255]	GETGLOBAL	R2 K0 ; R2 := _T
	38	[1255]	GETTABLE 	R2 R2 K1 ; R2 := R2["gPendingMission"]
	39	[1255]	GETTABLE 	R2 R2 K12 ; R2 := R2["baseNodeName"]
	40	[1255]	CALL     	R1 2 2 ; R1 := R1(R2)
	41	[1256]	LOADK    	R2 := 1.000000
	42	[1256]	GETGLOBAL	R3 K5 ; R3 := 0x0032441c
	43	[1256]	GETTABLE 	R3 R3 K6 ; R3 := R3["QuestNodeNames"]
	44	[1256]	LEN      	R3 R3 ; R3 := # R3
	45	[1256]	LOADK    	R4 := 1.000000
	46	[1256]	FORPREP  	R2 54 ; R2 -= R4; PC := 54
	47	[1257]	GETGLOBAL	R6 K5 ; R6 := 0x0032441c
	48	[1257]	GETTABLE 	R6 R6 K6 ; R6 := R6["QuestNodeNames"]
	49	[1257]	GETTABLE 	R6 R6 R5 ; R6 := R6[R5]
	50	[1257]	EQ       	0 R1 R6 ; if R1 ~= R6 then PC := 54
	51	[1257]	JMP      	54 ; PC := 54
	52	[1258]	OP_LOADBOOL	R6 1 0 ; R6 := true
	53	[1258]	RETURN   	R6 2 ; return R6 
	54	[1256]	FORLOOP  	R2 47 ; R2 += R4; if R2 <= R3 then begin PC := 47; R5 := R2 end
	55	[1263]	OP_LOADBOOL	R6 0 0 ; R6 := false
	56	[1263]	RETURN   	R6 2 ; return R6 
	57	[1264]	RETURN   	R0 1 ; return 

function #28 <?:1266,1329> (169 instructions, 676 bytes at 00000211262F2980)
1 param, 8 slots, 5 upvalues, 0 locals, 48 constants, 0 functions
	1	[1267]	GETGLOBAL	R1 K0 ; R1 := 0x34291f5c
	2	[1267]	GETTABLE 	R1 R1 K1 ; R1 := R1[0xe6b41adb]
	3	[1267]	CALL     	R1 1 2 ; R1 := R1()
	4	[1267]	TEST     	R1 0 ; if not R1 then PC := 12
	5	[1267]	JMP      	12 ; PC := 12
	6	[1268]	GETGLOBAL	R1 K2 ; R1 := 0x89326c93
	7	[1268]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xfb64e76c]
	8	[1268]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[1268]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x97c4ff93]
	10	[1268]	OP_LOADBOOL	R3 0 0 ; R3 := false
	11	[1268]	CALL     	R1 3 1 ; R1(R2,R3)
	12	[1270]	GETGLOBAL	R1 K5 ; R1 := _T
	13	[1270]	SETTABLE 	R1 K6 K7 ; R1["RadialSolarMap_OnAggregateResults"] := nil
	14	[1271]	GETGLOBAL	R1 K5 ; R1 := _T
	15	[1271]	SETTABLE 	R1 K8 K7 ; R1["InfoPopup_Data"] := nil
	16	[1272]	GETGLOBAL	R1 K5 ; R1 := _T
	17	[1272]	SETTABLE 	R1 K9 K7 ; R1["InfoPopup_Grid"] := nil
	18	[1273]	GETGLOBAL	R1 K5 ; R1 := _T
	19	[1273]	SETTABLE 	R1 K10 K7 ; R1["RadialMapInitialized"] := nil
	20	[1275]	GETGLOBAL	R1 K11 ; R1 := 0x7b998233
	21	[1275]	GETUPVAL 	R2 U0 ; R2 := U0
	22	[1275]	GETTABLE 	R2 R2 K12 ; R2 := R2["Movie"]
	23	[1275]	CALL     	R1 2 2 ; R1 := R1(R2)
	24	[1275]	TEST     	R1 1 ; if R1 then PC := 30
	25	[1275]	JMP      	30 ; PC := 30
	26	[1276]	GETUPVAL 	R1 U0 ; R1 := U0
	27	[1276]	GETTABLE 	R1 R1 K12 ; R1 := R1["Movie"]
	28	[1276]	SELF     	R1 R1 K13 ; R2 := R1; R1 := R1[0x32302b4a]
	29	[1276]	CALL     	R1 2 1 ; R1(R2)
	30	[1279]	GETGLOBAL	R1 K14 ; R1 := mCountDown
	31	[1279]	GETTABLE 	R1 R1 K15 ; R1 := R1["TransitioningOut"]
	32	[1279]	TEST     	R1 0 ; if not R1 then PC := 42
	33	[1279]	JMP      	42 ; PC := 42
	34	[1279]	GETUPVAL 	R1 U1 ; R1 := U1
	35	[1279]	CALL     	R1 1 2 ; R1 := R1()
	36	[1279]	TEST     	R1 1 ; if R1 then PC := 43
	37	[1279]	JMP      	43 ; PC := 43
	38	[1279]	GETGLOBAL	R1 K16 ; R1 := mRailJack
	39	[1279]	GETTABLE 	R1 R1 K17 ; R1 := R1["Active"]
	40	[1279]	JMP      	43 ; PC := 43
	41	[1279]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 42
	42	[1279]	OP_LOADBOOL	R1 1 0 ; R1 := true
	43	[1280]	TEST     	R0 1 ; if R0 then PC := 60
	44	[1280]	JMP      	60 ; PC := 60
	45	[1280]	TEST     	R1 0 ; if not R1 then PC := 60
	46	[1280]	JMP      	60 ; PC := 60
	47	[1281]	GETGLOBAL	R2 K11 ; R2 := 0x7b998233
	48	[1281]	GETGLOBAL	R3 K18 ; R3 := 0x0032441c
	49	[1281]	GETTABLE 	R3 R3 K19 ; R3 := R3["MapSoundInst"]
	50	[1281]	CALL     	R2 2 2 ; R2 := R2(R3)
	51	[1281]	TEST     	R2 1 ; if R2 then PC := 58
	52	[1281]	JMP      	58 ; PC := 58
	53	[1282]	GETGLOBAL	R2 K18 ; R2 := 0x0032441c
	54	[1282]	GETTABLE 	R2 R2 K19 ; R2 := R2["MapSoundInst"]
	55	[1282]	SELF     	R2 R2 K20 ; R3 := R2; R2 := R2[0x6cf1e476]
	56	[1282]	OP_LOADBOOL	R4 0 0 ; R4 := false
	57	[1282]	CALL     	R2 3 1 ; R2(R3,R4)
	58	[1284]	GETGLOBAL	R2 K18 ; R2 := 0x0032441c
	59	[1284]	SETTABLE 	R2 K19 K7 ; R2["MapSoundInst"] := nil
	60	[1287]	GETGLOBAL	R2 K11 ; R2 := 0x7b998233
	61	[1287]	GETUPVAL 	R3 U2 ; R3 := U2
	62	[1287]	GETTABLE 	R3 R3 K21 ; R3 := R3["EpisodeStatus"]
	63	[1287]	CALL     	R2 2 2 ; R2 := R2(R3)
	64	[1287]	TEST     	R2 1 ; if R2 then PC := 70
	65	[1287]	JMP      	70 ; PC := 70
	66	[1288]	GETUPVAL 	R2 U2 ; R2 := U2
	67	[1288]	GETTABLE 	R2 R2 K21 ; R2 := R2["EpisodeStatus"]
	68	[1288]	SELF     	R2 R2 K13 ; R3 := R2; R2 := R2[0x32302b4a]
	69	[1288]	CALL     	R2 2 1 ; R2(R3)
	70	[1291]	GETGLOBAL	R2 K11 ; R2 := 0x7b998233
	71	[1291]	GETUPVAL 	R3 U2 ; R3 := U2
	72	[1291]	GETTABLE 	R3 R3 K22 ; R3 := R3["ResourceDrone"]
	73	[1291]	CALL     	R2 2 2 ; R2 := R2(R3)
	74	[1291]	TEST     	R2 1 ; if R2 then PC := 80
	75	[1291]	JMP      	80 ; PC := 80
	76	[1292]	GETUPVAL 	R2 U2 ; R2 := U2
	77	[1292]	GETTABLE 	R2 R2 K22 ; R2 := R2["ResourceDrone"]
	78	[1292]	SELF     	R2 R2 K13 ; R3 := R2; R2 := R2[0x32302b4a]
	79	[1292]	CALL     	R2 2 1 ; R2(R3)
	80	[1295]	GETGLOBAL	R2 K11 ; R2 := 0x7b998233
	81	[1295]	GETUPVAL 	R3 U2 ; R3 := U2
	82	[1295]	GETTABLE 	R3 R3 K23 ; R3 := R3["JunctionTasks"]
	83	[1295]	CALL     	R2 2 2 ; R2 := R2(R3)
	84	[1295]	TEST     	R2 1 ; if R2 then PC := 90
	85	[1295]	JMP      	90 ; PC := 90
	86	[1296]	GETUPVAL 	R2 U2 ; R2 := U2
	87	[1296]	GETTABLE 	R2 R2 K23 ; R2 := R2["JunctionTasks"]
	88	[1296]	SELF     	R2 R2 K13 ; R3 := R2; R2 := R2[0x32302b4a]
	89	[1296]	CALL     	R2 2 1 ; R2(R3)
	90	[1299]	GETGLOBAL	R2 K11 ; R2 := 0x7b998233
	91	[1299]	GETGLOBAL	R3 K24 ; R3 := mWagerMission
	92	[1299]	GETTABLE 	R3 R3 K25 ; R3 := R3["MovieInst"]
	93	[1299]	CALL     	R2 2 2 ; R2 := R2(R3)
	94	[1299]	TEST     	R2 1 ; if R2 then PC := 100
	95	[1299]	JMP      	100 ; PC := 100
	96	[1300]	GETGLOBAL	R2 K24 ; R2 := mWagerMission
	97	[1300]	GETTABLE 	R2 R2 K25 ; R2 := R2["MovieInst"]
	98	[1300]	SELF     	R2 R2 K13 ; R3 := R2; R2 := R2[0x32302b4a]
	99	[1300]	CALL     	R2 2 1 ; R2(R3)
	100	[1303]	GETGLOBAL	R2 K26 ; R2 := 0x9ba7909f
	101	[1303]	SELF     	R2 R2 K27 ; R3 := R2; R2 := R2[0xbcfb64ab]
	102	[1303]	GETUPVAL 	R4 U3 ; R4 := U3
	103	[1303]	GETTABLE 	R4 R4 K28 ; R4 := R4[0xc472e470]
	104	[1303]	CALL     	R4 1 0 ; R4,... := R4()
	105	[1303]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	106	[1304]	GETGLOBAL	R3 K11 ; R3 := 0x7b998233
	107	[1304]	MOVE     	R4 R2 ; R4 := R2
	108	[1304]	CALL     	R3 2 2 ; R3 := R3(R4)
	109	[1304]	TEST     	R3 1 ; if R3 then PC := 114
	110	[1304]	JMP      	114 ; PC := 114
	111	[1305]	SELF     	R3 R2 K29 ; R4 := R2; R3 := R2[0x2002e1dc]
	112	[1305]	OP_LOADBOOL	R5 0 0 ; R5 := false
	113	[1305]	CALL     	R3 3 1 ; R3(R4,R5)
	114	[1308]	GETGLOBAL	R3 K5 ; R3 := _T
	115	[1308]	SETTABLE 	R3 K30 K31 ; R3["RadialSolarMapOpen"] := false
	116	[1309]	GETUPVAL 	R3 U4 ; R3 := U4
	117	[1309]	GETTABLE 	R3 R3 K32 ; R3 := R3[0x9e3d3434]
	118	[1309]	OP_LOADBOOL	R4 0 0 ; R4 := false
	119	[1309]	CALL     	R3 2 1 ; R3(R4)
	120	[1311]	GETGLOBAL	R3 K11 ; R3 := 0x7b998233
	121	[1311]	GETGLOBAL	R4 K33 ; R4 := 0xcb79539e
	122	[1311]	CALL     	R3 2 2 ; R3 := R3(R4)
	123	[1311]	TEST     	R3 1 ; if R3 then PC := 132
	124	[1311]	JMP      	132 ; PC := 132
	125	[1312]	GETGLOBAL	R3 K33 ; R3 := 0xcb79539e
	126	[1312]	SELF     	R3 R3 K34 ; R4 := R3; R3 := R3[0xa9188a47]
	127	[1312]	GETGLOBAL	R5 K35 ; R5 := 0x0469f296
	128	[1312]	LOADK    	R6 K36 ; R6 := "IN_SHIP_VIEW_TIME"
	129	[1312]	CALL     	R5 2 2 ; R5 := R5(R6)
	130	[1312]	LOADK    	R6 K37 ; R6 := "STARCHART"
	131	[1312]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	132	[1315]	GETGLOBAL	R3 K38 ; R3 := 0x76ea806b
	133	[1315]	SELF     	R3 R3 K39 ; R4 := R3; R3 := R3[0x3f3ae64c]
	134	[1315]	LOADK    	R5 := 0.000000
	135	[1315]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	136	[1316]	GETGLOBAL	R4 K11 ; R4 := 0x7b998233
	137	[1316]	MOVE     	R5 R3 ; R5 := R3
	138	[1316]	CALL     	R4 2 2 ; R4 := R4(R5)
	139	[1316]	TEST     	R4 1 ; if R4 then PC := 148
	140	[1316]	JMP      	148 ; PC := 148
	141	[1317]	SELF     	R4 R3 K40 ; R5 := R3; R4 := R3[0x40e9c32b]
	142	[1317]	CALL     	R4 2 2 ; R4 := R4(R5)
	143	[1318]	SELF     	R5 R4 K41 ; R6 := R4; R5 := R4[0x1c469902]
	144	[1318]	GETGLOBAL	R7 K5 ; R7 := _T
	145	[1318]	GETTABLE 	R7 R7 K42 ; R7 := R7["ResourceDroneVisible"]
	146	[1318]	NOT      	R7 R7 ; R7 := not R7
	147	[1318]	CALL     	R5 3 1 ; R5(R6,R7)
	148	[1321]	TEST     	R0 1 ; if R0 then PC := 163
	149	[1321]	JMP      	163 ; PC := 163
	150	[1321]	GETGLOBAL	R5 K11 ; R5 := 0x7b998233
	151	[1321]	GETGLOBAL	R6 K5 ; R6 := _T
	152	[1321]	GETTABLE 	R6 R6 K43 ; R6 := R6["mTrigger"]
	153	[1321]	CALL     	R5 2 2 ; R5 := R5(R6)
	154	[1321]	TEST     	R5 1 ; if R5 then PC := 163
	155	[1321]	JMP      	163 ; PC := 163
	156	[1322]	GETGLOBAL	R5 K5 ; R5 := _T
	157	[1322]	GETTABLE 	R5 R5 K43 ; R5 := R5["mTrigger"]
	158	[1322]	SELF     	R5 R5 K44 ; R6 := R5; R5 := R5[0x8eb2112d]
	159	[1322]	LOADK    	R7 K45 ; R7 := "Close"
	160	[1322]	CALL     	R5 3 1 ; R5(R6,R7)
	161	[1323]	GETGLOBAL	R5 K5 ; R5 := _T
	162	[1323]	SETTABLE 	R5 K43 K7 ; R5["mTrigger"] := nil
	163	[1326]	GETGLOBAL	R5 K5 ; R5 := _T
	164	[1326]	SETTABLE 	R5 K46 K31 ; R5["InStarChart"] := false
	165	[1327]	GETGLOBAL	R5 K5 ; R5 := _T
	166	[1327]	SETTABLE 	R5 K47 K7 ; R5["InRailJackMode"] := nil
	167	[1328]	GETGLOBAL	R5 K5 ; R5 := _T
	168	[1328]	SETTABLE 	R5 K42 K7 ; R5["ResourceDroneVisible"] := nil
	169	[1329]	RETURN   	R0 1 ; return 

function #29 <?:1333,1339> (13 instructions, 52 bytes at 0000021195359BD0)
0 params, 3 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[1334]	GETGLOBAL	R0 K0 ; R0 := 0x89326c93
	2	[1334]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x78298275]
	3	[1334]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[1335]	GETUPVAL 	R1 U0 ; R1 := U0
	5	[1335]	MOVE     	R2 R0 ; R2 := R0
	6	[1335]	CALL     	R1 2 2 ; R1 := R1(R2)
	7	[1335]	TEST     	R1 0 ; if not R1 then PC := 11
	8	[1335]	JMP      	11 ; PC := 11
	9	[1336]	LOADK    	R1 := 1.000000
	10	[1336]	RETURN   	R1 2 ; return R1 
	11	[1338]	LOADK    	R1 := 2.000000
	12	[1338]	RETURN   	R1 2 ; return R1 
	13	[1339]	RETURN   	R0 1 ; return 

function #30 <?:1341,1372> (77 instructions, 308 bytes at 000002112C880BA0)
0 params, 9 slots, 6 upvalues, 0 locals, 20 constants, 1 function
	1	[1342]	GETGLOBAL	R0 K0 ; R0 := mInputBlocked
	2	[1342]	TEST     	R0 0 ; if not R0 then PC := 5
	3	[1342]	JMP      	5 ; PC := 5
	4	[1343]	RETURN   	R0 1 ; return 
	5	[1347]	GETGLOBAL	R0 K1 ; R0 := mRailJack
	6	[1347]	GETTABLE 	R0 R0 K2 ; R0 := R0["Active"]
	7	[1347]	TEST     	R0 0 ; if not R0 then PC := 21
	8	[1347]	JMP      	21 ; PC := 21
	9	[1347]	GETUPVAL 	R0 U0 ; R0 := U0
	10	[1347]	GETTABLE 	R0 R0 K3 ; R0 := R0[0xb73d420f]
	11	[1347]	CALL     	R0 1 2 ; R0 := R0()
	12	[1347]	GETUPVAL 	R1 U0 ; R1 := U0
	13	[1347]	GETTABLE 	R1 R1 K4 ; R1 := R1["UI_MODE_IN_SPACE_SHIP"]
	14	[1347]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 20
	15	[1347]	JMP      	20 ; PC := 20
	16	[1347]	GETUPVAL 	R0 U1 ; R0 := U1
	17	[1347]	CALL     	R0 1 2 ; R0 := R0()
	18	[1347]	EQ       	0 R0 K5 ; if R0 ~= 1.000000 then PC := 21
	19	[1347]	JMP      	21 ; PC := 21
	20	[1348]	RETURN   	R0 1 ; return 
	21	[1351]	OP_LOADBOOL	R0 1 0 ; R0 := true
	22	[1351]	SETGLOBALHASH	R0 K0 ; mInputBlocked := R0
	23	[1352]	GETGLOBAL	R0 K1 ; R0 := mRailJack
	24	[1352]	GETGLOBAL	R1 K1 ; R1 := mRailJack
	25	[1352]	GETTABLE 	R1 R1 K2 ; R1 := R1["Active"]
	26	[1352]	NOT      	R1 R1 ; R1 := not R1
	27	[1352]	SETTABLE 	R0 K2 R1 ; R0["Active"] := R1
	28	[1353]	GETGLOBAL	R0 K1 ; R0 := mRailJack
	29	[1353]	SETTABLE 	R0 K6 K7 ; R0["NameNodeMapRebuildQueued"] := true
	30	[1354]	GETGLOBAL	R0 K1 ; R0 := mRailJack
	31	[1354]	SETTABLE 	R0 K8 K7 ; R0["Transitioned"] := true
	32	[1355]	GETUPVAL 	R0 U2 ; R0 := U2
	33	[1355]	OP_LOADBOOL	R1 1 0 ; R1 := true
	34	[1355]	LOADNIL  	R2 R2 ; R2 := nil
	35	[1355]	OP_LOADBOOL	R3 1 0 ; R3 := true
	36	[1355]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	37	[1358]	GETUPVAL 	R0 U3 ; R0 := U3
	38	[1358]	OP_LOADBOOL	R1 1 0 ; R1 := true
	39	[1358]	CALL     	R0 2 1 ; R0(R1)
	40	[1359]	GETUPVAL 	R0 U4 ; R0 := U4
	41	[1359]	GETTABLE 	R0 R0 K9 ; R0 := R0[0x4c232afc]
	42	[1359]	GETGLOBAL	R1 K10 ; R1 := 0xae91e43b
	43	[1359]	LOADK    	R2 := 1.000000
	44	[1359]	LOADK    	R3 K11 ; R3 := 0.200000
	45	[1359]	LOADK    	R4 := 0.000000
	46	[1359]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	47	[1361]	GETGLOBAL	R0 K12 ; R0 := 0xcbd666e1
	48	[1361]	LOADK    	R1 := 0.000000
	49	[1361]	CALL     	R0 2 1 ; R0(R1)
	50	[1362]	GETGLOBAL	R0 K1 ; R0 := mRailJack
	51	[1362]	GETTABLE 	R0 R0 K2 ; R0 := R0["Active"]
	52	[1362]	TEST     	R0 0 ; if not R0 then PC := 59
	53	[1362]	JMP      	59 ; PC := 59
	54	[1363]	GETGLOBAL	R0 K13 ; R0 := _T
	55	[1363]	GETUPVAL 	R1 U1 ; R1 := U1
	56	[1363]	CALL     	R1 1 2 ; R1 := R1()
	57	[1363]	SETTABLE 	R0 K14 R1 ; R0["InRailJackMode"] := R1
	58	[1363]	JMP      	61 ; PC := 61
	59	[1365]	GETGLOBAL	R0 K13 ; R0 := _T
	60	[1365]	SETTABLE 	R0 K14 K15 ; R0["InRailJackMode"] := nil
	61	[1367]	GETUPVAL 	R0 U5 ; R0 := U5
	62	[1367]	CALL     	R0 1 1 ; R0()
	63	[1368]	GETGLOBAL	R0 K16 ; R0 := 0x25312c9b
	64	[1368]	GETGLOBAL	R1 K10 ; R1 := 0xae91e43b
	65	[1368]	LOADK    	R2 K17 ; R2 := "_root"
	66	[1368]	LOADK    	R3 := 0.000000
	67	[1368]	NEWTABLE 	R4 1 0 ; R4 := {}
	68	[1368]	LOADK    	R5 := 10.000000
	69	[1368]	SETLIST  	R4 1 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
	70	[1368]	NEWTABLE 	R5 1 0 ; R5 := {}
	71	[1368]	LOADK    	R6 := 100.000000
	72	[1368]	SETLIST  	R5 1 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
	73	[1368]	LOADK    	R6 K19 ; R6 := 0.300000
	74	[1368]	LOADK    	R7 := 0.000000
	75	[1371]	CLOSURE  	R8 0 ; R8 := closure(Function #1)
	76	[1368]	CALL     	R0 9 1 ; R0(R1,R2,R3,R4,R5,R6,R7,R8)
	77	[1372]	RETURN   	R0 1 ; return 

function #31 <?:1374,1376> (3 instructions, 12 bytes at 00000211159DA1D0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1375]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1375]	CALL     	R0 1 1 ; R0()
	3	[1376]	RETURN   	R0 1 ; return 

function #32 <?:1378,1384> (18 instructions, 72 bytes at 00000211159DA260)
0 params, 4 slots, 0 upvalues, 0 locals, 7 constants, 0 functions
	1	[1379]	GETGLOBAL	R0 K0 ; R0 := mZoomedRegion
	2	[1379]	TEST     	R0 0 ; if not R0 then PC := 12
	3	[1379]	JMP      	12 ; PC := 12
	4	[1380]	GETGLOBAL	R0 K1 ; R0 := _T
	5	[1380]	GETTABLE 	R0 R0 K2 ; R0 := R0["SquadOverlay"]
	6	[1380]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0xe4162eed]
	7	[1380]	LOADK    	R2 K4 ; R2 := "FindAnyRailjackMission"
	8	[1380]	GETGLOBAL	R3 K0 ; R3 := mZoomedRegion
	9	[1380]	GETTABLE 	R3 R3 K5 ; R3 := R3["name"]
	10	[1380]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	11	[1380]	JMP      	18 ; PC := 18
	12	[1382]	GETGLOBAL	R0 K1 ; R0 := _T
	13	[1382]	GETTABLE 	R0 R0 K2 ; R0 := R0["SquadOverlay"]
	14	[1382]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0xe4162eed]
	15	[1382]	LOADK    	R2 K4 ; R2 := "FindAnyRailjackMission"
	16	[1382]	LOADK    	R3 K6 ; R3 := ""
	17	[1382]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	18	[1384]	RETURN   	R0 1 ; return 

function #33 <?:1386,1388> (3 instructions, 12 bytes at 0000021120D0AE80)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1387]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1387]	CALL     	R0 1 1 ; R0()
	3	[1388]	RETURN   	R0 1 ; return 

function #34 <?:1390,1459> (180 instructions, 720 bytes at 0000021120D0AF10)
0 params, 9 slots, 10 upvalues, 0 locals, 49 constants, 1 function
	1	[1391]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[1391]	GETTABLE 	R0 R0 K1 ; R0 := R0["WareframeChallenge"]
	3	[1391]	TEST     	R0 0 ; if not R0 then PC := 6
	4	[1391]	JMP      	6 ; PC := 6
	5	[1392]	RETURN   	R0 1 ; return 
	6	[1395]	NEWTABLE 	R0 0 0 ; R0 := {}
	7	[1397]	GETGLOBAL	R1 K2 ; R1 := 0x34291f5c
	8	[1397]	GETTABLE 	R1 R1 K3 ; R1 := R1[0x781669d7]
	9	[1397]	CALL     	R1 1 2 ; R1 := R1()
	10	[1397]	TEST     	R1 0 ; if not R1 then PC := 24
	11	[1397]	JMP      	24 ; PC := 24
	12	[1397]	GETUPVAL 	R1 U0 ; R1 := U0
	13	[1397]	GETTABLE 	R1 R1 K4 ; R1 := R1["mNodeVisible"]
	14	[1397]	TEST     	R1 0 ; if not R1 then PC := 24
	15	[1397]	JMP      	24 ; PC := 24
	16	[1398]	GETGLOBAL	R1 K5 ; R1 := 0x33bdd652
	17	[1398]	GETTABLE 	R1 R1 K6 ; R1 := R1[0x23d5322f]
	18	[1398]	MOVE     	R2 R0 ; R2 := R0
	19	[1398]	NEWTABLE 	R3 0 2 ; R3 := {}
	20	[1398]	SETTABLE 	R3 K7 K8 ; R3["Label"] := "/Lotus/Language/Menu/MainMenu_Continue"
	21	[1401]	CLOSURE  	R4 0 ; R4 := closure(Function #1)
	22	[1401]	SETTABLE 	R3 K9 R4 ; R3["CallBack"] := R4
	23	[1398]	CALL     	R1 3 1 ; R1(R2,R3)
	24	[1405]	GETGLOBAL	R1 K10 ; R1 := mNewWarMode
	25	[1405]	TEST     	R1 1 ; if R1 then PC := 59
	26	[1405]	JMP      	59 ; PC := 59
	27	[1405]	GETGLOBAL	R1 K11 ; R1 := 0x7b998233
	28	[1405]	GETUPVAL 	R2 U1 ; R2 := U1
	29	[1405]	GETTABLE 	R2 R2 K12 ; R2 := R2["EpisodeStatus"]
	30	[1405]	CALL     	R1 2 2 ; R1 := R1(R2)
	31	[1405]	TEST     	R1 1 ; if R1 then PC := 59
	32	[1405]	JMP      	59 ; PC := 59
	33	[1405]	GETGLOBAL	R1 K13 ; R1 := mRailJack
	34	[1405]	GETTABLE 	R1 R1 K14 ; R1 := R1["Active"]
	35	[1405]	TEST     	R1 1 ; if R1 then PC := 59
	36	[1405]	JMP      	59 ; PC := 59
	37	[1406]	LOADK    	R1 K15 ; R1 := "/Lotus/Language/Menu/EpisodeStatus"
	38	[1407]	GETGLOBAL	R2 K0 ; R2 := _T
	39	[1407]	GETTABLE 	R2 R2 K16 ; R2 := R2["ResourceDroneVisible"]
	40	[1407]	TEST     	R2 1 ; if R2 then PC := 44
	41	[1407]	JMP      	44 ; PC := 44
	42	[1408]	LOADK    	R1 K17 ; R1 := "/Lotus/Language/Menu/ResourceDrones"
	43	[1408]	JMP      	50 ; PC := 50
	44	[1409]	GETUPVAL 	R2 U2 ; R2 := U2
	45	[1409]	GETTABLE 	R2 R2 K18 ; R2 := R2[0x89e663e9]
	46	[1409]	CALL     	R2 1 2 ; R2 := R2()
	47	[1409]	TEST     	R2 1 ; if R2 then PC := 50
	48	[1409]	JMP      	50 ; PC := 50
	49	[1410]	LOADK    	R1 K19 ; R1 := "/Lotus/Language/Menu/NemesisStatus"
	50	[1412]	GETGLOBAL	R2 K5 ; R2 := 0x33bdd652
	51	[1412]	GETTABLE 	R2 R2 K6 ; R2 := R2[0x23d5322f]
	52	[1412]	MOVE     	R3 R0 ; R3 := R0
	53	[1412]	NEWTABLE 	R4 0 3 ; R4 := {}
	54	[1412]	SETTABLE 	R4 K7 R1 ; R4["Label"] := R1
	55	[1412]	GETUPVAL 	R5 U3 ; R5 := U3
	56	[1412]	SETTABLE 	R4 K9 R5 ; R4["CallBack"] := R5
	57	[1412]	SETTABLE 	R4 K20 K21 ; R4["CallOut"] := "MENU_LTHUMB"
	58	[1412]	CALL     	R2 3 1 ; R2(R3,R4)
	59	[1417]	GETUPVAL 	R2 U4 ; R2 := U4
	60	[1417]	GETTABLE 	R2 R2 K22 ; R2 := R2["DioOpen"]
	61	[1417]	TEST     	R2 1 ; if R2 then PC := 135
	62	[1417]	JMP      	135 ; PC := 135
	63	[1417]	GETGLOBAL	R2 K23 ; R2 := mInvitePopupShowing
	64	[1417]	TEST     	R2 1 ; if R2 then PC := 135
	65	[1417]	JMP      	135 ; PC := 135
	66	[1418]	GETGLOBAL	R2 K11 ; R2 := 0x7b998233
	67	[1418]	GETUPVAL 	R3 U5 ; R3 := U5
	68	[1418]	GETTABLE 	R3 R3 K24 ; R3 := R3[0xa9882367]
	69	[1418]	LOADK    	R4 K25 ; R4 := "SwitchLoadout"
	70	[1418]	CALL     	R3 2 0 ; R3,... := R3(R4)
	71	[1418]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	72	[1418]	NOT      	R2 R2 ; R2 := not R2
	73	[1419]	TEST     	R2 0 ; if not R2 then PC := 93
	74	[1419]	JMP      	93 ; PC := 93
	75	[1419]	GETGLOBAL	R3 K2 ; R3 := 0x34291f5c
	76	[1419]	GETTABLE 	R3 R3 K26 ; R3 := R3[0x1467d5f4]
	77	[1419]	CALL     	R3 1 2 ; R3 := R3()
	78	[1419]	TEST     	R3 0 ; if not R3 then PC := 93
	79	[1419]	JMP      	93 ; PC := 93
	80	[1419]	GETGLOBAL	R3 K11 ; R3 := 0x7b998233
	81	[1419]	GETGLOBAL	R4 K0 ; R4 := _T
	82	[1419]	GETTABLE 	R4 R4 K27 ; R4 := R4["SquadOverlay"]
	83	[1419]	CALL     	R3 2 2 ; R3 := R3(R4)
	84	[1419]	TEST     	R3 1 ; if R3 then PC := 93
	85	[1419]	JMP      	93 ; PC := 93
	86	[1420]	GETGLOBAL	R3 K0 ; R3 := _T
	87	[1420]	GETTABLE 	R3 R3 K27 ; R3 := R3["SquadOverlay"]
	88	[1420]	SELF     	R3 R3 K28 ; R4 := R3; R3 := R3[0xe4162eed]
	89	[1420]	LOADK    	R5 K29 ; R5 := "IsAcceptBtnVisible"
	90	[1420]	LOADK    	R6 K30 ; R6 := ""
	91	[1420]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	92	[1420]	NOT      	R2 R3 ; R2 := not R3
	93	[1423]	TEST     	R2 0 ; if not R2 then PC := 107
	94	[1423]	JMP      	107 ; PC := 107
	95	[1423]	GETGLOBAL	R3 K10 ; R3 := mNewWarMode
	96	[1423]	TEST     	R3 1 ; if R3 then PC := 107
	97	[1423]	JMP      	107 ; PC := 107
	98	[1424]	GETGLOBAL	R3 K5 ; R3 := 0x33bdd652
	99	[1424]	GETTABLE 	R3 R3 K6 ; R3 := R3[0x23d5322f]
	100	[1424]	MOVE     	R4 R0 ; R4 := R0
	101	[1424]	NEWTABLE 	R5 0 3 ; R5 := {}
	102	[1424]	SETTABLE 	R5 K7 K31 ; R5["Label"] := "/Lotus/Language/Menu/Loadout_Change"
	103	[1424]	GETUPVAL 	R6 U6 ; R6 := U6
	104	[1424]	SETTABLE 	R5 K9 R6 ; R5["CallBack"] := R6
	105	[1424]	SETTABLE 	R5 K20 K32 ; R5["CallOut"] := "MENU_GENERIC1"
	106	[1424]	CALL     	R3 3 1 ; R3(R4,R5)
	107	[1427]	GETGLOBAL	R3 K2 ; R3 := 0x34291f5c
	108	[1427]	GETTABLE 	R3 R3 K26 ; R3 := R3[0x1467d5f4]
	109	[1427]	CALL     	R3 1 2 ; R3 := R3()
	110	[1427]	TEST     	R3 0 ; if not R3 then PC := 135
	111	[1427]	JMP      	135 ; PC := 135
	112	[1427]	GETGLOBAL	R3 K11 ; R3 := 0x7b998233
	113	[1427]	GETGLOBAL	R4 K0 ; R4 := _T
	114	[1427]	GETTABLE 	R4 R4 K27 ; R4 := R4["SquadOverlay"]
	115	[1427]	CALL     	R3 2 2 ; R3 := R3(R4)
	116	[1427]	TEST     	R3 1 ; if R3 then PC := 135
	117	[1427]	JMP      	135 ; PC := 135
	118	[1427]	GETGLOBAL	R3 K0 ; R3 := _T
	119	[1427]	GETTABLE 	R3 R3 K27 ; R3 := R3["SquadOverlay"]
	120	[1427]	SELF     	R3 R3 K28 ; R4 := R3; R3 := R3[0xe4162eed]
	121	[1427]	LOADK    	R5 K33 ; R5 := "CanInvite"
	122	[1427]	LOADK    	R6 K30 ; R6 := ""
	123	[1427]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	124	[1427]	TEST     	R3 0 ; if not R3 then PC := 135
	125	[1427]	JMP      	135 ; PC := 135
	126	[1428]	GETGLOBAL	R3 K5 ; R3 := 0x33bdd652
	127	[1428]	GETTABLE 	R3 R3 K6 ; R3 := R3[0x23d5322f]
	128	[1428]	MOVE     	R4 R0 ; R4 := R0
	129	[1428]	NEWTABLE 	R5 0 3 ; R5 := {}
	130	[1428]	SETTABLE 	R5 K7 K34 ; R5["Label"] := "/Lotus/Language/Menu/SocialOverlay_Invite"
	131	[1428]	GETUPVAL 	R6 U7 ; R6 := U7
	132	[1428]	SETTABLE 	R5 K9 R6 ; R5["CallBack"] := R6
	133	[1428]	SETTABLE 	R5 K20 K35 ; R5["CallOut"] := "MENU_RTRIGGER1"
	134	[1428]	CALL     	R3 3 1 ; R3(R4,R5)
	135	[1432]	LOADK    	R3 K30 ; R3 := ""
	136	[1433]	GETUPVAL 	R4 U4 ; R4 := U4
	137	[1433]	GETTABLE 	R4 R4 K22 ; R4 := R4["DioOpen"]
	138	[1433]	TEST     	R4 0 ; if not R4 then PC := 142
	139	[1433]	JMP      	142 ; PC := 142
	140	[1434]	LOADK    	R3 K36 ; R3 := "/Lotus/Language/Menu/Global_Back"
	141	[1434]	JMP      	156 ; PC := 156
	142	[1436]	GETUPVAL 	R4 U5 ; R4 := U5
	143	[1436]	GETTABLE 	R4 R4 K37 ; R4 := R4[0x06d055f9]
	144	[1436]	GETGLOBAL	R5 K38 ; R5 := mSmoothZoom
	145	[1436]	GETTABLE 	R5 R5 K39 ; R5 := R5["mTargetVal"]
	146	[1436]	GETGLOBAL	R6 K40 ; R6 := Zoom
	147	[1436]	GETTABLE 	R6 R6 K41 ; R6 := R6["STARTING_ZOOM"]
	148	[1436]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 151
	149	[1436]	JMP      	151 ; PC := 151
	150	[1436]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 151
	151	[1436]	OP_LOADBOOL	R5 1 0 ; R5 := true
	152	[1436]	LOADK    	R6 K42 ; R6 := "/Lotus/Language/Menu/Lobby_ZoomOut"
	153	[1436]	LOADK    	R7 K43 ; R7 := "/Lotus/Language/Menu/Exit"
	154	[1436]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	155	[1436]	MOVE     	R3 R4 ; R3 := R4
	156	[1439]	GETGLOBAL	R4 K5 ; R4 := 0x33bdd652
	157	[1439]	GETTABLE 	R4 R4 K6 ; R4 := R4[0x23d5322f]
	158	[1439]	MOVE     	R5 R0 ; R5 := R0
	159	[1439]	NEWTABLE 	R6 0 3 ; R6 := {}
	160	[1439]	SETTABLE 	R6 K7 R3 ; R6["Label"] := R3
	161	[1439]	GETUPVAL 	R7 U8 ; R7 := U8
	162	[1439]	SETTABLE 	R6 K9 R7 ; R6["CallBack"] := R7
	163	[1439]	SETTABLE 	R6 K20 K44 ; R6["CallOut"] := "MENU_CANCEL"
	164	[1439]	CALL     	R4 3 1 ; R4(R5,R6)
	165	[1446]	GETUPVAL 	R4 U9 ; R4 := U9
	166	[1446]	TEST     	R4 0 ; if not R4 then PC := 168
	167	[1446]	JMP      	168 ; PC := 168
	168	[1456]	GETGLOBAL	R4 K0 ; R4 := _T
	169	[1456]	GETTABLE 	R4 R4 K45 ; R4 := R4["SetButtons"]
	170	[1456]	TEST     	R4 0 ; if not R4 then PC := 180
	171	[1456]	JMP      	180 ; PC := 180
	172	[1457]	GETGLOBAL	R4 K0 ; R4 := _T
	173	[1457]	GETTABLE 	R4 R4 K46 ; R4 := R4[0x1c5b546f]
	174	[1457]	GETGLOBAL	R5 K47 ; R5 := 0xae91e43b
	175	[1457]	MOVE     	R6 R0 ; R6 := R0
	176	[1457]	GETGLOBAL	R7 K48 ; R7 := 0xcd0165a3
	177	[1457]	LOADK    	R8 := 1.000000
	178	[1457]	CALL     	R7 2 0 ; R7,... := R7(R8)
	179	[1457]	CALL     	R4 0 1 ; R4(R5,...)
	180	[1459]	RETURN   	R0 1 ; return 

function #35 <?:1461,1463> (3 instructions, 12 bytes at 00000211255A7A50)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[1462]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1462]	CALL     	R0 1 1 ; R0()
	3	[1463]	RETURN   	R0 1 ; return 

function #36 <?:1465,1468> (8 instructions, 32 bytes at 0000021191E942E0)
0 params, 2 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[1466]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[1466]	GETGLOBAL	R1 K0 ; R1 := _T
	3	[1466]	GETTABLE 	R1 R1 K1 ; R1 := R1["ResourceDroneVisible"]
	4	[1466]	NOT      	R1 R1 ; R1 := not R1
	5	[1466]	SETTABLE 	R0 K1 R1 ; R0["ResourceDroneVisible"] := R1
	6	[1467]	GETUPVAL 	R0 U0 ; R0 := U0
	7	[1467]	CALL     	R0 1 1 ; R0()
	8	[1468]	RETURN   	R0 1 ; return 

function #37 <?:1470,1486> (42 instructions, 168 bytes at 0000021191E94370)
5 params, 11 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[1471]	MOVE     	R5 R1 ; R5 := R1
	2	[1471]	MOVE     	R6 R2 ; R6 := R2
	3	[1471]	CONCAT   	R5 R5 R6 ; R5 := R5 .. R6
	4	[1472]	GETGLOBAL	R6 K0 ; R6 := 0xae91e43b
	5	[1472]	SELF     	R6 R6 K1 ; R7 := R6; R6 := R6[0xa7ec3e8a]
	6	[1472]	MOVE     	R8 R5 ; R8 := R5
	7	[1472]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	8	[1472]	TEST     	R6 1 ; if R6 then PC := 29
	9	[1472]	JMP      	29 ; PC := 29
	10	[1473]	TEST     	R4 0 ; if not R4 then PC := 21
	11	[1473]	JMP      	21 ; PC := 21
	12	[1474]	GETGLOBAL	R6 K2 ; R6 := 0x38f10e85
	13	[1474]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	14	[1474]	MOVE     	R8 R0 ; R8 := R0
	15	[1474]	LOADK    	R9 K3 ; R9 := ".createEmptyMovieClip"
	16	[1474]	CONCAT   	R8 R8 R9 ; R8 := R8 .. R9
	17	[1474]	MOVE     	R9 R5 ; R9 := R5
	18	[1474]	ADD      	R10 R2 R3 ; R10 := R2 + R3
	19	[1474]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	20	[1474]	JMP      	29 ; PC := 29
	21	[1476]	GETGLOBAL	R6 K2 ; R6 := 0x38f10e85
	22	[1476]	GETGLOBAL	R7 K0 ; R7 := 0xae91e43b
	23	[1476]	MOVE     	R8 R0 ; R8 := R0
	24	[1476]	LOADK    	R9 K4 ; R9 := ".duplicateMovieClip"
	25	[1476]	CONCAT   	R8 R8 R9 ; R8 := R8 .. R9
	26	[1476]	MOVE     	R9 R5 ; R9 := R5
	27	[1476]	ADD      	R10 R2 R3 ; R10 := R2 + R3
	28	[1476]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	29	[1479]	GETGLOBAL	R6 K5 ; R6 := 0x7f5022cf
	30	[1479]	GETTABLE 	R6 R6 K6 ; R6 := R6[0x348c01f7]
	31	[1479]	MOVE     	R7 R0 ; R7 := R0
	32	[1479]	LOADK    	R8 K7 ; R8 := "(.*%.).+$"
	33	[1479]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	34	[1480]	EQ       	0 R6 K8 ; if R6 ~= nil then PC := 38
	35	[1480]	JMP      	38 ; PC := 38
	36	[1481]	MOVE     	R6 R5 ; R6 := R5
	37	[1481]	JMP      	41 ; PC := 41
	38	[1483]	MOVE     	R7 R6 ; R7 := R6
	39	[1483]	MOVE     	R8 R5 ; R8 := R5
	40	[1483]	CONCAT   	R6 R7 R8 ; R6 := R7 .. R8
	41	[1485]	RETURN   	R6 2 ; return R6 
	42	[1486]	RETURN   	R0 1 ; return 

function #38 <?:1488,1490> (7 instructions, 28 bytes at 000002112E1EF530)
1 param, 5 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[1489]	GETGLOBAL	R1 K0 ; R1 := 0x38f10e85
	2	[1489]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	3	[1489]	MOVE     	R3 R0 ; R3 := R0
	4	[1489]	LOADK    	R4 K2 ; R4 := ".removeMovieClip"
	5	[1489]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	6	[1489]	CALL     	R1 3 1 ; R1(R2,R3)
	7	[1490]	RETURN   	R0 1 ; return 

function #39 <?:1492,1498> (18 instructions, 72 bytes at 0000021191E94400)
1 param, 3 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[1493]	GETGLOBAL	R1 K0 ; R1 := mVorsPrizeQuestActiveNode
	2	[1493]	TEST     	R1 0 ; if not R1 then PC := 15
	3	[1493]	JMP      	15 ; PC := 15
	4	[1493]	TEST     	R0 0 ; if not R0 then PC := 15
	5	[1493]	JMP      	15 ; PC := 15
	6	[1493]	GETTABLE 	R1 R0 K1 ; R1 := R0["name"]
	7	[1493]	GETGLOBAL	R2 K0 ; R2 := mVorsPrizeQuestActiveNode
	8	[1493]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 15
	9	[1493]	JMP      	15 ; PC := 15
	10	[1493]	GETTABLE 	R1 R0 K2 ; R1 := R0["missionsCompleted"]
	11	[1493]	EQ       	0 R1 K3 ; if R1 ~= 0.000000 then PC := 15
	12	[1493]	JMP      	15 ; PC := 15
	13	[1494]	LOADK    	R1 := 25.000000
	14	[1494]	RETURN   	R1 2 ; return R1 
	15	[1497]	GETUPVAL 	R1 U0 ; R1 := U0
	16	[1497]	GETTABLE 	R1 R1 K4 ; R1 := R1["LABEL_ALPHA"]
	17	[1497]	RETURN   	R1 2 ; return R1 
	18	[1498]	RETURN   	R0 1 ; return 

function #40 <?:1500,1514> (27 instructions, 108 bytes at 000002111D4E0C60)
1 param, 4 slots, 0 upvalues, 0 locals, 9 constants, 0 functions
	1	[1502]	GETGLOBAL	R1 K0 ; R1 := mRailJack
	2	[1502]	GETTABLE 	R1 R1 K1 ; R1 := R1["Active"]
	3	[1502]	TEST     	R1 1 ; if R1 then PC := 7
	4	[1502]	JMP      	7 ; PC := 7
	5	[1503]	OP_LOADBOOL	R1 0 0 ; R1 := false
	6	[1503]	RETURN   	R1 2 ; return R1 
	7	[1507]	GETGLOBAL	R1 K2 ; R1 := _T
	8	[1507]	GETTABLE 	R1 R1 K3 ; R1 := R1["InRailJackMode"]
	9	[1507]	TEST     	R1 0 ; if not R1 then PC := 17
	10	[1507]	JMP      	17 ; PC := 17
	11	[1507]	GETGLOBAL	R1 K2 ; R1 := _T
	12	[1507]	GETTABLE 	R1 R1 K3 ; R1 := R1["InRailJackMode"]
	13	[1507]	EQ       	0 R1 K4 ; if R1 ~= 1.000000 then PC := 17
	14	[1507]	JMP      	17 ; PC := 17
	15	[1508]	OP_LOADBOOL	R1 0 0 ; R1 := false
	16	[1508]	RETURN   	R1 2 ; return R1 
	17	[1513]	GETGLOBAL	R1 K5 ; R1 := 0x7f5022cf
	18	[1513]	GETTABLE 	R1 R1 K6 ; R1 := R1[0xa5c556b9]
	19	[1513]	MOVE     	R2 R0 ; R2 := R0
	20	[1513]	LOADK    	R3 K7 ; R3 := "Dojo"
	21	[1513]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	22	[1513]	EQ       	1 R1 K8 ; if R1 == nil then PC := 25
	23	[1513]	JMP      	25 ; PC := 25
	24	[1513]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 25
	25	[1513]	OP_LOADBOOL	R1 1 0 ; R1 := true
	26	[1513]	RETURN   	R1 2 ; return R1 
	27	[1514]	RETURN   	R0 1 ; return 

function #41 <?:1516,1569> (206 instructions, 824 bytes at 000002111EC4E260)
7 params, 23 slots, 6 upvalues, 0 locals, 60 constants, 0 functions
	1	[1517]	GETUPVAL 	R7 U0 ; R7 := U0
	2	[1517]	LOADK    	R8 K0 ; R8 := "SubLabel"
	3	[1517]	LOADK    	R9 K0 ; R9 := "SubLabel"
	4	[1517]	GETUPVAL 	R10 U1 ; R10 := U1
	5	[1517]	LEN      	R10 R10 ; R10 := # R10
	6	[1517]	ADD      	R10 R10 K1 ; R10 := R10 + 1.000000
	7	[1517]	LOADK    	R11 := 200.000000
	8	[1517]	CALL     	R7 5 2 ; R7 := R7(R8,R9,R10,R11)
	9	[1519]	GETGLOBAL	R8 K2 ; R8 := 0xae91e43b
	10	[1519]	SELF     	R8 R8 K3 ; R9 := R8; R8 := R8[0x09839320]
	11	[1519]	MOVE     	R10 R7 ; R10 := R7
	12	[1519]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	13	[1521]	GETGLOBAL	R9 K4 ; R9 := mRailJack
	14	[1521]	GETTABLE 	R9 R9 K5 ; R9 := R9["Active"]
	15	[1521]	TEST     	R9 0 ; if not R9 then PC := 20
	16	[1521]	JMP      	20 ; PC := 20
	17	[1521]	GETUPVAL 	R9 U2 ; R9 := U2
	18	[1521]	MOVE     	R10 R0 ; R10 := R0
	19	[1521]	CALL     	R9 2 2 ; R9 := R9(R10)
	20	[1522]	GETGLOBAL	R10 K6 ; R10 := 0x2d0fad09
	21	[1522]	LOADK    	R11 K7 ; R11 := "Lotus.Interface.Components.ThemedButton"
	22	[1522]	CALL     	R10 2 2 ; R10 := R10(R11)
	23	[1523]	GETTABLE 	R11 R10 K8 ; R11 := R10[0xae6791ba]
	24	[1523]	GETGLOBAL	R12 K2 ; R12 := 0xae91e43b
	25	[1523]	MOVE     	R13 R7 ; R13 := R7
	26	[1523]	LOADK    	R14 K9 ; R14 := ".JoinBtn"
	27	[1523]	CONCAT   	R13 R13 R14 ; R13 := R13 .. R14
	28	[1523]	LOADK    	R14 K10 ; R14 := "/Lotus/Language/Railjack/SolarMap_JoinAnyCrew"
	29	[1523]	LOADK    	R15 K11 ; R15 := "FindAnyRailjackMission"
	30	[1523]	CALL     	R11 5 2 ; R11 := R11(R12,R13,R14,R15)
	31	[1524]	GETUPVAL 	R12 U3 ; R12 := U3
	32	[1524]	GETTABLE 	R12 R12 K13 ; R12 := R12["CENTER_ALIGNED"]
	33	[1524]	SETTABLE 	R11 K12 R12 ; R11["mAnchor"] := R12
	34	[1525]	SETTABLE 	R11 K14 K15 ; R11["mInactiveAlpha"] := 0.000000
	35	[1526]	SELF     	R12 R11 K16 ; R13 := R11; R12 := R11[0x4e86c602]
	36	[1526]	OP_LOADBOOL	R14 1 0 ; R14 := true
	37	[1526]	CALL     	R12 3 1 ; R12(R13,R14)
	38	[1527]	SELF     	R12 R11 K17 ; R13 := R11; R12 := R11[0x46610c50]
	39	[1527]	OP_LOADBOOL	R14 0 0 ; R14 := false
	40	[1527]	CALL     	R12 3 1 ; R12(R13,R14)
	41	[1528]	SELF     	R12 R11 K18 ; R13 := R11; R12 := R11[0x368ad758]
	42	[1528]	MOVE     	R14 R9 ; R14 := R9
	43	[1528]	CALL     	R12 3 1 ; R12(R13,R14)
	44	[1529]	SELF     	R12 R11 K19 ; R13 := R11; R12 := R11[0x71e9ac81]
	45	[1529]	CALL     	R12 2 1 ; R12(R13)
	46	[1530]	GETGLOBAL	R12 K4 ; R12 := mRailJack
	47	[1530]	GETTABLE 	R12 R12 K5 ; R12 := R12["Active"]
	48	[1530]	TEST     	R12 0 ; if not R12 then PC := 53
	49	[1530]	JMP      	53 ; PC := 53
	50	[1532]	MOVE     	R12 R0 ; R12 := R0
	51	[1532]	LOADK    	R13 K20 ; R13 := "_SPACE"
	52	[1532]	CONCAT   	R0 R12 R13 ; R0 := R12 .. R13
	53	[1535]	GETGLOBAL	R12 K21 ; R12 := 0x7f5022cf
	54	[1535]	GETTABLE 	R12 R12 K22 ; R12 := R12[0x3f3e4d12]
	55	[1535]	GETGLOBAL	R13 K2 ; R13 := 0xae91e43b
	56	[1535]	SELF     	R13 R13 K23 ; R14 := R13; R13 := R13[0x42b04007]
	57	[1535]	MOVE     	R15 R0 ; R15 := R0
	58	[1535]	OP_LOADBOOL	R16 0 0 ; R16 := false
	59	[1535]	CALL     	R13 4 0 ; R13,... := R13(R14,R15,R16)
	60	[1535]	CALL     	R12 0 2 ; R12 := R12(R13,...)
	61	[1536]	GETUPVAL 	R13 U4 ; R13 := U4
	62	[1536]	GETTABLE 	R13 R13 K24 ; R13 := R13["Tag"]
	63	[1536]	EQ       	0 R0 R13 ; if R0 ~= R13 then PC := 78
	64	[1536]	JMP      	78 ; PC := 78
	65	[1537]	GETGLOBAL	R13 K21 ; R13 := 0x7f5022cf
	66	[1537]	GETTABLE 	R13 R13 K25 ; R13 := R13[0x66edf04f]
	67	[1537]	MOVE     	R14 R12 ; R14 := R12
	68	[1537]	LOADK    	R15 K26 ; R15 := " "
	69	[1537]	LOADK    	R16 K27 ; R16 := "\r\n\r\n"
	70	[1537]	CALL     	R13 4 2 ; R13 := R13(R14,R15,R16)
	71	[1537]	MOVE     	R12 R13 ; R12 := R13
	72	[1538]	GETGLOBAL	R13 K2 ; R13 := 0xae91e43b
	73	[1538]	SELF     	R13 R13 K28 ; R14 := R13; R13 := R13[0x5f56eeab]
	74	[1538]	MOVE     	R15 R7 ; R15 := R7
	75	[1538]	LOADK    	R16 := 38.000000
	76	[1538]	LOADK    	R17 K29 ; R17 := "bottom"
	77	[1538]	CALL     	R13 5 1 ; R13(R14,R15,R16,R17)
	78	[1541]	GETGLOBAL	R13 K2 ; R13 := 0xae91e43b
	79	[1541]	SELF     	R13 R13 K28 ; R14 := R13; R13 := R13[0x5f56eeab]
	80	[1541]	MOVE     	R15 R7 ; R15 := R7
	81	[1541]	LOADK    	R16 K30 ; R16 := ".Name"
	82	[1541]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	83	[1541]	LOADK    	R16 := 29.000000
	84	[1541]	MOVE     	R17 R12 ; R17 := R12
	85	[1541]	CALL     	R13 5 1 ; R13(R14,R15,R16,R17)
	86	[1542]	GETGLOBAL	R13 K2 ; R13 := 0xae91e43b
	87	[1542]	SELF     	R13 R13 K31 ; R14 := R13; R13 := R13[0xc0a3774b]
	88	[1542]	MOVE     	R15 R7 ; R15 := R7
	89	[1542]	LOADK    	R16 K32 ; R16 := "Name"
	90	[1542]	LOADK    	R17 := 44.000000
	91	[1542]	OP_LOADBOOL	R18 0 0 ; R18 := false
	92	[1542]	CALL     	R13 6 1 ; R13(R14,R15,R16,R17,R18)
	93	[1543]	GETGLOBAL	R13 K2 ; R13 := 0xae91e43b
	94	[1543]	SELF     	R13 R13 K33 ; R14 := R13; R13 := R13[0x67bc869f]
	95	[1543]	MOVE     	R15 R7 ; R15 := R7
	96	[1543]	LOADK    	R16 := 10.000000
	97	[1543]	GETUPVAL 	R17 U5 ; R17 := U5
	98	[1543]	GETTABLE 	R17 R17 K34 ; R17 := R17["LABEL_ALPHA"]
	99	[1543]	CALL     	R13 5 1 ; R13(R14,R15,R16,R17)
	100	[1544]	GETGLOBAL	R13 K2 ; R13 := 0xae91e43b
	101	[1544]	SELF     	R13 R13 K35 ; R14 := R13; R13 := R13[0xaade900e]
	102	[1544]	MOVE     	R15 R7 ; R15 := R7
	103	[1544]	LOADK    	R16 := 11.000000
	104	[1544]	NOT      	R17 R4 ; R17 := not R4
	105	[1544]	CALL     	R13 5 1 ; R13(R14,R15,R16,R17)
	106	[1545]	GETGLOBAL	R13 K2 ; R13 := 0xae91e43b
	107	[1545]	SELF     	R13 R13 K33 ; R14 := R13; R13 := R13[0x67bc869f]
	108	[1545]	MOVE     	R15 R7 ; R15 := R7
	109	[1545]	LOADK    	R16 K30 ; R16 := ".Name"
	110	[1545]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	111	[1545]	LOADK    	R16 := 9.000000
	112	[1545]	LOADK    	R17 K36 ; R17 := 16777215.000000
	113	[1545]	CALL     	R13 5 1 ; R13(R14,R15,R16,R17)
	114	[1546]	GETGLOBAL	R13 K2 ; R13 := 0xae91e43b
	115	[1546]	SELF     	R13 R13 K33 ; R14 := R13; R13 := R13[0x67bc869f]
	116	[1546]	MOVE     	R15 R7 ; R15 := R7
	117	[1546]	LOADK    	R16 K30 ; R16 := ".Name"
	118	[1546]	CONCAT   	R15 R15 R16 ; R15 := R15 .. R16
	119	[1546]	LOADK    	R16 := 10.000000
	120	[1546]	LOADK    	R17 := 190.000000
	121	[1546]	CALL     	R13 5 1 ; R13(R14,R15,R16,R17)
	122	[1548]	TEST     	R2 0 ; if not R2 then PC := 131
	123	[1548]	JMP      	131 ; PC := 131
	124	[1549]	GETGLOBAL	R13 K2 ; R13 := 0xae91e43b
	125	[1549]	SELF     	R13 R13 K37 ; R14 := R13; R13 := R13[0xe261aa96]
	126	[1549]	MOVE     	R15 R7 ; R15 := R7
	127	[1549]	LOADK    	R16 K32 ; R16 := "Name"
	128	[1549]	LOADK    	R17 := 37.000000
	129	[1549]	LOADK    	R18 K38 ; R18 := "left"
	130	[1549]	CALL     	R13 6 1 ; R13(R14,R15,R16,R17,R18)
	131	[1552]	GETTABLE 	R13 R1 K39 ; R13 := R1["z"]
	132	[1552]	SUB      	R13 R13 K40 ; R13 := R13 - -2.000000
	133	[1552]	DIV      	R13 K1 R13 ; R13 := 1.000000 / R13
	134	[1553]	MUL      	R13 R13 K41 ; R13 := R13 * 4.000000
	135	[1554]	GETGLOBAL	R14 K42 ; R14 := 0x42dcc9f5
	136	[1554]	MOVE     	R15 R13 ; R15 := R13
	137	[1554]	LOADK    	R16 := 0.750000
	138	[1554]	LOADK    	R17 := 1.250000
	139	[1554]	CALL     	R14 4 2 ; R14 := R14(R15,R16,R17)
	140	[1554]	MOVE     	R13 R14 ; R13 := R14
	141	[1555]	MUL      	R13 R13 K43 ; R13 := R13 * 80.000000
	142	[1557]	GETGLOBAL	R14 K2 ; R14 := 0xae91e43b
	143	[1557]	SELF     	R14 R14 K33 ; R15 := R14; R14 := R14[0x67bc869f]
	144	[1557]	MOVE     	R16 R7 ; R16 := R7
	145	[1557]	LOADK    	R17 := 5.000000
	146	[1557]	MOVE     	R18 R13 ; R18 := R13
	147	[1557]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	148	[1558]	GETGLOBAL	R14 K2 ; R14 := 0xae91e43b
	149	[1558]	SELF     	R14 R14 K33 ; R15 := R14; R14 := R14[0x67bc869f]
	150	[1558]	MOVE     	R16 R7 ; R16 := R7
	151	[1558]	LOADK    	R17 := 6.000000
	152	[1558]	MOVE     	R18 R13 ; R18 := R13
	153	[1558]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	154	[1559]	GETGLOBAL	R14 K44 ; R14 := 0x33bdd652
	155	[1559]	GETTABLE 	R14 R14 K45 ; R14 := R14[0x23d5322f]
	156	[1559]	GETUPVAL 	R15 U1 ; R15 := U1
	157	[1559]	NEWTABLE 	R16 0 5 ; R16 := {}
	158	[1559]	SETTABLE 	R16 K46 R8 ; R16["memberIndex"] := R8
	159	[1559]	SETTABLE 	R16 K47 R7 ; R16["clipName"] := R7
	160	[1559]	SETTABLE 	R16 K48 R1 ; R16["pos"] := R1
	161	[1559]	SETTABLE 	R16 K49 R3 ; R16["layer"] := R3
	162	[1559]	SETTABLE 	R16 K50 R11 ; R16["joinBtn"] := R11
	163	[1559]	CALL     	R14 3 1 ; R14(R15,R16)
	164	[1561]	GETGLOBAL	R14 K2 ; R14 := 0xae91e43b
	165	[1561]	SELF     	R14 R14 K35 ; R15 := R14; R14 := R14[0xaade900e]
	166	[1561]	MOVE     	R16 R7 ; R16 := R7
	167	[1561]	LOADK    	R17 := 59.000000
	168	[1561]	EQ       	0 R5 K51 ; if R5 ~= nil then PC := 171
	169	[1561]	JMP      	171 ; PC := 171
	170	[1561]	OP_LOADBOOL	R18 0 1 ; R18 := false; PC := 171
	171	[1561]	OP_LOADBOOL	R18 1 0 ; R18 := true
	172	[1561]	CALL     	R14 5 1 ; R14(R15,R16,R17,R18)
	173	[1562]	EQ       	1 R5 K51 ; if R5 == nil then PC := 205
	174	[1562]	JMP      	205 ; PC := 205
	175	[1563]	GETGLOBAL	R14 K2 ; R14 := 0xae91e43b
	176	[1563]	SELF     	R14 R14 K52 ; R15 := R14; R14 := R14[0xf64b7262]
	177	[1563]	MOVE     	R16 R7 ; R16 := R7
	178	[1563]	LOADK    	R17 K53 ; R17 := "Btn"
	179	[1563]	LOADK    	R18 := 85.000000
	180	[1563]	MOVE     	R19 R6 ; R19 := R6
	181	[1563]	CALL     	R14 6 1 ; R14(R15,R16,R17,R18,R19)
	182	[1564]	GETGLOBAL	R14 K2 ; R14 := 0xae91e43b
	183	[1564]	SELF     	R14 R14 K54 ; R15 := R14; R14 := R14[0x1e5b5cfe]
	184	[1564]	MOVE     	R16 R7 ; R16 := R7
	185	[1564]	LOADK    	R17 K55 ; R17 := ".Btn"
	186	[1564]	CONCAT   	R16 R16 R17 ; R16 := R16 .. R17
	187	[1564]	GETTABLE 	R17 R5 K56 ; R17 := R5["RollOver"]
	188	[1564]	GETTABLE 	R18 R5 K57 ; R18 := R5["RollOut"]
	189	[1564]	GETTABLE 	R19 R5 K58 ; R19 := R5["Select"]
	190	[1564]	LOADNIL  	R20 R20 ; R20 := nil
	191	[1564]	CALL     	R14 7 1 ; R14(R15,R16,R17,R18,R19,R20)
	192	[1565]	GETGLOBAL	R14 K2 ; R14 := 0xae91e43b
	193	[1565]	SELF     	R14 R14 K52 ; R15 := R14; R14 := R14[0xf64b7262]
	194	[1565]	MOVE     	R16 R7 ; R16 := R7
	195	[1565]	LOADK    	R17 K53 ; R17 := "Btn"
	196	[1565]	LOADK    	R18 := 12.000000
	197	[1565]	GETGLOBAL	R19 K2 ; R19 := 0xae91e43b
	198	[1565]	SELF     	R19 R19 K59 ; R20 := R19; R19 := R19[0x91a24e4b]
	199	[1565]	MOVE     	R21 R7 ; R21 := R7
	200	[1565]	LOADK    	R22 K30 ; R22 := ".Name"
	201	[1565]	CONCAT   	R21 R21 R22 ; R21 := R21 .. R22
	202	[1565]	LOADK    	R22 := 33.000000
	203	[1565]	CALL     	R19 4 0 ; R19,... := R19(R20,R21,R22)
	204	[1565]	CALL     	R14 0 1 ; R14(R15,...)
	205	[1568]	RETURN   	R7 2 ; return R7 
	206	[1569]	RETURN   	R0 1 ; return 

function #42 <?:1571,1593> (51 instructions, 204 bytes at 0000021114D78820)
1 param, 6 slots, 2 upvalues, 0 locals, 15 constants, 0 functions
	1	[1572]	GETTABLE 	R1 R0 K0 ; R1 := R0["nodeType"]
	2	[1572]	EQ       	1 R1 K2 ; if R1 == 3.000000 then PC := 5
	3	[1572]	JMP      	5 ; PC := 5
	4	[1573]	RETURN   	R0 1 ; return 
	5	[1576]	GETGLOBAL	R1 K3 ; R1 := _T
	6	[1576]	GETTABLE 	R1 R1 K4 ; R1 := R1["CachedHubLevelOverride"]
	7	[1576]	TEST     	R1 1 ; if R1 then PC := 12
	8	[1576]	JMP      	12 ; PC := 12
	9	[1577]	GETGLOBAL	R1 K3 ; R1 := _T
	10	[1577]	NEWTABLE 	R2 0 0 ; R2 := {}
	11	[1577]	SETTABLE 	R1 K4 R2 ; R1["CachedHubLevelOverride"] := R2
	12	[1580]	GETTABLE 	R1 R0 K5 ; R1 := R0["name"]
	13	[1580]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x6d604ba7]
	14	[1580]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[1581]	GETGLOBAL	R2 K3 ; R2 := _T
	16	[1581]	GETTABLE 	R2 R2 K4 ; R2 := R2["CachedHubLevelOverride"]
	17	[1581]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	18	[1581]	TEST     	R2 1 ; if R2 then PC := 30
	19	[1581]	JMP      	30 ; PC := 30
	20	[1583]	GETGLOBAL	R2 K3 ; R2 := _T
	21	[1583]	GETTABLE 	R2 R2 K4 ; R2 := R2["CachedHubLevelOverride"]
	22	[1583]	GETUPVAL 	R3 U0 ; R3 := U0
	23	[1583]	GETTABLE 	R3 R3 K7 ; R3 := R3[0x5e35d4d6]
	24	[1583]	CALL     	R3 1 2 ; R3 := R3()
	25	[1583]	SELF     	R3 R3 K8 ; R4 := R3; R3 := R3[0xc18bf6f0]
	26	[1583]	GETTABLE 	R5 R0 K5 ; R5 := R0["name"]
	27	[1583]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	28	[1583]	GETTABLE 	R3 R3 K9 ; R3 := R3["levelOverride"]
	29	[1583]	SETTABLE 	R2 R1 R3 ; R2[R1] := R3
	30	[1586]	GETGLOBAL	R2 K3 ; R2 := _T
	31	[1586]	GETTABLE 	R2 R2 K4 ; R2 := R2["CachedHubLevelOverride"]
	32	[1586]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	33	[1589]	GETGLOBAL	R3 K10 ; R3 := 0x7b998233
	34	[1589]	MOVE     	R4 R2 ; R4 := R2
	35	[1589]	CALL     	R3 2 2 ; R3 := R3(R4)
	36	[1589]	TEST     	R3 1 ; if R3 then PC := 48
	37	[1589]	JMP      	48 ; PC := 48
	38	[1590]	GETUPVAL 	R3 U1 ; R3 := U1
	39	[1590]	EQ       	0 R2 R3 ; if R2 ~= R3 then PC := 48
	40	[1590]	JMP      	48 ; PC := 48
	41	[1591]	GETGLOBAL	R3 K11 ; R3 := 0x7f5022cf
	42	[1591]	GETTABLE 	R3 R3 K12 ; R3 := R3[0xa5c556b9]
	43	[1591]	MOVE     	R4 R1 ; R4 := R1
	44	[1591]	LOADK    	R5 K13 ; R5 := "TennoCon"
	45	[1591]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	46	[1591]	EQ       	1 R3 K14 ; if R3 == nil then PC := 49
	47	[1591]	JMP      	49 ; PC := 49
	48	[1592]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 49
	49	[1592]	OP_LOADBOOL	R3 1 0 ; R3 := true
	50	[1592]	RETURN   	R3 2 ; return R3 
	51	[1593]	RETURN   	R0 1 ; return 

function #43 <?:1595,1646> (191 instructions, 764 bytes at 000002111E1138A0)
2 params, 13 slots, 5 upvalues, 0 locals, 45 constants, 0 functions
	1	[1597]	GETTABLE 	R2 R0 K0 ; R2 := R0["locationEnabled"]
	2	[1597]	TEST     	R2 0 ; if not R2 then PC := 7
	3	[1597]	JMP      	7 ; PC := 7
	4	[1597]	GETTABLE 	R2 R0 K1 ; R2 := R0["edgesLocked"]
	5	[1597]	TEST     	R2 0 ; if not R2 then PC := 9
	6	[1597]	JMP      	9 ; PC := 9
	7	[1598]	OP_LOADBOOL	R2 0 0 ; R2 := false
	8	[1598]	RETURN   	R2 2 ; return R2 
	9	[1601]	GETGLOBAL	R2 K2 ; R2 := mNewWarMode
	10	[1601]	TEST     	R2 0 ; if not R2 then PC := 17
	11	[1601]	JMP      	17 ; PC := 17
	12	[1601]	GETTABLE 	R2 R0 K3 ; R2 := R0["newWarMode"]
	13	[1601]	TEST     	R2 1 ; if R2 then PC := 17
	14	[1601]	JMP      	17 ; PC := 17
	15	[1602]	OP_LOADBOOL	R2 0 0 ; R2 := false
	16	[1602]	RETURN   	R2 2 ; return R2 
	17	[1605]	GETTABLE 	R2 R0 K4 ; R2 := R0["radialSector"]
	18	[1606]	GETGLOBAL	R3 K5 ; R3 := 0x64fb1586
	19	[1606]	GETTABLE 	R4 R2 K6 ; R4 := R2["name"]
	20	[1606]	CALL     	R3 2 2 ; R3 := R3(R4)
	21	[1607]	GETGLOBAL	R4 K7 ; R4 := _T
	22	[1607]	GETTABLE 	R4 R4 K8 ; R4 := R4["CachedSortieMissions"]
	23	[1607]	GETTABLE 	R4 R4 R3 ; R4 := R4[R3]
	24	[1607]	EQ       	1 R4 K9 ; if R4 == nil then PC := 31
	25	[1607]	JMP      	31 ; PC := 31
	26	[1607]	GETGLOBAL	R4 K7 ; R4 := _T
	27	[1607]	GETTABLE 	R4 R4 K8 ; R4 := R4["CachedSortieMissions"]
	28	[1607]	GETTABLE 	R4 R4 R3 ; R4 := R4[R3]
	29	[1607]	GETTABLE 	R4 R4 K10 ; R4 := R4["mShowInStarChart"]
	30	[1607]	JMP      	33 ; PC := 33
	31	[1607]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 32
	32	[1607]	OP_LOADBOOL	R4 1 0 ; R4 := true
	33	[1608]	GETGLOBAL	R5 K7 ; R5 := _T
	34	[1608]	GETTABLE 	R5 R5 K11 ; R5 := R5["CachedLiteSortieMissions"]
	35	[1608]	GETTABLE 	R5 R5 R3 ; R5 := R5[R3]
	36	[1608]	EQ       	1 R5 K9 ; if R5 == nil then PC := 43
	37	[1608]	JMP      	43 ; PC := 43
	38	[1608]	GETGLOBAL	R5 K7 ; R5 := _T
	39	[1608]	GETTABLE 	R5 R5 K11 ; R5 := R5["CachedLiteSortieMissions"]
	40	[1608]	GETTABLE 	R5 R5 R3 ; R5 := R5[R3]
	41	[1608]	GETTABLE 	R5 R5 K10 ; R5 := R5["mShowInStarChart"]
	42	[1608]	JMP      	45 ; PC := 45
	43	[1608]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 44
	44	[1608]	OP_LOADBOOL	R5 1 0 ; R5 := true
	45	[1611]	GETGLOBAL	R6 K7 ; R6 := _T
	46	[1611]	GETTABLE 	R6 R6 K12 ; R6 := R6["CachedAlerts"]
	47	[1611]	GETTABLE 	R6 R6 R3 ; R6 := R6[R3]
	48	[1611]	EQ       	1 R6 K9 ; if R6 == nil then PC := 56
	49	[1611]	JMP      	56 ; PC := 56
	50	[1611]	GETGLOBAL	R6 K7 ; R6 := _T
	51	[1611]	GETTABLE 	R6 R6 K12 ; R6 := R6["CachedAlerts"]
	52	[1611]	GETTABLE 	R6 R6 R3 ; R6 := R6[R3]
	53	[1611]	GETTABLE 	R6 R6 K13 ; R6 := R6["mUnlocked"]
	54	[1611]	TEST     	R6 1 ; if R6 then PC := 76
	55	[1611]	JMP      	76 ; PC := 76
	56	[1612]	GETGLOBAL	R6 K14 ; R6 := 0x0032441c
	57	[1612]	GETTABLE 	R6 R6 K15 ; R6 := R6["CachedGoalInfo"]
	58	[1612]	GETTABLE 	R6 R6 R3 ; R6 := R6[R3]
	59	[1612]	EQ       	0 R6 K9 ; if R6 ~= nil then PC := 75
	60	[1612]	JMP      	75 ; PC := 75
	61	[1613]	TESTSET  	R6 R4 1 ; if R4 then PC := 76 else R6 := R4 
	62	[1613]	JMP      	76 ; PC := 76
	63	[1614]	TESTSET  	R6 R5 1 ; if R5 then PC := 76 else R6 := R5 
	64	[1614]	JMP      	76 ; PC := 76
	65	[1615]	GETGLOBAL	R6 K7 ; R6 := _T
	66	[1615]	GETTABLE 	R6 R6 K16 ; R6 := R6["CachedActiveMissions"]
	67	[1615]	TEST     	R6 0 ; if not R6 then PC := 76
	68	[1615]	JMP      	76 ; PC := 76
	69	[1615]	GETGLOBAL	R6 K7 ; R6 := _T
	70	[1615]	GETTABLE 	R6 R6 K16 ; R6 := R6["CachedActiveMissions"]
	71	[1615]	GETTABLE 	R6 R6 R3 ; R6 := R6[R3]
	72	[1615]	EQ       	0 R6 K9 ; if R6 ~= nil then PC := 75
	73	[1615]	JMP      	75 ; PC := 75
	74	[1616]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 75
	75	[1616]	OP_LOADBOOL	R6 1 0 ; R6 := true
	76	[1619]	GETTABLE 	R7 R0 K17 ; R7 := R0["forceUnlock"]
	77	[1619]	TEST     	R7 1 ; if R7 then PC := 139
	78	[1619]	JMP      	139 ; PC := 139
	79	[1620]	GETTABLE 	R7 R2 K18 ; R7 := R2["nodeType"]
	80	[1620]	EQ       	1 R7 K20 ; if R7 == 2.000000 then PC := 138
	81	[1620]	JMP      	138 ; PC := 138
	82	[1621]	EQ       	0 R1 K9 ; if R1 ~= nil then PC := 89
	83	[1621]	JMP      	89 ; PC := 89
	84	[1621]	GETGLOBAL	R7 K21 ; R7 := 0x7b998233
	85	[1621]	GETTABLE 	R8 R2 K22 ; R8 := R2["keyChain"]
	86	[1621]	CALL     	R7 2 2 ; R7 := R7(R8)
	87	[1621]	TEST     	R7 0 ; if not R7 then PC := 138
	88	[1621]	JMP      	138 ; PC := 138
	89	[1622]	TEST     	R4 1 ; if R4 then PC := 99
	90	[1622]	JMP      	99 ; PC := 99
	91	[1622]	GETTABLE 	R7 R2 K23 ; R7 := R2["unlocked"]
	92	[1622]	TEST     	R7 0 ; if not R7 then PC := 99
	93	[1622]	JMP      	99 ; PC := 99
	94	[1622]	GETTABLE 	R7 R2 K24 ; R7 := R2["difficultyUnlocked"]
	95	[1622]	GETUPVAL 	R8 U0 ; R8 := U0
	96	[1622]	CALL     	R8 1 2 ; R8 := R8()
	97	[1622]	LE       	1 R8 R7 ; if R8 <= R7 then PC := 138
	98	[1622]	JMP      	138 ; PC := 138
	99	[1623]	TEST     	R6 0 ; if not R6 then PC := 110
	100	[1623]	JMP      	110 ; PC := 110
	101	[1623]	GETTABLE 	R7 R0 K4 ; R7 := R0["radialSector"]
	102	[1623]	GETTABLE 	R7 R7 K23 ; R7 := R7["unlocked"]
	103	[1623]	TEST     	R7 0 ; if not R7 then PC := 110
	104	[1623]	JMP      	110 ; PC := 110
	105	[1623]	GETTABLE 	R7 R2 K24 ; R7 := R2["difficultyUnlocked"]
	106	[1623]	GETUPVAL 	R8 U0 ; R8 := U0
	107	[1623]	CALL     	R8 1 2 ; R8 := R8()
	108	[1623]	LE       	1 R8 R7 ; if R8 <= R7 then PC := 138
	109	[1623]	JMP      	138 ; PC := 138
	110	[1624]	GETTABLE 	R7 R2 K25 ; R7 := R2["region"]
	111	[1624]	ADD      	R7 R7 K26 ; R7 := R7 + 1.000000
	112	[1624]	GETUPVAL 	R8 U1 ; R8 := U1
	113	[1624]	GETTABLE 	R8 R8 K27 ; R8 := R8["REGION_ID_DARK_SECTOR"]
	114	[1624]	EQ       	1 R7 R8 ; if R7 == R8 then PC := 138
	115	[1624]	JMP      	138 ; PC := 138
	116	[1625]	GETTABLE 	R7 R2 K6 ; R7 := R2["name"]
	117	[1625]	GETUPVAL 	R8 U2 ; R8 := U2
	118	[1625]	GETTABLE 	R8 R8 K28 ; R8 := R8["PRIME_VAULT_TRADER_LOCATION"]
	119	[1625]	EQ       	0 R7 R8 ; if R7 ~= R8 then PC := 126
	120	[1625]	JMP      	126 ; PC := 126
	121	[1625]	GETGLOBAL	R7 K29 ; R7 := 0x25d99d89
	122	[1625]	SELF     	R7 R7 K30 ; R8 := R7; R7 := R7[0xbd6729ff]
	123	[1625]	CALL     	R7 2 2 ; R7 := R7(R8)
	124	[1625]	LT       	1 K31 R7 ; if 0.000000 < R7 then PC := 138
	125	[1625]	JMP      	138 ; PC := 138
	126	[1626]	GETGLOBAL	R7 K14 ; R7 := 0x0032441c
	127	[1626]	GETTABLE 	R7 R7 K32 ; R7 := R7["StalkerMode"]
	128	[1626]	TEST     	R7 1 ; if R7 then PC := 139
	129	[1626]	JMP      	139 ; PC := 139
	130	[1627]	GETGLOBAL	R7 K33 ; R7 := mDebugUnlockAllMissions
	131	[1627]	TEST     	R7 0 ; if not R7 then PC := 139
	132	[1627]	JMP      	139 ; PC := 139
	133	[1627]	GETUPVAL 	R7 U0 ; R7 := U0
	134	[1627]	CALL     	R7 1 2 ; R7 := R7()
	135	[1627]	LE       	1 K31 R7 ; if 0.000000 <= R7 then PC := 138
	136	[1627]	JMP      	138 ; PC := 138
	137	[1628]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 138
	138	[1628]	OP_LOADBOOL	R7 1 0 ; R7 := true
	139	[1630]	GETGLOBAL	R8 K34 ; R8 := 0xbe190284
	140	[1631]	GETGLOBAL	R9 K5 ; R9 := 0x64fb1586
	141	[1631]	GETTABLE 	R10 R2 K6 ; R10 := R2["name"]
	142	[1631]	CALL     	R9 2 2 ; R9 := R9(R10)
	143	[1632]	SELF     	R10 R8 K35 ; R11 := R8; R10 := R8[0xf2deaf69]
	144	[1632]	GETGLOBAL	R12 K36 ; R12 := gLotusHubGameRulesType
	145	[1632]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	146	[1632]	TEST     	R10 0 ; if not R10 then PC := 157
	147	[1632]	JMP      	157 ; PC := 157
	148	[1632]	GETGLOBAL	R10 K5 ; R10 := 0x64fb1586
	149	[1632]	GETGLOBAL	R11 K34 ; R11 := 0xbe190284
	150	[1632]	SELF     	R11 R11 K37 ; R12 := R11; R11 := R11[0xef893aec]
	151	[1632]	CALL     	R11 2 2 ; R11 := R11(R12)
	152	[1632]	GETTABLE 	R11 R11 K38 ; R11 := R11["location"]
	153	[1632]	CALL     	R10 2 2 ; R10 := R10(R11)
	154	[1632]	EQ       	0 R9 R10 ; if R9 ~= R10 then PC := 157
	155	[1632]	JMP      	157 ; PC := 157
	156	[1633]	OP_LOADBOOL	R7 0 0 ; R7 := false
	157	[1636]	GETGLOBAL	R10 K39 ; R10 := mRailJack
	158	[1636]	GETTABLE 	R10 R10 K40 ; R10 := R10["Active"]
	159	[1636]	TEST     	R10 0 ; if not R10 then PC := 175
	160	[1636]	JMP      	175 ; PC := 175
	161	[1636]	GETTABLE 	R10 R2 K41 ; R10 := R2["missionTag"]
	162	[1636]	GETUPVAL 	R11 U2 ; R11 := U2
	163	[1636]	GETTABLE 	R11 R11 K42 ; R11 := R11["SQUAD_LINK_EVENT"]
	164	[1636]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 175
	165	[1636]	JMP      	175 ; PC := 175
	166	[1636]	GETGLOBAL	R10 K14 ; R10 := 0x0032441c
	167	[1636]	GETTABLE 	R10 R10 K15 ; R10 := R10["CachedGoalInfo"]
	168	[1636]	GETTABLE 	R10 R10 R3 ; R10 := R10[R3]
	169	[1636]	TEST     	R10 1 ; if R10 then PC := 174
	170	[1636]	JMP      	174 ; PC := 174
	171	[1636]	GETUPVAL 	R10 U3 ; R10 := U3
	172	[1636]	TEST     	R10 0 ; if not R10 then PC := 175
	173	[1636]	JMP      	175 ; PC := 175
	174	[1637]	OP_LOADBOOL	R7 1 0 ; R7 := true
	175	[1640]	TEST     	R7 1 ; if R7 then PC := 190
	176	[1640]	JMP      	190 ; PC := 190
	177	[1640]	GETTABLE 	R10 R2 K18 ; R10 := R2["nodeType"]
	178	[1640]	EQ       	0 R10 K43 ; if R10 ~= 3.000000 then PC := 190
	179	[1640]	JMP      	190 ; PC := 190
	180	[1640]	GETGLOBAL	R10 K39 ; R10 := mRailJack
	181	[1640]	GETTABLE 	R10 R10 K44 ; R10 := R10["CanHost"]
	182	[1640]	TEST     	R10 0 ; if not R10 then PC := 190
	183	[1640]	JMP      	190 ; PC := 190
	184	[1640]	GETUPVAL 	R10 U4 ; R10 := U4
	185	[1640]	MOVE     	R11 R2 ; R11 := R2
	186	[1640]	CALL     	R10 2 2 ; R10 := R10(R11)
	187	[1640]	TEST     	R10 0 ; if not R10 then PC := 190
	188	[1640]	JMP      	190 ; PC := 190
	189	[1642]	OP_LOADBOOL	R7 1 0 ; R7 := true
	190	[1645]	RETURN   	R7 2 ; return R7 
	191	[1646]	RETURN   	R0 1 ; return 

function #44 <?:1648,1699> (319 instructions, 1276 bytes at 0000021120DB81B0)
1 param, 7 slots, 4 upvalues, 0 locals, 64 constants, 0 functions
	1	[1649]	GETGLOBAL	R1 K0 ; R1 := 0x64fb1586
	2	[1649]	GETTABLE 	R2 R0 K1 ; R2 := R0["name"]
	3	[1649]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[1650]	GETTABLE 	R2 R0 K2 ; R2 := R0["locked"]
	5	[1650]	TEST     	R2 1 ; if R2 then PC := 13
	6	[1650]	JMP      	13 ; PC := 13
	7	[1650]	GETTABLE 	R2 R0 K3 ; R2 := R0["completed"]
	8	[1650]	TEST     	R2 0 ; if not R2 then PC := 13
	9	[1650]	JMP      	13 ; PC := 13
	10	[1650]	GETTABLE 	R2 R0 K4 ; R2 := R0["isShortcut"]
	11	[1650]	TEST     	R2 0 ; if not R2 then PC := 16
	12	[1650]	JMP      	16 ; PC := 16
	13	[1651]	LOADNIL  	R2 R2 ; R2 := nil
	14	[1651]	RETURN   	R2 2 ; return R2 
	15	[1651]	JMP      	317 ; PC := 317
	16	[1652]	GETTABLE 	R2 R0 K5 ; R2 := R0["newWarMode"]
	17	[1652]	TEST     	R2 0 ; if not R2 then PC := 25
	18	[1652]	JMP      	25 ; PC := 25
	19	[1653]	GETGLOBAL	R2 K6 ; R2 := 0xf31cfb9b
	20	[1653]	LOADK    	R3 := 128.000000
	21	[1653]	LOADK    	R4 := 40.000000
	22	[1653]	LOADK    	R5 := 14.000000
	23	[1653]	RETURN   	R2 5 ; return R2, R3, R4, R5 
	24	[1653]	JMP      	317 ; PC := 317
	25	[1654]	GETTABLE 	R2 R0 K7 ; R2 := R0["IsQuest"]
	26	[1654]	TEST     	R2 0 ; if not R2 then PC := 32
	27	[1654]	JMP      	32 ; PC := 32
	28	[1655]	GETGLOBAL	R2 K8 ; R2 := 0x0032441c
	29	[1655]	GETTABLE 	R2 R2 K9 ; R2 := R2["UITexture_Story"]
	30	[1655]	RETURN   	R2 2 ; return R2 
	31	[1655]	JMP      	317 ; PC := 317
	32	[1656]	GETTABLE 	R2 R0 K10 ; R2 := R0["IsHomeNode"]
	33	[1656]	TEST     	R2 0 ; if not R2 then PC := 41
	34	[1656]	JMP      	41 ; PC := 41
	35	[1657]	GETGLOBAL	R2 K11 ; R2 := 0x656b8788
	36	[1657]	LOADK    	R3 := 48.000000
	37	[1657]	LOADK    	R4 := 0.000000
	38	[1657]	LOADK    	R5 := -5.000000
	39	[1657]	RETURN   	R2 5 ; return R2, R3, R4, R5 
	40	[1657]	JMP      	317 ; PC := 317
	41	[1658]	EQ       	0 R1 K12 ; if R1 ~= "Story" then PC := 47
	42	[1658]	JMP      	47 ; PC := 47
	43	[1659]	GETGLOBAL	R2 K8 ; R2 := 0x0032441c
	44	[1659]	GETTABLE 	R2 R2 K9 ; R2 := R2["UITexture_Story"]
	45	[1659]	RETURN   	R2 2 ; return R2 
	46	[1659]	JMP      	317 ; PC := 317
	47	[1660]	GETGLOBAL	R2 K13 ; R2 := _T
	48	[1660]	GETTABLE 	R2 R2 K14 ; R2 := R2["CachedAlerts"]
	49	[1660]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	50	[1660]	TEST     	R2 0 ; if not R2 then PC := 77
	51	[1660]	JMP      	77 ; PC := 77
	52	[1660]	GETGLOBAL	R2 K13 ; R2 := _T
	53	[1660]	GETTABLE 	R2 R2 K14 ; R2 := R2["CachedAlerts"]
	54	[1660]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	55	[1660]	GETTABLE 	R2 R2 K15 ; R2 := R2["mVisible"]
	56	[1660]	TEST     	R2 0 ; if not R2 then PC := 77
	57	[1660]	JMP      	77 ; PC := 77
	58	[1661]	GETUPVAL 	R2 U0 ; R2 := U0
	59	[1661]	GETTABLE 	R2 R2 K16 ; R2 := R2[0x06d055f9]
	60	[1661]	GETGLOBAL	R3 K17 ; R3 := 0x7b998233
	61	[1661]	GETGLOBAL	R4 K13 ; R4 := _T
	62	[1661]	GETTABLE 	R4 R4 K14 ; R4 := R4["CachedAlerts"]
	63	[1661]	GETTABLE 	R4 R4 R1 ; R4 := R4[R1]
	64	[1661]	GETTABLE 	R4 R4 K18 ; R4 := R4["mAlertInfo"]
	65	[1661]	GETTABLE 	R4 R4 K19 ; R4 := R4["mIcon"]
	66	[1661]	CALL     	R3 2 2 ; R3 := R3(R4)
	67	[1661]	GETGLOBAL	R4 K8 ; R4 := 0x0032441c
	68	[1661]	GETTABLE 	R4 R4 K20 ; R4 := R4["UITexture_Alert"]
	69	[1661]	GETGLOBAL	R5 K13 ; R5 := _T
	70	[1661]	GETTABLE 	R5 R5 K14 ; R5 := R5["CachedAlerts"]
	71	[1661]	GETTABLE 	R5 R5 R1 ; R5 := R5[R1]
	72	[1661]	GETTABLE 	R5 R5 K18 ; R5 := R5["mAlertInfo"]
	73	[1661]	GETTABLE 	R5 R5 K19 ; R5 := R5["mIcon"]
	74	[1661]	TAILCALL 	R2 4 0 ; R2,... := R2(R3,R4,R5)
	75	[1661]	RETURN   	R2 0 ; return R2,... 
	76	[1661]	JMP      	317 ; PC := 317
	77	[1662]	GETGLOBAL	R2 K8 ; R2 := 0x0032441c
	78	[1662]	GETTABLE 	R2 R2 K21 ; R2 := R2["CachedGoalInfo"]
	79	[1662]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	80	[1662]	TEST     	R2 0 ; if not R2 then PC := 96
	81	[1662]	JMP      	96 ; PC := 96
	82	[1662]	GETGLOBAL	R2 K8 ; R2 := 0x0032441c
	83	[1662]	GETTABLE 	R2 R2 K21 ; R2 := R2["CachedGoalInfo"]
	84	[1662]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	85	[1662]	GETTABLE 	R2 R2 K22 ; R2 := R2["mTag"]
	86	[1662]	GETUPVAL 	R3 U1 ; R3 := U1
	87	[1662]	GETTABLE 	R3 R3 K23 ; R3 := R3["PRIME_VAULT_TRADER_GOAL"]
	88	[1662]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 96
	89	[1662]	JMP      	96 ; PC := 96
	90	[1663]	GETUPVAL 	R2 U2 ; R2 := U2
	91	[1663]	GETTABLE 	R2 R2 K24 ; R2 := R2[0x7d7875a9]
	92	[1663]	MOVE     	R3 R1 ; R3 := R1
	93	[1663]	TAILCALL 	R2 2 0 ; R2,... := R2(R3)
	94	[1663]	RETURN   	R2 0 ; return R2,... 
	95	[1663]	JMP      	317 ; PC := 317
	96	[1664]	GETGLOBAL	R2 K13 ; R2 := _T
	97	[1664]	GETTABLE 	R2 R2 K25 ; R2 := R2["CachedGhostTowerMissions"]
	98	[1664]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	99	[1664]	EQ       	1 R2 K26 ; if R2 == nil then PC := 131
	100	[1664]	JMP      	131 ; PC := 131
	101	[1664]	GETGLOBAL	R2 K13 ; R2 := _T
	102	[1664]	GETTABLE 	R2 R2 K25 ; R2 := R2["CachedGhostTowerMissions"]
	103	[1664]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	104	[1664]	GETTABLE 	R2 R2 K27 ; R2 := R2["mUnlocked"]
	105	[1664]	TEST     	R2 0 ; if not R2 then PC := 131
	106	[1664]	JMP      	131 ; PC := 131
	107	[1664]	GETGLOBAL	R2 K13 ; R2 := _T
	108	[1664]	GETTABLE 	R2 R2 K25 ; R2 := R2["CachedGhostTowerMissions"]
	109	[1664]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	110	[1664]	GETTABLE 	R2 R2 K28 ; R2 := R2["mShowInStarChart"]
	111	[1664]	TEST     	R2 0 ; if not R2 then PC := 131
	112	[1664]	JMP      	131 ; PC := 131
	113	[1665]	GETGLOBAL	R2 K13 ; R2 := _T
	114	[1665]	GETTABLE 	R2 R2 K25 ; R2 := R2["CachedGhostTowerMissions"]
	115	[1665]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	116	[1665]	GETTABLE 	R2 R2 K29 ; R2 := R2["mMissionInfo"]
	117	[1665]	GETTABLE 	R2 R2 K30 ; R2 := R2["minEnemyLevel"]
	118	[1665]	LE       	0 K31 R2 ; if 80.000000 > R2 then PC := 125
	119	[1665]	JMP      	125 ; PC := 125
	120	[1666]	GETGLOBAL	R2 K8 ; R2 := 0x0032441c
	121	[1666]	GETTABLE 	R2 R2 K32 ; R2 := R2["UITextures_GhostTowerVariant"]
	122	[1666]	LOADK    	R3 := 60.000000
	123	[1666]	LOADK    	R4 := 20.000000
	124	[1666]	RETURN   	R2 4 ; return R2, R3, R4 
	125	[1668]	GETGLOBAL	R2 K8 ; R2 := 0x0032441c
	126	[1668]	GETTABLE 	R2 R2 K33 ; R2 := R2["UITextures_GhostTower"]
	127	[1668]	LOADNIL  	R3 R3 ; R3 := nil
	128	[1668]	LOADK    	R4 := 90.000000
	129	[1668]	RETURN   	R2 4 ; return R2, R3, R4 
	130	[1668]	JMP      	317 ; PC := 317
	131	[1669]	GETGLOBAL	R2 K13 ; R2 := _T
	132	[1669]	GETTABLE 	R2 R2 K34 ; R2 := R2["CachedSkullNodes"]
	133	[1669]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	134	[1669]	EQ       	1 R2 K26 ; if R2 == nil then PC := 140
	135	[1669]	JMP      	140 ; PC := 140
	136	[1670]	GETGLOBAL	R2 K8 ; R2 := 0x0032441c
	137	[1670]	GETTABLE 	R2 R2 K35 ; R2 := R2["UITexture_Skull"]
	138	[1670]	RETURN   	R2 2 ; return R2 
	139	[1670]	JMP      	317 ; PC := 317
	140	[1671]	GETGLOBAL	R2 K13 ; R2 := _T
	141	[1671]	GETTABLE 	R2 R2 K36 ; R2 := R2["CachedSortieMissions"]
	142	[1671]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	143	[1671]	TEST     	R2 0 ; if not R2 then PC := 165
	144	[1671]	JMP      	165 ; PC := 165
	145	[1671]	GETGLOBAL	R2 K13 ; R2 := _T
	146	[1671]	GETTABLE 	R2 R2 K36 ; R2 := R2["CachedSortieMissions"]
	147	[1671]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	148	[1671]	GETTABLE 	R2 R2 K28 ; R2 := R2["mShowInStarChart"]
	149	[1671]	TEST     	R2 0 ; if not R2 then PC := 165
	150	[1671]	JMP      	165 ; PC := 165
	151	[1671]	GETGLOBAL	R2 K17 ; R2 := 0x7b998233
	152	[1671]	GETGLOBAL	R3 K13 ; R3 := _T
	153	[1671]	GETTABLE 	R3 R3 K36 ; R3 := R3["CachedSortieMissions"]
	154	[1671]	GETTABLE 	R3 R3 R1 ; R3 := R3[R1]
	155	[1671]	GETTABLE 	R3 R3 K19 ; R3 := R3["mIcon"]
	156	[1671]	CALL     	R2 2 2 ; R2 := R2(R3)
	157	[1671]	TEST     	R2 1 ; if R2 then PC := 165
	158	[1671]	JMP      	165 ; PC := 165
	159	[1672]	GETGLOBAL	R2 K13 ; R2 := _T
	160	[1672]	GETTABLE 	R2 R2 K36 ; R2 := R2["CachedSortieMissions"]
	161	[1672]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	162	[1672]	GETTABLE 	R2 R2 K19 ; R2 := R2["mIcon"]
	163	[1672]	RETURN   	R2 2 ; return R2 
	164	[1672]	JMP      	317 ; PC := 317
	165	[1673]	GETGLOBAL	R2 K13 ; R2 := _T
	166	[1673]	GETTABLE 	R2 R2 K37 ; R2 := R2["CachedSyndicateMissions"]
	167	[1673]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	168	[1673]	TEST     	R2 0 ; if not R2 then PC := 182
	169	[1673]	JMP      	182 ; PC := 182
	170	[1673]	GETGLOBAL	R2 K13 ; R2 := _T
	171	[1673]	GETTABLE 	R2 R2 K37 ; R2 := R2["CachedSyndicateMissions"]
	172	[1673]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	173	[1673]	GETTABLE 	R2 R2 K15 ; R2 := R2["mVisible"]
	174	[1673]	TEST     	R2 0 ; if not R2 then PC := 182
	175	[1673]	JMP      	182 ; PC := 182
	176	[1674]	GETGLOBAL	R2 K13 ; R2 := _T
	177	[1674]	GETTABLE 	R2 R2 K37 ; R2 := R2["CachedSyndicateMissions"]
	178	[1674]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	179	[1674]	GETTABLE 	R2 R2 K38 ; R2 := R2["mMapIcon"]
	180	[1674]	RETURN   	R2 2 ; return R2 
	181	[1674]	JMP      	317 ; PC := 317
	182	[1675]	GETGLOBAL	R2 K13 ; R2 := _T
	183	[1675]	GETTABLE 	R2 R2 K39 ; R2 := R2["CachedInvasionInfo"]
	184	[1675]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	185	[1675]	TEST     	R2 0 ; if not R2 then PC := 204
	186	[1675]	JMP      	204 ; PC := 204
	187	[1676]	GETUPVAL 	R2 U2 ; R2 := U2
	188	[1676]	GETTABLE 	R2 R2 K40 ; R2 := R2[0x06d35c99]
	189	[1676]	LOADNIL  	R3 R3 ; R3 := nil
	190	[1676]	CALL     	R2 2 2 ; R2 := R2(R3)
	191	[1677]	TEST     	R2 0 ; if not R2 then PC := 200
	192	[1677]	JMP      	200 ; PC := 200
	193	[1677]	GETTABLE 	R3 R2 K41 ; R3 := R2["mDefenderMissionInfo"]
	194	[1677]	GETTABLE 	R3 R3 K42 ; R3 := R3["missionType"]
	195	[1677]	EQ       	0 R3 K44 ; if R3 ~= 0.000000 then PC := 200
	196	[1677]	JMP      	200 ; PC := 200
	197	[1679]	GETGLOBAL	R3 K8 ; R3 := 0x0032441c
	198	[1679]	GETTABLE 	R3 R3 K45 ; R3 := R3["UITexture_BossNode"]
	199	[1679]	RETURN   	R3 2 ; return R3 
	200	[1681]	GETGLOBAL	R3 K8 ; R3 := 0x0032441c
	201	[1681]	GETTABLE 	R3 R3 K46 ; R3 := R3["UITexture_Invasion"]
	202	[1681]	RETURN   	R3 2 ; return R3 
	203	[1681]	JMP      	317 ; PC := 317
	204	[1682]	GETGLOBAL	R3 K13 ; R3 := _T
	205	[1682]	GETTABLE 	R3 R3 K47 ; R3 := R3["CachedActiveMissions"]
	206	[1682]	TEST     	R3 0 ; if not R3 then PC := 227
	207	[1682]	JMP      	227 ; PC := 227
	208	[1682]	GETGLOBAL	R3 K13 ; R3 := _T
	209	[1682]	GETTABLE 	R3 R3 K47 ; R3 := R3["CachedActiveMissions"]
	210	[1682]	GETTABLE 	R3 R3 R1 ; R3 := R3[R1]
	211	[1682]	TEST     	R3 0 ; if not R3 then PC := 227
	212	[1682]	JMP      	227 ; PC := 227
	213	[1682]	GETGLOBAL	R3 K17 ; R3 := 0x7b998233
	214	[1682]	GETGLOBAL	R4 K13 ; R4 := _T
	215	[1682]	GETTABLE 	R4 R4 K47 ; R4 := R4["CachedActiveMissions"]
	216	[1682]	GETTABLE 	R4 R4 R1 ; R4 := R4[R1]
	217	[1682]	GETTABLE 	R4 R4 K19 ; R4 := R4["mIcon"]
	218	[1682]	CALL     	R3 2 2 ; R3 := R3(R4)
	219	[1682]	TEST     	R3 1 ; if R3 then PC := 227
	220	[1682]	JMP      	227 ; PC := 227
	221	[1683]	GETGLOBAL	R3 K13 ; R3 := _T
	222	[1683]	GETTABLE 	R3 R3 K47 ; R3 := R3["CachedActiveMissions"]
	223	[1683]	GETTABLE 	R3 R3 R1 ; R3 := R3[R1]
	224	[1683]	GETTABLE 	R3 R3 K19 ; R3 := R3["mIcon"]
	225	[1683]	RETURN   	R3 2 ; return R3 
	226	[1683]	JMP      	317 ; PC := 317
	227	[1684]	GETGLOBAL	R3 K13 ; R3 := _T
	228	[1684]	GETTABLE 	R3 R3 K48 ; R3 := R3["CachedEliteAlertMissions"]
	229	[1684]	GETTABLE 	R3 R3 R1 ; R3 := R3[R1]
	230	[1684]	EQ       	1 R3 K26 ; if R3 == nil then PC := 248
	231	[1684]	JMP      	248 ; PC := 248
	232	[1684]	GETGLOBAL	R3 K13 ; R3 := _T
	233	[1684]	GETTABLE 	R3 R3 K48 ; R3 := R3["CachedEliteAlertMissions"]
	234	[1684]	GETTABLE 	R3 R3 R1 ; R3 := R3[R1]
	235	[1684]	GETTABLE 	R3 R3 K27 ; R3 := R3["mUnlocked"]
	236	[1684]	TEST     	R3 0 ; if not R3 then PC := 248
	237	[1684]	JMP      	248 ; PC := 248
	238	[1684]	GETGLOBAL	R3 K13 ; R3 := _T
	239	[1684]	GETTABLE 	R3 R3 K48 ; R3 := R3["CachedEliteAlertMissions"]
	240	[1684]	GETTABLE 	R3 R3 R1 ; R3 := R3[R1]
	241	[1684]	GETTABLE 	R3 R3 K28 ; R3 := R3["mShowInStarChart"]
	242	[1684]	TEST     	R3 0 ; if not R3 then PC := 248
	243	[1684]	JMP      	248 ; PC := 248
	244	[1685]	GETGLOBAL	R3 K8 ; R3 := 0x0032441c
	245	[1685]	GETTABLE 	R3 R3 K49 ; R3 := R3["UITexture_EliteAlert"]
	246	[1685]	RETURN   	R3 2 ; return R3 
	247	[1685]	JMP      	317 ; PC := 317
	248	[1686]	GETTABLE 	R3 R0 K50 ; R3 := R0["radialSector"]
	249	[1686]	GETTABLE 	R3 R3 K51 ; R3 := R3["mission"]
	250	[1686]	GETTABLE 	R3 R3 K42 ; R3 := R3["missionType"]
	251	[1686]	EQ       	0 R3 K44 ; if R3 ~= 0.000000 then PC := 257
	252	[1686]	JMP      	257 ; PC := 257
	253	[1687]	GETGLOBAL	R3 K8 ; R3 := 0x0032441c
	254	[1687]	GETTABLE 	R3 R3 K45 ; R3 := R3["UITexture_BossNode"]
	255	[1687]	RETURN   	R3 2 ; return R3 
	256	[1687]	JMP      	317 ; PC := 317
	257	[1688]	GETTABLE 	R3 R0 K50 ; R3 := R0["radialSector"]
	258	[1688]	GETTABLE 	R3 R3 K52 ; R3 := R3["nodeType"]
	259	[1688]	EQ       	0 R3 K53 ; if R3 ~= 2.000000 then PC := 265
	260	[1688]	JMP      	265 ; PC := 265
	261	[1689]	GETGLOBAL	R3 K8 ; R3 := 0x0032441c
	262	[1689]	GETTABLE 	R3 R3 K54 ; R3 := R3["UITexture_Pvp"]
	263	[1689]	RETURN   	R3 2 ; return R3 
	264	[1689]	JMP      	317 ; PC := 317
	265	[1690]	GETTABLE 	R3 R0 K50 ; R3 := R0["radialSector"]
	266	[1690]	GETTABLE 	R3 R3 K52 ; R3 := R3["nodeType"]
	267	[1690]	EQ       	0 R3 K55 ; if R3 ~= 4.000000 then PC := 273
	268	[1690]	JMP      	273 ; PC := 273
	269	[1691]	GETGLOBAL	R3 K8 ; R3 := 0x0032441c
	270	[1691]	GETTABLE 	R3 R3 K56 ; R3 := R3["UITexture_DefaultClan"]
	271	[1691]	RETURN   	R3 2 ; return R3 
	272	[1691]	JMP      	317 ; PC := 317
	273	[1692]	GETGLOBAL	R3 K13 ; R3 := _T
	274	[1692]	GETTABLE 	R3 R3 K57 ; R3 := R3["CachedHardModeDailyMissions"]
	275	[1692]	TEST     	R3 0 ; if not R3 then PC := 296
	276	[1692]	JMP      	296 ; PC := 296
	277	[1692]	GETGLOBAL	R3 K13 ; R3 := _T
	278	[1692]	GETTABLE 	R3 R3 K57 ; R3 := R3["CachedHardModeDailyMissions"]
	279	[1692]	GETTABLE 	R3 R3 R1 ; R3 := R3[R1]
	280	[1692]	TEST     	R3 0 ; if not R3 then PC := 296
	281	[1692]	JMP      	296 ; PC := 296
	282	[1692]	GETGLOBAL	R3 K13 ; R3 := _T
	283	[1692]	GETTABLE 	R3 R3 K57 ; R3 := R3["CachedHardModeDailyMissions"]
	284	[1692]	GETTABLE 	R3 R3 R1 ; R3 := R3[R1]
	285	[1692]	GETTABLE 	R3 R3 K58 ; R3 := R3["isVisible"]
	286	[1692]	TEST     	R3 0 ; if not R3 then PC := 296
	287	[1692]	JMP      	296 ; PC := 296
	288	[1692]	GETUPVAL 	R3 U3 ; R3 := U3
	289	[1692]	GETTABLE 	R3 R3 K59 ; R3 := R3["CurrentTier"]
	290	[1692]	LT       	0 K44 R3 ; if 0.000000 >= R3 then PC := 296
	291	[1692]	JMP      	296 ; PC := 296
	292	[1693]	GETGLOBAL	R3 K8 ; R3 := 0x0032441c
	293	[1693]	GETTABLE 	R3 R3 K20 ; R3 := R3["UITexture_Alert"]
	294	[1693]	RETURN   	R3 2 ; return R3 
	295	[1693]	JMP      	317 ; PC := 317
	296	[1694]	GETTABLE 	R3 R0 K50 ; R3 := R0["radialSector"]
	297	[1694]	GETTABLE 	R3 R3 K51 ; R3 := R3["mission"]
	298	[1694]	GETTABLE 	R3 R3 K42 ; R3 := R3["missionType"]
	299	[1694]	EQ       	0 R3 K60 ; if R3 ~= 28.000000 then PC := 317
	300	[1694]	JMP      	317 ; PC := 317
	301	[1695]	GETUPVAL 	R3 U0 ; R3 := U0
	302	[1695]	GETTABLE 	R3 R3 K16 ; R3 := R3[0x06d055f9]
	303	[1695]	GETTABLE 	R4 R0 K1 ; R4 := R0["name"]
	304	[1695]	GETUPVAL 	R5 U2 ; R5 := U2
	305	[1695]	GETTABLE 	R5 R5 K61 ; R5 := R5["APARTMENT_NODE_TAG"]
	306	[1695]	EQ       	1 R4 R5 ; if R4 == R5 then PC := 309
	307	[1695]	JMP      	309 ; PC := 309
	308	[1695]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 309
	309	[1695]	OP_LOADBOOL	R4 1 0 ; R4 := true
	310	[1695]	GETGLOBAL	R5 K62 ; R5 := 0x084c01b7
	311	[1695]	GETGLOBAL	R6 K63 ; R6 := 0xd8d5ca36
	312	[1695]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	313	[1696]	MOVE     	R4 R3 ; R4 := R3
	314	[1696]	LOADK    	R5 := 56.000000
	315	[1696]	LOADK    	R6 := 2.000000
	316	[1696]	RETURN   	R4 4 ; return R4, R5, R6 
	317	[1698]	LOADNIL  	R4 R4 ; R4 := nil
	318	[1698]	RETURN   	R4 2 ; return R4 
	319	[1699]	RETURN   	R0 1 ; return 

function #45 <?:1701,1846> (366 instructions, 1464 bytes at 0000021118BCA630)
0 params, 46 slots, 10 upvalues, 0 locals, 74 constants, 0 functions
	1	[1702]	GETGLOBAL	R0 K0 ; R0 := mSuperRegions
	2	[1702]	EQ       	1 R0 K1 ; if R0 == nil then PC := 19
	3	[1702]	JMP      	19 ; PC := 19
	4	[1703]	GETGLOBAL	R0 K2 ; R0 := 0xc8802016
	5	[1703]	GETGLOBAL	R1 K0 ; R1 := mSuperRegions
	6	[1703]	CALL     	R0 2 4 ; R0,R1,R2 := R0(R1)
	7	[1703]	JMP      	17 ; PC := 17
	8	[1704]	GETGLOBAL	R5 K3 ; R5 := 0x7b998233
	9	[1704]	GETTABLE 	R6 R4 K4 ; R6 := R4["instance"]
	10	[1704]	CALL     	R5 2 2 ; R5 := R5(R6)
	11	[1704]	TEST     	R5 1 ; if R5 then PC := 17
	12	[1704]	JMP      	17 ; PC := 17
	13	[1705]	GETGLOBAL	R5 K5 ; R5 := 0x1211d00f
	14	[1705]	SELF     	R5 R5 K6 ; R6 := R5; R5 := R5[0x59c96e77]
	15	[1705]	GETTABLE 	R7 R4 K4 ; R7 := R4["instance"]
	16	[1705]	CALL     	R5 3 1 ; R5(R6,R7)
	17	[1703]	TFORLOOP 	R0 2 ; R3,R4 := R0(R1,R2); if R3 ~= nil then begin PC = 8; R2 := R3 end
	18	[1706]	JMP      	8 ; PC := 8
	19	[1710]	LOADK    	R5 := 1.000000
	20	[1710]	GETGLOBAL	R6 K0 ; R6 := mSuperRegions
	21	[1710]	LEN      	R6 R6 ; R6 := # R6
	22	[1710]	LOADK    	R7 := 1.000000
	23	[1710]	FORPREP  	R5 61 ; R5 -= R7; PC := 61
	24	[1711]	GETGLOBAL	R9 K0 ; R9 := mSuperRegions
	25	[1711]	GETTABLE 	R9 R9 R8 ; R9 := R9[R8]
	26	[1712]	GETGLOBAL	R10 K7 ; R10 := 0x88efc25e
	27	[1712]	GETTABLE 	R11 R9 K8 ; R11 := R9["deco"]
	28	[1712]	CALL     	R10 2 2 ; R10 := R10(R11)
	29	[1713]	GETGLOBAL	R11 K9 ; R11 := 0xa421af95
	30	[1713]	GETTABLE 	R12 R9 K10 ; R12 := R9["pos"]
	31	[1713]	GETTABLE 	R12 R12 K11 ; R12 := R12["x"]
	32	[1713]	GETTABLE 	R13 R9 K10 ; R13 := R9["pos"]
	33	[1713]	GETTABLE 	R13 R13 K12 ; R13 := R13["y"]
	34	[1713]	GETTABLE 	R14 R9 K10 ; R14 := R9["pos"]
	35	[1713]	GETTABLE 	R14 R14 K13 ; R14 := R14["z"]
	36	[1713]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	37	[1715]	GETUPVAL 	R12 U0 ; R12 := U0
	38	[1715]	MOVE     	R13 R11 ; R13 := R11
	39	[1715]	CALL     	R12 2 2 ; R12 := R12(R13)
	40	[1715]	MOVE     	R11 R12 ; R11 := R12
	41	[1716]	SETTABLE 	R9 K10 R11 ; R9["pos"] := R11
	42	[1718]	GETGLOBAL	R12 K3 ; R12 := 0x7b998233
	43	[1718]	MOVE     	R13 R10 ; R13 := R10
	44	[1718]	CALL     	R12 2 2 ; R12 := R12(R13)
	45	[1718]	TEST     	R12 1 ; if R12 then PC := 58
	46	[1718]	JMP      	58 ; PC := 58
	47	[1719]	GETGLOBAL	R12 K5 ; R12 := 0x1211d00f
	48	[1719]	SELF     	R12 R12 K14 ; R13 := R12; R12 := R12[0x05909209]
	49	[1719]	MOVE     	R14 R10 ; R14 := R10
	50	[1719]	MOVE     	R15 R11 ; R15 := R11
	51	[1719]	GETGLOBAL	R16 K15 ; R16 := ZERO_ROTATION
	52	[1719]	CALL     	R12 5 2 ; R12 := R12(R13,R14,R15,R16)
	53	[1719]	SETTABLE 	R9 K4 R12 ; R9["instance"] := R12
	54	[1720]	GETTABLE 	R12 R9 K4 ; R12 := R9["instance"]
	55	[1720]	SELF     	R12 R12 K16 ; R13 := R12; R12 := R12[0x2d9ba74f]
	56	[1720]	GETTABLE 	R14 R9 K17 ; R14 := R9["scale"]
	57	[1720]	CALL     	R12 3 1 ; R12(R13,R14)
	58	[1723]	LOADNIL  	R12 R12 ; R12 := nil
	59	[1724]	GETGLOBAL	R13 K18 ; R13 := mSuperPoly
	60	[1724]	SETTABLE 	R13 R8 R12 ; R13[R8] := R12
	61	[1710]	FORLOOP  	R5 24 ; R5 += R7; if R5 <= R6 then begin PC := 24; R8 := R5 end
	62	[1731]	GETGLOBAL	R13 K5 ; R13 := 0x1211d00f
	63	[1731]	SELF     	R13 R13 K19 ; R14 := R13; R13 := R13[0x46a0ebf5]
	64	[1731]	GETUPVAL 	R15 U2 ; R15 := U2
	65	[1731]	GETTABLE 	R15 R15 K20 ; R15 := R15["STAR_CHART_ROOT"]
	66	[1731]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	67	[1731]	SETUPVAL 	R13 U1 ; U1 := R13
	68	[1733]	GETUPVAL 	R13 U1 ; R13 := U1
	69	[1733]	SELF     	R13 R13 K21 ; R14 := R13; R13 := R13[0x70b8836c]
	70	[1733]	GETGLOBAL	R15 K22 ; R15 := 0x00046924
	71	[1733]	LOADK    	R16 := 0.000000
	72	[1733]	LOADK    	R17 := 60.000000
	73	[1733]	LOADK    	R18 := 0.000000
	74	[1733]	CALL     	R15 4 0 ; R15,... := R15(R16,R17,R18)
	75	[1733]	CALL     	R13 0 1 ; R13(R14,...)
	76	[1735]	GETGLOBAL	R13 K5 ; R13 := 0x1211d00f
	77	[1735]	SELF     	R13 R13 K19 ; R14 := R13; R13 := R13[0x46a0ebf5]
	78	[1735]	GETUPVAL 	R15 U2 ; R15 := U2
	79	[1735]	GETTABLE 	R15 R15 K23 ; R15 := R15["PLAYER"]
	80	[1735]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	81	[1736]	GETGLOBAL	R14 K5 ; R14 := 0x1211d00f
	82	[1736]	SELF     	R14 R14 K19 ; R15 := R14; R14 := R14[0x46a0ebf5]
	83	[1736]	GETUPVAL 	R16 U2 ; R16 := U2
	84	[1736]	GETTABLE 	R16 R16 K24 ; R16 := R16["PLAYER_OPERATOR"]
	85	[1736]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	86	[1738]	GETGLOBAL	R15 K25 ; R15 := 0x89326c93
	87	[1738]	SELF     	R15 R15 K26 ; R16 := R15; R15 := R15[0x78298275]
	88	[1738]	CALL     	R15 2 2 ; R15 := R15(R16)
	89	[1740]	GETGLOBAL	R16 K27 ; R16 := 0x7ed0a956
	90	[1740]	LOADK    	R17 K28 ; R17 := "/Lotus/Types/Friendly/Tenno/OperatorHubAvatar"
	91	[1740]	CALL     	R16 2 2 ; R16 := R16(R17)
	92	[1743]	GETGLOBAL	R17 K27 ; R17 := 0x7ed0a956
	93	[1743]	LOADK    	R18 K29 ; R18 := "/Lotus/Types/Friendly/PlayerControllable/ControllableDrifterTennoAvatar"
	94	[1743]	CALL     	R17 2 2 ; R17 := R17(R18)
	95	[1745]	GETGLOBAL	R18 K3 ; R18 := 0x7b998233
	96	[1745]	MOVE     	R19 R15 ; R19 := R15
	97	[1745]	CALL     	R18 2 2 ; R18 := R18(R19)
	98	[1745]	TEST     	R18 1 ; if R18 then PC := 109
	99	[1745]	JMP      	109 ; PC := 109
	100	[1745]	SELF     	R18 R15 K30 ; R19 := R15; R18 := R15[0xf2deaf69]
	101	[1745]	MOVE     	R20 R16 ; R20 := R16
	102	[1745]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	103	[1745]	TEST     	R18 1 ; if R18 then PC := 111
	104	[1745]	JMP      	111 ; PC := 111
	105	[1745]	SELF     	R18 R15 K30 ; R19 := R15; R18 := R15[0xf2deaf69]
	106	[1745]	MOVE     	R20 R17 ; R20 := R17
	107	[1745]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	108	[1745]	JMP      	111 ; PC := 111
	109	[1745]	OP_LOADBOOL	R18 0 1 ; R18 := false; PC := 110
	110	[1745]	OP_LOADBOOL	R18 1 0 ; R18 := true
	111	[1746]	TESTSET  	R19 R18 0 ; if not R18 then PC := 116 else R19 := R18 
	112	[1746]	JMP      	116 ; PC := 116
	113	[1746]	SELF     	R19 R15 K30 ; R20 := R15; R19 := R15[0xf2deaf69]
	114	[1746]	MOVE     	R21 R17 ; R21 := R17
	115	[1746]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	116	[1747]	TEST     	R18 0 ; if not R18 then PC := 142
	117	[1747]	JMP      	142 ; PC := 142
	118	[1747]	TEST     	R19 1 ; if R19 then PC := 142
	119	[1747]	JMP      	142 ; PC := 142
	120	[1749]	GETGLOBAL	R20 K31 ; R20 := 0x76ea806b
	121	[1749]	SELF     	R20 R20 K32 ; R21 := R20; R20 := R20[0x3f3ae64c]
	122	[1749]	LOADK    	R22 := 0.000000
	123	[1749]	CALL     	R20 3 2 ; R20 := R20(R21,R22)
	124	[1750]	GETGLOBAL	R21 K3 ; R21 := 0x7b998233
	125	[1750]	MOVE     	R22 R20 ; R22 := R20
	126	[1750]	CALL     	R21 2 2 ; R21 := R21(R22)
	127	[1750]	TEST     	R21 1 ; if R21 then PC := 142
	128	[1750]	JMP      	142 ; PC := 142
	129	[1751]	SELF     	R21 R20 K33 ; R22 := R20; R21 := R20[0x80563238]
	130	[1751]	CALL     	R21 2 2 ; R21 := R21(R22)
	131	[1752]	GETGLOBAL	R22 K3 ; R22 := 0x7b998233
	132	[1752]	MOVE     	R23 R21 ; R23 := R21
	133	[1752]	CALL     	R22 2 2 ; R22 := R22(R23)
	134	[1752]	TEST     	R22 1 ; if R22 then PC := 142
	135	[1752]	JMP      	142 ; PC := 142
	136	[1753]	SELF     	R22 R21 K34 ; R23 := R21; R22 := R21[0x5963daba]
	137	[1753]	CALL     	R22 2 2 ; R22 := R22(R23)
	138	[1753]	EQ       	1 R22 K36 ; if R22 == 4.000000 then PC := 141
	139	[1753]	JMP      	141 ; PC := 141
	140	[1753]	OP_LOADBOOL	R19 0 1 ; R19 := false; PC := 141
	141	[1753]	OP_LOADBOOL	R19 1 0 ; R19 := true
	142	[1758]	TEST     	R18 0 ; if not R18 then PC := 156
	143	[1758]	JMP      	156 ; PC := 156
	144	[1758]	TEST     	R19 1 ; if R19 then PC := 156
	145	[1758]	JMP      	156 ; PC := 156
	146	[1759]	SETUPVAL 	R14 U3 ; U3 := R14
	147	[1760]	GETGLOBAL	R22 K3 ; R22 := 0x7b998233
	148	[1760]	MOVE     	R23 R13 ; R23 := R13
	149	[1760]	CALL     	R22 2 2 ; R22 := R22(R23)
	150	[1760]	TEST     	R22 1 ; if R22 then PC := 165
	151	[1760]	JMP      	165 ; PC := 165
	152	[1761]	SELF     	R22 R13 K37 ; R23 := R13; R22 := R13[0x768274d6]
	153	[1761]	OP_LOADBOOL	R24 0 0 ; R24 := false
	154	[1761]	CALL     	R22 3 1 ; R22(R23,R24)
	155	[1762]	JMP      	165 ; PC := 165
	156	[1764]	SETUPVAL 	R13 U3 ; U3 := R13
	157	[1765]	GETGLOBAL	R22 K3 ; R22 := 0x7b998233
	158	[1765]	MOVE     	R23 R14 ; R23 := R14
	159	[1765]	CALL     	R22 2 2 ; R22 := R22(R23)
	160	[1765]	TEST     	R22 1 ; if R22 then PC := 165
	161	[1765]	JMP      	165 ; PC := 165
	162	[1766]	SELF     	R22 R14 K37 ; R23 := R14; R22 := R14[0x768274d6]
	163	[1766]	OP_LOADBOOL	R24 0 0 ; R24 := false
	164	[1766]	CALL     	R22 3 1 ; R22(R23,R24)
	165	[1770]	TEST     	R18 0 ; if not R18 then PC := 177
	166	[1770]	JMP      	177 ; PC := 177
	167	[1770]	GETGLOBAL	R22 K3 ; R22 := 0x7b998233
	168	[1770]	GETUPVAL 	R23 U3 ; R23 := U3
	169	[1770]	CALL     	R22 2 2 ; R22 := R22(R23)
	170	[1770]	TEST     	R22 1 ; if R22 then PC := 177
	171	[1770]	JMP      	177 ; PC := 177
	172	[1771]	GETUPVAL 	R22 U4 ; R22 := U4
	173	[1771]	GETTABLE 	R22 R22 K38 ; R22 := R22[0x18ea51f7]
	174	[1771]	GETUPVAL 	R23 U3 ; R23 := U3
	175	[1771]	MOVE     	R24 R15 ; R24 := R15
	176	[1771]	CALL     	R22 3 1 ; R22(R23,R24)
	177	[1774]	GETGLOBAL	R22 K3 ; R22 := 0x7b998233
	178	[1774]	MOVE     	R23 R15 ; R23 := R15
	179	[1774]	CALL     	R22 2 2 ; R22 := R22(R23)
	180	[1774]	TEST     	R22 1 ; if R22 then PC := 197
	181	[1774]	JMP      	197 ; PC := 197
	182	[1775]	SELF     	R22 R15 K39 ; R23 := R15; R22 := R15[0xde321e6f]
	183	[1775]	CALL     	R22 2 2 ; R22 := R22(R23)
	184	[1775]	SELF     	R22 R22 K40 ; R23 := R22; R22 := R22[0xf7d48ee0]
	185	[1775]	CALL     	R22 2 2 ; R22 := R22(R23)
	186	[1776]	GETGLOBAL	R23 K3 ; R23 := 0x7b998233
	187	[1776]	MOVE     	R24 R22 ; R24 := R22
	188	[1776]	CALL     	R23 2 2 ; R23 := R23(R24)
	189	[1776]	TEST     	R23 1 ; if R23 then PC := 197
	190	[1776]	JMP      	197 ; PC := 197
	191	[1777]	SELF     	R23 R22 K41 ; R24 := R22; R23 := R22[0xbc4ebb44]
	192	[1777]	GETGLOBAL	R25 K42 ; R25 := 0x0469f296
	193	[1777]	LOADK    	R26 K43 ; R26 := "KneelIdle"
	194	[1777]	CALL     	R25 2 0 ; R25,... := R25(R26)
	195	[1777]	CALL     	R23 0 2 ; R23 := R23(R24,...)
	196	[1777]	SETUPVAL 	R23 U5 ; U5 := R23
	197	[1781]	GETUPVAL 	R23 U5 ; R23 := U5
	198	[1781]	TEST     	R23 1 ; if R23 then PC := 202
	199	[1781]	JMP      	202 ; PC := 202
	200	[1782]	GETGLOBAL	R23 K44 ; R23 := 0xa4bb8f34
	201	[1782]	SETUPVAL 	R23 U5 ; U5 := R23
	202	[1785]	GETGLOBAL	R23 K3 ; R23 := 0x7b998233
	203	[1785]	GETUPVAL 	R24 U3 ; R24 := U3
	204	[1785]	CALL     	R23 2 2 ; R23 := R23(R24)
	205	[1785]	TEST     	R23 1 ; if R23 then PC := 218
	206	[1785]	JMP      	218 ; PC := 218
	207	[1786]	GETUPVAL 	R23 U3 ; R23 := U3
	208	[1786]	SELF     	R23 R23 K45 ; R24 := R23; R23 := R23[0xc5561de4]
	209	[1786]	OP_LOADBOOL	R25 1 0 ; R25 := true
	210	[1786]	CALL     	R23 3 1 ; R23(R24,R25)
	211	[1787]	GETUPVAL 	R23 U3 ; R23 := U3
	212	[1787]	SELF     	R23 R23 K37 ; R24 := R23; R23 := R23[0x768274d6]
	213	[1787]	GETGLOBAL	R25 K46 ; R25 := mRailJack
	214	[1787]	GETTABLE 	R25 R25 K47 ; R25 := R25["Active"]
	215	[1787]	NOT      	R25 R25 ; R25 := not R25
	216	[1787]	OP_LOADBOOL	R26 1 0 ; R26 := true
	217	[1787]	CALL     	R23 4 1 ; R23(R24,R25,R26)
	218	[1790]	GETGLOBAL	R23 K5 ; R23 := 0x1211d00f
	219	[1790]	SELF     	R23 R23 K19 ; R24 := R23; R23 := R23[0x46a0ebf5]
	220	[1790]	GETUPVAL 	R25 U2 ; R25 := U2
	221	[1790]	GETTABLE 	R25 R25 K48 ; R25 := R25["PLAYER_LIGHT"]
	222	[1790]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	223	[1790]	SETUPVAL 	R23 U6 ; U6 := R23
	224	[1791]	GETGLOBAL	R23 K3 ; R23 := 0x7b998233
	225	[1791]	GETUPVAL 	R24 U6 ; R24 := U6
	226	[1791]	CALL     	R23 2 2 ; R23 := R23(R24)
	227	[1791]	TEST     	R23 1 ; if R23 then PC := 233
	228	[1791]	JMP      	233 ; PC := 233
	229	[1792]	GETUPVAL 	R23 U6 ; R23 := U6
	230	[1792]	SELF     	R23 R23 K49 ; R24 := R23; R23 := R23[0x5d10207d]
	231	[1792]	CALL     	R23 2 2 ; R23 := R23(R24)
	232	[1792]	SETUPVAL 	R23 U7 ; U7 := R23
	233	[1795]	GETGLOBAL	R23 K3 ; R23 := 0x7b998233
	234	[1795]	GETUPVAL 	R24 U3 ; R24 := U3
	235	[1795]	CALL     	R23 2 2 ; R23 := R23(R24)
	236	[1795]	TEST     	R23 1 ; if R23 then PC := 252
	237	[1795]	JMP      	252 ; PC := 252
	238	[1796]	GETUPVAL 	R23 U3 ; R23 := U3
	239	[1796]	SELF     	R23 R23 K50 ; R24 := R23; R23 := R23[0xd1586535]
	240	[1796]	CALL     	R23 2 2 ; R23 := R23(R24)
	241	[1796]	SETUPVAL 	R23 U8 ; U8 := R23
	242	[1797]	GETGLOBAL	R23 K51 ; R23 := mPlayerPos
	243	[1797]	GETUPVAL 	R24 U3 ; R24 := U3
	244	[1797]	SELF     	R24 R24 K50 ; R25 := R24; R24 := R24[0xd1586535]
	245	[1797]	CALL     	R24 2 2 ; R24 := R24(R25)
	246	[1797]	SETTABLE 	R23 K52 R24 ; R23["Previous"] := R24
	247	[1798]	GETGLOBAL	R23 K51 ; R23 := mPlayerPos
	248	[1798]	GETUPVAL 	R24 U3 ; R24 := U3
	249	[1798]	SELF     	R24 R24 K50 ; R25 := R24; R24 := R24[0xd1586535]
	250	[1798]	CALL     	R24 2 2 ; R24 := R24(R25)
	251	[1798]	SETTABLE 	R23 K53 R24 ; R23["Target"] := R24
	252	[1803]	GETGLOBAL	R23 K51 ; R23 := mPlayerPos
	253	[1803]	TEST     	R23 0 ; if not R23 then PC := 274
	254	[1803]	JMP      	274 ; PC := 274
	255	[1803]	GETGLOBAL	R23 K51 ; R23 := mPlayerPos
	256	[1803]	GETTABLE 	R23 R23 K52 ; R23 := R23["Previous"]
	257	[1803]	TEST     	R23 0 ; if not R23 then PC := 274
	258	[1803]	JMP      	274 ; PC := 274
	259	[1804]	GETUPVAL 	R23 U6 ; R23 := U6
	260	[1804]	SELF     	R23 R23 K54 ; R24 := R23; R23 := R23[0xe29e950d]
	261	[1804]	LOADK    	R25 := 2.000000
	262	[1804]	CALL     	R23 3 1 ; R23(R24,R25)
	263	[1805]	GETUPVAL 	R23 U6 ; R23 := U6
	264	[1805]	SELF     	R23 R23 K55 ; R24 := R23; R23 := R23[0x9307aa51]
	265	[1805]	GETGLOBAL	R25 K51 ; R25 := mPlayerPos
	266	[1805]	GETTABLE 	R25 R25 K52 ; R25 := R25["Previous"]
	267	[1805]	GETGLOBAL	R26 K9 ; R26 := 0xa421af95
	268	[1805]	LOADK    	R27 := 0.000000
	269	[1805]	LOADK    	R28 := 0.500000
	270	[1805]	LOADK    	R29 := -0.500000
	271	[1805]	CALL     	R26 4 2 ; R26 := R26(R27,R28,R29)
	272	[1805]	ADD      	R25 R25 R26 ; R25 := R25 + R26
	273	[1805]	CALL     	R23 3 1 ; R23(R24,R25)
	274	[1810]	LOADK    	R23 := 1.000000
	275	[1810]	LOADK    	R24 := 9.000000
	276	[1810]	LOADK    	R25 := 1.000000
	277	[1810]	FORPREP  	R23 301 ; R23 -= R25; PC := 301
	278	[1811]	GETUPVAL 	R27 U1 ; R27 := U1
	279	[1811]	SELF     	R27 R27 K56 ; R28 := R27; R27 := R27[0x47901f07]
	280	[1811]	GETGLOBAL	R29 K57 ; R29 := 0x6c5c6741
	281	[1811]	GETGLOBAL	R30 K58 ; R30 := EMPTY_SYMBOL
	282	[1811]	GETGLOBAL	R31 K59 ; R31 := ZERO_VECTOR
	283	[1811]	GETUPVAL 	R32 U9 ; R32 := U9
	284	[1811]	GETTABLE 	R32 R32 K60 ; R32 := R32["RING_ROTATION"]
	285	[1811]	CALL     	R27 6 2 ; R27 := R27(R28,R29,R30,R31,R32)
	286	[1812]	GETGLOBAL	R28 K3 ; R28 := 0x7b998233
	287	[1812]	MOVE     	R29 R27 ; R29 := R27
	288	[1812]	CALL     	R28 2 2 ; R28 := R28(R29)
	289	[1812]	TEST     	R28 1 ; if R28 then PC := 301
	290	[1812]	JMP      	301 ; PC := 301
	291	[1813]	GETGLOBAL	R28 K61 ; R28 := 0x5bced4c4
	292	[1813]	GETTABLE 	R28 R28 K62 ; R28 := R28[0xa40531d8]
	293	[1813]	MOVE     	R29 R26 ; R29 := R26
	294	[1813]	LOADK    	R30 := 1.500000
	295	[1813]	CALL     	R28 3 2 ; R28 := R28(R29,R30)
	296	[1813]	MUL      	R28 R28 K63 ; R28 := R28 * 0.200000
	297	[1814]	SELF     	R29 R27 K64 ; R30 := R27; R29 := R27[0x1b50cf3b]
	298	[1814]	MOVE     	R31 R28 ; R31 := R28
	299	[1814]	MOVE     	R32 R28 ; R32 := R28
	300	[1814]	CALL     	R29 4 1 ; R29(R30,R31,R32)
	301	[1810]	FORLOOP  	R23 278 ; R23 += R25; if R23 <= R24 then begin PC := 278; R26 := R23 end
	302	[1821]	LOADK    	R29 := 8.000000
	303	[1822]	LOADK    	R30 := 1.000000
	304	[1822]	MOVE     	R31 R29 ; R31 := R29
	305	[1822]	LOADK    	R32 := 1.000000
	306	[1822]	FORPREP  	R30 347 ; R30 -= R32; PC := 347
	307	[1823]	GETGLOBAL	R34 K5 ; R34 := 0x1211d00f
	308	[1823]	SELF     	R34 R34 K14 ; R35 := R34; R34 := R34[0x05909209]
	309	[1823]	GETGLOBAL	R36 K65 ; R36 := 0x8edd4efd
	310	[1823]	GETGLOBAL	R37 K59 ; R37 := ZERO_VECTOR
	311	[1823]	GETGLOBAL	R38 K15 ; R38 := ZERO_ROTATION
	312	[1823]	CALL     	R34 5 2 ; R34 := R34(R35,R36,R37,R38)
	313	[1825]	DIV      	R35 R33 R29 ; R35 := R33 / R29
	314	[1825]	DIV      	R35 R35 K66 ; R35 := R35 / 2.000000
	315	[1826]	LOADK    	R36 := 7.000000
	316	[1827]	GETGLOBAL	R37 K61 ; R37 := 0x5bced4c4
	317	[1827]	GETTABLE 	R37 R37 K67 ; R37 := R37[0x00fa6bf1]
	318	[1827]	GETGLOBAL	R38 K68 ; R38 := 0x107bf6da
	319	[1827]	MOVE     	R39 R35 ; R39 := R35
	320	[1827]	CALL     	R38 2 2 ; R38 := R38(R39)
	321	[1827]	MUL      	R38 K69 R38 ; R38 := 6.283185 * R38
	322	[1827]	CALL     	R37 2 2 ; R37 := R37(R38)
	323	[1827]	MUL      	R37 R37 R36 ; R37 := R37 * R36
	324	[1828]	GETGLOBAL	R38 K61 ; R38 := 0x5bced4c4
	325	[1828]	GETTABLE 	R38 R38 K70 ; R38 := R38[0x3eda26fc]
	326	[1828]	GETGLOBAL	R39 K68 ; R39 := 0x107bf6da
	327	[1828]	MOVE     	R40 R35 ; R40 := R35
	328	[1828]	CALL     	R39 2 2 ; R39 := R39(R40)
	329	[1828]	MUL      	R39 K69 R39 ; R39 := 6.283185 * R39
	330	[1828]	CALL     	R38 2 2 ; R38 := R38(R39)
	331	[1828]	MUL      	R38 R38 R36 ; R38 := R38 * R36
	332	[1829]	NEWTABLE 	R39 1 0 ; R39 := {}
	333	[1829]	GETGLOBAL	R40 K9 ; R40 := 0xa421af95
	334	[1829]	UNM      	R41 R37 ; R41 := ^ R37
	335	[1829]	UNM      	R42 R38 ; R42 := ^ R38
	336	[1829]	LOADK    	R43 := 0.000000
	337	[1829]	CALL     	R40 4 2 ; R40 := R40(R41,R42,R43)
	338	[1829]	GETGLOBAL	R41 K9 ; R41 := 0xa421af95
	339	[1829]	MOVE     	R42 R37 ; R42 := R37
	340	[1829]	MOVE     	R43 R38 ; R43 := R38
	341	[1829]	LOADK    	R44 := 0.000000
	342	[1829]	CALL     	R41 4 0 ; R41,... := R41(R42,R43,R44)
	343	[1829]	SETLIST  	R39 0 1 ; R39[(1-1)*FPF+i] := R(39+i), 1 <= i <= 0
	344	[1831]	SELF     	R40 R34 K71 ; R41 := R34; R40 := R34[0x7ceafc23]
	345	[1831]	MOVE     	R42 R39 ; R42 := R39
	346	[1831]	CALL     	R40 3 1 ; R40(R41,R42)
	347	[1822]	FORLOOP  	R30 307 ; R30 += R32; if R30 <= R31 then begin PC := 307; R33 := R30 end
	348	[1836]	GETGLOBAL	R40 K46 ; R40 := mRailJack
	349	[1836]	GETTABLE 	R40 R40 K47 ; R40 := R40["Active"]
	350	[1836]	TEST     	R40 0 ; if not R40 then PC := 366
	351	[1836]	JMP      	366 ; PC := 366
	352	[1837]	GETGLOBAL	R40 K3 ; R40 := 0x7b998233
	353	[1837]	GETUPVAL 	R41 U1 ; R41 := U1
	354	[1837]	CALL     	R40 2 2 ; R40 := R40(R41)
	355	[1837]	TEST     	R40 1 ; if R40 then PC := 366
	356	[1837]	JMP      	366 ; PC := 366
	357	[1838]	GETUPVAL 	R40 U1 ; R40 := U1
	358	[1840]	SELF     	R41 R40 K72 ; R42 := R40; R41 := R40[0xc1595bd5]
	359	[1840]	GETGLOBAL	R43 K73 ; R43 := gEntityType
	360	[1840]	CALL     	R41 3 2 ; R41 := R41(R42,R43)
	361	[1841]	LOADK    	R42 := 1.000000
	362	[1841]	LEN      	R43 R41 ; R43 := # R41
	363	[1841]	LOADK    	R44 := 1.000000
	364	[1841]	FORPREP  	R42 365 ; R42 -= R44; PC := 365
	365	[1841]	FORLOOP  	R42 365 ; R42 += R44; if R42 <= R43 then begin PC := 365; R45 := R42 end
	366	[1846]	RETURN   	R0 1 ; return 

function #46 <?:1848,1858> (46 instructions, 184 bytes at 0000021118BCA700)
1 param, 10 slots, 0 upvalues, 0 locals, 15 constants, 0 functions
	1	[1849]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[1849]	GETGLOBAL	R2 K1 ; R2 := 0xbe190284
	3	[1849]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[1849]	TEST     	R1 1 ; if R1 then PC := 46
	5	[1849]	JMP      	46 ; PC := 46
	6	[1849]	GETGLOBAL	R1 K2 ; R1 := _T
	7	[1849]	GETTABLE 	R1 R1 K3 ; R1 := R1["FortressLocation"]
	8	[1849]	GETTABLE 	R1 R1 K4 ; R1 := R1["Initialized"]
	9	[1849]	EQ       	0 R1 K5 ; if R1 ~= false then PC := 46
	10	[1849]	JMP      	46 ; PC := 46
	11	[1850]	GETGLOBAL	R1 K1 ; R1 := 0xbe190284
	12	[1850]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x67b221fa]
	13	[1850]	CALL     	R1 2 2 ; R1 := R1(R2)
	14	[1851]	GETGLOBAL	R2 K2 ; R2 := _T
	15	[1851]	GETTABLE 	R2 R2 K3 ; R2 := R2["FortressLocation"]
	16	[1851]	GETTABLE 	R2 R2 K7 ; R2 := R2["Velocity"]
	17	[1851]	DIV      	R2 K8 R2 ; R2 := 1.000000 / R2
	18	[1852]	GETGLOBAL	R3 K2 ; R3 := _T
	19	[1852]	GETTABLE 	R3 R3 K3 ; R3 := R3["FortressLocation"]
	20	[1852]	GETTABLE 	R3 R3 K9 ; R3 := R3["MaxSplines"]
	21	[1852]	MUL      	R3 R2 R3 ; R3 := R2 * R3
	22	[1852]	MOD      	R3 R1 R3 ; R3 := R1 % R3
	23	[1853]	GETGLOBAL	R4 K10 ; R4 := 0x5bced4c4
	24	[1853]	GETTABLE 	R4 R4 K11 ; R4 := R4[0x55f27c30]
	25	[1853]	DIV      	R5 R3 R2 ; R5 := R3 / R2
	26	[1853]	CALL     	R4 2 2 ; R4 := R4(R5)
	27	[1853]	ADD      	R4 K8 R4 ; R4 := 1.000000 + R4
	28	[1854]	GETGLOBAL	R5 K2 ; R5 := _T
	29	[1854]	GETTABLE 	R5 R5 K3 ; R5 := R5["FortressLocation"]
	30	[1854]	GETGLOBAL	R6 K13 ; R6 := 0x42dcc9f5
	31	[1854]	MOVE     	R7 R4 ; R7 := R4
	32	[1854]	LOADK    	R8 := 1.000000
	33	[1854]	GETGLOBAL	R9 K2 ; R9 := _T
	34	[1854]	GETTABLE 	R9 R9 K3 ; R9 := R9["FortressLocation"]
	35	[1854]	GETTABLE 	R9 R9 K9 ; R9 := R9["MaxSplines"]
	36	[1854]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	37	[1854]	SETTABLE 	R5 K12 R6 ; R5["SplineIndex"] := R6
	38	[1855]	GETGLOBAL	R5 K2 ; R5 := _T
	39	[1855]	GETTABLE 	R5 R5 K3 ; R5 := R5["FortressLocation"]
	40	[1855]	MOD      	R6 R3 R2 ; R6 := R3 % R2
	41	[1855]	DIV      	R6 R6 R2 ; R6 := R6 / R2
	42	[1855]	SETTABLE 	R5 K14 R6 ; R5["Progress"] := R6
	43	[1856]	GETGLOBAL	R5 K2 ; R5 := _T
	44	[1856]	GETTABLE 	R5 R5 K3 ; R5 := R5["FortressLocation"]
	45	[1856]	SETTABLE 	R5 K4 R0 ; R5["Initialized"] := R0
	46	[1858]	RETURN   	R0 1 ; return 

function #47 <?:1860,1976> (364 instructions, 1456 bytes at 000002111AD10B40)
0 params, 56 slots, 9 upvalues, 0 locals, 83 constants, 0 functions
	1	[1861]	GETGLOBAL	R0 K0 ; R0 := mRegionLabels
	2	[1861]	EQ       	1 R0 K1 ; if R0 == nil then PC := 13
	3	[1861]	JMP      	13 ; PC := 13
	4	[1862]	GETGLOBAL	R0 K2 ; R0 := 0xc8802016
	5	[1862]	GETGLOBAL	R1 K0 ; R1 := mRegionLabels
	6	[1862]	CALL     	R0 2 4 ; R0,R1,R2 := R0(R1)
	7	[1862]	JMP      	11 ; PC := 11
	8	[1863]	GETUPVAL 	R5 U0 ; R5 := U0
	9	[1863]	MOVE     	R6 R4 ; R6 := R4
	10	[1863]	CALL     	R5 2 1 ; R5(R6)
	11	[1862]	TFORLOOP 	R0 2 ; R3,R4 := R0(R1,R2); if R3 ~= nil then begin PC = 8; R2 := R3 end
	12	[1863]	JMP      	8 ; PC := 8
	13	[1867]	NEWTABLE 	R5 0 0 ; R5 := {}
	14	[1867]	SETGLOBALHASH	R5 K0 ; mRegionLabels := R5
	15	[1868]	NEWTABLE 	R5 0 0 ; R5 := {}
	16	[1868]	SETGLOBALHASH	R5 K3 ; mRegionInstances := R5
	17	[1869]	NEWTABLE 	R5 0 0 ; R5 := {}
	18	[1869]	SETUPVAL 	R5 U1 ; U1 := R5
	19	[1871]	LOADK    	R5 := 1.000000
	20	[1871]	GETGLOBAL	R6 K4 ; R6 := mRegions
	21	[1871]	LEN      	R6 R6 ; R6 := # R6
	22	[1871]	LOADK    	R7 := 1.000000
	23	[1871]	FORPREP  	R5 363 ; R5 -= R7; PC := 363
	24	[1872]	GETGLOBAL	R9 K5 ; R9 := 0xce225efa
	25	[1872]	LOADK    	R10 := 0.000000
	26	[1872]	CALL     	R9 2 1 ; R9(R10)
	27	[1874]	GETGLOBAL	R9 K4 ; R9 := mRegions
	28	[1874]	GETTABLE 	R9 R9 R8 ; R9 := R9[R8]
	29	[1875]	GETGLOBAL	R10 K6 ; R10 := 0x88efc25e
	30	[1875]	GETTABLE 	R11 R9 K7 ; R11 := R9["decoRedux"]
	31	[1875]	CALL     	R10 2 2 ; R10 := R10(R11)
	32	[1876]	GETTABLE 	R11 R9 K8 ; R11 := R9["name"]
	33	[1876]	GETUPVAL 	R12 U2 ; R12 := U2
	34	[1876]	GETTABLE 	R12 R12 K9 ; R12 := R12["Tag"]
	35	[1876]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 38
	36	[1876]	JMP      	38 ; PC := 38
	37	[1876]	OP_LOADBOOL	R11 0 1 ; R11 := false; PC := 38
	38	[1876]	OP_LOADBOOL	R11 1 0 ; R11 := true
	39	[1878]	GETGLOBAL	R12 K10 ; R12 := 0x7b998233
	40	[1878]	MOVE     	R13 R10 ; R13 := R10
	41	[1878]	CALL     	R12 2 2 ; R12 := R12(R13)
	42	[1878]	TEST     	R12 0 ; if not R12 then PC := 48
	43	[1878]	JMP      	48 ; PC := 48
	44	[1879]	GETGLOBAL	R12 K6 ; R12 := 0x88efc25e
	45	[1879]	GETTABLE 	R13 R9 K11 ; R13 := R9["deco"]
	46	[1879]	CALL     	R12 2 2 ; R12 := R12(R13)
	47	[1879]	MOVE     	R10 R12 ; R10 := R12
	48	[1885]	TEST     	R11 0 ; if not R11 then PC := 203
	49	[1885]	JMP      	203 ; PC := 203
	50	[1886]	GETUPVAL 	R12 U2 ; R12 := U2
	51	[1886]	SETTABLE 	R12 K12 R9 ; R12["Region"] := R9
	52	[1888]	GETUPVAL 	R12 U2 ; R12 := U2
	53	[1888]	GETTABLE 	R12 R12 K13 ; R12 := R12["SplinePoints"]
	54	[1889]	LOADNIL  	R13 R13 ; R13 := nil
	55	[1891]	LOADK    	R14 := 1.000000
	56	[1891]	LEN      	R15 R12 ; R15 := # R12
	57	[1891]	SUB      	R15 R15 K14 ; R15 := R15 - 3.000000
	58	[1891]	LOADK    	R16 := 1.000000
	59	[1891]	FORPREP  	R14 113 ; R14 -= R16; PC := 113
	60	[1892]	GETGLOBAL	R18 K10 ; R18 := 0x7b998233
	61	[1892]	GETUPVAL 	R19 U2 ; R19 := U2
	62	[1892]	GETTABLE 	R19 R19 K15 ; R19 := R19["Splines"]
	63	[1892]	GETTABLE 	R19 R19 R17 ; R19 := R19[R17]
	64	[1892]	CALL     	R18 2 2 ; R18 := R18(R19)
	65	[1892]	TEST     	R18 1 ; if R18 then PC := 73
	66	[1892]	JMP      	73 ; PC := 73
	67	[1893]	GETGLOBAL	R18 K16 ; R18 := 0x1211d00f
	68	[1893]	SELF     	R18 R18 K17 ; R19 := R18; R18 := R18[0x59c96e77]
	69	[1893]	GETUPVAL 	R20 U2 ; R20 := U2
	70	[1893]	GETTABLE 	R20 R20 K15 ; R20 := R20["Splines"]
	71	[1893]	GETTABLE 	R20 R20 R17 ; R20 := R20[R17]
	72	[1893]	CALL     	R18 3 1 ; R18(R19,R20)
	73	[1895]	GETGLOBAL	R18 K16 ; R18 := 0x1211d00f
	74	[1895]	SELF     	R18 R18 K18 ; R19 := R18; R18 := R18[0x05909209]
	75	[1895]	GETGLOBAL	R20 K19 ; R20 := 0x1e444be7
	76	[1895]	GETGLOBAL	R21 K20 ; R21 := ZERO_VECTOR
	77	[1895]	GETGLOBAL	R22 K21 ; R22 := ZERO_ROTATION
	78	[1895]	CALL     	R18 5 2 ; R18 := R18(R19,R20,R21,R22)
	79	[1895]	MOVE     	R13 R18 ; R13 := R18
	80	[1896]	GETUPVAL 	R18 U2 ; R18 := U2
	81	[1896]	GETTABLE 	R18 R18 K15 ; R18 := R18["Splines"]
	82	[1896]	SETTABLE 	R18 R17 R13 ; R18[R17] := R13
	83	[1897]	NEWTABLE 	R18 4 0 ; R18 := {}
	84	[1897]	GETTABLE 	R19 R12 R17 ; R19 := R12[R17]
	85	[1897]	ADD      	R20 R17 K22 ; R20 := R17 + 1.000000
	86	[1897]	GETTABLE 	R20 R12 R20 ; R20 := R12[R20]
	87	[1897]	ADD      	R21 R17 K23 ; R21 := R17 + 2.000000
	88	[1897]	GETTABLE 	R21 R12 R21 ; R21 := R12[R21]
	89	[1897]	ADD      	R22 R17 K14 ; R22 := R17 + 3.000000
	90	[1897]	GETTABLE 	R22 R12 R22 ; R22 := R12[R22]
	91	[1897]	SETLIST  	R18 4 1 ; R18[(1-1)*FPF+i] := R(18+i), 1 <= i <= 4
	92	[1898]	SELF     	R19 R13 K24 ; R20 := R13; R19 := R13[0x7ceafc23]
	93	[1898]	MOVE     	R21 R18 ; R21 := R18
	94	[1898]	CALL     	R19 3 1 ; R19(R20,R21)
	95	[1899]	SELF     	R19 R13 K25 ; R20 := R13; R19 := R13[0xc2b4e597]
	96	[1899]	GETGLOBAL	R21 K26 ; R21 := 0x60130201
	97	[1899]	LOADK    	R22 := 0.000000
	98	[1899]	LOADK    	R23 := 255.000000
	99	[1899]	LOADK    	R24 := 0.000000
	100	[1899]	LOADK    	R25 := 255.000000
	101	[1899]	CALL     	R21 5 0 ; R21,... := R21(R22,R23,R24,R25)
	102	[1899]	CALL     	R19 0 1 ; R19(R20,...)
	103	[1900]	SELF     	R19 R13 K27 ; R20 := R13; R19 := R13[0xecfaed95]
	104	[1900]	GETGLOBAL	R21 K28 ; R21 := 0xb7cbd06b
	105	[1900]	LOADK    	R22 := 0.000000
	106	[1900]	LOADK    	R23 := 30.000000
	107	[1900]	CALL     	R21 3 0 ; R21,... := R21(R22,R23)
	108	[1900]	CALL     	R19 0 1 ; R19(R20,...)
	109	[1901]	SELF     	R19 R13 K29 ; R20 := R13; R19 := R13[0x768274d6]
	110	[1901]	OP_LOADBOOL	R21 0 0 ; R21 := false
	111	[1901]	OP_LOADBOOL	R22 1 0 ; R22 := true
	112	[1901]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	113	[1891]	FORLOOP  	R14 60 ; R14 += R16; if R14 <= R15 then begin PC := 60; R17 := R14 end
	114	[1903]	GETGLOBAL	R19 K30 ; R19 := _T
	115	[1903]	GETTABLE 	R19 R19 K31 ; R19 := R19["FortressLocation"]
	116	[1903]	GETUPVAL 	R20 U2 ; R20 := U2
	117	[1903]	GETTABLE 	R20 R20 K15 ; R20 := R20["Splines"]
	118	[1903]	LEN      	R20 R20 ; R20 := # R20
	119	[1903]	SETTABLE 	R19 K32 R20 ; R19["MaxSplines"] := R20
	120	[1904]	GETUPVAL 	R19 U2 ; R19 := U2
	121	[1904]	GETGLOBAL	R20 K30 ; R20 := _T
	122	[1904]	GETTABLE 	R20 R20 K31 ; R20 := R20["FortressLocation"]
	123	[1904]	GETTABLE 	R20 R20 K32 ; R20 := R20["MaxSplines"]
	124	[1904]	GETUPVAL 	R21 U2 ; R21 := U2
	125	[1904]	GETTABLE 	R21 R21 K34 ; R21 := R21["LoopTime"]
	126	[1904]	DIV      	R20 R20 R21 ; R20 := R20 / R21
	127	[1904]	SETTABLE 	R19 K33 R20 ; R19["Velocity"] := R20
	128	[1905]	GETGLOBAL	R19 K30 ; R19 := _T
	129	[1905]	GETTABLE 	R19 R19 K31 ; R19 := R19["FortressLocation"]
	130	[1905]	GETUPVAL 	R20 U2 ; R20 := U2
	131	[1905]	GETTABLE 	R20 R20 K33 ; R20 := R20["Velocity"]
	132	[1905]	SETTABLE 	R19 K33 R20 ; R19["Velocity"] := R20
	133	[1907]	GETGLOBAL	R19 K10 ; R19 := 0x7b998233
	134	[1907]	GETGLOBAL	R20 K35 ; R20 := 0x25d99d89
	135	[1907]	CALL     	R19 2 2 ; R19 := R19(R20)
	136	[1907]	TEST     	R19 1 ; if R19 then PC := 141
	137	[1907]	JMP      	141 ; PC := 141
	138	[1908]	GETUPVAL 	R19 U3 ; R19 := U3
	139	[1908]	OP_LOADBOOL	R20 1 0 ; R20 := true
	140	[1908]	CALL     	R19 2 1 ; R19(R20)
	141	[1911]	GETUPVAL 	R19 U2 ; R19 := U2
	142	[1911]	GETTABLE 	R19 R19 K15 ; R19 := R19["Splines"]
	143	[1911]	GETGLOBAL	R20 K30 ; R20 := _T
	144	[1911]	GETTABLE 	R20 R20 K31 ; R20 := R20["FortressLocation"]
	145	[1911]	GETTABLE 	R20 R20 K36 ; R20 := R20["SplineIndex"]
	146	[1911]	GETTABLE 	R19 R19 R20 ; R19 := R19[R20]
	147	[1911]	SELF     	R19 R19 K37 ; R20 := R19; R19 := R19[0x7482ae82]
	148	[1911]	GETGLOBAL	R21 K30 ; R21 := _T
	149	[1911]	GETTABLE 	R21 R21 K31 ; R21 := R21["FortressLocation"]
	150	[1911]	GETTABLE 	R21 R21 K38 ; R21 := R21["Progress"]
	151	[1911]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	152	[1912]	GETGLOBAL	R20 K39 ; R20 := mRadialSolarMap
	153	[1912]	SELF     	R20 R20 K40 ; R21 := R20; R20 := R20[0x3070289c]
	154	[1912]	GETUPVAL 	R22 U2 ; R22 := U2
	155	[1912]	GETTABLE 	R22 R22 K12 ; R22 := R22["Region"]
	156	[1912]	GETGLOBAL	R23 K41 ; R23 := 0xa421af95
	157	[1912]	GETTABLE 	R24 R19 K42 ; R24 := R19["x"]
	158	[1912]	MUL      	R24 R24 K43 ; R24 := R24 * 0.041000
	159	[1912]	ADD      	R24 K44 R24 ; R24 := 0.500000 + R24
	160	[1912]	GETTABLE 	R25 R19 K45 ; R25 := R19["y"]
	161	[1912]	ADD      	R25 R25 K46 ; R25 := R25 + 0.030000
	162	[1912]	MUL      	R25 R25 K47 ; R25 := R25 * 0.043000
	163	[1912]	SUB      	R25 K44 R25 ; R25 := 0.500000 - R25
	164	[1912]	GETGLOBAL	R26 K48 ; R26 := Zoom
	165	[1912]	GETTABLE 	R26 R26 K49 ; R26 := R26["MAX_ZOOM"]
	166	[1912]	SUB      	R26 R26 K50 ; R26 := R26 - 0.300000
	167	[1912]	GETTABLE 	R27 R19 K51 ; R27 := R19["z"]
	168	[1912]	ADD      	R26 R26 R27 ; R26 := R26 + R27
	169	[1912]	CALL     	R23 4 0 ; R23,... := R23(R24,R25,R26)
	170	[1912]	CALL     	R20 0 1 ; R20(R21,...)
	171	[1914]	SETTABLE 	R9 K52 R19 ; R9["pos"] := R19
	172	[1916]	GETUPVAL 	R20 U2 ; R20 := U2
	173	[1916]	GETTABLE 	R20 R20 K12 ; R20 := R20["Region"]
	174	[1916]	GETTABLE 	R20 R20 K53 ; R20 := R20["sectors"]
	175	[1917]	LOADK    	R21 := 1.000000
	176	[1917]	LEN      	R22 R20 ; R22 := # R20
	177	[1917]	LOADK    	R23 := 1.000000
	178	[1917]	FORPREP  	R21 202 ; R21 -= R23; PC := 202
	179	[1918]	GETTABLE 	R25 R20 R24 ; R25 := R20[R24]
	180	[1920]	GETTABLE 	R26 R25 K54 ; R26 := R25["decoOffset"]
	181	[1920]	ADD      	R26 R19 R26 ; R26 := R19 + R26
	182	[1920]	SETTABLE 	R25 K52 R26 ; R25["pos"] := R26
	183	[1922]	GETGLOBAL	R26 K55 ; R26 := 0x64fb1586
	184	[1922]	GETTABLE 	R27 R25 K8 ; R27 := R25["name"]
	185	[1922]	CALL     	R26 2 2 ; R26 := R26(R27)
	186	[1924]	GETUPVAL 	R27 U2 ; R27 := U2
	187	[1924]	GETTABLE 	R27 R27 K56 ; R27 := R27["Sectors"]
	188	[1924]	GETTABLE 	R27 R27 R26 ; R27 := R27[R26]
	189	[1924]	EQ       	1 R27 K1 ; if R27 == nil then PC := 199
	190	[1924]	JMP      	199 ; PC := 199
	191	[1925]	GETGLOBAL	R27 K57 ; R27 := 0x3d106989
	192	[1925]	LOADK    	R28 K58 ; R28 := "Ignoring duplicate fortress sector"
	193	[1925]	GETGLOBAL	R29 K55 ; R29 := 0x64fb1586
	194	[1925]	GETTABLE 	R30 R25 K8 ; R30 := R25["name"]
	195	[1925]	CALL     	R29 2 2 ; R29 := R29(R30)
	196	[1925]	CONCAT   	R28 R28 R29 ; R28 := R28 .. R29
	197	[1925]	CALL     	R27 2 1 ; R27(R28)
	198	[1925]	JMP      	202 ; PC := 202
	199	[1927]	GETUPVAL 	R27 U2 ; R27 := U2
	200	[1927]	GETTABLE 	R27 R27 K56 ; R27 := R27["Sectors"]
	201	[1927]	SETTABLE 	R27 R26 R25 ; R27[R26] := R25
	202	[1917]	FORLOOP  	R21 179 ; R21 += R23; if R21 <= R22 then begin PC := 179; R24 := R21 end
	203	[1932]	GETGLOBAL	R27 K41 ; R27 := 0xa421af95
	204	[1932]	GETTABLE 	R28 R9 K52 ; R28 := R9["pos"]
	205	[1932]	GETTABLE 	R28 R28 K42 ; R28 := R28["x"]
	206	[1932]	GETTABLE 	R29 R9 K52 ; R29 := R9["pos"]
	207	[1932]	GETTABLE 	R29 R29 K45 ; R29 := R29["y"]
	208	[1932]	GETTABLE 	R30 R9 K52 ; R30 := R9["pos"]
	209	[1932]	GETTABLE 	R30 R30 K51 ; R30 := R30["z"]
	210	[1932]	CALL     	R27 4 2 ; R27 := R27(R28,R29,R30)
	211	[1934]	GETUPVAL 	R28 U4 ; R28 := U4
	212	[1934]	MOVE     	R29 R27 ; R29 := R27
	213	[1934]	CALL     	R28 2 2 ; R28 := R28(R29)
	214	[1934]	MOVE     	R27 R28 ; R27 := R28
	215	[1935]	SETTABLE 	R9 K52 R27 ; R9["pos"] := R27
	216	[1937]	GETGLOBAL	R28 K16 ; R28 := 0x1211d00f
	217	[1937]	SELF     	R28 R28 K18 ; R29 := R28; R28 := R28[0x05909209]
	218	[1937]	MOVE     	R30 R10 ; R30 := R10
	219	[1937]	MOVE     	R31 R27 ; R31 := R27
	220	[1937]	GETGLOBAL	R32 K59 ; R32 := 0x00046924
	221	[1937]	LOADK    	R33 := 0.000000
	222	[1937]	LOADK    	R34 := -15.000000
	223	[1937]	LOADK    	R35 := 0.000000
	224	[1937]	CALL     	R32 4 0 ; R32,... := R32(R33,R34,R35)
	225	[1937]	CALL     	R28 0 2 ; R28 := R28(R29,...)
	226	[1938]	SETTABLE 	R9 K60 R28 ; R9["instance"] := R28
	227	[1939]	GETGLOBAL	R29 K10 ; R29 := 0x7b998233
	228	[1939]	GETGLOBAL	R30 K3 ; R30 := mRegionInstances
	229	[1939]	GETTABLE 	R30 R30 R8 ; R30 := R30[R8]
	230	[1939]	CALL     	R29 2 2 ; R29 := R29(R30)
	231	[1939]	TEST     	R29 1 ; if R29 then PC := 238
	232	[1939]	JMP      	238 ; PC := 238
	233	[1940]	GETGLOBAL	R29 K16 ; R29 := 0x1211d00f
	234	[1940]	SELF     	R29 R29 K17 ; R30 := R29; R29 := R29[0x59c96e77]
	235	[1940]	GETGLOBAL	R31 K3 ; R31 := mRegionInstances
	236	[1940]	GETTABLE 	R31 R31 R8 ; R31 := R31[R8]
	237	[1940]	CALL     	R29 3 1 ; R29(R30,R31)
	238	[1942]	GETGLOBAL	R29 K3 ; R29 := mRegionInstances
	239	[1942]	SETTABLE 	R29 R8 R28 ; R29[R8] := R28
	240	[1944]	SELF     	R29 R28 K61 ; R30 := R28; R29 := R28[0x2d9ba74f]
	241	[1944]	GETTABLE 	R31 R9 K62 ; R31 := R9["scale"]
	242	[1944]	CALL     	R29 3 1 ; R29(R30,R31)
	243	[1947]	GETUPVAL 	R29 U5 ; R29 := U5
	244	[1947]	GETTABLE 	R29 R29 R8 ; R29 := R29[R8]
	245	[1947]	EQ       	1 R29 K63 ; if R29 == true then PC := 257
	246	[1947]	JMP      	257 ; PC := 257
	247	[1947]	GETGLOBAL	R29 K64 ; R29 := mRailJack
	248	[1947]	GETTABLE 	R29 R29 K65 ; R29 := R29["Active"]
	249	[1947]	TEST     	R29 0 ; if not R29 then PC := 258
	250	[1947]	JMP      	258 ; PC := 258
	251	[1947]	GETGLOBAL	R29 K64 ; R29 := mRailJack
	252	[1947]	GETTABLE 	R29 R29 K66 ; R29 := R29["Regions"]
	253	[1947]	GETTABLE 	R29 R29 R8 ; R29 := R29[R8]
	254	[1947]	NOT      	R29 R29 ; R29 := not R29
	255	[1947]	JMP      	258 ; PC := 258
	256	[1947]	OP_LOADBOOL	R29 0 1 ; R29 := false; PC := 257
	257	[1947]	OP_LOADBOOL	R29 1 0 ; R29 := true
	258	[1948]	TEST     	R29 0 ; if not R29 then PC := 277
	259	[1948]	JMP      	277 ; PC := 277
	260	[1949]	SELF     	R30 R28 K29 ; R31 := R28; R30 := R28[0x768274d6]
	261	[1949]	OP_LOADBOOL	R32 0 0 ; R32 := false
	262	[1949]	OP_LOADBOOL	R33 1 0 ; R33 := true
	263	[1949]	CALL     	R30 4 1 ; R30(R31,R32,R33)
	264	[1950]	SELF     	R30 R28 K67 ; R31 := R28; R30 := R28[0xc1595bd5]
	265	[1950]	GETGLOBAL	R32 K68 ; R32 := gEntityType
	266	[1950]	CALL     	R30 3 2 ; R30 := R30(R31,R32)
	267	[1951]	LOADK    	R31 := 1.000000
	268	[1951]	LEN      	R32 R30 ; R32 := # R30
	269	[1951]	LOADK    	R33 := 1.000000
	270	[1951]	FORPREP  	R31 276 ; R31 -= R33; PC := 276
	271	[1952]	GETTABLE 	R35 R30 R34 ; R35 := R30[R34]
	272	[1952]	SELF     	R35 R35 K29 ; R36 := R35; R35 := R35[0x768274d6]
	273	[1952]	OP_LOADBOOL	R37 0 0 ; R37 := false
	274	[1952]	OP_LOADBOOL	R38 1 0 ; R38 := true
	275	[1952]	CALL     	R35 4 1 ; R35(R36,R37,R38)
	276	[1951]	FORLOOP  	R31 271 ; R31 += R33; if R31 <= R32 then begin PC := 271; R34 := R31 end
	277	[1956]	GETGLOBAL	R35 K64 ; R35 := mRailJack
	278	[1956]	GETTABLE 	R35 R35 K66 ; R35 := R35["Regions"]
	279	[1956]	GETTABLE 	R35 R35 R8 ; R35 := R35[R8]
	280	[1956]	TEST     	R35 0 ; if not R35 then PC := 296
	281	[1956]	JMP      	296 ; PC := 296
	282	[1957]	SELF     	R35 R28 K67 ; R36 := R28; R35 := R28[0xc1595bd5]
	283	[1957]	GETGLOBAL	R37 K69 ; R37 := gLightType
	284	[1957]	CALL     	R35 3 2 ; R35 := R35(R36,R37)
	285	[1958]	LOADK    	R36 := 1.000000
	286	[1958]	LEN      	R37 R35 ; R37 := # R35
	287	[1958]	LOADK    	R38 := 1.000000
	288	[1958]	FORPREP  	R36 294 ; R36 -= R38; PC := 294
	289	[1959]	GETTABLE 	R40 R35 R39 ; R40 := R35[R39]
	290	[1959]	SELF     	R40 R40 K29 ; R41 := R40; R40 := R40[0x768274d6]
	291	[1959]	OP_LOADBOOL	R42 0 0 ; R42 := false
	292	[1959]	OP_LOADBOOL	R43 1 0 ; R43 := true
	293	[1959]	CALL     	R40 4 1 ; R40(R41,R42,R43)
	294	[1958]	FORLOOP  	R36 289 ; R36 += R38; if R36 <= R37 then begin PC := 289; R39 := R36 end
	295	[1960]	JMP      	319 ; PC := 319
	296	[1961]	GETGLOBAL	R40 K70 ; R40 := mNewWarMode
	297	[1961]	TEST     	R40 0 ; if not R40 then PC := 319
	298	[1961]	JMP      	319 ; PC := 319
	299	[1962]	SELF     	R40 R28 K67 ; R41 := R28; R40 := R28[0xc1595bd5]
	300	[1962]	GETGLOBAL	R42 K69 ; R42 := gLightType
	301	[1962]	CALL     	R40 3 2 ; R40 := R40(R41,R42)
	302	[1963]	LOADK    	R41 := 1.000000
	303	[1963]	LEN      	R42 R40 ; R42 := # R40
	304	[1963]	LOADK    	R43 := 1.000000
	305	[1963]	FORPREP  	R41 318 ; R41 -= R43; PC := 318
	306	[1964]	GETTABLE 	R45 R40 R44 ; R45 := R40[R44]
	307	[1964]	SELF     	R45 R45 K71 ; R46 := R45; R45 := R45[0xa3927fe9]
	308	[1964]	GETGLOBAL	R47 K26 ; R47 := 0x60130201
	309	[1964]	LOADK    	R48 := 255.000000
	310	[1964]	LOADK    	R49 := 0.000000
	311	[1964]	LOADK    	R50 := 0.000000
	312	[1964]	CALL     	R47 4 0 ; R47,... := R47(R48,R49,R50)
	313	[1964]	CALL     	R45 0 1 ; R45(R46,...)
	314	[1965]	GETTABLE 	R45 R40 R44 ; R45 := R40[R44]
	315	[1965]	SELF     	R45 R45 K72 ; R46 := R45; R45 := R45[0xe29e950d]
	316	[1965]	LOADK    	R47 := 2.000000
	317	[1965]	CALL     	R45 3 1 ; R45(R46,R47)
	318	[1963]	FORLOOP  	R41 306 ; R41 += R43; if R41 <= R42 then begin PC := 306; R44 := R41 end
	319	[1969]	GETGLOBAL	R45 K41 ; R45 := 0xa421af95
	320	[1969]	LOADK    	R46 := 0.000000
	321	[1969]	GETTABLE 	R47 R9 K62 ; R47 := R9["scale"]
	322	[1969]	MUL      	R47 R47 K73 ; R47 := R47 * 1.050000
	323	[1969]	GETUPVAL 	R48 U6 ; R48 := U6
	324	[1969]	GETTABLE 	R48 R48 K74 ; R48 := R48["PLANET_UNIT_MULTIPLIER"]
	325	[1969]	MUL      	R47 R47 R48 ; R47 := R47 * R48
	326	[1969]	LOADK    	R48 K75 ; R48 := 0.000100
	327	[1969]	CALL     	R45 4 2 ; R45 := R45(R46,R47,R48)
	328	[1969]	ADD      	R45 R27 R45 ; R45 := R27 + R45
	329	[1970]	GETUPVAL 	R46 U7 ; R46 := U7
	330	[1970]	GETTABLE 	R46 R46 K76 ; R46 := R46[0x06d055f9]
	331	[1970]	GETGLOBAL	R47 K64 ; R47 := mRailJack
	332	[1970]	GETTABLE 	R47 R47 K65 ; R47 := R47["Active"]
	333	[1970]	TEST     	R47 0 ; if not R47 then PC := 340
	334	[1970]	JMP      	340 ; PC := 340
	335	[1970]	GETGLOBAL	R47 K64 ; R47 := mRailJack
	336	[1970]	GETTABLE 	R47 R47 K66 ; R47 := R47["Regions"]
	337	[1970]	GETTABLE 	R47 R47 R8 ; R47 := R47[R8]
	338	[1970]	JMP      	341 ; PC := 341
	339	[1970]	OP_LOADBOOL	R47 0 1 ; R47 := false; PC := 340
	340	[1970]	OP_LOADBOOL	R47 1 0 ; R47 := true
	341	[1970]	GETTABLE 	R48 R9 K8 ; R48 := R9["name"]
	342	[1970]	LOADK    	R49 K77 ; R49 := ""
	343	[1970]	CALL     	R46 4 2 ; R46 := R46(R47,R48,R49)
	344	[1971]	GETGLOBAL	R47 K0 ; R47 := mRegionLabels
	345	[1971]	GETUPVAL 	R48 U8 ; R48 := U8
	346	[1971]	MOVE     	R49 R46 ; R49 := R46
	347	[1971]	MOVE     	R50 R45 ; R50 := R45
	348	[1971]	OP_LOADBOOL	R51 0 0 ; R51 := false
	349	[1971]	LOADK    	R52 := 2.000000
	350	[1971]	MOVE     	R53 R29 ; R53 := R29
	351	[1971]	NEWTABLE 	R54 0 2 ; R54 := {}
	352	[1971]	SETTABLE 	R54 K78 K79 ; R54["RollOver"] := "RollOverRegionLabel"
	353	[1971]	SETTABLE 	R54 K80 K81 ; R54["RollOut"] := "RollOutRegionLabel"
	354	[1971]	MOVE     	R55 R8 ; R55 := R8
	355	[1971]	CALL     	R48 8 2 ; R48 := R48(R49,R50,R51,R52,R53,R54,R55)
	356	[1971]	SETTABLE 	R47 R8 R48 ; R47[R8] := R48
	357	[1972]	TEST     	R11 0 ; if not R11 then PC := 363
	358	[1972]	JMP      	363 ; PC := 363
	359	[1973]	GETUPVAL 	R47 U2 ; R47 := U2
	360	[1973]	GETUPVAL 	R48 U1 ; R48 := U1
	361	[1973]	LEN      	R48 R48 ; R48 := # R48
	362	[1973]	SETTABLE 	R47 K82 R48 ; R47[0x09000032] := R48
	363	[1871]	FORLOOP  	R5 24 ; R5 += R7; if R5 <= R6 then begin PC := 24; R8 := R5 end
	364	[1976]	RETURN   	R0 1 ; return 

function #48 <?:1978,1980> (6 instructions, 24 bytes at 0000021120D77350)
1 param, 4 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[1979]	GETGLOBAL	R1 K0 ; R1 := mHover
	2	[1979]	GETGLOBAL	R2 K2 ; R2 := 0x03f57322
	3	[1979]	MOVE     	R3 R0 ; R3 := R0
	4	[1979]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[1979]	SETTABLE 	R1 K1 R2 ; R1["RegionLabel"] := R2
	6	[1980]	RETURN   	R0 1 ; return 

function #49 <?:1982,1984> (3 instructions, 12 bytes at 0000021120D77420)
1 param, 2 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[1983]	GETGLOBAL	R1 K0 ; R1 := mHover
	2	[1983]	SETTABLE 	R1 K1 K2 ; R1["RegionLabel"] := nil
	3	[1984]	RETURN   	R0 1 ; return 

function #50 <?:1986,1998> (27 instructions, 108 bytes at 000002113595E3D0)
0 params, 8 slots, 3 upvalues, 0 locals, 6 constants, 0 functions
	1	[1987]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[1987]	CALL     	R0 1 1 ; R0()
	3	[1988]	GETUPVAL 	R0 U1 ; R0 := U1
	4	[1988]	CALL     	R0 1 1 ; R0()
	5	[1990]	NEWTABLE 	R0 0 0 ; R0 := {}
	6	[1990]	SETGLOBALHASH	R0 K0 ; mRegionRadius := R0
	7	[1991]	LOADNIL  	R0 R0 ; R0 := nil
	8	[1992]	LOADK    	R1 := 1.000000
	9	[1992]	GETGLOBAL	R2 K1 ; R2 := mRegions
	10	[1992]	LEN      	R2 R2 ; R2 := # R2
	11	[1992]	LOADK    	R3 := 1.000000
	12	[1992]	FORPREP  	R1 26 ; R1 -= R3; PC := 26
	13	[1993]	GETGLOBAL	R5 K1 ; R5 := mRegions
	14	[1993]	GETTABLE 	R0 R5 R4 ; R0 := R5[R4]
	15	[1994]	GETGLOBAL	R5 K2 ; R5 := 0x7b998233
	16	[1994]	GETTABLE 	R6 R0 K3 ; R6 := R0["instance"]
	17	[1994]	CALL     	R5 2 2 ; R5 := R5(R6)
	18	[1994]	TEST     	R5 1 ; if R5 then PC := 26
	19	[1994]	JMP      	26 ; PC := 26
	20	[1995]	GETGLOBAL	R5 K0 ; R5 := mRegionRadius
	21	[1995]	GETTABLE 	R6 R0 K4 ; R6 := R0["scale"]
	22	[1995]	GETUPVAL 	R7 U2 ; R7 := U2
	23	[1995]	GETTABLE 	R7 R7 K5 ; R7 := R7["PLANET_UNIT_MULTIPLIER"]
	24	[1995]	MUL      	R6 R6 R7 ; R6 := R6 * R7
	25	[1995]	SETTABLE 	R5 R4 R6 ; R5[R4] := R6
	26	[1992]	FORLOOP  	R1 13 ; R1 += R3; if R1 <= R2 then begin PC := 13; R4 := R1 end
	27	[1998]	RETURN   	R0 1 ; return 

function #51 <?:2000,2015> (40 instructions, 160 bytes at 000002112948E260)
1 param, 16 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[2001]	GETTABLE 	R1 R0 K0 ; R1 := R0["name"]
	2	[2002]	LOADK    	R2 := 1.000000
	3	[2002]	GETGLOBAL	R3 K1 ; R3 := mSuperRegions
	4	[2002]	LEN      	R3 R3 ; R3 := # R3
	5	[2002]	LOADK    	R4 := 1.000000
	6	[2002]	FORPREP  	R2 37 ; R2 -= R4; PC := 37
	7	[2003]	LOADK    	R6 := 1.000000
	8	[2003]	GETGLOBAL	R7 K1 ; R7 := mSuperRegions
	9	[2003]	GETTABLE 	R7 R7 R5 ; R7 := R7[R5]
	10	[2003]	GETTABLE 	R7 R7 K2 ; R7 := R7["regionLinks"]
	11	[2003]	LEN      	R7 R7 ; R7 := # R7
	12	[2003]	LOADK    	R8 := 1.000000
	13	[2003]	FORPREP  	R6 36 ; R6 -= R8; PC := 36
	14	[2004]	GETGLOBAL	R10 K1 ; R10 := mSuperRegions
	15	[2004]	GETTABLE 	R10 R10 R5 ; R10 := R10[R5]
	16	[2004]	GETTABLE 	R10 R10 K2 ; R10 := R10["regionLinks"]
	17	[2004]	GETTABLE 	R10 R10 R9 ; R10 := R10[R9]
	18	[2004]	EQ       	0 R10 R1 ; if R10 ~= R1 then PC := 36
	19	[2004]	JMP      	36 ; PC := 36
	20	[2006]	LOADK    	R10 := 1.000000
	21	[2006]	GETGLOBAL	R11 K3 ; R11 := mSuperPoly
	22	[2006]	LEN      	R11 R11 ; R11 := # R11
	23	[2006]	LOADK    	R12 := 1.000000
	24	[2006]	FORPREP  	R10 35 ; R10 -= R12; PC := 35
	25	[2007]	GETGLOBAL	R14 K1 ; R14 := mSuperRegions
	26	[2007]	GETTABLE 	R14 R14 R5 ; R14 := R14[R5]
	27	[2007]	GETTABLE 	R14 R14 K4 ; R14 := R14["instance"]
	28	[2007]	GETGLOBAL	R15 K3 ; R15 := mSuperPoly
	29	[2007]	GETTABLE 	R15 R15 R13 ; R15 := R15[R13]
	30	[2007]	EQ       	0 R14 R15 ; if R14 ~= R15 then PC := 35
	31	[2007]	JMP      	35 ; PC := 35
	32	[2008]	GETGLOBAL	R14 K3 ; R14 := mSuperPoly
	33	[2008]	GETTABLE 	R14 R14 R13 ; R14 := R14[R13]
	34	[2008]	RETURN   	R14 2 ; return R14 
	35	[2006]	FORLOOP  	R10 25 ; R10 += R12; if R10 <= R11 then begin PC := 25; R13 := R10 end
	36	[2003]	FORLOOP  	R6 14 ; R6 += R8; if R6 <= R7 then begin PC := 14; R9 := R6 end
	37	[2002]	FORLOOP  	R2 7 ; R2 += R4; if R2 <= R3 then begin PC := 7; R5 := R2 end
	38	[2014]	LOADNIL  	R14 R14 ; R14 := nil
	39	[2014]	RETURN   	R14 2 ; return R14 
	40	[2015]	RETURN   	R0 1 ; return 

function #52 <?:2017,2022> (24 instructions, 96 bytes at 000002113030C490)
0 params, 7 slots, 0 upvalues, 0 locals, 14 constants, 0 functions
	1	[2018]	GETGLOBAL	R0 K0 ; R0 := 0xb7cbd06b
	2	[2018]	GETGLOBAL	R1 K1 ; R1 := Zoom
	3	[2018]	GETTABLE 	R1 R1 K2 ; R1 := R1["MIN_ZOOM"]
	4	[2018]	GETGLOBAL	R2 K1 ; R2 := Zoom
	5	[2018]	GETTABLE 	R2 R2 K3 ; R2 := R2["MAX_ZOOM"]
	6	[2018]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	7	[2019]	GETGLOBAL	R1 K4 ; R1 := 0x42dcc9f5
	8	[2019]	GETGLOBAL	R2 K5 ; R2 := mSmoothZoom
	9	[2019]	GETTABLE 	R2 R2 K6 ; R2 := R2["mCurVal"]
	10	[2019]	GETTABLE 	R3 R0 K7 ; R3 := R0["minValue"]
	11	[2019]	GETTABLE 	R4 R0 K8 ; R4 := R0["maxValue"]
	12	[2019]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	13	[2020]	SELF     	R2 R0 K9 ; R3 := R0; R2 := R0[0x3b93153d]
	14	[2020]	MOVE     	R4 R1 ; R4 := R1
	15	[2020]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	16	[2020]	MOVE     	R1 R2 ; R1 := R2
	17	[2021]	GETGLOBAL	R2 K10 ; R2 := mDrag
	18	[2021]	GETGLOBAL	R3 K12 ; R3 := 0x9bafffe3
	19	[2021]	LOADK    	R4 := 1.000000
	20	[2021]	LOADK    	R5 K13 ; R5 := 0.100000
	21	[2021]	MOVE     	R6 R1 ; R6 := R1
	22	[2021]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	23	[2021]	SETTABLE 	R2 K11 R3 ; R2["mDragMultiplier"] := R3
	24	[2022]	RETURN   	R0 1 ; return 

function #53 <?:2024,2205> (417 instructions, 1668 bytes at 000002113030C590)
0 params, 56 slots, 14 upvalues, 0 locals, 100 constants, 6 functions
	1	[2025]	GETGLOBAL	R0 K0 ; R0 := 0x76ea806b
	2	[2025]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x3f3ae64c]
	3	[2025]	LOADK    	R2 := 0.000000
	4	[2025]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	5	[2026]	LOADNIL  	R1 R4 ; R1 := R2 := R3 := R4 := nil
	6	[2031]	GETGLOBAL	R5 K2 ; R5 := 0x7b998233
	7	[2031]	MOVE     	R6 R0 ; R6 := R0
	8	[2031]	CALL     	R5 2 2 ; R5 := R5(R6)
	9	[2031]	TEST     	R5 1 ; if R5 then PC := 34
	10	[2031]	JMP      	34 ; PC := 34
	11	[2031]	GETGLOBAL	R5 K3 ; R5 := 0x0032441c
	12	[2031]	GETTABLE 	R5 R5 K4 ; R5 := R5["StalkerMode"]
	13	[2031]	TEST     	R5 1 ; if R5 then PC := 34
	14	[2031]	JMP      	34 ; PC := 34
	15	[2032]	SELF     	R5 R0 K5 ; R6 := R0; R5 := R0[0x80563238]
	16	[2032]	CALL     	R5 2 2 ; R5 := R5(R6)
	17	[2033]	GETGLOBAL	R6 K2 ; R6 := 0x7b998233
	18	[2033]	MOVE     	R7 R5 ; R7 := R5
	19	[2033]	CALL     	R6 2 2 ; R6 := R6(R7)
	20	[2033]	TEST     	R6 1 ; if R6 then PC := 34
	21	[2033]	JMP      	34 ; PC := 34
	22	[2034]	SELF     	R6 R5 K6 ; R7 := R5; R6 := R5[0xc4e837f5]
	23	[2034]	CALL     	R6 2 2 ; R6 := R6(R7)
	24	[2034]	SELF     	R6 R6 K7 ; R7 := R6; R6 := R6[0x6d604ba7]
	25	[2034]	CALL     	R6 2 2 ; R6 := R6(R7)
	26	[2034]	MOVE     	R2 R6 ; R2 := R6
	27	[2035]	SELF     	R6 R5 K8 ; R7 := R5; R6 := R5[0x62c81b76]
	28	[2035]	CALL     	R6 2 2 ; R6 := R6(R7)
	29	[2036]	GETGLOBAL	R7 K9 ; R7 := 0x88efc25e
	30	[2036]	GETTABLE 	R8 R6 K10 ; R8 := R6["mShip"]
	31	[2036]	CALL     	R7 2 2 ; R7 := R7(R8)
	32	[2036]	MOVE     	R3 R7 ; R3 := R7
	33	[2037]	GETTABLE 	R4 R6 K11 ; R4 := R6["mShipExterior"]
	34	[2041]	LOADK    	R7 K12 ; R7 := "Earth"
	35	[2042]	OP_LOADBOOL	R8 0 0 ; R8 := false
	36	[2043]	GETGLOBAL	R9 K13 ; R9 := _T
	37	[2043]	GETTABLE 	R9 R9 K14 ; R9 := R9["CustomStarChartNodeFilter"]
	38	[2043]	EQ       	1 R9 K15 ; if R9 == nil then PC := 46
	39	[2043]	JMP      	46 ; PC := 46
	40	[2043]	GETGLOBAL	R9 K13 ; R9 := _T
	41	[2043]	GETTABLE 	R9 R9 K14 ; R9 := R9["CustomStarChartNodeFilter"]
	42	[2043]	GETTABLE 	R9 R9 K16 ; R9 := R9["Keys"]
	43	[2043]	LEN      	R9 R9 ; R9 := # R9
	44	[2043]	LT       	0 R9 K17 ; if R9 >= 2.000000 then PC := 174
	45	[2043]	JMP      	174 ; PC := 174
	46	[2044]	GETUPVAL 	R9 U0 ; R9 := U0
	47	[2044]	CALL     	R9 1 2 ; R9 := R9()
	48	[2045]	LOADK    	R10 := 1.000000
	49	[2045]	GETGLOBAL	R11 K18 ; R11 := mRegions
	50	[2045]	LEN      	R11 R11 ; R11 := # R11
	51	[2045]	LOADK    	R12 := 1.000000
	52	[2045]	FORPREP  	R10 94 ; R10 -= R12; PC := 94
	53	[2046]	GETGLOBAL	R14 K18 ; R14 := mRegions
	54	[2046]	GETTABLE 	R14 R14 R13 ; R14 := R14[R13]
	55	[2047]	GETGLOBAL	R15 K2 ; R15 := 0x7b998233
	56	[2047]	MOVE     	R16 R14 ; R16 := R14
	57	[2047]	CALL     	R15 2 2 ; R15 := R15(R16)
	58	[2047]	TEST     	R15 1 ; if R15 then PC := 94
	59	[2047]	JMP      	94 ; PC := 94
	60	[2047]	SELF     	R15 R14 K19 ; R16 := R14; R15 := R14[0x699fd1e2]
	61	[2047]	MOVE     	R17 R9 ; R17 := R9
	62	[2047]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	63	[2047]	EQ       	1 R15 K21 ; if R15 == 0.000000 then PC := 94
	64	[2047]	JMP      	94 ; PC := 94
	65	[2047]	GETGLOBAL	R15 K22 ; R15 := mRailJack
	66	[2047]	GETTABLE 	R15 R15 K23 ; R15 := R15["Active"]
	67	[2047]	TEST     	R15 0 ; if not R15 then PC := 74
	68	[2047]	JMP      	74 ; PC := 74
	69	[2047]	GETGLOBAL	R15 K22 ; R15 := mRailJack
	70	[2047]	GETTABLE 	R15 R15 K24 ; R15 := R15["Regions"]
	71	[2047]	GETTABLE 	R15 R15 R13 ; R15 := R15[R13]
	72	[2047]	TEST     	R15 0 ; if not R15 then PC := 94
	73	[2047]	JMP      	94 ; PC := 94
	74	[2048]	GETGLOBAL	R15 K25 ; R15 := 0x015284cd
	75	[2048]	LOADK    	R16 K26 ; R16 := "/"
	76	[2048]	GETTABLE 	R17 R14 K27 ; R17 := R14["name"]
	77	[2048]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	78	[2049]	LEN      	R16 R15 ; R16 := # R15
	79	[2049]	GETTABLE 	R15 R15 R16 ; R15 := R15[R16]
	80	[2050]	EQ       	1 R15 R2 ; if R15 == R2 then PC := 83
	81	[2050]	JMP      	83 ; PC := 83
	82	[2050]	OP_LOADBOOL	R8 0 1 ; R8 := false; PC := 83
	83	[2050]	OP_LOADBOOL	R8 1 0 ; R8 := true
	84	[2051]	TEST     	R8 1 ; if R8 then PC := 88
	85	[2051]	JMP      	88 ; PC := 88
	86	[2051]	EQ       	0 R15 R7 ; if R15 ~= R7 then PC := 94
	87	[2051]	JMP      	94 ; PC := 94
	88	[2052]	MOVE     	R1 R14 ; R1 := R14
	89	[2053]	GETGLOBAL	R16 K10 ; R16 := mShip
	90	[2053]	SETTABLE 	R16 K28 R13 ; R16["RegionIndex"] := R13
	91	[2054]	TEST     	R8 0 ; if not R8 then PC := 94
	92	[2054]	JMP      	94 ; PC := 94
	93	[2055]	JMP      	95 ; PC := 95
	94	[2045]	FORLOOP  	R10 53 ; R10 += R12; if R10 <= R11 then begin PC := 53; R13 := R10 end
	95	[2072]	CLOSURE  	R16 0 ; R16 := closure(Function #1)
	96	[2072]	GETUPVAL 	R0 U1 ; R0 := U1
	97	[2072]	MOVE     	R0 R1 ; R0 := R1
	98	[2072]	MOVE     	R0 R8 ; R0 := R8
	99	[2073]	GETUPVAL 	R17 U2 ; R17 := U2
	100	[2073]	GETTABLE 	R17 R17 K29 ; R17 := R17[0x8e7c3b5e]
	101	[2073]	GETGLOBAL	R18 K30 ; R18 := 0x25d99d89
	102	[2073]	CALL     	R17 2 5 ; R17,R18,R19,R20 := R17(R18)
	103	[2074]	GETGLOBAL	R21 K2 ; R21 := 0x7b998233
	104	[2074]	MOVE     	R22 R17 ; R22 := R17
	105	[2074]	CALL     	R21 2 2 ; R21 := R21(R22)
	106	[2074]	TEST     	R21 1 ; if R21 then PC := 174
	107	[2074]	JMP      	174 ; PC := 174
	108	[2074]	TEST     	R20 0 ; if not R20 then PC := 174
	109	[2074]	JMP      	174 ; PC := 174
	110	[2075]	SELF     	R21 R17 K31 ; R22 := R17; R21 := R17[0x42700bd0]
	111	[2075]	CALL     	R21 2 2 ; R21 := R21(R22)
	112	[2076]	LEN      	R22 R21 ; R22 := # R21
	113	[2076]	LE       	0 R18 R22 ; if R18 > R22 then PC := 174
	114	[2076]	JMP      	174 ; PC := 174
	115	[2077]	GETTABLE 	R22 R21 R18 ; R22 := R21[R18]
	116	[2078]	GETTABLE 	R23 R22 K32 ; R23 := R22["mMainMission"]
	117	[2078]	GETTABLE 	R23 R23 K33 ; R23 := R23["mKey"]
	118	[2079]	OP_LOADBOOL	R24 1 0 ; R24 := true
	119	[2082]	GETGLOBAL	R25 K2 ; R25 := 0x7b998233
	120	[2082]	MOVE     	R26 R23 ; R26 := R23
	121	[2082]	CALL     	R25 2 2 ; R25 := R25(R26)
	122	[2082]	TEST     	R25 1 ; if R25 then PC := 134
	123	[2082]	JMP      	134 ; PC := 134
	124	[2082]	GETGLOBAL	R25 K22 ; R25 := mRailJack
	125	[2082]	GETTABLE 	R25 R25 K23 ; R25 := R25["Active"]
	126	[2082]	TEST     	R25 0 ; if not R25 then PC := 134
	127	[2082]	JMP      	134 ; PC := 134
	128	[2083]	SELF     	R25 R23 K34 ; R26 := R23; R25 := R23[0xef893aec]
	129	[2083]	CALL     	R25 2 2 ; R25 := R25(R26)
	130	[2085]	GETTABLE 	R26 R25 K35 ; R26 := R25["missionType"]
	131	[2085]	EQ       	1 R26 K36 ; if R26 == 31.000000 then PC := 134
	132	[2085]	JMP      	134 ; PC := 134
	133	[2086]	OP_LOADBOOL	R24 0 0 ; R24 := false
	134	[2090]	SELF     	R26 R17 K37 ; R27 := R17; R26 := R17[0xf2deaf69]
	135	[2090]	GETUPVAL 	R28 U3 ; R28 := U3
	136	[2090]	GETTABLE 	R28 R28 K38 ; R28 := R28["mirageQuestKey"]
	137	[2090]	CALL     	R26 3 2 ; R26 := R26(R27,R28)
	138	[2090]	TEST     	R26 0 ; if not R26 then PC := 141
	139	[2090]	JMP      	141 ; PC := 141
	140	[2091]	OP_LOADBOOL	R24 0 0 ; R24 := false
	141	[2094]	TEST     	R24 1 ; if R24 then PC := 144
	142	[2094]	JMP      	144 ; PC := 144
	143	[2094]	JMP      	174 ; PC := 174
	144	[2096]	GETGLOBAL	R26 K2 ; R26 := 0x7b998233
	145	[2096]	MOVE     	R27 R23 ; R27 := R23
	146	[2096]	CALL     	R26 2 2 ; R26 := R26(R27)
	147	[2096]	TEST     	R26 1 ; if R26 then PC := 156
	148	[2096]	JMP      	156 ; PC := 156
	149	[2097]	MOVE     	R26 R16 ; R26 := R16
	150	[2097]	GETGLOBAL	R27 K39 ; R27 := 0x64fb1586
	151	[2097]	SELF     	R28 R23 K40 ; R29 := R23; R28 := R23[0x92608d86]
	152	[2097]	CALL     	R28 2 0 ; R28,... := R28(R29)
	153	[2097]	CALL     	R27 0 0 ; R27,... := R27(R28,...)
	154	[2097]	CALL     	R26 0 1 ; R26(R27,...)
	155	[2097]	JMP      	174 ; PC := 174
	156	[2098]	GETTABLE 	R26 R22 K41 ; R26 := R22["mMarkedNodes"]
	157	[2098]	LEN      	R26 R26 ; R26 := # R26
	158	[2098]	LT       	0 K21 R26 ; if 0.000000 >= R26 then PC := 174
	159	[2098]	JMP      	174 ; PC := 174
	160	[2099]	GETUPVAL 	R26 U2 ; R26 := U2
	161	[2099]	GETTABLE 	R26 R26 K42 ; R26 := R26[0x5e35d4d6]
	162	[2099]	CALL     	R26 1 2 ; R26 := R26()
	163	[2100]	SELF     	R27 R26 K43 ; R28 := R26; R27 := R26[0x365d0eb2]
	164	[2100]	GETTABLE 	R29 R22 K41 ; R29 := R22["mMarkedNodes"]
	165	[2100]	CALL     	R27 3 2 ; R27 := R27(R28,R29)
	166	[2101]	GETGLOBAL	R28 K44 ; R28 := EMPTY_SYMBOL
	167	[2101]	EQ       	1 R27 R28 ; if R27 == R28 then PC := 174
	168	[2101]	JMP      	174 ; PC := 174
	169	[2102]	MOVE     	R28 R16 ; R28 := R16
	170	[2102]	GETGLOBAL	R29 K39 ; R29 := 0x64fb1586
	171	[2102]	MOVE     	R30 R27 ; R30 := R27
	172	[2102]	CALL     	R29 2 0 ; R29,... := R29(R30)
	173	[2102]	CALL     	R28 0 1 ; R28(R29,...)
	174	[2109]	TEST     	R8 1 ; if R8 then PC := 177
	175	[2109]	JMP      	177 ; PC := 177
	176	[2110]	MOVE     	R2 R7 ; R2 := R7
	177	[2113]	EQ       	1 R1 K15 ; if R1 == nil then PC := 226
	178	[2113]	JMP      	226 ; PC := 226
	179	[2113]	GETGLOBAL	R28 K2 ; R28 := 0x7b998233
	180	[2113]	MOVE     	R29 R3 ; R29 := R3
	181	[2113]	CALL     	R28 2 2 ; R28 := R28(R29)
	182	[2113]	TEST     	R28 1 ; if R28 then PC := 226
	183	[2113]	JMP      	226 ; PC := 226
	184	[2113]	GETGLOBAL	R28 K22 ; R28 := mRailJack
	185	[2113]	GETTABLE 	R28 R28 K23 ; R28 := R28["Active"]
	186	[2113]	TEST     	R28 1 ; if R28 then PC := 226
	187	[2113]	JMP      	226 ; PC := 226
	188	[2114]	GETGLOBAL	R28 K2 ; R28 := 0x7b998233
	189	[2114]	GETGLOBAL	R29 K10 ; R29 := mShip
	190	[2114]	GETTABLE 	R29 R29 K45 ; R29 := R29["Deco"]
	191	[2114]	CALL     	R28 2 2 ; R28 := R28(R29)
	192	[2114]	TEST     	R28 0 ; if not R28 then PC := 204
	193	[2114]	JMP      	204 ; PC := 204
	194	[2115]	GETGLOBAL	R28 K10 ; R28 := mShip
	195	[2115]	GETGLOBAL	R29 K46 ; R29 := 0x1211d00f
	196	[2115]	SELF     	R29 R29 K47 ; R30 := R29; R29 := R29[0x05909209]
	197	[2115]	GETGLOBAL	R31 K48 ; R31 := 0x21defcfd
	198	[2115]	GETTABLE 	R32 R1 K49 ; R32 := R1["instance"]
	199	[2115]	SELF     	R32 R32 K50 ; R33 := R32; R32 := R32[0xd1586535]
	200	[2115]	CALL     	R32 2 2 ; R32 := R32(R33)
	201	[2115]	GETGLOBAL	R33 K51 ; R33 := ZERO_ROTATION
	202	[2115]	CALL     	R29 5 2 ; R29 := R29(R30,R31,R32,R33)
	203	[2115]	SETTABLE 	R28 K45 R29 ; R28["Deco"] := R29
	204	[2117]	GETGLOBAL	R28 K10 ; R28 := mShip
	205	[2117]	GETTABLE 	R28 R28 K45 ; R28 := R28["Deco"]
	206	[2117]	SELF     	R28 R28 K52 ; R29 := R28; R28 := R28[0x2d9ba74f]
	207	[2117]	LOADK    	R30 K53 ; R30 := 0.000700
	208	[2117]	CALL     	R28 3 1 ; R28(R29,R30)
	209	[2118]	GETGLOBAL	R28 K10 ; R28 := mShip
	210	[2118]	GETTABLE 	R28 R28 K45 ; R28 := R28["Deco"]
	211	[2118]	SELF     	R28 R28 K54 ; R29 := R28; R28 := R28[0xde61adb3]
	212	[2118]	GETGLOBAL	R30 K55 ; R30 := 0xb009bbc6
	213	[2118]	MOVE     	R31 R3 ; R31 := R3
	214	[2118]	CALL     	R30 2 0 ; R30,... := R30(R31)
	215	[2118]	CALL     	R28 0 1 ; R28(R29,...)
	216	[2119]	GETGLOBAL	R28 K10 ; R28 := mShip
	217	[2119]	GETTABLE 	R28 R28 K45 ; R28 := R28["Deco"]
	218	[2119]	SELF     	R28 R28 K56 ; R29 := R28; R28 := R28[0xaa041663]
	219	[2119]	MOVE     	R30 R4 ; R30 := R4
	220	[2119]	CALL     	R28 3 1 ; R28(R29,R30)
	221	[2120]	GETGLOBAL	R28 K10 ; R28 := mShip
	222	[2120]	GETTABLE 	R29 R1 K49 ; R29 := R1["instance"]
	223	[2120]	SELF     	R29 R29 K50 ; R30 := R29; R29 := R29[0xd1586535]
	224	[2120]	CALL     	R29 2 2 ; R29 := R29(R30)
	225	[2120]	SETTABLE 	R28 K57 R29 ; R28["AnchorPosition"] := R29
	226	[2123]	GETGLOBAL	R28 K2 ; R28 := 0x7b998233
	227	[2123]	GETUPVAL 	R29 U4 ; R29 := U4
	228	[2123]	CALL     	R28 2 2 ; R28 := R28(R29)
	229	[2123]	TEST     	R28 1 ; if R28 then PC := 262
	230	[2123]	JMP      	262 ; PC := 262
	231	[2124]	GETUPVAL 	R28 U4 ; R28 := U4
	232	[2124]	SELF     	R28 R28 K58 ; R29 := R28; R28 := R28[0x9307aa51]
	233	[2124]	GETUPVAL 	R30 U5 ; R30 := U5
	234	[2124]	GETGLOBAL	R31 K59 ; R31 := 0xa421af95
	235	[2124]	LOADK    	R32 := 0.000000
	236	[2124]	LOADK    	R33 := 0.000000
	237	[2124]	LOADK    	R34 := 20.000000
	238	[2124]	CALL     	R31 4 2 ; R31 := R31(R32,R33,R34)
	239	[2124]	ADD      	R30 R30 R31 ; R30 := R30 + R31
	240	[2124]	CALL     	R28 3 1 ; R28(R29,R30)
	241	[2125]	GETGLOBAL	R28 K60 ; R28 := mPlayerPos
	242	[2125]	GETUPVAL 	R29 U5 ; R29 := U5
	243	[2125]	GETGLOBAL	R30 K59 ; R30 := 0xa421af95
	244	[2125]	LOADK    	R31 := 0.000000
	245	[2125]	LOADK    	R32 := 0.000000
	246	[2125]	LOADK    	R33 := 4.000000
	247	[2125]	CALL     	R30 4 2 ; R30 := R30(R31,R32,R33)
	248	[2125]	ADD      	R29 R29 R30 ; R29 := R29 + R30
	249	[2125]	SETTABLE 	R28 K61 R29 ; R28["Target"] := R29
	250	[2126]	GETGLOBAL	R28 K60 ; R28 := mPlayerPos
	251	[2126]	GETTABLE 	R28 R28 K62 ; R28 := R28["Prop"]
	252	[2126]	SELF     	R28 R28 K63 ; R29 := R28; R28 := R28[0xd0f998cd]
	253	[2126]	LOADK    	R30 := 0.000000
	254	[2126]	CALL     	R28 3 1 ; R28(R29,R30)
	255	[2127]	GETGLOBAL	R28 K60 ; R28 := mPlayerPos
	256	[2127]	GETTABLE 	R28 R28 K62 ; R28 := R28["Prop"]
	257	[2127]	SELF     	R28 R28 K64 ; R29 := R28; R28 := R28[0x188e2bee]
	258	[2127]	LOADK    	R30 := 1.000000
	259	[2127]	CALL     	R28 3 1 ; R28(R29,R30)
	260	[2128]	GETGLOBAL	R28 K60 ; R28 := mPlayerPos
	261	[2128]	SETTABLE 	R28 K65 K66 ; R28["Region"] := -1.000000
	262	[2130]	GETGLOBAL	R28 K67 ; R28 := mFxNodes
	263	[2130]	GETUPVAL 	R29 U6 ; R29 := U6
	264	[2130]	GETTABLE 	R29 R29 K69 ; R29 := R29[0x06d055f9]
	265	[2130]	GETGLOBAL	R30 K70 ; R30 := mVorsPrizeQuestActiveNode
	266	[2130]	LOADK    	R31 := 1.000000
	267	[2130]	LOADK    	R32 := 1.500000
	268	[2130]	CALL     	R29 4 2 ; R29 := R29(R30,R31,R32)
	269	[2130]	SETTABLE 	R28 K68 R29 ; R28["NotificationTime"] := R29
	270	[2132]	GETGLOBAL	R28 K71 ; R28 := mDrag
	271	[2132]	GETTABLE 	R28 R28 K72 ; R28 := R28["mCurrentScroll"]
	272	[2132]	GETTABLE 	R28 R28 K73 ; R28 := R28["x"]
	273	[2133]	GETGLOBAL	R29 K71 ; R29 := mDrag
	274	[2133]	GETTABLE 	R29 R29 K72 ; R29 := R29["mCurrentScroll"]
	275	[2133]	GETTABLE 	R29 R29 K74 ; R29 := R29["y"]
	276	[2134]	GETGLOBAL	R30 K75 ; R30 := Zoom
	277	[2134]	GETTABLE 	R30 R30 K76 ; R30 := R30["STARTING_ZOOM"]
	278	[2134]	SUB      	R30 R30 K77 ; R30 := R30 - 80.000000
	279	[2135]	GETGLOBAL	R31 K78 ; R31 := mSmoothZoom
	280	[2135]	SELF     	R31 R31 K63 ; R32 := R31; R31 := R31[0xd0f998cd]
	281	[2135]	MOVE     	R33 R30 ; R33 := R30
	282	[2135]	CALL     	R31 3 1 ; R31(R32,R33)
	283	[2137]	LOADNIL  	R31 R31 ; R31 := nil
	284	[2138]	GETGLOBAL	R32 K2 ; R32 := 0x7b998233
	285	[2138]	GETGLOBAL	R33 K3 ; R33 := 0x0032441c
	286	[2138]	GETTABLE 	R33 R33 K79 ; R33 := R33["JunctionComplete"]
	287	[2138]	CALL     	R32 2 2 ; R32 := R32(R33)
	288	[2138]	TEST     	R32 1 ; if R32 then PC := 354
	289	[2138]	JMP      	354 ; PC := 354
	290	[2139]	LOADNIL  	R32 R32 ; R32 := nil
	291	[2140]	GETGLOBAL	R33 K80 ; R33 := 0xc8802016
	292	[2140]	GETGLOBAL	R34 K81 ; R34 := mFlatEdges
	293	[2140]	CALL     	R33 2 4 ; R33,R34,R35 := R33(R34)
	294	[2140]	JMP      	315 ; PC := 315
	295	[2141]	GETTABLE 	R38 R37 K82 ; R38 := R37["IsJunction"]
	296	[2141]	TEST     	R38 0 ; if not R38 then PC := 315
	297	[2141]	JMP      	315 ; PC := 315
	298	[2142]	GETTABLE 	R38 R37 K83 ; R38 := R37["NodeA"]
	299	[2142]	GETTABLE 	R38 R38 K27 ; R38 := R38["name"]
	300	[2142]	GETGLOBAL	R39 K3 ; R39 := 0x0032441c
	301	[2142]	GETTABLE 	R39 R39 K79 ; R39 := R39["JunctionComplete"]
	302	[2142]	GETTABLE 	R39 R39 K84 ; R39 := R39["location"]
	303	[2142]	EQ       	0 R38 R39 ; if R38 ~= R39 then PC := 307
	304	[2142]	JMP      	307 ; PC := 307
	305	[2143]	GETTABLE 	R32 R37 K85 ; R32 := R37["NodeB"]
	306	[2143]	JMP      	315 ; PC := 315
	307	[2144]	GETTABLE 	R38 R37 K85 ; R38 := R37["NodeB"]
	308	[2144]	GETTABLE 	R38 R38 K27 ; R38 := R38["name"]
	309	[2144]	GETGLOBAL	R39 K3 ; R39 := 0x0032441c
	310	[2144]	GETTABLE 	R39 R39 K79 ; R39 := R39["JunctionComplete"]
	311	[2144]	GETTABLE 	R39 R39 K84 ; R39 := R39["location"]
	312	[2144]	EQ       	0 R38 R39 ; if R38 ~= R39 then PC := 315
	313	[2144]	JMP      	315 ; PC := 315
	314	[2145]	GETTABLE 	R32 R37 K83 ; R32 := R37["NodeA"]
	315	[2140]	TFORLOOP 	R33 2 ; R36,R37 := R33(R34,R35); if R36 ~= nil then begin PC = 295; R35 := R36 end
	316	[2147]	JMP      	295 ; PC := 295
	317	[2150]	GETGLOBAL	R38 K2 ; R38 := 0x7b998233
	318	[2150]	MOVE     	R39 R32 ; R39 := R32
	319	[2150]	CALL     	R38 2 2 ; R38 := R38(R39)
	320	[2150]	TEST     	R38 1 ; if R38 then PC := 352
	321	[2150]	JMP      	352 ; PC := 352
	322	[2151]	GETGLOBAL	R38 K80 ; R38 := 0xc8802016
	323	[2151]	GETGLOBAL	R39 K81 ; R39 := mFlatEdges
	324	[2151]	CALL     	R38 2 4 ; R38,R39,R40 := R38(R39)
	325	[2151]	JMP      	350 ; PC := 350
	326	[2152]	GETTABLE 	R43 R42 K86 ; R43 := R42["IsShortcut"]
	327	[2152]	TEST     	R43 0 ; if not R43 then PC := 350
	328	[2152]	JMP      	350 ; PC := 350
	329	[2153]	GETTABLE 	R43 R42 K83 ; R43 := R42["NodeA"]
	330	[2153]	EQ       	0 R43 R32 ; if R43 ~= R32 then PC := 340
	331	[2153]	JMP      	340 ; PC := 340
	332	[2154]	GETGLOBAL	R43 K18 ; R43 := mRegions
	333	[2154]	GETTABLE 	R44 R42 K85 ; R44 := R42["NodeB"]
	334	[2154]	GETTABLE 	R44 R44 K87 ; R44 := R44["radialSector"]
	335	[2154]	GETTABLE 	R44 R44 K88 ; R44 := R44["region"]
	336	[2154]	ADD      	R44 R44 K89 ; R44 := R44 + 1.000000
	337	[2154]	GETTABLE 	R31 R43 R44 ; R31 := R43[R44]
	338	[2155]	JMP      	352 ; PC := 352
	339	[2155]	JMP      	350 ; PC := 350
	340	[2156]	GETTABLE 	R43 R42 K85 ; R43 := R42["NodeB"]
	341	[2156]	EQ       	0 R43 R32 ; if R43 ~= R32 then PC := 350
	342	[2156]	JMP      	350 ; PC := 350
	343	[2157]	GETGLOBAL	R43 K18 ; R43 := mRegions
	344	[2157]	GETTABLE 	R44 R42 K83 ; R44 := R42["NodeA"]
	345	[2157]	GETTABLE 	R44 R44 K87 ; R44 := R44["radialSector"]
	346	[2157]	GETTABLE 	R44 R44 K88 ; R44 := R44["region"]
	347	[2157]	ADD      	R44 R44 K89 ; R44 := R44 + 1.000000
	348	[2157]	GETTABLE 	R31 R43 R44 ; R31 := R43[R44]
	349	[2158]	JMP      	352 ; PC := 352
	350	[2151]	TFORLOOP 	R38 2 ; R41,R42 := R38(R39,R40); if R41 ~= nil then begin PC = 326; R40 := R41 end
	351	[2160]	JMP      	326 ; PC := 326
	352	[2163]	GETGLOBAL	R43 K3 ; R43 := 0x0032441c
	353	[2163]	SETTABLE 	R43 K79 K15 ; R43["JunctionComplete"] := nil
	354	[2166]	EQ       	1 R1 K15 ; if R1 == nil then PC := 398
	355	[2166]	JMP      	398 ; PC := 398
	356	[2166]	GETGLOBAL	R43 K13 ; R43 := _T
	357	[2166]	GETTABLE 	R43 R43 K90 ; R43 := R43["WareframeChallenge"]
	358	[2166]	TEST     	R43 1 ; if R43 then PC := 398
	359	[2166]	JMP      	398 ; PC := 398
	360	[2167]	GETUPVAL 	R43 U7 ; R43 := U7
	361	[2167]	MOVE     	R44 R1 ; R44 := R1
	362	[2167]	GETTABLE 	R45 R1 K91 ; R45 := R1["zoomedFraming"]
	363	[2167]	CALL     	R43 3 4 ; R43,R44,R45 := R43(R44,R45)
	364	[2175]	CLOSURE  	R46 1 ; R46 := closure(Function #2)
	365	[2175]	MOVE     	R0 R30 ; R0 := R30
	366	[2175]	MOVE     	R0 R45 ; R0 := R45
	367	[2175]	MOVE     	R0 R28 ; R0 := R28
	368	[2175]	MOVE     	R0 R43 ; R0 := R43
	369	[2175]	MOVE     	R0 R29 ; R0 := R29
	370	[2175]	MOVE     	R0 R44 ; R0 := R44
	371	[2177]	GETUPVAL 	R47 U8 ; R47 := U8
	372	[2177]	SELF     	R47 R47 K92 ; R48 := R47; R47 := R47[0xbd2e96ea]
	373	[2177]	LOADK    	R49 K93 ; R49 := 0.550000
	374	[2177]	CLOSURE  	R50 2 ; R50 := closure(Function #3)
	375	[2177]	GETUPVAL 	R0 U9 ; R0 := U9
	376	[2177]	MOVE     	R0 R1 ; R0 := R1
	377	[2177]	CALL     	R47 4 1 ; R47(R48,R49,R50)
	378	[2178]	GETGLOBAL	R47 K94 ; R47 := 0x25312c9b
	379	[2178]	GETGLOBAL	R48 K95 ; R48 := 0xae91e43b
	380	[2178]	LOADK    	R49 K96 ; R49 := "_root"
	381	[2178]	LOADK    	R50 := 0.000000
	382	[2178]	NEWTABLE 	R51 1 0 ; R51 := {}
	383	[2178]	MOVE     	R52 R46 ; R52 := R46
	384	[2178]	SETLIST  	R51 1 1 ; R51[(1-1)*FPF+i] := R(51+i), 1 <= i <= 1
	385	[2178]	NEWTABLE 	R52 1 0 ; R52 := {}
	386	[2178]	LOADK    	R53 := 1.000000
	387	[2178]	SETLIST  	R52 1 1 ; R52[(1-1)*FPF+i] := R(52+i), 1 <= i <= 1
	388	[2178]	LOADK    	R53 := 0.750000
	389	[2178]	LOADK    	R54 K98 ; R54 := 0.100000
	390	[2187]	CLOSURE  	R55 3 ; R55 := closure(Function #4)
	391	[2187]	MOVE     	R0 R31 ; R0 := R31
	392	[2187]	GETUPVAL 	R0 U10 ; R0 := U10
	393	[2187]	GETUPVAL 	R0 U11 ; R0 := U11
	394	[2187]	GETUPVAL 	R0 U12 ; R0 := U12
	395	[2178]	CALL     	R47 9 1 ; R47(R48,R49,R50,R51,R52,R53,R54,R55)
	396	[2187]	CLOSE    	R43 ; SAVE R43,...
	397	[2187]	JMP      	417 ; PC := 417
	398	[2189]	GETGLOBAL	R43 K94 ; R43 := 0x25312c9b
	399	[2189]	GETGLOBAL	R44 K95 ; R44 := 0xae91e43b
	400	[2189]	LOADK    	R45 K96 ; R45 := "_root"
	401	[2189]	LOADK    	R46 := 0.000000
	402	[2189]	NEWTABLE 	R47 1 0 ; R47 := {}
	403	[2189]	CLOSURE  	R48 4 ; R48 := closure(Function #5)
	404	[2189]	MOVE     	R0 R30 ; R0 := R30
	405	[2189]	SETLIST  	R47 1 1 ; R47[(1-1)*FPF+i] := R(47+i), 1 <= i <= 1
	406	[2189]	NEWTABLE 	R48 1 0 ; R48 := {}
	407	[2189]	LOADK    	R49 := 1.000000
	408	[2189]	SETLIST  	R48 1 1 ; R48[(1-1)*FPF+i] := R(48+i), 1 <= i <= 1
	409	[2189]	LOADK    	R49 K99 ; R49 := 0.650000
	410	[2189]	LOADK    	R50 := 0.000000
	411	[2203]	CLOSURE  	R51 5 ; R51 := closure(Function #6)
	412	[2203]	GETUPVAL 	R0 U11 ; R0 := U11
	413	[2203]	GETUPVAL 	R0 U12 ; R0 := U12
	414	[2203]	GETUPVAL 	R0 U8 ; R0 := U8
	415	[2203]	GETUPVAL 	R0 U13 ; R0 := U13
	416	[2189]	CALL     	R43 9 1 ; R43(R44,R45,R46,R47,R48,R49,R50,R51)
	417	[2205]	RETURN   	R0 1 ; return 

function #54 <?:2207,2219> (45 instructions, 180 bytes at 000002112521C8D0)
1 param, 9 slots, 0 upvalues, 0 locals, 13 constants, 0 functions
	1	[2208]	GETTABLE 	R1 R0 K0 ; R1 := R0["radialSector"]
	2	[2208]	GETTABLE 	R1 R1 K1 ; R1 := R1["region"]
	3	[2208]	ADD      	R1 R1 K2 ; R1 := R1 + 1.000000
	4	[2209]	EQ       	1 R1 K3 ; if R1 == 17.000000 then PC := 7
	5	[2209]	JMP      	7 ; PC := 7
	6	[2209]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 7
	7	[2209]	OP_LOADBOOL	R2 1 0 ; R2 := true
	8	[2210]	EQ       	1 R1 K4 ; if R1 == 15.000000 then PC := 11
	9	[2210]	JMP      	11 ; PC := 11
	10	[2210]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 11
	11	[2210]	OP_LOADBOOL	R3 1 0 ; R3 := true
	12	[2211]	EQ       	1 R1 K5 ; if R1 == 14.000000 then PC := 15
	13	[2211]	JMP      	15 ; PC := 15
	14	[2211]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 15
	15	[2211]	OP_LOADBOOL	R4 1 0 ; R4 := true
	16	[2212]	EQ       	1 R1 K6 ; if R1 == 22.000000 then PC := 19
	17	[2212]	JMP      	19 ; PC := 19
	18	[2212]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 19
	19	[2212]	OP_LOADBOOL	R5 1 0 ; R5 := true
	20	[2213]	TEST     	R2 1 ; if R2 then PC := 28
	21	[2213]	JMP      	28 ; PC := 28
	22	[2213]	TEST     	R3 1 ; if R3 then PC := 28
	23	[2213]	JMP      	28 ; PC := 28
	24	[2213]	TEST     	R4 1 ; if R4 then PC := 28
	25	[2213]	JMP      	28 ; PC := 28
	26	[2213]	TEST     	R5 0 ; if not R5 then PC := 30
	27	[2213]	JMP      	30 ; PC := 30
	28	[2214]	OP_LOADBOOL	R6 0 0 ; R6 := false
	29	[2214]	RETURN   	R6 2 ; return R6 
	30	[2216]	GETGLOBAL	R6 K7 ; R6 := mRegions
	31	[2216]	GETTABLE 	R6 R6 R1 ; R6 := R6[R1]
	32	[2216]	GETTABLE 	R6 R6 K8 ; R6 := R6["instance"]
	33	[2216]	SELF     	R6 R6 K9 ; R7 := R6; R6 := R6[0x1f420a3a]
	34	[2216]	GETTABLE 	R8 R0 K10 ; R8 := R0["position"]
	35	[2216]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	36	[2217]	LOADK    	R7 K11 ; R7 := 0.005000
	37	[2218]	GETGLOBAL	R8 K12 ; R8 := mRegionRadius
	38	[2218]	GETTABLE 	R8 R8 R1 ; R8 := R8[R1]
	39	[2218]	ADD      	R8 R8 R7 ; R8 := R8 + R7
	40	[2218]	LT       	1 R6 R8 ; if R6 < R8 then PC := 43
	41	[2218]	JMP      	43 ; PC := 43
	42	[2218]	OP_LOADBOOL	R8 0 1 ; R8 := false; PC := 43
	43	[2218]	OP_LOADBOOL	R8 1 0 ; R8 := true
	44	[2218]	RETURN   	R8 2 ; return R8 
	45	[2219]	RETURN   	R0 1 ; return 

function #55 <?:2221,2359> (369 instructions, 1476 bytes at 000002111E8532C0)
1 param, 21 slots, 6 upvalues, 0 locals, 59 constants, 0 functions
	1	[2222]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[2222]	GETTABLE 	R1 R1 K1 ; R1 := R1["CustomStarChartNodeFilter"]
	3	[2222]	TEST     	R1 0 ; if not R1 then PC := 42
	4	[2222]	JMP      	42 ; PC := 42
	5	[2223]	GETGLOBAL	R1 K0 ; R1 := _T
	6	[2223]	GETTABLE 	R1 R1 K1 ; R1 := R1["CustomStarChartNodeFilter"]
	7	[2223]	GETTABLE 	R1 R1 K2 ; R1 := R1["Nodes"]
	8	[2223]	TEST     	R1 0 ; if not R1 then PC := 23
	9	[2223]	JMP      	23 ; PC := 23
	10	[2224]	GETGLOBAL	R1 K3 ; R1 := 0xcfc01047
	11	[2224]	GETGLOBAL	R2 K0 ; R2 := _T
	12	[2224]	GETTABLE 	R2 R2 K1 ; R2 := R2["CustomStarChartNodeFilter"]
	13	[2224]	GETTABLE 	R2 R2 K2 ; R2 := R2["Nodes"]
	14	[2224]	CALL     	R1 2 4 ; R1,R2,R3 := R1(R2)
	15	[2224]	JMP      	21 ; PC := 21
	16	[2225]	GETTABLE 	R6 R0 K4 ; R6 := R0["name"]
	17	[2225]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 21
	18	[2225]	JMP      	21 ; PC := 21
	19	[2226]	OP_LOADBOOL	R6 1 0 ; R6 := true
	20	[2226]	RETURN   	R6 2 ; return R6 
	21	[2224]	TFORLOOP 	R1 2 ; R4,R5 := R1(R2,R3); if R4 ~= nil then begin PC = 16; R3 := R4 end
	22	[2227]	JMP      	16 ; PC := 16
	23	[2230]	GETGLOBAL	R6 K0 ; R6 := _T
	24	[2230]	GETTABLE 	R6 R6 K1 ; R6 := R6["CustomStarChartNodeFilter"]
	25	[2230]	GETTABLE 	R6 R6 K5 ; R6 := R6["Keys"]
	26	[2230]	TEST     	R6 0 ; if not R6 then PC := 42
	27	[2230]	JMP      	42 ; PC := 42
	28	[2231]	GETGLOBAL	R6 K3 ; R6 := 0xcfc01047
	29	[2231]	GETGLOBAL	R7 K0 ; R7 := _T
	30	[2231]	GETTABLE 	R7 R7 K1 ; R7 := R7["CustomStarChartNodeFilter"]
	31	[2231]	GETTABLE 	R7 R7 K5 ; R7 := R7["Keys"]
	32	[2231]	CALL     	R6 2 4 ; R6,R7,R8 := R6(R7)
	33	[2231]	JMP      	40 ; PC := 40
	34	[2232]	GETTABLE 	R11 R0 K6 ; R11 := R0["mission"]
	35	[2232]	GETTABLE 	R11 R11 K7 ; R11 := R11["levelKeyName"]
	36	[2232]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 40
	37	[2232]	JMP      	40 ; PC := 40
	38	[2233]	OP_LOADBOOL	R11 1 0 ; R11 := true
	39	[2233]	RETURN   	R11 2 ; return R11 
	40	[2231]	TFORLOOP 	R6 2 ; R9,R10 := R6(R7,R8); if R9 ~= nil then begin PC = 34; R8 := R9 end
	41	[2234]	JMP      	34 ; PC := 34
	42	[2239]	GETTABLE 	R11 R0 K8 ; R11 := R0["nodeType"]
	43	[2239]	EQ       	0 R11 K10 ; if R11 ~= 2.000000 then PC := 47
	44	[2239]	JMP      	47 ; PC := 47
	45	[2241]	OP_LOADBOOL	R11 0 0 ; R11 := false
	46	[2241]	RETURN   	R11 2 ; return R11 
	47	[2244]	GETTABLE 	R11 R0 K11 ; R11 := R0["locTag"]
	48	[2244]	GETGLOBAL	R12 K12 ; R12 := EMPTY_SYMBOL
	49	[2244]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 53
	50	[2244]	JMP      	53 ; PC := 53
	51	[2246]	OP_LOADBOOL	R11 0 0 ; R11 := false
	52	[2246]	RETURN   	R11 2 ; return R11 
	53	[2249]	GETGLOBAL	R11 K13 ; R11 := 0x64fb1586
	54	[2249]	GETTABLE 	R12 R0 K4 ; R12 := R0["name"]
	55	[2249]	CALL     	R11 2 2 ; R11 := R11(R12)
	56	[2250]	GETTABLE 	R12 R0 K14 ; R12 := R0["missionTag"]
	57	[2251]	LOADNIL  	R13 R13 ; R13 := nil
	58	[2256]	GETGLOBAL	R14 K15 ; R14 := mRailJack
	59	[2256]	GETTABLE 	R14 R14 K16 ; R14 := R14["Active"]
	60	[2256]	TEST     	R14 0 ; if not R14 then PC := 202
	61	[2256]	JMP      	202 ; PC := 202
	62	[2260]	LOADNIL  	R14 R14 ; R14 := nil
	63	[2262]	GETGLOBAL	R15 K17 ; R15 := 0xbe190284
	64	[2262]	SELF     	R15 R15 K18 ; R16 := R15; R15 := R15[0xf2deaf69]
	65	[2262]	GETGLOBAL	R17 K19 ; R17 := gLotusGameRulesType
	66	[2262]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	67	[2262]	TEST     	R15 0 ; if not R15 then PC := 73
	68	[2262]	JMP      	73 ; PC := 73
	69	[2263]	GETGLOBAL	R15 K17 ; R15 := 0xbe190284
	70	[2263]	SELF     	R15 R15 K20 ; R16 := R15; R15 := R15[0xef893aec]
	71	[2263]	CALL     	R15 2 2 ; R15 := R15(R16)
	72	[2263]	MOVE     	R14 R15 ; R14 := R15
	73	[2266]	GETGLOBAL	R15 K21 ; R15 := 0xe7f2b02f
	74	[2266]	SELF     	R15 R15 K22 ; R16 := R15; R15 := R15[0xca33534d]
	75	[2266]	CALL     	R15 2 2 ; R15 := R15(R16)
	76	[2266]	TEST     	R15 1 ; if R15 then PC := 103
	77	[2266]	JMP      	103 ; PC := 103
	78	[2266]	GETGLOBAL	R15 K23 ; R15 := 0x7b998233
	79	[2266]	GETGLOBAL	R16 K21 ; R16 := 0xe7f2b02f
	80	[2266]	SELF     	R16 R16 K24 ; R17 := R16; R16 := R16[0x565be9ee]
	81	[2266]	CALL     	R16 2 0 ; R16,... := R16(R17)
	82	[2266]	CALL     	R15 0 2 ; R15 := R15(R16,...)
	83	[2266]	TEST     	R15 0 ; if not R15 then PC := 103
	84	[2266]	JMP      	103 ; PC := 103
	85	[2266]	EQ       	1 R14 K25 ; if R14 == nil then PC := 101
	86	[2266]	JMP      	101 ; PC := 101
	87	[2266]	GETGLOBAL	R15 K23 ; R15 := 0x7b998233
	88	[2266]	GETTABLE 	R16 R14 K7 ; R16 := R14["levelKeyName"]
	89	[2266]	CALL     	R15 2 2 ; R15 := R15(R16)
	90	[2266]	TEST     	R15 1 ; if R15 then PC := 101
	91	[2266]	JMP      	101 ; PC := 101
	92	[2266]	GETGLOBAL	R15 K26 ; R15 := 0x0469f296
	93	[2266]	GETTABLE 	R16 R14 K7 ; R16 := R14["levelKeyName"]
	94	[2266]	SELF     	R16 R16 K27 ; R17 := R16; R16 := R16[0xed4e0128]
	95	[2266]	CALL     	R16 2 0 ; R16,... := R16(R17)
	96	[2266]	CALL     	R15 0 2 ; R15 := R15(R16,...)
	97	[2266]	GETUPVAL 	R16 U0 ; R16 := U0
	98	[2266]	GETTABLE 	R16 R16 K28 ; R16 := R16["SCENARIO_EVENT_SPACE_TAG"]
	99	[2266]	EQ       	1 R15 R16 ; if R15 == R16 then PC := 102
	100	[2266]	JMP      	102 ; PC := 102
	101	[2266]	OP_LOADBOOL	R15 0 1 ; R15 := false; PC := 102
	102	[2266]	OP_LOADBOOL	R15 1 0 ; R15 := true
	103	[2267]	TEST     	R15 0 ; if not R15 then PC := 121
	104	[2267]	JMP      	121 ; PC := 121
	105	[2268]	GETUPVAL 	R16 U1 ; R16 := U1
	106	[2268]	GETTABLE 	R16 R16 K29 ; R16 := R16["SQUAD_LINK_EVENT"]
	107	[2268]	EQ       	0 R12 R16 ; if R12 ~= R16 then PC := 119
	108	[2268]	JMP      	119 ; PC := 119
	109	[2268]	GETGLOBAL	R16 K30 ; R16 := 0x0032441c
	110	[2268]	GETTABLE 	R16 R16 K31 ; R16 := R16["CachedGoalInfo"]
	111	[2268]	GETTABLE 	R16 R16 R11 ; R16 := R16[R11]
	112	[2268]	TEST     	R16 1 ; if R16 then PC := 117
	113	[2268]	JMP      	117 ; PC := 117
	114	[2268]	GETUPVAL 	R16 U2 ; R16 := U2
	115	[2268]	TEST     	R16 0 ; if not R16 then PC := 119
	116	[2268]	JMP      	119 ; PC := 119
	117	[2270]	OP_LOADBOOL	R13 1 0 ; R13 := true
	118	[2270]	JMP      	121 ; PC := 121
	119	[2272]	OP_LOADBOOL	R16 0 0 ; R16 := false
	120	[2272]	RETURN   	R16 2 ; return R16 
	121	[2277]	GETGLOBAL	R16 K32 ; R16 := 0x7f5022cf
	122	[2277]	GETTABLE 	R16 R16 K33 ; R16 := R16[0xa5c556b9]
	123	[2277]	MOVE     	R17 R11 ; R17 := R11
	124	[2277]	LOADK    	R18 K34 ; R18 := "Dojo"
	125	[2277]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	126	[2277]	EQ       	0 R16 K25 ; if R16 ~= nil then PC := 129
	127	[2277]	JMP      	129 ; PC := 129
	128	[2277]	OP_LOADBOOL	R16 0 1 ; R16 := false; PC := 129
	129	[2277]	OP_LOADBOOL	R16 1 0 ; R16 := true
	130	[2280]	GETGLOBAL	R17 K17 ; R17 := 0xbe190284
	131	[2280]	SELF     	R17 R17 K18 ; R18 := R17; R17 := R17[0xf2deaf69]
	132	[2280]	GETGLOBAL	R19 K35 ; R19 := gLotusDojoGameRulesType
	133	[2280]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	134	[2280]	TEST     	R17 0 ; if not R17 then PC := 141
	135	[2280]	JMP      	141 ; PC := 141
	136	[2281]	TEST     	R16 0 ; if not R16 then PC := 162
	137	[2281]	JMP      	162 ; PC := 162
	138	[2282]	OP_LOADBOOL	R17 0 0 ; R17 := false
	139	[2282]	RETURN   	R17 2 ; return R17 
	140	[2283]	JMP      	162 ; PC := 162
	141	[2284]	GETGLOBAL	R17 K17 ; R17 := 0xbe190284
	142	[2284]	SELF     	R17 R17 K18 ; R18 := R17; R17 := R17[0xf2deaf69]
	143	[2284]	GETGLOBAL	R19 K36 ; R19 := gLotusHubGameRulesType
	144	[2284]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	145	[2284]	TEST     	R17 0 ; if not R17 then PC := 162
	146	[2284]	JMP      	162 ; PC := 162
	147	[2284]	GETTABLE 	R17 R0 K8 ; R17 := R0["nodeType"]
	148	[2284]	EQ       	0 R17 K37 ; if R17 ~= 3.000000 then PC := 162
	149	[2284]	JMP      	162 ; PC := 162
	150	[2285]	GETGLOBAL	R17 K21 ; R17 := 0xe7f2b02f
	151	[2285]	SELF     	R17 R17 K38 ; R18 := R17; R17 := R17[0x199919fe]
	152	[2285]	CALL     	R17 2 2 ; R17 := R17(R18)
	153	[2286]	GETGLOBAL	R18 K32 ; R18 := 0x7f5022cf
	154	[2286]	GETTABLE 	R18 R18 K33 ; R18 := R18[0xa5c556b9]
	155	[2286]	MOVE     	R19 R17 ; R19 := R17
	156	[2286]	MOVE     	R20 R11 ; R20 := R11
	157	[2286]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	158	[2286]	EQ       	0 R18 K39 ; if R18 ~= 1.000000 then PC := 162
	159	[2286]	JMP      	162 ; PC := 162
	160	[2287]	OP_LOADBOOL	R18 0 0 ; R18 := false
	161	[2287]	RETURN   	R18 2 ; return R18 
	162	[2291]	GETGLOBAL	R18 K17 ; R18 := 0xbe190284
	163	[2291]	SELF     	R18 R18 K18 ; R19 := R18; R18 := R18[0xf2deaf69]
	164	[2291]	GETGLOBAL	R20 K35 ; R20 := gLotusDojoGameRulesType
	165	[2291]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	166	[2291]	TEST     	R18 0 ; if not R18 then PC := 173
	167	[2291]	JMP      	173 ; PC := 173
	168	[2291]	GETTABLE 	R18 R0 K8 ; R18 := R0["nodeType"]
	169	[2291]	EQ       	0 R18 K37 ; if R18 ~= 3.000000 then PC := 173
	170	[2291]	JMP      	173 ; PC := 173
	171	[2294]	OP_LOADBOOL	R18 0 0 ; R18 := false
	172	[2294]	RETURN   	R18 2 ; return R18 
	173	[2297]	GETGLOBAL	R18 K17 ; R18 := 0xbe190284
	174	[2297]	SELF     	R18 R18 K18 ; R19 := R18; R18 := R18[0xf2deaf69]
	175	[2297]	GETGLOBAL	R20 K36 ; R20 := gLotusHubGameRulesType
	176	[2297]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	177	[2297]	TEST     	R18 0 ; if not R18 then PC := 183
	178	[2297]	JMP      	183 ; PC := 183
	179	[2297]	TEST     	R16 0 ; if not R16 then PC := 183
	180	[2297]	JMP      	183 ; PC := 183
	181	[2300]	OP_LOADBOOL	R18 0 0 ; R18 := false
	182	[2300]	RETURN   	R18 2 ; return R18 
	183	[2304]	TEST     	R16 1 ; if R16 then PC := 222
	184	[2304]	JMP      	222 ; PC := 222
	185	[2305]	TEST     	R13 1 ; if R13 then PC := 222
	186	[2305]	JMP      	222 ; PC := 222
	187	[2306]	GETUPVAL 	R18 U3 ; R18 := U3
	188	[2306]	MOVE     	R19 R0 ; R19 := R0
	189	[2306]	CALL     	R18 2 2 ; R18 := R18(R19)
	190	[2306]	TEST     	R18 1 ; if R18 then PC := 222
	191	[2306]	JMP      	222 ; PC := 222
	192	[2307]	GETTABLE 	R18 R0 K6 ; R18 := R0["mission"]
	193	[2307]	GETTABLE 	R18 R18 K40 ; R18 := R18["missionType"]
	194	[2307]	EQ       	0 R18 K41 ; if R18 ~= 31.000000 then PC := 199
	195	[2307]	JMP      	199 ; PC := 199
	196	[2307]	GETTABLE 	R18 R0 K8 ; R18 := R0["nodeType"]
	197	[2307]	EQ       	0 R18 K42 ; if R18 ~= 6.000000 then PC := 222
	198	[2307]	JMP      	222 ; PC := 222
	199	[2309]	OP_LOADBOOL	R18 0 0 ; R18 := false
	200	[2309]	RETURN   	R18 2 ; return R18 
	201	[2310]	JMP      	222 ; PC := 222
	202	[2312]	GETTABLE 	R18 R0 K6 ; R18 := R0["mission"]
	203	[2312]	GETTABLE 	R18 R18 K40 ; R18 := R18["missionType"]
	204	[2312]	EQ       	0 R18 K41 ; if R18 ~= 31.000000 then PC := 222
	205	[2312]	JMP      	222 ; PC := 222
	206	[2313]	GETUPVAL 	R18 U1 ; R18 := U1
	207	[2313]	GETTABLE 	R18 R18 K29 ; R18 := R18["SQUAD_LINK_EVENT"]
	208	[2313]	EQ       	0 R12 R18 ; if R12 ~= R18 then PC := 220
	209	[2313]	JMP      	220 ; PC := 220
	210	[2313]	GETGLOBAL	R18 K30 ; R18 := 0x0032441c
	211	[2313]	GETTABLE 	R18 R18 K31 ; R18 := R18["CachedGoalInfo"]
	212	[2313]	GETTABLE 	R18 R18 R11 ; R18 := R18[R11]
	213	[2313]	TEST     	R18 1 ; if R18 then PC := 218
	214	[2313]	JMP      	218 ; PC := 218
	215	[2313]	GETUPVAL 	R18 U2 ; R18 := U2
	216	[2313]	TEST     	R18 0 ; if not R18 then PC := 220
	217	[2313]	JMP      	220 ; PC := 220
	218	[2315]	OP_LOADBOOL	R13 1 0 ; R13 := true
	219	[2315]	JMP      	222 ; PC := 222
	220	[2317]	OP_LOADBOOL	R18 0 0 ; R18 := false
	221	[2317]	RETURN   	R18 2 ; return R18 
	222	[2322]	GETTABLE 	R18 R0 K8 ; R18 := R0["nodeType"]
	223	[2322]	EQ       	0 R18 K39 ; if R18 ~= 1.000000 then PC := 244
	224	[2322]	JMP      	244 ; PC := 244
	225	[2322]	GETGLOBAL	R18 K30 ; R18 := 0x0032441c
	226	[2322]	GETTABLE 	R18 R18 K31 ; R18 := R18["CachedGoalInfo"]
	227	[2322]	GETTABLE 	R18 R18 R11 ; R18 := R18[R11]
	228	[2322]	TEST     	R18 1 ; if R18 then PC := 244
	229	[2322]	JMP      	244 ; PC := 244
	230	[2322]	GETGLOBAL	R18 K0 ; R18 := _T
	231	[2322]	GETTABLE 	R18 R18 K43 ; R18 := R18["WorldStateDerelictNodes"]
	232	[2322]	TEST     	R18 0 ; if not R18 then PC := 242
	233	[2322]	JMP      	242 ; PC := 242
	234	[2322]	GETGLOBAL	R18 K0 ; R18 := _T
	235	[2322]	GETTABLE 	R18 R18 K43 ; R18 := R18["WorldStateDerelictNodes"]
	236	[2322]	GETGLOBAL	R19 K13 ; R19 := 0x64fb1586
	237	[2322]	GETTABLE 	R20 R0 K4 ; R20 := R0["name"]
	238	[2322]	CALL     	R19 2 2 ; R19 := R19(R20)
	239	[2322]	GETTABLE 	R18 R18 R19 ; R18 := R18[R19]
	240	[2322]	TEST     	R18 1 ; if R18 then PC := 244
	241	[2322]	JMP      	244 ; PC := 244
	242	[2323]	OP_LOADBOOL	R18 0 0 ; R18 := false
	243	[2323]	RETURN   	R18 2 ; return R18 
	244	[2325]	GETTABLE 	R18 R0 K44 ; R18 := R0["region"]
	245	[2325]	ADD      	R18 R18 K39 ; R18 := R18 + 1.000000
	246	[2325]	GETUPVAL 	R19 U0 ; R19 := U0
	247	[2325]	GETTABLE 	R19 R19 K45 ; R19 := R19["REGION_ID_MOON"]
	248	[2325]	EQ       	1 R18 R19 ; if R18 == R19 then PC := 258
	249	[2325]	JMP      	258 ; PC := 258
	250	[2325]	GETTABLE 	R18 R0 K8 ; R18 := R0["nodeType"]
	251	[2325]	EQ       	0 R18 K42 ; if R18 ~= 6.000000 then PC := 266
	252	[2325]	JMP      	266 ; PC := 266
	253	[2325]	GETTABLE 	R18 R0 K4 ; R18 := R0["name"]
	254	[2325]	GETUPVAL 	R19 U1 ; R19 := U1
	255	[2325]	GETTABLE 	R19 R19 K46 ; R19 := R19["MOON_SHORTCUT_TAG"]
	256	[2325]	EQ       	0 R18 R19 ; if R18 ~= R19 then PC := 266
	257	[2325]	JMP      	266 ; PC := 266
	258	[2325]	GETUPVAL 	R18 U4 ; R18 := U4
	259	[2325]	GETUPVAL 	R19 U0 ; R19 := U0
	260	[2325]	GETTABLE 	R19 R19 K45 ; R19 := R19["REGION_ID_MOON"]
	261	[2325]	GETTABLE 	R18 R18 R19 ; R18 := R18[R19]
	262	[2325]	EQ       	0 R18 K47 ; if R18 ~= true then PC := 266
	263	[2325]	JMP      	266 ; PC := 266
	264	[2326]	OP_LOADBOOL	R18 0 0 ; R18 := false
	265	[2326]	RETURN   	R18 2 ; return R18 
	266	[2328]	GETTABLE 	R18 R0 K44 ; R18 := R0["region"]
	267	[2328]	ADD      	R18 R18 K39 ; R18 := R18 + 1.000000
	268	[2328]	GETUPVAL 	R19 U0 ; R19 := U0
	269	[2328]	GETTABLE 	R19 R19 K48 ; R19 := R19["REGION_ID_FORTRESS"]
	270	[2328]	EQ       	0 R18 R19 ; if R18 ~= R19 then PC := 280
	271	[2328]	JMP      	280 ; PC := 280
	272	[2328]	GETUPVAL 	R18 U4 ; R18 := U4
	273	[2328]	GETUPVAL 	R19 U0 ; R19 := U0
	274	[2328]	GETTABLE 	R19 R19 K48 ; R19 := R19["REGION_ID_FORTRESS"]
	275	[2328]	GETTABLE 	R18 R18 R19 ; R18 := R18[R19]
	276	[2328]	EQ       	0 R18 K47 ; if R18 ~= true then PC := 280
	277	[2328]	JMP      	280 ; PC := 280
	278	[2329]	OP_LOADBOOL	R18 0 0 ; R18 := false
	279	[2329]	RETURN   	R18 2 ; return R18 
	280	[2331]	GETGLOBAL	R18 K30 ; R18 := 0x0032441c
	281	[2331]	GETTABLE 	R18 R18 K49 ; R18 := R18["StarChartHiddenEventNode"]
	282	[2331]	EQ       	0 R11 R18 ; if R11 ~= R18 then PC := 286
	283	[2331]	JMP      	286 ; PC := 286
	284	[2332]	OP_LOADBOOL	R18 0 0 ; R18 := false
	285	[2332]	RETURN   	R18 2 ; return R18 
	286	[2335]	GETGLOBAL	R18 K50 ; R18 := mDebugUnlockAllMissions
	287	[2335]	TEST     	R18 1 ; if R18 then PC := 311
	288	[2335]	JMP      	311 ; PC := 311
	289	[2335]	GETUPVAL 	R18 U1 ; R18 := U1
	290	[2335]	GETTABLE 	R18 R18 K51 ; R18 := R18["TENNOCON_RELAY"]
	291	[2335]	EQ       	0 R12 R18 ; if R12 ~= R18 then PC := 311
	292	[2335]	JMP      	311 ; PC := 311
	293	[2335]	GETGLOBAL	R18 K30 ; R18 := 0x0032441c
	294	[2335]	GETTABLE 	R18 R18 K31 ; R18 := R18["CachedGoalInfo"]
	295	[2335]	GETTABLE 	R18 R18 R11 ; R18 := R18[R11]
	296	[2335]	TEST     	R18 0 ; if not R18 then PC := 309
	297	[2335]	JMP      	309 ; PC := 309
	298	[2335]	GETGLOBAL	R18 K23 ; R18 := 0x7b998233
	299	[2335]	GETGLOBAL	R19 K52 ; R19 := 0x25d99d89
	300	[2335]	CALL     	R18 2 2 ; R18 := R18(R19)
	301	[2335]	TEST     	R18 1 ; if R18 then PC := 311
	302	[2335]	JMP      	311 ; PC := 311
	303	[2335]	GETUPVAL 	R18 U5 ; R18 := U5
	304	[2335]	GETTABLE 	R18 R18 K53 ; R18 := R18[0xbc682855]
	305	[2335]	GETGLOBAL	R19 K52 ; R19 := 0x25d99d89
	306	[2335]	CALL     	R18 2 2 ; R18 := R18(R19)
	307	[2335]	TEST     	R18 1 ; if R18 then PC := 311
	308	[2335]	JMP      	311 ; PC := 311
	309	[2338]	OP_LOADBOOL	R18 0 0 ; R18 := false
	310	[2338]	RETURN   	R18 2 ; return R18 
	311	[2341]	GETGLOBAL	R18 K50 ; R18 := mDebugUnlockAllMissions
	312	[2341]	TEST     	R18 1 ; if R18 then PC := 334
	313	[2341]	JMP      	334 ; PC := 334
	314	[2341]	GETUPVAL 	R18 U1 ; R18 := U1
	315	[2341]	GETTABLE 	R18 R18 K54 ; R18 := R18["DEVSTREAM_RELAY"]
	316	[2341]	EQ       	1 R12 R18 ; if R12 == R18 then PC := 323
	317	[2341]	JMP      	323 ; PC := 323
	318	[2341]	GETTABLE 	R18 R0 K4 ; R18 := R0["name"]
	319	[2341]	GETUPVAL 	R19 U1 ; R19 := U1
	320	[2341]	GETTABLE 	R19 R19 K55 ; R19 := R19["TENNOCON_RELAY_B_NODE"]
	321	[2341]	EQ       	0 R18 R19 ; if R18 ~= R19 then PC := 334
	322	[2341]	JMP      	334 ; PC := 334
	323	[2341]	GETGLOBAL	R18 K30 ; R18 := 0x0032441c
	324	[2341]	GETTABLE 	R18 R18 K31 ; R18 := R18["CachedGoalInfo"]
	325	[2341]	TEST     	R18 0 ; if not R18 then PC := 332
	326	[2341]	JMP      	332 ; PC := 332
	327	[2341]	GETGLOBAL	R18 K30 ; R18 := 0x0032441c
	328	[2341]	GETTABLE 	R18 R18 K31 ; R18 := R18["CachedGoalInfo"]
	329	[2341]	GETTABLE 	R18 R18 R11 ; R18 := R18[R11]
	330	[2341]	TEST     	R18 1 ; if R18 then PC := 334
	331	[2341]	JMP      	334 ; PC := 334
	332	[2343]	OP_LOADBOOL	R18 0 0 ; R18 := false
	333	[2343]	RETURN   	R18 2 ; return R18 
	334	[2346]	GETTABLE 	R18 R0 K44 ; R18 := R0["region"]
	335	[2346]	ADD      	R18 R18 K39 ; R18 := R18 + 1.000000
	336	[2346]	GETUPVAL 	R19 U0 ; R19 := U0
	337	[2346]	GETTABLE 	R19 R19 K56 ; R19 := R19["REGION_ID_DARK_SECTOR"]
	338	[2346]	EQ       	0 R18 R19 ; if R18 ~= R19 then PC := 342
	339	[2346]	JMP      	342 ; PC := 342
	340	[2347]	OP_LOADBOOL	R18 0 0 ; R18 := false
	341	[2347]	RETURN   	R18 2 ; return R18 
	342	[2350]	GETUPVAL 	R18 U2 ; R18 := U2
	343	[2350]	TEST     	R18 1 ; if R18 then PC := 356
	344	[2350]	JMP      	356 ; PC := 356
	345	[2350]	GETUPVAL 	R18 U1 ; R18 := U1
	346	[2350]	GETTABLE 	R18 R18 K29 ; R18 := R18["SQUAD_LINK_EVENT"]
	347	[2350]	EQ       	0 R12 R18 ; if R12 ~= R18 then PC := 356
	348	[2350]	JMP      	356 ; PC := 356
	349	[2350]	GETGLOBAL	R18 K30 ; R18 := 0x0032441c
	350	[2350]	GETTABLE 	R18 R18 K31 ; R18 := R18["CachedGoalInfo"]
	351	[2350]	GETTABLE 	R18 R18 R11 ; R18 := R18[R11]
	352	[2350]	TEST     	R18 1 ; if R18 then PC := 356
	353	[2350]	JMP      	356 ; PC := 356
	354	[2351]	OP_LOADBOOL	R18 0 0 ; R18 := false
	355	[2351]	RETURN   	R18 2 ; return R18 
	356	[2354]	GETUPVAL 	R18 U1 ; R18 := U1
	357	[2354]	GETTABLE 	R18 R18 K57 ; R18 := R18["NEMESIS_SHOWDOWN"]
	358	[2354]	EQ       	0 R12 R18 ; if R12 ~= R18 then PC := 367
	359	[2354]	JMP      	367 ; PC := 367
	360	[2354]	GETGLOBAL	R18 K0 ; R18 := _T
	361	[2354]	GETTABLE 	R18 R18 K58 ; R18 := R18["CachedNemesisMissions"]
	362	[2354]	GETTABLE 	R18 R18 R11 ; R18 := R18[R11]
	363	[2354]	TEST     	R18 1 ; if R18 then PC := 367
	364	[2354]	JMP      	367 ; PC := 367
	365	[2355]	OP_LOADBOOL	R18 0 0 ; R18 := false
	366	[2355]	RETURN   	R18 2 ; return R18 
	367	[2358]	OP_LOADBOOL	R18 1 0 ; R18 := true
	368	[2358]	RETURN   	R18 2 ; return R18 
	369	[2359]	RETURN   	R0 1 ; return 

function #56 <?:2361,2671> (862 instructions, 3448 bytes at 000002111E853350)
2 params, 52 slots, 12 upvalues, 0 locals, 180 constants, 0 functions
	1	[2380]	EQ       	0 R1 K0 ; if R1 ~= nil then PC := 5
	2	[2380]	JMP      	5 ; PC := 5
	3	[2381]	NEWTABLE 	R2 0 0 ; R2 := {}
	4	[2381]	MOVE     	R1 R2 ; R1 := R2
	5	[2384]	GETUPVAL 	R2 U0 ; R2 := U0
	6	[2384]	MOVE     	R3 R0 ; R3 := R0
	7	[2384]	CALL     	R2 2 2 ; R2 := R2(R3)
	8	[2384]	TEST     	R2 1 ; if R2 then PC := 14
	9	[2384]	JMP      	14 ; PC := 14
	10	[2384]	GETTABLE 	R2 R1 K1 ; R2 := R1["decoOnly"]
	11	[2384]	TEST     	R2 1 ; if R2 then PC := 14
	12	[2384]	JMP      	14 ; PC := 14
	13	[2385]	RETURN   	R0 1 ; return 
	14	[2388]	OP_LOADBOOL	R2 1 0 ; R2 := true
	15	[2389]	OP_LOADBOOL	R3 0 0 ; R3 := false
	16	[2392]	GETTABLE 	R4 R0 K2 ; R4 := R0["name"]
	17	[2393]	GETGLOBAL	R5 K3 ; R5 := 0x64fb1586
	18	[2393]	MOVE     	R6 R4 ; R6 := R4
	19	[2393]	CALL     	R5 2 2 ; R5 := R5(R6)
	20	[2395]	GETUPVAL 	R6 U1 ; R6 := U1
	21	[2395]	GETTABLE 	R6 R6 K4 ; R6 := R6["CETUS_NODE_TAG"]
	22	[2395]	EQ       	0 R4 R6 ; if R4 ~= R6 then PC := 31
	23	[2395]	JMP      	31 ; PC := 31
	24	[2397]	GETUPVAL 	R6 U1 ; R6 := U1
	25	[2397]	GETTABLE 	R6 R6 K5 ; R6 := R6[0x52fb05b3]
	26	[2397]	GETTABLE 	R7 R0 K6 ; R7 := R0["mission"]
	27	[2397]	GETTABLE 	R7 R7 K7 ; R7 := R7["questReq"]
	28	[2397]	CALL     	R6 2 2 ; R6 := R6(R7)
	29	[2397]	NOT      	R3 R6 ; R3 := not R6
	30	[2397]	JMP      	114 ; PC := 114
	31	[2398]	GETUPVAL 	R6 U1 ; R6 := U1
	32	[2398]	GETTABLE 	R6 R6 K8 ; R6 := R6["PLAINS_NODE_TAG"]
	33	[2398]	EQ       	0 R4 R6 ; if R4 ~= R6 then PC := 42
	34	[2398]	JMP      	42 ; PC := 42
	35	[2400]	GETGLOBAL	R6 K9 ; R6 := 0x25d99d89
	36	[2400]	SELF     	R6 R6 K10 ; R7 := R6; R6 := R6[0x21a1810f]
	37	[2400]	GETUPVAL 	R8 U1 ; R8 := U1
	38	[2400]	GETTABLE 	R8 R8 K8 ; R8 := R8["PLAINS_NODE_TAG"]
	39	[2400]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	40	[2400]	NOT      	R3 R6 ; R3 := not R6
	41	[2400]	JMP      	114 ; PC := 114
	42	[2401]	GETUPVAL 	R6 U1 ; R6 := U1
	43	[2401]	GETTABLE 	R6 R6 K11 ; R6 := R6["ORB_VALLIS_NODE_TAG"]
	44	[2401]	EQ       	0 R4 R6 ; if R4 ~= R6 then PC := 53
	45	[2401]	JMP      	53 ; PC := 53
	46	[2403]	GETUPVAL 	R6 U1 ; R6 := U1
	47	[2403]	GETTABLE 	R6 R6 K5 ; R6 := R6[0x52fb05b3]
	48	[2403]	GETUPVAL 	R7 U2 ; R7 := U2
	49	[2403]	GETTABLE 	R7 R7 K12 ; R7 := R7["solarisIntroQuest"]
	50	[2403]	CALL     	R6 2 2 ; R6 := R6(R7)
	51	[2403]	NOT      	R3 R6 ; R3 := not R6
	52	[2403]	JMP      	114 ; PC := 114
	53	[2404]	GETGLOBAL	R6 K13 ; R6 := 0x7b998233
	54	[2404]	GETTABLE 	R7 R0 K6 ; R7 := R0["mission"]
	55	[2404]	GETTABLE 	R7 R7 K7 ; R7 := R7["questReq"]
	56	[2404]	CALL     	R6 2 2 ; R6 := R6(R7)
	57	[2404]	TEST     	R6 1 ; if R6 then PC := 114
	58	[2404]	JMP      	114 ; PC := 114
	59	[2405]	GETGLOBAL	R6 K9 ; R6 := 0x25d99d89
	60	[2405]	SELF     	R6 R6 K14 ; R7 := R6; R6 := R6[0x25a6e75e]
	61	[2405]	CALL     	R6 2 2 ; R6 := R6(R7)
	62	[2405]	SELF     	R6 R6 K15 ; R7 := R6; R6 := R6[0x8e7c3b5e]
	63	[2405]	CALL     	R6 2 2 ; R6 := R6(R7)
	64	[2405]	GETTABLE 	R7 R0 K6 ; R7 := R0["mission"]
	65	[2405]	GETTABLE 	R7 R7 K7 ; R7 := R7["questReq"]
	66	[2405]	EQ       	0 R6 R7 ; if R6 ~= R7 then PC := 78
	67	[2405]	JMP      	78 ; PC := 78
	68	[2405]	GETTABLE 	R6 R0 K16 ; R6 := R0["region"]
	69	[2405]	GETUPVAL 	R7 U1 ; R7 := U1
	70	[2405]	GETTABLE 	R7 R7 K17 ; R7 := R7["REGION_ID_ZARIMAN"]
	71	[2405]	SUB      	R7 R7 K18 ; R7 := R7 - 1.000000
	72	[2405]	EQ       	0 R6 R7 ; if R6 ~= R7 then PC := 77
	73	[2405]	JMP      	77 ; PC := 77
	74	[2405]	GETUPVAL 	R6 U3 ; R6 := U3
	75	[2405]	EQ       	0 R4 R6 ; if R4 ~= R6 then PC := 78
	76	[2405]	JMP      	78 ; PC := 78
	77	[2405]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 78
	78	[2405]	OP_LOADBOOL	R6 1 0 ; R6 := true
	79	[2406]	TEST     	R6 0 ; if not R6 then PC := 114
	80	[2406]	JMP      	114 ; PC := 114
	81	[2406]	GETGLOBAL	R7 K19 ; R7 := mDebugUnlockAllMissions
	82	[2406]	TEST     	R7 1 ; if R7 then PC := 114
	83	[2406]	JMP      	114 ; PC := 114
	84	[2407]	GETTABLE 	R7 R0 K6 ; R7 := R0["mission"]
	85	[2407]	GETTABLE 	R7 R7 K20 ; R7 := R7["missionType"]
	86	[2407]	EQ       	1 R7 K22 ; if R7 == 32.000000 then PC := 92
	87	[2407]	JMP      	92 ; PC := 92
	88	[2407]	GETTABLE 	R7 R0 K6 ; R7 := R0["mission"]
	89	[2407]	GETTABLE 	R7 R7 K20 ; R7 := R7["missionType"]
	90	[2407]	EQ       	0 R7 K23 ; if R7 ~= 0.000000 then PC := 105
	91	[2407]	JMP      	105 ; PC := 105
	92	[2409]	GETUPVAL 	R7 U1 ; R7 := U1
	93	[2409]	GETTABLE 	R7 R7 K5 ; R7 := R7[0x52fb05b3]
	94	[2409]	GETTABLE 	R8 R0 K6 ; R8 := R0["mission"]
	95	[2409]	GETTABLE 	R8 R8 K7 ; R8 := R8["questReq"]
	96	[2409]	CALL     	R7 2 2 ; R7 := R7(R8)
	97	[2409]	TEST     	R7 1 ; if R7 then PC := 102
	98	[2409]	JMP      	102 ; PC := 102
	99	[2409]	GETTABLE 	R7 R0 K24 ; R7 := R0["unlocked"]
	100	[2409]	NOT      	R3 R7 ; R3 := not R7
	101	[2409]	JMP      	114 ; PC := 114
	102	[2409]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 103
	103	[2409]	OP_LOADBOOL	R3 1 0 ; R3 := true
	104	[2409]	JMP      	114 ; PC := 114
	105	[2410]	GETUPVAL 	R7 U1 ; R7 := U1
	106	[2410]	GETTABLE 	R7 R7 K5 ; R7 := R7[0x52fb05b3]
	107	[2410]	GETTABLE 	R8 R0 K6 ; R8 := R0["mission"]
	108	[2410]	GETTABLE 	R8 R8 K7 ; R8 := R8["questReq"]
	109	[2410]	CALL     	R7 2 2 ; R7 := R7(R8)
	110	[2410]	TEST     	R7 1 ; if R7 then PC := 114
	111	[2410]	JMP      	114 ; PC := 114
	112	[2412]	OP_LOADBOOL	R2 0 0 ; R2 := false
	113	[2413]	OP_LOADBOOL	R3 1 0 ; R3 := true
	114	[2418]	GETTABLE 	R7 R0 K25 ; R7 := R0["missionTag"]
	115	[2419]	LOADNIL  	R8 R8 ; R8 := nil
	116	[2421]	GETUPVAL 	R9 U4 ; R9 := U4
	117	[2421]	GETTABLE 	R9 R9 K26 ; R9 := R9["DESTROYED_NODE_TAG"]
	118	[2421]	EQ       	0 R7 R9 ; if R7 ~= R9 then PC := 123
	119	[2421]	JMP      	123 ; PC := 123
	120	[2422]	GETGLOBAL	R9 K28 ; R9 := 0xfe3ad5a0
	121	[2422]	SETTABLE 	R0 K27 R9 ; R0["deco"] := R9
	122	[2423]	OP_LOADBOOL	R2 0 0 ; R2 := false
	123	[2426]	GETGLOBAL	R9 K29 ; R9 := mNewWarMode
	124	[2426]	TEST     	R9 0 ; if not R9 then PC := 141
	125	[2426]	JMP      	141 ; PC := 141
	126	[2426]	GETTABLE 	R9 R0 K2 ; R9 := R0["name"]
	127	[2426]	GETUPVAL 	R10 U1 ; R10 := U1
	128	[2426]	GETTABLE 	R10 R10 K4 ; R10 := R10["CETUS_NODE_TAG"]
	129	[2426]	EQ       	0 R9 R10 ; if R9 ~= R10 then PC := 141
	130	[2426]	JMP      	141 ; PC := 141
	131	[2427]	GETGLOBAL	R9 K30 ; R9 := 0xb02c396e
	132	[2427]	SETTABLE 	R0 K27 R9 ; R0["deco"] := R9
	133	[2428]	GETGLOBAL	R9 K32 ; R9 := 0x00046924
	134	[2428]	LOADK    	R10 := -120.000000
	135	[2428]	LOADK    	R11 := 0.000000
	136	[2428]	LOADK    	R12 := 0.000000
	137	[2428]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	138	[2428]	SETTABLE 	R0 K31 R9 ; R0["decoRotation"] := R9
	139	[2429]	SETTABLE 	R0 K33 K34 ; R0["scale"] := 0.010000
	140	[2430]	SETTABLE 	R1 K1 K35 ; R1["decoOnly"] := true
	141	[2433]	GETTABLE 	R9 R1 K1 ; R9 := R1["decoOnly"]
	142	[2433]	TEST     	R9 0 ; if not R9 then PC := 146
	143	[2433]	JMP      	146 ; PC := 146
	144	[2434]	OP_LOADBOOL	R2 0 0 ; R2 := false
	145	[2435]	OP_LOADBOOL	R8 1 0 ; R8 := true
	146	[2438]	LOADNIL  	R9 R9 ; R9 := nil
	147	[2439]	GETUPVAL 	R10 U4 ; R10 := U4
	148	[2439]	GETTABLE 	R10 R10 K36 ; R10 := R10["RECONSTRUCTION_NODE_TAG"]
	149	[2439]	EQ       	1 R7 R10 ; if R7 == R10 then PC := 155
	150	[2439]	JMP      	155 ; PC := 155
	151	[2439]	GETUPVAL 	R10 U4 ; R10 := U4
	152	[2439]	GETTABLE 	R10 R10 K37 ; R10 := R10["UNDER_CONSTRUCTION_NODE_TAG"]
	153	[2439]	EQ       	0 R7 R10 ; if R7 ~= R10 then PC := 221
	154	[2439]	JMP      	221 ; PC := 221
	155	[2440]	GETGLOBAL	R10 K38 ; R10 := 0x7f5022cf
	156	[2440]	GETTABLE 	R10 R10 K39 ; R10 := R10[0xa5c556b9]
	157	[2440]	MOVE     	R11 R5 ; R11 := R5
	158	[2440]	LOADK    	R12 K40 ; R12 := "Rebuild"
	159	[2440]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	160	[2441]	MOVE     	R11 R5 ; R11 := R5
	161	[2442]	TEST     	R10 0 ; if not R10 then PC := 170
	162	[2442]	JMP      	170 ; PC := 170
	163	[2443]	GETGLOBAL	R12 K38 ; R12 := 0x7f5022cf
	164	[2443]	GETTABLE 	R12 R12 K41 ; R12 := R12[0x1a94c9cc]
	165	[2443]	MOVE     	R13 R5 ; R13 := R5
	166	[2443]	LOADK    	R14 := 1.000000
	167	[2443]	SUB      	R15 R10 K18 ; R15 := R10 - 1.000000
	168	[2443]	CALL     	R12 4 2 ; R12 := R12(R13,R14,R15)
	169	[2443]	MOVE     	R11 R12 ; R11 := R12
	170	[2446]	GETGLOBAL	R12 K42 ; R12 := mConstructionProjectNodes
	171	[2446]	GETTABLE 	R12 R12 R11 ; R12 := R12[R11]
	172	[2447]	OP_LOADBOOL	R13 0 0 ; R13 := false
	173	[2448]	LOADNIL  	R14 R14 ; R14 := nil
	174	[2449]	TEST     	R12 0 ; if not R12 then PC := 192
	175	[2449]	JMP      	192 ; PC := 192
	176	[2450]	GETTABLE 	R14 R12 K43 ; R14 := R12["info"]
	177	[2451]	TEST     	R14 0 ; if not R14 then PC := 192
	178	[2451]	JMP      	192 ; PC := 192
	179	[2451]	GETTABLE 	R15 R14 K44 ; R15 := R14["mActivation"]
	180	[2451]	SELF     	R15 R15 K45 ; R16 := R15; R15 := R15[0x56c01834]
	181	[2451]	CALL     	R15 2 2 ; R15 := R15(R16)
	182	[2451]	TEST     	R15 0 ; if not R15 then PC := 192
	183	[2451]	JMP      	192 ; PC := 192
	184	[2451]	GETGLOBAL	R15 K46 ; R15 := 0x34291f5c
	185	[2451]	GETTABLE 	R15 R15 K47 ; R15 := R15[0x397b920f]
	186	[2451]	GETTABLE 	R16 R12 K43 ; R16 := R12["info"]
	187	[2451]	GETTABLE 	R16 R16 K44 ; R16 := R16["mActivation"]
	188	[2451]	CALL     	R15 2 2 ; R15 := R15(R16)
	189	[2451]	LE       	0 R15 K23 ; if R15 > 0.000000 then PC := 192
	190	[2451]	JMP      	192 ; PC := 192
	191	[2452]	OP_LOADBOOL	R13 1 0 ; R13 := true
	192	[2456]	TEST     	R13 0 ; if not R13 then PC := 195
	193	[2456]	JMP      	195 ; PC := 195
	194	[2457]	GETTABLE 	R9 R12 K48 ; R9 := R12["progress"]
	195	[2459]	TEST     	R10 0 ; if not R10 then PC := 203
	196	[2459]	JMP      	203 ; PC := 203
	197	[2461]	TEST     	R13 0 ; if not R13 then PC := 201
	198	[2461]	JMP      	201 ; PC := 201
	199	[2461]	EQ       	1 R9 K23 ; if R9 == 0.000000 then PC := 221
	200	[2461]	JMP      	221 ; PC := 221
	201	[2462]	RETURN   	R0 1 ; return 
	202	[2463]	JMP      	221 ; PC := 221
	203	[2466]	TEST     	R13 1 ; if R13 then PC := 213
	204	[2466]	JMP      	213 ; PC := 213
	205	[2467]	OP_LOADBOOL	R15 1 0 ; R15 := true
	206	[2468]	TEST     	R15 1 ; if R15 then PC := 221
	207	[2468]	JMP      	221 ; PC := 221
	208	[2469]	OP_LOADBOOL	R2 0 0 ; R2 := false
	209	[2470]	GETGLOBAL	R16 K28 ; R16 := 0xfe3ad5a0
	210	[2470]	SETTABLE 	R0 K27 R16 ; R0["deco"] := R16
	211	[2470]	JMP      	221 ; PC := 221
	212	[2473]	JMP      	221 ; PC := 221
	213	[2474]	EQ       	0 R9 K23 ; if R9 ~= 0.000000 then PC := 217
	214	[2474]	JMP      	217 ; PC := 217
	215	[2475]	RETURN   	R0 1 ; return 
	216	[2475]	JMP      	221 ; PC := 221
	217	[2477]	EQ       	0 R9 K18 ; if R9 ~= 1.000000 then PC := 221
	218	[2477]	JMP      	221 ; PC := 221
	219	[2478]	SETTABLE 	R0 K49 K23 ; R0["nodeType"] := 0.000000
	220	[2478]	JMP      	221 ; PC := 221
	221	[2486]	GETTABLE 	R16 R0 K50 ; R16 := R0["pos"]
	222	[2487]	LOADNIL  	R17 R17 ; R17 := nil
	223	[2489]	GETGLOBAL	R18 K51 ; R18 := 0x0032441c
	224	[2489]	GETTABLE 	R18 R18 K52 ; R18 := R18["CachedGoalInfo"]
	225	[2489]	GETTABLE 	R18 R18 R5 ; R18 := R18[R5]
	226	[2489]	TEST     	R18 0 ; if not R18 then PC := 354
	227	[2489]	JMP      	354 ; PC := 354
	228	[2490]	GETGLOBAL	R18 K51 ; R18 := 0x0032441c
	229	[2490]	GETTABLE 	R18 R18 K52 ; R18 := R18["CachedGoalInfo"]
	230	[2490]	GETTABLE 	R18 R18 R5 ; R18 := R18[R5]
	231	[2490]	GETTABLE 	R18 R18 K53 ; R18 := R18["mFomorian"]
	232	[2490]	TEST     	R18 0 ; if not R18 then PC := 291
	233	[2490]	JMP      	291 ; PC := 291
	234	[2492]	GETGLOBAL	R18 K54 ; R18 := mRadialSolarMap
	235	[2492]	SELF     	R18 R18 K55 ; R19 := R18; R18 := R18[0x3ad9ed31]
	236	[2492]	GETGLOBAL	R20 K51 ; R20 := 0x0032441c
	237	[2492]	GETTABLE 	R20 R20 K52 ; R20 := R20["CachedGoalInfo"]
	238	[2492]	GETTABLE 	R20 R20 R5 ; R20 := R20[R5]
	239	[2492]	GETTABLE 	R20 R20 K56 ; R20 := R20["mVictimNode"]
	240	[2492]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	241	[2493]	GETTABLE 	R19 R18 K50 ; R19 := R18["pos"]
	242	[2493]	SUB      	R19 R19 R16 ; R19 := R19 - R16
	243	[2494]	MUL      	R20 R19 K57 ; R20 := R19 * 0.800000
	244	[2495]	GETGLOBAL	R21 K51 ; R21 := 0x0032441c
	245	[2495]	GETTABLE 	R21 R21 K52 ; R21 := R21["CachedGoalInfo"]
	246	[2495]	GETTABLE 	R21 R21 R5 ; R21 := R21[R5]
	247	[2495]	GETTABLE 	R21 R21 K44 ; R21 := R21["mActivation"]
	248	[2495]	SELF     	R21 R21 K58 ; R22 := R21; R21 := R21[0x10f68684]
	249	[2495]	GETGLOBAL	R23 K51 ; R23 := 0x0032441c
	250	[2495]	GETTABLE 	R23 R23 K52 ; R23 := R23["CachedGoalInfo"]
	251	[2495]	GETTABLE 	R23 R23 R5 ; R23 := R23[R5]
	252	[2495]	GETTABLE 	R23 R23 K59 ; R23 := R23["mExpiry"]
	253	[2495]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	254	[2496]	GETGLOBAL	R22 K60 ; R22 := 0x42dcc9f5
	255	[2496]	GETGLOBAL	R23 K46 ; R23 := 0x34291f5c
	256	[2496]	GETTABLE 	R23 R23 K47 ; R23 := R23[0x397b920f]
	257	[2496]	GETGLOBAL	R24 K51 ; R24 := 0x0032441c
	258	[2496]	GETTABLE 	R24 R24 K52 ; R24 := R24["CachedGoalInfo"]
	259	[2496]	GETTABLE 	R24 R24 R5 ; R24 := R24[R5]
	260	[2496]	GETTABLE 	R24 R24 K59 ; R24 := R24["mExpiry"]
	261	[2496]	CALL     	R23 2 2 ; R23 := R23(R24)
	262	[2496]	LOADK    	R24 := 0.000000
	263	[2496]	MOVE     	R25 R21 ; R25 := R21
	264	[2496]	CALL     	R22 4 2 ; R22 := R22(R23,R24,R25)
	265	[2497]	DIV      	R23 R22 R21 ; R23 := R22 / R21
	266	[2497]	SUB      	R23 K18 R23 ; R23 := 1.000000 - R23
	267	[2498]	MUL      	R24 R20 R23 ; R24 := R20 * R23
	268	[2499]	ADD      	R16 R16 R24 ; R16 := R16 + R24
	269	[2501]	GETGLOBAL	R25 K51 ; R25 := 0x0032441c
	270	[2501]	GETTABLE 	R25 R25 K52 ; R25 := R25["CachedGoalInfo"]
	271	[2501]	GETTABLE 	R25 R25 R5 ; R25 := R25[R5]
	272	[2501]	GETTABLE 	R25 R25 K61 ; R25 := R25["mFaction"]
	273	[2501]	EQ       	0 R25 K18 ; if R25 ~= 1.000000 then PC := 283
	274	[2501]	JMP      	283 ; PC := 283
	275	[2502]	GETGLOBAL	R25 K62 ; R25 := 0x4fb130a9
	276	[2502]	SETTABLE 	R0 K27 R25 ; R0["deco"] := R25
	277	[2503]	GETGLOBAL	R25 K32 ; R25 := 0x00046924
	278	[2503]	LOADK    	R26 := 50.000000
	279	[2503]	LOADK    	R27 := 0.000000
	280	[2503]	LOADK    	R28 := 0.000000
	281	[2503]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	282	[2503]	SETTABLE 	R0 K31 R25 ; R0["decoRotation"] := R25
	283	[2506]	GETGLOBAL	R25 K51 ; R25 := 0x0032441c
	284	[2506]	GETTABLE 	R25 R25 K52 ; R25 := R25["CachedGoalInfo"]
	285	[2506]	GETTABLE 	R25 R25 R5 ; R25 := R25[R5]
	286	[2506]	GETTABLE 	R25 R25 K63 ; R25 := R25["mHealthPct"]
	287	[2506]	LE       	0 R25 K23 ; if R25 > 0.000000 then PC := 354
	288	[2506]	JMP      	354 ; PC := 354
	289	[2508]	OP_LOADBOOL	R2 0 0 ; R2 := false
	290	[2509]	JMP      	354 ; PC := 354
	291	[2510]	GETGLOBAL	R25 K38 ; R25 := 0x7f5022cf
	292	[2510]	GETTABLE 	R25 R25 K39 ; R25 := R25[0xa5c556b9]
	293	[2510]	GETGLOBAL	R26 K3 ; R26 := 0x64fb1586
	294	[2510]	GETGLOBAL	R27 K51 ; R27 := 0x0032441c
	295	[2510]	GETTABLE 	R27 R27 K52 ; R27 := R27["CachedGoalInfo"]
	296	[2510]	GETTABLE 	R27 R27 R5 ; R27 := R27[R5]
	297	[2510]	GETTABLE 	R27 R27 K64 ; R27 := R27["mTag"]
	298	[2510]	CALL     	R26 2 2 ; R26 := R26(R27)
	299	[2510]	LOADK    	R27 K65 ; R27 := "Halloween"
	300	[2510]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	301	[2510]	EQ       	1 R25 K0 ; if R25 == nil then PC := 354
	302	[2510]	JMP      	354 ; PC := 354
	303	[2511]	GETGLOBAL	R25 K66 ; R25 := 0x7ed0a956
	304	[2511]	LOADK    	R26 K67 ; R26 := "/Lotus/Upgrades/Skins/Festivities/PumpkinHeadDeco"
	305	[2511]	CALL     	R25 2 2 ; R25 := R25(R26)
	306	[2511]	SETTABLE 	R0 K27 R25 ; R0["deco"] := R25
	307	[2512]	GETGLOBAL	R25 K32 ; R25 := 0x00046924
	308	[2512]	LOADK    	R26 := 180.000000
	309	[2512]	LOADK    	R27 := 0.000000
	310	[2512]	LOADK    	R28 := 0.000000
	311	[2512]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	312	[2512]	SETTABLE 	R0 K31 R25 ; R0["decoRotation"] := R25
	313	[2513]	GETUPVAL 	R25 U1 ; R25 := U1
	314	[2513]	GETTABLE 	R25 R25 K68 ; R25 := R25["OROKIN_TOWER_NODE_TAG"]
	315	[2513]	EQ       	0 R4 R25 ; if R4 ~= R25 then PC := 319
	316	[2513]	JMP      	319 ; PC := 319
	317	[2514]	SETTABLE 	R0 K33 K69 ; R0["scale"] := 0.020000
	318	[2514]	JMP      	326 ; PC := 326
	319	[2516]	SETTABLE 	R0 K33 K70 ; R0["scale"] := 0.040000
	320	[2517]	GETGLOBAL	R25 K32 ; R25 := 0x00046924
	321	[2517]	LOADK    	R26 := -50.000000
	322	[2517]	LOADK    	R27 := 0.000000
	323	[2517]	LOADK    	R28 := 0.000000
	324	[2517]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	325	[2517]	MOVE     	R17 R25 ; R17 := R25
	326	[2519]	EQ       	0 R5 K71 ; if R5 ~= "EventNode24" then PC := 330
	327	[2519]	JMP      	330 ; PC := 330
	328	[2520]	GETTABLE 	R25 R0 K72 ; R25 := R0["decoOffset"]
	329	[2520]	SETTABLE 	R25 K73 K74 ; R25["z"] := -0.100000
	330	[2522]	GETGLOBAL	R25 K75 ; R25 := _T
	331	[2522]	GETTABLE 	R25 R25 K76 ; R25 := R25["CachedGoalKeys"]
	332	[2522]	TEST     	R25 0 ; if not R25 then PC := 354
	333	[2522]	JMP      	354 ; PC := 354
	334	[2522]	GETGLOBAL	R25 K75 ; R25 := _T
	335	[2522]	GETTABLE 	R25 R25 K76 ; R25 := R25["CachedGoalKeys"]
	336	[2522]	GETTABLE 	R25 R25 R5 ; R25 := R25[R5]
	337	[2522]	TEST     	R25 0 ; if not R25 then PC := 354
	338	[2522]	JMP      	354 ; PC := 354
	339	[2523]	GETGLOBAL	R25 K75 ; R25 := _T
	340	[2523]	GETTABLE 	R25 R25 K76 ; R25 := R25["CachedGoalKeys"]
	341	[2523]	GETTABLE 	R25 R25 R5 ; R25 := R25[R5]
	342	[2523]	SELF     	R25 R25 K77 ; R26 := R25; R25 := R25[0x95e6d5cc]
	343	[2523]	CALL     	R25 2 2 ; R25 := R25(R26)
	344	[2524]	GETTABLE 	R26 R25 K78 ; R26 := R25["x"]
	345	[2524]	EQ       	1 R26 K23 ; if R26 == 0.000000 then PC := 354
	346	[2524]	JMP      	354 ; PC := 354
	347	[2524]	GETTABLE 	R26 R25 K79 ; R26 := R25["y"]
	348	[2524]	EQ       	1 R26 K23 ; if R26 == 0.000000 then PC := 354
	349	[2524]	JMP      	354 ; PC := 354
	350	[2524]	GETTABLE 	R26 R25 K73 ; R26 := R25["z"]
	351	[2524]	EQ       	1 R26 K23 ; if R26 == 0.000000 then PC := 354
	352	[2524]	JMP      	354 ; PC := 354
	353	[2525]	SETTABLE 	R0 K50 R25 ; R0["pos"] := R25
	354	[2531]	GETUPVAL 	R26 U5 ; R26 := U5
	355	[2531]	LOADK    	R27 K80 ; R27 := "Nodes.Node"
	356	[2531]	LOADK    	R28 K81 ; R28 := "Node"
	357	[2531]	GETUPVAL 	R29 U6 ; R29 := U6
	358	[2531]	LEN      	R29 R29 ; R29 := # R29
	359	[2531]	ADD      	R29 R29 K18 ; R29 := R29 + 1.000000
	360	[2531]	LOADK    	R30 := -5000.000000
	361	[2531]	CALL     	R26 5 2 ; R26 := R26(R27,R28,R29,R30)
	362	[2532]	GETGLOBAL	R27 K82 ; R27 := 0xae91e43b
	363	[2532]	SELF     	R27 R27 K83 ; R28 := R27; R27 := R27[0x09839320]
	364	[2532]	MOVE     	R29 R26 ; R29 := R26
	365	[2532]	CALL     	R27 3 2 ; R27 := R27(R28,R29)
	366	[2533]	GETGLOBAL	R28 K82 ; R28 := 0xae91e43b
	367	[2533]	SELF     	R28 R28 K83 ; R29 := R28; R28 := R28[0x09839320]
	368	[2533]	MOVE     	R30 R26 ; R30 := R26
	369	[2533]	LOADK    	R31 K84 ; R31 := ".Node"
	370	[2533]	CONCAT   	R30 R30 R31 ; R30 := R30 .. R31
	371	[2533]	CALL     	R28 3 2 ; R28 := R28(R29,R30)
	372	[2535]	GETGLOBAL	R29 K82 ; R29 := 0xae91e43b
	373	[2535]	SELF     	R29 R29 K85 ; R30 := R29; R29 := R29[0xd5181643]
	374	[2535]	MOVE     	R31 R26 ; R31 := R26
	375	[2535]	LOADK    	R32 K86 ; R32 := ".Name.Bg"
	376	[2535]	CONCAT   	R31 R31 R32 ; R31 := R31 .. R32
	377	[2535]	GETGLOBAL	R32 K51 ; R32 := 0x0032441c
	378	[2535]	GETTABLE 	R32 R32 K87 ; R32 := R32["UIMaterial_SmoothEdgeNoDepthTest"]
	379	[2535]	CALL     	R29 4 1 ; R29(R30,R31,R32)
	380	[2536]	GETGLOBAL	R29 K82 ; R29 := 0xae91e43b
	381	[2536]	SELF     	R29 R29 K88 ; R30 := R29; R29 := R29[0x19ad3f57]
	382	[2536]	MOVE     	R31 R26 ; R31 := R26
	383	[2536]	LOADK    	R32 K89 ; R32 := "Name.Bg"
	384	[2536]	LOADK    	R33 K90 ; R33 := "noMenuSelection"
	385	[2536]	OP_LOADBOOL	R34 1 0 ; R34 := true
	386	[2536]	CALL     	R29 6 1 ; R29(R30,R31,R32,R33,R34)
	387	[2539]	GETGLOBAL	R29 K75 ; R29 := _T
	388	[2539]	GETTABLE 	R29 R29 K91 ; R29 := R29["CachedActiveMissions"]
	389	[2539]	TEST     	R29 0 ; if not R29 then PC := 402
	390	[2539]	JMP      	402 ; PC := 402
	391	[2539]	GETGLOBAL	R29 K75 ; R29 := _T
	392	[2539]	GETTABLE 	R29 R29 K91 ; R29 := R29["CachedActiveMissions"]
	393	[2539]	GETTABLE 	R29 R29 R5 ; R29 := R29[R5]
	394	[2539]	TEST     	R29 0 ; if not R29 then PC := 402
	395	[2539]	JMP      	402 ; PC := 402
	396	[2539]	GETGLOBAL	R29 K75 ; R29 := _T
	397	[2539]	GETTABLE 	R29 R29 K91 ; R29 := R29["CachedActiveMissions"]
	398	[2539]	GETTABLE 	R29 R29 R5 ; R29 := R29[R5]
	399	[2539]	GETTABLE 	R29 R29 K92 ; R29 := R29["mVisible"]
	400	[2539]	TEST     	R29 1 ; if R29 then PC := 456
	401	[2539]	JMP      	456 ; PC := 456
	402	[2540]	GETGLOBAL	R29 K51 ; R29 := 0x0032441c
	403	[2540]	GETTABLE 	R29 R29 K52 ; R29 := R29["CachedGoalInfo"]
	404	[2540]	GETTABLE 	R29 R29 R5 ; R29 := R29[R5]
	405	[2540]	TEST     	R29 1 ; if R29 then PC := 456
	406	[2540]	JMP      	456 ; PC := 456
	407	[2541]	GETGLOBAL	R29 K75 ; R29 := _T
	408	[2541]	GETTABLE 	R29 R29 K93 ; R29 := R29["CachedAlerts"]
	409	[2541]	GETTABLE 	R29 R29 R5 ; R29 := R29[R5]
	410	[2541]	TEST     	R29 0 ; if not R29 then PC := 418
	411	[2541]	JMP      	418 ; PC := 418
	412	[2541]	GETGLOBAL	R29 K75 ; R29 := _T
	413	[2541]	GETTABLE 	R29 R29 K93 ; R29 := R29["CachedAlerts"]
	414	[2541]	GETTABLE 	R29 R29 R5 ; R29 := R29[R5]
	415	[2541]	GETTABLE 	R29 R29 K92 ; R29 := R29["mVisible"]
	416	[2541]	TEST     	R29 1 ; if R29 then PC := 456
	417	[2541]	JMP      	456 ; PC := 456
	418	[2542]	GETGLOBAL	R29 K75 ; R29 := _T
	419	[2542]	GETTABLE 	R29 R29 K94 ; R29 := R29["CachedInvasionInfo"]
	420	[2542]	GETTABLE 	R29 R29 R5 ; R29 := R29[R5]
	421	[2542]	TEST     	R29 1 ; if R29 then PC := 456
	422	[2542]	JMP      	456 ; PC := 456
	423	[2543]	GETGLOBAL	R29 K75 ; R29 := _T
	424	[2543]	GETTABLE 	R29 R29 K95 ; R29 := R29["CachedSyndicateMissions"]
	425	[2543]	GETTABLE 	R29 R29 R5 ; R29 := R29[R5]
	426	[2543]	TEST     	R29 0 ; if not R29 then PC := 434
	427	[2543]	JMP      	434 ; PC := 434
	428	[2543]	GETGLOBAL	R29 K75 ; R29 := _T
	429	[2543]	GETTABLE 	R29 R29 K95 ; R29 := R29["CachedSyndicateMissions"]
	430	[2543]	GETTABLE 	R29 R29 R5 ; R29 := R29[R5]
	431	[2543]	GETTABLE 	R29 R29 K92 ; R29 := R29["mVisible"]
	432	[2543]	TEST     	R29 1 ; if R29 then PC := 456
	433	[2543]	JMP      	456 ; PC := 456
	434	[2544]	GETTABLE 	R29 R0 K49 ; R29 := R0["nodeType"]
	435	[2544]	EQ       	1 R29 K96 ; if R29 == 3.000000 then PC := 455
	436	[2544]	JMP      	455 ; PC := 455
	437	[2545]	GETGLOBAL	R29 K13 ; R29 := 0x7b998233
	438	[2545]	GETTABLE 	R30 R0 K6 ; R30 := R0["mission"]
	439	[2545]	GETTABLE 	R30 R30 K97 ; R30 := R30["levelKeyName"]
	440	[2545]	CALL     	R29 2 2 ; R29 := R29(R30)
	441	[2545]	TEST     	R29 0 ; if not R29 then PC := 455
	442	[2545]	JMP      	455 ; PC := 455
	443	[2546]	GETGLOBAL	R29 K13 ; R29 := 0x7b998233
	444	[2546]	GETTABLE 	R30 R0 K98 ; R30 := R0["keyChain"]
	445	[2546]	CALL     	R29 2 2 ; R29 := R29(R30)
	446	[2546]	TEST     	R29 0 ; if not R29 then PC := 455
	447	[2546]	JMP      	455 ; PC := 455
	448	[2547]	GETTABLE 	R29 R0 K49 ; R29 := R0["nodeType"]
	449	[2547]	EQ       	1 R29 K99 ; if R29 == 6.000000 then PC := 455
	450	[2547]	JMP      	455 ; PC := 455
	451	[2548]	GETTABLE 	R29 R0 K49 ; R29 := R0["nodeType"]
	452	[2548]	EQ       	1 R29 K100 ; if R29 == 7.000000 then PC := 455
	453	[2548]	JMP      	455 ; PC := 455
	454	[2548]	OP_LOADBOOL	R29 0 1 ; R29 := false; PC := 455
	455	[2548]	OP_LOADBOOL	R29 1 0 ; R29 := true
	456	[2550]	GETGLOBAL	R30 K75 ; R30 := _T
	457	[2550]	GETTABLE 	R30 R30 K101 ; R30 := R30["CachedNemesisMissions"]
	458	[2550]	GETTABLE 	R30 R30 R5 ; R30 := R30[R5]
	459	[2550]	TEST     	R30 0 ; if not R30 then PC := 475
	460	[2550]	JMP      	475 ; PC := 475
	461	[2550]	GETGLOBAL	R30 K75 ; R30 := _T
	462	[2550]	GETTABLE 	R30 R30 K101 ; R30 := R30["CachedNemesisMissions"]
	463	[2550]	GETTABLE 	R30 R30 R5 ; R30 := R30[R5]
	464	[2550]	GETTABLE 	R30 R30 K102 ; R30 := R30["attackType"]
	465	[2550]	TEST     	R30 0 ; if not R30 then PC := 475
	466	[2550]	JMP      	475 ; PC := 475
	467	[2550]	GETGLOBAL	R30 K75 ; R30 := _T
	468	[2550]	GETTABLE 	R30 R30 K101 ; R30 := R30["CachedNemesisMissions"]
	469	[2550]	GETTABLE 	R30 R30 R5 ; R30 := R30[R5]
	470	[2550]	GETTABLE 	R30 R30 K102 ; R30 := R30["attackType"]
	471	[2550]	EQ       	1 R30 K103 ; if R30 == "Blockade" then PC := 474
	472	[2550]	JMP      	474 ; PC := 474
	473	[2550]	OP_LOADBOOL	R30 0 1 ; R30 := false; PC := 474
	474	[2550]	OP_LOADBOOL	R30 1 0 ; R30 := true
	475	[2552]	GETGLOBAL	R31 K82 ; R31 := 0xae91e43b
	476	[2552]	SELF     	R31 R31 K104 ; R32 := R31; R31 := R31[0x42b04007]
	477	[2552]	GETTABLE 	R33 R0 K105 ; R33 := R0["locTag"]
	478	[2552]	SELF     	R33 R33 K106 ; R34 := R33; R33 := R33[0x6d604ba7]
	479	[2552]	CALL     	R33 2 2 ; R33 := R33(R34)
	480	[2552]	OP_LOADBOOL	R34 1 0 ; R34 := true
	481	[2552]	CALL     	R31 4 2 ; R31 := R31(R32,R33,R34)
	482	[2554]	TEST     	R9 0 ; if not R9 then PC := 497
	483	[2554]	JMP      	497 ; PC := 497
	484	[2554]	LT       	0 K23 R9 ; if 0.000000 >= R9 then PC := 497
	485	[2554]	JMP      	497 ; PC := 497
	486	[2555]	EQ       	0 R9 K18 ; if R9 ~= 1.000000 then PC := 519
	487	[2555]	JMP      	519 ; PC := 519
	488	[2556]	GETGLOBAL	R32 K82 ; R32 := 0xae91e43b
	489	[2556]	SELF     	R32 R32 K104 ; R33 := R32; R32 := R32[0x42b04007]
	490	[2556]	LOADK    	R34 K107 ; R34 := "/Lotus/Language/RelayReconstruction/ReconstructionSiteAttack"
	491	[2556]	OP_LOADBOOL	R35 0 0 ; R35 := false
	492	[2556]	NEWTABLE 	R36 0 1 ; R36 := {}
	493	[2556]	SETTABLE 	R36 K108 R31 ; R36["LOCATION"] := R31
	494	[2556]	CALL     	R32 5 2 ; R32 := R32(R33,R34,R35,R36)
	495	[2556]	MOVE     	R31 R32 ; R31 := R32
	496	[2557]	JMP      	519 ; PC := 519
	497	[2558]	GETGLOBAL	R32 K51 ; R32 := 0x0032441c
	498	[2558]	GETTABLE 	R32 R32 K52 ; R32 := R32["CachedGoalInfo"]
	499	[2558]	GETTABLE 	R32 R32 R5 ; R32 := R32[R5]
	500	[2558]	TEST     	R32 0 ; if not R32 then PC := 519
	501	[2558]	JMP      	519 ; PC := 519
	502	[2558]	GETGLOBAL	R32 K51 ; R32 := 0x0032441c
	503	[2558]	GETTABLE 	R32 R32 K52 ; R32 := R32["CachedGoalInfo"]
	504	[2558]	GETTABLE 	R32 R32 R5 ; R32 := R32[R5]
	505	[2558]	GETTABLE 	R32 R32 K64 ; R32 := R32["mTag"]
	506	[2558]	GETUPVAL 	R33 U4 ; R33 := U4
	507	[2558]	GETTABLE 	R33 R33 K109 ; R33 := R33["PRIME_VAULT_TRADER_GOAL"]
	508	[2558]	EQ       	1 R32 R33 ; if R32 == R33 then PC := 519
	509	[2558]	JMP      	519 ; PC := 519
	510	[2559]	GETGLOBAL	R32 K82 ; R32 := 0xae91e43b
	511	[2559]	SELF     	R32 R32 K104 ; R33 := R32; R32 := R32[0x42b04007]
	512	[2559]	GETGLOBAL	R34 K51 ; R34 := 0x0032441c
	513	[2559]	GETTABLE 	R34 R34 K52 ; R34 := R34["CachedGoalInfo"]
	514	[2559]	GETTABLE 	R34 R34 R5 ; R34 := R34[R5]
	515	[2559]	GETTABLE 	R34 R34 K110 ; R34 := R34["mDesc"]
	516	[2559]	OP_LOADBOOL	R35 1 0 ; R35 := true
	517	[2559]	CALL     	R32 4 2 ; R32 := R32(R33,R34,R35)
	518	[2559]	MOVE     	R31 R32 ; R31 := R32
	519	[2562]	TEST     	R30 0 ; if not R30 then PC := 534
	520	[2562]	JMP      	534 ; PC := 534
	521	[2563]	MOVE     	R32 R31 ; R32 := R31
	522	[2563]	LOADK    	R33 K111 ; R33 := " ("
	523	[2563]	GETGLOBAL	R34 K82 ; R34 := 0xae91e43b
	524	[2563]	SELF     	R34 R34 K104 ; R35 := R34; R34 := R34[0x42b04007]
	525	[2563]	GETGLOBAL	R36 K75 ; R36 := _T
	526	[2563]	GETTABLE 	R36 R36 K101 ; R36 := R36["CachedNemesisMissions"]
	527	[2563]	GETTABLE 	R36 R36 R5 ; R36 := R36[R5]
	528	[2563]	GETTABLE 	R36 R36 K112 ; R36 := R36["mMissionInfo"]
	529	[2563]	GETTABLE 	R36 R36 K113 ; R36 := R36["uniqueName"]
	530	[2563]	OP_LOADBOOL	R37 0 0 ; R37 := false
	531	[2563]	CALL     	R34 4 2 ; R34 := R34(R35,R36,R37)
	532	[2563]	LOADK    	R35 K114 ; R35 := ")"
	533	[2563]	CONCAT   	R31 R32 R35 ; R31 := R32 .. R33 .. R34 .. R35
	534	[2566]	NEWTABLE 	R32 0 18 ; R32 := {}
	535	[2567]	SETTABLE 	R32 K2 R4 ; R32["name"] := R4
	536	[2568]	GETGLOBAL	R33 K38 ; R33 := 0x7f5022cf
	537	[2568]	GETTABLE 	R33 R33 K116 ; R33 := R33[0x3f3e4d12]
	538	[2568]	MOVE     	R34 R31 ; R34 := R31
	539	[2568]	CALL     	R33 2 2 ; R33 := R33(R34)
	540	[2568]	SETTABLE 	R32 K115 R33 ; R32["locName"] := R33
	541	[2569]	SETTABLE 	R32 K117 R27 ; R32["memberIndex"] := R27
	542	[2570]	GETGLOBAL	R33 K82 ; R33 := 0xae91e43b
	543	[2570]	SELF     	R33 R33 K83 ; R34 := R33; R33 := R33[0x09839320]
	544	[2570]	MOVE     	R35 R26 ; R35 := R26
	545	[2570]	LOADK    	R36 K119 ; R36 := ".Name"
	546	[2570]	CONCAT   	R35 R35 R36 ; R35 := R35 .. R36
	547	[2570]	CALL     	R33 3 2 ; R33 := R33(R34,R35)
	548	[2570]	SETTABLE 	R32 K118 R33 ; R32["labelIndex"] := R33
	549	[2571]	SETTABLE 	R32 K120 R28 ; R32["nodeIndex"] := R28
	550	[2572]	SETTABLE 	R32 K121 R26 ; R32["clipName"] := R26
	551	[2573]	SETTABLE 	R32 K122 R16 ; R32["position"] := R16
	552	[2574]	SETTABLE 	R32 K123 R0 ; R32["radialSector"] := R0
	553	[2575]	GETTABLE 	R33 R0 K49 ; R33 := R0["nodeType"]
	554	[2575]	EQ       	1 R33 K99 ; if R33 == 6.000000 then PC := 557
	555	[2575]	JMP      	557 ; PC := 557
	556	[2575]	OP_LOADBOOL	R33 0 1 ; R33 := false; PC := 557
	557	[2575]	OP_LOADBOOL	R33 1 0 ; R33 := true
	558	[2575]	SETTABLE 	R32 K124 R33 ; R32["isShortcut"] := R33
	559	[2576]	GETTABLE 	R33 R0 K49 ; R33 := R0["nodeType"]
	560	[2576]	EQ       	1 R33 K100 ; if R33 == 7.000000 then PC := 563
	561	[2576]	JMP      	563 ; PC := 563
	562	[2576]	OP_LOADBOOL	R33 0 1 ; R33 := false; PC := 563
	563	[2576]	OP_LOADBOOL	R33 1 0 ; R33 := true
	564	[2576]	SETTABLE 	R32 K125 R33 ; R32["isJunction"] := R33
	565	[2577]	SETTABLE 	R32 K126 R9 ; R32["reconstructionProgress"] := R9
	566	[2578]	GETTABLE 	R33 R0 K49 ; R33 := R0["nodeType"]
	567	[2578]	EQ       	1 R33 K128 ; if R33 == 5.000000 then PC := 570
	568	[2578]	JMP      	570 ; PC := 570
	569	[2578]	OP_LOADBOOL	R33 0 1 ; R33 := false; PC := 570
	570	[2578]	OP_LOADBOOL	R33 1 0 ; R33 := true
	571	[2578]	SETTABLE 	R32 K127 R33 ; R32["isEmpty"] := R33
	572	[2579]	SETTABLE 	R32 K129 R29 ; R32["isActiveMission"] := R29
	573	[2580]	SETTABLE 	R32 K130 R30 ; R32["isBlockaded"] := R30
	574	[2581]	GETTABLE 	R33 R0 K131 ; R33 := R0["missionsCompleted"]
	575	[2581]	SETTABLE 	R32 K131 R33 ; R32["missionsCompleted"] := R33
	576	[2582]	GETTABLE 	R33 R0 K132 ; R33 := R0["difficultyUnlocked"]
	577	[2582]	SETTABLE 	R32 K132 R33 ; R32["difficultyUnlocked"] := R33
	578	[2583]	GETTABLE 	R33 R0 K133 ; R33 := R0["difficultyCompleted"]
	579	[2583]	SETTABLE 	R32 K133 R33 ; R32["difficultyCompleted"] := R33
	580	[2584]	GETTABLE 	R33 R0 K49 ; R33 := R0["nodeType"]
	581	[2584]	SETTABLE 	R32 K49 R33 ; R32["nodeType"] := R33
	582	[2585]	SETTABLE 	R32 K134 R8 ; R32["hideNode"] := R8
	583	[2588]	GETGLOBAL	R33 K135 ; R33 := 0xcfc01047
	584	[2588]	MOVE     	R34 R1 ; R34 := R1
	585	[2588]	CALL     	R33 2 4 ; R33,R34,R35 := R33(R34)
	586	[2588]	JMP      	588 ; PC := 588
	587	[2589]	SETTABLE 	R32 R36 R37 ; R32[R36] := R37
	588	[2588]	TFORLOOP 	R33 2 ; R36,R37 := R33(R34,R35); if R36 ~= nil then begin PC = 587; R35 := R36 end
	589	[2589]	JMP      	587 ; PC := 587
	590	[2592]	TEST     	R3 0 ; if not R3 then PC := 596
	591	[2592]	JMP      	596 ; PC := 596
	592	[2592]	GETGLOBAL	R38 K19 ; R38 := mDebugUnlockAllMissions
	593	[2592]	TEST     	R38 1 ; if R38 then PC := 596
	594	[2592]	JMP      	596 ; PC := 596
	595	[2593]	SETTABLE 	R32 K136 K35 ; R32["edgesLocked"] := true
	596	[2596]	GETTABLE 	R38 R32 K2 ; R38 := R32["name"]
	597	[2596]	GETUPVAL 	R39 U1 ; R39 := U1
	598	[2596]	GETTABLE 	R39 R39 K137 ; R39 := R39["SCENARIO_EVENT_HUB_TAG"]
	599	[2596]	EQ       	0 R38 R39 ; if R38 ~= R39 then PC := 603
	600	[2596]	JMP      	603 ; PC := 603
	601	[2597]	SETTABLE 	R32 K138 K35 ; R32["isFlotilla"] := true
	602	[2597]	JMP      	618 ; PC := 618
	603	[2598]	GETTABLE 	R38 R32 K2 ; R38 := R32["name"]
	604	[2598]	GETUPVAL 	R39 U1 ; R39 := U1
	605	[2598]	GETTABLE 	R39 R39 K139 ; R39 := R39["ENTRATI_LANDSCAPE_NODE_TAG"]
	606	[2598]	EQ       	0 R38 R39 ; if R38 ~= R39 then PC := 618
	607	[2598]	JMP      	618 ; PC := 618
	608	[2598]	GETUPVAL 	R38 U1 ; R38 := U1
	609	[2598]	GETTABLE 	R38 R38 K5 ; R38 := R38[0x52fb05b3]
	610	[2598]	GETUPVAL 	R39 U2 ; R39 := U2
	611	[2598]	GETTABLE 	R39 R39 K140 ; R39 := R39["deimosIntroQuestInfo"]
	612	[2598]	GETTABLE 	R39 R39 K141 ; R39 := R39["quest"]
	613	[2598]	CALL     	R38 2 2 ; R38 := R38(R39)
	614	[2598]	TEST     	R38 1 ; if R38 then PC := 618
	615	[2598]	JMP      	618 ; PC := 618
	616	[2599]	SETTABLE 	R32 K142 K35 ; R32["questSoloMode"] := true
	617	[2600]	SETTABLE 	R32 K143 K35 ; R32["forceHover"] := true
	618	[2603]	GETUPVAL 	R38 U4 ; R38 := U4
	619	[2603]	GETTABLE 	R38 R38 K26 ; R38 := R38["DESTROYED_NODE_TAG"]
	620	[2603]	EQ       	0 R7 R38 ; if R7 ~= R38 then PC := 623
	621	[2603]	JMP      	623 ; PC := 623
	622	[2604]	SETTABLE 	R32 K144 K35 ; R32["destroyed"] := true
	623	[2607]	GETGLOBAL	R38 K145 ; R38 := 0x33bdd652
	624	[2607]	GETTABLE 	R38 R38 K146 ; R38 := R38[0x23d5322f]
	625	[2607]	GETUPVAL 	R39 U6 ; R39 := U6
	626	[2607]	MOVE     	R40 R32 ; R40 := R32
	627	[2607]	CALL     	R38 3 1 ; R38(R39,R40)
	628	[2608]	GETUPVAL 	R38 U7 ; R38 := U7
	629	[2608]	GETGLOBAL	R39 K3 ; R39 := 0x64fb1586
	630	[2608]	GETTABLE 	R40 R32 K2 ; R40 := R32["name"]
	631	[2608]	CALL     	R39 2 2 ; R39 := R39(R40)
	632	[2608]	GETUPVAL 	R40 U6 ; R40 := U6
	633	[2608]	GETUPVAL 	R41 U6 ; R41 := U6
	634	[2608]	LEN      	R41 R41 ; R41 := # R41
	635	[2608]	GETTABLE 	R40 R40 R41 ; R40 := R40[R41]
	636	[2608]	SETTABLE 	R38 R39 R40 ; R38[R39] := R40
	637	[2610]	GETUPVAL 	R38 U6 ; R38 := U6
	638	[2610]	LEN      	R38 R38 ; R38 := # R38
	639	[2610]	SETTABLE 	R32 K147 R38 ; R32["id"] := R38
	640	[2611]	GETUPVAL 	R38 U8 ; R38 := U8
	641	[2611]	MOVE     	R39 R32 ; R39 := R32
	642	[2611]	CALL     	R38 2 2 ; R38 := R38(R39)
	643	[2611]	SETTABLE 	R32 K148 R38 ; R32["isSurfaceNode"] := R38
	644	[2613]	GETGLOBAL	R38 K29 ; R38 := mNewWarMode
	645	[2613]	TEST     	R38 0 ; if not R38 then PC := 652
	646	[2613]	JMP      	652 ; PC := 652
	647	[2613]	GETTABLE 	R38 R32 K148 ; R38 := R32["isSurfaceNode"]
	648	[2613]	TEST     	R38 1 ; if R38 then PC := 652
	649	[2613]	JMP      	652 ; PC := 652
	650	[2614]	SETTABLE 	R32 K127 K35 ; R32["isEmpty"] := true
	651	[2615]	SETTABLE 	R0 K27 K0 ; R0["deco"] := nil
	652	[2618]	LOADNIL  	R38 R38 ; R38 := nil
	653	[2619]	GETGLOBAL	R39 K13 ; R39 := 0x7b998233
	654	[2619]	GETTABLE 	R40 R0 K27 ; R40 := R0["deco"]
	655	[2619]	CALL     	R39 2 2 ; R39 := R39(R40)
	656	[2619]	TEST     	R39 1 ; if R39 then PC := 738
	657	[2619]	JMP      	738 ; PC := 738
	658	[2620]	NEWTABLE 	R39 0 3 ; R39 := {}
	659	[2620]	GETTABLE 	R40 R0 K72 ; R40 := R0["decoOffset"]
	660	[2620]	SETTABLE 	R39 K149 R40 ; R39["mOffset"] := R40
	661	[2620]	GETTABLE 	R40 R0 K31 ; R40 := R0["decoRotation"]
	662	[2620]	SETTABLE 	R39 K150 R40 ; R39["mRotation"] := R40
	663	[2620]	GETTABLE 	R40 R0 K33 ; R40 := R0["scale"]
	664	[2620]	SETTABLE 	R39 K151 R40 ; R39["mScale"] := R40
	665	[2620]	MOVE     	R38 R39 ; R38 := R39
	666	[2621]	GETGLOBAL	R39 K153 ; R39 := 0x1211d00f
	667	[2621]	SELF     	R39 R39 K154 ; R40 := R39; R39 := R39[0x05909209]
	668	[2621]	GETGLOBAL	R41 K155 ; R41 := 0x88efc25e
	669	[2621]	GETTABLE 	R42 R0 K27 ; R42 := R0["deco"]
	670	[2621]	CALL     	R41 2 2 ; R41 := R41(R42)
	671	[2621]	GETTABLE 	R42 R38 K149 ; R42 := R38["mOffset"]
	672	[2621]	ADD      	R42 R16 R42 ; R42 := R16 + R42
	673	[2621]	GETTABLE 	R43 R38 K150 ; R43 := R38["mRotation"]
	674	[2621]	CALL     	R39 5 2 ; R39 := R39(R40,R41,R42,R43)
	675	[2621]	SETTABLE 	R38 K152 R39 ; R38["mInstance"] := R39
	676	[2622]	GETGLOBAL	R39 K13 ; R39 := 0x7b998233
	677	[2622]	GETTABLE 	R40 R38 K152 ; R40 := R38["mInstance"]
	678	[2622]	CALL     	R39 2 2 ; R39 := R39(R40)
	679	[2622]	TEST     	R39 1 ; if R39 then PC := 737
	680	[2622]	JMP      	737 ; PC := 737
	681	[2623]	GETTABLE 	R39 R38 K151 ; R39 := R38["mScale"]
	682	[2624]	GETTABLE 	R40 R38 K152 ; R40 := R38["mInstance"]
	683	[2624]	SELF     	R40 R40 K156 ; R41 := R40; R40 := R40[0x2d9ba74f]
	684	[2624]	GETUPVAL 	R42 U9 ; R42 := U9
	685	[2624]	GETTABLE 	R42 R42 K157 ; R42 := R42["DECO_SCALE_MULTIPLIER"]
	686	[2624]	MUL      	R42 R39 R42 ; R42 := R39 * R42
	687	[2624]	OP_LOADBOOL	R43 1 0 ; R43 := true
	688	[2624]	CALL     	R40 4 1 ; R40(R41,R42,R43)
	689	[2625]	TEST     	R17 0 ; if not R17 then PC := 695
	690	[2625]	JMP      	695 ; PC := 695
	691	[2626]	GETTABLE 	R40 R38 K152 ; R40 := R38["mInstance"]
	692	[2626]	SELF     	R40 R40 K158 ; R41 := R40; R40 := R40[0x1dd41378]
	693	[2626]	MOVE     	R42 R17 ; R42 := R17
	694	[2626]	CALL     	R40 3 1 ; R40(R41,R42)
	695	[2629]	GETGLOBAL	R40 K75 ; R40 := _T
	696	[2629]	GETTABLE 	R40 R40 K159 ; R40 := R40["CachedVoidStormMissions"]
	697	[2629]	TEST     	R40 0 ; if not R40 then PC := 737
	698	[2629]	JMP      	737 ; PC := 737
	699	[2629]	GETGLOBAL	R40 K75 ; R40 := _T
	700	[2629]	GETTABLE 	R40 R40 K159 ; R40 := R40["CachedVoidStormMissions"]
	701	[2629]	GETTABLE 	R40 R40 R5 ; R40 := R40[R5]
	702	[2629]	TEST     	R40 0 ; if not R40 then PC := 737
	703	[2629]	JMP      	737 ; PC := 737
	704	[2629]	GETGLOBAL	R40 K75 ; R40 := _T
	705	[2629]	GETTABLE 	R40 R40 K160 ; R40 := R40["CustomStarChartNodeFilter"]
	706	[2629]	EQ       	0 R40 K0 ; if R40 ~= nil then PC := 737
	707	[2629]	JMP      	737 ; PC := 737
	708	[2630]	GETGLOBAL	R40 K75 ; R40 := _T
	709	[2630]	GETTABLE 	R40 R40 K159 ; R40 := R40["CachedVoidStormMissions"]
	710	[2630]	GETTABLE 	R40 R40 R5 ; R40 := R40[R5]
	711	[2631]	GETGLOBAL	R41 K46 ; R41 := 0x34291f5c
	712	[2631]	GETTABLE 	R41 R41 K47 ; R41 := R41[0x397b920f]
	713	[2631]	GETTABLE 	R42 R40 K44 ; R42 := R40["mActivation"]
	714	[2631]	CALL     	R41 2 2 ; R41 := R41(R42)
	715	[2632]	GETGLOBAL	R42 K46 ; R42 := 0x34291f5c
	716	[2632]	GETTABLE 	R42 R42 K47 ; R42 := R42[0x397b920f]
	717	[2632]	GETTABLE 	R43 R40 K59 ; R43 := R40["mExpiry"]
	718	[2632]	CALL     	R42 2 2 ; R42 := R42(R43)
	719	[2633]	LE       	0 R41 K23 ; if R41 > 0.000000 then PC := 737
	720	[2633]	JMP      	737 ; PC := 737
	721	[2633]	LT       	0 K23 R42 ; if 0.000000 >= R42 then PC := 737
	722	[2633]	JMP      	737 ; PC := 737
	723	[2634]	GETTABLE 	R43 R38 K152 ; R43 := R38["mInstance"]
	724	[2634]	SELF     	R43 R43 K161 ; R44 := R43; R43 := R43[0x47901f07]
	725	[2634]	GETGLOBAL	R45 K162 ; R45 := 0x7dd613b0
	726	[2634]	GETGLOBAL	R46 K163 ; R46 := EMPTY_SYMBOL
	727	[2634]	GETGLOBAL	R47 K164 ; R47 := ZERO_VECTOR
	728	[2634]	GETGLOBAL	R48 K32 ; R48 := 0x00046924
	729	[2634]	LOADK    	R49 := 90.000000
	730	[2634]	LOADK    	R50 := 45.000000
	731	[2634]	LOADK    	R51 := 90.000000
	732	[2634]	CALL     	R48 4 0 ; R48,... := R48(R49,R50,R51)
	733	[2634]	CALL     	R43 0 2 ; R43 := R43(R44,...)
	734	[2635]	SELF     	R44 R43 K156 ; R45 := R43; R44 := R43[0x2d9ba74f]
	735	[2635]	LOADK    	R46 K165 ; R46 := 0.100000
	736	[2635]	CALL     	R44 3 1 ; R44(R45,R46)
	737	[2639]	SETTABLE 	R32 K27 R38 ; R32["deco"] := R38
	738	[2642]	GETUPVAL 	R44 U1 ; R44 := U1
	739	[2642]	GETTABLE 	R44 R44 K68 ; R44 := R44["OROKIN_TOWER_NODE_TAG"]
	740	[2642]	EQ       	0 R4 R44 ; if R4 ~= R44 then PC := 765
	741	[2642]	JMP      	765 ; PC := 765
	742	[2644]	GETGLOBAL	R44 K19 ; R44 := mDebugUnlockAllMissions
	743	[2644]	TESTSET  	R2 R44 1 ; if R44 then PC := 749 else R2 := R44 
	744	[2644]	JMP      	749 ; PC := 749
	745	[2644]	GETUPVAL 	R44 U1 ; R44 := U1
	746	[2644]	GETTABLE 	R44 R44 K166 ; R44 := R44[0x70bc04d0]
	747	[2644]	CALL     	R44 1 2 ; R44 := R44()
	748	[2644]	MOVE     	R2 R44 ; R2 := R44
	749	[2645]	GETGLOBAL	R44 K13 ; R44 := 0x7b998233
	750	[2645]	MOVE     	R45 R38 ; R45 := R38
	751	[2645]	CALL     	R44 2 2 ; R44 := R44(R45)
	752	[2645]	TEST     	R44 1 ; if R44 then PC := 770
	753	[2645]	JMP      	770 ; PC := 770
	754	[2645]	GETGLOBAL	R44 K13 ; R44 := 0x7b998233
	755	[2645]	GETTABLE 	R45 R38 K152 ; R45 := R38["mInstance"]
	756	[2645]	CALL     	R44 2 2 ; R44 := R44(R45)
	757	[2645]	TEST     	R44 1 ; if R44 then PC := 770
	758	[2645]	JMP      	770 ; PC := 770
	759	[2646]	GETTABLE 	R44 R38 K152 ; R44 := R38["mInstance"]
	760	[2646]	SELF     	R44 R44 K167 ; R45 := R44; R44 := R44[0x768274d6]
	761	[2646]	MOVE     	R46 R2 ; R46 := R2
	762	[2646]	OP_LOADBOOL	R47 1 0 ; R47 := true
	763	[2646]	CALL     	R44 4 1 ; R44(R45,R46,R47)
	764	[2647]	JMP      	770 ; PC := 770
	765	[2648]	GETUPVAL 	R44 U1 ; R44 := U1
	766	[2648]	GETTABLE 	R44 R44 K139 ; R44 := R44["ENTRATI_LANDSCAPE_NODE_TAG"]
	767	[2648]	EQ       	0 R4 R44 ; if R4 ~= R44 then PC := 770
	768	[2648]	JMP      	770 ; PC := 770
	769	[2649]	OP_LOADBOOL	R2 1 0 ; R2 := true
	770	[2652]	SETTABLE 	R32 K168 R2 ; R32["locationEnabled"] := R2
	771	[2654]	GETGLOBAL	R44 K82 ; R44 := 0xae91e43b
	772	[2654]	SELF     	R44 R44 K169 ; R45 := R44; R44 := R44[0xf64b7262]
	773	[2654]	MOVE     	R46 R26 ; R46 := R26
	774	[2654]	LOADK    	R47 K170 ; R47 := "Btn"
	775	[2654]	LOADK    	R48 := 85.000000
	776	[2654]	GETTABLE 	R49 R32 K147 ; R49 := R32["id"]
	777	[2654]	CALL     	R44 6 1 ; R44(R45,R46,R47,R48,R49)
	778	[2655]	GETGLOBAL	R44 K82 ; R44 := 0xae91e43b
	779	[2655]	SELF     	R44 R44 K169 ; R45 := R44; R44 := R44[0xf64b7262]
	780	[2655]	MOVE     	R46 R26 ; R46 := R26
	781	[2655]	LOADK    	R47 K89 ; R47 := "Name.Bg"
	782	[2655]	LOADK    	R48 := 85.000000
	783	[2655]	GETTABLE 	R49 R32 K147 ; R49 := R32["id"]
	784	[2655]	CALL     	R44 6 1 ; R44(R45,R46,R47,R48,R49)
	785	[2656]	GETGLOBAL	R44 K82 ; R44 := 0xae91e43b
	786	[2656]	SELF     	R44 R44 K171 ; R45 := R44; R44 := R44[0x1e5b5cfe]
	787	[2656]	MOVE     	R46 R26 ; R46 := R26
	788	[2656]	LOADK    	R47 K172 ; R47 := ".Btn"
	789	[2656]	CONCAT   	R46 R46 R47 ; R46 := R46 .. R47
	790	[2656]	LOADK    	R47 K173 ; R47 := "NodeRollOver"
	791	[2656]	LOADK    	R48 K174 ; R48 := "NodeRollOut"
	792	[2656]	LOADK    	R49 K175 ; R49 := "NodeSelect"
	793	[2656]	LOADNIL  	R50 R50 ; R50 := nil
	794	[2656]	CALL     	R44 7 1 ; R44(R45,R46,R47,R48,R49,R50)
	795	[2657]	GETGLOBAL	R44 K82 ; R44 := 0xae91e43b
	796	[2657]	SELF     	R44 R44 K171 ; R45 := R44; R44 := R44[0x1e5b5cfe]
	797	[2657]	MOVE     	R46 R26 ; R46 := R26
	798	[2657]	LOADK    	R47 K86 ; R47 := ".Name.Bg"
	799	[2657]	CONCAT   	R46 R46 R47 ; R46 := R46 .. R47
	800	[2657]	LOADK    	R47 K173 ; R47 := "NodeRollOver"
	801	[2657]	LOADK    	R48 K174 ; R48 := "NodeRollOut"
	802	[2657]	LOADK    	R49 K175 ; R49 := "NodeSelect"
	803	[2657]	LOADNIL  	R50 R50 ; R50 := nil
	804	[2657]	CALL     	R44 7 1 ; R44(R45,R46,R47,R48,R49,R50)
	805	[2660]	GETGLOBAL	R44 K82 ; R44 := 0xae91e43b
	806	[2660]	SELF     	R44 R44 K169 ; R45 := R44; R44 := R44[0xf64b7262]
	807	[2660]	MOVE     	R46 R26 ; R46 := R26
	808	[2660]	LOADK    	R47 K170 ; R47 := "Btn"
	809	[2660]	LOADK    	R48 := 12.000000
	810	[2660]	LOADK    	R49 := 48.000000
	811	[2660]	CALL     	R44 6 1 ; R44(R45,R46,R47,R48,R49)
	812	[2661]	GETGLOBAL	R44 K82 ; R44 := 0xae91e43b
	813	[2661]	SELF     	R44 R44 K169 ; R45 := R44; R44 := R44[0xf64b7262]
	814	[2661]	MOVE     	R46 R26 ; R46 := R26
	815	[2661]	LOADK    	R47 K170 ; R47 := "Btn"
	816	[2661]	LOADK    	R48 := 13.000000
	817	[2661]	LOADK    	R49 := 32.000000
	818	[2661]	CALL     	R44 6 1 ; R44(R45,R46,R47,R48,R49)
	819	[2662]	GETGLOBAL	R44 K82 ; R44 := 0xae91e43b
	820	[2662]	SELF     	R44 R44 K176 ; R45 := R44; R44 := R44[0xcd12f3f1]
	821	[2662]	GETTABLE 	R46 R32 K117 ; R46 := R32["memberIndex"]
	822	[2662]	LOADK    	R47 := 10.000000
	823	[2662]	LOADK    	R48 := 0.000000
	824	[2662]	CALL     	R44 5 1 ; R44(R45,R46,R47,R48)
	825	[2663]	GETGLOBAL	R44 K82 ; R44 := 0xae91e43b
	826	[2663]	SELF     	R44 R44 K176 ; R45 := R44; R44 := R44[0xcd12f3f1]
	827	[2663]	GETTABLE 	R46 R32 K118 ; R46 := R32["labelIndex"]
	828	[2663]	LOADK    	R47 := 10.000000
	829	[2663]	GETUPVAL 	R48 U10 ; R48 := U10
	830	[2663]	MOVE     	R49 R32 ; R49 := R32
	831	[2663]	CALL     	R48 2 0 ; R48,... := R48(R49)
	832	[2663]	CALL     	R44 0 1 ; R44(R45,...)
	833	[2665]	GETGLOBAL	R44 K51 ; R44 := 0x0032441c
	834	[2665]	GETTABLE 	R44 R44 K177 ; R44 := R44["StalkerMode"]
	835	[2665]	TEST     	R44 0 ; if not R44 then PC := 861
	836	[2665]	JMP      	861 ; PC := 861
	837	[2666]	GETUPVAL 	R44 U1 ; R44 := U1
	838	[2666]	GETTABLE 	R44 R44 K178 ; R44 := R44[0x7155f039]
	839	[2666]	MOVE     	R45 R5 ; R45 := R5
	840	[2666]	GETGLOBAL	R46 K54 ; R46 := mRadialSolarMap
	841	[2666]	MOVE     	R47 R0 ; R47 := R0
	842	[2666]	CALL     	R44 4 2 ; R44 := R44(R45,R46,R47)
	843	[2667]	GETGLOBAL	R45 K82 ; R45 := 0xae91e43b
	844	[2667]	SELF     	R45 R45 K179 ; R46 := R45; R45 := R45[0xaade900e]
	845	[2667]	MOVE     	R47 R26 ; R47 := R26
	846	[2667]	LOADK    	R48 := 11.000000
	847	[2667]	GETUPVAL 	R49 U11 ; R49 := U11
	848	[2667]	EQ       	1 R49 K0 ; if R49 == nil then PC := 858
	849	[2667]	JMP      	858 ; PC := 858
	850	[2667]	GETUPVAL 	R49 U11 ; R49 := U11
	851	[2667]	GETTABLE 	R49 R49 R44 ; R49 := R49[R44]
	852	[2667]	EQ       	1 R49 K0 ; if R49 == nil then PC := 858
	853	[2667]	JMP      	858 ; PC := 858
	854	[2667]	GETUPVAL 	R49 U11 ; R49 := U11
	855	[2667]	GETTABLE 	R49 R49 R44 ; R49 := R49[R44]
	856	[2667]	LT       	1 K23 R49 ; if 0.000000 < R49 then PC := 859
	857	[2667]	JMP      	859 ; PC := 859
	858	[2667]	OP_LOADBOOL	R49 0 1 ; R49 := false; PC := 859
	859	[2667]	OP_LOADBOOL	R49 1 0 ; R49 := true
	860	[2667]	CALL     	R45 5 1 ; R45(R46,R47,R48,R49)
	861	[2670]	RETURN   	R32 2 ; return R32 
	862	[2671]	RETURN   	R0 1 ; return 

function #57 <?:2673,2793> (450 instructions, 1800 bytes at 0000021130B69500)
1 param, 16 slots, 8 upvalues, 0 locals, 89 constants, 0 functions
	1	[2674]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[2674]	GETTABLE 	R1 R1 K1 ; R1 := R1[0x580db50d]
	3	[2674]	GETTABLE 	R2 R0 K2 ; R2 := R0["radialSector"]
	4	[2674]	GETGLOBAL	R3 K3 ; R3 := mRadialSolarMap
	5	[2674]	GETUPVAL 	R4 U1 ; R4 := U1
	6	[2674]	CALL     	R4 1 0 ; R4,... := R4()
	7	[2674]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	8	[2674]	SETTABLE 	R0 K0 R1 ; R0["completed"] := R1
	9	[2675]	GETUPVAL 	R1 U2 ; R1 := U2
	10	[2675]	MOVE     	R2 R0 ; R2 := R0
	11	[2675]	CALL     	R1 2 2 ; R1 := R1(R2)
	12	[2675]	NOT      	R1 R1 ; R1 := not R1
	13	[2675]	SETTABLE 	R0 K4 R1 ; R0["locked"] := R1
	14	[2676]	GETUPVAL 	R1 U3 ; R1 := U3
	15	[2676]	MOVE     	R2 R0 ; R2 := R0
	16	[2676]	CALL     	R1 2 5 ; R1,R2,R3,R4 := R1(R2)
	17	[2676]	SETTABLE 	R0 K8 R4 ; R0["iconY"] := R4
	18	[2676]	SETTABLE 	R0 K7 R3 ; R0["backerSize"] := R3
	19	[2676]	SETTABLE 	R0 K6 R2 ; R0["iconSize"] := R2
	20	[2676]	SETTABLE 	R0 K5 R1 ; R0["icon"] := R1
	21	[2678]	GETGLOBAL	R1 K9 ; R1 := 0x7b998233
	22	[2678]	GETTABLE 	R2 R0 K5 ; R2 := R0["icon"]
	23	[2678]	CALL     	R1 2 2 ; R1 := R1(R2)
	24	[2678]	TEST     	R1 1 ; if R1 then PC := 29
	25	[2678]	JMP      	29 ; PC := 29
	26	[2678]	GETTABLE 	R1 R0 K0 ; R1 := R0["completed"]
	27	[2678]	TEST     	R1 1 ; if R1 then PC := 32
	28	[2678]	JMP      	32 ; PC := 32
	29	[2678]	GETTABLE 	R1 R0 K10 ; R1 := R0["isActiveMission"]
	30	[2678]	TEST     	R1 0 ; if not R1 then PC := 34
	31	[2678]	JMP      	34 ; PC := 34
	32	[2680]	SETTABLE 	R0 K11 K12 ; R0["special"] := true
	33	[2680]	JMP      	38 ; PC := 38
	34	[2681]	GETTABLE 	R1 R0 K13 ; R1 := R0["notificationClip"]
	35	[2681]	EQ       	1 R1 K14 ; if R1 == nil then PC := 38
	36	[2681]	JMP      	38 ; PC := 38
	37	[2682]	SETTABLE 	R0 K11 K14 ; R0["special"] := nil
	38	[2685]	GETUPVAL 	R1 U4 ; R1 := U4
	39	[2685]	GETTABLE 	R1 R1 K15 ; R1 := R1[0x06d055f9]
	40	[2685]	GETGLOBAL	R2 K16 ; R2 := mNewWarMode
	41	[2685]	GETGLOBAL	R3 K17 ; R3 := 0xbb72228e
	42	[2685]	GETGLOBAL	R4 K18 ; R4 := 0x0ba11dc7
	43	[2685]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	44	[2686]	LOADNIL  	R2 R2 ; R2 := nil
	45	[2687]	LOADK    	R3 := 56.000000
	46	[2688]	GETTABLE 	R4 R0 K6 ; R4 := R0["iconSize"]
	47	[2689]	GETTABLE 	R5 R0 K8 ; R5 := R0["iconY"]
	48	[2690]	GETGLOBAL	R6 K19 ; R6 := 0x64fb1586
	49	[2690]	GETTABLE 	R7 R0 K20 ; R7 := R0["name"]
	50	[2690]	CALL     	R6 2 2 ; R6 := R6(R7)
	51	[2691]	GETGLOBAL	R7 K21 ; R7 := _T
	52	[2691]	GETTABLE 	R7 R7 K22 ; R7 := R7["CachedSkullNodes"]
	53	[2691]	GETTABLE 	R7 R7 R6 ; R7 := R7[R6]
	54	[2691]	TEST     	R7 1 ; if R7 then PC := 69
	55	[2691]	JMP      	69 ; PC := 69
	56	[2691]	GETGLOBAL	R7 K21 ; R7 := _T
	57	[2691]	GETTABLE 	R7 R7 K23 ; R7 := R7["CachedAlerts"]
	58	[2691]	GETTABLE 	R7 R7 R6 ; R7 := R7[R6]
	59	[2691]	TEST     	R7 0 ; if not R7 then PC := 80
	60	[2691]	JMP      	80 ; PC := 80
	61	[2691]	GETGLOBAL	R7 K21 ; R7 := _T
	62	[2691]	GETTABLE 	R7 R7 K23 ; R7 := R7["CachedAlerts"]
	63	[2691]	GETTABLE 	R7 R7 R6 ; R7 := R7[R6]
	64	[2691]	GETTABLE 	R7 R7 K24 ; R7 := R7["mAlertInfo"]
	65	[2691]	GETTABLE 	R7 R7 K25 ; R7 := R7["mMissionInfo"]
	66	[2691]	GETTABLE 	R7 R7 K26 ; R7 := R7["nightmare"]
	67	[2691]	TEST     	R7 0 ; if not R7 then PC := 80
	68	[2691]	JMP      	80 ; PC := 80
	69	[2691]	GETUPVAL 	R7 U5 ; R7 := U5
	70	[2691]	GETTABLE 	R7 R7 R6 ; R7 := R7[R6]
	71	[2691]	TEST     	R7 0 ; if not R7 then PC := 79
	72	[2691]	JMP      	79 ; PC := 79
	73	[2691]	GETUPVAL 	R7 U5 ; R7 := U5
	74	[2691]	GETTABLE 	R7 R7 R6 ; R7 := R7[R6]
	75	[2691]	GETTABLE 	R7 R7 K27 ; R7 := R7["IsQuest"]
	76	[2691]	NOT      	R7 R7 ; R7 := not R7
	77	[2691]	JMP      	80 ; PC := 80
	78	[2691]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 79
	79	[2691]	OP_LOADBOOL	R7 1 0 ; R7 := true
	80	[2692]	GETGLOBAL	R8 K28 ; R8 := 0x0032441c
	81	[2692]	GETTABLE 	R8 R8 K29 ; R8 := R8["CachedGoalInfo"]
	82	[2692]	TEST     	R8 0 ; if not R8 then PC := 130
	83	[2692]	JMP      	130 ; PC := 130
	84	[2692]	GETGLOBAL	R8 K28 ; R8 := 0x0032441c
	85	[2692]	GETTABLE 	R8 R8 K29 ; R8 := R8["CachedGoalInfo"]
	86	[2692]	GETTABLE 	R8 R8 R6 ; R8 := R8[R6]
	87	[2692]	TEST     	R8 0 ; if not R8 then PC := 130
	88	[2692]	JMP      	130 ; PC := 130
	89	[2692]	GETGLOBAL	R8 K9 ; R8 := 0x7b998233
	90	[2692]	GETGLOBAL	R9 K28 ; R9 := 0x0032441c
	91	[2692]	GETTABLE 	R9 R9 K29 ; R9 := R9["CachedGoalInfo"]
	92	[2692]	GETTABLE 	R9 R9 R6 ; R9 := R9[R6]
	93	[2692]	GETTABLE 	R9 R9 K30 ; R9 := R9["mIcon"]
	94	[2692]	CALL     	R8 2 2 ; R8 := R8(R9)
	95	[2692]	TEST     	R8 1 ; if R8 then PC := 130
	96	[2692]	JMP      	130 ; PC := 130
	97	[2692]	GETGLOBAL	R8 K28 ; R8 := 0x0032441c
	98	[2692]	GETTABLE 	R8 R8 K29 ; R8 := R8["CachedGoalInfo"]
	99	[2692]	GETTABLE 	R8 R8 R6 ; R8 := R8[R6]
	100	[2692]	GETTABLE 	R8 R8 K31 ; R8 := R8["mTag"]
	101	[2692]	GETUPVAL 	R9 U6 ; R9 := U6
	102	[2692]	GETTABLE 	R9 R9 K32 ; R9 := R9["PRIME_VAULT_TRADER_GOAL"]
	103	[2692]	EQ       	1 R8 R9 ; if R8 == R9 then PC := 130
	104	[2692]	JMP      	130 ; PC := 130
	105	[2692]	GETGLOBAL	R8 K16 ; R8 := mNewWarMode
	106	[2692]	TEST     	R8 1 ; if R8 then PC := 130
	107	[2692]	JMP      	130 ; PC := 130
	108	[2693]	GETGLOBAL	R8 K33 ; R8 := 0x7f5022cf
	109	[2693]	GETTABLE 	R8 R8 K34 ; R8 := R8[0xa5c556b9]
	110	[2693]	GETGLOBAL	R9 K19 ; R9 := 0x64fb1586
	111	[2693]	GETGLOBAL	R10 K28 ; R10 := 0x0032441c
	112	[2693]	GETTABLE 	R10 R10 K29 ; R10 := R10["CachedGoalInfo"]
	113	[2693]	GETTABLE 	R10 R10 R6 ; R10 := R10[R6]
	114	[2693]	GETTABLE 	R10 R10 K31 ; R10 := R10["mTag"]
	115	[2693]	CALL     	R9 2 2 ; R9 := R9(R10)
	116	[2693]	LOADK    	R10 K35 ; R10 := "Halloween"
	117	[2693]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	118	[2693]	EQ       	1 R8 K14 ; if R8 == nil then PC := 123
	119	[2693]	JMP      	123 ; PC := 123
	120	[2694]	GETGLOBAL	R1 K36 ; R1 := 0x2627cf16
	121	[2695]	LOADK    	R3 := 0.000000
	122	[2695]	JMP      	254 ; PC := 254
	123	[2697]	GETGLOBAL	R1 K37 ; R1 := 0xa1569a90
	124	[2698]	GETGLOBAL	R8 K28 ; R8 := 0x0032441c
	125	[2698]	GETTABLE 	R8 R8 K29 ; R8 := R8["CachedGoalInfo"]
	126	[2698]	GETTABLE 	R8 R8 R6 ; R8 := R8[R6]
	127	[2698]	GETTABLE 	R2 R8 K30 ; R2 := R8["mIcon"]
	128	[2699]	LOADK    	R3 := 90.000000
	129	[2700]	JMP      	254 ; PC := 254
	130	[2701]	GETGLOBAL	R8 K9 ; R8 := 0x7b998233
	131	[2701]	GETTABLE 	R9 R0 K5 ; R9 := R0["icon"]
	132	[2701]	CALL     	R8 2 2 ; R8 := R8(R9)
	133	[2701]	TEST     	R8 1 ; if R8 then PC := 190
	134	[2701]	JMP      	190 ; PC := 190
	135	[2701]	GETTABLE 	R8 R0 K0 ; R8 := R0["completed"]
	136	[2701]	TEST     	R8 0 ; if not R8 then PC := 190
	137	[2701]	JMP      	190 ; PC := 190
	138	[2702]	GETUPVAL 	R8 U4 ; R8 := U4
	139	[2702]	GETTABLE 	R8 R8 K15 ; R8 := R8[0x06d055f9]
	140	[2702]	MOVE     	R9 R7 ; R9 := R7
	141	[2702]	GETGLOBAL	R10 K38 ; R10 := 0xc690704a
	142	[2702]	GETUPVAL 	R11 U4 ; R11 := U4
	143	[2702]	GETTABLE 	R11 R11 K15 ; R11 := R11[0x06d055f9]
	144	[2702]	GETTABLE 	R12 R0 K39 ; R12 := R0["newWarMode"]
	145	[2702]	GETGLOBAL	R13 K40 ; R13 := 0x048f1770
	146	[2702]	GETGLOBAL	R14 K37 ; R14 := 0xa1569a90
	147	[2702]	CALL     	R11 4 0 ; R11,... := R11(R12,R13,R14)
	148	[2702]	CALL     	R8 0 2 ; R8 := R8(R9,...)
	149	[2702]	MOVE     	R1 R8 ; R1 := R8
	150	[2703]	GETTABLE 	R2 R0 K5 ; R2 := R0["icon"]
	151	[2704]	GETUPVAL 	R8 U4 ; R8 := U4
	152	[2704]	GETTABLE 	R8 R8 K15 ; R8 := R8[0x06d055f9]
	153	[2704]	GETTABLE 	R9 R0 K7 ; R9 := R0["backerSize"]
	154	[2704]	EQ       	1 R9 K14 ; if R9 == nil then PC := 157
	155	[2704]	JMP      	157 ; PC := 157
	156	[2704]	OP_LOADBOOL	R9 0 1 ; R9 := false; PC := 157
	157	[2704]	OP_LOADBOOL	R9 1 0 ; R9 := true
	158	[2704]	LOADK    	R10 := 84.000000
	159	[2704]	GETTABLE 	R11 R0 K7 ; R11 := R0["backerSize"]
	160	[2704]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	161	[2704]	MOVE     	R3 R8 ; R3 := R8
	162	[2706]	GETTABLE 	R8 R0 K27 ; R8 := R0["IsQuest"]
	163	[2706]	TEST     	R8 0 ; if not R8 then PC := 173
	164	[2706]	JMP      	173 ; PC := 173
	165	[2707]	GETGLOBAL	R8 K41 ; R8 := 0x33bdd652
	166	[2707]	GETTABLE 	R8 R8 K42 ; R8 := R8[0x23d5322f]
	167	[2707]	GETGLOBAL	R9 K43 ; R9 := mFxNodes
	168	[2707]	GETTABLE 	R9 R9 K44 ; R9 := R9["Quest"]
	169	[2707]	NEWTABLE 	R10 0 1 ; R10 := {}
	170	[2707]	SETTABLE 	R10 K45 R0 ; R10["Node"] := R0
	171	[2707]	CALL     	R8 3 1 ; R8(R9,R10)
	172	[2707]	JMP      	254 ; PC := 254
	173	[2708]	GETTABLE 	R8 R0 K46 ; R8 := R0["IsHomeNode"]
	174	[2708]	TEST     	R8 0 ; if not R8 then PC := 254
	175	[2708]	JMP      	254 ; PC := 254
	176	[2708]	GETGLOBAL	R8 K47 ; R8 := 0x25d99d89
	177	[2708]	SELF     	R8 R8 K48 ; R9 := R8; R8 := R8[0x21a1810f]
	178	[2708]	GETTABLE 	R10 R0 K49 ; R10 := R0["NodeIntro"]
	179	[2708]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	180	[2708]	TEST     	R8 1 ; if R8 then PC := 254
	181	[2708]	JMP      	254 ; PC := 254
	182	[2709]	GETGLOBAL	R8 K41 ; R8 := 0x33bdd652
	183	[2709]	GETTABLE 	R8 R8 K42 ; R8 := R8[0x23d5322f]
	184	[2709]	GETGLOBAL	R9 K43 ; R9 := mFxNodes
	185	[2709]	GETTABLE 	R9 R9 K50 ; R9 := R9["Pending"]
	186	[2709]	NEWTABLE 	R10 0 1 ; R10 := {}
	187	[2709]	SETTABLE 	R10 K45 R0 ; R10["Node"] := R0
	188	[2709]	CALL     	R8 3 1 ; R8(R9,R10)
	189	[2710]	JMP      	254 ; PC := 254
	190	[2711]	GETTABLE 	R8 R0 K51 ; R8 := R0["isJunction"]
	191	[2711]	TEST     	R8 0 ; if not R8 then PC := 215
	192	[2711]	JMP      	215 ; PC := 215
	193	[2712]	GETTABLE 	R8 R0 K4 ; R8 := R0["locked"]
	194	[2712]	TEST     	R8 0 ; if not R8 then PC := 199
	195	[2712]	JMP      	199 ; PC := 199
	196	[2713]	GETGLOBAL	R1 K52 ; R1 := 0xbe40bc23
	197	[2714]	LOADK    	R3 := 70.000000
	198	[2714]	JMP      	213 ; PC := 213
	199	[2716]	LOADK    	R3 := 90.000000
	200	[2717]	GETTABLE 	R8 R0 K0 ; R8 := R0["completed"]
	201	[2717]	TEST     	R8 0 ; if not R8 then PC := 205
	202	[2717]	JMP      	205 ; PC := 205
	203	[2718]	GETGLOBAL	R1 K53 ; R1 := 0xa3c3c3c2
	204	[2718]	JMP      	213 ; PC := 213
	205	[2720]	GETGLOBAL	R1 K54 ; R1 := 0x5cedcc7a
	206	[2721]	GETGLOBAL	R8 K41 ; R8 := 0x33bdd652
	207	[2721]	GETTABLE 	R8 R8 K42 ; R8 := R8[0x23d5322f]
	208	[2721]	GETGLOBAL	R9 K43 ; R9 := mFxNodes
	209	[2721]	GETTABLE 	R9 R9 K50 ; R9 := R9["Pending"]
	210	[2721]	NEWTABLE 	R10 0 1 ; R10 := {}
	211	[2721]	SETTABLE 	R10 K45 R0 ; R10["Node"] := R0
	212	[2721]	CALL     	R8 3 1 ; R8(R9,R10)
	213	[2724]	GETTABLE 	R2 R0 K5 ; R2 := R0["icon"]
	214	[2724]	JMP      	254 ; PC := 254
	215	[2725]	GETTABLE 	R8 R0 K0 ; R8 := R0["completed"]
	216	[2725]	TEST     	R8 1 ; if R8 then PC := 250
	217	[2725]	JMP      	250 ; PC := 250
	218	[2725]	GETTABLE 	R8 R0 K55 ; R8 := R0["displayMissionOverride"]
	219	[2725]	TEST     	R8 1 ; if R8 then PC := 250
	220	[2725]	JMP      	250 ; PC := 250
	221	[2725]	GETGLOBAL	R8 K56 ; R8 := mVorsPrizeQuestActiveNode
	222	[2725]	EQ       	1 R8 K14 ; if R8 == nil then PC := 227
	223	[2725]	JMP      	227 ; PC := 227
	224	[2725]	GETTABLE 	R8 R0 K27 ; R8 := R0["IsQuest"]
	225	[2725]	TEST     	R8 0 ; if not R8 then PC := 250
	226	[2725]	JMP      	250 ; PC := 250
	227	[2726]	GETTABLE 	R8 R0 K4 ; R8 := R0["locked"]
	228	[2726]	TEST     	R8 1 ; if R8 then PC := 231
	229	[2726]	JMP      	231 ; PC := 231
	230	[2727]	SETTABLE 	R0 K11 K12 ; R0["special"] := true
	231	[2729]	GETTABLE 	R8 R0 K27 ; R8 := R0["IsQuest"]
	232	[2729]	TEST     	R8 0 ; if not R8 then PC := 237
	233	[2729]	JMP      	237 ; PC := 237
	234	[2730]	GETGLOBAL	R8 K28 ; R8 := 0x0032441c
	235	[2730]	GETTABLE 	R1 R8 K57 ; R1 := R8["UITexture_Story"]
	236	[2730]	JMP      	254 ; PC := 254
	237	[2731]	GETTABLE 	R8 R0 K4 ; R8 := R0["locked"]
	238	[2731]	TEST     	R8 1 ; if R8 then PC := 254
	239	[2731]	JMP      	254 ; PC := 254
	240	[2732]	LOADK    	R3 := 120.000000
	241	[2733]	GETGLOBAL	R1 K58 ; R1 := 0xfed8bb46
	242	[2734]	GETGLOBAL	R8 K41 ; R8 := 0x33bdd652
	243	[2734]	GETTABLE 	R8 R8 K42 ; R8 := R8[0x23d5322f]
	244	[2734]	GETGLOBAL	R9 K43 ; R9 := mFxNodes
	245	[2734]	GETTABLE 	R9 R9 K50 ; R9 := R9["Pending"]
	246	[2734]	NEWTABLE 	R10 0 1 ; R10 := {}
	247	[2734]	SETTABLE 	R10 K45 R0 ; R10["Node"] := R0
	248	[2734]	CALL     	R8 3 1 ; R8(R9,R10)
	249	[2735]	JMP      	254 ; PC := 254
	250	[2736]	GETTABLE 	R8 R0 K4 ; R8 := R0["locked"]
	251	[2736]	TEST     	R8 1 ; if R8 then PC := 254
	252	[2736]	JMP      	254 ; PC := 254
	253	[2737]	GETGLOBAL	R1 K36 ; R1 := 0x2627cf16
	254	[2740]	GETTABLE 	R8 R0 K59 ; R8 := R0["guildId"]
	255	[2740]	EQ       	1 R8 K14 ; if R8 == nil then PC := 285
	256	[2740]	JMP      	285 ; PC := 285
	257	[2740]	GETTABLE 	R8 R0 K60 ; R8 := R0["clanTier"]
	258	[2740]	EQ       	1 R8 K14 ; if R8 == nil then PC := 285
	259	[2740]	JMP      	285 ; PC := 285
	260	[2741]	GETTABLE 	R8 R0 K61 ; R8 := R0["isTennocon"]
	261	[2741]	TEST     	R8 0 ; if not R8 then PC := 265
	262	[2741]	JMP      	265 ; PC := 265
	263	[2742]	GETGLOBAL	R2 K62 ; R2 := 0x6241f9c6
	264	[2742]	JMP      	268 ; PC := 268
	265	[2744]	GETGLOBAL	R8 K63 ; R8 := 0xb0d99fc4
	266	[2744]	GETTABLE 	R9 R0 K60 ; R9 := R0["clanTier"]
	267	[2744]	GETTABLE 	R2 R8 R9 ; R2 := R8[R9]
	268	[2746]	GETGLOBAL	R8 K28 ; R8 := 0x0032441c
	269	[2746]	GETTABLE 	R1 R8 K64 ; R1 := R8["UITexture_CircleGradientBacker"]
	270	[2747]	GETGLOBAL	R8 K65 ; R8 := 0xae91e43b
	271	[2747]	SELF     	R8 R8 K66 ; R9 := R8; R8 := R8[0xf64b7262]
	272	[2747]	GETTABLE 	R10 R0 K67 ; R10 := R0["clipName"]
	273	[2747]	LOADK    	R11 K68 ; R11 := "Node.Container.Node"
	274	[2747]	LOADK    	R12 := 9.000000
	275	[2747]	LOADK    	R13 K69 ; R13 := 65518.000000
	276	[2747]	CALL     	R8 6 1 ; R8(R9,R10,R11,R12,R13)
	277	[2748]	GETGLOBAL	R8 K65 ; R8 := 0xae91e43b
	278	[2748]	SELF     	R8 R8 K66 ; R9 := R8; R8 := R8[0xf64b7262]
	279	[2748]	GETTABLE 	R10 R0 K67 ; R10 := R0["clipName"]
	280	[2748]	LOADK    	R11 K68 ; R11 := "Node.Container.Node"
	281	[2748]	LOADK    	R12 := 10.000000
	282	[2748]	LOADK    	R13 := 0.000000
	283	[2748]	CALL     	R8 6 1 ; R8(R9,R10,R11,R12,R13)
	284	[2748]	JMP      	288 ; PC := 288
	285	[2750]	EQ       	0 R6 K70 ; if R6 ~= "SolNode332" then PC := 288
	286	[2750]	JMP      	288 ; PC := 288
	287	[2751]	LOADK    	R3 := 120.000000
	288	[2754]	GETTABLE 	R8 R0 K10 ; R8 := R0["isActiveMission"]
	289	[2754]	SETTABLE 	R0 K71 R8 ; R0["visibleLabel"] := R8
	290	[2755]	GETGLOBAL	R8 K65 ; R8 := 0xae91e43b
	291	[2755]	SELF     	R8 R8 K72 ; R9 := R8; R8 := R8[0xc0a3774b]
	292	[2755]	GETTABLE 	R10 R0 K67 ; R10 := R0["clipName"]
	293	[2755]	LOADK    	R11 K73 ; R11 := "Node.Container.Highlight"
	294	[2755]	LOADK    	R12 := 11.000000
	295	[2755]	GETTABLE 	R13 R0 K4 ; R13 := R0["locked"]
	296	[2755]	TEST     	R13 1 ; if R13 then PC := 301
	297	[2755]	JMP      	301 ; PC := 301
	298	[2755]	GETTABLE 	R13 R0 K0 ; R13 := R0["completed"]
	299	[2755]	NOT      	R13 R13 ; R13 := not R13
	300	[2755]	JMP      	303 ; PC := 303
	301	[2755]	OP_LOADBOOL	R13 0 1 ; R13 := false; PC := 302
	302	[2755]	OP_LOADBOOL	R13 1 0 ; R13 := true
	303	[2755]	CALL     	R8 6 1 ; R8(R9,R10,R11,R12,R13)
	304	[2757]	GETGLOBAL	R8 K65 ; R8 := 0xae91e43b
	305	[2757]	SELF     	R8 R8 K74 ; R9 := R8; R8 := R8[0x1cb415c1]
	306	[2757]	GETTABLE 	R10 R0 K67 ; R10 := R0["clipName"]
	307	[2757]	LOADK    	R11 K75 ; R11 := ".Node.Container.Node"
	308	[2757]	CONCAT   	R10 R10 R11 ; R10 := R10 .. R11
	309	[2757]	MOVE     	R11 R1 ; R11 := R1
	310	[2757]	CALL     	R8 4 1 ; R8(R9,R10,R11)
	311	[2758]	GETGLOBAL	R8 K65 ; R8 := 0xae91e43b
	312	[2758]	SELF     	R8 R8 K66 ; R9 := R8; R8 := R8[0xf64b7262]
	313	[2758]	GETTABLE 	R10 R0 K67 ; R10 := R0["clipName"]
	314	[2758]	LOADK    	R11 K68 ; R11 := "Node.Container.Node"
	315	[2758]	LOADK    	R12 := 12.000000
	316	[2758]	MOVE     	R13 R3 ; R13 := R3
	317	[2758]	CALL     	R8 6 1 ; R8(R9,R10,R11,R12,R13)
	318	[2759]	GETGLOBAL	R8 K65 ; R8 := 0xae91e43b
	319	[2759]	SELF     	R8 R8 K66 ; R9 := R8; R8 := R8[0xf64b7262]
	320	[2759]	GETTABLE 	R10 R0 K67 ; R10 := R0["clipName"]
	321	[2759]	LOADK    	R11 K68 ; R11 := "Node.Container.Node"
	322	[2759]	LOADK    	R12 := 13.000000
	323	[2759]	MOVE     	R13 R3 ; R13 := R3
	324	[2759]	CALL     	R8 6 1 ; R8(R9,R10,R11,R12,R13)
	325	[2760]	GETTABLE 	R8 R0 K4 ; R8 := R0["locked"]
	326	[2760]	TEST     	R8 0 ; if not R8 then PC := 331
	327	[2760]	JMP      	331 ; PC := 331
	328	[2760]	GETTABLE 	R8 R0 K76 ; R8 := R0["forceHover"]
	329	[2760]	EQ       	0 R8 K12 ; if R8 ~= true then PC := 345
	330	[2760]	JMP      	345 ; PC := 345
	331	[2760]	GETGLOBAL	R8 K21 ; R8 := _T
	332	[2760]	GETTABLE 	R8 R8 K77 ; R8 := R8["gPendingMission"]
	333	[2760]	EQ       	1 R8 K14 ; if R8 == nil then PC := 346
	334	[2760]	JMP      	346 ; PC := 346
	335	[2760]	GETTABLE 	R8 R0 K2 ; R8 := R0["radialSector"]
	336	[2760]	EQ       	1 R8 K14 ; if R8 == nil then PC := 345
	337	[2760]	JMP      	345 ; PC := 345
	338	[2760]	GETGLOBAL	R8 K21 ; R8 := _T
	339	[2760]	GETTABLE 	R8 R8 K77 ; R8 := R8["gPendingMission"]
	340	[2760]	GETTABLE 	R8 R8 K78 ; R8 := R8["baseNodeName"]
	341	[2760]	GETTABLE 	R9 R0 K2 ; R9 := R0["radialSector"]
	342	[2760]	GETTABLE 	R9 R9 K20 ; R9 := R9["name"]
	343	[2760]	EQ       	1 R8 R9 ; if R8 == R9 then PC := 346
	344	[2760]	JMP      	346 ; PC := 346
	345	[2760]	OP_LOADBOOL	R8 0 1 ; R8 := false; PC := 346
	346	[2760]	OP_LOADBOOL	R8 1 0 ; R8 := true
	347	[2761]	GETGLOBAL	R9 K65 ; R9 := 0xae91e43b
	348	[2761]	SELF     	R9 R9 K79 ; R10 := R9; R9 := R9[0xaade900e]
	349	[2761]	GETTABLE 	R11 R0 K67 ; R11 := R0["clipName"]
	350	[2761]	LOADK    	R12 := 59.000000
	351	[2761]	MOVE     	R13 R8 ; R13 := R8
	352	[2761]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	353	[2763]	GETGLOBAL	R9 K65 ; R9 := 0xae91e43b
	354	[2763]	SELF     	R9 R9 K74 ; R10 := R9; R9 := R9[0x1cb415c1]
	355	[2763]	GETTABLE 	R11 R0 K67 ; R11 := R0["clipName"]
	356	[2763]	LOADK    	R12 K80 ; R12 := ".Node.Container.Icon"
	357	[2763]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	358	[2763]	MOVE     	R12 R2 ; R12 := R2
	359	[2763]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	360	[2764]	GETGLOBAL	R9 K65 ; R9 := 0xae91e43b
	361	[2764]	SELF     	R9 R9 K72 ; R10 := R9; R9 := R9[0xc0a3774b]
	362	[2764]	GETTABLE 	R11 R0 K67 ; R11 := R0["clipName"]
	363	[2764]	LOADK    	R12 K81 ; R12 := "Node.Container.Icon"
	364	[2764]	LOADK    	R13 := 11.000000
	365	[2764]	GETGLOBAL	R14 K9 ; R14 := 0x7b998233
	366	[2764]	MOVE     	R15 R2 ; R15 := R2
	367	[2764]	CALL     	R14 2 2 ; R14 := R14(R15)
	368	[2764]	NOT      	R14 R14 ; R14 := not R14
	369	[2764]	CALL     	R9 6 1 ; R9(R10,R11,R12,R13,R14)
	370	[2765]	EQ       	1 R4 K14 ; if R4 == nil then PC := 386
	371	[2765]	JMP      	386 ; PC := 386
	372	[2766]	GETGLOBAL	R9 K65 ; R9 := 0xae91e43b
	373	[2766]	SELF     	R9 R9 K66 ; R10 := R9; R9 := R9[0xf64b7262]
	374	[2766]	GETTABLE 	R11 R0 K67 ; R11 := R0["clipName"]
	375	[2766]	LOADK    	R12 K81 ; R12 := "Node.Container.Icon"
	376	[2766]	LOADK    	R13 := 12.000000
	377	[2766]	MOVE     	R14 R4 ; R14 := R4
	378	[2766]	CALL     	R9 6 1 ; R9(R10,R11,R12,R13,R14)
	379	[2767]	GETGLOBAL	R9 K65 ; R9 := 0xae91e43b
	380	[2767]	SELF     	R9 R9 K66 ; R10 := R9; R9 := R9[0xf64b7262]
	381	[2767]	GETTABLE 	R11 R0 K67 ; R11 := R0["clipName"]
	382	[2767]	LOADK    	R12 K81 ; R12 := "Node.Container.Icon"
	383	[2767]	LOADK    	R13 := 13.000000
	384	[2767]	MOVE     	R14 R4 ; R14 := R4
	385	[2767]	CALL     	R9 6 1 ; R9(R10,R11,R12,R13,R14)
	386	[2769]	EQ       	1 R5 K14 ; if R5 == nil then PC := 395
	387	[2769]	JMP      	395 ; PC := 395
	388	[2770]	GETGLOBAL	R9 K65 ; R9 := 0xae91e43b
	389	[2770]	SELF     	R9 R9 K66 ; R10 := R9; R9 := R9[0xf64b7262]
	390	[2770]	GETTABLE 	R11 R0 K67 ; R11 := R0["clipName"]
	391	[2770]	LOADK    	R12 K81 ; R12 := "Node.Container.Icon"
	392	[2770]	LOADK    	R13 := 1.000000
	393	[2770]	MOVE     	R14 R5 ; R14 := R5
	394	[2770]	CALL     	R9 6 1 ; R9(R10,R11,R12,R13,R14)
	395	[2773]	GETTABLE 	R9 R0 K11 ; R9 := R0["special"]
	396	[2773]	TEST     	R9 0 ; if not R9 then PC := 404
	397	[2773]	JMP      	404 ; PC := 404
	398	[2774]	GETGLOBAL	R9 K65 ; R9 := 0xae91e43b
	399	[2774]	SELF     	R9 R9 K82 ; R10 := R9; R9 := R9[0xcd12f3f1]
	400	[2774]	GETTABLE 	R11 R0 K83 ; R11 := R0["nodeIndex"]
	401	[2774]	LOADK    	R12 := 10.000000
	402	[2774]	LOADK    	R13 := 100.000000
	403	[2774]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	404	[2776]	GETTABLE 	R9 R0 K84 ; R9 := R0["locationEnabled"]
	405	[2776]	TEST     	R9 0 ; if not R9 then PC := 410
	406	[2776]	JMP      	410 ; PC := 410
	407	[2776]	GETTABLE 	R9 R0 K27 ; R9 := R0["IsQuest"]
	408	[2776]	TEST     	R9 0 ; if not R9 then PC := 421
	409	[2776]	JMP      	421 ; PC := 421
	410	[2777]	GETGLOBAL	R9 K65 ; R9 := 0xae91e43b
	411	[2777]	SELF     	R9 R9 K72 ; R10 := R9; R9 := R9[0xc0a3774b]
	412	[2777]	GETTABLE 	R11 R0 K67 ; R11 := R0["clipName"]
	413	[2777]	LOADK    	R12 K45 ; R12 := "Node"
	414	[2777]	LOADK    	R13 := 11.000000
	415	[2777]	GETTABLE 	R14 R0 K84 ; R14 := R0["locationEnabled"]
	416	[2777]	EQ       	1 R14 K12 ; if R14 == true then PC := 419
	417	[2777]	JMP      	419 ; PC := 419
	418	[2777]	OP_LOADBOOL	R14 0 1 ; R14 := false; PC := 419
	419	[2777]	OP_LOADBOOL	R14 1 0 ; R14 := true
	420	[2777]	CALL     	R9 6 1 ; R9(R10,R11,R12,R13,R14)
	421	[2779]	GETTABLE 	R9 R0 K85 ; R9 := R0["isEmpty"]
	422	[2779]	TEST     	R9 1 ; if R9 then PC := 431
	423	[2779]	JMP      	431 ; PC := 431
	424	[2779]	GETGLOBAL	R9 K86 ; R9 := mRailJack
	425	[2779]	GETTABLE 	R9 R9 K87 ; R9 := R9["Active"]
	426	[2779]	TEST     	R9 0 ; if not R9 then PC := 437
	427	[2779]	JMP      	437 ; PC := 437
	428	[2779]	GETTABLE 	R9 R0 K4 ; R9 := R0["locked"]
	429	[2779]	TEST     	R9 0 ; if not R9 then PC := 437
	430	[2779]	JMP      	437 ; PC := 437
	431	[2780]	GETGLOBAL	R9 K65 ; R9 := 0xae91e43b
	432	[2780]	SELF     	R9 R9 K79 ; R10 := R9; R9 := R9[0xaade900e]
	433	[2780]	GETTABLE 	R11 R0 K67 ; R11 := R0["clipName"]
	434	[2780]	LOADK    	R12 := 11.000000
	435	[2780]	OP_LOADBOOL	R13 0 0 ; R13 := false
	436	[2780]	CALL     	R9 5 1 ; R9(R10,R11,R12,R13)
	437	[2782]	GETTABLE 	R9 R0 K88 ; R9 := R0["isFlotilla"]
	438	[2782]	TEST     	R9 0 ; if not R9 then PC := 447
	439	[2782]	JMP      	447 ; PC := 447
	440	[2783]	GETGLOBAL	R9 K41 ; R9 := 0x33bdd652
	441	[2783]	GETTABLE 	R9 R9 K42 ; R9 := R9[0x23d5322f]
	442	[2783]	GETGLOBAL	R10 K43 ; R10 := mFxNodes
	443	[2783]	GETTABLE 	R10 R10 K50 ; R10 := R10["Pending"]
	444	[2783]	NEWTABLE 	R11 0 1 ; R11 := {}
	445	[2783]	SETTABLE 	R11 K45 R0 ; R11["Node"] := R0
	446	[2783]	CALL     	R9 3 1 ; R9(R10,R11)
	447	[2792]	GETUPVAL 	R9 U7 ; R9 := U7
	448	[2792]	MOVE     	R10 R0 ; R10 := R0
	449	[2792]	CALL     	R9 2 1 ; R9(R10)
	450	[2793]	RETURN   	R0 1 ; return 

function #58 <?:2795,2908> (243 instructions, 972 bytes at 000002111D1DF820)
0 params, 42 slots, 5 upvalues, 0 locals, 49 constants, 1 function
	1	[2796]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2796]	GETTABLE 	R0 R0 K0 ; R0 := R0[0x8e7c3b5e]
	3	[2796]	GETGLOBAL	R1 K1 ; R1 := 0x25d99d89
	4	[2796]	CALL     	R0 2 5 ; R0,R1,R2,R3 := R0(R1)
	5	[2798]	GETGLOBAL	R4 K2 ; R4 := 0x7b998233
	6	[2798]	MOVE     	R5 R0 ; R5 := R0
	7	[2798]	CALL     	R4 2 2 ; R4 := R4(R5)
	8	[2798]	TEST     	R4 1 ; if R4 then PC := 15
	9	[2798]	JMP      	15 ; PC := 15
	10	[2799]	SELF     	R4 R0 K3 ; R5 := R0; R4 := R0[0xb4568f02]
	11	[2799]	SUB      	R6 R1 K4 ; R6 := R1 - 1.000000
	12	[2799]	MOVE     	R7 R2 ; R7 := R2
	13	[2799]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	14	[2799]	MOVE     	R2 R4 ; R2 := R4
	15	[2802]	NEWTABLE 	R4 0 0 ; R4 := {}
	16	[2803]	LOADNIL  	R5 R5 ; R5 := nil
	17	[2832]	CLOSURE  	R6 0 ; R6 := closure(Function #1)
	18	[2832]	MOVE     	R0 R5 ; R0 := R5
	19	[2832]	GETUPVAL 	R0 U1 ; R0 := U1
	20	[2832]	MOVE     	R0 R0 ; R0 := R0
	21	[2832]	MOVE     	R0 R2 ; R0 := R2
	22	[2832]	GETUPVAL 	R0 U2 ; R0 := U2
	23	[2834]	GETGLOBAL	R7 K2 ; R7 := 0x7b998233
	24	[2834]	MOVE     	R8 R0 ; R8 := R0
	25	[2834]	CALL     	R7 2 2 ; R7 := R7(R8)
	26	[2834]	TEST     	R7 1 ; if R7 then PC := 128
	27	[2834]	JMP      	128 ; PC := 128
	28	[2834]	TEST     	R3 0 ; if not R3 then PC := 128
	29	[2834]	JMP      	128 ; PC := 128
	30	[2835]	SELF     	R7 R0 K5 ; R8 := R0; R7 := R0[0x42700bd0]
	31	[2835]	CALL     	R7 2 2 ; R7 := R7(R8)
	32	[2836]	LEN      	R8 R7 ; R8 := # R7
	33	[2836]	LE       	0 R1 R8 ; if R1 > R8 then PC := 128
	34	[2836]	JMP      	128 ; PC := 128
	35	[2837]	GETTABLE 	R8 R7 R1 ; R8 := R7[R1]
	36	[2838]	GETTABLE 	R9 R8 K6 ; R9 := R8["mMainMission"]
	37	[2838]	GETTABLE 	R9 R9 K7 ; R9 := R9["mKey"]
	38	[2839]	GETGLOBAL	R10 K2 ; R10 := 0x7b998233
	39	[2839]	MOVE     	R11 R9 ; R11 := R9
	40	[2839]	CALL     	R10 2 2 ; R10 := R10(R11)
	41	[2839]	TEST     	R10 1 ; if R10 then PC := 57
	42	[2839]	JMP      	57 ; PC := 57
	43	[2840]	GETGLOBAL	R10 K8 ; R10 := 0x64fb1586
	44	[2840]	SELF     	R11 R9 K9 ; R12 := R9; R11 := R9[0x92608d86]
	45	[2840]	CALL     	R11 2 0 ; R11,... := R11(R12)
	46	[2840]	CALL     	R10 0 2 ; R10 := R10(R11,...)
	47	[2841]	MOVE     	R11 R6 ; R11 := R6
	48	[2841]	MOVE     	R12 R10 ; R12 := R10
	49	[2841]	MOVE     	R13 R9 ; R13 := R9
	50	[2841]	MOVE     	R14 R2 ; R14 := R2
	51	[2841]	CALL     	R11 4 1 ; R11(R12,R13,R14)
	52	[2842]	GETGLOBAL	R11 K10 ; R11 := 0x33bdd652
	53	[2842]	GETTABLE 	R11 R11 K11 ; R11 := R11[0x23d5322f]
	54	[2842]	MOVE     	R12 R4 ; R12 := R4
	55	[2842]	MOVE     	R13 R10 ; R13 := R10
	56	[2842]	CALL     	R11 3 1 ; R11(R12,R13)
	57	[2845]	GETTABLE 	R11 R8 K12 ; R11 := R8["mMarkedNodes"]
	58	[2845]	LEN      	R11 R11 ; R11 := # R11
	59	[2845]	LT       	0 K13 R11 ; if 0.000000 >= R11 then PC := 128
	60	[2845]	JMP      	128 ; PC := 128
	61	[2846]	GETUPVAL 	R11 U0 ; R11 := U0
	62	[2846]	GETTABLE 	R11 R11 K14 ; R11 := R11[0x5e35d4d6]
	63	[2846]	CALL     	R11 1 2 ; R11 := R11()
	64	[2847]	GETTABLE 	R12 R8 K15 ; R12 := R8["mShowFirstExistingMarkedNodeOnly"]
	65	[2847]	TEST     	R12 0 ; if not R12 then PC := 88
	66	[2847]	JMP      	88 ; PC := 88
	67	[2848]	SELF     	R12 R11 K16 ; R13 := R11; R12 := R11[0x365d0eb2]
	68	[2848]	GETTABLE 	R14 R8 K12 ; R14 := R8["mMarkedNodes"]
	69	[2848]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	70	[2849]	GETGLOBAL	R13 K17 ; R13 := EMPTY_SYMBOL
	71	[2849]	EQ       	1 R12 R13 ; if R12 == R13 then PC := 128
	72	[2849]	JMP      	128 ; PC := 128
	73	[2850]	MOVE     	R13 R6 ; R13 := R6
	74	[2850]	GETGLOBAL	R14 K8 ; R14 := 0x64fb1586
	75	[2850]	MOVE     	R15 R12 ; R15 := R12
	76	[2850]	CALL     	R14 2 2 ; R14 := R14(R15)
	77	[2850]	MOVE     	R15 R9 ; R15 := R9
	78	[2850]	MOVE     	R16 R2 ; R16 := R2
	79	[2850]	CALL     	R13 4 1 ; R13(R14,R15,R16)
	80	[2851]	GETGLOBAL	R13 K10 ; R13 := 0x33bdd652
	81	[2851]	GETTABLE 	R13 R13 K11 ; R13 := R13[0x23d5322f]
	82	[2851]	MOVE     	R14 R4 ; R14 := R4
	83	[2851]	GETGLOBAL	R15 K8 ; R15 := 0x64fb1586
	84	[2851]	MOVE     	R16 R12 ; R16 := R12
	85	[2851]	CALL     	R15 2 0 ; R15,... := R15(R16)
	86	[2851]	CALL     	R13 0 1 ; R13(R14,...)
	87	[2852]	JMP      	128 ; PC := 128
	88	[2854]	GETTABLE 	R13 R8 K12 ; R13 := R8["mMarkedNodes"]
	89	[2855]	GETGLOBAL	R14 K18 ; R14 := _T
	90	[2855]	GETTABLE 	R14 R14 K19 ; R14 := R14["CustomStarChartNodeFilter"]
	91	[2855]	TEST     	R14 0 ; if not R14 then PC := 101
	92	[2855]	JMP      	101 ; PC := 101
	93	[2855]	GETGLOBAL	R14 K18 ; R14 := _T
	94	[2855]	GETTABLE 	R14 R14 K19 ; R14 := R14["CustomStarChartNodeFilter"]
	95	[2855]	GETTABLE 	R14 R14 K20 ; R14 := R14["Nodes"]
	96	[2855]	TEST     	R14 0 ; if not R14 then PC := 101
	97	[2855]	JMP      	101 ; PC := 101
	98	[2856]	GETGLOBAL	R14 K18 ; R14 := _T
	99	[2856]	GETTABLE 	R14 R14 K19 ; R14 := R14["CustomStarChartNodeFilter"]
	100	[2856]	GETTABLE 	R13 R14 K20 ; R13 := R14["Nodes"]
	101	[2858]	GETGLOBAL	R14 K21 ; R14 := 0xc8802016
	102	[2858]	MOVE     	R15 R13 ; R15 := R13
	103	[2858]	CALL     	R14 2 4 ; R14,R15,R16 := R14(R15)
	104	[2858]	JMP      	126 ; PC := 126
	105	[2859]	SELF     	R19 R11 K22 ; R20 := R11; R19 := R11[0x3ad9ed31]
	106	[2859]	MOVE     	R21 R18 ; R21 := R18
	107	[2859]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	108	[2859]	GETTABLE 	R19 R19 K23 ; R19 := R19["name"]
	109	[2859]	GETGLOBAL	R20 K17 ; R20 := EMPTY_SYMBOL
	110	[2859]	EQ       	1 R19 R20 ; if R19 == R20 then PC := 126
	111	[2859]	JMP      	126 ; PC := 126
	112	[2860]	MOVE     	R19 R6 ; R19 := R6
	113	[2860]	GETGLOBAL	R20 K8 ; R20 := 0x64fb1586
	114	[2860]	MOVE     	R21 R18 ; R21 := R18
	115	[2860]	CALL     	R20 2 2 ; R20 := R20(R21)
	116	[2860]	MOVE     	R21 R9 ; R21 := R9
	117	[2860]	MOVE     	R22 R2 ; R22 := R2
	118	[2860]	CALL     	R19 4 1 ; R19(R20,R21,R22)
	119	[2861]	GETGLOBAL	R19 K10 ; R19 := 0x33bdd652
	120	[2861]	GETTABLE 	R19 R19 K11 ; R19 := R19[0x23d5322f]
	121	[2861]	MOVE     	R20 R4 ; R20 := R4
	122	[2861]	GETGLOBAL	R21 K8 ; R21 := 0x64fb1586
	123	[2861]	MOVE     	R22 R18 ; R22 := R18
	124	[2861]	CALL     	R21 2 0 ; R21,... := R21(R22)
	125	[2861]	CALL     	R19 0 1 ; R19(R20,...)
	126	[2858]	TFORLOOP 	R14 2 ; R17,R18 := R14(R15,R16); if R17 ~= nil then begin PC = 105; R16 := R17 end
	127	[2862]	JMP      	105 ; PC := 105
	128	[2870]	LOADK    	R19 := 1.000000
	129	[2870]	GETUPVAL 	R20 U3 ; R20 := U3
	130	[2870]	LEN      	R20 R20 ; R20 := # R20
	131	[2870]	LOADK    	R21 := 1.000000
	132	[2870]	FORPREP  	R19 207 ; R19 -= R21; PC := 207
	133	[2871]	OP_LOADBOOL	R23 1 0 ; R23 := true
	134	[2872]	LOADK    	R24 := 1.000000
	135	[2872]	LEN      	R25 R4 ; R25 := # R4
	136	[2872]	LOADK    	R26 := 1.000000
	137	[2872]	FORPREP  	R24 145 ; R24 -= R26; PC := 145
	138	[2873]	GETTABLE 	R28 R4 R27 ; R28 := R4[R27]
	139	[2873]	GETUPVAL 	R29 U3 ; R29 := U3
	140	[2873]	GETTABLE 	R29 R29 R22 ; R29 := R29[R22]
	141	[2873]	EQ       	0 R28 R29 ; if R28 ~= R29 then PC := 145
	142	[2873]	JMP      	145 ; PC := 145
	143	[2874]	OP_LOADBOOL	R23 0 0 ; R23 := false
	144	[2875]	JMP      	146 ; PC := 146
	145	[2872]	FORLOOP  	R24 138 ; R24 += R26; if R24 <= R25 then begin PC := 138; R27 := R24 end
	146	[2879]	TEST     	R23 0 ; if not R23 then PC := 207
	147	[2879]	JMP      	207 ; PC := 207
	148	[2879]	GETGLOBAL	R28 K2 ; R28 := 0x7b998233
	149	[2879]	GETGLOBAL	R29 K24 ; R29 := mRadialSolarMap
	150	[2879]	CALL     	R28 2 2 ; R28 := R28(R29)
	151	[2879]	TEST     	R28 1 ; if R28 then PC := 207
	152	[2879]	JMP      	207 ; PC := 207
	153	[2880]	GETUPVAL 	R28 U1 ; R28 := U1
	154	[2880]	GETUPVAL 	R29 U3 ; R29 := U3
	155	[2880]	GETTABLE 	R29 R29 R22 ; R29 := R29[R22]
	156	[2880]	GETTABLE 	R5 R28 R29 ; R5 := R28[R29]
	157	[2881]	GETGLOBAL	R28 K2 ; R28 := 0x7b998233
	158	[2881]	MOVE     	R29 R5 ; R29 := R5
	159	[2881]	CALL     	R28 2 2 ; R28 := R28(R29)
	160	[2881]	TEST     	R28 1 ; if R28 then PC := 207
	161	[2881]	JMP      	207 ; PC := 207
	162	[2882]	GETGLOBAL	R28 K24 ; R28 := mRadialSolarMap
	163	[2882]	SELF     	R28 R28 K22 ; R29 := R28; R28 := R28[0x3ad9ed31]
	164	[2882]	GETGLOBAL	R30 K25 ; R30 := 0x0469f296
	165	[2882]	GETUPVAL 	R31 U3 ; R31 := U3
	166	[2882]	GETTABLE 	R31 R31 R22 ; R31 := R31[R22]
	167	[2882]	CALL     	R30 2 0 ; R30,... := R30(R31)
	168	[2882]	CALL     	R28 0 2 ; R28 := R28(R29,...)
	169	[2883]	GETGLOBAL	R29 K2 ; R29 := 0x7b998233
	170	[2883]	MOVE     	R30 R28 ; R30 := R28
	171	[2883]	CALL     	R29 2 2 ; R29 := R29(R30)
	172	[2883]	TEST     	R29 1 ; if R29 then PC := 207
	173	[2883]	JMP      	207 ; PC := 207
	174	[2884]	SELF     	R29 R28 K27 ; R30 := R28; R29 := R28[0x8f89d633]
	175	[2884]	CALL     	R29 2 2 ; R29 := R29(R30)
	176	[2884]	SETTABLE 	R5 K26 R29 ; R5["radialSector"] := R29
	177	[2885]	GETTABLE 	R29 R5 K26 ; R29 := R5["radialSector"]
	178	[2885]	GETTABLE 	R29 R29 K23 ; R29 := R29["name"]
	179	[2885]	SETTABLE 	R5 K23 R29 ; R5["name"] := R29
	180	[2886]	GETTABLE 	R29 R5 K26 ; R29 := R5["radialSector"]
	181	[2886]	GETTABLE 	R29 R29 K29 ; R29 := R29["pos"]
	182	[2886]	SETTABLE 	R5 K28 R29 ; R5["position"] := R29
	183	[2887]	GETGLOBAL	R29 K31 ; R29 := 0x7f5022cf
	184	[2887]	GETTABLE 	R29 R29 K32 ; R29 := R29[0x3f3e4d12]
	185	[2887]	GETGLOBAL	R30 K33 ; R30 := 0xae91e43b
	186	[2887]	SELF     	R30 R30 K34 ; R31 := R30; R30 := R30[0x42b04007]
	187	[2887]	GETTABLE 	R32 R28 K35 ; R32 := R28["locTag"]
	188	[2887]	SELF     	R32 R32 K36 ; R33 := R32; R32 := R32[0x6d604ba7]
	189	[2887]	CALL     	R32 2 2 ; R32 := R32(R33)
	190	[2887]	OP_LOADBOOL	R33 1 0 ; R33 := true
	191	[2887]	CALL     	R30 4 0 ; R30,... := R30(R31,R32,R33)
	192	[2887]	CALL     	R29 0 2 ; R29 := R29(R30,...)
	193	[2887]	SETTABLE 	R5 K30 R29 ; R5["locName"] := R29
	194	[2888]	SETTABLE 	R5 K37 K38 ; R5["IsQuest"] := false
	195	[2889]	SETTABLE 	R5 K39 K40 ; R5["KeyType"] := nil
	196	[2891]	GETUPVAL 	R29 U2 ; R29 := U2
	197	[2891]	GETTABLE 	R30 R5 K26 ; R30 := R5["radialSector"]
	198	[2891]	GETTABLE 	R30 R30 K41 ; R30 := R30["region"]
	199	[2891]	GETTABLE 	R29 R29 R30 ; R29 := R29[R30]
	200	[2892]	EQ       	1 R29 K40 ; if R29 == nil then PC := 207
	201	[2892]	JMP      	207 ; PC := 207
	202	[2893]	GETUPVAL 	R30 U2 ; R30 := U2
	203	[2893]	GETTABLE 	R31 R5 K26 ; R31 := R5["radialSector"]
	204	[2893]	GETTABLE 	R31 R31 K41 ; R31 := R31["region"]
	205	[2893]	SUB      	R32 R29 K4 ; R32 := R29 - 1.000000
	206	[2893]	SETTABLE 	R30 R31 R32 ; R30[R31] := R32
	207	[2870]	FORLOOP  	R19 133 ; R19 += R21; if R19 <= R20 then begin PC := 133; R22 := R19 end
	208	[2900]	GETGLOBAL	R30 K42 ; R30 := mNewWarMode
	209	[2900]	TEST     	R30 0 ; if not R30 then PC := 239
	210	[2900]	JMP      	239 ; PC := 239
	211	[2901]	LOADK    	R30 := 1.000000
	212	[2901]	GETGLOBAL	R31 K43 ; R31 := mRegionLabels
	213	[2901]	LEN      	R31 R31 ; R31 := # R31
	214	[2901]	LOADK    	R32 := 1.000000
	215	[2901]	FORPREP  	R30 238 ; R30 -= R32; PC := 238
	216	[2902]	GETGLOBAL	R34 K33 ; R34 := 0xae91e43b
	217	[2902]	SELF     	R34 R34 K44 ; R35 := R34; R34 := R34[0x5f56eeab]
	218	[2902]	GETGLOBAL	R36 K43 ; R36 := mRegionLabels
	219	[2902]	GETTABLE 	R36 R36 R33 ; R36 := R36[R33]
	220	[2902]	LOADK    	R37 K45 ; R37 := ".Name"
	221	[2902]	CONCAT   	R36 R36 R37 ; R36 := R36 .. R37
	222	[2902]	LOADK    	R37 := 10.000000
	223	[2902]	GETUPVAL 	R38 U4 ; R38 := U4
	224	[2902]	GETTABLE 	R38 R38 K46 ; R38 := R38[0x06d055f9]
	225	[2902]	GETUPVAL 	R39 U2 ; R39 := U2
	226	[2902]	SUB      	R40 R33 K4 ; R40 := R33 - 1.000000
	227	[2902]	GETTABLE 	R39 R39 R40 ; R39 := R39[R40]
	228	[2902]	TEST     	R39 1 ; if R39 then PC := 234
	229	[2902]	JMP      	234 ; PC := 234
	230	[2902]	LT       	1 K13 K13 ; if 0.000000 < 0.000000 then PC := 233
	231	[2902]	JMP      	233 ; PC := 233
	232	[2902]	OP_LOADBOOL	R39 0 1 ; R39 := false; PC := 233
	233	[2902]	OP_LOADBOOL	R39 1 0 ; R39 := true
	234	[2902]	LOADK    	R40 := 100.000000
	235	[2902]	LOADK    	R41 := 40.000000
	236	[2902]	CALL     	R38 4 0 ; R38,... := R38(R39,R40,R41)
	237	[2902]	CALL     	R34 0 1 ; R34(R35,...)
	238	[2901]	FORLOOP  	R30 216 ; R30 += R32; if R30 <= R31 then begin PC := 216; R33 := R30 end
	239	[2906]	SETUPVAL 	R4 U3 ; U3 := R4
	240	[2907]	GETGLOBAL	R34 K47 ; R34 := 0x0032441c
	241	[2907]	GETUPVAL 	R35 U3 ; R35 := U3
	242	[2907]	SETTABLE 	R34 K48 R35 ; R34["QuestNodeNames"] := R35
	243	[2908]	RETURN   	R0 1 ; return 

function #59 <?:2910,2926> (31 instructions, 124 bytes at 00000211210934F0)
0 params, 6 slots, 4 upvalues, 0 locals, 6 constants, 0 functions
	1	[2911]	GETGLOBAL	R0 K0 ; R0 := mFxNodes
	2	[2911]	NEWTABLE 	R1 0 0 ; R1 := {}
	3	[2911]	SETTABLE 	R0 K1 R1 ; R0["Pending"] := R1
	4	[2912]	GETGLOBAL	R0 K0 ; R0 := mFxNodes
	5	[2912]	NEWTABLE 	R1 0 0 ; R1 := {}
	6	[2912]	SETTABLE 	R0 K2 R1 ; R0["Quest"] := R1
	7	[2913]	GETGLOBAL	R0 K0 ; R0 := mFxNodes
	8	[2913]	NEWTABLE 	R1 0 0 ; R1 := {}
	9	[2913]	SETTABLE 	R0 K3 R1 ; R0["Invasion"] := R1
	10	[2915]	GETUPVAL 	R0 U0 ; R0 := U0
	11	[2915]	CALL     	R0 1 1 ; R0()
	12	[2917]	LOADK    	R0 := 1.000000
	13	[2917]	GETUPVAL 	R1 U1 ; R1 := U1
	14	[2917]	LEN      	R1 R1 ; R1 := # R1
	15	[2917]	LOADK    	R2 := 1.000000
	16	[2917]	FORPREP  	R0 28 ; R0 -= R2; PC := 28
	17	[2918]	GETUPVAL 	R4 U1 ; R4 := U1
	18	[2918]	GETTABLE 	R4 R4 R3 ; R4 := R4[R3]
	19	[2918]	GETTABLE 	R4 R4 K4 ; R4 := R4["isShortcut"]
	20	[2918]	TEST     	R4 1 ; if R4 then PC := 28
	21	[2918]	JMP      	28 ; PC := 28
	22	[2919]	GETUPVAL 	R4 U2 ; R4 := U2
	23	[2919]	GETUPVAL 	R5 U1 ; R5 := U1
	24	[2919]	GETTABLE 	R5 R5 R3 ; R5 := R5[R3]
	25	[2919]	CALL     	R4 2 1 ; R4(R5)
	26	[2920]	GETGLOBAL	R4 K5 ; R4 := 0xce225efa
	27	[2920]	CALL     	R4 1 1 ; R4()
	28	[2917]	FORLOOP  	R0 17 ; R0 += R2; if R0 <= R1 then begin PC := 17; R3 := R0 end
	29	[2925]	GETUPVAL 	R4 U3 ; R4 := U3
	30	[2925]	CALL     	R4 1 1 ; R4()
	31	[2926]	RETURN   	R0 1 ; return 

function #60 <?:2928,2935> (35 instructions, 140 bytes at 00000211159D3F80)
1 param, 8 slots, 1 upvalue, 0 locals, 14 constants, 0 functions
	1	[2929]	SETTABLE 	R0 K0 K1 ; R0["visibleLabel"] := true
	2	[2931]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	3	[2931]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x1cb415c1]
	4	[2931]	GETTABLE 	R3 R0 K4 ; R3 := R0["clipName"]
	5	[2931]	LOADK    	R4 K5 ; R4 := ".Node.Container.Node"
	6	[2931]	CONCAT   	R3 R3 R4 ; R3 := R3 .. R4
	7	[2931]	GETUPVAL 	R4 U0 ; R4 := U0
	8	[2931]	GETTABLE 	R4 R4 K6 ; R4 := R4[0x06d055f9]
	9	[2931]	GETTABLE 	R5 R0 K7 ; R5 := R0["locked"]
	10	[2931]	GETGLOBAL	R6 K8 ; R6 := 0xbf3051d1
	11	[2931]	GETGLOBAL	R7 K9 ; R7 := 0xfff0d414
	12	[2931]	CALL     	R4 4 0 ; R4,... := R4(R5,R6,R7)
	13	[2931]	CALL     	R1 0 1 ; R1(R2,...)
	14	[2932]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	15	[2932]	SELF     	R1 R1 K10 ; R2 := R1; R1 := R1[0xf64b7262]
	16	[2932]	GETTABLE 	R3 R0 K4 ; R3 := R0["clipName"]
	17	[2932]	LOADK    	R4 K11 ; R4 := "Node.Container.Node"
	18	[2932]	LOADK    	R5 := 12.000000
	19	[2932]	LOADK    	R6 := 84.000000
	20	[2932]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	21	[2933]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	22	[2933]	SELF     	R1 R1 K10 ; R2 := R1; R1 := R1[0xf64b7262]
	23	[2933]	GETTABLE 	R3 R0 K4 ; R3 := R0["clipName"]
	24	[2933]	LOADK    	R4 K11 ; R4 := "Node.Container.Node"
	25	[2933]	LOADK    	R5 := 13.000000
	26	[2933]	LOADK    	R6 := 84.000000
	27	[2933]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	28	[2934]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	29	[2934]	SELF     	R1 R1 K12 ; R2 := R1; R1 := R1[0xc0a3774b]
	30	[2934]	GETTABLE 	R3 R0 K4 ; R3 := R0["clipName"]
	31	[2934]	LOADK    	R4 K13 ; R4 := "Node.Container.Icon"
	32	[2934]	LOADK    	R5 := 11.000000
	33	[2934]	OP_LOADBOOL	R6 0 0 ; R6 := false
	34	[2934]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	35	[2935]	RETURN   	R0 1 ; return 

function #61 <?:2937,2961> (43 instructions, 172 bytes at 000002113099AB20)
0 params, 11 slots, 3 upvalues, 0 locals, 14 constants, 0 functions
	1	[2939]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2939]	CALL     	R0 1 2 ; R0 := R0()
	3	[2940]	LOADK    	R1 := 1.000000
	4	[2940]	GETUPVAL 	R2 U1 ; R2 := U1
	5	[2940]	LEN      	R2 R2 ; R2 := # R2
	6	[2940]	LOADK    	R3 := 1.000000
	7	[2940]	FORPREP  	R1 42 ; R1 -= R3; PC := 42
	8	[2941]	GETUPVAL 	R5 U1 ; R5 := U1
	9	[2941]	GETTABLE 	R5 R5 R4 ; R5 := R5[R4]
	10	[2942]	GETTABLE 	R6 R5 K0 ; R6 := R5["isShortcut"]
	11	[2942]	TEST     	R6 0 ; if not R6 then PC := 40
	12	[2942]	JMP      	40 ; PC := 40
	13	[2943]	GETTABLE 	R6 R5 K1 ; R6 := R5["locked"]
	14	[2943]	EQ       	0 R6 K2 ; if R6 ~= nil then PC := 18
	15	[2943]	JMP      	18 ; PC := 18
	16	[2945]	SETTABLE 	R5 K1 K3 ; R5["locked"] := true
	17	[2946]	SETTABLE 	R5 K4 K5 ; R5["completed"] := false
	18	[2949]	GETTABLE 	R6 R5 K1 ; R6 := R5["locked"]
	19	[2949]	TEST     	R6 0 ; if not R6 then PC := 37
	20	[2949]	JMP      	37 ; PC := 37
	21	[2949]	GETGLOBAL	R6 K6 ; R6 := 0x7b998233
	22	[2949]	GETTABLE 	R7 R5 K7 ; R7 := R5["targetRegion"]
	23	[2949]	CALL     	R6 2 2 ; R6 := R6(R7)
	24	[2949]	TEST     	R6 1 ; if R6 then PC := 37
	25	[2949]	JMP      	37 ; PC := 37
	26	[2950]	GETTABLE 	R6 R5 K7 ; R6 := R5["targetRegion"]
	27	[2951]	GETGLOBAL	R7 K8 ; R7 := mRegions
	28	[2951]	ADD      	R8 R6 K9 ; R8 := R6 + 1.000000
	29	[2951]	GETTABLE 	R7 R7 R8 ; R7 := R7[R8]
	30	[2952]	SELF     	R8 R7 K10 ; R9 := R7; R8 := R7[0x699fd1e2]
	31	[2952]	MOVE     	R10 R0 ; R10 := R0
	32	[2952]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	33	[2952]	EQ       	1 R8 K12 ; if R8 == 0.000000 then PC := 37
	34	[2952]	JMP      	37 ; PC := 37
	35	[2953]	SETTABLE 	R5 K1 K5 ; R5["locked"] := false
	36	[2954]	SETTABLE 	R5 K4 K3 ; R5["completed"] := true
	37	[2957]	GETUPVAL 	R8 U2 ; R8 := U2
	38	[2957]	MOVE     	R9 R5 ; R9 := R5
	39	[2957]	CALL     	R8 2 1 ; R8(R9)
	40	[2959]	GETGLOBAL	R8 K13 ; R8 := 0xce225efa
	41	[2959]	CALL     	R8 1 1 ; R8()
	42	[2940]	FORLOOP  	R1 8 ; R1 += R3; if R1 <= R2 then begin PC := 8; R4 := R1 end
	43	[2961]	RETURN   	R0 1 ; return 

function #62 <?:2963,2989> (86 instructions, 344 bytes at 000002113280EC70)
0 params, 11 slots, 5 upvalues, 0 locals, 23 constants, 0 functions
	1	[2964]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[2964]	CALL     	R0 1 2 ; R0 := R0()
	3	[2965]	LOADK    	R1 := 1.000000
	4	[2965]	GETUPVAL 	R2 U1 ; R2 := U1
	5	[2965]	LEN      	R2 R2 ; R2 := # R2
	6	[2965]	LOADK    	R3 := 1.000000
	7	[2965]	FORPREP  	R1 85 ; R1 -= R3; PC := 85
	8	[2966]	GETUPVAL 	R5 U1 ; R5 := U1
	9	[2966]	GETTABLE 	R5 R5 R4 ; R5 := R5[R4]
	10	[2967]	GETTABLE 	R6 R5 K0 ; R6 := R5["radialSector"]
	11	[2968]	GETGLOBAL	R7 K1 ; R7 := mRegions
	12	[2968]	GETTABLE 	R8 R6 K2 ; R8 := R6["region"]
	13	[2968]	ADD      	R8 R8 K3 ; R8 := R8 + 1.000000
	14	[2968]	GETTABLE 	R7 R7 R8 ; R7 := R7[R8]
	15	[2969]	SELF     	R8 R7 K4 ; R9 := R7; R8 := R7[0x699fd1e2]
	16	[2969]	MOVE     	R10 R0 ; R10 := R0
	17	[2969]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	18	[2969]	EQ       	1 R8 K6 ; if R8 == 0.000000 then PC := 78
	19	[2969]	JMP      	78 ; PC := 78
	20	[2971]	GETTABLE 	R8 R6 K7 ; R8 := R6["nodeType"]
	21	[2971]	EQ       	0 R8 K8 ; if R8 ~= 3.000000 then PC := 43
	22	[2971]	JMP      	43 ; PC := 43
	23	[2971]	GETTABLE 	R8 R6 K9 ; R8 := R6["name"]
	24	[2971]	GETUPVAL 	R9 U2 ; R9 := U2
	25	[2971]	GETTABLE 	R9 R9 K10 ; R9 := R9["CETUS_NODE_TAG"]
	26	[2971]	EQ       	1 R8 R9 ; if R8 == R9 then PC := 43
	27	[2971]	JMP      	43 ; PC := 43
	28	[2971]	GETTABLE 	R8 R6 K9 ; R8 := R6["name"]
	29	[2971]	GETUPVAL 	R9 U2 ; R9 := U2
	30	[2971]	GETTABLE 	R9 R9 K11 ; R9 := R9["FORTUNA_NODE_TAG"]
	31	[2971]	EQ       	1 R8 R9 ; if R8 == R9 then PC := 43
	32	[2971]	JMP      	43 ; PC := 43
	33	[2971]	GETUPVAL 	R8 U2 ; R8 := U2
	34	[2971]	GETTABLE 	R8 R8 K12 ; R8 := R8[0xc00479a5]
	35	[2971]	CALL     	R8 1 2 ; R8 := R8()
	36	[2971]	TEST     	R8 0 ; if not R8 then PC := 43
	37	[2971]	JMP      	43 ; PC := 43
	38	[2972]	SETTABLE 	R5 K13 K14 ; R5["forceUnlock"] := true
	39	[2973]	GETUPVAL 	R8 U3 ; R8 := U3
	40	[2973]	MOVE     	R9 R5 ; R9 := R5
	41	[2973]	CALL     	R8 2 1 ; R8(R9)
	42	[2973]	JMP      	85 ; PC := 85
	43	[2974]	GETTABLE 	R8 R6 K9 ; R8 := R6["name"]
	44	[2974]	GETUPVAL 	R9 U4 ; R9 := U4
	45	[2974]	GETTABLE 	R9 R9 K15 ; R9 := R9["FIGHT_NODE_TAG"]
	46	[2974]	EQ       	0 R8 R9 ; if R8 ~= R9 then PC := 53
	47	[2974]	JMP      	53 ; PC := 53
	48	[2975]	SETTABLE 	R5 K13 K14 ; R5["forceUnlock"] := true
	49	[2976]	GETUPVAL 	R8 U3 ; R8 := U3
	50	[2976]	MOVE     	R9 R5 ; R9 := R5
	51	[2976]	CALL     	R8 2 1 ; R8(R9)
	52	[2976]	JMP      	85 ; PC := 85
	53	[2977]	GETTABLE 	R8 R6 K7 ; R8 := R6["nodeType"]
	54	[2977]	EQ       	0 R8 K16 ; if R8 ~= 7.000000 then PC := 67
	55	[2977]	JMP      	67 ; PC := 67
	56	[2977]	GETTABLE 	R8 R5 K17 ; R8 := R5["complete"]
	57	[2977]	TEST     	R8 1 ; if R8 then PC := 67
	58	[2977]	JMP      	67 ; PC := 67
	59	[2977]	GETGLOBAL	R8 K18 ; R8 := mNewWarMode
	60	[2977]	TEST     	R8 1 ; if R8 then PC := 67
	61	[2977]	JMP      	67 ; PC := 67
	62	[2978]	SETTABLE 	R5 K19 K14 ; R5["forceHover"] := true
	63	[2979]	GETUPVAL 	R8 U3 ; R8 := U3
	64	[2979]	MOVE     	R9 R5 ; R9 := R5
	65	[2979]	CALL     	R8 2 1 ; R8(R9)
	66	[2979]	JMP      	85 ; PC := 85
	67	[2980]	GETTABLE 	R8 R5 K20 ; R8 := R5["reconstructionProgress"]
	68	[2980]	TEST     	R8 0 ; if not R8 then PC := 85
	69	[2980]	JMP      	85 ; PC := 85
	70	[2980]	GETTABLE 	R8 R5 K20 ; R8 := R5["reconstructionProgress"]
	71	[2980]	LT       	0 R8 K21 ; if R8 >= 2.000000 then PC := 85
	72	[2980]	JMP      	85 ; PC := 85
	73	[2981]	SETTABLE 	R5 K13 K14 ; R5["forceUnlock"] := true
	74	[2982]	GETUPVAL 	R8 U3 ; R8 := U3
	75	[2982]	MOVE     	R9 R5 ; R9 := R5
	76	[2982]	CALL     	R8 2 1 ; R8(R9)
	77	[2983]	JMP      	85 ; PC := 85
	78	[2984]	GETTABLE 	R8 R5 K13 ; R8 := R5["forceUnlock"]
	79	[2984]	TEST     	R8 0 ; if not R8 then PC := 85
	80	[2984]	JMP      	85 ; PC := 85
	81	[2985]	SETTABLE 	R5 K13 K22 ; R5["forceUnlock"] := false
	82	[2986]	GETUPVAL 	R8 U3 ; R8 := U3
	83	[2986]	MOVE     	R9 R5 ; R9 := R5
	84	[2986]	CALL     	R8 2 1 ; R8(R9)
	85	[2965]	FORLOOP  	R1 8 ; R1 += R3; if R1 <= R2 then begin PC := 8; R4 := R1 end
	86	[2989]	RETURN   	R0 1 ; return 

function #63 <?:2991,3013> (70 instructions, 280 bytes at 000002113280ED00)
1 param, 17 slots, 2 upvalues, 0 locals, 14 constants, 0 functions
	1	[2995]	UNM      	R1 R0 ; R1 := ^ R0
	2	[2995]	DIV      	R1 K0 R1 ; R1 := 100.000000 / R1
	3	[2995]	DIV      	R0 R1 K1 ; R0 := R1 / 75.000000
	4	[2996]	LOADK    	R1 := 1.000000
	5	[2996]	GETUPVAL 	R2 U0 ; R2 := U0
	6	[2996]	LEN      	R2 R2 ; R2 := # R2
	7	[2996]	LOADK    	R3 := 1.000000
	8	[2996]	FORPREP  	R1 69 ; R1 -= R3; PC := 69
	9	[2997]	GETUPVAL 	R5 U0 ; R5 := U0
	10	[2997]	GETTABLE 	R5 R5 R4 ; R5 := R5[R4]
	11	[2998]	GETTABLE 	R6 R5 K2 ; R6 := R5["overrideIconSize"]
	12	[2998]	EQ       	1 R6 K3 ; if R6 == nil then PC := 69
	13	[2998]	JMP      	69 ; PC := 69
	14	[2999]	GETTABLE 	R6 R5 K4 ; R6 := R5["clipName"]
	15	[2999]	LOADK    	R7 K5 ; R7 := ".Btn"
	16	[2999]	CONCAT   	R6 R6 R7 ; R6 := R6 .. R7
	17	[3000]	GETTABLE 	R7 R5 K4 ; R7 := R5["clipName"]
	18	[3000]	LOADK    	R8 K6 ; R8 := ".Node.Container.Icon"
	19	[3000]	CONCAT   	R7 R7 R8 ; R7 := R7 .. R8
	20	[3001]	GETTABLE 	R8 R5 K4 ; R8 := R5["clipName"]
	21	[3001]	LOADK    	R9 K7 ; R9 := ".Node.Container.Node"
	22	[3001]	CONCAT   	R8 R8 R9 ; R8 := R8 .. R9
	23	[3002]	GETTABLE 	R9 R5 K2 ; R9 := R5["overrideIconSize"]
	24	[3002]	GETUPVAL 	R10 U1 ; R10 := U1
	25	[3002]	GETTABLE 	R10 R10 K8 ; R10 := R10[0x06d055f9]
	26	[3002]	GETTABLE 	R11 R5 K9 ; R11 := R5["scaleIconWithCamera"]
	27	[3002]	MOVE     	R12 R0 ; R12 := R0
	28	[3002]	LOADK    	R13 := 1.000000
	29	[3002]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	30	[3002]	MUL      	R9 R9 R10 ; R9 := R9 * R10
	31	[3003]	MUL      	R10 R9 K10 ; R10 := R9 * 2.000000
	32	[3004]	MUL      	R11 R10 K11 ; R11 := R10 * 1.500000
	33	[3005]	GETGLOBAL	R12 K12 ; R12 := 0xae91e43b
	34	[3005]	SELF     	R12 R12 K13 ; R13 := R12; R12 := R12[0x67bc869f]
	35	[3005]	MOVE     	R14 R6 ; R14 := R6
	36	[3005]	LOADK    	R15 := 12.000000
	37	[3005]	MOVE     	R16 R9 ; R16 := R9
	38	[3005]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	39	[3006]	GETGLOBAL	R12 K12 ; R12 := 0xae91e43b
	40	[3006]	SELF     	R12 R12 K13 ; R13 := R12; R12 := R12[0x67bc869f]
	41	[3006]	MOVE     	R14 R6 ; R14 := R6
	42	[3006]	LOADK    	R15 := 13.000000
	43	[3006]	MOVE     	R16 R9 ; R16 := R9
	44	[3006]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	45	[3007]	GETGLOBAL	R12 K12 ; R12 := 0xae91e43b
	46	[3007]	SELF     	R12 R12 K13 ; R13 := R12; R12 := R12[0x67bc869f]
	47	[3007]	MOVE     	R14 R7 ; R14 := R7
	48	[3007]	LOADK    	R15 := 12.000000
	49	[3007]	MOVE     	R16 R10 ; R16 := R10
	50	[3007]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	51	[3008]	GETGLOBAL	R12 K12 ; R12 := 0xae91e43b
	52	[3008]	SELF     	R12 R12 K13 ; R13 := R12; R12 := R12[0x67bc869f]
	53	[3008]	MOVE     	R14 R7 ; R14 := R7
	54	[3008]	LOADK    	R15 := 13.000000
	55	[3008]	MOVE     	R16 R10 ; R16 := R10
	56	[3008]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	57	[3009]	GETGLOBAL	R12 K12 ; R12 := 0xae91e43b
	58	[3009]	SELF     	R12 R12 K13 ; R13 := R12; R12 := R12[0x67bc869f]
	59	[3009]	MOVE     	R14 R8 ; R14 := R8
	60	[3009]	LOADK    	R15 := 12.000000
	61	[3009]	MOVE     	R16 R11 ; R16 := R11
	62	[3009]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	63	[3010]	GETGLOBAL	R12 K12 ; R12 := 0xae91e43b
	64	[3010]	SELF     	R12 R12 K13 ; R13 := R12; R12 := R12[0x67bc869f]
	65	[3010]	MOVE     	R14 R8 ; R14 := R8
	66	[3010]	LOADK    	R15 := 13.000000
	67	[3010]	MOVE     	R16 R11 ; R16 := R11
	68	[3010]	CALL     	R12 5 1 ; R12(R13,R14,R15,R16)
	69	[2996]	FORLOOP  	R1 9 ; R1 += R3; if R1 <= R2 then begin PC := 9; R4 := R1 end
	70	[3013]	RETURN   	R0 1 ; return 

function #64 <?:3015,3029> (44 instructions, 176 bytes at 00000211749C6C20)
5 params, 10 slots, 0 upvalues, 0 locals, 13 constants, 0 functions
	1	[3016]	TESTSET  	R5 R1 1 ; if R1 then PC := 4 else R5 := R1 
	2	[3016]	JMP      	4 ; PC := 4
	3	[3016]	GETGLOBAL	R5 K0 ; R5 := ZERO_VECTOR
	4	[3016]	TESTSET  	R6 R4 1 ; if R4 then PC := 7 else R6 := R4 
	5	[3016]	JMP      	7 ; PC := 7
	6	[3016]	GETGLOBAL	R6 K0 ; R6 := ZERO_VECTOR
	7	[3016]	ADD      	R1 R5 R6 ; R1 := R5 + R6
	8	[3017]	TEST     	R2 1 ; if R2 then PC := 11
	9	[3017]	JMP      	11 ; PC := 11
	10	[3017]	GETGLOBAL	R2 K1 ; R2 := ZERO_ROTATION
	11	[3018]	TEST     	R3 1 ; if R3 then PC := 14
	12	[3018]	JMP      	14 ; PC := 14
	13	[3018]	LOADK    	R3 K2 ; R3 := 0.010000
	14	[3020]	GETGLOBAL	R5 K3 ; R5 := 0x1211d00f
	15	[3020]	SELF     	R5 R5 K4 ; R6 := R5; R5 := R5[0x05909209]
	16	[3020]	MOVE     	R7 R0 ; R7 := R0
	17	[3020]	MOVE     	R8 R1 ; R8 := R1
	18	[3020]	MOVE     	R9 R2 ; R9 := R2
	19	[3020]	CALL     	R5 5 2 ; R5 := R5(R6,R7,R8,R9)
	20	[3020]	MOVE     	R0 R5 ; R0 := R5
	21	[3021]	GETGLOBAL	R5 K5 ; R5 := 0x7b998233
	22	[3021]	MOVE     	R6 R0 ; R6 := R0
	23	[3021]	CALL     	R5 2 2 ; R5 := R5(R6)
	24	[3021]	TEST     	R5 1 ; if R5 then PC := 43
	25	[3021]	JMP      	43 ; PC := 43
	26	[3021]	EQ       	1 R3 K6 ; if R3 == nil then PC := 43
	27	[3021]	JMP      	43 ; PC := 43
	28	[3022]	SELF     	R5 R0 K7 ; R6 := R0; R5 := R0[0x2d9ba74f]
	29	[3022]	MOVE     	R7 R3 ; R7 := R3
	30	[3022]	CALL     	R5 3 1 ; R5(R6,R7)
	31	[3023]	SELF     	R5 R0 K8 ; R6 := R0; R5 := R0[0xf2deaf69]
	32	[3023]	GETGLOBAL	R7 K9 ; R7 := gParticleSysType
	33	[3023]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	34	[3023]	TEST     	R5 0 ; if not R5 then PC := 43
	35	[3023]	JMP      	43 ; PC := 43
	36	[3024]	DIV      	R5 R3 K10 ; R5 := R3 / 0.800000
	37	[3024]	MUL      	R3 R5 K11 ; R3 := R5 * 0.350000
	38	[3025]	SELF     	R5 R0 K12 ; R6 := R0; R5 := R0[0xcbf89887]
	39	[3025]	MOVE     	R7 R3 ; R7 := R3
	40	[3025]	MOVE     	R8 R3 ; R8 := R3
	41	[3025]	OP_LOADBOOL	R9 0 0 ; R9 := false
	42	[3025]	CALL     	R5 5 1 ; R5(R6,R7,R8,R9)
	43	[3028]	RETURN   	R0 2 ; return R0 
	44	[3029]	RETURN   	R0 1 ; return 

function #65 <?:3031,3466> (1208 instructions, 4832 bytes at 00000211322ECF80)
0 params, 134 slots, 14 upvalues, 0 locals, 223 constants, 3 functions
	1	[3032]	NEWTABLE 	R0 0 0 ; R0 := {}
	2	[3032]	SETUPVAL 	R0 U0 ; U0 := R0
	3	[3033]	GETUPVAL 	R0 U1 ; R0 := U1
	4	[3033]	EQ       	1 R0 K0 ; if R0 == nil then PC := 29
	5	[3033]	JMP      	29 ; PC := 29
	6	[3034]	GETGLOBAL	R0 K1 ; R0 := 0xcfc01047
	7	[3034]	GETUPVAL 	R1 U1 ; R1 := U1
	8	[3034]	CALL     	R0 2 4 ; R0,R1,R2 := R0(R1)
	9	[3034]	JMP      	27 ; PC := 27
	10	[3035]	GETUPVAL 	R5 U2 ; R5 := U2
	11	[3035]	GETTABLE 	R6 R4 K2 ; R6 := R4["clipName"]
	12	[3035]	CALL     	R5 2 1 ; R5(R6)
	13	[3036]	GETTABLE 	R5 R4 K3 ; R5 := R4["deco"]
	14	[3036]	EQ       	1 R5 K0 ; if R5 == nil then PC := 27
	15	[3036]	JMP      	27 ; PC := 27
	16	[3036]	GETGLOBAL	R5 K4 ; R5 := 0x7b998233
	17	[3036]	GETTABLE 	R6 R4 K3 ; R6 := R4["deco"]
	18	[3036]	GETTABLE 	R6 R6 K5 ; R6 := R6["mInstance"]
	19	[3036]	CALL     	R5 2 2 ; R5 := R5(R6)
	20	[3036]	TEST     	R5 1 ; if R5 then PC := 27
	21	[3036]	JMP      	27 ; PC := 27
	22	[3037]	GETGLOBAL	R5 K6 ; R5 := 0x1211d00f
	23	[3037]	SELF     	R5 R5 K7 ; R6 := R5; R5 := R5[0x59c96e77]
	24	[3037]	GETTABLE 	R7 R4 K3 ; R7 := R4["deco"]
	25	[3037]	GETTABLE 	R7 R7 K5 ; R7 := R7["mInstance"]
	26	[3037]	CALL     	R5 3 1 ; R5(R6,R7)
	27	[3034]	TFORLOOP 	R0 2 ; R3,R4 := R0(R1,R2); if R3 ~= nil then begin PC = 10; R2 := R3 end
	28	[3038]	JMP      	10 ; PC := 10
	29	[3042]	GETGLOBAL	R5 K8 ; R5 := mRailJack
	30	[3042]	SETTABLE 	R5 K9 K10 ; R5["NameNodeMapRebuildQueued"] := false
	31	[3043]	NEWTABLE 	R5 0 0 ; R5 := {}
	32	[3043]	SETUPVAL 	R5 U1 ; U1 := R5
	33	[3045]	NEWTABLE 	R5 0 0 ; R5 := {}
	34	[3046]	NEWTABLE 	R6 0 0 ; R6 := {}
	35	[3048]	GETGLOBAL	R7 K11 ; R7 := _T
	36	[3048]	GETTABLE 	R7 R7 K12 ; R7 := R7["CustomStarChartNodeFilter"]
	37	[3048]	TEST     	R7 0 ; if not R7 then PC := 117
	38	[3048]	JMP      	117 ; PC := 117
	39	[3048]	GETGLOBAL	R7 K11 ; R7 := _T
	40	[3048]	GETTABLE 	R7 R7 K12 ; R7 := R7["CustomStarChartNodeFilter"]
	41	[3048]	GETTABLE 	R7 R7 K13 ; R7 := R7["Keys"]
	42	[3048]	TEST     	R7 0 ; if not R7 then PC := 117
	43	[3048]	JMP      	117 ; PC := 117
	44	[3049]	GETUPVAL 	R7 U3 ; R7 := U3
	45	[3049]	GETTABLE 	R7 R7 K14 ; R7 := R7[0x8e7c3b5e]
	46	[3049]	GETGLOBAL	R8 K15 ; R8 := 0x25d99d89
	47	[3049]	CALL     	R7 2 5 ; R7,R8,R9,R10 := R7(R8)
	48	[3050]	GETUPVAL 	R11 U3 ; R11 := U3
	49	[3050]	GETTABLE 	R11 R11 K16 ; R11 := R11[0xa5a62f78]
	50	[3050]	GETGLOBAL	R12 K15 ; R12 := 0x25d99d89
	51	[3050]	MOVE     	R13 R7 ; R13 := R7
	52	[3050]	OP_LOADBOOL	R14 1 0 ; R14 := true
	53	[3050]	CALL     	R11 4 5 ; R11,R12,R13,R14 := R11(R12,R13,R14)
	54	[3051]	LOADNIL  	R15 R15 ; R15 := nil
	55	[3052]	GETGLOBAL	R16 K4 ; R16 := 0x7b998233
	56	[3052]	MOVE     	R17 R7 ; R17 := R7
	57	[3052]	CALL     	R16 2 2 ; R16 := R16(R17)
	58	[3052]	TEST     	R16 1 ; if R16 then PC := 65
	59	[3052]	JMP      	65 ; PC := 65
	60	[3053]	SELF     	R16 R7 K17 ; R17 := R7; R16 := R7[0xb4568f02]
	61	[3053]	SUB      	R18 R11 K18 ; R18 := R11 - 1.000000
	62	[3053]	MOVE     	R19 R12 ; R19 := R12
	63	[3053]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	64	[3053]	MOVE     	R15 R16 ; R15 := R16
	65	[3056]	GETGLOBAL	R16 K1 ; R16 := 0xcfc01047
	66	[3056]	GETGLOBAL	R17 K11 ; R17 := _T
	67	[3056]	GETTABLE 	R17 R17 K12 ; R17 := R17["CustomStarChartNodeFilter"]
	68	[3056]	GETTABLE 	R17 R17 K13 ; R17 := R17["Keys"]
	69	[3056]	CALL     	R16 2 4 ; R16,R17,R18 := R16(R17)
	70	[3056]	JMP      	114 ; PC := 114
	71	[3057]	GETGLOBAL	R21 K4 ; R21 := 0x7b998233
	72	[3057]	MOVE     	R22 R20 ; R22 := R20
	73	[3057]	CALL     	R21 2 2 ; R21 := R21(R22)
	74	[3057]	TEST     	R21 1 ; if R21 then PC := 114
	75	[3057]	JMP      	114 ; PC := 114
	76	[3058]	GETGLOBAL	R21 K19 ; R21 := 0xb009bbc6
	77	[3058]	MOVE     	R22 R20 ; R22 := R20
	78	[3058]	CALL     	R21 2 2 ; R21 := R21(R22)
	79	[3059]	NEWTABLE 	R22 0 7 ; R22 := {}
	80	[3061]	GETGLOBAL	R23 K21 ; R23 := 0x6c97a788
	81	[3061]	GETTABLE 	R23 R23 K22 ; R23 := R23[0x925e2bbb]
	82	[3061]	MOVE     	R24 R20 ; R24 := R20
	83	[3061]	LOADK    	R25 := 1.000000
	84	[3061]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	85	[3061]	SETTABLE 	R22 K20 R23 ; R22["Key"] := R23
	86	[3062]	SETTABLE 	R22 K23 R7 ; R22["KeyChain"] := R7
	87	[3063]	SETTABLE 	R22 K24 R21 ; R22["Type"] := R21
	88	[3064]	GETGLOBAL	R23 K26 ; R23 := 0x88efc25e
	89	[3064]	MOVE     	R24 R20 ; R24 := R20
	90	[3064]	CALL     	R23 2 2 ; R23 := R23(R24)
	91	[3064]	SETTABLE 	R22 K25 R23 ; R22["Anchor"] := R23
	92	[3065]	GETGLOBAL	R23 K28 ; R23 := 0x603636ad
	93	[3065]	GETGLOBAL	R24 K29 ; R24 := 0x64fb1586
	94	[3065]	SELF     	R25 R21 K30 ; R26 := R21; R25 := R21[0xd3a9d01f]
	95	[3065]	CALL     	R25 2 0 ; R25,... := R25(R26)
	96	[3065]	CALL     	R24 0 2 ; R24 := R24(R25,...)
	97	[3065]	OP_LOADBOOL	R25 0 0 ; R25 := false
	98	[3065]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	99	[3065]	SETTABLE 	R22 K27 R23 ; R22["Name"] := R23
	100	[3066]	GETGLOBAL	R23 K28 ; R23 := 0x603636ad
	101	[3066]	GETGLOBAL	R24 K29 ; R24 := 0x64fb1586
	102	[3066]	SELF     	R25 R21 K32 ; R26 := R21; R25 := R21[0x5ba460ac]
	103	[3066]	CALL     	R25 2 0 ; R25,... := R25(R26)
	104	[3066]	CALL     	R24 0 2 ; R24 := R24(R25,...)
	105	[3066]	OP_LOADBOOL	R25 0 0 ; R25 := false
	106	[3066]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	107	[3066]	SETTABLE 	R22 K31 R23 ; R22["Description"] := R23
	108	[3067]	SETTABLE 	R22 K33 R15 ; R22["Difficulty"] := R15
	109	[3069]	GETGLOBAL	R23 K34 ; R23 := 0x33bdd652
	110	[3069]	GETTABLE 	R23 R23 K35 ; R23 := R23[0x23d5322f]
	111	[3069]	MOVE     	R24 R5 ; R24 := R5
	112	[3069]	MOVE     	R25 R22 ; R25 := R22
	113	[3069]	CALL     	R23 3 1 ; R23(R24,R25)
	114	[3056]	TFORLOOP 	R16 2 ; R19,R20 := R16(R17,R18); if R19 ~= nil then begin PC = 71; R18 := R19 end
	115	[3070]	JMP      	71 ; PC := 71
	116	[3071]	JMP      	223 ; PC := 223
	117	[3074]	GETUPVAL 	R23 U3 ; R23 := U3
	118	[3074]	GETTABLE 	R23 R23 K36 ; R23 := R23[0x2196d0b1]
	119	[3074]	MOVE     	R24 R5 ; R24 := R5
	120	[3074]	LOADNIL  	R25 R25 ; R25 := nil
	121	[3074]	GETGLOBAL	R26 K37 ; R26 := 0xbe190284
	122	[3074]	SELF     	R26 R26 K38 ; R27 := R26; R26 := R26[0xa1c390fe]
	123	[3074]	CALL     	R26 2 0 ; R26,... := R26(R27)
	124	[3074]	CALL     	R23 0 1 ; R23(R24,...)
	125	[3075]	LOADK    	R23 := 1.000000
	126	[3075]	LEN      	R24 R5 ; R24 := # R5
	127	[3075]	LOADK    	R25 := 1.000000
	128	[3075]	FORPREP  	R23 137 ; R23 -= R25; PC := 137
	129	[3076]	GETGLOBAL	R27 K34 ; R27 := 0x33bdd652
	130	[3076]	GETTABLE 	R27 R27 K35 ; R27 := R27[0x23d5322f]
	131	[3076]	MOVE     	R28 R6 ; R28 := R6
	132	[3076]	GETTABLE 	R29 R5 R26 ; R29 := R5[R26]
	133	[3076]	GETTABLE 	R29 R29 K24 ; R29 := R29["Type"]
	134	[3076]	SELF     	R29 R29 K39 ; R30 := R29; R29 := R29[0x92608d86]
	135	[3076]	CALL     	R29 2 0 ; R29,... := R29(R30)
	136	[3076]	CALL     	R27 0 1 ; R27(R28,...)
	137	[3075]	FORLOOP  	R23 129 ; R23 += R25; if R23 <= R24 then begin PC := 129; R26 := R23 end
	138	[3080]	GETUPVAL 	R27 U3 ; R27 := U3
	139	[3080]	GETTABLE 	R27 R27 K14 ; R27 := R27[0x8e7c3b5e]
	140	[3080]	GETGLOBAL	R28 K15 ; R28 := 0x25d99d89
	141	[3080]	CALL     	R27 2 5 ; R27,R28,R29,R30 := R27(R28)
	142	[3081]	GETGLOBAL	R31 K4 ; R31 := 0x7b998233
	143	[3081]	MOVE     	R32 R27 ; R32 := R27
	144	[3081]	CALL     	R31 2 2 ; R31 := R31(R32)
	145	[3081]	TEST     	R31 1 ; if R31 then PC := 223
	146	[3081]	JMP      	223 ; PC := 223
	147	[3082]	GETUPVAL 	R31 U3 ; R31 := U3
	148	[3082]	GETTABLE 	R31 R31 K16 ; R31 := R31[0xa5a62f78]
	149	[3082]	GETGLOBAL	R32 K15 ; R32 := 0x25d99d89
	150	[3082]	MOVE     	R33 R27 ; R33 := R27
	151	[3082]	OP_LOADBOOL	R34 1 0 ; R34 := true
	152	[3082]	CALL     	R31 4 5 ; R31,R32,R33,R34 := R31(R32,R33,R34)
	153	[3083]	GETGLOBAL	R35 K4 ; R35 := 0x7b998233
	154	[3083]	MOVE     	R36 R34 ; R36 := R34
	155	[3083]	CALL     	R35 2 2 ; R35 := R35(R36)
	156	[3083]	TEST     	R35 1 ; if R35 then PC := 208
	157	[3083]	JMP      	208 ; PC := 208
	158	[3084]	NEWTABLE 	R35 0 7 ; R35 := {}
	159	[3086]	GETGLOBAL	R36 K21 ; R36 := 0x6c97a788
	160	[3086]	GETTABLE 	R36 R36 K22 ; R36 := R36[0x925e2bbb]
	161	[3086]	MOVE     	R37 R34 ; R37 := R34
	162	[3086]	LOADK    	R38 := 1.000000
	163	[3086]	CALL     	R36 3 2 ; R36 := R36(R37,R38)
	164	[3086]	SETTABLE 	R35 K20 R36 ; R35["Key"] := R36
	165	[3087]	SETTABLE 	R35 K23 R27 ; R35["KeyChain"] := R27
	166	[3088]	SETTABLE 	R35 K24 R34 ; R35["Type"] := R34
	167	[3089]	GETGLOBAL	R36 K26 ; R36 := 0x88efc25e
	168	[3089]	MOVE     	R37 R34 ; R37 := R34
	169	[3089]	CALL     	R36 2 2 ; R36 := R36(R37)
	170	[3089]	SETTABLE 	R35 K25 R36 ; R35["Anchor"] := R36
	171	[3090]	GETGLOBAL	R36 K28 ; R36 := 0x603636ad
	172	[3090]	GETGLOBAL	R37 K29 ; R37 := 0x64fb1586
	173	[3090]	SELF     	R38 R34 K30 ; R39 := R34; R38 := R34[0xd3a9d01f]
	174	[3090]	CALL     	R38 2 0 ; R38,... := R38(R39)
	175	[3090]	CALL     	R37 0 2 ; R37 := R37(R38,...)
	176	[3090]	OP_LOADBOOL	R38 0 0 ; R38 := false
	177	[3090]	CALL     	R36 3 2 ; R36 := R36(R37,R38)
	178	[3090]	SETTABLE 	R35 K27 R36 ; R35["Name"] := R36
	179	[3091]	GETGLOBAL	R36 K28 ; R36 := 0x603636ad
	180	[3091]	GETGLOBAL	R37 K29 ; R37 := 0x64fb1586
	181	[3091]	SELF     	R38 R34 K32 ; R39 := R34; R38 := R34[0x5ba460ac]
	182	[3091]	CALL     	R38 2 0 ; R38,... := R38(R39)
	183	[3091]	CALL     	R37 0 2 ; R37 := R37(R38,...)
	184	[3091]	OP_LOADBOOL	R38 0 0 ; R38 := false
	185	[3091]	CALL     	R36 3 2 ; R36 := R36(R37,R38)
	186	[3091]	SETTABLE 	R35 K31 R36 ; R35["Description"] := R36
	187	[3092]	SELF     	R36 R27 K17 ; R37 := R27; R36 := R27[0xb4568f02]
	188	[3092]	SUB      	R38 R31 K18 ; R38 := R31 - 1.000000
	189	[3092]	MOVE     	R39 R32 ; R39 := R32
	190	[3092]	CALL     	R36 4 2 ; R36 := R36(R37,R38,R39)
	191	[3092]	SETTABLE 	R35 K33 R36 ; R35["Difficulty"] := R36
	192	[3095]	GETUPVAL 	R36 U4 ; R36 := U4
	193	[3095]	GETTABLE 	R36 R36 K40 ; R36 := R36["vorsPrizeQuestKey"]
	194	[3095]	EQ       	0 R27 R36 ; if R27 ~= R36 then PC := 199
	195	[3095]	JMP      	199 ; PC := 199
	196	[3096]	SELF     	R36 R34 K39 ; R37 := R34; R36 := R34[0x92608d86]
	197	[3096]	CALL     	R36 2 2 ; R36 := R36(R37)
	198	[3096]	SETGLOBALHASH	R36 K41 ; mVorsPrizeQuestActiveNode := R36
	199	[3099]	SELF     	R36 R34 K39 ; R37 := R34; R36 := R34[0x92608d86]
	200	[3099]	CALL     	R36 2 2 ; R36 := R36(R37)
	201	[3099]	SETUPVAL 	R36 U5 ; U5 := R36
	202	[3101]	GETGLOBAL	R36 K34 ; R36 := 0x33bdd652
	203	[3101]	GETTABLE 	R36 R36 K35 ; R36 := R36[0x23d5322f]
	204	[3101]	MOVE     	R37 R5 ; R37 := R5
	205	[3101]	MOVE     	R38 R35 ; R38 := R35
	206	[3101]	CALL     	R36 3 1 ; R36(R37,R38)
	207	[3101]	JMP      	223 ; PC := 223
	208	[3103]	SELF     	R36 R27 K42 ; R37 := R27; R36 := R27[0x42700bd0]
	209	[3103]	CALL     	R36 2 2 ; R36 := R36(R37)
	210	[3104]	LEN      	R37 R36 ; R37 := # R36
	211	[3104]	LE       	0 R31 R37 ; if R31 > R37 then PC := 223
	212	[3104]	JMP      	223 ; PC := 223
	213	[3105]	GETTABLE 	R37 R36 R31 ; R37 := R36[R31]
	214	[3106]	TEST     	R37 0 ; if not R37 then PC := 223
	215	[3106]	JMP      	223 ; PC := 223
	216	[3106]	GETTABLE 	R38 R37 K43 ; R38 := R37["mMarkedNodes"]
	217	[3106]	LEN      	R38 R38 ; R38 := # R38
	218	[3106]	LT       	0 K44 R38 ; if 0.000000 >= R38 then PC := 223
	219	[3106]	JMP      	223 ; PC := 223
	220	[3107]	GETTABLE 	R38 R37 K43 ; R38 := R37["mMarkedNodes"]
	221	[3107]	GETTABLE 	R38 R38 K18 ; R38 := R38[1.000000]
	222	[3107]	SETUPVAL 	R38 U5 ; U5 := R38
	223	[3114]	GETUPVAL 	R38 U3 ; R38 := U3
	224	[3114]	GETTABLE 	R38 R38 K45 ; R38 := R38[0x52fb05b3]
	225	[3114]	GETUPVAL 	R39 U4 ; R39 := U4
	226	[3114]	GETTABLE 	R39 R39 K46 ; R39 := R39["zarimanIntroQuest"]
	227	[3114]	CALL     	R38 2 2 ; R38 := R38(R39)
	228	[3116]	LOADK    	R39 := 1.000000
	229	[3116]	GETGLOBAL	R40 K47 ; R40 := mMapNodes
	230	[3116]	LEN      	R40 R40 ; R40 := # R40
	231	[3116]	LOADK    	R41 := 1.000000
	232	[3116]	FORPREP  	R39 288 ; R39 -= R41; PC := 288
	233	[3118]	OP_LOADBOOL	R43 0 0 ; R43 := false
	234	[3119]	GETGLOBAL	R44 K47 ; R44 := mMapNodes
	235	[3119]	GETTABLE 	R44 R44 R42 ; R44 := R44[R42]
	236	[3119]	GETTABLE 	R44 R44 K48 ; R44 := R44["name"]
	237	[3120]	GETGLOBAL	R45 K4 ; R45 := 0x7b998233
	238	[3120]	GETGLOBAL	R46 K47 ; R46 := mMapNodes
	239	[3120]	GETTABLE 	R46 R46 R42 ; R46 := R46[R42]
	240	[3120]	GETTABLE 	R46 R46 K49 ; R46 := R46["mission"]
	241	[3120]	GETTABLE 	R46 R46 K50 ; R46 := R46["levelKeyName"]
	242	[3120]	CALL     	R45 2 2 ; R45 := R45(R46)
	243	[3120]	TEST     	R45 1 ; if R45 then PC := 255
	244	[3120]	JMP      	255 ; PC := 255
	245	[3121]	OP_LOADBOOL	R43 1 0 ; R43 := true
	246	[3123]	LOADK    	R45 := 1.000000
	247	[3123]	LEN      	R46 R6 ; R46 := # R6
	248	[3123]	LOADK    	R47 := 1.000000
	249	[3123]	FORPREP  	R45 254 ; R45 -= R47; PC := 254
	250	[3124]	GETTABLE 	R49 R6 R48 ; R49 := R6[R48]
	251	[3124]	EQ       	0 R49 R44 ; if R49 ~= R44 then PC := 254
	252	[3124]	JMP      	254 ; PC := 254
	253	[3125]	OP_LOADBOOL	R43 0 0 ; R43 := false
	254	[3123]	FORLOOP  	R45 250 ; R45 += R47; if R45 <= R46 then begin PC := 250; R48 := R45 end
	255	[3130]	GETGLOBAL	R49 K29 ; R49 := 0x64fb1586
	256	[3130]	MOVE     	R50 R44 ; R50 := R44
	257	[3130]	CALL     	R49 2 2 ; R49 := R49(R50)
	258	[3130]	MOVE     	R44 R49 ; R44 := R49
	259	[3131]	GETUPVAL 	R49 U6 ; R49 := U6
	260	[3131]	GETTABLE 	R49 R49 K51 ; R49 := R49["Sectors"]
	261	[3131]	GETTABLE 	R49 R49 R44 ; R49 := R49[R44]
	262	[3133]	EQ       	0 R49 K0 ; if R49 ~= nil then PC := 266
	263	[3133]	JMP      	266 ; PC := 266
	264	[3134]	GETGLOBAL	R50 K47 ; R50 := mMapNodes
	265	[3134]	GETTABLE 	R49 R50 R42 ; R49 := R50[R42]
	266	[3137]	GETUPVAL 	R50 U7 ; R50 := U7
	267	[3137]	GETTABLE 	R50 R50 K52 ; R50 := R50["EnableDifficultySelector"]
	268	[3137]	TEST     	R50 0 ; if not R50 then PC := 279
	269	[3137]	JMP      	279 ; PC := 279
	270	[3137]	GETTABLE 	R50 R49 K53 ; R50 := R49["region"]
	271	[3137]	GETUPVAL 	R51 U3 ; R51 := U3
	272	[3137]	GETTABLE 	R51 R51 K54 ; R51 := R51["REGION_ID_ZARIMAN"]
	273	[3137]	SUB      	R51 R51 K18 ; R51 := R51 - 1.000000
	274	[3137]	EQ       	0 R50 R51 ; if R50 ~= R51 then PC := 279
	275	[3137]	JMP      	279 ; PC := 279
	276	[3137]	TEST     	R38 0 ; if not R38 then PC := 279
	277	[3137]	JMP      	279 ; PC := 279
	278	[3138]	SETTABLE 	R49 K55 K18 ; R49["difficultyUnlocked"] := 1.000000
	279	[3141]	TEST     	R43 1 ; if R43 then PC := 285
	280	[3141]	JMP      	285 ; PC := 285
	281	[3142]	GETUPVAL 	R50 U8 ; R50 := U8
	282	[3142]	SELF     	R51 R49 K56 ; R52 := R49; R51 := R49[0x8f89d633]
	283	[3142]	CALL     	R51 2 0 ; R51,... := R51(R52)
	284	[3142]	CALL     	R50 0 1 ; R50(R51,...)
	285	[3145]	GETGLOBAL	R50 K57 ; R50 := 0xce225efa
	286	[3145]	LOADK    	R51 := 0.000000
	287	[3145]	CALL     	R50 2 1 ; R50(R51)
	288	[3116]	FORLOOP  	R39 233 ; R39 += R41; if R39 <= R40 then begin PC := 233; R42 := R39 end
	289	[3149]	NEWTABLE 	R50 0 0 ; R50 := {}
	290	[3150]	LOADNIL  	R51 R51 ; R51 := nil
	291	[3152]	LOADK    	R52 := 1.000000
	292	[3152]	LEN      	R53 R5 ; R53 := # R5
	293	[3152]	LOADK    	R54 := 1.000000
	294	[3152]	FORPREP  	R52 690 ; R52 -= R54; PC := 690
	295	[3153]	GETGLOBAL	R56 K57 ; R56 := 0xce225efa
	296	[3153]	LOADK    	R57 := 0.000000
	297	[3153]	CALL     	R56 2 1 ; R56(R57)
	298	[3155]	GETTABLE 	R56 R5 R55 ; R56 := R5[R55]
	299	[3156]	GETTABLE 	R57 R56 K24 ; R57 := R56["Type"]
	300	[3157]	SELF     	R58 R57 K39 ; R59 := R57; R58 := R57[0x92608d86]
	301	[3157]	CALL     	R58 2 2 ; R58 := R58(R59)
	302	[3158]	SELF     	R59 R57 K58 ; R60 := R57; R59 := R57[0xe2258c84]
	303	[3158]	CALL     	R59 2 2 ; R59 := R59(R60)
	304	[3160]	GETUPVAL 	R60 U1 ; R60 := U1
	305	[3160]	GETGLOBAL	R61 K29 ; R61 := 0x64fb1586
	306	[3160]	MOVE     	R62 R58 ; R62 := R58
	307	[3160]	CALL     	R61 2 2 ; R61 := R61(R62)
	308	[3160]	GETTABLE 	R60 R60 R61 ; R60 := R60[R61]
	309	[3161]	LOADNIL  	R61 R61 ; R61 := nil
	310	[3162]	EQ       	1 R60 K0 ; if R60 == nil then PC := 314
	311	[3162]	JMP      	314 ; PC := 314
	312	[3163]	GETTABLE 	R61 R60 K59 ; R61 := R60["radialSector"]
	313	[3163]	JMP      	318 ; PC := 318
	314	[3165]	GETGLOBAL	R62 K21 ; R62 := 0x6c97a788
	315	[3165]	GETTABLE 	R62 R62 K60 ; R62 := R62[0xa67ba89f]
	316	[3165]	CALL     	R62 1 2 ; R62 := R62()
	317	[3165]	MOVE     	R61 R62 ; R61 := R62
	318	[3168]	OP_LOADBOOL	R62 0 0 ; R62 := false
	319	[3169]	SELF     	R63 R57 K61 ; R64 := R57; R63 := R57[0x6c053909]
	320	[3169]	CALL     	R63 2 2 ; R63 := R63(R64)
	321	[3169]	GETUPVAL 	R64 U3 ; R64 := U3
	322	[3169]	GETTABLE 	R64 R64 K62 ; R64 := R64["REGION_ID_DOJO"]
	323	[3169]	EQ       	0 R63 R64 ; if R63 ~= R64 then PC := 352
	324	[3169]	JMP      	352 ; PC := 352
	325	[3171]	GETGLOBAL	R63 K8 ; R63 := mRailJack
	326	[3171]	GETTABLE 	R63 R63 K63 ; R63 := R63["Active"]
	327	[3171]	TEST     	R63 0 ; if not R63 then PC := 335
	328	[3171]	JMP      	335 ; PC := 335
	329	[3172]	GETGLOBAL	R63 K65 ; R63 := 0x0469f296
	330	[3172]	LOADK    	R64 K66 ; R64 := "/Lotus/Language/Dojo/DryDockMapLabel"
	331	[3172]	CALL     	R63 2 2 ; R63 := R63(R64)
	332	[3172]	SETTABLE 	R61 K64 R63 ; R61["locTag"] := R63
	333	[3173]	OP_LOADBOOL	R62 1 0 ; R62 := true
	334	[3173]	JMP      	391 ; PC := 391
	335	[3175]	GETGLOBAL	R63 K67 ; R63 := 0x76ea806b
	336	[3175]	SELF     	R63 R63 K68 ; R64 := R63; R63 := R63[0x3f3ae64c]
	337	[3175]	LOADK    	R65 := 0.000000
	338	[3175]	CALL     	R63 3 2 ; R63 := R63(R64,R65)
	339	[3176]	GETGLOBAL	R64 K4 ; R64 := 0x7b998233
	340	[3176]	MOVE     	R65 R63 ; R65 := R63
	341	[3176]	CALL     	R64 2 2 ; R64 := R64(R65)
	342	[3176]	TEST     	R64 1 ; if R64 then PC := 391
	343	[3176]	JMP      	391 ; PC := 391
	344	[3177]	GETGLOBAL	R64 K65 ; R64 := 0x0469f296
	345	[3177]	SELF     	R65 R63 K69 ; R66 := R63; R65 := R63[0x80563238]
	346	[3177]	CALL     	R65 2 2 ; R65 := R65(R66)
	347	[3177]	SELF     	R65 R65 K70 ; R66 := R65; R65 := R65[0x6da6e186]
	348	[3177]	CALL     	R65 2 0 ; R65,... := R65(R66)
	349	[3177]	CALL     	R64 0 2 ; R64 := R64(R65,...)
	350	[3177]	SETTABLE 	R61 K64 R64 ; R61["locTag"] := R64
	351	[3179]	JMP      	391 ; PC := 391
	352	[3181]	TEST     	R59 1 ; if R59 then PC := 391
	353	[3181]	JMP      	391 ; PC := 391
	354	[3182]	GETGLOBAL	R64 K71 ; R64 := 0xae91e43b
	355	[3182]	SELF     	R64 R64 K72 ; R65 := R64; R64 := R64[0x42b04007]
	356	[3182]	GETTABLE 	R66 R56 K27 ; R66 := R56["Name"]
	357	[3182]	OP_LOADBOOL	R67 1 0 ; R67 := true
	358	[3182]	CALL     	R64 4 2 ; R64 := R64(R65,R66,R67)
	359	[3183]	GETTABLE 	R65 R56 K24 ; R65 := R56["Type"]
	360	[3183]	SELF     	R65 R65 K73 ; R66 := R65; R65 := R65[0xef893aec]
	361	[3183]	CALL     	R65 2 2 ; R65 := R65(R66)
	362	[3183]	GETTABLE 	R65 R65 K74 ; R65 := R65["uniqueName"]
	363	[3184]	EQ       	1 R65 K75 ; if R65 == "" then PC := 371
	364	[3184]	JMP      	371 ; PC := 371
	365	[3185]	GETGLOBAL	R66 K71 ; R66 := 0xae91e43b
	366	[3185]	SELF     	R66 R66 K72 ; R67 := R66; R66 := R66[0x42b04007]
	367	[3185]	MOVE     	R68 R65 ; R68 := R65
	368	[3185]	OP_LOADBOOL	R69 0 0 ; R69 := false
	369	[3185]	CALL     	R66 4 2 ; R66 := R66(R67,R68,R69)
	370	[3185]	MOVE     	R64 R66 ; R64 := R66
	371	[3187]	GETTABLE 	R66 R56 K76 ; R66 := R56["Count"]
	372	[3187]	TEST     	R66 0 ; if not R66 then PC := 387
	373	[3187]	JMP      	387 ; PC := 387
	374	[3187]	GETTABLE 	R66 R56 K76 ; R66 := R56["Count"]
	375	[3187]	LT       	0 K18 R66 ; if 1.000000 >= R66 then PC := 387
	376	[3187]	JMP      	387 ; PC := 387
	377	[3187]	GETTABLE 	R66 R56 K24 ; R66 := R56["Type"]
	378	[3187]	SELF     	R66 R66 K77 ; R67 := R66; R66 := R66[0x535d4938]
	379	[3187]	CALL     	R66 2 2 ; R66 := R66(R67)
	380	[3187]	TEST     	R66 0 ; if not R66 then PC := 387
	381	[3187]	JMP      	387 ; PC := 387
	382	[3188]	MOVE     	R66 R64 ; R66 := R64
	383	[3188]	LOADK    	R67 K78 ; R67 := " ["
	384	[3188]	GETTABLE 	R68 R56 K76 ; R68 := R56["Count"]
	385	[3188]	LOADK    	R69 K79 ; R69 := "]"
	386	[3188]	CONCAT   	R64 R66 R69 ; R64 := R66 .. R67 .. R68 .. R69
	387	[3190]	GETGLOBAL	R66 K65 ; R66 := 0x0469f296
	388	[3190]	MOVE     	R67 R64 ; R67 := R64
	389	[3190]	CALL     	R66 2 2 ; R66 := R66(R67)
	390	[3190]	SETTABLE 	R61 K64 R66 ; R61["locTag"] := R66
	391	[3194]	LOADNIL  	R66 R66 ; R66 := nil
	392	[3195]	TEST     	R59 0 ; if not R59 then PC := 398
	393	[3195]	JMP      	398 ; PC := 398
	394	[3196]	GETTABLE 	R67 R61 K49 ; R67 := R61["mission"]
	395	[3196]	SELF     	R67 R67 K56 ; R68 := R67; R67 := R67[0x8f89d633]
	396	[3196]	CALL     	R67 2 2 ; R67 := R67(R68)
	397	[3196]	MOVE     	R66 R67 ; R66 := R67
	398	[3199]	GETTABLE 	R67 R56 K24 ; R67 := R56["Type"]
	399	[3199]	SELF     	R67 R67 K80 ; R68 := R67; R67 := R67[0xed4e0128]
	400	[3199]	CALL     	R67 2 2 ; R67 := R67(R68)
	401	[3200]	GETGLOBAL	R68 K81 ; R68 := 0x7f5022cf
	402	[3200]	GETTABLE 	R68 R68 K82 ; R68 := R68[0xa5c556b9]
	403	[3200]	MOVE     	R69 R67 ; R69 := R67
	404	[3200]	LOADK    	R70 K83 ; R70 := "Hub"
	405	[3200]	CALL     	R68 3 2 ; R68 := R68(R69,R70)
	406	[3200]	TEST     	R68 0 ; if not R68 then PC := 410
	407	[3200]	JMP      	410 ; PC := 410
	408	[3201]	SETTABLE 	R61 K84 K85 ; R61["nodeType"] := 3.000000
	409	[3201]	JMP      	411 ; PC := 411
	410	[3203]	SETTABLE 	R61 K84 K44 ; R61["nodeType"] := 0.000000
	411	[3206]	SETTABLE 	R61 K86 K87 ; R61["unlocked"] := true
	412	[3207]	SETTABLE 	R61 K55 K88 ; R61["difficultyUnlocked"] := 255.000000
	413	[3208]	GETTABLE 	R68 R56 K24 ; R68 := R56["Type"]
	414	[3208]	SELF     	R68 R68 K73 ; R69 := R68; R68 := R68[0xef893aec]
	415	[3208]	CALL     	R68 2 2 ; R68 := R68(R69)
	416	[3208]	SELF     	R68 R68 K56 ; R69 := R68; R68 := R68[0x8f89d633]
	417	[3208]	CALL     	R68 2 2 ; R68 := R68(R69)
	418	[3208]	SETTABLE 	R61 K49 R68 ; R61["mission"] := R68
	419	[3209]	GETTABLE 	R68 R61 K49 ; R68 := R61["mission"]
	420	[3209]	GETGLOBAL	R69 K89 ; R69 := 0x7ed0a956
	421	[3209]	GETTABLE 	R70 R56 K24 ; R70 := R56["Type"]
	422	[3209]	SELF     	R70 R70 K80 ; R71 := R70; R70 := R70[0xed4e0128]
	423	[3209]	CALL     	R70 2 0 ; R70,... := R70(R71)
	424	[3209]	CALL     	R69 0 2 ; R69 := R69(R70,...)
	425	[3209]	SETTABLE 	R68 K50 R69 ; R68["levelKeyName"] := R69
	426	[3210]	GETTABLE 	R68 R56 K33 ; R68 := R56["Difficulty"]
	427	[3210]	EQ       	1 R68 K0 ; if R68 == nil then PC := 432
	428	[3210]	JMP      	432 ; PC := 432
	429	[3211]	GETTABLE 	R68 R61 K49 ; R68 := R61["mission"]
	430	[3211]	GETTABLE 	R69 R56 K33 ; R69 := R56["Difficulty"]
	431	[3211]	SETTABLE 	R68 K90 R69 ; R68["difficulty"] := R69
	432	[3213]	GETTABLE 	R68 R56 K23 ; R68 := R56["KeyChain"]
	433	[3213]	SETTABLE 	R61 K91 R68 ; R61["keyChain"] := R68
	434	[3215]	LOADNIL  	R68 R68 ; R68 := nil
	435	[3216]	GETTABLE 	R69 R56 K92 ; R69 := R56["RegionOverride"]
	436	[3216]	EQ       	1 R69 K0 ; if R69 == nil then PC := 440
	437	[3216]	JMP      	440 ; PC := 440
	438	[3217]	GETTABLE 	R68 R56 K92 ; R68 := R56["RegionOverride"]
	439	[3217]	JMP      	444 ; PC := 444
	440	[3219]	GETTABLE 	R69 R56 K24 ; R69 := R56["Type"]
	441	[3219]	SELF     	R69 R69 K61 ; R70 := R69; R69 := R69[0x6c053909]
	442	[3219]	CALL     	R69 2 2 ; R69 := R69(R70)
	443	[3219]	MOVE     	R68 R69 ; R68 := R69
	444	[3221]	GETGLOBAL	R69 K93 ; R69 := mRegions
	445	[3221]	LEN      	R69 R69 ; R69 := # R69
	446	[3221]	LE       	0 R69 R68 ; if R69 > R68 then PC := 469
	447	[3221]	JMP      	469 ; PC := 469
	448	[3222]	GETGLOBAL	R69 K94 ; R69 := 0x3d106989
	449	[3222]	LOADK    	R70 K95 ; R70 := "invalid region specified for key="
	450	[3222]	GETGLOBAL	R71 K29 ; R71 := 0x64fb1586
	451	[3222]	GETTABLE 	R72 R56 K24 ; R72 := R56["Type"]
	452	[3222]	SELF     	R72 R72 K80 ; R73 := R72; R72 := R72[0xed4e0128]
	453	[3222]	CALL     	R72 2 0 ; R72,... := R72(R73)
	454	[3222]	CALL     	R71 0 2 ; R71 := R71(R72,...)
	455	[3222]	CONCAT   	R70 R70 R71 ; R70 := R70 .. R71
	456	[3222]	CALL     	R69 2 1 ; R69(R70)
	457	[3223]	GETGLOBAL	R69 K96 ; R69 := 0x42dcc9f5
	458	[3223]	GETGLOBAL	R70 K97 ; R70 := mRadialSolarMap
	459	[3223]	SELF     	R70 R70 K98 ; R71 := R70; R70 := R70[0x3ad9ed31]
	460	[3223]	MOVE     	R72 R58 ; R72 := R58
	461	[3223]	CALL     	R70 3 2 ; R70 := R70(R71,R72)
	462	[3223]	GETTABLE 	R70 R70 K53 ; R70 := R70["region"]
	463	[3223]	LOADK    	R71 := 1.000000
	464	[3223]	GETGLOBAL	R72 K93 ; R72 := mRegions
	465	[3223]	LEN      	R72 R72 ; R72 := # R72
	466	[3223]	SUB      	R72 R72 K18 ; R72 := R72 - 1.000000
	467	[3223]	CALL     	R69 4 2 ; R69 := R69(R70,R71,R72)
	468	[3223]	MOVE     	R68 R69 ; R68 := R69
	469	[3226]	GETGLOBAL	R69 K4 ; R69 := 0x7b998233
	470	[3226]	MOVE     	R70 R60 ; R70 := R60
	471	[3226]	CALL     	R69 2 2 ; R69 := R69(R70)
	472	[3226]	TEST     	R69 0 ; if not R69 then PC := 580
	473	[3226]	JMP      	580 ; PC := 580
	474	[3226]	GETTABLE 	R69 R56 K24 ; R69 := R56["Type"]
	475	[3226]	SELF     	R69 R69 K99 ; R70 := R69; R69 := R69[0xf2deaf69]
	476	[3226]	GETUPVAL 	R71 U4 ; R71 := U4
	477	[3226]	GETTABLE 	R71 R71 K100 ; R71 := R71["legacyVayHekKey"]
	478	[3226]	CALL     	R69 3 2 ; R69 := R69(R70,R71)
	479	[3226]	TEST     	R69 1 ; if R69 then PC := 580
	480	[3226]	JMP      	580 ; PC := 580
	481	[3226]	GETUPVAL 	R69 U3 ; R69 := U3
	482	[3226]	GETTABLE 	R69 R69 K101 ; R69 := R69["REGION_ID_MOON"]
	483	[3226]	EQ       	0 R68 R69 ; if R68 ~= R69 then PC := 491
	484	[3226]	JMP      	491 ; PC := 491
	485	[3226]	GETUPVAL 	R69 U9 ; R69 := U9
	486	[3226]	GETUPVAL 	R70 U3 ; R70 := U3
	487	[3226]	GETTABLE 	R70 R70 K101 ; R70 := R70["REGION_ID_MOON"]
	488	[3226]	GETTABLE 	R69 R69 R70 ; R69 := R69[R70]
	489	[3226]	EQ       	1 R69 K87 ; if R69 == true then PC := 580
	490	[3226]	JMP      	580 ; PC := 580
	491	[3227]	TEST     	R62 0 ; if not R62 then PC := 498
	492	[3227]	JMP      	498 ; PC := 498
	493	[3228]	GETGLOBAL	R69 K65 ; R69 := 0x0469f296
	494	[3228]	LOADK    	R70 K102 ; R70 := "CrewBattleNodeDojo"
	495	[3228]	CALL     	R69 2 2 ; R69 := R69(R70)
	496	[3228]	SETTABLE 	R61 K48 R69 ; R61["name"] := R69
	497	[3228]	JMP      	507 ; PC := 507
	498	[3230]	GETGLOBAL	R69 K65 ; R69 := 0x0469f296
	499	[3230]	GETTABLE 	R70 R56 K24 ; R70 := R56["Type"]
	500	[3230]	SELF     	R70 R70 K80 ; R71 := R70; R70 := R70[0xed4e0128]
	501	[3230]	CALL     	R70 2 2 ; R70 := R70(R71)
	502	[3230]	GETUPVAL 	R71 U3 ; R71 := U3
	503	[3230]	GETTABLE 	R71 R71 K103 ; R71 := R71["KEY_TAG"]
	504	[3230]	CONCAT   	R70 R70 R71 ; R70 := R70 .. R71
	505	[3230]	CALL     	R69 2 2 ; R69 := R69(R70)
	506	[3230]	SETTABLE 	R61 K48 R69 ; R61["name"] := R69
	507	[3233]	GETGLOBAL	R69 K81 ; R69 := 0x7f5022cf
	508	[3233]	GETTABLE 	R69 R69 K82 ; R69 := R69[0xa5c556b9]
	509	[3233]	MOVE     	R70 R67 ; R70 := R67
	510	[3233]	LOADK    	R71 K83 ; R71 := "Hub"
	511	[3233]	CALL     	R69 3 2 ; R69 := R69(R70,R71)
	512	[3233]	TEST     	R69 0 ; if not R69 then PC := 516
	513	[3233]	JMP      	516 ; PC := 516
	514	[3234]	SETTABLE 	R61 K84 K85 ; R61["nodeType"] := 3.000000
	515	[3234]	JMP      	517 ; PC := 517
	516	[3236]	SETTABLE 	R61 K84 K44 ; R61["nodeType"] := 0.000000
	517	[3239]	SETTABLE 	R61 K53 R68 ; R61["region"] := R68
	518	[3242]	GETTABLE 	R69 R61 K53 ; R69 := R61["region"]
	519	[3242]	GETTABLE 	R69 R50 R69 ; R69 := R50[R69]
	520	[3242]	EQ       	0 R69 K0 ; if R69 ~= nil then PC := 524
	521	[3242]	JMP      	524 ; PC := 524
	522	[3243]	GETTABLE 	R69 R61 K53 ; R69 := R61["region"]
	523	[3243]	SETTABLE 	R50 R69 K44 ; R50[R69] := 0.000000
	524	[3246]	GETTABLE 	R69 R56 K24 ; R69 := R56["Type"]
	525	[3246]	SELF     	R69 R69 K104 ; R70 := R69; R69 := R69[0x95e6d5cc]
	526	[3246]	CALL     	R69 2 2 ; R69 := R69(R70)
	527	[3247]	GETTABLE 	R70 R69 K105 ; R70 := R69["x"]
	528	[3247]	EQ       	1 R70 K44 ; if R70 == 0.000000 then PC := 538
	529	[3247]	JMP      	538 ; PC := 538
	530	[3247]	GETTABLE 	R70 R69 K106 ; R70 := R69["y"]
	531	[3247]	EQ       	1 R70 K44 ; if R70 == 0.000000 then PC := 538
	532	[3247]	JMP      	538 ; PC := 538
	533	[3247]	GETTABLE 	R70 R69 K107 ; R70 := R69["z"]
	534	[3247]	EQ       	1 R70 K44 ; if R70 == 0.000000 then PC := 538
	535	[3247]	JMP      	538 ; PC := 538
	536	[3248]	SETTABLE 	R61 K108 R69 ; R61["pos"] := R69
	537	[3248]	JMP      	554 ; PC := 554
	538	[3251]	GETGLOBAL	R70 K93 ; R70 := mRegions
	539	[3251]	GETTABLE 	R71 R61 K53 ; R71 := R61["region"]
	540	[3251]	GETTABLE 	R70 R70 R71 ; R70 := R70[R71]
	541	[3251]	GETTABLE 	R70 R70 K108 ; R70 := R70["pos"]
	542	[3251]	GETGLOBAL	R71 K109 ; R71 := 0xa421af95
	543	[3251]	GETTABLE 	R72 R61 K53 ; R72 := R61["region"]
	544	[3251]	GETTABLE 	R72 R50 R72 ; R72 := R50[R72]
	545	[3251]	MUL      	R72 R72 K110 ; R72 := R72 * 0.020000
	546	[3251]	GETTABLE 	R73 R61 K53 ; R73 := R61["region"]
	547	[3251]	GETTABLE 	R73 R50 R73 ; R73 := R50[R73]
	548	[3251]	UNM      	R73 R73 ; R73 := ^ R73
	549	[3251]	MUL      	R73 R73 K110 ; R73 := R73 * 0.020000
	550	[3251]	LOADK    	R74 := 0.000000
	551	[3251]	CALL     	R71 4 2 ; R71 := R71(R72,R73,R74)
	552	[3251]	ADD      	R70 R70 R71 ; R70 := R70 + R71
	553	[3251]	SETTABLE 	R61 K108 R70 ; R61["pos"] := R70
	554	[3254]	GETTABLE 	R70 R56 K111 ; R70 := R56["DecoOverride"]
	555	[3254]	EQ       	1 R70 K0 ; if R70 == nil then PC := 561
	556	[3254]	JMP      	561 ; PC := 561
	557	[3255]	GETTABLE 	R70 R56 K111 ; R70 := R56["DecoOverride"]
	558	[3255]	SETTABLE 	R61 K3 R70 ; R61["deco"] := R70
	559	[3256]	GETTABLE 	R70 R56 K113 ; R70 := R56["DecoScale"]
	560	[3256]	SETTABLE 	R61 K112 R70 ; R61["scale"] := R70
	561	[3259]	GETTABLE 	R70 R56 K114 ; R70 := R56["NodeOffset"]
	562	[3259]	EQ       	1 R70 K0 ; if R70 == nil then PC := 568
	563	[3259]	JMP      	568 ; PC := 568
	564	[3260]	GETTABLE 	R70 R61 K108 ; R70 := R61["pos"]
	565	[3260]	GETTABLE 	R71 R56 K114 ; R71 := R56["NodeOffset"]
	566	[3260]	ADD      	R70 R70 R71 ; R70 := R70 + R71
	567	[3260]	SETTABLE 	R61 K108 R70 ; R61["pos"] := R70
	568	[3263]	GETTABLE 	R70 R61 K53 ; R70 := R61["region"]
	569	[3263]	GETTABLE 	R71 R61 K53 ; R71 := R61["region"]
	570	[3263]	GETTABLE 	R71 R50 R71 ; R71 := R50[R71]
	571	[3263]	ADD      	R71 R71 K18 ; R71 := R71 + 1.000000
	572	[3263]	SETTABLE 	R50 R70 R71 ; R50[R70] := R71
	573	[3265]	GETUPVAL 	R70 U8 ; R70 := U8
	574	[3265]	MOVE     	R71 R61 ; R71 := R61
	575	[3265]	NEWTABLE 	R72 0 1 ; R72 := {}
	576	[3265]	GETGLOBAL	R73 K116 ; R73 := mNewWarMode
	577	[3265]	SETTABLE 	R72 K115 R73 ; R72["newWarMode"] := R73
	578	[3265]	CALL     	R70 3 1 ; R70(R71,R72)
	579	[3265]	JMP      	593 ; PC := 593
	580	[3267]	GETTABLE 	R70 R56 K24 ; R70 := R56["Type"]
	581	[3267]	SELF     	R70 R70 K104 ; R71 := R70; R70 := R70[0x95e6d5cc]
	582	[3267]	CALL     	R70 2 2 ; R70 := R70(R71)
	583	[3268]	GETTABLE 	R71 R70 K105 ; R71 := R70["x"]
	584	[3268]	EQ       	1 R71 K44 ; if R71 == 0.000000 then PC := 593
	585	[3268]	JMP      	593 ; PC := 593
	586	[3268]	GETTABLE 	R71 R70 K106 ; R71 := R70["y"]
	587	[3268]	EQ       	1 R71 K44 ; if R71 == 0.000000 then PC := 593
	588	[3268]	JMP      	593 ; PC := 593
	589	[3268]	GETTABLE 	R71 R70 K107 ; R71 := R70["z"]
	590	[3268]	EQ       	1 R71 K44 ; if R71 == 0.000000 then PC := 593
	591	[3268]	JMP      	593 ; PC := 593
	592	[3269]	SETTABLE 	R61 K108 R70 ; R61["pos"] := R70
	593	[3273]	GETGLOBAL	R71 K4 ; R71 := 0x7b998233
	594	[3273]	MOVE     	R72 R60 ; R72 := R60
	595	[3273]	CALL     	R71 2 2 ; R71 := R71(R72)
	596	[3273]	TEST     	R71 1 ; if R71 then PC := 690
	597	[3273]	JMP      	690 ; PC := 690
	598	[3274]	TEST     	R59 1 ; if R59 then PC := 613
	599	[3274]	JMP      	613 ; PC := 613
	600	[3275]	GETTABLE 	R71 R61 K48 ; R71 := R61["name"]
	601	[3275]	SETTABLE 	R60 K48 R71 ; R60["name"] := R71
	602	[3276]	GETGLOBAL	R71 K81 ; R71 := 0x7f5022cf
	603	[3276]	GETTABLE 	R71 R71 K118 ; R71 := R71[0x3f3e4d12]
	604	[3276]	GETGLOBAL	R72 K71 ; R72 := 0xae91e43b
	605	[3276]	SELF     	R72 R72 K72 ; R73 := R72; R72 := R72[0x42b04007]
	606	[3276]	GETTABLE 	R74 R61 K64 ; R74 := R61["locTag"]
	607	[3276]	SELF     	R74 R74 K119 ; R75 := R74; R74 := R74[0x6d604ba7]
	608	[3276]	CALL     	R74 2 2 ; R74 := R74(R75)
	609	[3276]	OP_LOADBOOL	R75 0 0 ; R75 := false
	610	[3276]	CALL     	R72 4 0 ; R72,... := R72(R73,R74,R75)
	611	[3276]	CALL     	R71 0 2 ; R71 := R71(R72,...)
	612	[3276]	SETTABLE 	R60 K117 R71 ; R60["locName"] := R71
	613	[3279]	GETGLOBAL	R71 K4 ; R71 := 0x7b998233
	614	[3279]	GETTABLE 	R72 R56 K23 ; R72 := R56["KeyChain"]
	615	[3279]	CALL     	R71 2 2 ; R71 := R71(R72)
	616	[3279]	TEST     	R71 1 ; if R71 then PC := 620
	617	[3279]	JMP      	620 ; PC := 620
	618	[3280]	SETTABLE 	R60 K120 K10 ; R60["completed"] := false
	619	[3280]	JMP      	670 ; PC := 670
	620	[3281]	GETTABLE 	R71 R60 K120 ; R71 := R60["completed"]
	621	[3281]	TEST     	R71 1 ; if R71 then PC := 670
	622	[3281]	JMP      	670 ; PC := 670
	623	[3282]	GETTABLE 	R71 R56 K24 ; R71 := R56["Type"]
	624	[3282]	SELF     	R71 R71 K39 ; R72 := R71; R71 := R71[0x92608d86]
	625	[3282]	CALL     	R71 2 2 ; R71 := R71(R72)
	626	[3283]	SELF     	R72 R58 K121 ; R73 := R58; R72 := R58[0x56c01834]
	627	[3283]	CALL     	R72 2 2 ; R72 := R72(R73)
	628	[3283]	TEST     	R72 0 ; if not R72 then PC := 670
	629	[3283]	JMP      	670 ; PC := 670
	630	[3284]	EQ       	0 R51 K0 ; if R51 ~= nil then PC := 652
	631	[3284]	JMP      	652 ; PC := 652
	632	[3285]	GETGLOBAL	R72 K67 ; R72 := 0x76ea806b
	633	[3285]	SELF     	R72 R72 K68 ; R73 := R72; R72 := R72[0x3f3ae64c]
	634	[3285]	LOADK    	R74 := 0.000000
	635	[3285]	CALL     	R72 3 2 ; R72 := R72(R73,R74)
	636	[3285]	SELF     	R72 R72 K69 ; R73 := R72; R72 := R72[0x80563238]
	637	[3285]	CALL     	R72 2 2 ; R72 := R72(R73)
	638	[3285]	SELF     	R72 R72 K122 ; R73 := R72; R72 := R72[0xb407484d]
	639	[3285]	CALL     	R72 2 2 ; R72 := R72(R73)
	640	[3286]	NEWTABLE 	R73 0 0 ; R73 := {}
	641	[3286]	MOVE     	R51 R73 ; R51 := R73
	642	[3288]	GETGLOBAL	R73 K1 ; R73 := 0xcfc01047
	643	[3288]	MOVE     	R74 R72 ; R74 := R72
	644	[3288]	CALL     	R73 2 4 ; R73,R74,R75 := R73(R74)
	645	[3288]	JMP      	650 ; PC := 650
	646	[3289]	GETGLOBAL	R78 K29 ; R78 := 0x64fb1586
	647	[3289]	GETTABLE 	R79 R77 K123 ; R79 := R77["mTag"]
	648	[3289]	CALL     	R78 2 2 ; R78 := R78(R79)
	649	[3289]	SETTABLE 	R51 R78 R77 ; R51[R78] := R77
	650	[3288]	TFORLOOP 	R73 2 ; R76,R77 := R73(R74,R75); if R76 ~= nil then begin PC = 646; R75 := R76 end
	651	[3289]	JMP      	646 ; PC := 646
	652	[3293]	GETGLOBAL	R78 K29 ; R78 := 0x64fb1586
	653	[3293]	MOVE     	R79 R71 ; R79 := R71
	654	[3293]	CALL     	R78 2 2 ; R78 := R78(R79)
	655	[3293]	GETTABLE 	R78 R51 R78 ; R78 := R51[R78]
	656	[3294]	EQ       	1 R78 K0 ; if R78 == nil then PC := 670
	657	[3294]	JMP      	670 ; PC := 670
	658	[3295]	GETTABLE 	R79 R78 K124 ; R79 := R78["mCompletes"]
	659	[3295]	LT       	1 K44 R79 ; if 0.000000 < R79 then PC := 662
	660	[3295]	JMP      	662 ; PC := 662
	661	[3295]	OP_LOADBOOL	R79 0 1 ; R79 := false; PC := 662
	662	[3295]	OP_LOADBOOL	R79 1 0 ; R79 := true
	663	[3295]	SETTABLE 	R60 K120 R79 ; R60["completed"] := R79
	664	[3296]	GETTABLE 	R79 R60 K59 ; R79 := R60["radialSector"]
	665	[3296]	GETTABLE 	R80 R78 K124 ; R80 := R78["mCompletes"]
	666	[3296]	SETTABLE 	R79 K125 R80 ; R79["missionsCompleted"] := R80
	667	[3297]	GETTABLE 	R79 R60 K59 ; R79 := R60["radialSector"]
	668	[3297]	GETTABLE 	R80 R78 K127 ; R80 := R78["mTier"]
	669	[3297]	SETTABLE 	R79 K126 R80 ; R79["difficultyCompleted"] := R80
	670	[3301]	SETTABLE 	R60 K128 K10 ; R60["locked"] := false
	671	[3302]	SETTABLE 	R60 K129 K87 ; R60["visibleLabel"] := true
	672	[3303]	SETTABLE 	R60 K130 K10 ; R60["isEmpty"] := false
	673	[3305]	TEST     	R59 0 ; if not R59 then PC := 676
	674	[3305]	JMP      	676 ; PC := 676
	675	[3306]	SETTABLE 	R60 K131 R66 ; R60["displayMissionOverride"] := R66
	676	[3308]	GETTABLE 	R79 R56 K33 ; R79 := R56["Difficulty"]
	677	[3308]	EQ       	1 R79 K0 ; if R79 == nil then PC := 690
	678	[3308]	JMP      	690 ; PC := 690
	679	[3309]	GETTABLE 	R79 R60 K59 ; R79 := R60["radialSector"]
	680	[3309]	GETTABLE 	R79 R79 K49 ; R79 := R79["mission"]
	681	[3309]	GETTABLE 	R80 R56 K33 ; R80 := R56["Difficulty"]
	682	[3309]	SETTABLE 	R79 K90 R80 ; R79["difficulty"] := R80
	683	[3310]	GETUPVAL 	R79 U0 ; R79 := U0
	684	[3310]	GETTABLE 	R80 R60 K132 ; R80 := R60["id"]
	685	[3310]	GETTABLE 	R79 R79 R80 ; R79 := R79[R80]
	686	[3310]	GETTABLE 	R79 R79 K59 ; R79 := R79["radialSector"]
	687	[3310]	GETTABLE 	R79 R79 K49 ; R79 := R79["mission"]
	688	[3310]	GETTABLE 	R80 R56 K33 ; R80 := R56["Difficulty"]
	689	[3310]	SETTABLE 	R79 K90 R80 ; R79["difficulty"] := R80
	690	[3152]	FORLOOP  	R52 295 ; R52 += R54; if R52 <= R53 then begin PC := 295; R55 := R52 end
	691	[3316]	GETGLOBAL	R79 K8 ; R79 := mRailJack
	692	[3316]	GETTABLE 	R79 R79 K63 ; R79 := R79["Active"]
	693	[3316]	TEST     	R79 1 ; if R79 then PC := 863
	694	[3316]	JMP      	863 ; PC := 863
	695	[3317]	GETGLOBAL	R79 K67 ; R79 := 0x76ea806b
	696	[3317]	SELF     	R79 R79 K68 ; R80 := R79; R79 := R79[0x3f3ae64c]
	697	[3317]	LOADK    	R81 := 0.000000
	698	[3317]	CALL     	R79 3 2 ; R79 := R79(R80,R81)
	699	[3317]	SELF     	R79 R79 K69 ; R80 := R79; R79 := R79[0x80563238]
	700	[3317]	CALL     	R79 2 2 ; R79 := R79(R80)
	701	[3317]	SELF     	R79 R79 K133 ; R80 := R79; R79 := R79[0x69727e0b]
	702	[3317]	CALL     	R79 2 2 ; R79 := R79(R80)
	703	[3317]	GETTABLE 	R79 R79 K134 ; R79 := R79["mFeaturedGuilds"]
	704	[3318]	LOADK    	R80 := 1.000000
	705	[3318]	LEN      	R81 R79 ; R81 := # R79
	706	[3318]	LOADK    	R82 := 1.000000
	707	[3318]	FORPREP  	R80 774 ; R80 -= R82; PC := 774
	708	[3320]	GETGLOBAL	R84 K21 ; R84 := 0x6c97a788
	709	[3320]	GETTABLE 	R84 R84 K60 ; R84 := R84[0xa67ba89f]
	710	[3320]	CALL     	R84 1 2 ; R84 := R84()
	711	[3321]	GETUPVAL 	R85 U10 ; R85 := U10
	712	[3321]	GETTABLE 	R85 R85 K135 ; R85 := R85[0x06d055f9]
	713	[3321]	GETUPVAL 	R86 U10 ; R86 := U10
	714	[3321]	GETTABLE 	R86 R86 K136 ; R86 := R86[0x23a862e6]
	715	[3321]	CALL     	R86 1 2 ; R86 := R86()
	716	[3321]	GETGLOBAL	R87 K65 ; R87 := 0x0469f296
	717	[3321]	LOADK    	R88 K137 ; R88 := "/Lotus/Language/Clan/Clan_DOJO"
	718	[3321]	CALL     	R87 2 2 ; R87 := R87(R88)
	719	[3321]	GETGLOBAL	R88 K65 ; R88 := 0x0469f296
	720	[3321]	GETTABLE 	R89 R79 R83 ; R89 := R79[R83]
	721	[3321]	GETTABLE 	R89 R89 K138 ; R89 := R89["mName"]
	722	[3321]	CALL     	R88 2 0 ; R88,... := R88(R89)
	723	[3321]	CALL     	R85 0 2 ; R85 := R85(R86,...)
	724	[3321]	SETTABLE 	R84 K64 R85 ; R84["locTag"] := R85
	725	[3322]	SETTABLE 	R84 K84 K85 ; R84["nodeType"] := 3.000000
	726	[3323]	SETTABLE 	R84 K86 K87 ; R84["unlocked"] := true
	727	[3324]	SETTABLE 	R84 K55 K88 ; R84["difficultyUnlocked"] := 255.000000
	728	[3325]	GETGLOBAL	R85 K65 ; R85 := 0x0469f296
	729	[3325]	LOADK    	R86 K139 ; R86 := "FeaturedDojoTier"
	730	[3325]	MOVE     	R87 R83 ; R87 := R83
	731	[3325]	CONCAT   	R86 R86 R87 ; R86 := R86 .. R87
	732	[3325]	CALL     	R85 2 2 ; R85 := R85(R86)
	733	[3325]	SETTABLE 	R84 K48 R85 ; R84["name"] := R85
	734	[3326]	GETGLOBAL	R85 K93 ; R85 := mRegions
	735	[3326]	GETTABLE 	R85 R85 K140 ; R85 := R85[14.000000]
	736	[3326]	GETTABLE 	R85 R85 K108 ; R85 := R85["pos"]
	737	[3326]	GETGLOBAL	R86 K141 ; R86 := 0x492c7f2a
	738	[3326]	GETGLOBAL	R87 K109 ; R87 := 0xa421af95
	739	[3326]	LOADK    	R88 := 0.000000
	740	[3326]	LOADK    	R89 K142 ; R89 := -0.160000
	741	[3326]	LOADK    	R90 := 0.000000
	742	[3326]	CALL     	R87 4 2 ; R87 := R87(R88,R89,R90)
	743	[3326]	GETGLOBAL	R88 K143 ; R88 := 0x00046924
	744	[3326]	LOADK    	R89 := 0.000000
	745	[3326]	LOADK    	R90 := 0.000000
	746	[3326]	LEN      	R91 R79 ; R91 := # R79
	747	[3326]	SUB      	R91 R91 K18 ; R91 := R91 - 1.000000
	748	[3326]	DIV      	R91 R91 K144 ; R91 := R91 / 2.000000
	749	[3326]	SUB      	R91 R91 R83 ; R91 := R91 - R83
	750	[3326]	ADD      	R91 R91 K18 ; R91 := R91 + 1.000000
	751	[3326]	MUL      	R91 K145 R91 ; R91 := -30.000000 * R91
	752	[3326]	CALL     	R88 4 0 ; R88,... := R88(R89,R90,R91)
	753	[3326]	CALL     	R86 0 2 ; R86 := R86(R87,...)
	754	[3326]	ADD      	R85 R85 R86 ; R85 := R85 + R86
	755	[3326]	SETTABLE 	R84 K108 R85 ; R84["pos"] := R85
	756	[3327]	GETUPVAL 	R85 U8 ; R85 := U8
	757	[3327]	MOVE     	R86 R84 ; R86 := R84
	758	[3327]	NEWTABLE 	R87 0 5 ; R87 := {}
	759	[3327]	GETTABLE 	R88 R79 R83 ; R88 := R79[R83]
	760	[3327]	GETTABLE 	R88 R88 K147 ; R88 := R88["mId"]
	761	[3327]	GETTABLE 	R88 R88 K147 ; R88 := R88["mId"]
	762	[3327]	SETTABLE 	R87 K146 R88 ; R87["guildId"] := R88
	763	[3327]	GETTABLE 	R88 R79 R83 ; R88 := R79[R83]
	764	[3327]	GETTABLE 	R88 R88 K127 ; R88 := R88["mTier"]
	765	[3327]	SETTABLE 	R87 K148 R88 ; R87["clanTier"] := R88
	766	[3327]	SETTABLE 	R87 K149 K150 ; R87["overrideIconSize"] := 120.000000
	767	[3327]	SETTABLE 	R87 K151 K87 ; R87["scaleIconWithCamera"] := true
	768	[3327]	LT       	1 K153 R83 ; if 5.000000 < R83 then PC := 771
	769	[3327]	JMP      	771 ; PC := 771
	770	[3327]	OP_LOADBOOL	R88 0 1 ; R88 := false; PC := 771
	771	[3327]	OP_LOADBOOL	R88 1 0 ; R88 := true
	772	[3327]	SETTABLE 	R87 K152 R88 ; R87["isTennocon"] := R88
	773	[3327]	CALL     	R85 3 1 ; R85(R86,R87)
	774	[3318]	FORLOOP  	R80 708 ; R80 += R82; if R80 <= R81 then begin PC := 708; R83 := R80 end
	775	[3330]	GETUPVAL 	R85 U3 ; R85 := U3
	776	[3330]	GETTABLE 	R85 R85 K154 ; R85 := R85[0xc14d48af]
	777	[3330]	CALL     	R85 1 2 ; R85 := R85()
	778	[3330]	TEST     	R85 0 ; if not R85 then PC := 863
	779	[3330]	JMP      	863 ; PC := 863
	780	[3332]	GETUPVAL 	R85 U3 ; R85 := U3
	781	[3332]	GETTABLE 	R85 R85 K155 ; R85 := R85[0xf47b8ec3]
	782	[3332]	CALL     	R85 1 2 ; R85 := R85()
	783	[3333]	GETGLOBAL	R86 K21 ; R86 := 0x6c97a788
	784	[3333]	GETTABLE 	R86 R86 K60 ; R86 := R86[0xa67ba89f]
	785	[3333]	CALL     	R86 1 2 ; R86 := R86()
	786	[3334]	GETGLOBAL	R87 K65 ; R87 := 0x0469f296
	787	[3334]	GETUPVAL 	R88 U10 ; R88 := U10
	788	[3334]	GETTABLE 	R88 R88 K135 ; R88 := R88[0x06d055f9]
	789	[3334]	MOVE     	R89 R85 ; R89 := R85
	790	[3334]	LOADK    	R90 K156 ; R90 := "OrbiterBootNode"
	791	[3334]	LOADK    	R91 K157 ; R91 := "DrifterCampBootNode"
	792	[3334]	CALL     	R88 4 0 ; R88,... := R88(R89,R90,R91)
	793	[3334]	CALL     	R87 0 2 ; R87 := R87(R88,...)
	794	[3335]	GETUPVAL 	R88 U10 ; R88 := U10
	795	[3335]	GETTABLE 	R88 R88 K135 ; R88 := R88[0x06d055f9]
	796	[3335]	MOVE     	R89 R85 ; R89 := R85
	797	[3335]	GETGLOBAL	R90 K65 ; R90 := 0x0469f296
	798	[3335]	LOADK    	R91 K158 ; R91 := "/Lotus/Language/NewWar/NewWarP3M1b"
	799	[3335]	CALL     	R90 2 2 ; R90 := R90(R91)
	800	[3335]	GETGLOBAL	R91 K65 ; R91 := 0x0469f296
	801	[3335]	LOADK    	R92 K159 ; R92 := "/Lotus/Language/NewWar/NewWarP2DrifterCamp"
	802	[3335]	CALL     	R91 2 0 ; R91,... := R91(R92)
	803	[3335]	CALL     	R88 0 2 ; R88 := R88(R89,...)
	804	[3335]	SETTABLE 	R86 K64 R88 ; R86["locTag"] := R88
	805	[3336]	SETTABLE 	R86 K84 K44 ; R86["nodeType"] := 0.000000
	806	[3337]	SETTABLE 	R86 K86 K87 ; R86["unlocked"] := true
	807	[3338]	SETTABLE 	R86 K55 K88 ; R86["difficultyUnlocked"] := 255.000000
	808	[3339]	GETGLOBAL	R88 K65 ; R88 := 0x0469f296
	809	[3339]	LOADK    	R89 K160 ; R89 := "ToggleBootLevel"
	810	[3339]	CALL     	R88 2 2 ; R88 := R88(R89)
	811	[3339]	SETTABLE 	R86 K48 R88 ; R86["name"] := R88
	812	[3340]	GETGLOBAL	R88 K93 ; R88 := mRegions
	813	[3340]	GETTABLE 	R88 R88 K85 ; R88 := R88[3.000000]
	814	[3340]	GETTABLE 	R88 R88 K108 ; R88 := R88["pos"]
	815	[3340]	GETUPVAL 	R89 U10 ; R89 := U10
	816	[3340]	GETTABLE 	R89 R89 K135 ; R89 := R89[0x06d055f9]
	817	[3340]	MOVE     	R90 R85 ; R90 := R85
	818	[3340]	GETGLOBAL	R91 K109 ; R91 := 0xa421af95
	819	[3340]	LOADK    	R92 K161 ; R92 := -0.150000
	820	[3340]	LOADK    	R93 K162 ; R93 := 0.085000
	821	[3340]	LOADK    	R94 := 0.000000
	822	[3340]	CALL     	R91 4 2 ; R91 := R91(R92,R93,R94)
	823	[3340]	GETGLOBAL	R92 K109 ; R92 := 0xa421af95
	824	[3340]	LOADK    	R93 K163 ; R93 := -0.017500
	825	[3340]	LOADK    	R94 K164 ; R94 := 0.017500
	826	[3340]	LOADK    	R95 := 0.000000
	827	[3340]	CALL     	R92 4 0 ; R92,... := R92(R93,R94,R95)
	828	[3340]	CALL     	R89 0 2 ; R89 := R89(R90,...)
	829	[3340]	ADD      	R88 R88 R89 ; R88 := R88 + R89
	830	[3340]	SETTABLE 	R86 K108 R88 ; R86["pos"] := R88
	831	[3341]	GETTABLE 	R88 R86 K49 ; R88 := R86["mission"]
	832	[3341]	SETTABLE 	R88 K165 K166 ; R88["missionType"] := 20.000000
	833	[3342]	TEST     	R85 0 ; if not R85 then PC := 850
	834	[3342]	JMP      	850 ; PC := 850
	835	[3343]	GETGLOBAL	R88 K167 ; R88 := 0xe37d81b0
	836	[3343]	SETTABLE 	R86 K3 R88 ; R86["deco"] := R88
	837	[3344]	SETTABLE 	R86 K112 K168 ; R86["scale"] := 0.005000
	838	[3345]	GETGLOBAL	R88 K109 ; R88 := 0xa421af95
	839	[3345]	LOADK    	R89 K170 ; R89 := -0.005000
	840	[3345]	LOADK    	R90 K171 ; R90 := 0.007500
	841	[3345]	LOADK    	R91 := 0.000000
	842	[3345]	CALL     	R88 4 2 ; R88 := R88(R89,R90,R91)
	843	[3345]	SETTABLE 	R86 K169 R88 ; R86["decoOffset"] := R88
	844	[3346]	GETGLOBAL	R88 K143 ; R88 := 0x00046924
	845	[3346]	LOADK    	R89 := -40.000000
	846	[3346]	LOADK    	R90 := 155.000000
	847	[3346]	LOADK    	R91 := 180.000000
	848	[3346]	CALL     	R88 4 2 ; R88 := R88(R89,R90,R91)
	849	[3346]	SETTABLE 	R86 K172 R88 ; R86["decoRotation"] := R88
	850	[3348]	GETUPVAL 	R88 U8 ; R88 := U8
	851	[3348]	MOVE     	R89 R86 ; R89 := R86
	852	[3348]	NEWTABLE 	R90 0 3 ; R90 := {}
	853	[3348]	GETUPVAL 	R91 U10 ; R91 := U10
	854	[3348]	GETTABLE 	R91 R91 K135 ; R91 := R91[0x06d055f9]
	855	[3348]	MOVE     	R92 R85 ; R92 := R85
	856	[3348]	LOADK    	R93 K174 ; R93 := "bootlevelorbiter"
	857	[3348]	LOADK    	R94 K175 ; R94 := "bootlevelcamp"
	858	[3348]	CALL     	R91 4 2 ; R91 := R91(R92,R93,R94)
	859	[3348]	SETTABLE 	R90 K173 R91 ; R90["iconTag"] := R91
	860	[3348]	SETTABLE 	R90 K176 K87 ; R90["IsHomeNode"] := true
	861	[3348]	SETTABLE 	R90 K177 R87 ; R90["NodeIntro"] := R87
	862	[3348]	CALL     	R88 3 1 ; R88(R89,R90)
	863	[3352]	GETGLOBAL	R88 K116 ; R88 := mNewWarMode
	864	[3352]	TEST     	R88 1 ; if R88 then PC := 871
	865	[3352]	JMP      	871 ; PC := 871
	866	[3352]	GETUPVAL 	R88 U3 ; R88 := U3
	867	[3352]	GETTABLE 	R88 R88 K154 ; R88 := R88[0xc14d48af]
	868	[3352]	CALL     	R88 1 2 ; R88 := R88()
	869	[3352]	TEST     	R88 0 ; if not R88 then PC := 1206
	870	[3352]	JMP      	1206 ; PC := 1206
	871	[3353]	GETGLOBAL	R88 K143 ; R88 := 0x00046924
	872	[3353]	LOADK    	R89 := 180.000000
	873	[3353]	LOADK    	R90 := 0.000000
	874	[3353]	LOADK    	R91 := 0.000000
	875	[3353]	CALL     	R88 4 2 ; R88 := R88(R89,R90,R91)
	876	[3354]	GETGLOBAL	R89 K116 ; R89 := mNewWarMode
	877	[3354]	TEST     	R89 0 ; if not R89 then PC := 1065
	878	[3354]	JMP      	1065 ; PC := 1065
	879	[3356]	LOADK    	R89 := 1.000000
	880	[3356]	LOADK    	R90 := 12.000000
	881	[3356]	LOADK    	R91 := 1.000000
	882	[3356]	FORPREP  	R89 924 ; R89 -= R91; PC := 924
	883	[3357]	GETGLOBAL	R93 K4 ; R93 := 0x7b998233
	884	[3357]	GETGLOBAL	R94 K93 ; R94 := mRegions
	885	[3357]	GETTABLE 	R94 R94 R92 ; R94 := R94[R92]
	886	[3357]	GETTABLE 	R94 R94 K178 ; R94 := R94["instance"]
	887	[3357]	CALL     	R93 2 2 ; R93 := R93(R94)
	888	[3357]	TEST     	R93 1 ; if R93 then PC := 897
	889	[3357]	JMP      	897 ; PC := 897
	890	[3358]	GETGLOBAL	R93 K93 ; R93 := mRegions
	891	[3358]	GETTABLE 	R93 R93 R92 ; R93 := R93[R92]
	892	[3358]	GETTABLE 	R93 R93 K178 ; R93 := R93["instance"]
	893	[3358]	SELF     	R93 R93 K179 ; R94 := R93; R93 := R93[0x47901f07]
	894	[3358]	GETGLOBAL	R95 K180 ; R95 := 0x65af81ac
	895	[3358]	GETGLOBAL	R96 K181 ; R96 := EMPTY_SYMBOL
	896	[3358]	CALL     	R93 4 1 ; R93(R94,R95,R96)
	897	[3360]	EQ       	1 R92 K85 ; if R92 == 3.000000 then PC := 903
	898	[3360]	JMP      	903 ; PC := 903
	899	[3360]	EQ       	1 R92 K182 ; if R92 == 4.000000 then PC := 903
	900	[3360]	JMP      	903 ; PC := 903
	901	[3360]	EQ       	0 R92 K153 ; if R92 ~= 5.000000 then PC := 914
	902	[3360]	JMP      	914 ; PC := 914
	903	[3361]	GETUPVAL 	R93 U11 ; R93 := U11
	904	[3361]	GETGLOBAL	R94 K183 ; R94 := 0xf51ab0f9
	905	[3361]	LOADNIL  	R95 R96 ; R95 := R96 := nil
	906	[3361]	GETGLOBAL	R97 K93 ; R97 := mRegions
	907	[3361]	GETTABLE 	R97 R97 R92 ; R97 := R97[R92]
	908	[3361]	GETTABLE 	R97 R97 K112 ; R97 := R97["scale"]
	909	[3361]	GETGLOBAL	R98 K93 ; R98 := mRegions
	910	[3361]	GETTABLE 	R98 R98 R92 ; R98 := R98[R92]
	911	[3361]	GETTABLE 	R98 R98 K108 ; R98 := R98["pos"]
	912	[3361]	CALL     	R93 6 1 ; R93(R94,R95,R96,R97,R98)
	913	[3361]	JMP      	924 ; PC := 924
	914	[3363]	GETUPVAL 	R93 U11 ; R93 := U11
	915	[3363]	GETGLOBAL	R94 K184 ; R94 := 0x26e2dc2a
	916	[3363]	LOADNIL  	R95 R96 ; R95 := R96 := nil
	917	[3363]	GETGLOBAL	R97 K93 ; R97 := mRegions
	918	[3363]	GETTABLE 	R97 R97 R92 ; R97 := R97[R92]
	919	[3363]	GETTABLE 	R97 R97 K112 ; R97 := R97["scale"]
	920	[3363]	GETGLOBAL	R98 K93 ; R98 := mRegions
	921	[3363]	GETTABLE 	R98 R98 R92 ; R98 := R98[R92]
	922	[3363]	GETTABLE 	R98 R98 K108 ; R98 := R98["pos"]
	923	[3363]	CALL     	R93 6 1 ; R93(R94,R95,R96,R97,R98)
	924	[3356]	FORLOOP  	R89 883 ; R89 += R91; if R89 <= R90 then begin PC := 883; R92 := R89 end
	925	[3368]	GETUPVAL 	R93 U11 ; R93 := U11
	926	[3368]	GETGLOBAL	R94 K185 ; R94 := 0x6219c21e
	927	[3368]	GETGLOBAL	R95 K186 ; R95 := 0xcdad6709
	928	[3368]	GETTABLE 	R95 R95 K18 ; R95 := R95[1.000000]
	929	[3368]	MOVE     	R96 R88 ; R96 := R88
	930	[3368]	GETGLOBAL	R97 K187 ; R97 := 0x773217b7
	931	[3368]	GETTABLE 	R97 R97 K18 ; R97 := R97[1.000000]
	932	[3368]	TEST     	R97 1 ; if R97 then PC := 935
	933	[3368]	JMP      	935 ; PC := 935
	934	[3368]	LOADK    	R97 K188 ; R97 := 0.060000
	935	[3368]	GETGLOBAL	R98 K93 ; R98 := mRegions
	936	[3368]	GETTABLE 	R98 R98 K85 ; R98 := R98[3.000000]
	937	[3368]	GETTABLE 	R98 R98 K108 ; R98 := R98["pos"]
	938	[3368]	CALL     	R93 6 1 ; R93(R94,R95,R96,R97,R98)
	939	[3369]	GETUPVAL 	R93 U11 ; R93 := U11
	940	[3369]	GETGLOBAL	R94 K185 ; R94 := 0x6219c21e
	941	[3369]	GETGLOBAL	R95 K186 ; R95 := 0xcdad6709
	942	[3369]	GETTABLE 	R95 R95 K144 ; R95 := R95[2.000000]
	943	[3369]	MOVE     	R96 R88 ; R96 := R88
	944	[3369]	GETGLOBAL	R97 K187 ; R97 := 0x773217b7
	945	[3369]	GETTABLE 	R97 R97 K144 ; R97 := R97[2.000000]
	946	[3369]	TEST     	R97 1 ; if R97 then PC := 949
	947	[3369]	JMP      	949 ; PC := 949
	948	[3369]	LOADK    	R97 K188 ; R97 := 0.060000
	949	[3369]	GETGLOBAL	R98 K93 ; R98 := mRegions
	950	[3369]	GETTABLE 	R98 R98 K182 ; R98 := R98[4.000000]
	951	[3369]	GETTABLE 	R98 R98 K108 ; R98 := R98["pos"]
	952	[3369]	CALL     	R93 6 1 ; R93(R94,R95,R96,R97,R98)
	953	[3370]	GETUPVAL 	R93 U11 ; R93 := U11
	954	[3370]	GETGLOBAL	R94 K185 ; R94 := 0x6219c21e
	955	[3370]	GETGLOBAL	R95 K186 ; R95 := 0xcdad6709
	956	[3370]	GETTABLE 	R95 R95 K85 ; R95 := R95[3.000000]
	957	[3370]	MOVE     	R96 R88 ; R96 := R88
	958	[3370]	GETGLOBAL	R97 K187 ; R97 := 0x773217b7
	959	[3370]	GETTABLE 	R97 R97 K85 ; R97 := R97[3.000000]
	960	[3370]	TEST     	R97 1 ; if R97 then PC := 963
	961	[3370]	JMP      	963 ; PC := 963
	962	[3370]	LOADK    	R97 K189 ; R97 := 0.070000
	963	[3370]	GETGLOBAL	R98 K93 ; R98 := mRegions
	964	[3370]	GETTABLE 	R98 R98 K153 ; R98 := R98[5.000000]
	965	[3370]	GETTABLE 	R98 R98 K108 ; R98 := R98["pos"]
	966	[3370]	CALL     	R93 6 1 ; R93(R94,R95,R96,R97,R98)
	967	[3373]	LOADK    	R93 := 4.000000
	968	[3373]	GETGLOBAL	R94 K186 ; R94 := 0xcdad6709
	969	[3373]	LEN      	R94 R94 ; R94 := # R94
	970	[3373]	LOADK    	R95 := 1.000000
	971	[3373]	FORPREP  	R93 988 ; R93 -= R95; PC := 988
	972	[3374]	GETUPVAL 	R97 U11 ; R97 := U11
	973	[3374]	GETGLOBAL	R98 K185 ; R98 := 0x6219c21e
	974	[3374]	GETGLOBAL	R99 K186 ; R99 := 0xcdad6709
	975	[3374]	GETTABLE 	R99 R99 R96 ; R99 := R99[R96]
	976	[3374]	MOVE     	R100 R88 ; R100 := R88
	977	[3374]	GETGLOBAL	R101 K187 ; R101 := 0x773217b7
	978	[3374]	GETTABLE 	R101 R101 R96 ; R101 := R101[R96]
	979	[3374]	TEST     	R101 1 ; if R101 then PC := 987
	980	[3374]	JMP      	987 ; PC := 987
	981	[3374]	GETGLOBAL	R101 K190 ; R101 := 0x5bced4c4
	982	[3374]	GETTABLE 	R101 R101 K191 ; R101 := R101[0x3630e649]
	983	[3374]	LOADK    	R102 := 60.000000
	984	[3374]	LOADK    	R103 := 80.000000
	985	[3374]	CALL     	R101 3 2 ; R101 := R101(R102,R103)
	986	[3374]	DIV      	R101 R101 K192 ; R101 := R101 / 1000.000000
	987	[3374]	CALL     	R97 5 1 ; R97(R98,R99,R100,R101)
	988	[3373]	FORLOOP  	R93 972 ; R93 += R95; if R93 <= R94 then begin PC := 972; R96 := R93 end
	989	[3378]	LOADNIL  	R97 R98 ; R97 := R98 := nil
	990	[3380]	LOADK    	R99 := 0.000000
	991	[3381]	GETGLOBAL	R100 K65 ; R100 := 0x0469f296
	992	[3381]	LOADK    	R101 K193 ; R101 := "PlanetDeco"
	993	[3381]	CALL     	R100 2 2 ; R100 := R100(R101)
	994	[3382]	GETGLOBAL	R101 K6 ; R101 := 0x1211d00f
	995	[3382]	SELF     	R101 R101 K194 ; R102 := R101; R101 := R101[0xfb669000]
	996	[3382]	GETGLOBAL	R103 K185 ; R103 := 0x6219c21e
	997	[3382]	CALL     	R101 3 2 ; R101 := R101(R102,R103)
	998	[3383]	LOADK    	R102 := 1.000000
	999	[3383]	LEN      	R103 R101 ; R103 := # R101
	1000	[3383]	LOADK    	R104 := 1.000000
	1001	[3383]	FORPREP  	R102 1047 ; R102 -= R104; PC := 1047
	1002	[3384]	GETTABLE 	R106 R101 R105 ; R106 := R101[R105]
	1003	[3384]	SELF     	R106 R106 K195 ; R107 := R106; R106 := R106[0xd1586535]
	1004	[3384]	CALL     	R106 2 2 ; R106 := R106(R107)
	1005	[3384]	MOVE     	R98 R106 ; R98 := R106
	1006	[3385]	GETGLOBAL	R106 K6 ; R106 := 0x1211d00f
	1007	[3385]	SELF     	R106 R106 K196 ; R107 := R106; R106 := R106[0xc7b81e8d]
	1008	[3385]	MOVE     	R108 R100 ; R108 := R100
	1009	[3385]	MOVE     	R109 R98 ; R109 := R98
	1010	[3385]	CALL     	R106 4 2 ; R106 := R106(R107,R108,R109)
	1011	[3386]	GETGLOBAL	R107 K4 ; R107 := 0x7b998233
	1012	[3386]	MOVE     	R108 R106 ; R108 := R106
	1013	[3386]	CALL     	R107 2 2 ; R107 := R107(R108)
	1014	[3386]	TEST     	R107 1 ; if R107 then PC := 1047
	1015	[3386]	JMP      	1047 ; PC := 1047
	1016	[3387]	SELF     	R107 R106 K195 ; R108 := R106; R107 := R106[0xd1586535]
	1017	[3387]	CALL     	R107 2 2 ; R107 := R107(R108)
	1018	[3387]	MOVE     	R97 R107 ; R97 := R107
	1019	[3388]	GETGLOBAL	R107 K197 ; R107 := 0x03ea2485
	1020	[3388]	MOVE     	R108 R98 ; R108 := R98
	1021	[3388]	MOVE     	R109 R97 ; R109 := R97
	1022	[3388]	CALL     	R107 3 2 ; R107 := R107(R108,R109)
	1023	[3388]	LT       	0 R107 K198 ; if R107 >= 0.400000 then PC := 1047
	1024	[3388]	JMP      	1047 ; PC := 1047
	1025	[3389]	GETTABLE 	R107 R97 K105 ; R107 := R97["x"]
	1026	[3389]	GETTABLE 	R108 R98 K105 ; R108 := R98["x"]
	1027	[3389]	SUB      	R99 R107 R108 ; R99 := R107 - R108
	1028	[3390]	MUL      	R99 R99 K199 ; R99 := R99 * 15.000000
	1029	[3391]	GETUPVAL 	R107 U10 ; R107 := U10
	1030	[3391]	GETTABLE 	R107 R107 K135 ; R107 := R107[0x06d055f9]
	1031	[3391]	LT       	1 R99 K44 ; if R99 < 0.000000 then PC := 1034
	1032	[3391]	JMP      	1034 ; PC := 1034
	1033	[3391]	OP_LOADBOOL	R108 0 1 ; R108 := false; PC := 1034
	1034	[3391]	OP_LOADBOOL	R108 1 0 ; R108 := true
	1035	[3391]	LOADK    	R109 := 220.000000
	1036	[3391]	LOADK    	R110 := 140.000000
	1037	[3391]	CALL     	R107 4 2 ; R107 := R107(R108,R109,R110)
	1038	[3391]	ADD      	R99 R99 R107 ; R99 := R99 + R107
	1039	[3393]	GETTABLE 	R107 R101 R105 ; R107 := R101[R105]
	1040	[3393]	SELF     	R107 R107 K200 ; R108 := R107; R107 := R107[0x70b8836c]
	1041	[3393]	GETGLOBAL	R109 K143 ; R109 := 0x00046924
	1042	[3393]	MOVE     	R110 R99 ; R110 := R99
	1043	[3393]	LOADK    	R111 := 0.000000
	1044	[3393]	LOADK    	R112 := 0.000000
	1045	[3393]	CALL     	R109 4 0 ; R109,... := R109(R110,R111,R112)
	1046	[3393]	CALL     	R107 0 1 ; R107(R108,...)
	1047	[3383]	FORLOOP  	R102 1002 ; R102 += R104; if R102 <= R103 then begin PC := 1002; R105 := R102 end
	1048	[3399]	GETGLOBAL	R107 K6 ; R107 := 0x1211d00f
	1049	[3399]	SELF     	R107 R107 K201 ; R108 := R107; R107 := R107[0xc7fcada9]
	1050	[3399]	GETGLOBAL	R109 K65 ; R109 := 0x0469f296
	1051	[3399]	LOADK    	R110 K202 ; R110 := "NarmerEffect"
	1052	[3399]	CALL     	R109 2 0 ; R109,... := R109(R110)
	1053	[3399]	CALL     	R107 0 2 ; R107 := R107(R108,...)
	1054	[3400]	LOADK    	R108 := 1.000000
	1055	[3400]	LEN      	R109 R107 ; R109 := # R107
	1056	[3400]	LOADK    	R110 := 1.000000
	1057	[3400]	FORPREP  	R108 1063 ; R108 -= R110; PC := 1063
	1058	[3401]	GETTABLE 	R112 R107 R111 ; R112 := R107[R111]
	1059	[3401]	SELF     	R112 R112 K203 ; R113 := R112; R112 := R112[0x768274d6]
	1060	[3401]	OP_LOADBOOL	R114 1 0 ; R114 := true
	1061	[3401]	OP_LOADBOOL	R115 0 0 ; R115 := false
	1062	[3401]	CALL     	R112 4 1 ; R112(R113,R114,R115)
	1063	[3400]	FORLOOP  	R108 1058 ; R108 += R110; if R108 <= R109 then begin PC := 1058; R111 := R108 end
	1064	[3402]	JMP      	1091 ; PC := 1091
	1065	[3404]	LOADK    	R112 := 1.000000
	1066	[3404]	GETGLOBAL	R113 K204 ; R113 := 0xe4f7a183
	1067	[3404]	LEN      	R113 R113 ; R113 := # R113
	1068	[3404]	LOADK    	R114 := 1.000000
	1069	[3404]	FORPREP  	R112 1090 ; R112 -= R114; PC := 1090
	1070	[3405]	GETUPVAL 	R116 U11 ; R116 := U11
	1071	[3405]	GETGLOBAL	R117 K205 ; R117 := 0xd2808930
	1072	[3405]	GETGLOBAL	R118 K204 ; R118 := 0xe4f7a183
	1073	[3405]	GETTABLE 	R118 R118 R115 ; R118 := R118[R115]
	1074	[3405]	GETGLOBAL	R119 K206 ; R119 := 0xc71aefbb
	1075	[3405]	GETTABLE 	R119 R119 R115 ; R119 := R119[R115]
	1076	[3405]	TEST     	R119 1 ; if R119 then PC := 1079
	1077	[3405]	JMP      	1079 ; PC := 1079
	1078	[3405]	MOVE     	R119 R88 ; R119 := R88
	1079	[3405]	GETGLOBAL	R120 K207 ; R120 := 0xfbbd2cad
	1080	[3405]	GETTABLE 	R120 R120 R115 ; R120 := R120[R115]
	1081	[3405]	TEST     	R120 1 ; if R120 then PC := 1089
	1082	[3405]	JMP      	1089 ; PC := 1089
	1083	[3405]	GETGLOBAL	R120 K190 ; R120 := 0x5bced4c4
	1084	[3405]	GETTABLE 	R120 R120 K191 ; R120 := R120[0x3630e649]
	1085	[3405]	LOADK    	R121 := 60.000000
	1086	[3405]	LOADK    	R122 := 80.000000
	1087	[3405]	CALL     	R120 3 2 ; R120 := R120(R121,R122)
	1088	[3405]	DIV      	R120 R120 K192 ; R120 := R120 / 1000.000000
	1089	[3405]	CALL     	R116 5 1 ; R116(R117,R118,R119,R120)
	1090	[3404]	FORLOOP  	R112 1070 ; R112 += R114; if R112 <= R113 then begin PC := 1070; R115 := R112 end
	1091	[3409]	GETGLOBAL	R116 K93 ; R116 := mRegions
	1092	[3409]	GETUPVAL 	R117 U3 ; R117 := U3
	1093	[3409]	GETTABLE 	R117 R117 K54 ; R117 := R117["REGION_ID_ZARIMAN"]
	1094	[3409]	GETTABLE 	R116 R116 R117 ; R116 := R116[R117]
	1095	[3409]	EQ       	1 R116 K0 ; if R116 == nil then PC := 1206
	1096	[3409]	JMP      	1206 ; PC := 1206
	1097	[3409]	GETUPVAL 	R116 U9 ; R116 := U9
	1098	[3409]	GETUPVAL 	R117 U3 ; R117 := U3
	1099	[3409]	GETTABLE 	R117 R117 K54 ; R117 := R117["REGION_ID_ZARIMAN"]
	1100	[3409]	GETTABLE 	R116 R116 R117 ; R116 := R116[R117]
	1101	[3409]	EQ       	1 R116 K87 ; if R116 == true then PC := 1206
	1102	[3409]	JMP      	1206 ; PC := 1206
	1103	[3410]	GETGLOBAL	R116 K93 ; R116 := mRegions
	1104	[3410]	GETUPVAL 	R117 U3 ; R117 := U3
	1105	[3410]	GETTABLE 	R117 R117 K54 ; R117 := R117["REGION_ID_ZARIMAN"]
	1106	[3410]	GETTABLE 	R116 R116 R117 ; R116 := R116[R117]
	1107	[3410]	GETTABLE 	R116 R116 K108 ; R116 := R116["pos"]
	1108	[3411]	GETGLOBAL	R117 K109 ; R117 := 0xa421af95
	1109	[3411]	LOADK    	R118 K208 ; R118 := -0.450000
	1110	[3411]	LOADK    	R119 := 0.000000
	1111	[3411]	LOADK    	R120 := 1.500000
	1112	[3411]	CALL     	R117 4 2 ; R117 := R117(R118,R119,R120)
	1113	[3412]	GETGLOBAL	R118 K109 ; R118 := 0xa421af95
	1114	[3412]	LOADK    	R119 K209 ; R119 := 0.600000
	1115	[3412]	LOADK    	R120 K210 ; R120 := -0.090000
	1116	[3412]	LOADK    	R121 K211 ; R121 := -0.010000
	1117	[3412]	CALL     	R118 4 2 ; R118 := R118(R119,R120,R121)
	1118	[3413]	ADD      	R119 R117 R118 ; R119 := R117 + R118
	1119	[3413]	DIV      	R119 R119 K144 ; R119 := R119 / 2.000000
	1120	[3414]	SUB      	R120 R117 R119 ; R120 := R117 - R119
	1121	[3415]	ADD      	R119 R119 R116 ; R119 := R119 + R116
	1122	[3416]	LOADK    	R121 := 45.000000
	1123	[3417]	MOVE     	R122 R121 ; R122 := R121
	1124	[3418]	GETGLOBAL	R123 K212 ; R123 := 0x20b7f774
	1125	[3418]	GETGLOBAL	R124 K213 ; R124 := ZERO_VECTOR
	1126	[3418]	MOVE     	R125 R120 ; R125 := R120
	1127	[3418]	CALL     	R123 3 2 ; R123 := R123(R124,R125)
	1128	[3419]	GETGLOBAL	R124 K214 ; R124 := 0x20e8ca12
	1129	[3419]	MOVE     	R125 R123 ; R125 := R123
	1130	[3419]	GETGLOBAL	R126 K143 ; R126 := 0x00046924
	1131	[3419]	ADD      	R127 R122 K215 ; R127 := R122 + 180.000000
	1132	[3419]	LOADK    	R128 := 0.000000
	1133	[3419]	LOADK    	R129 := 0.000000
	1134	[3419]	CALL     	R126 4 0 ; R126,... := R126(R127,R128,R129)
	1135	[3419]	CALL     	R124 0 2 ; R124 := R124(R125,...)
	1136	[3420]	GETGLOBAL	R125 K214 ; R125 := 0x20e8ca12
	1137	[3420]	MOVE     	R126 R123 ; R126 := R123
	1138	[3420]	GETGLOBAL	R127 K143 ; R127 := 0x00046924
	1139	[3420]	MOVE     	R128 R122 ; R128 := R122
	1140	[3420]	LOADK    	R129 := 0.000000
	1141	[3420]	LOADK    	R130 := 0.000000
	1142	[3420]	CALL     	R127 4 0 ; R127,... := R127(R128,R129,R130)
	1143	[3420]	CALL     	R125 0 2 ; R125 := R125(R126,...)
	1144	[3421]	GETGLOBAL	R126 K109 ; R126 := 0xa421af95
	1145	[3421]	LOADK    	R127 := 0.000000
	1146	[3421]	LOADK    	R128 := 0.000000
	1147	[3421]	GETGLOBAL	R129 K216 ; R129 := 0xae2294fa
	1148	[3421]	MOVE     	R130 R120 ; R130 := R120
	1149	[3421]	CALL     	R129 2 0 ; R129,... := R129(R130)
	1150	[3421]	CALL     	R126 0 2 ; R126 := R126(R127,...)
	1151	[3421]	MOVE     	R120 R126 ; R120 := R126
	1152	[3422]	GETUPVAL 	R126 U11 ; R126 := U11
	1153	[3422]	GETGLOBAL	R127 K217 ; R127 := 0x04fca33f
	1154	[3422]	MOVE     	R128 R116 ; R128 := R116
	1155	[3422]	GETGLOBAL	R129 K218 ; R129 := ZERO_ROTATION
	1156	[3422]	LOADK    	R130 K188 ; R130 := 0.060000
	1157	[3422]	CALL     	R126 5 2 ; R126 := R126(R127,R128,R129,R130)
	1158	[3423]	LOADNIL  	R127 R127 ; R127 := nil
	1159	[3424]	GETGLOBAL	R128 K15 ; R128 := 0x25d99d89
	1160	[3424]	SELF     	R128 R128 K219 ; R129 := R128; R128 := R128[0x25a6e75e]
	1161	[3424]	CALL     	R128 2 2 ; R128 := R128(R129)
	1162	[3424]	SELF     	R128 R128 K14 ; R129 := R128; R128 := R128[0x8e7c3b5e]
	1163	[3424]	CALL     	R128 2 2 ; R128 := R128(R129)
	1164	[3424]	GETUPVAL 	R129 U4 ; R129 := U4
	1165	[3424]	GETTABLE 	R129 R129 K46 ; R129 := R129["zarimanIntroQuest"]
	1166	[3424]	EQ       	1 R128 R129 ; if R128 == R129 then PC := 1169
	1167	[3424]	JMP      	1169 ; PC := 1169
	1168	[3424]	OP_LOADBOOL	R128 0 1 ; R128 := false; PC := 1169
	1169	[3424]	OP_LOADBOOL	R128 1 0 ; R128 := true
	1170	[3425]	TEST     	R128 1 ; if R128 then PC := 1179
	1171	[3425]	JMP      	1179 ; PC := 1179
	1172	[3427]	GETUPVAL 	R129 U11 ; R129 := U11
	1173	[3427]	GETGLOBAL	R130 K220 ; R130 := 0xa8104d35
	1174	[3427]	MOVE     	R131 R116 ; R131 := R116
	1175	[3427]	GETGLOBAL	R132 K218 ; R132 := ZERO_ROTATION
	1176	[3427]	LOADK    	R133 K221 ; R133 := 0.100000
	1177	[3427]	CALL     	R129 5 2 ; R129 := R129(R130,R131,R132,R133)
	1178	[3427]	MOVE     	R127 R129 ; R127 := R129
	1179	[3429]	LOADK    	R129 := 0.000000
	1180	[3443]	CLOSURE  	R130 0 ; R130 := closure(Function #1)
	1181	[3443]	MOVE     	R0 R122 ; R0 := R122
	1182	[3443]	MOVE     	R0 R121 ; R0 := R121
	1183	[3443]	MOVE     	R0 R124 ; R0 := R124
	1184	[3443]	MOVE     	R0 R123 ; R0 := R123
	1185	[3443]	MOVE     	R0 R125 ; R0 := R125
	1186	[3443]	MOVE     	R0 R119 ; R0 := R119
	1187	[3443]	MOVE     	R0 R120 ; R0 := R120
	1188	[3443]	MOVE     	R0 R126 ; R0 := R126
	1189	[3443]	MOVE     	R0 R127 ; R0 := R127
	1190	[3445]	TEST     	R128 1 ; if R128 then PC := 1198
	1191	[3445]	JMP      	1198 ; PC := 1198
	1192	[3454]	CLOSURE  	R131 1 ; R131 := closure(Function #2)
	1193	[3454]	MOVE     	R0 R129 ; R0 := R129
	1194	[3454]	MOVE     	R0 R121 ; R0 := R121
	1195	[3454]	MOVE     	R0 R122 ; R0 := R122
	1196	[3454]	MOVE     	R0 R130 ; R0 := R130
	1197	[3454]	SETUPVAL 	R131 U12 ; U12 := R131
	1198	[3457]	GETGLOBAL	R131 K11 ; R131 := _T
	1199	[3457]	CLOSURE  	R132 2 ; R132 := closure(Function #3)
	1200	[3457]	MOVE     	R0 R129 ; R0 := R129
	1201	[3457]	SETTABLE 	R131 K222 R132 ; R131["ClearActiveFaction"] := R132
	1202	[3459]	MOVE     	R131 R130 ; R131 := R130
	1203	[3459]	LOADK    	R132 := 0.000000
	1204	[3459]	CALL     	R131 2 1 ; R131(R132)
	1205	[3459]	CLOSE    	R116 ; SAVE R116,...
	1206	[3463]	GETUPVAL 	R116 U13 ; R116 := U13
	1207	[3463]	CALL     	R116 1 1 ; R116()
	1208	[3466]	RETURN   	R0 1 ; return 

function #66 <?:3468,3476> (22 instructions, 88 bytes at 0000021191941D40)
1 param, 14 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[3469]	GETTABLE 	R1 R0 K0 ; R1 := R0["NodeA"]
	2	[3469]	GETTABLE 	R1 R1 K1 ; R1 := R1["position"]
	3	[3470]	GETTABLE 	R2 R0 K0 ; R2 := R0["NodeA"]
	4	[3470]	GETTABLE 	R2 R2 K1 ; R2 := R2["position"]
	5	[3471]	GETTABLE 	R3 R0 K2 ; R3 := R0["controlPointA"]
	6	[3471]	GETTABLE 	R3 R3 K1 ; R3 := R3["position"]
	7	[3472]	GETTABLE 	R4 R0 K3 ; R4 := R0["controlPointB"]
	8	[3472]	GETTABLE 	R4 R4 K1 ; R4 := R4["position"]
	9	[3473]	GETTABLE 	R5 R0 K4 ; R5 := R0["NodeB"]
	10	[3473]	GETTABLE 	R5 R5 K1 ; R5 := R5["position"]
	11	[3474]	GETTABLE 	R6 R0 K4 ; R6 := R0["NodeB"]
	12	[3474]	GETTABLE 	R6 R6 K1 ; R6 := R6["position"]
	13	[3475]	NEWTABLE 	R7 6 0 ; R7 := {}
	14	[3475]	MOVE     	R8 R1 ; R8 := R1
	15	[3475]	MOVE     	R9 R2 ; R9 := R2
	16	[3475]	MOVE     	R10 R3 ; R10 := R3
	17	[3475]	MOVE     	R11 R4 ; R11 := R4
	18	[3475]	MOVE     	R12 R5 ; R12 := R5
	19	[3475]	MOVE     	R13 R6 ; R13 := R6
	20	[3475]	SETLIST  	R7 6 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 6
	21	[3475]	RETURN   	R7 2 ; return R7 
	22	[3476]	RETURN   	R0 1 ; return 

function #67 <?:3478,3488> (29 instructions, 116 bytes at 00000211928B3180)
5 params, 13 slots, 0 upvalues, 0 locals, 10 constants, 0 functions
	1	[3479]	GETGLOBAL	R5 K0 ; R5 := 0xa421af95
	2	[3479]	CALL     	R5 1 2 ; R5 := R5()
	3	[3480]	GETGLOBAL	R6 K1 ; R6 := 0x83ddcc65
	4	[3480]	MOVE     	R7 R5 ; R7 := R5
	5	[3480]	GETTABLE 	R8 R2 K2 ; R8 := R2["position"]
	6	[3480]	GETTABLE 	R9 R1 K2 ; R9 := R1["position"]
	7	[3480]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	8	[3481]	GETGLOBAL	R6 K3 ; R6 := 0x808dc004
	9	[3481]	MOVE     	R7 R5 ; R7 := R5
	10	[3481]	GETTABLE 	R8 R1 K2 ; R8 := R1["position"]
	11	[3481]	MUL      	R9 R5 R0 ; R9 := R5 * R0
	12	[3481]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	13	[3482]	GETGLOBAL	R6 K4 ; R6 := 0x20b7f774
	14	[3482]	MOVE     	R7 R3 ; R7 := R3
	15	[3482]	MOVE     	R8 R5 ; R8 := R5
	16	[3482]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	17	[3483]	SETTABLE 	R5 K5 K6 ; R5["x"] := 0.000000
	18	[3484]	SETTABLE 	R5 K7 K6 ; R5["y"] := 0.000000
	19	[3485]	SETTABLE 	R5 K8 R4 ; R5["z"] := R4
	20	[3486]	GETGLOBAL	R7 K3 ; R7 := 0x808dc004
	21	[3486]	MOVE     	R8 R5 ; R8 := R5
	22	[3486]	MOVE     	R9 R3 ; R9 := R3
	23	[3486]	GETGLOBAL	R10 K9 ; R10 := 0x492c7f2a
	24	[3486]	MOVE     	R11 R5 ; R11 := R5
	25	[3486]	MOVE     	R12 R6 ; R12 := R6
	26	[3486]	CALL     	R10 3 0 ; R10,... := R10(R11,R12)
	27	[3486]	CALL     	R7 0 1 ; R7(R8,...)
	28	[3487]	RETURN   	R5 2 ; return R5 
	29	[3488]	RETURN   	R0 1 ; return 

function #68 <?:3490,3525> (66 instructions, 264 bytes at 0000021122439B80)
2 params, 17 slots, 1 upvalue, 0 locals, 10 constants, 0 functions
	1	[3491]	GETGLOBAL	R2 K0 ; R2 := 0xce225efa
	2	[3491]	LOADK    	R3 := 0.000000
	3	[3491]	CALL     	R2 2 1 ; R2(R3)
	4	[3492]	LOADNIL  	R2 R2 ; R2 := nil
	5	[3493]	GETTABLE 	R3 R0 K1 ; R3 := R0["position"]
	6	[3493]	GETTABLE 	R4 R1 K1 ; R4 := R1["position"]
	7	[3493]	SUB      	R3 R3 R4 ; R3 := R3 - R4
	8	[3494]	GETGLOBAL	R4 K2 ; R4 := 0xc2892f65
	9	[3494]	MOVE     	R5 R3 ; R5 := R3
	10	[3494]	CALL     	R4 2 1 ; R4(R5)
	11	[3495]	LOADK    	R4 := 10.000000
	12	[3497]	LOADNIL  	R5 R5 ; R5 := nil
	13	[3498]	LOADK    	R6 := 1.000000
	14	[3498]	GETTABLE 	R7 R0 K3 ; R7 := R0["RelatedNodes"]
	15	[3498]	LEN      	R7 R7 ; R7 := # R7
	16	[3498]	LOADK    	R8 := 1.000000
	17	[3498]	FORPREP  	R6 44 ; R6 -= R8; PC := 44
	18	[3499]	GETTABLE 	R10 R0 K3 ; R10 := R0["RelatedNodes"]
	19	[3499]	GETTABLE 	R10 R10 R9 ; R10 := R10[R9]
	20	[3500]	GETTABLE 	R11 R1 K4 ; R11 := R1["name"]
	21	[3500]	EQ       	1 R10 R11 ; if R10 == R11 then PC := 44
	22	[3500]	JMP      	44 ; PC := 44
	23	[3501]	GETUPVAL 	R11 U0 ; R11 := U0
	24	[3501]	GETGLOBAL	R12 K5 ; R12 := 0x64fb1586
	25	[3501]	MOVE     	R13 R10 ; R13 := R10
	26	[3501]	CALL     	R12 2 2 ; R12 := R12(R13)
	27	[3501]	GETTABLE 	R11 R11 R12 ; R11 := R11[R12]
	28	[3503]	EQ       	1 R11 K6 ; if R11 == nil then PC := 44
	29	[3503]	JMP      	44 ; PC := 44
	30	[3504]	GETTABLE 	R12 R0 K1 ; R12 := R0["position"]
	31	[3504]	GETTABLE 	R13 R11 K1 ; R13 := R11["position"]
	32	[3504]	SUB      	R5 R12 R13 ; R5 := R12 - R13
	33	[3505]	GETGLOBAL	R12 K2 ; R12 := 0xc2892f65
	34	[3505]	MOVE     	R13 R5 ; R13 := R5
	35	[3505]	CALL     	R12 2 1 ; R12(R13)
	36	[3506]	GETGLOBAL	R12 K7 ; R12 := 0x4fd57545
	37	[3506]	MOVE     	R13 R3 ; R13 := R3
	38	[3506]	MOVE     	R14 R5 ; R14 := R5
	39	[3506]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	40	[3507]	LT       	0 R12 R4 ; if R12 >= R4 then PC := 44
	41	[3507]	JMP      	44 ; PC := 44
	42	[3508]	MOVE     	R4 R12 ; R4 := R12
	43	[3509]	MOVE     	R2 R11 ; R2 := R11
	44	[3498]	FORLOOP  	R6 18 ; R6 += R8; if R6 <= R7 then begin PC := 18; R9 := R6 end
	45	[3514]	EQ       	1 R2 K6 ; if R2 == nil then PC := 64
	46	[3514]	JMP      	64 ; PC := 64
	47	[3515]	GETTABLE 	R13 R2 K1 ; R13 := R2["position"]
	48	[3516]	GETTABLE 	R14 R0 K8 ; R14 := R0["isShortcut"]
	49	[3516]	TEST     	R14 0 ; if not R14 then PC := 62
	50	[3516]	JMP      	62 ; PC := 62
	51	[3516]	GETTABLE 	R14 R2 K8 ; R14 := R2["isShortcut"]
	52	[3516]	TEST     	R14 0 ; if not R14 then PC := 62
	53	[3516]	JMP      	62 ; PC := 62
	54	[3517]	GETTABLE 	R14 R0 K1 ; R14 := R0["position"]
	55	[3517]	SUB      	R14 R13 R14 ; R14 := R13 - R14
	56	[3518]	GETGLOBAL	R15 K2 ; R15 := 0xc2892f65
	57	[3518]	MOVE     	R16 R14 ; R16 := R14
	58	[3518]	CALL     	R15 2 1 ; R15(R16)
	59	[3519]	GETTABLE 	R15 R0 K1 ; R15 := R0["position"]
	60	[3519]	MUL      	R16 R14 K9 ; R16 := R14 * 0.050000
	61	[3519]	ADD      	R13 R15 R16 ; R13 := R15 + R16
	62	[3521]	RETURN   	R13 2 ; return R13 
	63	[3521]	JMP      	66 ; PC := 66
	64	[3523]	LOADNIL  	R15 R15 ; R15 := nil
	65	[3523]	RETURN   	R15 2 ; return R15 
	66	[3525]	RETURN   	R0 1 ; return 

function #69 <?:3527,3559> (105 instructions, 420 bytes at 000002111C334650)
1 param, 15 slots, 3 upvalues, 0 locals, 22 constants, 0 functions
	1	[3528]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[3528]	GETTABLE 	R2 R0 K1 ; R2 := R0["Instance"]
	3	[3528]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[3528]	TEST     	R1 1 ; if R1 then PC := 105
	5	[3528]	JMP      	105 ; PC := 105
	6	[3529]	GETGLOBAL	R1 K2 ; R1 := 0xa421af95
	7	[3529]	CALL     	R1 1 2 ; R1 := R1()
	8	[3530]	GETTABLE 	R2 R0 K4 ; R2 := R0["NodeA"]
	9	[3530]	GETTABLE 	R2 R2 K5 ; R2 := R2["isSurfaceNode"]
	10	[3530]	TEST     	R2 0 ; if not R2 then PC := 14
	11	[3530]	JMP      	14 ; PC := 14
	12	[3530]	GETTABLE 	R2 R0 K6 ; R2 := R0["NodeB"]
	13	[3530]	GETTABLE 	R2 R2 K5 ; R2 := R2["isSurfaceNode"]
	14	[3530]	SETTABLE 	R0 K3 R2 ; R0["IsSurfaceConnection"] := R2
	15	[3531]	GETGLOBAL	R2 K7 ; R2 := mRegionInstances
	16	[3531]	GETTABLE 	R3 R0 K4 ; R3 := R0["NodeA"]
	17	[3531]	GETTABLE 	R3 R3 K8 ; R3 := R3["radialSector"]
	18	[3531]	GETTABLE 	R3 R3 K9 ; R3 := R3["region"]
	19	[3531]	ADD      	R3 R3 K10 ; R3 := R3 + 1.000000
	20	[3531]	GETTABLE 	R2 R2 R3 ; R2 := R2[R3]
	21	[3532]	GETGLOBAL	R3 K11 ; R3 := mRegionRadius
	22	[3532]	GETTABLE 	R4 R0 K4 ; R4 := R0["NodeA"]
	23	[3532]	GETTABLE 	R4 R4 K8 ; R4 := R4["radialSector"]
	24	[3532]	GETTABLE 	R4 R4 K9 ; R4 := R4["region"]
	25	[3532]	ADD      	R4 R4 K10 ; R4 := R4 + 1.000000
	26	[3532]	GETTABLE 	R3 R3 R4 ; R3 := R3[R4]
	27	[3533]	SELF     	R4 R2 K12 ; R5 := R2; R4 := R2[0x4078bbf8]
	28	[3533]	MOVE     	R6 R1 ; R6 := R1
	29	[3533]	CALL     	R4 3 1 ; R4(R5,R6)
	30	[3535]	GETTABLE 	R4 R0 K3 ; R4 := R0["IsSurfaceConnection"]
	31	[3535]	TEST     	R4 0 ; if not R4 then PC := 45
	32	[3535]	JMP      	45 ; PC := 45
	33	[3536]	GETTABLE 	R4 R0 K1 ; R4 := R0["Instance"]
	34	[3536]	SELF     	R4 R4 K13 ; R5 := R4; R4 := R4[0x574c6468]
	35	[3536]	GETGLOBAL	R6 K14 ; R6 := mRegions
	36	[3536]	GETTABLE 	R7 R0 K4 ; R7 := R0["NodeA"]
	37	[3536]	GETTABLE 	R7 R7 K8 ; R7 := R7["radialSector"]
	38	[3536]	GETTABLE 	R7 R7 K9 ; R7 := R7["region"]
	39	[3536]	ADD      	R7 R7 K10 ; R7 := R7 + 1.000000
	40	[3536]	GETTABLE 	R6 R6 R7 ; R6 := R6[R7]
	41	[3536]	GETTABLE 	R6 R6 K15 ; R6 := R6["pos"]
	42	[3536]	MOVE     	R7 R3 ; R7 := R3
	43	[3536]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	44	[3536]	JMP      	50 ; PC := 50
	45	[3538]	GETTABLE 	R4 R0 K1 ; R4 := R0["Instance"]
	46	[3538]	SELF     	R4 R4 K13 ; R5 := R4; R4 := R4[0x574c6468]
	47	[3538]	GETGLOBAL	R6 K16 ; R6 := ZERO_VECTOR
	48	[3538]	LOADK    	R7 := 0.000000
	49	[3538]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	50	[3541]	GETTABLE 	R4 R0 K4 ; R4 := R0["NodeA"]
	51	[3541]	GETTABLE 	R4 R4 K17 ; R4 := R4["isShortcut"]
	52	[3541]	TEST     	R4 0 ; if not R4 then PC := 66
	53	[3541]	JMP      	66 ; PC := 66
	54	[3541]	GETTABLE 	R4 R0 K6 ; R4 := R0["NodeB"]
	55	[3541]	GETTABLE 	R4 R4 K17 ; R4 := R4["isShortcut"]
	56	[3541]	TEST     	R4 0 ; if not R4 then PC := 66
	57	[3541]	JMP      	66 ; PC := 66
	58	[3542]	GETUPVAL 	R4 U0 ; R4 := U0
	59	[3542]	MOVE     	R5 R0 ; R5 := R0
	60	[3542]	CALL     	R4 2 2 ; R4 := R4(R5)
	61	[3543]	GETTABLE 	R5 R0 K1 ; R5 := R0["Instance"]
	62	[3543]	SELF     	R5 R5 K18 ; R6 := R5; R5 := R5[0x7ceafc23]
	63	[3543]	MOVE     	R7 R4 ; R7 := R4
	64	[3543]	CALL     	R5 3 1 ; R5(R6,R7)
	65	[3543]	JMP      	105 ; PC := 105
	66	[3545]	GETUPVAL 	R5 U1 ; R5 := U1
	67	[3545]	GETTABLE 	R6 R0 K4 ; R6 := R0["NodeA"]
	68	[3545]	GETTABLE 	R7 R0 K6 ; R7 := R0["NodeB"]
	69	[3545]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	70	[3546]	EQ       	0 R5 K19 ; if R5 ~= nil then PC := 80
	71	[3546]	JMP      	80 ; PC := 80
	72	[3547]	GETUPVAL 	R6 U2 ; R6 := U2
	73	[3547]	LOADK    	R7 := -1.000000
	74	[3547]	GETTABLE 	R8 R0 K4 ; R8 := R0["NodeA"]
	75	[3547]	GETTABLE 	R9 R0 K6 ; R9 := R0["NodeB"]
	76	[3547]	MOVE     	R10 R1 ; R10 := R1
	77	[3547]	MOVE     	R11 R3 ; R11 := R3
	78	[3547]	CALL     	R6 6 2 ; R6 := R6(R7,R8,R9,R10,R11)
	79	[3547]	MOVE     	R5 R6 ; R5 := R6
	80	[3549]	GETTABLE 	R6 R0 K4 ; R6 := R0["NodeA"]
	81	[3549]	GETTABLE 	R6 R6 K20 ; R6 := R6["position"]
	82	[3550]	GETTABLE 	R7 R0 K6 ; R7 := R0["NodeB"]
	83	[3550]	GETTABLE 	R7 R7 K20 ; R7 := R7["position"]
	84	[3551]	GETUPVAL 	R8 U1 ; R8 := U1
	85	[3551]	GETTABLE 	R9 R0 K6 ; R9 := R0["NodeB"]
	86	[3551]	GETTABLE 	R10 R0 K4 ; R10 := R0["NodeA"]
	87	[3551]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	88	[3552]	EQ       	0 R8 K19 ; if R8 ~= nil then PC := 98
	89	[3552]	JMP      	98 ; PC := 98
	90	[3553]	GETUPVAL 	R9 U2 ; R9 := U2
	91	[3553]	LOADK    	R10 := 2.000000
	92	[3553]	GETTABLE 	R11 R0 K4 ; R11 := R0["NodeA"]
	93	[3553]	GETTABLE 	R12 R0 K6 ; R12 := R0["NodeB"]
	94	[3553]	MOVE     	R13 R1 ; R13 := R1
	95	[3553]	MOVE     	R14 R3 ; R14 := R3
	96	[3553]	CALL     	R9 6 2 ; R9 := R9(R10,R11,R12,R13,R14)
	97	[3553]	MOVE     	R8 R9 ; R8 := R9
	98	[3556]	GETTABLE 	R9 R0 K1 ; R9 := R0["Instance"]
	99	[3556]	SELF     	R9 R9 K21 ; R10 := R9; R9 := R9[0x4269a0d7]
	100	[3556]	MOVE     	R11 R5 ; R11 := R5
	101	[3556]	MOVE     	R12 R6 ; R12 := R6
	102	[3556]	MOVE     	R13 R7 ; R13 := R7
	103	[3556]	MOVE     	R14 R8 ; R14 := R8
	104	[3556]	CALL     	R9 6 1 ; R9(R10,R11,R12,R13,R14)
	105	[3559]	RETURN   	R0 1 ; return 

function #70 <?:3561,3632> (215 instructions, 860 bytes at 000002111F8B90B0)
0 params, 20 slots, 3 upvalues, 0 locals, 43 constants, 0 functions
	1	[3562]	GETGLOBAL	R0 K1 ; R0 := mRadialSolarMap
	2	[3562]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xb4b2b7b0]
	3	[3562]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[3562]	SETGLOBALHASH	R0 K0 ; mMapEdges := R0
	5	[3564]	GETGLOBAL	R0 K3 ; R0 := 0xc8802016
	6	[3564]	GETGLOBAL	R1 K4 ; R1 := mFlatEdges
	7	[3564]	CALL     	R0 2 4 ; R0,R1,R2 := R0(R1)
	8	[3564]	JMP      	13 ; PC := 13
	9	[3565]	GETGLOBAL	R5 K5 ; R5 := 0x1211d00f
	10	[3565]	SELF     	R5 R5 K6 ; R6 := R5; R5 := R5[0x59c96e77]
	11	[3565]	GETTABLE 	R7 R4 K7 ; R7 := R4["mInstance"]
	12	[3565]	CALL     	R5 3 1 ; R5(R6,R7)
	13	[3564]	TFORLOOP 	R0 2 ; R3,R4 := R0(R1,R2); if R3 ~= nil then begin PC = 9; R2 := R3 end
	14	[3565]	JMP      	9 ; PC := 9
	15	[3568]	NEWTABLE 	R5 0 0 ; R5 := {}
	16	[3568]	SETGLOBALHASH	R5 K4 ; mFlatEdges := R5
	17	[3569]	NEWTABLE 	R5 0 0 ; R5 := {}
	18	[3569]	SETGLOBALHASH	R5 K8 ; mMovingEdgeIndices := R5
	19	[3571]	LOADK    	R5 := 0.000000
	20	[3572]	LOADK    	R6 := 0.000000
	21	[3573]	LOADNIL  	R7 R8 ; R7 := R8 := nil
	22	[3576]	LOADK    	R9 := 1.000000
	23	[3576]	GETGLOBAL	R10 K0 ; R10 := mMapEdges
	24	[3576]	LEN      	R10 R10 ; R10 := # R10
	25	[3576]	LOADK    	R11 := 1.000000
	26	[3576]	FORPREP  	R9 214 ; R9 -= R11; PC := 214
	27	[3577]	GETUPVAL 	R13 U0 ; R13 := U0
	28	[3577]	GETGLOBAL	R14 K9 ; R14 := 0x64fb1586
	29	[3577]	GETGLOBAL	R15 K0 ; R15 := mMapEdges
	30	[3577]	GETTABLE 	R15 R15 R12 ; R15 := R15[R12]
	31	[3577]	GETTABLE 	R15 R15 K10 ; R15 := R15["locationA"]
	32	[3577]	CALL     	R14 2 2 ; R14 := R14(R15)
	33	[3577]	GETTABLE 	R7 R13 R14 ; R7 := R13[R14]
	34	[3578]	GETUPVAL 	R13 U0 ; R13 := U0
	35	[3578]	GETGLOBAL	R14 K9 ; R14 := 0x64fb1586
	36	[3578]	GETGLOBAL	R15 K0 ; R15 := mMapEdges
	37	[3578]	GETTABLE 	R15 R15 R12 ; R15 := R15[R12]
	38	[3578]	GETTABLE 	R15 R15 K11 ; R15 := R15["locationB"]
	39	[3578]	CALL     	R14 2 2 ; R14 := R14(R15)
	40	[3578]	GETTABLE 	R8 R13 R14 ; R8 := R13[R14]
	41	[3580]	GETGLOBAL	R13 K12 ; R13 := 0x7b998233
	42	[3580]	MOVE     	R14 R7 ; R14 := R7
	43	[3580]	CALL     	R13 2 2 ; R13 := R13(R14)
	44	[3580]	TEST     	R13 1 ; if R13 then PC := 65
	45	[3580]	JMP      	65 ; PC := 65
	46	[3580]	GETGLOBAL	R13 K12 ; R13 := 0x7b998233
	47	[3580]	MOVE     	R14 R8 ; R14 := R8
	48	[3580]	CALL     	R13 2 2 ; R13 := R13(R14)
	49	[3580]	TEST     	R13 1 ; if R13 then PC := 65
	50	[3580]	JMP      	65 ; PC := 65
	51	[3580]	GETTABLE 	R13 R7 K13 ; R13 := R7["destroyed"]
	52	[3580]	TEST     	R13 1 ; if R13 then PC := 65
	53	[3580]	JMP      	65 ; PC := 65
	54	[3580]	GETTABLE 	R13 R8 K13 ; R13 := R8["destroyed"]
	55	[3580]	TEST     	R13 1 ; if R13 then PC := 65
	56	[3580]	JMP      	65 ; PC := 65
	57	[3580]	GETTABLE 	R13 R7 K14 ; R13 := R7["locationEnabled"]
	58	[3580]	EQ       	1 R13 K15 ; if R13 == false then PC := 64
	59	[3580]	JMP      	64 ; PC := 64
	60	[3580]	GETTABLE 	R13 R8 K14 ; R13 := R8["locationEnabled"]
	61	[3580]	EQ       	1 R13 K15 ; if R13 == false then PC := 64
	62	[3580]	JMP      	64 ; PC := 64
	63	[3580]	OP_LOADBOOL	R13 0 1 ; R13 := false; PC := 64
	64	[3580]	OP_LOADBOOL	R13 1 0 ; R13 := true
	65	[3589]	TEST     	R13 1 ; if R13 then PC := 196
	66	[3589]	JMP      	196 ; PC := 196
	67	[3590]	ADD      	R5 R5 K16 ; R5 := R5 + 1.000000
	68	[3592]	GETUPVAL 	R14 U1 ; R14 := U1
	69	[3592]	GETTABLE 	R14 R14 K17 ; R14 := R14["Sectors"]
	70	[3592]	GETGLOBAL	R15 K9 ; R15 := 0x64fb1586
	71	[3592]	GETTABLE 	R16 R7 K18 ; R16 := R7["name"]
	72	[3592]	CALL     	R15 2 2 ; R15 := R15(R16)
	73	[3592]	GETTABLE 	R14 R14 R15 ; R14 := R14[R15]
	74	[3592]	EQ       	0 R14 K19 ; if R14 ~= nil then PC := 84
	75	[3592]	JMP      	84 ; PC := 84
	76	[3592]	GETUPVAL 	R14 U1 ; R14 := U1
	77	[3592]	GETTABLE 	R14 R14 K17 ; R14 := R14["Sectors"]
	78	[3592]	GETGLOBAL	R15 K9 ; R15 := 0x64fb1586
	79	[3592]	GETTABLE 	R16 R8 K18 ; R16 := R8["name"]
	80	[3592]	CALL     	R15 2 2 ; R15 := R15(R16)
	81	[3592]	GETTABLE 	R14 R14 R15 ; R14 := R14[R15]
	82	[3592]	EQ       	1 R14 K19 ; if R14 == nil then PC := 87
	83	[3592]	JMP      	87 ; PC := 87
	84	[3593]	ADD      	R6 R6 K16 ; R6 := R6 + 1.000000
	85	[3594]	GETGLOBAL	R14 K8 ; R14 := mMovingEdgeIndices
	86	[3594]	SETTABLE 	R14 R6 R5 ; R14[R6] := R5
	87	[3597]	GETGLOBAL	R14 K4 ; R14 := mFlatEdges
	88	[3597]	NEWTABLE 	R15 0 4 ; R15 := {}
	89	[3598]	SETTABLE 	R15 K20 R7 ; R15["NodeA"] := R7
	90	[3599]	SETTABLE 	R15 K21 R8 ; R15["NodeB"] := R8
	91	[3600]	GETTABLE 	R16 R7 K23 ; R16 := R7["isShortcut"]
	92	[3600]	TEST     	R16 0 ; if not R16 then PC := 95
	93	[3600]	JMP      	95 ; PC := 95
	94	[3600]	GETTABLE 	R16 R8 K23 ; R16 := R8["isShortcut"]
	95	[3600]	SETTABLE 	R15 K22 R16 ; R15["IsShortcut"] := R16
	96	[3601]	GETTABLE 	R16 R7 K25 ; R16 := R7["isJunction"]
	97	[3601]	TEST     	R16 0 ; if not R16 then PC := 102
	98	[3601]	JMP      	102 ; PC := 102
	99	[3601]	GETTABLE 	R16 R8 K23 ; R16 := R8["isShortcut"]
	100	[3601]	TEST     	R16 1 ; if R16 then PC := 106
	101	[3601]	JMP      	106 ; PC := 106
	102	[3601]	GETTABLE 	R16 R7 K23 ; R16 := R7["isShortcut"]
	103	[3601]	TEST     	R16 0 ; if not R16 then PC := 106
	104	[3601]	JMP      	106 ; PC := 106
	105	[3601]	GETTABLE 	R16 R8 K25 ; R16 := R8["isJunction"]
	106	[3601]	SETTABLE 	R15 K24 R16 ; R15["IsJunction"] := R16
	107	[3602]	SETTABLE 	R14 R5 R15 ; R14[R5] := R15
	108	[3604]	GETTABLE 	R14 R7 K26 ; R14 := R7["RelatedNodes"]
	109	[3604]	EQ       	0 R14 K19 ; if R14 ~= nil then PC := 113
	110	[3604]	JMP      	113 ; PC := 113
	111	[3605]	NEWTABLE 	R14 0 0 ; R14 := {}
	112	[3605]	SETTABLE 	R7 K26 R14 ; R7["RelatedNodes"] := R14
	113	[3608]	GETTABLE 	R14 R8 K26 ; R14 := R8["RelatedNodes"]
	114	[3608]	EQ       	0 R14 K19 ; if R14 ~= nil then PC := 118
	115	[3608]	JMP      	118 ; PC := 118
	116	[3609]	NEWTABLE 	R14 0 0 ; R14 := {}
	117	[3609]	SETTABLE 	R8 K26 R14 ; R8["RelatedNodes"] := R14
	118	[3612]	GETGLOBAL	R14 K27 ; R14 := 0x33bdd652
	119	[3612]	GETTABLE 	R14 R14 K28 ; R14 := R14[0x23d5322f]
	120	[3612]	GETTABLE 	R15 R7 K26 ; R15 := R7["RelatedNodes"]
	121	[3612]	GETGLOBAL	R16 K29 ; R16 := 0x0469f296
	122	[3612]	GETTABLE 	R17 R8 K18 ; R17 := R8["name"]
	123	[3612]	CALL     	R16 2 0 ; R16,... := R16(R17)
	124	[3612]	CALL     	R14 0 1 ; R14(R15,...)
	125	[3613]	GETGLOBAL	R14 K27 ; R14 := 0x33bdd652
	126	[3613]	GETTABLE 	R14 R14 K28 ; R14 := R14[0x23d5322f]
	127	[3613]	GETTABLE 	R15 R8 K26 ; R15 := R8["RelatedNodes"]
	128	[3613]	GETGLOBAL	R16 K29 ; R16 := 0x0469f296
	129	[3613]	GETTABLE 	R17 R7 K18 ; R17 := R7["name"]
	130	[3613]	CALL     	R16 2 0 ; R16,... := R16(R17)
	131	[3613]	CALL     	R14 0 1 ; R14(R15,...)
	132	[3616]	GETGLOBAL	R14 K4 ; R14 := mFlatEdges
	133	[3616]	GETTABLE 	R14 R14 R5 ; R14 := R14[R5]
	134	[3616]	GETTABLE 	R14 R14 K22 ; R14 := R14["IsShortcut"]
	135	[3616]	TEST     	R14 0 ; if not R14 then PC := 214
	136	[3616]	JMP      	214 ; PC := 214
	137	[3617]	GETTABLE 	R14 R8 K31 ; R14 := R8["radialSector"]
	138	[3617]	GETTABLE 	R14 R14 K32 ; R14 := R14["region"]
	139	[3617]	SETTABLE 	R7 K30 R14 ; R7["targetRegion"] := R14
	140	[3618]	GETTABLE 	R14 R7 K31 ; R14 := R7["radialSector"]
	141	[3618]	GETTABLE 	R14 R14 K32 ; R14 := R14["region"]
	142	[3618]	SETTABLE 	R8 K30 R14 ; R8["targetRegion"] := R14
	143	[3619]	GETGLOBAL	R14 K4 ; R14 := mFlatEdges
	144	[3619]	GETTABLE 	R14 R14 R5 ; R14 := R14[R5]
	145	[3619]	NEWTABLE 	R15 0 1 ; R15 := {}
	146	[3619]	GETGLOBAL	R16 K0 ; R16 := mMapEdges
	147	[3619]	GETTABLE 	R16 R16 R12 ; R16 := R16[R12]
	148	[3619]	GETTABLE 	R16 R16 K33 ; R16 := R16["controlPointA"]
	149	[3619]	SETTABLE 	R15 K34 R16 ; R15["position"] := R16
	150	[3619]	SETTABLE 	R14 K33 R15 ; R14["controlPointA"] := R15
	151	[3620]	GETGLOBAL	R14 K35 ; R14 := 0xae2294fa
	152	[3620]	GETGLOBAL	R15 K4 ; R15 := mFlatEdges
	153	[3620]	GETTABLE 	R15 R15 R5 ; R15 := R15[R5]
	154	[3620]	GETTABLE 	R15 R15 K33 ; R15 := R15["controlPointA"]
	155	[3620]	GETTABLE 	R15 R15 K34 ; R15 := R15["position"]
	156	[3620]	CALL     	R14 2 2 ; R14 := R14(R15)
	157	[3620]	LT       	0 R14 K36 ; if R14 >= 0.010000 then PC := 169
	158	[3620]	JMP      	169 ; PC := 169
	159	[3621]	GETGLOBAL	R14 K4 ; R14 := mFlatEdges
	160	[3621]	GETTABLE 	R14 R14 R5 ; R14 := R14[R5]
	161	[3621]	GETTABLE 	R14 R14 K33 ; R14 := R14["controlPointA"]
	162	[3621]	GETTABLE 	R15 R7 K34 ; R15 := R7["position"]
	163	[3621]	GETTABLE 	R16 R8 K34 ; R16 := R8["position"]
	164	[3621]	GETTABLE 	R17 R7 K34 ; R17 := R7["position"]
	165	[3621]	SUB      	R16 R16 R17 ; R16 := R16 - R17
	166	[3621]	MUL      	R16 R16 K37 ; R16 := R16 * 0.300000
	167	[3621]	ADD      	R15 R15 R16 ; R15 := R15 + R16
	168	[3621]	SETTABLE 	R14 K34 R15 ; R14["position"] := R15
	169	[3623]	GETGLOBAL	R14 K4 ; R14 := mFlatEdges
	170	[3623]	GETTABLE 	R14 R14 R5 ; R14 := R14[R5]
	171	[3623]	NEWTABLE 	R15 0 1 ; R15 := {}
	172	[3623]	GETGLOBAL	R16 K0 ; R16 := mMapEdges
	173	[3623]	GETTABLE 	R16 R16 R12 ; R16 := R16[R12]
	174	[3623]	GETTABLE 	R16 R16 K38 ; R16 := R16["controlPointB"]
	175	[3623]	SETTABLE 	R15 K34 R16 ; R15["position"] := R16
	176	[3623]	SETTABLE 	R14 K38 R15 ; R14["controlPointB"] := R15
	177	[3624]	GETGLOBAL	R14 K35 ; R14 := 0xae2294fa
	178	[3624]	GETGLOBAL	R15 K4 ; R15 := mFlatEdges
	179	[3624]	GETTABLE 	R15 R15 R5 ; R15 := R15[R5]
	180	[3624]	GETTABLE 	R15 R15 K38 ; R15 := R15["controlPointB"]
	181	[3624]	GETTABLE 	R15 R15 K34 ; R15 := R15["position"]
	182	[3624]	CALL     	R14 2 2 ; R14 := R14(R15)
	183	[3624]	LT       	0 R14 K36 ; if R14 >= 0.010000 then PC := 214
	184	[3624]	JMP      	214 ; PC := 214
	185	[3625]	GETGLOBAL	R14 K4 ; R14 := mFlatEdges
	186	[3625]	GETTABLE 	R14 R14 R5 ; R14 := R14[R5]
	187	[3625]	GETTABLE 	R14 R14 K38 ; R14 := R14["controlPointB"]
	188	[3625]	GETTABLE 	R15 R7 K34 ; R15 := R7["position"]
	189	[3625]	GETTABLE 	R16 R8 K34 ; R16 := R8["position"]
	190	[3625]	GETTABLE 	R17 R7 K34 ; R17 := R7["position"]
	191	[3625]	SUB      	R16 R16 R17 ; R16 := R16 - R17
	192	[3625]	MUL      	R16 R16 K39 ; R16 := R16 * 0.700000
	193	[3625]	ADD      	R15 R15 R16 ; R15 := R15 + R16
	194	[3625]	SETTABLE 	R14 K34 R15 ; R14["position"] := R15
	195	[3627]	JMP      	214 ; PC := 214
	196	[3628]	GETUPVAL 	R14 U2 ; R14 := U2
	197	[3628]	TEST     	R14 0 ; if not R14 then PC := 214
	198	[3628]	JMP      	214 ; PC := 214
	199	[3629]	GETGLOBAL	R14 K40 ; R14 := 0x3d106989
	200	[3629]	LOADK    	R15 K41 ; R15 := "ERROR: Invalid nodes in edge "
	201	[3629]	GETGLOBAL	R16 K9 ; R16 := 0x64fb1586
	202	[3629]	GETGLOBAL	R17 K0 ; R17 := mMapEdges
	203	[3629]	GETTABLE 	R17 R17 R12 ; R17 := R17[R12]
	204	[3629]	GETTABLE 	R17 R17 K10 ; R17 := R17["locationA"]
	205	[3629]	CALL     	R16 2 2 ; R16 := R16(R17)
	206	[3629]	LOADK    	R17 K42 ; R17 := " to "
	207	[3629]	GETGLOBAL	R18 K9 ; R18 := 0x64fb1586
	208	[3629]	GETGLOBAL	R19 K0 ; R19 := mMapEdges
	209	[3629]	GETTABLE 	R19 R19 R12 ; R19 := R19[R12]
	210	[3629]	GETTABLE 	R19 R19 K11 ; R19 := R19["locationB"]
	211	[3629]	CALL     	R18 2 2 ; R18 := R18(R19)
	212	[3629]	CONCAT   	R15 R15 R18 ; R15 := R15 .. R16 .. R17 .. R18
	213	[3629]	CALL     	R14 2 1 ; R14(R15)
	214	[3576]	FORLOOP  	R9 27 ; R9 += R11; if R9 <= R10 then begin PC := 27; R12 := R9 end
	215	[3632]	RETURN   	R0 1 ; return 

function #71 <?:3634,3674> (113 instructions, 452 bytes at 0000021162D13720)
0 params, 13 slots, 3 upvalues, 0 locals, 29 constants, 0 functions
	1	[3635]	GETGLOBAL	R0 K0 ; R0 := 0x0032441c
	2	[3635]	GETTABLE 	R0 R0 K1 ; R0 := R0["StalkerMode"]
	3	[3635]	TEST     	R0 1 ; if R0 then PC := 9
	4	[3635]	JMP      	9 ; PC := 9
	5	[3635]	GETGLOBAL	R0 K2 ; R0 := mRailJack
	6	[3635]	GETTABLE 	R0 R0 K3 ; R0 := R0["Active"]
	7	[3635]	TEST     	R0 0 ; if not R0 then PC := 10
	8	[3635]	JMP      	10 ; PC := 10
	9	[3636]	RETURN   	R0 1 ; return 
	10	[3639]	LOADNIL  	R0 R1 ; R0 := R1 := nil
	11	[3641]	OP_LOADBOOL	R2 0 0 ; R2 := false
	12	[3643]	LOADK    	R3 := 1.000000
	13	[3643]	GETGLOBAL	R4 K4 ; R4 := mFlatEdges
	14	[3643]	LEN      	R4 R4 ; R4 := # R4
	15	[3643]	LOADK    	R5 := 1.000000
	16	[3643]	FORPREP  	R3 112 ; R3 -= R5; PC := 112
	17	[3644]	GETGLOBAL	R7 K5 ; R7 := 0xce225efa
	18	[3644]	LOADK    	R8 := 0.000000
	19	[3644]	CALL     	R7 2 1 ; R7(R8)
	20	[3645]	GETGLOBAL	R7 K4 ; R7 := mFlatEdges
	21	[3645]	GETTABLE 	R0 R7 R6 ; R0 := R7[R6]
	22	[3646]	OP_LOADBOOL	R2 0 0 ; R2 := false
	23	[3647]	GETTABLE 	R7 R0 K6 ; R7 := R0["NodeA"]
	24	[3647]	GETTABLE 	R7 R7 K7 ; R7 := R7["isShortcut"]
	25	[3647]	TEST     	R7 0 ; if not R7 then PC := 44
	26	[3647]	JMP      	44 ; PC := 44
	27	[3647]	GETTABLE 	R7 R0 K8 ; R7 := R0["NodeB"]
	28	[3647]	GETTABLE 	R7 R7 K7 ; R7 := R7["isShortcut"]
	29	[3647]	TEST     	R7 0 ; if not R7 then PC := 44
	30	[3647]	JMP      	44 ; PC := 44
	31	[3648]	OP_LOADBOOL	R2 1 0 ; R2 := true
	32	[3649]	GETTABLE 	R7 R0 K6 ; R7 := R0["NodeA"]
	33	[3649]	GETTABLE 	R7 R7 K9 ; R7 := R7["completed"]
	34	[3649]	TEST     	R7 0 ; if not R7 then PC := 42
	35	[3649]	JMP      	42 ; PC := 42
	36	[3649]	GETTABLE 	R7 R0 K8 ; R7 := R0["NodeB"]
	37	[3649]	GETTABLE 	R7 R7 K9 ; R7 := R7["completed"]
	38	[3649]	TEST     	R7 0 ; if not R7 then PC := 42
	39	[3649]	JMP      	42 ; PC := 42
	40	[3650]	GETGLOBAL	R1 K10 ; R1 := 0x0b2cddfd
	41	[3650]	JMP      	82 ; PC := 82
	42	[3652]	GETGLOBAL	R1 K11 ; R1 := 0xf127f82d
	43	[3653]	JMP      	82 ; PC := 82
	44	[3655]	GETGLOBAL	R1 K12 ; R1 := 0xb9325072
	45	[3656]	GETTABLE 	R7 R0 K6 ; R7 := R0["NodeA"]
	46	[3656]	GETTABLE 	R7 R7 K13 ; R7 := R7["edgesLocked"]
	47	[3656]	TEST     	R7 1 ; if R7 then PC := 53
	48	[3656]	JMP      	53 ; PC := 53
	49	[3656]	GETTABLE 	R7 R0 K8 ; R7 := R0["NodeB"]
	50	[3656]	GETTABLE 	R7 R7 K13 ; R7 := R7["edgesLocked"]
	51	[3656]	TEST     	R7 0 ; if not R7 then PC := 55
	52	[3656]	JMP      	55 ; PC := 55
	53	[3657]	GETGLOBAL	R1 K14 ; R1 := 0xccbea397
	54	[3657]	JMP      	82 ; PC := 82
	55	[3658]	GETTABLE 	R7 R0 K6 ; R7 := R0["NodeA"]
	56	[3658]	GETTABLE 	R7 R7 K9 ; R7 := R7["completed"]
	57	[3658]	TEST     	R7 0 ; if not R7 then PC := 65
	58	[3658]	JMP      	65 ; PC := 65
	59	[3658]	GETTABLE 	R7 R0 K8 ; R7 := R0["NodeB"]
	60	[3658]	GETTABLE 	R7 R7 K9 ; R7 := R7["completed"]
	61	[3658]	TEST     	R7 0 ; if not R7 then PC := 65
	62	[3658]	JMP      	65 ; PC := 65
	63	[3659]	GETGLOBAL	R1 K15 ; R1 := 0x1e444be7
	64	[3659]	JMP      	82 ; PC := 82
	65	[3660]	GETTABLE 	R7 R0 K6 ; R7 := R0["NodeA"]
	66	[3660]	GETTABLE 	R7 R7 K16 ; R7 := R7["locked"]
	67	[3660]	TEST     	R7 1 ; if R7 then PC := 73
	68	[3660]	JMP      	73 ; PC := 73
	69	[3660]	GETTABLE 	R7 R0 K6 ; R7 := R0["NodeA"]
	70	[3660]	GETTABLE 	R7 R7 K9 ; R7 := R7["completed"]
	71	[3660]	TEST     	R7 1 ; if R7 then PC := 82
	72	[3660]	JMP      	82 ; PC := 82
	73	[3660]	GETTABLE 	R7 R0 K8 ; R7 := R0["NodeB"]
	74	[3660]	GETTABLE 	R7 R7 K16 ; R7 := R7["locked"]
	75	[3660]	TEST     	R7 1 ; if R7 then PC := 81
	76	[3660]	JMP      	81 ; PC := 81
	77	[3660]	GETTABLE 	R7 R0 K8 ; R7 := R0["NodeB"]
	78	[3660]	GETTABLE 	R7 R7 K9 ; R7 := R7["completed"]
	79	[3660]	TEST     	R7 1 ; if R7 then PC := 82
	80	[3660]	JMP      	82 ; PC := 82
	81	[3661]	GETGLOBAL	R1 K14 ; R1 := 0xccbea397
	82	[3664]	GETGLOBAL	R7 K17 ; R7 := 0x7b998233
	83	[3664]	GETTABLE 	R8 R0 K18 ; R8 := R0["Instance"]
	84	[3664]	CALL     	R7 2 2 ; R7 := R7(R8)
	85	[3664]	TEST     	R7 1 ; if R7 then PC := 91
	86	[3664]	JMP      	91 ; PC := 91
	87	[3665]	GETGLOBAL	R7 K19 ; R7 := 0x1211d00f
	88	[3665]	SELF     	R7 R7 K20 ; R8 := R7; R7 := R7[0x59c96e77]
	89	[3665]	GETTABLE 	R9 R0 K18 ; R9 := R0["Instance"]
	90	[3665]	CALL     	R7 3 1 ; R7(R8,R9)
	91	[3668]	GETGLOBAL	R7 K19 ; R7 := 0x1211d00f
	92	[3668]	SELF     	R7 R7 K21 ; R8 := R7; R7 := R7[0x05909209]
	93	[3668]	MOVE     	R9 R1 ; R9 := R1
	94	[3668]	GETGLOBAL	R10 K22 ; R10 := ZERO_VECTOR
	95	[3668]	GETGLOBAL	R11 K23 ; R11 := ZERO_ROTATION
	96	[3668]	CALL     	R7 5 2 ; R7 := R7(R8,R9,R10,R11)
	97	[3668]	SETTABLE 	R0 K18 R7 ; R0["Instance"] := R7
	98	[3670]	GETTABLE 	R7 R0 K18 ; R7 := R0["Instance"]
	99	[3670]	SELF     	R7 R7 K24 ; R8 := R7; R7 := R7[0xecfaed95]
	100	[3670]	GETUPVAL 	R9 U0 ; R9 := U0
	101	[3670]	GETTABLE 	R9 R9 K25 ; R9 := R9[0x06d055f9]
	102	[3670]	GETTABLE 	R10 R0 K26 ; R10 := R0["IsShortcut"]
	103	[3670]	GETUPVAL 	R11 U1 ; R11 := U1
	104	[3670]	GETTABLE 	R11 R11 K27 ; R11 := R11["SHORTCUT_CULL_DISTANCE"]
	105	[3670]	GETUPVAL 	R12 U1 ; R12 := U1
	106	[3670]	GETTABLE 	R12 R12 K28 ; R12 := R12["LINE_CULL_DISTANCE"]
	107	[3670]	CALL     	R9 4 0 ; R9,... := R9(R10,R11,R12)
	108	[3670]	CALL     	R7 0 1 ; R7(R8,...)
	109	[3672]	GETUPVAL 	R7 U2 ; R7 := U2
	110	[3672]	MOVE     	R8 R0 ; R8 := R0
	111	[3672]	CALL     	R7 2 1 ; R7(R8)
	112	[3643]	FORLOOP  	R3 17 ; R3 += R5; if R3 <= R4 then begin PC := 17; R6 := R3 end
	113	[3674]	RETURN   	R0 1 ; return 

function #72 <?:3676,3725> (156 instructions, 624 bytes at 0000021162D137B0)
0 params, 18 slots, 1 upvalue, 0 locals, 41 constants, 0 functions
	1	[3677]	GETGLOBAL	R0 K0 ; R0 := 0x0032441c
	2	[3677]	GETTABLE 	R0 R0 K1 ; R0 := R0["StalkerMode"]
	3	[3677]	TEST     	R0 0 ; if not R0 then PC := 6
	4	[3677]	JMP      	6 ; PC := 6
	5	[3678]	RETURN   	R0 1 ; return 
	6	[3681]	GETGLOBAL	R0 K2 ; R0 := 0x76ea806b
	7	[3681]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x3f3ae64c]
	8	[3681]	LOADK    	R2 := 0.000000
	9	[3681]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	10	[3682]	GETGLOBAL	R1 K4 ; R1 := 0x7b998233
	11	[3682]	MOVE     	R2 R0 ; R2 := R0
	12	[3682]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[3682]	TEST     	R1 1 ; if R1 then PC := 133
	14	[3682]	JMP      	133 ; PC := 133
	15	[3683]	SELF     	R1 R0 K5 ; R2 := R0; R1 := R0[0x80563238]
	16	[3683]	CALL     	R1 2 2 ; R1 := R1(R2)
	17	[3684]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	18	[3684]	MOVE     	R3 R1 ; R3 := R1
	19	[3684]	CALL     	R2 2 2 ; R2 := R2(R3)
	20	[3684]	TEST     	R2 1 ; if R2 then PC := 133
	21	[3684]	JMP      	133 ; PC := 133
	22	[3685]	SELF     	R2 R1 K6 ; R3 := R1; R2 := R1[0x69727e0b]
	23	[3685]	CALL     	R2 2 2 ; R2 := R2(R3)
	24	[3686]	GETTABLE 	R3 R2 K7 ; R3 := R2["mVoidTraders"]
	25	[3686]	EQ       	1 R3 K8 ; if R3 == nil then PC := 133
	26	[3686]	JMP      	133 ; PC := 133
	27	[3686]	GETTABLE 	R3 R2 K7 ; R3 := R2["mVoidTraders"]
	28	[3686]	LEN      	R3 R3 ; R3 := # R3
	29	[3686]	LT       	0 K9 R3 ; if 0.000000 >= R3 then PC := 133
	30	[3686]	JMP      	133 ; PC := 133
	31	[3687]	LOADK    	R3 := 86400.000000
	32	[3688]	GETTABLE 	R4 R2 K7 ; R4 := R2["mVoidTraders"]
	33	[3688]	GETTABLE 	R4 R4 K10 ; R4 := R4[1.000000]
	34	[3689]	GETGLOBAL	R5 K11 ; R5 := mVoidTrader
	35	[3689]	GETGLOBAL	R6 K13 ; R6 := 0x34291f5c
	36	[3689]	GETTABLE 	R6 R6 K14 ; R6 := R6[0x397b920f]
	37	[3689]	GETTABLE 	R7 R4 K15 ; R7 := R4["mActivation"]
	38	[3689]	CALL     	R6 2 2 ; R6 := R6(R7)
	39	[3689]	SETTABLE 	R5 K12 R6 ; R5["Time"] := R6
	40	[3690]	GETGLOBAL	R5 K11 ; R5 := mVoidTrader
	41	[3690]	GETTABLE 	R6 R4 K17 ; R6 := R4["mExpiry"]
	42	[3690]	GETTABLE 	R6 R6 K18 ; R6 := R6["sec"]
	43	[3690]	SETTABLE 	R5 K16 R6 ; R5["Expiry"] := R6
	44	[3691]	GETGLOBAL	R5 K11 ; R5 := mVoidTrader
	45	[3691]	GETGLOBAL	R6 K20 ; R6 := 0x0469f296
	46	[3691]	GETTABLE 	R7 R4 K21 ; R7 := R4["mNode"]
	47	[3691]	CALL     	R6 2 2 ; R6 := R6(R7)
	48	[3691]	SETTABLE 	R5 K19 R6 ; R5["Location"] := R6
	49	[3692]	GETGLOBAL	R5 K11 ; R5 := mVoidTrader
	50	[3692]	GETTABLE 	R5 R5 K12 ; R5 := R5["Time"]
	51	[3692]	LE       	0 R5 K9 ; if R5 > 0.000000 then PC := 58
	52	[3692]	JMP      	58 ; PC := 58
	53	[3693]	GETGLOBAL	R5 K11 ; R5 := mVoidTrader
	54	[3693]	SETTABLE 	R5 K22 K10 ; R5["Progress"] := 1.000000
	55	[3694]	GETGLOBAL	R5 K11 ; R5 := mVoidTrader
	56	[3694]	SETTABLE 	R5 K23 K24 ; R5["Active"] := true
	57	[3694]	JMP      	70 ; PC := 70
	58	[3695]	GETGLOBAL	R5 K11 ; R5 := mVoidTrader
	59	[3695]	GETTABLE 	R5 R5 K12 ; R5 := R5["Time"]
	60	[3695]	LE       	0 R5 R3 ; if R5 > R3 then PC := 70
	61	[3695]	JMP      	70 ; PC := 70
	62	[3696]	GETGLOBAL	R5 K11 ; R5 := mVoidTrader
	63	[3696]	GETGLOBAL	R6 K11 ; R6 := mVoidTrader
	64	[3696]	GETTABLE 	R6 R6 K12 ; R6 := R6["Time"]
	65	[3696]	DIV      	R6 R6 R3 ; R6 := R6 / R3
	66	[3696]	SUB      	R6 K10 R6 ; R6 := 1.000000 - R6
	67	[3696]	SETTABLE 	R5 K22 R6 ; R5["Progress"] := R6
	68	[3697]	GETGLOBAL	R5 K11 ; R5 := mVoidTrader
	69	[3697]	SETTABLE 	R5 K23 K24 ; R5["Active"] := true
	70	[3700]	GETGLOBAL	R5 K11 ; R5 := mVoidTrader
	71	[3700]	GETTABLE 	R5 R5 K23 ; R5 := R5["Active"]
	72	[3700]	TEST     	R5 0 ; if not R5 then PC := 133
	73	[3700]	JMP      	133 ; PC := 133
	74	[3701]	LOADNIL  	R5 R5 ; R5 := nil
	75	[3702]	OP_LOADBOOL	R6 0 0 ; R6 := false
	76	[3703]	LOADK    	R7 := 1.000000
	77	[3703]	GETGLOBAL	R8 K25 ; R8 := mFlatEdges
	78	[3703]	LEN      	R8 R8 ; R8 := # R8
	79	[3703]	LOADK    	R9 := 1.000000
	80	[3703]	FORPREP  	R7 110 ; R7 -= R9; PC := 110
	81	[3704]	GETGLOBAL	R11 K25 ; R11 := mFlatEdges
	82	[3704]	GETTABLE 	R11 R11 R10 ; R11 := R11[R10]
	83	[3704]	GETTABLE 	R11 R11 K26 ; R11 := R11["NodeA"]
	84	[3704]	GETTABLE 	R11 R11 K27 ; R11 := R11["name"]
	85	[3704]	GETGLOBAL	R12 K11 ; R12 := mVoidTrader
	86	[3704]	GETTABLE 	R12 R12 K19 ; R12 := R12["Location"]
	87	[3704]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 97
	88	[3704]	JMP      	97 ; PC := 97
	89	[3704]	GETGLOBAL	R11 K25 ; R11 := mFlatEdges
	90	[3704]	GETTABLE 	R11 R11 R10 ; R11 := R11[R10]
	91	[3704]	GETTABLE 	R11 R11 K28 ; R11 := R11["NodeB"]
	92	[3704]	GETTABLE 	R11 R11 K27 ; R11 := R11["name"]
	93	[3704]	GETGLOBAL	R12 K11 ; R12 := mVoidTrader
	94	[3704]	GETTABLE 	R12 R12 K19 ; R12 := R12["Location"]
	95	[3704]	EQ       	0 R11 R12 ; if R11 ~= R12 then PC := 110
	96	[3704]	JMP      	110 ; PC := 110
	97	[3705]	GETGLOBAL	R11 K25 ; R11 := mFlatEdges
	98	[3705]	GETTABLE 	R11 R11 R10 ; R11 := R11[R10]
	99	[3705]	GETTABLE 	R11 R11 K26 ; R11 := R11["NodeA"]
	100	[3705]	GETTABLE 	R11 R11 K27 ; R11 := R11["name"]
	101	[3705]	GETGLOBAL	R12 K11 ; R12 := mVoidTrader
	102	[3705]	GETTABLE 	R12 R12 K19 ; R12 := R12["Location"]
	103	[3705]	EQ       	1 R11 R12 ; if R11 == R12 then PC := 106
	104	[3705]	JMP      	106 ; PC := 106
	105	[3705]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 106
	106	[3705]	OP_LOADBOOL	R6 1 0 ; R6 := true
	107	[3706]	GETGLOBAL	R11 K25 ; R11 := mFlatEdges
	108	[3706]	GETTABLE 	R5 R11 R10 ; R5 := R11[R10]
	109	[3707]	JMP      	111 ; PC := 111
	110	[3703]	FORLOOP  	R7 81 ; R7 += R9; if R7 <= R8 then begin PC := 81; R10 := R7 end
	111	[3711]	GETGLOBAL	R11 K4 ; R11 := 0x7b998233
	112	[3711]	MOVE     	R12 R5 ; R12 := R5
	113	[3711]	CALL     	R11 2 2 ; R11 := R11(R12)
	114	[3711]	TEST     	R11 1 ; if R11 then PC := 131
	115	[3711]	JMP      	131 ; PC := 131
	116	[3712]	GETGLOBAL	R11 K11 ; R11 := mVoidTrader
	117	[3712]	GETTABLE 	R12 R5 K30 ; R12 := R5["Instance"]
	118	[3712]	SELF     	R12 R12 K31 ; R13 := R12; R12 := R12[0x7482ae82]
	119	[3712]	GETUPVAL 	R14 U0 ; R14 := U0
	120	[3712]	GETTABLE 	R14 R14 K32 ; R14 := R14[0x06d055f9]
	121	[3712]	NOT      	R15 R6 ; R15 := not R6
	122	[3712]	GETGLOBAL	R16 K11 ; R16 := mVoidTrader
	123	[3712]	GETTABLE 	R16 R16 K22 ; R16 := R16["Progress"]
	124	[3712]	GETGLOBAL	R17 K11 ; R17 := mVoidTrader
	125	[3712]	GETTABLE 	R17 R17 K22 ; R17 := R17["Progress"]
	126	[3712]	SUB      	R17 K10 R17 ; R17 := 1.000000 - R17
	127	[3712]	CALL     	R14 4 0 ; R14,... := R14(R15,R16,R17)
	128	[3712]	CALL     	R12 0 2 ; R12 := R12(R13,...)
	129	[3712]	SETTABLE 	R11 K29 R12 ; R11["Position"] := R12
	130	[3712]	JMP      	133 ; PC := 133
	131	[3714]	GETGLOBAL	R11 K11 ; R11 := mVoidTrader
	132	[3714]	SETTABLE 	R11 K23 K33 ; R11["Active"] := false
	133	[3721]	GETGLOBAL	R11 K34 ; R11 := 0xae91e43b
	134	[3721]	SELF     	R11 R11 K35 ; R12 := R11; R11 := R11[0xaade900e]
	135	[3721]	LOADK    	R13 K36 ; R13 := "VoidTrader"
	136	[3721]	LOADK    	R14 := 11.000000
	137	[3721]	GETGLOBAL	R15 K11 ; R15 := mVoidTrader
	138	[3721]	GETTABLE 	R15 R15 K23 ; R15 := R15["Active"]
	139	[3721]	EQ       	0 R15 K24 ; if R15 ~= true then PC := 144
	140	[3721]	JMP      	144 ; PC := 144
	141	[3721]	GETGLOBAL	R15 K37 ; R15 := mNewWarMode
	142	[3721]	NOT      	R15 R15 ; R15 := not R15
	143	[3721]	JMP      	146 ; PC := 146
	144	[3721]	OP_LOADBOOL	R15 0 1 ; R15 := false; PC := 145
	145	[3721]	OP_LOADBOOL	R15 1 0 ; R15 := true
	146	[3721]	CALL     	R11 5 1 ; R11(R12,R13,R14,R15)
	147	[3722]	GETGLOBAL	R11 K11 ; R11 := mVoidTrader
	148	[3722]	GETTABLE 	R11 R11 K23 ; R11 := R11["Active"]
	149	[3722]	TEST     	R11 0 ; if not R11 then PC := 156
	150	[3722]	JMP      	156 ; PC := 156
	151	[3723]	GETGLOBAL	R11 K34 ; R11 := 0xae91e43b
	152	[3723]	SELF     	R11 R11 K38 ; R12 := R11; R11 := R11[0x1cb415c1]
	153	[3723]	LOADK    	R13 K39 ; R13 := "VoidTrader.Image"
	154	[3723]	GETGLOBAL	R14 K40 ; R14 := 0x1e0f74d5
	155	[3723]	CALL     	R11 4 1 ; R11(R12,R13,R14)
	156	[3725]	RETURN   	R0 1 ; return 

function #73 <?:3727,3735> (68 instructions, 272 bytes at 0000021126283820)
0 params, 12 slots, 2 upvalues, 0 locals, 11 constants, 0 functions
	1	[3728]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[3728]	GETTABLE 	R0 R0 K0 ; R0 := R0[0x06d055f9]
	3	[3728]	GETGLOBAL	R1 K1 ; R1 := 0x34291f5c
	4	[3728]	GETTABLE 	R1 R1 K2 ; R1 := R1[0x1467d5f4]
	5	[3728]	CALL     	R1 1 2 ; R1 := R1()
	6	[3728]	TEST     	R1 1 ; if R1 then PC := 15
	7	[3728]	JMP      	15 ; PC := 15
	8	[3728]	GETGLOBAL	R1 K3 ; R1 := mRailJack
	9	[3728]	GETTABLE 	R1 R1 K4 ; R1 := R1["Active"]
	10	[3728]	TEST     	R1 1 ; if R1 then PC := 15
	11	[3728]	JMP      	15 ; PC := 15
	12	[3728]	GETGLOBAL	R1 K1 ; R1 := 0x34291f5c
	13	[3728]	GETTABLE 	R1 R1 K5 ; R1 := R1[0xe6b41adb]
	14	[3728]	CALL     	R1 1 2 ; R1 := R1()
	15	[3728]	LOADK    	R2 := 48.000000
	16	[3728]	LOADK    	R3 := 18.000000
	17	[3728]	CALL     	R0 4 2 ; R0 := R0(R1,R2,R3)
	18	[3729]	GETUPVAL 	R1 U0 ; R1 := U0
	19	[3729]	GETTABLE 	R1 R1 K0 ; R1 := R1[0x06d055f9]
	20	[3729]	GETGLOBAL	R2 K1 ; R2 := 0x34291f5c
	21	[3729]	GETTABLE 	R2 R2 K2 ; R2 := R2[0x1467d5f4]
	22	[3729]	CALL     	R2 1 2 ; R2 := R2()
	23	[3729]	TEST     	R2 1 ; if R2 then PC := 32
	24	[3729]	JMP      	32 ; PC := 32
	25	[3729]	GETGLOBAL	R2 K3 ; R2 := mRailJack
	26	[3729]	GETTABLE 	R2 R2 K4 ; R2 := R2["Active"]
	27	[3729]	TEST     	R2 1 ; if R2 then PC := 32
	28	[3729]	JMP      	32 ; PC := 32
	29	[3729]	GETGLOBAL	R2 K1 ; R2 := 0x34291f5c
	30	[3729]	GETTABLE 	R2 R2 K5 ; R2 := R2[0xe6b41adb]
	31	[3729]	CALL     	R2 1 2 ; R2 := R2()
	32	[3729]	LOADK    	R3 := 64.000000
	33	[3729]	LOADK    	R4 := 32.000000
	34	[3729]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	35	[3730]	LOADK    	R2 := 1.000000
	36	[3730]	GETUPVAL 	R3 U1 ; R3 := U1
	37	[3730]	LEN      	R3 R3 ; R3 := # R3
	38	[3730]	LOADK    	R4 := 1.000000
	39	[3730]	FORPREP  	R2 67 ; R2 -= R4; PC := 67
	40	[3731]	GETGLOBAL	R6 K6 ; R6 := 0xae91e43b
	41	[3731]	SELF     	R6 R6 K7 ; R7 := R6; R6 := R6[0xf64b7262]
	42	[3731]	GETUPVAL 	R8 U1 ; R8 := U1
	43	[3731]	GETTABLE 	R8 R8 R5 ; R8 := R8[R5]
	44	[3731]	GETTABLE 	R8 R8 K8 ; R8 := R8["clipName"]
	45	[3731]	LOADK    	R9 K9 ; R9 := "Btn"
	46	[3731]	LOADK    	R10 := 12.000000
	47	[3731]	MOVE     	R11 R1 ; R11 := R1
	48	[3731]	CALL     	R6 6 1 ; R6(R7,R8,R9,R10,R11)
	49	[3732]	GETGLOBAL	R6 K6 ; R6 := 0xae91e43b
	50	[3732]	SELF     	R6 R6 K7 ; R7 := R6; R6 := R6[0xf64b7262]
	51	[3732]	GETUPVAL 	R8 U1 ; R8 := U1
	52	[3732]	GETTABLE 	R8 R8 R5 ; R8 := R8[R5]
	53	[3732]	GETTABLE 	R8 R8 K8 ; R8 := R8["clipName"]
	54	[3732]	LOADK    	R9 K9 ; R9 := "Btn"
	55	[3732]	LOADK    	R10 := 13.000000
	56	[3732]	MOVE     	R11 R1 ; R11 := R1
	57	[3732]	CALL     	R6 6 1 ; R6(R7,R8,R9,R10,R11)
	58	[3733]	GETGLOBAL	R6 K6 ; R6 := 0xae91e43b
	59	[3733]	SELF     	R6 R6 K7 ; R7 := R6; R6 := R6[0xf64b7262]
	60	[3733]	GETUPVAL 	R8 U1 ; R8 := U1
	61	[3733]	GETTABLE 	R8 R8 R5 ; R8 := R8[R5]
	62	[3733]	GETTABLE 	R8 R8 K8 ; R8 := R8["clipName"]
	63	[3733]	LOADK    	R9 K10 ; R9 := "Name.Bg"
	64	[3733]	LOADK    	R10 := 13.000000
	65	[3733]	MOVE     	R11 R0 ; R11 := R0
	66	[3733]	CALL     	R6 6 1 ; R6(R7,R8,R9,R10,R11)
	67	[3730]	FORLOOP  	R2 40 ; R2 += R4; if R2 <= R3 then begin PC := 40; R5 := R2 end
	68	[3735]	RETURN   	R0 1 ; return 

function #74 <?:3737,3745> (17 instructions, 68 bytes at 000002111C7B5EE0)
0 params, 10 slots, 0 upvalues, 0 locals, 6 constants, 0 functions
	1	[3738]	NEWTABLE 	R0 0 0 ; R0 := {}
	2	[3738]	SETGLOBALHASH	R0 K0 ; mConstructionProjectNodes := R0
	3	[3739]	GETGLOBAL	R0 K1 ; R0 := _T
	4	[3739]	GETTABLE 	R0 R0 K2 ; R0 := R0["CachedConstructionProjects"]
	5	[3740]	LOADK    	R1 := 1.000000
	6	[3740]	LEN      	R2 R0 ; R2 := # R0
	7	[3740]	LOADK    	R3 := 1.000000
	8	[3740]	FORPREP  	R1 16 ; R1 -= R3; PC := 16
	9	[3741]	GETTABLE 	R5 R0 R4 ; R5 := R0[R4]
	10	[3742]	GETTABLE 	R6 R5 K3 ; R6 := R5["info"]
	11	[3742]	GETTABLE 	R6 R6 K4 ; R6 := R6["mNode"]
	12	[3743]	GETGLOBAL	R7 K0 ; R7 := mConstructionProjectNodes
	13	[3743]	SELF     	R8 R6 K5 ; R9 := R6; R8 := R6[0x6d604ba7]
	14	[3743]	CALL     	R8 2 2 ; R8 := R8(R9)
	15	[3743]	SETTABLE 	R7 R8 R5 ; R7[R8] := R5
	16	[3740]	FORLOOP  	R1 9 ; R1 += R3; if R1 <= R2 then begin PC := 9; R4 := R1 end
	17	[3745]	RETURN   	R0 1 ; return 

function #75 <?:3747,3850> (398 instructions, 1592 bytes at 000002112E9A5FD0)
0 params, 33 slots, 15 upvalues, 0 locals, 86 constants, 0 functions
	1	[3749]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[3749]	GETTABLE 	R0 R0 K0 ; R0 := R0[0x4c232afc]
	3	[3749]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	4	[3749]	LOADK    	R2 := 0.000000
	5	[3749]	LOADK    	R3 K2 ; R3 := 0.200000
	6	[3749]	LOADK    	R4 K2 ; R4 := 0.200000
	7	[3749]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	8	[3751]	GETGLOBAL	R0 K3 ; R0 := 0x1211d00f
	9	[3751]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0xfb669000]
	10	[3751]	GETGLOBAL	R2 K5 ; R2 := gCameraSpotType
	11	[3751]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	12	[3752]	GETUPVAL 	R1 U1 ; R1 := U1
	13	[3752]	GETTABLE 	R2 R0 K7 ; R2 := R0[1.000000]
	14	[3752]	SETTABLE 	R1 K6 R2 ; R1["cameraSpot"] := R2
	15	[3754]	GETGLOBAL	R1 K8 ; R1 := 0x0032441c
	16	[3754]	GETTABLE 	R1 R1 K9 ; R1 := R1["StalkerMode"]
	17	[3754]	TEST     	R1 1 ; if R1 then PC := 27
	18	[3754]	JMP      	27 ; PC := 27
	19	[3754]	GETGLOBAL	R1 K10 ; R1 := mRailJack
	20	[3754]	GETTABLE 	R1 R1 K11 ; R1 := R1["Transitioned"]
	21	[3754]	TEST     	R1 1 ; if R1 then PC := 27
	22	[3754]	JMP      	27 ; PC := 27
	23	[3755]	GETUPVAL 	R1 U0 ; R1 := U0
	24	[3755]	GETTABLE 	R1 R1 K12 ; R1 := R1[0x659d451f]
	25	[3755]	GETGLOBAL	R2 K13 ; R2 := 0x7c7c09f4
	26	[3755]	CALL     	R1 2 1 ; R1(R2)
	27	[3758]	GETGLOBAL	R1 K14 ; R1 := 0xa421af95
	28	[3758]	LOADK    	R2 := 0.000000
	29	[3758]	LOADK    	R3 := 0.000000
	30	[3758]	LOADK    	R4 := 1.000000
	31	[3758]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	32	[3759]	GETUPVAL 	R2 U1 ; R2 := U1
	33	[3759]	GETTABLE 	R2 R2 K6 ; R2 := R2["cameraSpot"]
	34	[3759]	SELF     	R2 R2 K15 ; R3 := R2; R2 := R2[0x9307aa51]
	35	[3759]	MUL      	R4 R1 K16 ; R4 := R1 * -5.000000
	36	[3759]	CALL     	R2 3 1 ; R2(R3,R4)
	37	[3761]	GETUPVAL 	R2 U1 ; R2 := U1
	38	[3761]	GETUPVAL 	R3 U1 ; R3 := U1
	39	[3761]	GETTABLE 	R3 R3 K6 ; R3 := R3["cameraSpot"]
	40	[3761]	SELF     	R3 R3 K18 ; R4 := R3; R3 := R3[0xd1586535]
	41	[3761]	CALL     	R3 2 2 ; R3 := R3(R4)
	42	[3761]	SETTABLE 	R2 K17 R3 ; R2["originPos"] := R3
	43	[3762]	GETUPVAL 	R2 U1 ; R2 := U1
	44	[3762]	GETUPVAL 	R3 U1 ; R3 := U1
	45	[3762]	GETTABLE 	R3 R3 K6 ; R3 := R3["cameraSpot"]
	46	[3762]	SELF     	R3 R3 K20 ; R4 := R3; R3 := R3[0xcb3851b8]
	47	[3762]	CALL     	R3 2 2 ; R3 := R3(R4)
	48	[3762]	SETTABLE 	R2 K19 R3 ; R2["origRotation"] := R3
	49	[3763]	GETUPVAL 	R2 U1 ; R2 := U1
	50	[3763]	GETGLOBAL	R3 K22 ; R3 := 0xf6c6e505
	51	[3763]	GETUPVAL 	R4 U1 ; R4 := U1
	52	[3763]	GETTABLE 	R4 R4 K6 ; R4 := R4["cameraSpot"]
	53	[3763]	SELF     	R4 R4 K20 ; R5 := R4; R4 := R4[0xcb3851b8]
	54	[3763]	CALL     	R4 2 0 ; R4,... := R4(R5)
	55	[3763]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	56	[3763]	SETTABLE 	R2 K21 R3 ; R2["origFacing"] := R3
	57	[3764]	GETUPVAL 	R2 U1 ; R2 := U1
	58	[3764]	GETGLOBAL	R3 K14 ; R3 := 0xa421af95
	59	[3764]	GETUPVAL 	R4 U1 ; R4 := U1
	60	[3764]	GETTABLE 	R4 R4 K17 ; R4 := R4["originPos"]
	61	[3764]	GETTABLE 	R4 R4 K24 ; R4 := R4["x"]
	62	[3764]	GETUPVAL 	R5 U1 ; R5 := U1
	63	[3764]	GETTABLE 	R5 R5 K17 ; R5 := R5["originPos"]
	64	[3764]	GETTABLE 	R5 R5 K25 ; R5 := R5["y"]
	65	[3764]	GETUPVAL 	R6 U1 ; R6 := U1
	66	[3764]	GETTABLE 	R6 R6 K17 ; R6 := R6["originPos"]
	67	[3764]	GETTABLE 	R6 R6 K26 ; R6 := R6["z"]
	68	[3764]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	69	[3764]	SETTABLE 	R2 K23 R3 ; R2["pos"] := R3
	70	[3765]	GETUPVAL 	R2 U1 ; R2 := U1
	71	[3765]	GETGLOBAL	R3 K28 ; R3 := 0x00046924
	72	[3765]	GETUPVAL 	R4 U1 ; R4 := U1
	73	[3765]	GETTABLE 	R4 R4 K19 ; R4 := R4["origRotation"]
	74	[3765]	GETTABLE 	R4 R4 K29 ; R4 := R4["heading"]
	75	[3765]	GETUPVAL 	R5 U1 ; R5 := U1
	76	[3765]	GETTABLE 	R5 R5 K19 ; R5 := R5["origRotation"]
	77	[3765]	GETTABLE 	R5 R5 K30 ; R5 := R5["pitch"]
	78	[3765]	GETUPVAL 	R6 U1 ; R6 := U1
	79	[3765]	GETTABLE 	R6 R6 K19 ; R6 := R6["origRotation"]
	80	[3765]	GETTABLE 	R6 R6 K31 ; R6 := R6["bank"]
	81	[3765]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	82	[3765]	SETTABLE 	R2 K27 R3 ; R2["rotation"] := R3
	83	[3766]	GETUPVAL 	R2 U1 ; R2 := U1
	84	[3766]	NEWTABLE 	R3 0 0 ; R3 := {}
	85	[3766]	SETTABLE 	R2 K32 R3 ; R2["sky"] := R3
	86	[3767]	GETUPVAL 	R2 U1 ; R2 := U1
	87	[3767]	GETTABLE 	R2 R2 K32 ; R2 := R2["sky"]
	88	[3767]	GETGLOBAL	R3 K3 ; R3 := 0x1211d00f
	89	[3767]	SELF     	R3 R3 K4 ; R4 := R3; R3 := R3[0xfb669000]
	90	[3767]	GETGLOBAL	R5 K34 ; R5 := gZoneAttribsType
	91	[3767]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	92	[3767]	GETTABLE 	R3 R3 K7 ; R3 := R3[1.000000]
	93	[3767]	SETTABLE 	R2 K33 R3 ; R2["Zone"] := R3
	94	[3768]	GETUPVAL 	R2 U1 ; R2 := U1
	95	[3768]	GETTABLE 	R2 R2 K32 ; R2 := R2["sky"]
	96	[3768]	GETGLOBAL	R3 K3 ; R3 := 0x1211d00f
	97	[3768]	SELF     	R3 R3 K36 ; R4 := R3; R3 := R3[0x46a0ebf5]
	98	[3768]	GETUPVAL 	R5 U2 ; R5 := U2
	99	[3768]	GETTABLE 	R5 R5 K37 ; R5 := R5["SKY_CUBE"]
	100	[3768]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	101	[3768]	SETTABLE 	R2 K35 R3 ; R2["Cube"] := R3
	102	[3769]	GETUPVAL 	R2 U1 ; R2 := U1
	103	[3769]	GETUPVAL 	R3 U1 ; R3 := U1
	104	[3769]	GETTABLE 	R3 R3 K32 ; R3 := R3["sky"]
	105	[3769]	GETTABLE 	R3 R3 K33 ; R3 := R3["Zone"]
	106	[3769]	SELF     	R3 R3 K18 ; R4 := R3; R3 := R3[0xd1586535]
	107	[3769]	CALL     	R3 2 2 ; R3 := R3(R4)
	108	[3769]	SETTABLE 	R2 K38 R3 ; R2["skyOrigin"] := R3
	109	[3770]	GETUPVAL 	R2 U1 ; R2 := U1
	110	[3770]	GETTABLE 	R2 R2 K6 ; R2 := R2["cameraSpot"]
	111	[3770]	SELF     	R2 R2 K39 ; R3 := R2; R2 := R2[0xf3cefa26]
	112	[3770]	LOADK    	R4 := 1.000000
	113	[3770]	LOADK    	R5 := 0.000000
	114	[3770]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	115	[3772]	GETGLOBAL	R2 K8 ; R2 := 0x0032441c
	116	[3772]	GETTABLE 	R2 R2 K9 ; R2 := R2["StalkerMode"]
	117	[3772]	TEST     	R2 1 ; if R2 then PC := 123
	118	[3772]	JMP      	123 ; PC := 123
	119	[3772]	GETGLOBAL	R2 K40 ; R2 := _T
	120	[3772]	GETTABLE 	R2 R2 K41 ; R2 := R2["CustomStarChartNodeFilter"]
	121	[3772]	EQ       	1 R2 K42 ; if R2 == nil then PC := 208
	122	[3772]	JMP      	208 ; PC := 208
	123	[3773]	GETGLOBAL	R2 K43 ; R2 := 0x60130201
	124	[3773]	LOADK    	R3 := 60.000000
	125	[3773]	LOADK    	R4 := 0.000000
	126	[3773]	LOADK    	R5 := 0.000000
	127	[3773]	LOADK    	R6 := 0.000000
	128	[3773]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	129	[3774]	GETGLOBAL	R3 K40 ; R3 := _T
	130	[3774]	GETTABLE 	R3 R3 K41 ; R3 := R3["CustomStarChartNodeFilter"]
	131	[3774]	TEST     	R3 0 ; if not R3 then PC := 141
	132	[3774]	JMP      	141 ; PC := 141
	133	[3774]	GETGLOBAL	R3 K40 ; R3 := _T
	134	[3774]	GETTABLE 	R3 R3 K41 ; R3 := R3["CustomStarChartNodeFilter"]
	135	[3774]	GETTABLE 	R3 R3 K44 ; R3 := R3["Color"]
	136	[3774]	EQ       	1 R3 K42 ; if R3 == nil then PC := 141
	137	[3774]	JMP      	141 ; PC := 141
	138	[3775]	GETGLOBAL	R3 K40 ; R3 := _T
	139	[3775]	GETTABLE 	R3 R3 K41 ; R3 := R3["CustomStarChartNodeFilter"]
	140	[3775]	GETTABLE 	R2 R3 K44 ; R2 := R3["Color"]
	141	[3778]	GETGLOBAL	R3 K45 ; R3 := 0x7b998233
	142	[3778]	GETUPVAL 	R4 U1 ; R4 := U1
	143	[3778]	GETTABLE 	R4 R4 K32 ; R4 := R4["sky"]
	144	[3778]	GETTABLE 	R4 R4 K35 ; R4 := R4["Cube"]
	145	[3778]	CALL     	R3 2 2 ; R3 := R3(R4)
	146	[3778]	TEST     	R3 1 ; if R3 then PC := 162
	147	[3778]	JMP      	162 ; PC := 162
	148	[3779]	GETUPVAL 	R3 U1 ; R3 := U1
	149	[3779]	GETTABLE 	R3 R3 K32 ; R3 := R3["sky"]
	150	[3779]	GETTABLE 	R3 R3 K35 ; R3 := R3["Cube"]
	151	[3779]	SELF     	R3 R3 K46 ; R4 := R3; R3 := R3[0x986d2ab8]
	152	[3779]	GETGLOBAL	R5 K47 ; R5 := 0x6c97a788
	153	[3779]	GETTABLE 	R5 R5 K48 ; R5 := R5["TINT_COLOR"]
	154	[3779]	GETTABLE 	R6 R2 K49 ; R6 := R2["red"]
	155	[3779]	DIV      	R6 R6 K50 ; R6 := R6 / 255.000000
	156	[3779]	GETTABLE 	R7 R2 K51 ; R7 := R2["green"]
	157	[3779]	DIV      	R7 R7 K50 ; R7 := R7 / 255.000000
	158	[3779]	GETTABLE 	R8 R2 K52 ; R8 := R2["blue"]
	159	[3779]	DIV      	R8 R8 K50 ; R8 := R8 / 255.000000
	160	[3779]	LOADK    	R9 := 1.000000
	161	[3779]	CALL     	R3 7 1 ; R3(R4,R5,R6,R7,R8,R9)
	162	[3781]	GETGLOBAL	R3 K3 ; R3 := 0x1211d00f
	163	[3781]	SELF     	R3 R3 K53 ; R4 := R3; R3 := R3[0xc7fcada9]
	164	[3781]	GETGLOBAL	R5 K54 ; R5 := 0x0469f296
	165	[3781]	LOADK    	R6 K55 ; R6 := "Cloud"
	166	[3781]	CALL     	R5 2 0 ; R5,... := R5(R6)
	167	[3781]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	168	[3782]	GETGLOBAL	R4 K56 ; R4 := 0xcfc01047
	169	[3782]	MOVE     	R5 R3 ; R5 := R3
	170	[3782]	CALL     	R4 2 4 ; R4,R5,R6 := R4(R5)
	171	[3782]	JMP      	183 ; PC := 183
	172	[3783]	SELF     	R9 R8 K46 ; R10 := R8; R9 := R8[0x986d2ab8]
	173	[3783]	GETGLOBAL	R11 K47 ; R11 := 0x6c97a788
	174	[3783]	GETTABLE 	R11 R11 K48 ; R11 := R11["TINT_COLOR"]
	175	[3783]	GETTABLE 	R12 R2 K49 ; R12 := R2["red"]
	176	[3783]	DIV      	R12 R12 K50 ; R12 := R12 / 255.000000
	177	[3783]	GETTABLE 	R13 R2 K51 ; R13 := R2["green"]
	178	[3783]	DIV      	R13 R13 K50 ; R13 := R13 / 255.000000
	179	[3783]	GETTABLE 	R14 R2 K52 ; R14 := R2["blue"]
	180	[3783]	DIV      	R14 R14 K50 ; R14 := R14 / 255.000000
	181	[3783]	LOADK    	R15 := 1.000000
	182	[3783]	CALL     	R9 7 1 ; R9(R10,R11,R12,R13,R14,R15)
	183	[3782]	TFORLOOP 	R4 2 ; R7,R8 := R4(R5,R6); if R7 ~= nil then begin PC = 172; R6 := R7 end
	184	[3783]	JMP      	172 ; PC := 172
	185	[3785]	GETGLOBAL	R9 K3 ; R9 := 0x1211d00f
	186	[3785]	SELF     	R9 R9 K53 ; R10 := R9; R9 := R9[0xc7fcada9]
	187	[3785]	GETGLOBAL	R11 K54 ; R11 := 0x0469f296
	188	[3785]	LOADK    	R12 K57 ; R12 := "Water"
	189	[3785]	CALL     	R11 2 0 ; R11,... := R11(R12)
	190	[3785]	CALL     	R9 0 2 ; R9 := R9(R10,...)
	191	[3786]	GETGLOBAL	R10 K56 ; R10 := 0xcfc01047
	192	[3786]	MOVE     	R11 R9 ; R11 := R9
	193	[3786]	CALL     	R10 2 4 ; R10,R11,R12 := R10(R11)
	194	[3786]	JMP      	206 ; PC := 206
	195	[3787]	SELF     	R15 R14 K46 ; R16 := R14; R15 := R14[0x986d2ab8]
	196	[3787]	GETGLOBAL	R17 K47 ; R17 := 0x6c97a788
	197	[3787]	GETTABLE 	R17 R17 K48 ; R17 := R17["TINT_COLOR"]
	198	[3787]	GETTABLE 	R18 R2 K49 ; R18 := R2["red"]
	199	[3787]	DIV      	R18 R18 K50 ; R18 := R18 / 255.000000
	200	[3787]	GETTABLE 	R19 R2 K51 ; R19 := R2["green"]
	201	[3787]	DIV      	R19 R19 K50 ; R19 := R19 / 255.000000
	202	[3787]	GETTABLE 	R20 R2 K52 ; R20 := R2["blue"]
	203	[3787]	DIV      	R20 R20 K50 ; R20 := R20 / 255.000000
	204	[3787]	LOADK    	R21 := 1.000000
	205	[3787]	CALL     	R15 7 1 ; R15(R16,R17,R18,R19,R20,R21)
	206	[3786]	TFORLOOP 	R10 2 ; R13,R14 := R10(R11,R12); if R13 ~= nil then begin PC = 195; R12 := R13 end
	207	[3787]	JMP      	195 ; PC := 195
	208	[3791]	GETGLOBAL	R15 K1 ; R15 := 0xae91e43b
	209	[3791]	SELF     	R15 R15 K58 ; R16 := R15; R15 := R15[0x263a3cc2]
	210	[3791]	GETGLOBAL	R17 K3 ; R17 := 0x1211d00f
	211	[3791]	SELF     	R17 R17 K59 ; R18 := R17; R17 := R17[0xb4364067]
	212	[3791]	CALL     	R17 2 0 ; R17,... := R17(R18)
	213	[3791]	CALL     	R15 0 1 ; R15(R16,...)
	214	[3793]	GETGLOBAL	R15 K40 ; R15 := _T
	215	[3793]	GETTABLE 	R15 R15 K60 ; R15 := R15["FortressLocation"]
	216	[3793]	EQ       	0 R15 K42 ; if R15 ~= nil then PC := 228
	217	[3793]	JMP      	228 ; PC := 228
	218	[3794]	GETGLOBAL	R15 K40 ; R15 := _T
	219	[3794]	NEWTABLE 	R16 0 5 ; R16 := {}
	220	[3795]	SETTABLE 	R16 K61 K7 ; R16["SplineIndex"] := 1.000000
	221	[3796]	SETTABLE 	R16 K62 K63 ; R16["Progress"] := 0.000000
	222	[3797]	SETTABLE 	R16 K64 K7 ; R16["MaxSplines"] := 1.000000
	223	[3798]	GETUPVAL 	R17 U3 ; R17 := U3
	224	[3798]	GETTABLE 	R17 R17 K65 ; R17 := R17["Velocity"]
	225	[3798]	SETTABLE 	R16 K65 R17 ; R16["Velocity"] := R17
	226	[3799]	SETTABLE 	R16 K66 K67 ; R16["Initialized"] := false
	227	[3800]	SETTABLE 	R15 K60 R16 ; R15["FortressLocation"] := R16
	228	[3803]	GETUPVAL 	R15 U4 ; R15 := U4
	229	[3803]	CALL     	R15 1 1 ; R15()
	230	[3805]	GETUPVAL 	R15 U5 ; R15 := U5
	231	[3805]	CALL     	R15 1 1 ; R15()
	232	[3806]	GETGLOBAL	R15 K68 ; R15 := 0xce225efa
	233	[3806]	LOADK    	R16 := 0.000000
	234	[3806]	CALL     	R15 2 1 ; R15(R16)
	235	[3807]	GETUPVAL 	R15 U6 ; R15 := U6
	236	[3807]	CALL     	R15 1 1 ; R15()
	237	[3808]	GETGLOBAL	R15 K68 ; R15 := 0xce225efa
	238	[3808]	LOADK    	R16 := 0.000000
	239	[3808]	CALL     	R15 2 1 ; R15(R16)
	240	[3809]	GETUPVAL 	R15 U7 ; R15 := U7
	241	[3809]	CALL     	R15 1 1 ; R15()
	242	[3810]	GETUPVAL 	R15 U8 ; R15 := U8
	243	[3810]	CALL     	R15 1 1 ; R15()
	244	[3811]	GETUPVAL 	R15 U9 ; R15 := U9
	245	[3811]	CALL     	R15 1 1 ; R15()
	246	[3813]	GETGLOBAL	R15 K56 ; R15 := 0xcfc01047
	247	[3813]	GETUPVAL 	R16 U3 ; R16 := U3
	248	[3813]	GETTABLE 	R16 R16 K69 ; R16 := R16["Sectors"]
	249	[3813]	CALL     	R15 2 4 ; R15,R16,R17 := R15(R16)
	250	[3813]	JMP      	256 ; PC := 256
	251	[3814]	GETUPVAL 	R20 U3 ; R20 := U3
	252	[3814]	GETTABLE 	R20 R20 K70 ; R20 := R20["Nodes"]
	253	[3814]	GETUPVAL 	R21 U10 ; R21 := U10
	254	[3814]	GETTABLE 	R21 R21 R18 ; R21 := R21[R18]
	255	[3814]	SETTABLE 	R20 R18 R21 ; R20[R18] := R21
	256	[3813]	TFORLOOP 	R15 2 ; R18,R19 := R15(R16,R17); if R18 ~= nil then begin PC = 251; R17 := R18 end
	257	[3814]	JMP      	251 ; PC := 251
	258	[3817]	GETUPVAL 	R20 U11 ; R20 := U11
	259	[3817]	CALL     	R20 1 1 ; R20()
	260	[3819]	GETUPVAL 	R20 U12 ; R20 := U12
	261	[3819]	CALL     	R20 1 1 ; R20()
	262	[3821]	GETUPVAL 	R20 U13 ; R20 := U13
	263	[3821]	CALL     	R20 1 1 ; R20()
	264	[3823]	GETUPVAL 	R20 U14 ; R20 := U14
	265	[3823]	CALL     	R20 1 2 ; R20 := R20()
	266	[3823]	TEST     	R20 1 ; if R20 then PC := 291
	267	[3823]	JMP      	291 ; PC := 291
	268	[3823]	GETGLOBAL	R20 K8 ; R20 := 0x0032441c
	269	[3823]	GETTABLE 	R20 R20 K9 ; R20 := R20["StalkerMode"]
	270	[3823]	TEST     	R20 1 ; if R20 then PC := 291
	271	[3823]	JMP      	291 ; PC := 291
	272	[3824]	GETGLOBAL	R20 K45 ; R20 := 0x7b998233
	273	[3824]	GETGLOBAL	R21 K71 ; R21 := 0xc6f28eaa
	274	[3824]	CALL     	R20 2 2 ; R20 := R20(R21)
	275	[3824]	TEST     	R20 1 ; if R20 then PC := 291
	276	[3824]	JMP      	291 ; PC := 291
	277	[3824]	GETGLOBAL	R20 K45 ; R20 := 0x7b998233
	278	[3824]	GETGLOBAL	R21 K8 ; R21 := 0x0032441c
	279	[3824]	GETTABLE 	R21 R21 K72 ; R21 := R21["MapSoundInst"]
	280	[3824]	CALL     	R20 2 2 ; R20 := R20(R21)
	281	[3824]	TEST     	R20 0 ; if not R20 then PC := 291
	282	[3824]	JMP      	291 ; PC := 291
	283	[3825]	GETGLOBAL	R20 K8 ; R20 := 0x0032441c
	284	[3825]	GETGLOBAL	R21 K3 ; R21 := 0x1211d00f
	285	[3825]	SELF     	R21 R21 K12 ; R22 := R21; R21 := R21[0x659d451f]
	286	[3825]	GETGLOBAL	R23 K71 ; R23 := 0xc6f28eaa
	287	[3825]	GETGLOBAL	R24 K73 ; R24 := ZERO_VECTOR
	288	[3825]	OP_LOADBOOL	R25 0 0 ; R25 := false
	289	[3825]	CALL     	R21 5 2 ; R21 := R21(R22,R23,R24,R25)
	290	[3825]	SETTABLE 	R20 K72 R21 ; R20["MapSoundInst"] := R21
	291	[3828]	GETGLOBAL	R20 K40 ; R20 := _T
	292	[3828]	SETTABLE 	R20 K74 K75 ; R20["InStarChart"] := true
	293	[3830]	GETGLOBAL	R20 K10 ; R20 := mRailJack
	294	[3830]	GETGLOBAL	R21 K3 ; R21 := 0x1211d00f
	295	[3830]	SELF     	R21 R21 K53 ; R22 := R21; R21 := R21[0xc7fcada9]
	296	[3830]	GETGLOBAL	R23 K54 ; R23 := 0x0469f296
	297	[3830]	LOADK    	R24 K77 ; R24 := "Void"
	298	[3830]	CALL     	R23 2 0 ; R23,... := R23(R24)
	299	[3830]	CALL     	R21 0 2 ; R21 := R21(R22,...)
	300	[3830]	SETTABLE 	R20 K76 R21 ; R20["voidDecos"] := R21
	301	[3831]	GETGLOBAL	R20 K45 ; R20 := 0x7b998233
	302	[3831]	GETGLOBAL	R21 K10 ; R21 := mRailJack
	303	[3831]	GETTABLE 	R21 R21 K76 ; R21 := R21["voidDecos"]
	304	[3831]	CALL     	R20 2 2 ; R20 := R20(R21)
	305	[3831]	TEST     	R20 1 ; if R20 then PC := 398
	306	[3831]	JMP      	398 ; PC := 398
	307	[3831]	GETGLOBAL	R20 K10 ; R20 := mRailJack
	308	[3831]	GETTABLE 	R20 R20 K76 ; R20 := R20["voidDecos"]
	309	[3831]	LEN      	R20 R20 ; R20 := # R20
	310	[3831]	LT       	0 K63 R20 ; if 0.000000 >= R20 then PC := 398
	311	[3831]	JMP      	398 ; PC := 398
	312	[3832]	GETGLOBAL	R20 K10 ; R20 := mRailJack
	313	[3832]	NEWTABLE 	R21 0 0 ; R21 := {}
	314	[3832]	SETTABLE 	R20 K78 R21 ; R20["voidDecoData"] := R21
	315	[3833]	LOADK    	R20 := 1.000000
	316	[3833]	GETGLOBAL	R21 K10 ; R21 := mRailJack
	317	[3833]	GETTABLE 	R21 R21 K76 ; R21 := R21["voidDecos"]
	318	[3833]	LEN      	R21 R21 ; R21 := # R21
	319	[3833]	LOADK    	R22 := 1.000000
	320	[3833]	FORPREP  	R20 381 ; R20 -= R22; PC := 381
	321	[3834]	GETGLOBAL	R24 K10 ; R24 := mRailJack
	322	[3834]	GETTABLE 	R24 R24 K76 ; R24 := R24["voidDecos"]
	323	[3834]	GETTABLE 	R24 R24 R23 ; R24 := R24[R23]
	324	[3835]	GETGLOBAL	R25 K10 ; R25 := mRailJack
	325	[3835]	GETTABLE 	R25 R25 K78 ; R25 := R25["voidDecoData"]
	326	[3835]	NEWTABLE 	R26 0 0 ; R26 := {}
	327	[3835]	SETTABLE 	R25 R23 R26 ; R25[R23] := R26
	328	[3836]	GETGLOBAL	R25 K10 ; R25 := mRailJack
	329	[3836]	GETTABLE 	R25 R25 K78 ; R25 := R25["voidDecoData"]
	330	[3836]	GETTABLE 	R25 R25 R23 ; R25 := R25[R23]
	331	[3836]	SELF     	R26 R24 K18 ; R27 := R24; R26 := R24[0xd1586535]
	332	[3836]	CALL     	R26 2 2 ; R26 := R26(R27)
	333	[3836]	SETTABLE 	R25 K23 R26 ; R25["pos"] := R26
	334	[3837]	GETGLOBAL	R25 K10 ; R25 := mRailJack
	335	[3837]	GETTABLE 	R25 R25 K78 ; R25 := R25["voidDecoData"]
	336	[3837]	GETTABLE 	R25 R25 R23 ; R25 := R25[R23]
	337	[3837]	SELF     	R26 R24 K80 ; R27 := R24; R26 := R24[0x8fbd942d]
	338	[3837]	CALL     	R26 2 2 ; R26 := R26(R27)
	339	[3837]	SETTABLE 	R25 K79 R26 ; R25[0x000000f8] := R26
	340	[3838]	GETGLOBAL	R25 K10 ; R25 := mRailJack
	341	[3838]	GETTABLE 	R25 R25 K78 ; R25 := R25["voidDecoData"]
	342	[3838]	GETTABLE 	R25 R25 R23 ; R25 := R25[R23]
	343	[3838]	SELF     	R26 R24 K82 ; R27 := R24; R26 := R24[0x79a9e9d3]
	344	[3838]	CALL     	R26 2 2 ; R26 := R26(R27)
	345	[3838]	SETTABLE 	R25 K81 R26 ; R25[0x00000000] := R26
	346	[3839]	GETGLOBAL	R25 K10 ; R25 := mRailJack
	347	[3839]	GETTABLE 	R25 R25 K78 ; R25 := R25["voidDecoData"]
	348	[3839]	GETTABLE 	R25 R25 R23 ; R25 := R25[R23]
	349	[3839]	GETGLOBAL	R26 K10 ; R26 := mRailJack
	350	[3839]	GETTABLE 	R26 R26 K78 ; R26 := R26["voidDecoData"]
	351	[3839]	GETTABLE 	R26 R26 R23 ; R26 := R26[R23]
	352	[3839]	GETTABLE 	R26 R26 K81 ; R26 := R26["BMax"]
	353	[3839]	GETGLOBAL	R27 K10 ; R27 := mRailJack
	354	[3839]	GETTABLE 	R27 R27 K78 ; R27 := R27["voidDecoData"]
	355	[3839]	GETTABLE 	R27 R27 R23 ; R27 := R27[R23]
	356	[3839]	GETTABLE 	R27 R27 K79 ; R27 := R27["BMin"]
	357	[3839]	SUB      	R26 R26 R27 ; R26 := R26 - R27
	358	[3839]	SETTABLE 	R25 K83 R26 ; R25["BScale"] := R26
	359	[3840]	GETGLOBAL	R25 K10 ; R25 := mRailJack
	360	[3840]	GETTABLE 	R25 R25 K78 ; R25 := R25["voidDecoData"]
	361	[3840]	GETTABLE 	R25 R25 R23 ; R25 := R25[R23]
	362	[3840]	GETTABLE 	R25 R25 K83 ; R25 := R25["BScale"]
	363	[3840]	GETGLOBAL	R26 K10 ; R26 := mRailJack
	364	[3840]	GETTABLE 	R26 R26 K78 ; R26 := R26["voidDecoData"]
	365	[3840]	GETTABLE 	R26 R26 R23 ; R26 := R26[R23]
	366	[3840]	GETTABLE 	R26 R26 K83 ; R26 := R26["BScale"]
	367	[3840]	GETTABLE 	R26 R26 K24 ; R26 := R26["x"]
	368	[3840]	DIV      	R26 K7 R26 ; R26 := 1.000000 / R26
	369	[3840]	SETTABLE 	R25 K24 R26 ; R25["x"] := R26
	370	[3841]	GETGLOBAL	R25 K10 ; R25 := mRailJack
	371	[3841]	GETTABLE 	R25 R25 K78 ; R25 := R25["voidDecoData"]
	372	[3841]	GETTABLE 	R25 R25 R23 ; R25 := R25[R23]
	373	[3841]	GETTABLE 	R25 R25 K83 ; R25 := R25["BScale"]
	374	[3841]	GETGLOBAL	R26 K10 ; R26 := mRailJack
	375	[3841]	GETTABLE 	R26 R26 K78 ; R26 := R26["voidDecoData"]
	376	[3841]	GETTABLE 	R26 R26 R23 ; R26 := R26[R23]
	377	[3841]	GETTABLE 	R26 R26 K83 ; R26 := R26["BScale"]
	378	[3841]	GETTABLE 	R26 R26 K25 ; R26 := R26["y"]
	379	[3841]	DIV      	R26 K7 R26 ; R26 := 1.000000 / R26
	380	[3841]	SETTABLE 	R25 K25 R26 ; R25["y"] := R26
	381	[3833]	FORLOOP  	R20 321 ; R20 += R22; if R20 <= R21 then begin PC := 321; R23 := R20 end
	382	[3844]	GETGLOBAL	R25 K10 ; R25 := mRailJack
	383	[3844]	NEWTABLE 	R26 0 0 ; R26 := {}
	384	[3844]	SETTABLE 	R25 K84 R26 ; R25["uvHoles"] := R26
	385	[3845]	LOADK    	R25 := 1.000000
	386	[3845]	LOADK    	R26 := 20.000000
	387	[3845]	LOADK    	R27 := 1.000000
	388	[3845]	FORPREP  	R25 397 ; R25 -= R27; PC := 397
	389	[3846]	GETGLOBAL	R29 K10 ; R29 := mRailJack
	390	[3846]	GETTABLE 	R29 R29 K84 ; R29 := R29["uvHoles"]
	391	[3846]	GETGLOBAL	R30 K54 ; R30 := 0x0469f296
	392	[3846]	LOADK    	R31 K85 ; R31 := "UvHole"
	393	[3846]	SUB      	R32 R28 K7 ; R32 := R28 - 1.000000
	394	[3846]	CONCAT   	R31 R31 R32 ; R31 := R31 .. R32
	395	[3846]	CALL     	R30 2 2 ; R30 := R30(R31)
	396	[3846]	SETTABLE 	R29 R28 R30 ; R29[R28] := R30
	397	[3845]	FORLOOP  	R25 389 ; R25 += R27; if R25 <= R26 then begin PC := 389; R28 := R25 end
	398	[3850]	RETURN   	R0 1 ; return 

function #76 <?:3852,3872> (66 instructions, 264 bytes at 0000021193181210)
0 params, 5 slots, 2 upvalues, 0 locals, 24 constants, 0 functions
	1	[3853]	GETGLOBAL	R0 K0 ; R0 := mMapLoader
	2	[3853]	TEST     	R0 0 ; if not R0 then PC := 9
	3	[3853]	JMP      	9 ; PC := 9
	4	[3853]	GETGLOBAL	R0 K0 ; R0 := mMapLoader
	5	[3853]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xcfd9cd76]
	6	[3853]	CALL     	R0 2 2 ; R0 := R0(R1)
	7	[3853]	TEST     	R0 1 ; if R0 then PC := 10
	8	[3853]	JMP      	10 ; PC := 10
	9	[3854]	RETURN   	R0 1 ; return 
	10	[3857]	GETGLOBAL	R0 K0 ; R0 := mMapLoader
	11	[3857]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x842bdef9]
	12	[3857]	CALL     	R0 2 2 ; R0 := R0(R1)
	13	[3857]	TEST     	R0 0 ; if not R0 then PC := 66
	14	[3857]	JMP      	66 ; PC := 66
	15	[3857]	GETGLOBAL	R0 K3 ; R0 := 0x7b998233
	16	[3857]	GETGLOBAL	R1 K4 ; R1 := mResLoader
	17	[3857]	CALL     	R0 2 2 ; R0 := R0(R1)
	18	[3857]	TEST     	R0 1 ; if R0 then PC := 25
	19	[3857]	JMP      	25 ; PC := 25
	20	[3857]	GETGLOBAL	R0 K4 ; R0 := mResLoader
	21	[3857]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0xd2d3875a]
	22	[3857]	CALL     	R0 2 2 ; R0 := R0(R1)
	23	[3857]	TEST     	R0 0 ; if not R0 then PC := 66
	24	[3857]	JMP      	66 ; PC := 66
	25	[3858]	GETGLOBAL	R0 K0 ; R0 := mMapLoader
	26	[3858]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0xa4497305]
	27	[3858]	CALL     	R0 2 1 ; R0(R1)
	28	[3859]	GETUPVAL 	R0 U0 ; R0 := U0
	29	[3859]	CALL     	R0 1 1 ; R0()
	30	[3861]	GETGLOBAL	R0 K7 ; R0 := mRailJack
	31	[3861]	GETTABLE 	R0 R0 K8 ; R0 := R0["Active"]
	32	[3861]	TEST     	R0 0 ; if not R0 then PC := 66
	33	[3861]	JMP      	66 ; PC := 66
	34	[3861]	GETGLOBAL	R0 K9 ; R0 := 0x25d99d89
	35	[3861]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0x21a1810f]
	36	[3861]	GETGLOBAL	R2 K11 ; R2 := 0x0469f296
	37	[3861]	LOADK    	R3 K12 ; R3 := "RailjackStarchartTutorial"
	38	[3861]	CALL     	R2 2 0 ; R2,... := R2(R3)
	39	[3861]	CALL     	R0 0 2 ; R0 := R0(R1,...)
	40	[3861]	TEST     	R0 1 ; if R0 then PC := 66
	41	[3861]	JMP      	66 ; PC := 66
	42	[3862]	GETGLOBAL	R0 K13 ; R0 := 0x34291f5c
	43	[3862]	GETTABLE 	R0 R0 K14 ; R0 := R0[0xe27b35bb]
	44	[3862]	CALL     	R0 1 2 ; R0 := R0()
	45	[3863]	SETTABLE 	R0 K15 K16 ; R0["dialogType"] := 0.000000
	46	[3864]	SETTABLE 	R0 K17 K18 ; R0["locString"] := "/Lotus/Language/Railjack/RailjackHelp_StarChart"
	47	[3865]	GETGLOBAL	R1 K3 ; R1 := 0x7b998233
	48	[3865]	GETGLOBAL	R2 K19 ; R2 := 0x7683d4b0
	49	[3865]	CALL     	R1 2 2 ; R1 := R1(R2)
	50	[3865]	TEST     	R1 1 ; if R1 then PC := 56
	51	[3865]	JMP      	56 ; PC := 56
	52	[3866]	GETGLOBAL	R1 K19 ; R1 := 0x7683d4b0
	53	[3866]	SELF     	R1 R1 K21 ; R2 := R1; R1 := R1[0xed4e0128]
	54	[3866]	CALL     	R1 2 2 ; R1 := R1(R2)
	55	[3866]	SETTABLE 	R0 K20 R1 ; R0["icon"] := R1
	56	[3868]	GETUPVAL 	R1 U1 ; R1 := U1
	57	[3868]	GETTABLE 	R1 R1 K22 ; R1 := R1[0xe99b84e7]
	58	[3868]	MOVE     	R2 R0 ; R2 := R0
	59	[3868]	CALL     	R1 2 1 ; R1(R2)
	60	[3869]	GETGLOBAL	R1 K9 ; R1 := 0x25d99d89
	61	[3869]	SELF     	R1 R1 K23 ; R2 := R1; R1 := R1[0xbf6c9575]
	62	[3869]	GETGLOBAL	R3 K11 ; R3 := 0x0469f296
	63	[3869]	LOADK    	R4 K12 ; R4 := "RailjackStarchartTutorial"
	64	[3869]	CALL     	R3 2 0 ; R3,... := R3(R4)
	65	[3869]	CALL     	R1 0 1 ; R1(R2,...)
	66	[3872]	RETURN   	R0 1 ; return 

function #77 <?:3874,3889> (36 instructions, 144 bytes at 000002112A605C70)
0 params, 3 slots, 1 upvalue, 0 locals, 14 constants, 0 functions
	1	[3875]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[3875]	GETTABLE 	R0 R0 K1 ; R0 := R0[0xbec1f4ee]
	3	[3875]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	4	[3875]	OP_LOADBOOL	R2 1 0 ; R2 := true
	5	[3875]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	6	[3875]	SETGLOBALHASH	R0 K0 ; mMapLoader := R0
	7	[3876]	GETGLOBAL	R0 K0 ; R0 := mMapLoader
	8	[3876]	SETTABLE 	R0 K3 K4 ; R0["mSyncAvatars"] := true
	9	[3877]	GETGLOBAL	R0 K0 ; R0 := mMapLoader
	10	[3877]	SETTABLE 	R0 K5 K4 ; R0["mUseOperatorForLocal"] := true
	11	[3878]	GETGLOBAL	R0 K0 ; R0 := mMapLoader
	12	[3878]	SETTABLE 	R0 K6 K7 ; R0["mPortrait"] := false
	13	[3880]	GETGLOBAL	R0 K8 ; R0 := mRailJack
	14	[3880]	GETTABLE 	R0 R0 K9 ; R0 := R0["Active"]
	15	[3880]	TEST     	R0 0 ; if not R0 then PC := 27
	16	[3880]	JMP      	27 ; PC := 27
	17	[3881]	GETGLOBAL	R0 K10 ; R0 := 0x7b998233
	18	[3881]	GETGLOBAL	R1 K11 ; R1 := 0x9666d97b
	19	[3881]	CALL     	R0 2 2 ; R0 := R0(R1)
	20	[3881]	TEST     	R0 1 ; if R0 then PC := 36
	21	[3881]	JMP      	36 ; PC := 36
	22	[3882]	GETGLOBAL	R0 K0 ; R0 := mMapLoader
	23	[3882]	SELF     	R0 R0 K12 ; R1 := R0; R0 := R0[0x522b2215]
	24	[3882]	GETGLOBAL	R2 K11 ; R2 := 0x9666d97b
	25	[3882]	CALL     	R0 3 1 ; R0(R1,R2)
	26	[3883]	JMP      	36 ; PC := 36
	27	[3885]	GETGLOBAL	R0 K10 ; R0 := 0x7b998233
	28	[3885]	GETGLOBAL	R1 K13 ; R1 := 0x98c58db3
	29	[3885]	CALL     	R0 2 2 ; R0 := R0(R1)
	30	[3885]	TEST     	R0 1 ; if R0 then PC := 36
	31	[3885]	JMP      	36 ; PC := 36
	32	[3886]	GETGLOBAL	R0 K0 ; R0 := mMapLoader
	33	[3886]	SELF     	R0 R0 K12 ; R1 := R0; R0 := R0[0x522b2215]
	34	[3886]	GETGLOBAL	R2 K13 ; R2 := 0x98c58db3
	35	[3886]	CALL     	R0 3 1 ; R0(R1,R2)
	36	[3889]	RETURN   	R0 1 ; return 

function #78 <?:3891,3898> (29 instructions, 116 bytes at 000002111B2CC5A0)
1 param, 8 slots, 0 upvalues, 0 locals, 11 constants, 0 functions
	1	[3892]	GETGLOBAL	R1 K0 ; R1 := 0xcfc01047
	2	[3892]	GETTABLE 	R2 R0 K1 ; R2 := R0["sectors"]
	3	[3892]	CALL     	R1 2 4 ; R1,R2,R3 := R1(R2)
	4	[3892]	JMP      	25 ; PC := 25
	5	[3893]	GETTABLE 	R6 R5 K2 ; R6 := R5["mission"]
	6	[3893]	GETTABLE 	R6 R6 K3 ; R6 := R6["missionType"]
	7	[3893]	EQ       	0 R6 K5 ; if R6 ~= 31.000000 then PC := 25
	8	[3893]	JMP      	25 ; PC := 25
	9	[3893]	GETGLOBAL	R6 K6 ; R6 := 0x7b998233
	10	[3893]	GETTABLE 	R7 R5 K2 ; R7 := R5["mission"]
	11	[3893]	GETTABLE 	R7 R7 K7 ; R7 := R7["levelOverride"]
	12	[3893]	CALL     	R6 2 2 ; R6 := R6(R7)
	13	[3893]	TEST     	R6 1 ; if R6 then PC := 25
	14	[3893]	JMP      	25 ; PC := 25
	15	[3893]	GETTABLE 	R6 R5 K2 ; R6 := R5["mission"]
	16	[3893]	GETTABLE 	R6 R6 K8 ; R6 := R6["faction"]
	17	[3893]	EQ       	1 R6 K9 ; if R6 == 0.000000 then PC := 23
	18	[3893]	JMP      	23 ; PC := 23
	19	[3893]	GETTABLE 	R6 R5 K2 ; R6 := R5["mission"]
	20	[3893]	GETTABLE 	R6 R6 K8 ; R6 := R6["faction"]
	21	[3893]	EQ       	0 R6 K10 ; if R6 ~= 1.000000 then PC := 25
	22	[3893]	JMP      	25 ; PC := 25
	23	[3894]	OP_LOADBOOL	R6 1 0 ; R6 := true
	24	[3894]	RETURN   	R6 2 ; return R6 
	25	[3892]	TFORLOOP 	R1 2 ; R4,R5 := R1(R2,R3); if R4 ~= nil then begin PC = 5; R3 := R4 end
	26	[3895]	JMP      	5 ; PC := 5
	27	[3897]	OP_LOADBOOL	R6 0 0 ; R6 := false
	28	[3897]	RETURN   	R6 2 ; return R6 
	29	[3898]	RETURN   	R0 1 ; return 

function #79 <?:3900,3906> (13 instructions, 52 bytes at 000002113816B4C0)
2 params, 4 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[3901]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[3901]	MOVE     	R3 R1 ; R3 := R1
	3	[3901]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[3901]	TEST     	R2 0 ; if not R2 then PC := 8
	5	[3901]	JMP      	8 ; PC := 8
	6	[3902]	OP_LOADBOOL	R2 0 0 ; R2 := false
	7	[3902]	RETURN   	R2 2 ; return R2 
	8	[3904]	SELF     	R2 R1 K1 ; R3 := R1; R2 := R1[0xed4e0128]
	9	[3904]	CALL     	R2 2 2 ; R2 := R2(R3)
	10	[3904]	SETTABLE 	R0 R2 K2 ; R0[R2] := true
	11	[3905]	OP_LOADBOOL	R2 1 0 ; R2 := true
	12	[3905]	RETURN   	R2 2 ; return R2 
	13	[3906]	RETURN   	R0 1 ; return 

function #80 <?:3908,3962> (120 instructions, 480 bytes at 000002113816B5F0)
0 params, 28 slots, 4 upvalues, 0 locals, 26 constants, 0 functions
	1	[3909]	NEWTABLE 	R0 0 0 ; R0 := {}
	2	[3911]	GETGLOBAL	R1 K0 ; R1 := 0x76ea806b
	3	[3911]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x3f3ae64c]
	4	[3911]	LOADK    	R3 := 0.000000
	5	[3911]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	6	[3912]	GETGLOBAL	R2 K2 ; R2 := 0x7b998233
	7	[3912]	MOVE     	R3 R1 ; R3 := R1
	8	[3912]	CALL     	R2 2 2 ; R2 := R2(R3)
	9	[3912]	TEST     	R2 1 ; if R2 then PC := 29
	10	[3912]	JMP      	29 ; PC := 29
	11	[3913]	SELF     	R2 R1 K3 ; R3 := R1; R2 := R1[0x80563238]
	12	[3913]	CALL     	R2 2 2 ; R2 := R2(R3)
	13	[3914]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	14	[3914]	MOVE     	R4 R2 ; R4 := R2
	15	[3914]	CALL     	R3 2 2 ; R3 := R3(R4)
	16	[3914]	TEST     	R3 1 ; if R3 then PC := 29
	17	[3914]	JMP      	29 ; PC := 29
	18	[3915]	SELF     	R3 R2 K4 ; R4 := R2; R3 := R2[0x62c81b76]
	19	[3915]	CALL     	R3 2 2 ; R3 := R3(R4)
	20	[3916]	GETGLOBAL	R4 K2 ; R4 := 0x7b998233
	21	[3916]	GETTABLE 	R5 R3 K5 ; R5 := R3["mShip"]
	22	[3916]	CALL     	R4 2 2 ; R4 := R4(R5)
	23	[3916]	TEST     	R4 1 ; if R4 then PC := 29
	24	[3916]	JMP      	29 ; PC := 29
	25	[3917]	GETTABLE 	R4 R3 K5 ; R4 := R3["mShip"]
	26	[3917]	SELF     	R4 R4 K6 ; R5 := R4; R4 := R4[0xed4e0128]
	27	[3917]	CALL     	R4 2 2 ; R4 := R4(R5)
	28	[3917]	SETTABLE 	R0 R4 K7 ; R0[R4] := true
	29	[3922]	LOADK    	R4 := 1.000000
	30	[3922]	GETGLOBAL	R5 K8 ; R5 := mSuperRegions
	31	[3922]	LEN      	R5 R5 ; R5 := # R5
	32	[3922]	LOADK    	R6 := 1.000000
	33	[3922]	FORPREP  	R4 40 ; R4 -= R6; PC := 40
	34	[3923]	GETGLOBAL	R8 K8 ; R8 := mSuperRegions
	35	[3923]	GETTABLE 	R8 R8 R7 ; R8 := R8[R7]
	36	[3924]	GETUPVAL 	R9 U0 ; R9 := U0
	37	[3924]	MOVE     	R10 R0 ; R10 := R0
	38	[3924]	GETTABLE 	R11 R8 K9 ; R11 := R8["deco"]
	39	[3924]	CALL     	R9 3 1 ; R9(R10,R11)
	40	[3922]	FORLOOP  	R4 34 ; R4 += R6; if R4 <= R5 then begin PC := 34; R7 := R4 end
	41	[3927]	LOADK    	R9 := 1.000000
	42	[3927]	GETGLOBAL	R10 K10 ; R10 := mRegions
	43	[3927]	LEN      	R10 R10 ; R10 := # R10
	44	[3927]	LOADK    	R11 := 1.000000
	45	[3927]	FORPREP  	R9 79 ; R9 -= R11; PC := 79
	46	[3928]	GETGLOBAL	R13 K10 ; R13 := mRegions
	47	[3928]	GETTABLE 	R13 R13 R12 ; R13 := R13[R12]
	48	[3931]	GETGLOBAL	R14 K11 ; R14 := mRailJack
	49	[3931]	GETTABLE 	R14 R14 K12 ; R14 := R14["Active"]
	50	[3931]	TEST     	R14 0 ; if not R14 then PC := 65
	51	[3931]	JMP      	65 ; PC := 65
	52	[3932]	GETGLOBAL	R14 K11 ; R14 := mRailJack
	53	[3932]	GETTABLE 	R14 R14 K13 ; R14 := R14["Regions"]
	54	[3932]	GETUPVAL 	R15 U1 ; R15 := U1
	55	[3932]	GETTABLE 	R15 R15 K14 ; R15 := R15["REGION_ID_DOJO"]
	56	[3932]	EQ       	1 R12 R15 ; if R12 == R15 then PC := 63
	57	[3932]	JMP      	63 ; PC := 63
	58	[3932]	GETUPVAL 	R15 U2 ; R15 := U2
	59	[3932]	MOVE     	R16 R13 ; R16 := R13
	60	[3932]	CALL     	R15 2 2 ; R15 := R15(R16)
	61	[3932]	JMP      	64 ; PC := 64
	62	[3932]	OP_LOADBOOL	R15 0 1 ; R15 := false; PC := 63
	63	[3932]	OP_LOADBOOL	R15 1 0 ; R15 := true
	64	[3932]	SETTABLE 	R14 R12 R15 ; R14[R12] := R15
	65	[3938]	GETUPVAL 	R14 U0 ; R14 := U0
	66	[3938]	MOVE     	R15 R0 ; R15 := R0
	67	[3938]	GETTABLE 	R16 R13 K15 ; R16 := R13["zoomedInEffects"]
	68	[3938]	CALL     	R14 3 1 ; R14(R15,R16)
	69	[3940]	GETUPVAL 	R14 U0 ; R14 := U0
	70	[3940]	MOVE     	R15 R0 ; R15 := R0
	71	[3940]	GETTABLE 	R16 R13 K16 ; R16 := R13["decoRedux"]
	72	[3940]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	73	[3940]	TEST     	R14 1 ; if R14 then PC := 79
	74	[3940]	JMP      	79 ; PC := 79
	75	[3941]	GETUPVAL 	R14 U0 ; R14 := U0
	76	[3941]	MOVE     	R15 R0 ; R15 := R0
	77	[3941]	GETTABLE 	R16 R13 K9 ; R16 := R13["deco"]
	78	[3941]	CALL     	R14 3 1 ; R14(R15,R16)
	79	[3927]	FORLOOP  	R9 46 ; R9 += R11; if R9 <= R10 then begin PC := 46; R12 := R9 end
	80	[3945]	LOADK    	R14 := 1.000000
	81	[3945]	GETGLOBAL	R15 K17 ; R15 := mMapNodes
	82	[3945]	LEN      	R15 R15 ; R15 := # R15
	83	[3945]	LOADK    	R16 := 1.000000
	84	[3945]	FORPREP  	R14 98 ; R14 -= R16; PC := 98
	85	[3946]	GETGLOBAL	R18 K17 ; R18 := mMapNodes
	86	[3946]	GETTABLE 	R18 R18 R17 ; R18 := R18[R17]
	87	[3947]	GETGLOBAL	R19 K18 ; R19 := 0xce225efa
	88	[3947]	CALL     	R19 1 1 ; R19()
	89	[3948]	GETUPVAL 	R19 U3 ; R19 := U3
	90	[3948]	MOVE     	R20 R18 ; R20 := R18
	91	[3948]	CALL     	R19 2 2 ; R19 := R19(R20)
	92	[3948]	TEST     	R19 0 ; if not R19 then PC := 98
	93	[3948]	JMP      	98 ; PC := 98
	94	[3949]	GETUPVAL 	R19 U0 ; R19 := U0
	95	[3949]	MOVE     	R20 R0 ; R20 := R0
	96	[3949]	GETTABLE 	R21 R18 K9 ; R21 := R18["deco"]
	97	[3949]	CALL     	R19 3 1 ; R19(R20,R21)
	98	[3945]	FORLOOP  	R14 85 ; R14 += R16; if R14 <= R15 then begin PC := 85; R17 := R14 end
	99	[3953]	NEWTABLE 	R19 0 0 ; R19 := {}
	100	[3955]	GETGLOBAL	R20 K19 ; R20 := 0xcfc01047
	101	[3955]	MOVE     	R21 R0 ; R21 := R0
	102	[3955]	CALL     	R20 2 4 ; R20,R21,R22 := R20(R21)
	103	[3955]	JMP      	109 ; PC := 109
	104	[3956]	GETGLOBAL	R25 K20 ; R25 := 0x33bdd652
	105	[3956]	GETTABLE 	R25 R25 K21 ; R25 := R25[0x23d5322f]
	106	[3956]	MOVE     	R26 R19 ; R26 := R19
	107	[3956]	MOVE     	R27 R23 ; R27 := R23
	108	[3956]	CALL     	R25 3 1 ; R25(R26,R27)
	109	[3955]	TFORLOOP 	R20 2 ; R23,R24 := R20(R21,R22); if R23 ~= nil then begin PC = 104; R22 := R23 end
	110	[3956]	JMP      	104 ; PC := 104
	111	[3959]	LEN      	R25 R19 ; R25 := # R19
	112	[3959]	LT       	0 K22 R25 ; if 0.000000 >= R25 then PC := 120
	113	[3959]	JMP      	120 ; PC := 120
	114	[3960]	GETGLOBAL	R25 K24 ; R25 := 0xbd496aa1
	115	[3960]	GETTABLE 	R25 R25 K25 ; R25 := R25[0x42645da3]
	116	[3960]	MOVE     	R26 R19 ; R26 := R19
	117	[3960]	OP_LOADBOOL	R27 1 0 ; R27 := true
	118	[3960]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	119	[3960]	SETGLOBALHASH	R25 K23 ; mResLoader := R25
	120	[3962]	RETURN   	R0 1 ; return 

function #81 <?:3964,3989> (38 instructions, 152 bytes at 000002111ECD7680)
0 params, 13 slots, 1 upvalue, 0 locals, 12 constants, 3 functions
	1	[3965]	LOADK    	R0 := 3000.000000
	2	[3966]	UNM      	R1 R0 ; R1 := ^ R0
	3	[3967]	MOVE     	R2 R0 ; R2 := R0
	4	[3968]	UNM      	R3 R0 ; R3 := ^ R0
	5	[3969]	MOVE     	R4 R0 ; R4 := R0
	6	[3971]	GETGLOBAL	R5 K0 ; R5 := 0x2d0fad09
	7	[3971]	LOADK    	R6 K1 ; R6 := "EE.Interface.Components.DragScroll"
	8	[3971]	CALL     	R5 2 2 ; R5 := R5(R6)
	9	[3972]	GETTABLE 	R6 R5 K3 ; R6 := R5[0xae6791ba]
	10	[3972]	GETGLOBAL	R7 K4 ; R7 := 0xae91e43b
	11	[3972]	LOADK    	R8 K5 ; R8 := "Board"
	12	[3972]	MOVE     	R9 R1 ; R9 := R1
	13	[3972]	MOVE     	R10 R3 ; R10 := R3
	14	[3972]	MOVE     	R11 R2 ; R11 := R2
	15	[3972]	MOVE     	R12 R4 ; R12 := R4
	16	[3972]	CALL     	R6 7 2 ; R6 := R6(R7,R8,R9,R10,R11,R12)
	17	[3972]	SETGLOBALHASH	R6 K2 ; mDrag := R6
	18	[3973]	GETGLOBAL	R6 K2 ; R6 := mDrag
	19	[3976]	CLOSURE  	R7 0 ; R7 := closure(Function #1)
	20	[3976]	SETTABLE 	R6 K6 R7 ; R6["OnScroll"] := R7
	21	[3977]	GETGLOBAL	R6 K2 ; R6 := mDrag
	22	[3982]	CLOSURE  	R7 1 ; R7 := closure(Function #2)
	23	[3982]	SETTABLE 	R6 K7 R7 ; R6["mOnStopDrag"] := R7
	24	[3983]	GETGLOBAL	R6 K2 ; R6 := mDrag
	25	[3986]	CLOSURE  	R7 2 ; R7 := closure(Function #3)
	26	[3986]	GETUPVAL 	R0 U0 ; R0 := U0
	27	[3986]	SETTABLE 	R6 K8 R7 ; R6["mOnDeselectCallback"] := R7
	28	[3987]	GETGLOBAL	R6 K2 ; R6 := mDrag
	29	[3987]	SELF     	R6 R6 K9 ; R7 := R6; R6 := R6[0x4c4f8717]
	30	[3987]	LOADK    	R8 K10 ; R8 := "x"
	31	[3987]	LOADK    	R9 := 0.500000
	32	[3987]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	33	[3988]	GETGLOBAL	R6 K2 ; R6 := mDrag
	34	[3988]	SELF     	R6 R6 K9 ; R7 := R6; R6 := R6[0x4c4f8717]
	35	[3988]	LOADK    	R8 K11 ; R8 := "y"
	36	[3988]	LOADK    	R9 := 0.500000
	37	[3988]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	38	[3989]	RETURN   	R0 1 ; return 

function #82 <?:3991,4003> (19 instructions, 76 bytes at 000002111B2CDEE0)
0 params, 2 slots, 1 upvalue, 0 locals, 11 constants, 0 functions
	1	[3992]	NEWTABLE 	R0 0 0 ; R0 := {}
	2	[3992]	SETUPVAL 	R0 U0 ; U0 := R0
	3	[3993]	GETUPVAL 	R0 U0 ; R0 := U0
	4	[3993]	SETTABLE 	R0 K0 K1 ; R0["mMovingRegion"] := nil
	5	[3994]	GETUPVAL 	R0 U0 ; R0 := U0
	6	[3994]	SETTABLE 	R0 K2 K1 ; R0["mMovingNode"] := nil
	7	[3995]	GETUPVAL 	R0 U0 ; R0 := U0
	8	[3995]	SETTABLE 	R0 K3 K1 ; R0["mEdgeNode1"] := nil
	9	[3996]	GETUPVAL 	R0 U0 ; R0 := U0
	10	[3996]	SETTABLE 	R0 K4 K1 ; R0["mEdgeNode2"] := nil
	11	[3998]	GETUPVAL 	R0 U0 ; R0 := U0
	12	[3998]	SETTABLE 	R0 K5 K1 ; R0["mInitialPosition"] := nil
	13	[3999]	GETUPVAL 	R0 U0 ; R0 := U0
	14	[3999]	SETTABLE 	R0 K6 K1 ; R0["mInitialWorldCursor"] := nil
	15	[4000]	GETUPVAL 	R0 U0 ; R0 := U0
	16	[4000]	SETTABLE 	R0 K7 K8 ; R0["mRotationAxis"] := "heading"
	17	[4002]	GETUPVAL 	R0 U0 ; R0 := U0
	18	[4002]	SETTABLE 	R0 K9 K10 ; R0["mFramingRegion"] := 0.000000
	19	[4003]	RETURN   	R0 1 ; return 

function #83 <?:4005,4013> (21 instructions, 84 bytes at 000002112A0633D0)
0 params, 2 slots, 2 upvalues, 0 locals, 6 constants, 0 functions
	1	[4006]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[4006]	GETTABLE 	R0 R0 K0 ; R0 := R0["mShiftDown"]
	3	[4006]	TEST     	R0 0 ; if not R0 then PC := 12
	4	[4006]	JMP      	12 ; PC := 12
	5	[4006]	GETUPVAL 	R0 U0 ; R0 := U0
	6	[4006]	GETTABLE 	R0 R0 K1 ; R0 := R0["mControlDown"]
	7	[4006]	TEST     	R0 0 ; if not R0 then PC := 12
	8	[4006]	JMP      	12 ; PC := 12
	9	[4007]	GETUPVAL 	R0 U1 ; R0 := U1
	10	[4007]	SETTABLE 	R0 K2 K3 ; R0["mRotationAxis"] := "bank"
	11	[4007]	JMP      	21 ; PC := 21
	12	[4008]	GETUPVAL 	R0 U0 ; R0 := U0
	13	[4008]	GETTABLE 	R0 R0 K1 ; R0 := R0["mControlDown"]
	14	[4008]	TEST     	R0 0 ; if not R0 then PC := 19
	15	[4008]	JMP      	19 ; PC := 19
	16	[4009]	GETUPVAL 	R0 U1 ; R0 := U1
	17	[4009]	SETTABLE 	R0 K2 K4 ; R0["mRotationAxis"] := "pitch"
	18	[4009]	JMP      	21 ; PC := 21
	19	[4011]	GETUPVAL 	R0 U1 ; R0 := U1
	20	[4011]	SETTABLE 	R0 K2 K5 ; R0["mRotationAxis"] := "heading"
	21	[4013]	RETURN   	R0 1 ; return 

function #84 <?:4015,4029> (51 instructions, 204 bytes at 0000021137AB3560)
1 param, 6 slots, 1 upvalue, 0 locals, 19 constants, 0 functions
	1	[4016]	GETGLOBAL	R1 K0 ; R1 := cjson
	2	[4016]	GETTABLE 	R1 R1 K1 ; R1 := R1[0xb139d7bc]
	3	[4016]	MOVE     	R2 R0 ; R2 := R0
	4	[4016]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[4018]	GETGLOBAL	R2 K2 ; R2 := 0xe7f2b02f
	6	[4018]	SELF     	R2 R2 K3 ; R3 := R2; R2 := R2[0xd8f4f9d0]
	7	[4018]	MOVE     	R4 R1 ; R4 := R1
	8	[4018]	CALL     	R2 3 1 ; R2(R3,R4)
	9	[4019]	GETGLOBAL	R2 K4 ; R2 := 0xbe190284
	10	[4019]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0xf2deaf69]
	11	[4019]	GETGLOBAL	R4 K6 ; R4 := gLotusHubGameRulesType
	12	[4019]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	13	[4019]	TEST     	R2 0 ; if not R2 then PC := 51
	14	[4019]	JMP      	51 ; PC := 51
	15	[4020]	GETGLOBAL	R2 K7 ; R2 := 0x76ea806b
	16	[4020]	SELF     	R2 R2 K8 ; R3 := R2; R2 := R2[0x3f3ae64c]
	17	[4020]	LOADK    	R4 := 0.000000
	18	[4020]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	19	[4020]	SELF     	R2 R2 K9 ; R3 := R2; R2 := R2[0x80563238]
	20	[4020]	CALL     	R2 2 2 ; R2 := R2(R3)
	21	[4021]	GETGLOBAL	R3 K10 ; R3 := 0x7f5022cf
	22	[4021]	GETTABLE 	R3 R3 K11 ; R3 := R3[0xa5c556b9]
	23	[4021]	GETTABLE 	R4 R0 K12 ; R4 := R0["name"]
	24	[4021]	GETUPVAL 	R5 U0 ; R5 := U0
	25	[4021]	GETTABLE 	R5 R5 K13 ; R5 := R5["HUB_TAG"]
	26	[4021]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	27	[4021]	EQ       	1 R3 K14 ; if R3 == nil then PC := 33
	28	[4021]	JMP      	33 ; PC := 33
	29	[4022]	SELF     	R3 R2 K15 ; R4 := R2; R3 := R2[0xd40ba817]
	30	[4022]	LOADK    	R5 := 0.000000
	31	[4022]	CALL     	R3 3 1 ; R3(R4,R5)
	32	[4022]	JMP      	51 ; PC := 51
	33	[4023]	GETGLOBAL	R3 K4 ; R3 := 0xbe190284
	34	[4023]	SELF     	R3 R3 K17 ; R4 := R3; R3 := R3[0x4414661f]
	35	[4023]	CALL     	R3 2 2 ; R3 := R3(R4)
	36	[4023]	TEST     	R3 0 ; if not R3 then PC := 48
	37	[4023]	JMP      	48 ; PC := 48
	38	[4023]	GETGLOBAL	R3 K4 ; R3 := 0xbe190284
	39	[4023]	SELF     	R3 R3 K5 ; R4 := R3; R3 := R3[0xf2deaf69]
	40	[4023]	GETGLOBAL	R5 K18 ; R5 := gLotusDojoGameRulesType
	41	[4023]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	42	[4023]	TEST     	R3 1 ; if R3 then PC := 48
	43	[4023]	JMP      	48 ; PC := 48
	44	[4024]	SELF     	R3 R2 K15 ; R4 := R2; R3 := R2[0xd40ba817]
	45	[4024]	LOADK    	R5 := 6.000000
	46	[4024]	CALL     	R3 3 1 ; R3(R4,R5)
	47	[4024]	JMP      	51 ; PC := 51
	48	[4026]	SELF     	R3 R2 K15 ; R4 := R2; R3 := R2[0xd40ba817]
	49	[4026]	LOADK    	R5 := 1.000000
	50	[4026]	CALL     	R3 3 1 ; R3(R4,R5)
	51	[4029]	RETURN   	R0 1 ; return 

function #85 <?:4031,4038> (16 instructions, 64 bytes at 000002117FC05A10)
1 param, 3 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[4032]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[4032]	MOVE     	R2 R0 ; R2 := R0
	3	[4032]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[4032]	EQ       	0 R1 K2 ; if R1 ~= 4.000000 then PC := 16
	5	[4032]	JMP      	16 ; PC := 16
	6	[4033]	GETGLOBAL	R1 K3 ; R1 := _T
	7	[4033]	GETTABLE 	R1 R1 K4 ; R1 := R1["sectorInfo"]
	8	[4033]	EQ       	1 R1 K5 ; if R1 == nil then PC := 16
	9	[4033]	JMP      	16 ; PC := 16
	10	[4034]	GETUPVAL 	R1 U0 ; R1 := U0
	11	[4034]	GETGLOBAL	R2 K3 ; R2 := _T
	12	[4034]	GETTABLE 	R2 R2 K4 ; R2 := R2["sectorInfo"]
	13	[4034]	CALL     	R1 2 1 ; R1(R2)
	14	[4035]	GETGLOBAL	R1 K3 ; R1 := _T
	15	[4035]	SETTABLE 	R1 K4 K5 ; R1["sectorInfo"] := nil
	16	[4038]	RETURN   	R0 1 ; return 

function #86 <?:4040,4042> (6 instructions, 24 bytes at 0000021116804D10)
1 param, 4 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[4041]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[4041]	GETTABLE 	R1 R1 K0 ; R1 := R1[0xdedfded7]
	3	[4041]	MOVE     	R2 R0 ; R2 := R0
	4	[4041]	LOADK    	R3 K1 ; R3 := "AbortConfirm"
	5	[4041]	CALL     	R1 3 1 ; R1(R2,R3)
	6	[4042]	RETURN   	R0 1 ; return 

function #87 <?:4044,4050> (15 instructions, 60 bytes at 0000021116804DA0)
2 params, 6 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[4045]	GETGLOBAL	R2 K0 ; R2 := 0xbe190284
	2	[4045]	SELF     	R2 R2 K1 ; R3 := R2; R2 := R2[0xd7d79b74]
	3	[4045]	CALL     	R2 2 2 ; R2 := R2(R3)
	4	[4046]	GETGLOBAL	R3 K2 ; R3 := 0x7b998233
	5	[4046]	MOVE     	R4 R2 ; R4 := R2
	6	[4046]	CALL     	R3 2 2 ; R3 := R3(R4)
	7	[4046]	TEST     	R3 0 ; if not R3 then PC := 11
	8	[4046]	JMP      	11 ; PC := 11
	9	[4047]	OP_LOADBOOL	R3 0 0 ; R3 := false
	10	[4047]	RETURN   	R3 2 ; return R3 
	11	[4049]	SELF     	R3 R2 K3 ; R4 := R2; R3 := R2[0x371db6f9]
	12	[4049]	MOVE     	R5 R1 ; R5 := R1
	13	[4049]	TAILCALL 	R3 3 0 ; R3,... := R3(R4,R5)
	14	[4049]	RETURN   	R3 0 ; return R3,... 
	15	[4050]	RETURN   	R0 1 ; return 

function #88 <?:4052,4053> (1 instruction, 4 bytes at 00000211927E6620)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[4053]	RETURN   	R0 1 ; return 

function #89 <?:4055,4057> (3 instructions, 12 bytes at 0000021191E9B2A0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[4056]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[4056]	CALL     	R0 1 1 ; R0()
	3	[4057]	RETURN   	R0 1 ; return 

function #90 <?:4062,4064> (25 instructions, 100 bytes at 0000021191E9B330)
1 param, 4 slots, 1 upvalue, 0 locals, 8 constants, 0 functions
	1	[4063]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[4063]	GETTABLE 	R1 R1 K1 ; R1 := R1["gQuestMission"]
	3	[4063]	TEST     	R1 0 ; if not R1 then PC := 24
	4	[4063]	JMP      	24 ; PC := 24
	5	[4063]	GETGLOBAL	R1 K2 ; R1 := mRailJack
	6	[4063]	GETTABLE 	R1 R1 K3 ; R1 := R1["Active"]
	7	[4063]	TEST     	R1 0 ; if not R1 then PC := 24
	8	[4063]	JMP      	24 ; PC := 24
	9	[4063]	GETUPVAL 	R1 U0 ; R1 := U0
	10	[4063]	MOVE     	R2 R0 ; R2 := R0
	11	[4063]	CALL     	R1 2 2 ; R1 := R1(R2)
	12	[4063]	TEST     	R1 0 ; if not R1 then PC := 24
	13	[4063]	JMP      	24 ; PC := 24
	14	[4063]	GETGLOBAL	R1 K4 ; R1 := 0xe7f2b02f
	15	[4063]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xb321d806]
	16	[4063]	CALL     	R1 2 2 ; R1 := R1(R2)
	17	[4063]	GETGLOBAL	R2 K6 ; R2 := 0x89326c93
	18	[4063]	SELF     	R2 R2 K7 ; R3 := R2; R2 := R2[0x18d05d30]
	19	[4063]	CALL     	R2 2 2 ; R2 := R2(R3)
	20	[4063]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 23
	21	[4063]	JMP      	23 ; PC := 23
	22	[4063]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 23
	23	[4063]	OP_LOADBOOL	R1 1 0 ; R1 := true
	24	[4063]	RETURN   	R1 2 ; return R1 
	25	[4064]	RETURN   	R0 1 ; return 

function #91 <?:4066,4095> (90 instructions, 360 bytes at 0000021135E9DC60)
1 param, 20 slots, 2 upvalues, 0 locals, 29 constants, 0 functions
	1	[4067]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[4067]	GETTABLE 	R1 R1 K0 ; R1 := R1[0x5e35d4d6]
	3	[4067]	CALL     	R1 1 2 ; R1 := R1()
	4	[4068]	GETGLOBAL	R2 K1 ; R2 := 0x7b998233
	5	[4068]	MOVE     	R3 R1 ; R3 := R1
	6	[4068]	CALL     	R2 2 2 ; R2 := R2(R3)
	7	[4068]	TEST     	R2 0 ; if not R2 then PC := 11
	8	[4068]	JMP      	11 ; PC := 11
	9	[4069]	OP_LOADBOOL	R2 0 0 ; R2 := false
	10	[4069]	RETURN   	R2 2 ; return R2 
	11	[4072]	SELF     	R2 R1 K2 ; R3 := R1; R2 := R1[0xc18bf6f0]
	12	[4072]	GETGLOBAL	R4 K3 ; R4 := 0x0469f296
	13	[4072]	MOVE     	R5 R0 ; R5 := R0
	14	[4072]	CALL     	R4 2 0 ; R4,... := R4(R5)
	15	[4072]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	16	[4073]	TEST     	R2 0 ; if not R2 then PC := 88
	17	[4073]	JMP      	88 ; PC := 88
	18	[4073]	GETTABLE 	R3 R2 K4 ; R3 := R2["skillReqs"]
	19	[4073]	LEN      	R3 R3 ; R3 := # R3
	20	[4073]	LT       	0 K5 R3 ; if 0.000000 >= R3 then PC := 88
	21	[4073]	JMP      	88 ; PC := 88
	22	[4074]	NEWTABLE 	R3 6 0 ; R3 := {}
	23	[4074]	LOADK    	R4 K6 ; R4 := "Intrinsics"
	24	[4074]	LOADK    	R5 K7 ; R5 := "RailjackIntrinsicPilot"
	25	[4074]	LOADK    	R6 K8 ; R6 := "RailjackIntrinsicGunner"
	26	[4074]	LOADK    	R7 K9 ; R7 := "RailjackIntrinsicTactic"
	27	[4074]	LOADK    	R8 K10 ; R8 := "RailjackIntrinsicEngineer"
	28	[4074]	LOADK    	R9 K11 ; R9 := "RailjackIntrinsicCommand"
	29	[4074]	SETLIST  	R3 6 1 ; R3[(1-1)*FPF+i] := R(3+i), 1 <= i <= 6
	30	[4075]	GETGLOBAL	R4 K12 ; R4 := 0xcfc01047
	31	[4075]	GETTABLE 	R5 R2 K4 ; R5 := R2["skillReqs"]
	32	[4075]	CALL     	R4 2 4 ; R4,R5,R6 := R4(R5)
	33	[4075]	JMP      	86 ; PC := 86
	34	[4076]	LOADK    	R9 := 0.000000
	35	[4077]	GETTABLE 	R10 R8 K13 ; R10 := R8["skill"]
	36	[4077]	EQ       	0 R10 K5 ; if R10 ~= 0.000000 then PC := 53
	37	[4077]	JMP      	53 ; PC := 53
	38	[4078]	LOADK    	R10 := 0.000000
	39	[4078]	LOADK    	R11 := 5.000000
	40	[4078]	LOADK    	R12 := 1.000000
	41	[4078]	FORPREP  	R10 51 ; R10 -= R12; PC := 51
	42	[4079]	GETGLOBAL	R14 K15 ; R14 := 0x5bced4c4
	43	[4079]	GETTABLE 	R14 R14 K16 ; R14 := R14[0xb62ecfe0]
	44	[4079]	MOVE     	R15 R9 ; R15 := R9
	45	[4079]	GETGLOBAL	R16 K17 ; R16 := 0x25d99d89
	46	[4079]	SELF     	R16 R16 K18 ; R17 := R16; R16 := R16[0x659fead0]
	47	[4079]	MOVE     	R18 R13 ; R18 := R13
	48	[4079]	CALL     	R16 3 0 ; R16,... := R16(R17,R18)
	49	[4079]	CALL     	R14 0 2 ; R14 := R14(R15,...)
	50	[4079]	MOVE     	R9 R14 ; R9 := R14
	51	[4078]	FORLOOP  	R10 42 ; R10 += R12; if R10 <= R11 then begin PC := 42; R13 := R10 end
	52	[4080]	JMP      	58 ; PC := 58
	53	[4082]	GETGLOBAL	R14 K17 ; R14 := 0x25d99d89
	54	[4082]	SELF     	R14 R14 K18 ; R15 := R14; R14 := R14[0x659fead0]
	55	[4082]	GETTABLE 	R16 R8 K13 ; R16 := R8["skill"]
	56	[4082]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	57	[4082]	MOVE     	R9 R14 ; R9 := R14
	58	[4084]	GETTABLE 	R14 R8 K19 ; R14 := R8["req"]
	59	[4084]	LT       	0 R9 R14 ; if R9 >= R14 then PC := 86
	60	[4084]	JMP      	86 ; PC := 86
	61	[4085]	GETTABLE 	R14 R8 K13 ; R14 := R8["skill"]
	62	[4085]	ADD      	R14 R14 K20 ; R14 := R14 + 1.000000
	63	[4085]	GETTABLE 	R14 R3 R14 ; R14 := R3[R14]
	64	[4086]	GETGLOBAL	R15 K21 ; R15 := 0x7f5022cf
	65	[4086]	GETTABLE 	R15 R15 K22 ; R15 := R15[0x3f3e4d12]
	66	[4086]	GETGLOBAL	R16 K23 ; R16 := 0x603636ad
	67	[4086]	LOADK    	R17 K24 ; R17 := "/Lotus/Language/Intrinsics/"
	68	[4086]	MOVE     	R18 R14 ; R18 := R14
	69	[4086]	CONCAT   	R17 R17 R18 ; R17 := R17 .. R18
	70	[4086]	LOADNIL  	R18 R18 ; R18 := nil
	71	[4086]	CALL     	R16 3 0 ; R16,... := R16(R17,R18)
	72	[4086]	CALL     	R15 0 2 ; R15 := R15(R16,...)
	73	[4087]	GETGLOBAL	R16 K23 ; R16 := 0x603636ad
	74	[4087]	LOADK    	R17 K25 ; R17 := "/Lotus/Language/Menu/InsufficientSkill"
	75	[4087]	NEWTABLE 	R18 0 2 ; R18 := {}
	76	[4087]	SETTABLE 	R18 K26 R15 ; R18["SKILL"] := R15
	77	[4087]	GETTABLE 	R19 R8 K19 ; R19 := R8["req"]
	78	[4087]	SETTABLE 	R18 K27 R19 ; R18["RANK"] := R19
	79	[4087]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	80	[4088]	GETUPVAL 	R17 U1 ; R17 := U1
	81	[4088]	GETTABLE 	R17 R17 K28 ; R17 := R17[0xe0cba3ca]
	82	[4088]	MOVE     	R18 R16 ; R18 := R16
	83	[4088]	CALL     	R17 2 1 ; R17(R18)
	84	[4089]	OP_LOADBOOL	R17 0 0 ; R17 := false
	85	[4089]	RETURN   	R17 2 ; return R17 
	86	[4075]	TFORLOOP 	R4 2 ; R7,R8 := R4(R5,R6); if R7 ~= nil then begin PC = 34; R6 := R7 end
	87	[4090]	JMP      	34 ; PC := 34
	88	[4094]	OP_LOADBOOL	R17 1 0 ; R17 := true
	89	[4094]	RETURN   	R17 2 ; return R17 
	90	[4095]	RETURN   	R0 1 ; return 

function #92 <?:4097,4208> (247 instructions, 988 bytes at 000002112A1AEB10)
6 params, 28 slots, 8 upvalues, 0 locals, 58 constants, 0 functions
	1	[4100]	GETUPVAL 	R6 U0 ; R6 := U0
	2	[4100]	GETTABLE 	R6 R6 K0 ; R6 := R6[0x94098a1d]
	3	[4100]	GETGLOBAL	R7 K1 ; R7 := 0x0469f296
	4	[4100]	MOVE     	R8 R0 ; R8 := R0
	5	[4100]	CALL     	R7 2 2 ; R7 := R7(R8)
	6	[4100]	OP_LOADBOOL	R8 1 0 ; R8 := true
	7	[4100]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	8	[4101]	EQ       	1 R6 K2 ; if R6 == nil then PC := 16
	9	[4101]	JMP      	16 ; PC := 16
	10	[4102]	GETUPVAL 	R7 U0 ; R7 := U0
	11	[4102]	GETTABLE 	R7 R7 K3 ; R7 := R7[0xc0ee6a07]
	12	[4102]	MOVE     	R8 R6 ; R8 := R6
	13	[4102]	CALL     	R7 2 1 ; R7(R8)
	14	[4103]	OP_LOADBOOL	R7 0 0 ; R7 := false
	15	[4103]	RETURN   	R7 2 ; return R7 
	16	[4107]	MOVE     	R7 R0 ; R7 := R0
	17	[4108]	GETGLOBAL	R8 K4 ; R8 := 0x7f5022cf
	18	[4108]	GETTABLE 	R8 R8 K5 ; R8 := R8[0xa5c556b9]
	19	[4108]	MOVE     	R9 R0 ; R9 := R0
	20	[4108]	GETUPVAL 	R10 U1 ; R10 := U1
	21	[4108]	GETTABLE 	R10 R10 K6 ; R10 := R10["TAG_SEPERATOR"]
	22	[4108]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	23	[4109]	TEST     	R8 0 ; if not R8 then PC := 32
	24	[4109]	JMP      	32 ; PC := 32
	25	[4110]	GETGLOBAL	R9 K4 ; R9 := 0x7f5022cf
	26	[4110]	GETTABLE 	R9 R9 K7 ; R9 := R9[0x1a94c9cc]
	27	[4110]	MOVE     	R10 R0 ; R10 := R0
	28	[4110]	LOADK    	R11 := 1.000000
	29	[4110]	SUB      	R12 R8 K8 ; R12 := R8 - 1.000000
	30	[4110]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	31	[4110]	MOVE     	R7 R9 ; R7 := R9
	32	[4112]	GETUPVAL 	R9 U2 ; R9 := U2
	33	[4112]	MOVE     	R10 R7 ; R10 := R7
	34	[4112]	CALL     	R9 2 2 ; R9 := R9(R10)
	35	[4112]	TEST     	R9 1 ; if R9 then PC := 38
	36	[4112]	JMP      	38 ; PC := 38
	37	[4113]	RETURN   	R0 1 ; return 
	38	[4115]	GETGLOBAL	R9 K9 ; R9 := 0x89326c93
	39	[4115]	SELF     	R9 R9 K10 ; R10 := R9; R9 := R9[0x78298275]
	40	[4115]	CALL     	R9 2 2 ; R9 := R9(R10)
	41	[4116]	GETGLOBAL	R10 K11 ; R10 := 0x7b998233
	42	[4116]	MOVE     	R11 R9 ; R11 := R9
	43	[4116]	CALL     	R10 2 2 ; R10 := R10(R11)
	44	[4116]	TEST     	R10 1 ; if R10 then PC := 161
	45	[4116]	JMP      	161 ; PC := 161
	46	[4116]	GETUPVAL 	R10 U3 ; R10 := U3
	47	[4116]	MOVE     	R11 R9 ; R11 := R9
	48	[4116]	CALL     	R10 2 2 ; R10 := R10(R11)
	49	[4116]	TEST     	R10 0 ; if not R10 then PC := 161
	50	[4116]	JMP      	161 ; PC := 161
	51	[4118]	GETGLOBAL	R10 K12 ; R10 := 0xbe190284
	52	[4118]	SELF     	R10 R10 K13 ; R11 := R10; R10 := R10[0xd7d79b74]
	53	[4118]	CALL     	R10 2 2 ; R10 := R10(R11)
	54	[4119]	GETUPVAL 	R11 U1 ; R11 := U1
	55	[4119]	GETTABLE 	R11 R11 K14 ; R11 := R11[0x5e35d4d6]
	56	[4119]	CALL     	R11 1 2 ; R11 := R11()
	57	[4120]	GETGLOBAL	R12 K11 ; R12 := 0x7b998233
	58	[4120]	MOVE     	R13 R11 ; R13 := R11
	59	[4120]	CALL     	R12 2 2 ; R12 := R12(R13)
	60	[4120]	TEST     	R12 1 ; if R12 then PC := 77
	61	[4120]	JMP      	77 ; PC := 77
	62	[4120]	GETGLOBAL	R12 K11 ; R12 := 0x7b998233
	63	[4120]	MOVE     	R13 R9 ; R13 := R9
	64	[4120]	CALL     	R12 2 2 ; R12 := R12(R13)
	65	[4120]	TEST     	R12 1 ; if R12 then PC := 77
	66	[4120]	JMP      	77 ; PC := 77
	67	[4120]	GETGLOBAL	R12 K11 ; R12 := 0x7b998233
	68	[4120]	MOVE     	R13 R10 ; R13 := R10
	69	[4120]	CALL     	R12 2 2 ; R12 := R12(R13)
	70	[4120]	TEST     	R12 1 ; if R12 then PC := 77
	71	[4120]	JMP      	77 ; PC := 77
	72	[4120]	SELF     	R12 R10 K15 ; R13 := R10; R12 := R10[0x371db6f9]
	73	[4120]	MOVE     	R14 R9 ; R14 := R9
	74	[4120]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	75	[4120]	TEST     	R12 1 ; if R12 then PC := 78
	76	[4120]	JMP      	78 ; PC := 78
	77	[4121]	RETURN   	R0 1 ; return 
	78	[4124]	GETGLOBAL	R12 K16 ; R12 := 0x3d106989
	79	[4124]	LOADK    	R13 K17 ; R13 := "RJ GoToMission - "
	80	[4124]	GETGLOBAL	R14 K18 ; R14 := 0x64fb1586
	81	[4124]	MOVE     	R15 R0 ; R15 := R0
	82	[4124]	CALL     	R14 2 2 ; R14 := R14(R15)
	83	[4124]	CONCAT   	R13 R13 R14 ; R13 := R13 .. R14
	84	[4124]	CALL     	R12 2 1 ; R12(R13)
	85	[4125]	GETGLOBAL	R12 K19 ; R12 := _T
	86	[4125]	GETGLOBAL	R13 K1 ; R13 := 0x0469f296
	87	[4125]	MOVE     	R14 R0 ; R14 := R0
	88	[4125]	CALL     	R13 2 2 ; R13 := R13(R14)
	89	[4125]	SETTABLE 	R12 K20 R13 ; R12["RailJackNextMissionNode"] := R13
	90	[4126]	GETGLOBAL	R12 K19 ; R12 := _T
	91	[4126]	GETGLOBAL	R13 K12 ; R13 := 0xbe190284
	92	[4126]	SELF     	R13 R13 K22 ; R14 := R13; R13 := R13[0xf2deaf69]
	93	[4126]	GETGLOBAL	R15 K23 ; R15 := gLotusAttractModeGameRulesType
	94	[4126]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	95	[4126]	SETTABLE 	R12 K21 R13 ; R12["SeamlessRailJackTransition"] := R13
	96	[4128]	NEWTABLE 	R12 0 3 ; R12 := {}
	97	[4128]	SETTABLE 	R12 K24 R0 ; R12["name"] := R0
	98	[4128]	SETTABLE 	R12 K25 R1 ; R12["quest"] := R1
	99	[4128]	SETTABLE 	R12 K26 K27 ; R12["difficulty"] := 0.000000
	100	[4129]	GETGLOBAL	R13 K4 ; R13 := 0x7f5022cf
	101	[4129]	GETTABLE 	R13 R13 K5 ; R13 := R13[0xa5c556b9]
	102	[4129]	MOVE     	R14 R0 ; R14 := R0
	103	[4129]	GETUPVAL 	R15 U1 ; R15 := U1
	104	[4129]	GETTABLE 	R15 R15 K28 ; R15 := R15["NEMESIS_MISSION_TAG"]
	105	[4129]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	106	[4129]	TEST     	R13 0 ; if not R13 then PC := 115
	107	[4129]	JMP      	115 ; PC := 115
	108	[4129]	GETGLOBAL	R13 K19 ; R13 := _T
	109	[4129]	GETTABLE 	R13 R13 K29 ; R13 := R13["CachedNemesisGenericMissionInfo"]
	110	[4129]	TEST     	R13 0 ; if not R13 then PC := 115
	111	[4129]	JMP      	115 ; PC := 115
	112	[4130]	GETGLOBAL	R13 K19 ; R13 := _T
	113	[4130]	GETTABLE 	R13 R13 K29 ; R13 := R13["CachedNemesisGenericMissionInfo"]
	114	[4130]	SETTABLE 	R12 K30 R13 ; R12["nemesis"] := R13
	115	[4133]	GETGLOBAL	R13 K31 ; R13 := cjson
	116	[4133]	GETTABLE 	R13 R13 K32 ; R13 := R13[0xb139d7bc]
	117	[4133]	MOVE     	R14 R12 ; R14 := R12
	118	[4133]	CALL     	R13 2 2 ; R13 := R13(R14)
	119	[4134]	GETGLOBAL	R14 K33 ; R14 := 0xe7f2b02f
	120	[4134]	SELF     	R14 R14 K34 ; R15 := R14; R14 := R14[0xd8f4f9d0]
	121	[4134]	MOVE     	R16 R13 ; R16 := R13
	122	[4134]	CALL     	R14 3 1 ; R14(R15,R16)
	123	[4136]	SELF     	R14 R11 K35 ; R15 := R11; R14 := R11[0x3ad9ed31]
	124	[4136]	GETGLOBAL	R16 K1 ; R16 := 0x0469f296
	125	[4136]	LOADK    	R17 K36 ; R17 := "CrewShipGenericTunnel"
	126	[4136]	CALL     	R16 2 0 ; R16,... := R16(R17)
	127	[4136]	CALL     	R14 0 2 ; R14 := R14(R15,...)
	128	[4137]	SELF     	R15 R10 K37 ; R16 := R10; R15 := R10[0xb642d60b]
	129	[4137]	GETTABLE 	R17 R14 K38 ; R17 := R14["mission"]
	130	[4137]	CALL     	R15 3 1 ; R15(R16,R17)
	131	[4139]	GETGLOBAL	R15 K39 ; R15 := mRegions
	132	[4139]	SETTABLE 	R15 K40 K2 ; R15["mSelectedRegion"] := nil
	133	[4142]	GETGLOBAL	R15 K33 ; R15 := 0xe7f2b02f
	134	[4142]	SELF     	R15 R15 K41 ; R16 := R15; R15 := R15[0xb321d806]
	135	[4142]	CALL     	R15 2 2 ; R15 := R15(R16)
	136	[4142]	TEST     	R15 0 ; if not R15 then PC := 153
	137	[4142]	JMP      	153 ; PC := 153
	138	[4142]	GETGLOBAL	R15 K12 ; R15 := 0xbe190284
	139	[4142]	SELF     	R15 R15 K22 ; R16 := R15; R15 := R15[0xf2deaf69]
	140	[4142]	GETGLOBAL	R17 K42 ; R17 := gLotusHubGameRulesType
	141	[4142]	CALL     	R15 3 2 ; R15 := R15(R16,R17)
	142	[4142]	TEST     	R15 1 ; if R15 then PC := 153
	143	[4142]	JMP      	153 ; PC := 153
	144	[4143]	OP_LOADBOOL	R15 1 0 ; R15 := true
	145	[4144]	OP_LOADBOOL	R16 0 0 ; R16 := false
	146	[4145]	GETUPVAL 	R17 U4 ; R17 := U4
	147	[4145]	GETTABLE 	R17 R17 K43 ; R17 := R17[0x59fd07dd]
	148	[4145]	MOVE     	R18 R0 ; R18 := R0
	149	[4145]	MOVE     	R19 R15 ; R19 := R15
	150	[4145]	MOVE     	R20 R16 ; R20 := R16
	151	[4145]	GETUPVAL 	R21 U5 ; R21 := U5
	152	[4145]	CALL     	R17 5 1 ; R17(R18,R19,R20,R21)
	153	[4148]	OP_LOADBOOL	R17 1 0 ; R17 := true
	154	[4149]	GETUPVAL 	R18 U6 ; R18 := U6
	155	[4149]	MOVE     	R19 R17 ; R19 := R17
	156	[4149]	CALL     	R18 2 1 ; R18(R19)
	157	[4173]	GETGLOBAL	R18 K44 ; R18 := mRailJack
	158	[4173]	SETTABLE 	R18 K45 K2 ; R18["SelectionNode"] := nil
	159	[4174]	OP_LOADBOOL	R18 1 0 ; R18 := true
	160	[4174]	RETURN   	R18 2 ; return R18 
	161	[4177]	NEWTABLE 	R18 0 4 ; R18 := {}
	162	[4177]	SETTABLE 	R18 K24 R0 ; R18["name"] := R0
	163	[4177]	SETTABLE 	R18 K25 R1 ; R18["quest"] := R1
	164	[4177]	SETTABLE 	R18 K26 R3 ; R18["difficulty"] := R3
	165	[4177]	SETTABLE 	R18 K46 R5 ; R18["wager"] := R5
	166	[4179]	TEST     	R2 0 ; if not R2 then PC := 171
	167	[4179]	JMP      	171 ; PC := 171
	168	[4179]	EQ       	1 R2 K47 ; if R2 == "" then PC := 171
	169	[4179]	JMP      	171 ; PC := 171
	170	[4180]	SETTABLE 	R18 K48 R2 ; R18["raid"] := R2
	171	[4183]	TEST     	R4 0 ; if not R4 then PC := 176
	172	[4183]	JMP      	176 ; PC := 176
	173	[4183]	EQ       	1 R4 K47 ; if R4 == "" then PC := 176
	174	[4183]	JMP      	176 ; PC := 176
	175	[4184]	SETTABLE 	R18 K49 R4 ; R18["voidTier"] := R4
	176	[4187]	GETGLOBAL	R19 K4 ; R19 := 0x7f5022cf
	177	[4187]	GETTABLE 	R19 R19 K5 ; R19 := R19[0xa5c556b9]
	178	[4187]	MOVE     	R20 R0 ; R20 := R0
	179	[4187]	GETUPVAL 	R21 U1 ; R21 := U1
	180	[4187]	GETTABLE 	R21 R21 K28 ; R21 := R21["NEMESIS_MISSION_TAG"]
	181	[4187]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	182	[4187]	TEST     	R19 0 ; if not R19 then PC := 191
	183	[4187]	JMP      	191 ; PC := 191
	184	[4187]	GETGLOBAL	R19 K19 ; R19 := _T
	185	[4187]	GETTABLE 	R19 R19 K29 ; R19 := R19["CachedNemesisGenericMissionInfo"]
	186	[4187]	TEST     	R19 0 ; if not R19 then PC := 191
	187	[4187]	JMP      	191 ; PC := 191
	188	[4188]	GETGLOBAL	R19 K19 ; R19 := _T
	189	[4188]	GETTABLE 	R19 R19 K29 ; R19 := R19["CachedNemesisGenericMissionInfo"]
	190	[4188]	SETTABLE 	R18 K30 R19 ; R18["nemesis"] := R19
	191	[4191]	GETGLOBAL	R19 K11 ; R19 := 0x7b998233
	192	[4191]	MOVE     	R20 R1 ; R20 := R1
	193	[4191]	CALL     	R19 2 2 ; R19 := R19(R20)
	194	[4191]	TEST     	R19 1 ; if R19 then PC := 242
	195	[4191]	JMP      	242 ; PC := 242
	196	[4191]	GETGLOBAL	R19 K4 ; R19 := 0x7f5022cf
	197	[4191]	GETTABLE 	R19 R19 K5 ; R19 := R19[0xa5c556b9]
	198	[4191]	MOVE     	R20 R0 ; R20 := R0
	199	[4191]	GETUPVAL 	R21 U1 ; R21 := U1
	200	[4191]	GETTABLE 	R21 R21 K50 ; R21 := R21["KEY_TAG"]
	201	[4191]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	202	[4191]	TEST     	R19 0 ; if not R19 then PC := 242
	203	[4191]	JMP      	242 ; PC := 242
	204	[4192]	GETGLOBAL	R19 K4 ; R19 := 0x7f5022cf
	205	[4192]	GETTABLE 	R19 R19 K5 ; R19 := R19[0xa5c556b9]
	206	[4192]	MOVE     	R20 R0 ; R20 := R0
	207	[4192]	GETUPVAL 	R21 U1 ; R21 := U1
	208	[4192]	GETTABLE 	R21 R21 K50 ; R21 := R21["KEY_TAG"]
	209	[4192]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	210	[4193]	EQ       	1 R19 K2 ; if R19 == nil then PC := 242
	211	[4193]	JMP      	242 ; PC := 242
	212	[4194]	GETGLOBAL	R20 K4 ; R20 := 0x7f5022cf
	213	[4194]	GETTABLE 	R20 R20 K7 ; R20 := R20[0x1a94c9cc]
	214	[4194]	MOVE     	R21 R0 ; R21 := R0
	215	[4194]	LOADK    	R22 := 1.000000
	216	[4194]	SUB      	R23 R19 K8 ; R23 := R19 - 1.000000
	217	[4194]	CALL     	R20 4 2 ; R20 := R20(R21,R22,R23)
	218	[4195]	GETGLOBAL	R21 K51 ; R21 := 0xb009bbc6
	219	[4195]	MOVE     	R22 R20 ; R22 := R20
	220	[4195]	CALL     	R21 2 2 ; R21 := R21(R22)
	221	[4196]	GETGLOBAL	R22 K11 ; R22 := 0x7b998233
	222	[4196]	MOVE     	R23 R21 ; R23 := R21
	223	[4196]	CALL     	R22 2 2 ; R22 := R22(R23)
	224	[4196]	TEST     	R22 1 ; if R22 then PC := 242
	225	[4196]	JMP      	242 ; PC := 242
	226	[4196]	SELF     	R22 R21 K52 ; R23 := R21; R22 := R21[0x6f7d166f]
	227	[4196]	CALL     	R22 2 2 ; R22 := R22(R23)
	228	[4196]	TEST     	R22 0 ; if not R22 then PC := 242
	229	[4196]	JMP      	242 ; PC := 242
	230	[4197]	GETGLOBAL	R22 K19 ; R22 := _T
	231	[4197]	SETTABLE 	R22 K53 R18 ; R22["sectorInfo"] := R18
	232	[4198]	GETGLOBAL	R22 K54 ; R22 := 0xae91e43b
	233	[4198]	SELF     	R22 R22 K55 ; R23 := R22; R22 := R22[0xe4162eed]
	234	[4198]	LOADK    	R24 K56 ; R24 := "ShowQuestConfirm"
	235	[4198]	GETGLOBAL	R25 K18 ; R25 := 0x64fb1586
	236	[4198]	SELF     	R26 R21 K57 ; R27 := R21; R26 := R21[0x95446011]
	237	[4198]	CALL     	R26 2 0 ; R26,... := R26(R27)
	238	[4198]	CALL     	R25 0 0 ; R25,... := R25(R26,...)
	239	[4198]	CALL     	R22 0 1 ; R22(R23,...)
	240	[4200]	OP_LOADBOOL	R22 1 0 ; R22 := true
	241	[4200]	RETURN   	R22 2 ; return R22 
	242	[4205]	GETUPVAL 	R22 U7 ; R22 := U7
	243	[4205]	MOVE     	R23 R18 ; R23 := R18
	244	[4205]	CALL     	R22 2 1 ; R22(R23)
	245	[4207]	OP_LOADBOOL	R22 1 0 ; R22 := true
	246	[4207]	RETURN   	R22 2 ; return R22 
	247	[4208]	RETURN   	R0 1 ; return 

function #93 <?:4210,4226> (49 instructions, 196 bytes at 000002112A1AEBA0)
1 param, 5 slots, 1 upvalue, 0 locals, 15 constants, 0 functions
	1	[4211]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[4211]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[4211]	GETTABLE 	R2 R2 K1 ; R2 := R2["Invasion"]
	4	[4211]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[4211]	TEST     	R1 0 ; if not R1 then PC := 12
	6	[4211]	JMP      	12 ; PC := 12
	7	[4211]	GETGLOBAL	R1 K2 ; R1 := _T
	8	[4211]	GETTABLE 	R1 R1 K3 ; R1 := R1["CachedInvasionInfo"]
	9	[4211]	GETTABLE 	R1 R1 R0 ; R1 := R1[R0]
	10	[4211]	TEST     	R1 1 ; if R1 then PC := 13
	11	[4211]	JMP      	13 ; PC := 13
	12	[4212]	RETURN   	R0 1 ; return 
	13	[4215]	GETGLOBAL	R1 K4 ; R1 := 0x0032441c
	14	[4215]	GETGLOBAL	R2 K2 ; R2 := _T
	15	[4215]	GETTABLE 	R2 R2 K3 ; R2 := R2["CachedInvasionInfo"]
	16	[4215]	GETTABLE 	R2 R2 R0 ; R2 := R2[R0]
	17	[4215]	SETTABLE 	R1 K5 R2 ; R1["gInvasionInfo"] := R2
	18	[4216]	OP_LOADBOOL	R1 1 0 ; R1 := true
	19	[4216]	SETGLOBALHASH	R1 K6 ; mInputBlocked := R1
	20	[4218]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	21	[4218]	GETGLOBAL	R2 K2 ; R2 := _T
	22	[4218]	GETTABLE 	R2 R2 K7 ; R2 := R2["SquadOverlay"]
	23	[4218]	CALL     	R1 2 2 ; R1 := R1(R2)
	24	[4218]	TEST     	R1 1 ; if R1 then PC := 32
	25	[4218]	JMP      	32 ; PC := 32
	26	[4219]	GETGLOBAL	R1 K2 ; R1 := _T
	27	[4219]	GETTABLE 	R1 R1 K7 ; R1 := R1["SquadOverlay"]
	28	[4219]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xe4162eed]
	29	[4219]	LOADK    	R3 K9 ; R3 := "OnRadialSolarMapOpenChildMovie"
	30	[4219]	LOADK    	R4 K10 ; R4 := ""
	31	[4219]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	32	[4222]	GETUPVAL 	R1 U0 ; R1 := U0
	33	[4222]	GETGLOBAL	R2 K11 ; R2 := 0xae91e43b
	34	[4222]	SELF     	R2 R2 K12 ; R3 := R2; R2 := R2[0x1fd6abd0]
	35	[4222]	GETGLOBAL	R4 K13 ; R4 := 0x887eeb2f
	36	[4222]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	37	[4222]	SETTABLE 	R1 K1 R2 ; R1["Invasion"] := R2
	38	[4223]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	39	[4223]	GETUPVAL 	R2 U0 ; R2 := U0
	40	[4223]	GETTABLE 	R2 R2 K1 ; R2 := R2["Invasion"]
	41	[4223]	CALL     	R1 2 2 ; R1 := R1(R2)
	42	[4223]	TEST     	R1 1 ; if R1 then PC := 49
	43	[4223]	JMP      	49 ; PC := 49
	44	[4224]	GETUPVAL 	R1 U0 ; R1 := U0
	45	[4224]	GETTABLE 	R1 R1 K1 ; R1 := R1["Invasion"]
	46	[4224]	SELF     	R1 R1 K14 ; R2 := R1; R1 := R1[0x2002e1dc]
	47	[4224]	OP_LOADBOOL	R3 1 0 ; R3 := true
	48	[4224]	CALL     	R1 3 1 ; R1(R2,R3)
	49	[4226]	RETURN   	R0 1 ; return 

function #94 <?:4228,4239> (27 instructions, 108 bytes at 00000211926E4D00)
1 param, 6 slots, 2 upvalues, 0 locals, 9 constants, 0 functions
	1	[4229]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[4229]	SETTABLE 	R1 K0 K1 ; R1["Invasion"] := nil
	3	[4230]	OP_LOADBOOL	R1 0 0 ; R1 := false
	4	[4230]	SETGLOBALHASH	R1 K2 ; mInputBlocked := R1
	5	[4232]	GETGLOBAL	R1 K3 ; R1 := 0x7b998233
	6	[4232]	GETGLOBAL	R2 K4 ; R2 := _T
	7	[4232]	GETTABLE 	R2 R2 K5 ; R2 := R2["SquadOverlay"]
	8	[4232]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[4232]	TEST     	R1 1 ; if R1 then PC := 17
	10	[4232]	JMP      	17 ; PC := 17
	11	[4233]	GETGLOBAL	R1 K4 ; R1 := _T
	12	[4233]	GETTABLE 	R1 R1 K5 ; R1 := R1["SquadOverlay"]
	13	[4233]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0xe4162eed]
	14	[4233]	LOADK    	R3 K7 ; R3 := "OnRadialSolarMapCloseChildMovie"
	15	[4233]	LOADK    	R4 K8 ; R4 := ""
	16	[4233]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	17	[4236]	TEST     	R0 0 ; if not R0 then PC := 27
	18	[4236]	JMP      	27 ; PC := 27
	19	[4236]	EQ       	1 R0 K8 ; if R0 == "" then PC := 27
	20	[4236]	JMP      	27 ; PC := 27
	21	[4237]	GETUPVAL 	R1 U1 ; R1 := U1
	22	[4237]	MOVE     	R2 R0 ; R2 := R0
	23	[4237]	LOADK    	R3 K8 ; R3 := ""
	24	[4237]	LOADK    	R4 K8 ; R4 := ""
	25	[4237]	LOADK    	R5 K8 ; R5 := ""
	26	[4237]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	27	[4239]	RETURN   	R0 1 ; return 

function #95 <?:4241,4285> (122 instructions, 488 bytes at 00000211304A5A50)
1 param, 10 slots, 4 upvalues, 0 locals, 31 constants, 0 functions
	1	[4244]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[4244]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[4244]	GETTABLE 	R2 R2 K1 ; R2 := R2["Movie"]
	4	[4244]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[4244]	TEST     	R1 1 ; if R1 then PC := 14
	6	[4244]	JMP      	14 ; PC := 14
	7	[4244]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[4244]	GETTABLE 	R1 R1 K1 ; R1 := R1["Movie"]
	9	[4244]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xd4cc05b4]
	10	[4244]	CALL     	R1 2 2 ; R1 := R1(R2)
	11	[4244]	TEST     	R1 1 ; if R1 then PC := 14
	12	[4244]	JMP      	14 ; PC := 14
	13	[4245]	RETURN   	R0 1 ; return 
	14	[4248]	GETGLOBAL	R1 K3 ; R1 := _T
	15	[4248]	GETTABLE 	R1 R1 K4 ; R1 := R1["CachedVoidStormMissions"]
	16	[4248]	GETTABLE 	R1 R1 R0 ; R1 := R1[R0]
	17	[4249]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	18	[4249]	GETUPVAL 	R3 U1 ; R3 := U1
	19	[4249]	GETTABLE 	R3 R3 K5 ; R3 := R3["VoidProjection"]
	20	[4249]	CALL     	R2 2 2 ; R2 := R2(R3)
	21	[4249]	TEST     	R2 0 ; if not R2 then PC := 30
	22	[4249]	JMP      	30 ; PC := 30
	23	[4249]	GETGLOBAL	R2 K3 ; R2 := _T
	24	[4249]	GETTABLE 	R2 R2 K6 ; R2 := R2["CachedActiveMissions"]
	25	[4249]	GETTABLE 	R2 R2 R0 ; R2 := R2[R0]
	26	[4249]	TEST     	R2 1 ; if R2 then PC := 31
	27	[4249]	JMP      	31 ; PC := 31
	28	[4249]	TEST     	R1 1 ; if R1 then PC := 31
	29	[4249]	JMP      	31 ; PC := 31
	30	[4250]	RETURN   	R0 1 ; return 
	31	[4253]	GETUPVAL 	R2 U2 ; R2 := U2
	32	[4253]	MOVE     	R3 R0 ; R3 := R0
	33	[4253]	CALL     	R2 2 2 ; R2 := R2(R3)
	34	[4253]	TEST     	R2 1 ; if R2 then PC := 37
	35	[4253]	JMP      	37 ; PC := 37
	36	[4254]	RETURN   	R0 1 ; return 
	37	[4257]	GETUPVAL 	R2 U1 ; R2 := U1
	38	[4257]	GETGLOBAL	R3 K7 ; R3 := 0xae91e43b
	39	[4257]	SELF     	R3 R3 K8 ; R4 := R3; R3 := R3[0x1fd6abd0]
	40	[4257]	GETGLOBAL	R5 K9 ; R5 := 0xd7190dd1
	41	[4257]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	42	[4257]	SETTABLE 	R2 K5 R3 ; R2["VoidProjection"] := R3
	43	[4258]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	44	[4258]	GETUPVAL 	R3 U1 ; R3 := U1
	45	[4258]	GETTABLE 	R3 R3 K5 ; R3 := R3["VoidProjection"]
	46	[4258]	CALL     	R2 2 2 ; R2 := R2(R3)
	47	[4258]	TEST     	R2 1 ; if R2 then PC := 110
	48	[4258]	JMP      	110 ; PC := 110
	49	[4259]	GETUPVAL 	R2 U3 ; R2 := U3
	50	[4259]	GETTABLE 	R2 R2 K10 ; R2 := R2["VOID_PROJECTION_ITEMS"]
	51	[4259]	GETTABLE 	R2 R2 K11 ; R2 := R2["VoidT1"]
	52	[4260]	TEST     	R1 0 ; if not R1 then PC := 63
	53	[4260]	JMP      	63 ; PC := 63
	54	[4261]	GETGLOBAL	R3 K12 ; R3 := mVoidTear
	55	[4261]	GETGLOBAL	R4 K3 ; R4 := _T
	56	[4261]	GETTABLE 	R4 R4 K4 ; R4 := R4["CachedVoidStormMissions"]
	57	[4261]	GETTABLE 	R4 R4 R0 ; R4 := R4[R0]
	58	[4261]	GETTABLE 	R4 R4 K14 ; R4 := R4["tier"]
	59	[4261]	SELF     	R4 R4 K15 ; R5 := R4; R4 := R4[0x6d604ba7]
	60	[4261]	CALL     	R4 2 2 ; R4 := R4(R5)
	61	[4261]	SETTABLE 	R3 K13 R4 ; R3["MissionTier"] := R4
	62	[4261]	JMP      	72 ; PC := 72
	63	[4263]	GETGLOBAL	R3 K3 ; R3 := _T
	64	[4263]	GETTABLE 	R3 R3 K6 ; R3 := R3["CachedActiveMissions"]
	65	[4263]	GETTABLE 	R3 R3 R0 ; R3 := R3[R0]
	66	[4263]	GETTABLE 	R3 R3 K16 ; R3 := R3["mMissionInfo"]
	67	[4264]	GETGLOBAL	R4 K12 ; R4 := mVoidTear
	68	[4264]	GETGLOBAL	R5 K17 ; R5 := 0x64fb1586
	69	[4264]	GETTABLE 	R6 R3 K18 ; R6 := R3["activeMissionTag"]
	70	[4264]	CALL     	R5 2 2 ; R5 := R5(R6)
	71	[4264]	SETTABLE 	R4 K13 R5 ; R4["MissionTier"] := R5
	72	[4268]	GETUPVAL 	R4 U3 ; R4 := U3
	73	[4268]	GETTABLE 	R4 R4 K10 ; R4 := R4["VOID_PROJECTION_ITEMS"]
	74	[4268]	GETGLOBAL	R5 K12 ; R5 := mVoidTear
	75	[4268]	GETTABLE 	R5 R5 K13 ; R5 := R5["MissionTier"]
	76	[4268]	GETTABLE 	R4 R4 R5 ; R4 := R4[R5]
	77	[4268]	TEST     	R4 0 ; if not R4 then PC := 84
	78	[4268]	JMP      	84 ; PC := 84
	79	[4269]	GETUPVAL 	R4 U3 ; R4 := U3
	80	[4269]	GETTABLE 	R4 R4 K10 ; R4 := R4["VOID_PROJECTION_ITEMS"]
	81	[4269]	GETGLOBAL	R5 K12 ; R5 := mVoidTear
	82	[4269]	GETTABLE 	R5 R5 K13 ; R5 := R5["MissionTier"]
	83	[4269]	GETTABLE 	R2 R4 R5 ; R2 := R4[R5]
	84	[4272]	GETGLOBAL	R4 K12 ; R4 := mVoidTear
	85	[4272]	SETTABLE 	R4 K19 R0 ; R4["SectorName"] := R0
	86	[4273]	GETUPVAL 	R4 U1 ; R4 := U1
	87	[4273]	GETTABLE 	R4 R4 K5 ; R4 := R4["VoidProjection"]
	88	[4273]	SELF     	R4 R4 K20 ; R5 := R4; R4 := R4[0xf56f3887]
	89	[4273]	LOADK    	R6 K21 ; R6 := "SetExclusiveTier"
	90	[4273]	NEWTABLE 	R7 2 0 ; R7 := {}
	91	[4273]	SELF     	R8 R2 K22 ; R9 := R2; R8 := R2[0xed4e0128]
	92	[4273]	CALL     	R8 2 2 ; R8 := R8(R9)
	93	[4273]	LOADK    	R9 K23 ; R9 := "OnVoidProjectionChosen"
	94	[4273]	SETLIST  	R7 2 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 2
	95	[4273]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	96	[4275]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	97	[4275]	GETUPVAL 	R5 U0 ; R5 := U0
	98	[4275]	GETTABLE 	R5 R5 K1 ; R5 := R5["Movie"]
	99	[4275]	CALL     	R4 2 2 ; R4 := R4(R5)
	100	[4275]	TEST     	R4 1 ; if R4 then PC := 108
	101	[4275]	JMP      	108 ; PC := 108
	102	[4276]	GETUPVAL 	R4 U0 ; R4 := U0
	103	[4276]	GETTABLE 	R4 R4 K1 ; R4 := R4["Movie"]
	104	[4276]	SELF     	R4 R4 K24 ; R5 := R4; R4 := R4[0xe4162eed]
	105	[4276]	LOADK    	R6 K25 ; R6 := "ItemBrowsing"
	106	[4276]	LOADK    	R7 K26 ; R7 := "true"
	107	[4276]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	108	[4279]	OP_LOADBOOL	R4 1 0 ; R4 := true
	109	[4279]	SETGLOBALHASH	R4 K27 ; mInputBlocked := R4
	110	[4282]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	111	[4282]	GETGLOBAL	R5 K3 ; R5 := _T
	112	[4282]	GETTABLE 	R5 R5 K28 ; R5 := R5["SquadOverlay"]
	113	[4282]	CALL     	R4 2 2 ; R4 := R4(R5)
	114	[4282]	TEST     	R4 1 ; if R4 then PC := 122
	115	[4282]	JMP      	122 ; PC := 122
	116	[4283]	GETGLOBAL	R4 K3 ; R4 := _T
	117	[4283]	GETTABLE 	R4 R4 K28 ; R4 := R4["SquadOverlay"]
	118	[4283]	SELF     	R4 R4 K24 ; R5 := R4; R4 := R4[0xe4162eed]
	119	[4283]	LOADK    	R6 K29 ; R6 := "OnRadialSolarMapOpenChildMovie"
	120	[4283]	LOADK    	R7 K30 ; R7 := ""
	121	[4283]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	122	[4285]	RETURN   	R0 1 ; return 

function #96 <?:4287,4306> (60 instructions, 240 bytes at 000002111B2CCC70)
1 param, 7 slots, 4 upvalues, 0 locals, 20 constants, 0 functions
	1	[4288]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[4288]	SETTABLE 	R1 K0 K1 ; R1["VoidProjection"] := nil
	3	[4289]	OP_LOADBOOL	R1 0 0 ; R1 := false
	4	[4289]	SETGLOBALHASH	R1 K2 ; mInputBlocked := R1
	5	[4291]	GETGLOBAL	R1 K3 ; R1 := 0x7b998233
	6	[4291]	GETUPVAL 	R2 U1 ; R2 := U1
	7	[4291]	GETTABLE 	R2 R2 K4 ; R2 := R2["Movie"]
	8	[4291]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[4291]	TEST     	R1 1 ; if R1 then PC := 17
	10	[4291]	JMP      	17 ; PC := 17
	11	[4292]	GETUPVAL 	R1 U1 ; R1 := U1
	12	[4292]	GETTABLE 	R1 R1 K4 ; R1 := R1["Movie"]
	13	[4292]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xe4162eed]
	14	[4292]	LOADK    	R3 K6 ; R3 := "ItemBrowsing"
	15	[4292]	LOADK    	R4 K7 ; R4 := "false"
	16	[4292]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	17	[4295]	GETGLOBAL	R1 K3 ; R1 := 0x7b998233
	18	[4295]	GETGLOBAL	R2 K8 ; R2 := _T
	19	[4295]	GETTABLE 	R2 R2 K9 ; R2 := R2["SquadOverlay"]
	20	[4295]	CALL     	R1 2 2 ; R1 := R1(R2)
	21	[4295]	TEST     	R1 1 ; if R1 then PC := 29
	22	[4295]	JMP      	29 ; PC := 29
	23	[4296]	GETGLOBAL	R1 K8 ; R1 := _T
	24	[4296]	GETTABLE 	R1 R1 K9 ; R1 := R1["SquadOverlay"]
	25	[4296]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xe4162eed]
	26	[4296]	LOADK    	R3 K10 ; R3 := "OnRadialSolarMapCloseChildMovie"
	27	[4296]	LOADK    	R4 K11 ; R4 := ""
	28	[4296]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	29	[4299]	EQ       	0 R0 K12 ; if R0 ~= "true" then PC := 60
	30	[4299]	JMP      	60 ; PC := 60
	31	[4300]	GETGLOBAL	R1 K13 ; R1 := mRailJack
	32	[4300]	GETTABLE 	R1 R1 K14 ; R1 := R1["Active"]
	33	[4300]	TEST     	R1 0 ; if not R1 then PC := 48
	34	[4300]	JMP      	48 ; PC := 48
	35	[4301]	GETUPVAL 	R1 U2 ; R1 := U2
	36	[4301]	GETGLOBAL	R2 K15 ; R2 := mVoidTear
	37	[4301]	GETTABLE 	R2 R2 K16 ; R2 := R2["SectorName"]
	38	[4301]	GETUPVAL 	R3 U3 ; R3 := U3
	39	[4301]	GETTABLE 	R3 R3 K17 ; R3 := R3["VOID_STORM_TAG"]
	40	[4301]	CONCAT   	R2 R2 R3 ; R2 := R2 .. R3
	41	[4301]	LOADK    	R3 K11 ; R3 := ""
	42	[4301]	LOADK    	R4 K11 ; R4 := ""
	43	[4301]	LOADK    	R5 K11 ; R5 := ""
	44	[4301]	GETGLOBAL	R6 K15 ; R6 := mVoidTear
	45	[4301]	GETTABLE 	R6 R6 K18 ; R6 := R6["MissionTier"]
	46	[4301]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	47	[4301]	JMP      	60 ; PC := 60
	48	[4303]	GETUPVAL 	R1 U2 ; R1 := U2
	49	[4303]	GETGLOBAL	R2 K15 ; R2 := mVoidTear
	50	[4303]	GETTABLE 	R2 R2 K16 ; R2 := R2["SectorName"]
	51	[4303]	GETUPVAL 	R3 U3 ; R3 := U3
	52	[4303]	GETTABLE 	R3 R3 K19 ; R3 := R3["ACTIVE_MISSION_TAG"]
	53	[4303]	CONCAT   	R2 R2 R3 ; R2 := R2 .. R3
	54	[4303]	LOADK    	R3 K11 ; R3 := ""
	55	[4303]	LOADK    	R4 K11 ; R4 := ""
	56	[4303]	LOADK    	R5 K11 ; R5 := ""
	57	[4303]	GETGLOBAL	R6 K15 ; R6 := mVoidTear
	58	[4303]	GETTABLE 	R6 R6 K18 ; R6 := R6["MissionTier"]
	59	[4303]	CALL     	R1 6 1 ; R1(R2,R3,R4,R5,R6)
	60	[4306]	RETURN   	R0 1 ; return 

function #97 <?:4308,4309> (1 instruction, 4 bytes at 00000211210A41B0)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[4309]	RETURN   	R0 1 ; return 

function #98 <?:4311,4331> (34 instructions, 136 bytes at 000002117F7A20F0)
1 param, 5 slots, 3 upvalues, 0 locals, 23 constants, 0 functions
	1	[4312]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[4312]	GETTABLE 	R1 R1 K0 ; R1 := R1["Nightmare"]
	3	[4312]	TEST     	R1 1 ; if R1 then PC := 10
	4	[4312]	JMP      	10 ; PC := 10
	5	[4312]	GETGLOBAL	R1 K1 ; R1 := _T
	6	[4312]	GETTABLE 	R1 R1 K2 ; R1 := R1["CachedSkullNodes"]
	7	[4312]	GETTABLE 	R1 R1 R0 ; R1 := R1[R0]
	8	[4312]	EQ       	0 R1 K3 ; if R1 ~= nil then PC := 11
	9	[4312]	JMP      	11 ; PC := 11
	10	[4313]	RETURN   	R0 1 ; return 
	11	[4316]	GETGLOBAL	R1 K1 ; R1 := _T
	12	[4316]	SETTABLE 	R1 K4 R0 ; R1["gNightmareNodeName"] := R0
	13	[4318]	GETGLOBAL	R1 K5 ; R1 := 0x34291f5c
	14	[4318]	GETTABLE 	R1 R1 K6 ; R1 := R1[0xe27b35bb]
	15	[4318]	CALL     	R1 1 2 ; R1 := R1()
	16	[4319]	SETTABLE 	R1 K7 K8 ; R1["dialogType"] := 5.000000
	17	[4320]	SETTABLE 	R1 K9 K10 ; R1["locString"] := "/Lotus/Language/Menu/ConfirmNightmare"
	18	[4321]	SETTABLE 	R1 K11 K12 ; R1["firstString"] := "/Lotus/Language/Menu/ConfirmNightmareYes"
	19	[4322]	SETTABLE 	R1 K13 K14 ; R1["secondString"] := "/Lotus/Language/Menu/ConfirmNightmareNo"
	20	[4323]	SETTABLE 	R1 K15 K16 ; R1["thirdString"] := "/Menu/Confirm_Item_Cancel"
	21	[4324]	SELF     	R2 R1 K17 ; R3 := R1; R2 := R1[0xe6ccc5b9]
	22	[4324]	LOADK    	R4 K18 ; R4 := "ConfirmNightmare"
	23	[4324]	CALL     	R2 3 1 ; R2(R3,R4)
	24	[4326]	GETUPVAL 	R2 U0 ; R2 := U0
	25	[4326]	GETUPVAL 	R3 U1 ; R3 := U1
	26	[4326]	GETTABLE 	R3 R3 K19 ; R3 := R3[0xe99b84e7]
	27	[4326]	MOVE     	R4 R1 ; R4 := R1
	28	[4326]	CALL     	R3 2 2 ; R3 := R3(R4)
	29	[4326]	SETTABLE 	R2 K0 R3 ; R2["Nightmare"] := R3
	30	[4328]	GETUPVAL 	R2 U2 ; R2 := U2
	31	[4328]	SETTABLE 	R2 K20 K21 ; R2["isLMBDown"] := false
	32	[4330]	OP_LOADBOOL	R2 1 0 ; R2 := true
	33	[4330]	SETGLOBALHASH	R2 K22 ; mInputBlocked := R2
	34	[4331]	RETURN   	R0 1 ; return 

function #99 <?:4333,4352> (34 instructions, 136 bytes at 00000211283EF650)
1 param, 7 slots, 3 upvalues, 0 locals, 14 constants, 0 functions
	1	[4334]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[4334]	SETTABLE 	R1 K0 K1 ; R1["Nightmare"] := nil
	3	[4335]	OP_LOADBOOL	R1 0 0 ; R1 := false
	4	[4335]	SETGLOBALHASH	R1 K2 ; mInputBlocked := R1
	5	[4337]	EQ       	0 R0 K4 ; if R0 ~= 5.000000 then PC := 8
	6	[4337]	JMP      	8 ; PC := 8
	7	[4338]	RETURN   	R0 1 ; return 
	8	[4341]	GETGLOBAL	R1 K5 ; R1 := _T
	9	[4341]	GETTABLE 	R1 R1 K6 ; R1 := R1["gNightmareNodeName"]
	10	[4343]	EQ       	0 R0 K7 ; if R0 ~= 6.000000 then PC := 22
	11	[4343]	JMP      	22 ; PC := 22
	12	[4344]	GETGLOBAL	R2 K8 ; R2 := 0x0032441c
	13	[4344]	GETTABLE 	R2 R2 K9 ; R2 := R2["CachedGoalInfo"]
	14	[4344]	GETTABLE 	R2 R2 R1 ; R2 := R2[R1]
	15	[4344]	TEST     	R2 0 ; if not R2 then PC := 28
	16	[4344]	JMP      	28 ; PC := 28
	17	[4345]	MOVE     	R2 R1 ; R2 := R1
	18	[4345]	GETUPVAL 	R3 U1 ; R3 := U1
	19	[4345]	GETTABLE 	R3 R3 K10 ; R3 := R3["EVENT_TAG"]
	20	[4345]	CONCAT   	R1 R2 R3 ; R1 := R2 .. R3
	21	[4346]	JMP      	28 ; PC := 28
	22	[4347]	EQ       	0 R0 K11 ; if R0 ~= 4.000000 then PC := 28
	23	[4347]	JMP      	28 ; PC := 28
	24	[4348]	MOVE     	R2 R1 ; R2 := R1
	25	[4348]	GETUPVAL 	R3 U1 ; R3 := U1
	26	[4348]	GETTABLE 	R3 R3 K12 ; R3 := R3["NIGHTMARE_TAG"]
	27	[4348]	CONCAT   	R1 R2 R3 ; R1 := R2 .. R3
	28	[4351]	GETUPVAL 	R2 U2 ; R2 := U2
	29	[4351]	MOVE     	R3 R1 ; R3 := R1
	30	[4351]	LOADK    	R4 K13 ; R4 := ""
	31	[4351]	LOADK    	R5 K13 ; R5 := ""
	32	[4351]	LOADK    	R6 K13 ; R6 := ""
	33	[4351]	CALL     	R2 5 1 ; R2(R3,R4,R5,R6)
	34	[4352]	RETURN   	R0 1 ; return 

function #100 <?:4354,4355> (1 instruction, 4 bytes at 000002112A68BB00)
1 param, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[4355]	RETURN   	R0 1 ; return 

function #101 <?:4357,4382> (78 instructions, 312 bytes at 000002112A68BB90)
4 params, 10 slots, 2 upvalues, 0 locals, 26 constants, 0 functions
	1	[4358]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	2	[4358]	GETGLOBAL	R5 K1 ; R5 := mWagerMission
	3	[4358]	GETTABLE 	R5 R5 K2 ; R5 := R5["MovieInst"]
	4	[4358]	CALL     	R4 2 2 ; R4 := R4(R5)
	5	[4358]	TEST     	R4 1 ; if R4 then PC := 8
	6	[4358]	JMP      	8 ; PC := 8
	7	[4359]	RETURN   	R0 1 ; return 
	8	[4362]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	9	[4362]	GETUPVAL 	R5 U0 ; R5 := U0
	10	[4362]	GETTABLE 	R5 R5 K3 ; R5 := R5["Movie"]
	11	[4362]	CALL     	R4 2 2 ; R4 := R4(R5)
	12	[4362]	TEST     	R4 1 ; if R4 then PC := 20
	13	[4362]	JMP      	20 ; PC := 20
	14	[4363]	GETUPVAL 	R4 U0 ; R4 := U0
	15	[4363]	GETTABLE 	R4 R4 K3 ; R4 := R4["Movie"]
	16	[4363]	SELF     	R4 R4 K4 ; R5 := R4; R4 := R4[0xe4162eed]
	17	[4363]	LOADK    	R6 K5 ; R6 := "ItemBrowsing"
	18	[4363]	LOADK    	R7 K6 ; R7 := "true"
	19	[4363]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	20	[4366]	GETGLOBAL	R4 K1 ; R4 := mWagerMission
	21	[4366]	SETTABLE 	R4 K7 R0 ; R4["SectorName"] := R0
	22	[4367]	GETGLOBAL	R4 K1 ; R4 := mWagerMission
	23	[4367]	SETTABLE 	R4 K8 R2 ; R4["Quest"] := R2
	24	[4368]	GETGLOBAL	R4 K1 ; R4 := mWagerMission
	25	[4368]	SETTABLE 	R4 K9 R3 ; R4["Difficulty"] := R3
	26	[4370]	GETGLOBAL	R4 K1 ; R4 := mWagerMission
	27	[4370]	GETGLOBAL	R5 K10 ; R5 := 0xae91e43b
	28	[4370]	SELF     	R5 R5 K11 ; R6 := R5; R5 := R5[0x1fd6abd0]
	29	[4370]	GETGLOBAL	R7 K12 ; R7 := 0x8f3d7fbc
	30	[4370]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	31	[4370]	SETTABLE 	R4 K2 R5 ; R4["MovieInst"] := R5
	32	[4371]	OP_LOADBOOL	R4 1 0 ; R4 := true
	33	[4371]	SETGLOBALHASH	R4 K13 ; mInputBlocked := R4
	34	[4373]	TEST     	R1 0 ; if not R1 then PC := 57
	35	[4373]	JMP      	57 ; PC := 57
	36	[4373]	GETGLOBAL	R4 K14 ; R4 := 0x7f5022cf
	37	[4373]	GETTABLE 	R4 R4 K15 ; R4 := R4[0xa5c556b9]
	38	[4373]	MOVE     	R5 R1 ; R5 := R1
	39	[4373]	GETUPVAL 	R6 U1 ; R6 := U1
	40	[4373]	GETTABLE 	R6 R6 K16 ; R6 := R6["HARD_MODE_TAG"]
	41	[4373]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	42	[4373]	TEST     	R4 0 ; if not R4 then PC := 57
	43	[4373]	JMP      	57 ; PC := 57
	44	[4374]	GETGLOBAL	R4 K14 ; R4 := 0x7f5022cf
	45	[4374]	GETTABLE 	R4 R4 K17 ; R4 := R4[0x1a94c9cc]
	46	[4374]	MOVE     	R5 R1 ; R5 := R1
	47	[4374]	LOADK    	R6 := 1.000000
	48	[4374]	GETGLOBAL	R7 K14 ; R7 := 0x7f5022cf
	49	[4374]	GETTABLE 	R7 R7 K15 ; R7 := R7[0xa5c556b9]
	50	[4374]	MOVE     	R8 R1 ; R8 := R1
	51	[4374]	GETUPVAL 	R9 U1 ; R9 := U1
	52	[4374]	GETTABLE 	R9 R9 K16 ; R9 := R9["HARD_MODE_TAG"]
	53	[4374]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	54	[4374]	SUB      	R7 R7 K18 ; R7 := R7 - 1.000000
	55	[4374]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	56	[4374]	MOVE     	R1 R4 ; R1 := R4
	57	[4377]	GETGLOBAL	R4 K1 ; R4 := mWagerMission
	58	[4377]	GETTABLE 	R4 R4 K2 ; R4 := R4["MovieInst"]
	59	[4377]	SELF     	R4 R4 K19 ; R5 := R4; R4 := R4[0xf56f3887]
	60	[4377]	LOADK    	R6 K20 ; R6 := "SetSectorNameAndCloseCallback"
	61	[4377]	NEWTABLE 	R7 2 0 ; R7 := {}
	62	[4377]	MOVE     	R8 R1 ; R8 := R1
	63	[4377]	LOADK    	R9 K21 ; R9 := "ConfirmWagerSelection"
	64	[4377]	SETLIST  	R7 2 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 2
	65	[4377]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	66	[4379]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	67	[4379]	GETGLOBAL	R5 K22 ; R5 := _T
	68	[4379]	GETTABLE 	R5 R5 K23 ; R5 := R5["SquadOverlay"]
	69	[4379]	CALL     	R4 2 2 ; R4 := R4(R5)
	70	[4379]	TEST     	R4 1 ; if R4 then PC := 78
	71	[4379]	JMP      	78 ; PC := 78
	72	[4380]	GETGLOBAL	R4 K22 ; R4 := _T
	73	[4380]	GETTABLE 	R4 R4 K23 ; R4 := R4["SquadOverlay"]
	74	[4380]	SELF     	R4 R4 K4 ; R5 := R4; R4 := R4[0xe4162eed]
	75	[4380]	LOADK    	R6 K24 ; R6 := "OnRadialSolarMapOpenChildMovie"
	76	[4380]	LOADK    	R7 K25 ; R7 := ""
	77	[4380]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	78	[4382]	RETURN   	R0 1 ; return 

function #102 <?:4384,4411> (79 instructions, 316 bytes at 000002112A1AFB60)
2 params, 9 slots, 4 upvalues, 0 locals, 23 constants, 0 functions
	1	[4385]	GETGLOBAL	R2 K0 ; R2 := mWagerMission
	2	[4385]	SETTABLE 	R2 K1 K2 ; R2["MovieInst"] := nil
	3	[4386]	OP_LOADBOOL	R2 0 0 ; R2 := false
	4	[4386]	SETGLOBALHASH	R2 K3 ; mInputBlocked := R2
	5	[4388]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	6	[4388]	GETUPVAL 	R3 U0 ; R3 := U0
	7	[4388]	GETTABLE 	R3 R3 K5 ; R3 := R3["Movie"]
	8	[4388]	CALL     	R2 2 2 ; R2 := R2(R3)
	9	[4388]	TEST     	R2 1 ; if R2 then PC := 17
	10	[4388]	JMP      	17 ; PC := 17
	11	[4389]	GETUPVAL 	R2 U0 ; R2 := U0
	12	[4389]	GETTABLE 	R2 R2 K5 ; R2 := R2["Movie"]
	13	[4389]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0xe4162eed]
	14	[4389]	LOADK    	R4 K7 ; R4 := "ItemBrowsing"
	15	[4389]	LOADK    	R5 K8 ; R5 := "false"
	16	[4389]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	17	[4392]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	18	[4392]	GETGLOBAL	R3 K9 ; R3 := _T
	19	[4392]	GETTABLE 	R3 R3 K10 ; R3 := R3["SquadOverlay"]
	20	[4392]	CALL     	R2 2 2 ; R2 := R2(R3)
	21	[4392]	TEST     	R2 1 ; if R2 then PC := 29
	22	[4392]	JMP      	29 ; PC := 29
	23	[4393]	GETGLOBAL	R2 K9 ; R2 := _T
	24	[4393]	GETTABLE 	R2 R2 K10 ; R2 := R2["SquadOverlay"]
	25	[4393]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0xe4162eed]
	26	[4393]	LOADK    	R4 K11 ; R4 := "OnRadialSolarMapCloseChildMovie"
	27	[4393]	LOADK    	R5 K12 ; R5 := ""
	28	[4393]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	29	[4396]	TEST     	R0 0 ; if not R0 then PC := 71
	30	[4396]	JMP      	71 ; PC := 71
	31	[4396]	EQ       	1 R0 K8 ; if R0 == "false" then PC := 71
	32	[4396]	JMP      	71 ; PC := 71
	33	[4397]	GETUPVAL 	R2 U1 ; R2 := U1
	34	[4397]	GETTABLE 	R2 R2 K13 ; R2 := R2["CurrentTier"]
	35	[4397]	LT       	0 K14 R2 ; if 0.000000 >= R2 then PC := 49
	36	[4397]	JMP      	49 ; PC := 49
	37	[4397]	GETGLOBAL	R2 K15 ; R2 := 0x7f5022cf
	38	[4397]	GETTABLE 	R2 R2 K16 ; R2 := R2[0xa5c556b9]
	39	[4397]	MOVE     	R3 R0 ; R3 := R0
	40	[4397]	GETUPVAL 	R4 U2 ; R4 := U2
	41	[4397]	GETTABLE 	R4 R4 K17 ; R4 := R4["HARD_MODE_TAG"]
	42	[4397]	CALL     	R2 3 2 ; R2 := R2(R3,R4)
	43	[4397]	TEST     	R2 1 ; if R2 then PC := 49
	44	[4397]	JMP      	49 ; PC := 49
	45	[4398]	MOVE     	R2 R0 ; R2 := R0
	46	[4398]	GETUPVAL 	R3 U2 ; R3 := U2
	47	[4398]	GETTABLE 	R3 R3 K17 ; R3 := R3["HARD_MODE_TAG"]
	48	[4398]	CONCAT   	R0 R2 R3 ; R0 := R2 .. R3
	49	[4401]	GETUPVAL 	R2 U3 ; R2 := U3
	50	[4401]	GETGLOBAL	R3 K0 ; R3 := mWagerMission
	51	[4401]	GETTABLE 	R3 R3 K18 ; R3 := R3["Quest"]
	52	[4401]	TEST     	R3 0 ; if not R3 then PC := 58
	53	[4401]	JMP      	58 ; PC := 58
	54	[4401]	GETGLOBAL	R3 K0 ; R3 := mWagerMission
	55	[4401]	GETTABLE 	R3 R3 K19 ; R3 := R3["SectorName"]
	56	[4401]	TEST     	R3 1 ; if R3 then PC := 59
	57	[4401]	JMP      	59 ; PC := 59
	58	[4401]	MOVE     	R3 R0 ; R3 := R0
	59	[4401]	GETGLOBAL	R4 K0 ; R4 := mWagerMission
	60	[4401]	GETTABLE 	R4 R4 K18 ; R4 := R4["Quest"]
	61	[4401]	LOADNIL  	R5 R5 ; R5 := nil
	62	[4401]	GETGLOBAL	R6 K0 ; R6 := mWagerMission
	63	[4401]	GETTABLE 	R6 R6 K20 ; R6 := R6["Difficulty"]
	64	[4401]	LOADNIL  	R7 R7 ; R7 := nil
	65	[4401]	MOVE     	R8 R1 ; R8 := R1
	66	[4401]	CALL     	R2 7 2 ; R2 := R2(R3,R4,R5,R6,R7,R8)
	67	[4401]	TEST     	R2 1 ; if R2 then PC := 73
	68	[4401]	JMP      	73 ; PC := 73
	69	[4402]	RETURN   	R0 1 ; return 
	70	[4403]	JMP      	73 ; PC := 73
	71	[4405]	GETGLOBAL	R2 K9 ; R2 := _T
	72	[4405]	SETTABLE 	R2 K21 K22 ; R2["MadeWagerChoice"] := false
	73	[4408]	GETGLOBAL	R2 K0 ; R2 := mWagerMission
	74	[4408]	SETTABLE 	R2 K19 K12 ; R2["SectorName"] := ""
	75	[4409]	GETGLOBAL	R2 K0 ; R2 := mWagerMission
	76	[4409]	SETTABLE 	R2 K18 K2 ; R2["Quest"] := nil
	77	[4410]	GETGLOBAL	R2 K0 ; R2 := mWagerMission
	78	[4410]	SETTABLE 	R2 K20 K14 ; R2["Difficulty"] := 0.000000
	79	[4411]	RETURN   	R0 1 ; return 

function #103 <?:4413,4468> (157 instructions, 628 bytes at 000002112DA63180)
0 params, 19 slots, 4 upvalues, 0 locals, 48 constants, 0 functions
	1	[4414]	OP_LOADBOOL	R0 0 0 ; R0 := false
	2	[4414]	SETGLOBALHASH	R0 K0 ; mInputBlocked := R0
	3	[4416]	GETGLOBAL	R0 K1 ; R0 := mCachedSoloMission
	4	[4416]	GETTABLE 	R0 R0 K2 ; R0 := R0["Node"]
	5	[4416]	TEST     	R0 1 ; if R0 then PC := 8
	6	[4416]	JMP      	8 ; PC := 8
	7	[4417]	RETURN   	R0 1 ; return 
	8	[4420]	GETGLOBAL	R0 K3 ; R0 := 0x89326c93
	9	[4420]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0x18d05d30]
	10	[4420]	CALL     	R0 2 2 ; R0 := R0(R1)
	11	[4420]	TEST     	R0 0 ; if not R0 then PC := 31
	12	[4420]	JMP      	31 ; PC := 31
	13	[4421]	GETGLOBAL	R0 K3 ; R0 := 0x89326c93
	14	[4421]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0x7d108ddb]
	15	[4421]	CALL     	R0 2 2 ; R0 := R0(R1)
	16	[4422]	LOADK    	R1 := 1.000000
	17	[4422]	LEN      	R2 R0 ; R2 := # R0
	18	[4422]	LOADK    	R3 := 1.000000
	19	[4422]	FORPREP  	R1 30 ; R1 -= R3; PC := 30
	20	[4423]	GETTABLE 	R5 R0 R4 ; R5 := R0[R4]
	21	[4423]	SELF     	R5 R5 K6 ; R6 := R5; R5 := R5[0x420402a9]
	22	[4423]	CALL     	R5 2 2 ; R5 := R5(R6)
	23	[4423]	TEST     	R5 1 ; if R5 then PC := 30
	24	[4423]	JMP      	30 ; PC := 30
	25	[4424]	GETGLOBAL	R5 K7 ; R5 := 0xe7f2b02f
	26	[4424]	SELF     	R5 R5 K8 ; R6 := R5; R5 := R5[0x0a7813f5]
	27	[4424]	GETTABLE 	R7 R0 R4 ; R7 := R0[R4]
	28	[4424]	OP_LOADBOOL	R8 0 0 ; R8 := false
	29	[4424]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	30	[4422]	FORLOOP  	R1 20 ; R1 += R3; if R1 <= R2 then begin PC := 20; R4 := R1 end
	31	[4429]	GETGLOBAL	R5 K1 ; R5 := mCachedSoloMission
	32	[4429]	GETTABLE 	R5 R5 K2 ; R5 := R5["Node"]
	33	[4429]	GETTABLE 	R5 R5 K9 ; R5 := R5["radialSector"]
	34	[4429]	GETTABLE 	R5 R5 K10 ; R5 := R5["mission"]
	35	[4430]	GETGLOBAL	R6 K11 ; R6 := 0x64fb1586
	36	[4430]	GETGLOBAL	R7 K1 ; R7 := mCachedSoloMission
	37	[4430]	GETTABLE 	R7 R7 K12 ; R7 := R7["SectorName"]
	38	[4430]	CALL     	R6 2 2 ; R6 := R6(R7)
	39	[4431]	GETGLOBAL	R7 K1 ; R7 := mCachedSoloMission
	40	[4431]	GETTABLE 	R7 R7 K13 ; R7 := R7["SectorQuest"]
	41	[4432]	GETGLOBAL	R8 K14 ; R8 := 0x7f5022cf
	42	[4432]	GETTABLE 	R8 R8 K15 ; R8 := R8[0xa5c556b9]
	43	[4432]	MOVE     	R9 R6 ; R9 := R6
	44	[4432]	GETUPVAL 	R10 U0 ; R10 := U0
	45	[4432]	GETTABLE 	R10 R10 K16 ; R10 := R10["KEY_TAG"]
	46	[4432]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	47	[4433]	EQ       	1 R8 K17 ; if R8 == nil then PC := 78
	48	[4433]	JMP      	78 ; PC := 78
	49	[4434]	GETGLOBAL	R9 K14 ; R9 := 0x7f5022cf
	50	[4434]	GETTABLE 	R9 R9 K18 ; R9 := R9[0x1a94c9cc]
	51	[4434]	MOVE     	R10 R6 ; R10 := R6
	52	[4434]	LOADK    	R11 := 1.000000
	53	[4434]	SUB      	R12 R8 K19 ; R12 := R8 - 1.000000
	54	[4434]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	55	[4435]	GETGLOBAL	R10 K20 ; R10 := 0xb009bbc6
	56	[4435]	MOVE     	R11 R9 ; R11 := R9
	57	[4435]	CALL     	R10 2 2 ; R10 := R10(R11)
	58	[4436]	GETGLOBAL	R11 K21 ; R11 := 0x7b998233
	59	[4436]	MOVE     	R12 R10 ; R12 := R10
	60	[4436]	CALL     	R11 2 2 ; R11 := R11(R12)
	61	[4436]	TEST     	R11 1 ; if R11 then PC := 78
	62	[4436]	JMP      	78 ; PC := 78
	63	[4437]	GETGLOBAL	R11 K23 ; R11 := 0x7ed0a956
	64	[4437]	MOVE     	R12 R9 ; R12 := R9
	65	[4437]	CALL     	R11 2 2 ; R11 := R11(R12)
	66	[4437]	SETTABLE 	R5 K22 R11 ; R5["levelKeyName"] := R11
	67	[4439]	GETGLOBAL	R11 K1 ; R11 := mCachedSoloMission
	68	[4439]	GETTABLE 	R11 R11 K2 ; R11 := R11["Node"]
	69	[4439]	GETTABLE 	R11 R11 K9 ; R11 := R11["radialSector"]
	70	[4439]	GETTABLE 	R11 R11 K24 ; R11 := R11["keyChain"]
	71	[4439]	TEST     	R11 0 ; if not R11 then PC := 78
	72	[4439]	JMP      	78 ; PC := 78
	73	[4440]	GETGLOBAL	R11 K1 ; R11 := mCachedSoloMission
	74	[4440]	GETTABLE 	R11 R11 K2 ; R11 := R11["Node"]
	75	[4440]	GETTABLE 	R11 R11 K9 ; R11 := R11["radialSector"]
	76	[4440]	GETTABLE 	R11 R11 K24 ; R11 := R11["keyChain"]
	77	[4440]	SETTABLE 	R5 K25 R11 ; R5["keyChainName"] := R11
	78	[4445]	GETGLOBAL	R11 K11 ; R11 := 0x64fb1586
	79	[4445]	GETGLOBAL	R12 K1 ; R12 := mCachedSoloMission
	80	[4445]	GETTABLE 	R12 R12 K2 ; R12 := R12["Node"]
	81	[4445]	GETTABLE 	R12 R12 K9 ; R12 := R12["radialSector"]
	82	[4445]	GETTABLE 	R12 R12 K26 ; R12 := R12["name"]
	83	[4445]	CALL     	R11 2 2 ; R11 := R11(R12)
	84	[4446]	GETUPVAL 	R12 U1 ; R12 := U1
	85	[4446]	GETTABLE 	R12 R12 K27 ; R12 := R12["CurrentTier"]
	86	[4446]	LT       	0 K28 R12 ; if 0.000000 >= R12 then PC := 100
	87	[4446]	JMP      	100 ; PC := 100
	88	[4446]	GETGLOBAL	R12 K14 ; R12 := 0x7f5022cf
	89	[4446]	GETTABLE 	R12 R12 K15 ; R12 := R12[0xa5c556b9]
	90	[4446]	MOVE     	R13 R11 ; R13 := R11
	91	[4446]	GETUPVAL 	R14 U0 ; R14 := U0
	92	[4446]	GETTABLE 	R14 R14 K29 ; R14 := R14["HARD_MODE_TAG"]
	93	[4446]	CALL     	R12 3 2 ; R12 := R12(R13,R14)
	94	[4446]	TEST     	R12 1 ; if R12 then PC := 100
	95	[4446]	JMP      	100 ; PC := 100
	96	[4447]	MOVE     	R12 R11 ; R12 := R11
	97	[4447]	GETUPVAL 	R13 U0 ; R13 := U0
	98	[4447]	GETTABLE 	R13 R13 K29 ; R13 := R13["HARD_MODE_TAG"]
	99	[4447]	CONCAT   	R11 R12 R13 ; R11 := R12 .. R13
	100	[4449]	GETGLOBAL	R12 K1 ; R12 := mCachedSoloMission
	101	[4449]	SETTABLE 	R12 K2 K17 ; R12["Node"] := nil
	102	[4450]	GETGLOBAL	R12 K1 ; R12 := mCachedSoloMission
	103	[4450]	SETTABLE 	R12 K13 K17 ; R12["SectorQuest"] := nil
	104	[4451]	GETGLOBAL	R12 K30 ; R12 := _T
	105	[4451]	SETTABLE 	R12 K31 K32 ; R12["StartingSoloMission"] := true
	106	[4453]	GETTABLE 	R12 R5 K33 ; R12 := R5["missionType"]
	107	[4453]	EQ       	0 R12 K35 ; if R12 ~= 31.000000 then PC := 141
	108	[4453]	JMP      	141 ; PC := 141
	109	[4454]	GETGLOBAL	R12 K3 ; R12 := 0x89326c93
	110	[4454]	SELF     	R12 R12 K4 ; R13 := R12; R12 := R12[0x18d05d30]
	111	[4454]	CALL     	R12 2 2 ; R12 := R12(R13)
	112	[4454]	TEST     	R12 1 ; if R12 then PC := 119
	113	[4454]	JMP      	119 ; PC := 119
	114	[4455]	GETUPVAL 	R12 U2 ; R12 := U2
	115	[4455]	GETTABLE 	R12 R12 K36 ; R12 := R12[0xe0cba3ca]
	116	[4455]	LOADK    	R13 K37 ; R13 := "/Lotus/Language/Railjack/MissionRequiresOwnRailjack"
	117	[4455]	CALL     	R12 2 1 ; R12(R13)
	118	[4456]	RETURN   	R0 1 ; return 
	119	[4459]	GETGLOBAL	R12 K30 ; R12 := _T
	120	[4459]	NEWTABLE 	R13 0 1 ; R13 := {}
	121	[4459]	SETTABLE 	R13 K26 R11 ; R13["name"] := R11
	122	[4459]	SETTABLE 	R12 K38 R13 ; R12["gPendingMission"] := R13
	123	[4460]	TEST     	R7 0 ; if not R7 then PC := 131
	124	[4460]	JMP      	131 ; PC := 131
	125	[4461]	GETGLOBAL	R12 K30 ; R12 := _T
	126	[4461]	GETTABLE 	R12 R12 K38 ; R12 := R12["gPendingMission"]
	127	[4461]	SETTABLE 	R12 K39 R7 ; R12["quest"] := R7
	128	[4462]	GETGLOBAL	R12 K30 ; R12 := _T
	129	[4462]	GETTABLE 	R12 R12 K38 ; R12 := R12["gPendingMission"]
	130	[4462]	SETTABLE 	R12 K26 R6 ; R12["name"] := R6
	131	[4464]	GETGLOBAL	R12 K30 ; R12 := _T
	132	[4464]	GETTABLE 	R12 R12 K40 ; R12 := R12["SquadOverlay"]
	133	[4464]	SELF     	R12 R12 K41 ; R13 := R12; R12 := R12[0xf56f3887]
	134	[4464]	LOADK    	R14 K42 ; R14 := "NotifyForceLoadSoloMission"
	135	[4464]	NEWTABLE 	R15 2 0 ; R15 := {}
	136	[4464]	LOADK    	R16 K43 ; R16 := ""
	137	[4464]	LOADK    	R17 K44 ; R17 := "true"
	138	[4464]	SETLIST  	R15 2 1 ; R15[(1-1)*FPF+i] := R(15+i), 1 <= i <= 2
	139	[4464]	CALL     	R12 4 1 ; R12(R13,R14,R15)
	140	[4464]	JMP      	157 ; PC := 157
	141	[4466]	GETUPVAL 	R12 U3 ; R12 := U3
	142	[4466]	GETTABLE 	R12 R12 K45 ; R12 := R12[0xe05d242d]
	143	[4466]	GETGLOBAL	R13 K46 ; R13 := 0x0469f296
	144	[4466]	MOVE     	R14 R11 ; R14 := R11
	145	[4466]	CALL     	R13 2 2 ; R13 := R13(R14)
	146	[4466]	MOVE     	R14 R5 ; R14 := R5
	147	[4466]	GETUPVAL 	R15 U2 ; R15 := U2
	148	[4466]	GETTABLE 	R15 R15 K47 ; R15 := R15[0x06d055f9]
	149	[4466]	GETGLOBAL	R16 K21 ; R16 := 0x7b998233
	150	[4466]	GETTABLE 	R17 R5 K22 ; R17 := R5["levelKeyName"]
	151	[4466]	CALL     	R16 2 2 ; R16 := R16(R17)
	152	[4466]	NOT      	R16 R16 ; R16 := not R16
	153	[4466]	GETTABLE 	R17 R5 K22 ; R17 := R5["levelKeyName"]
	154	[4466]	LOADNIL  	R18 R18 ; R18 := nil
	155	[4466]	CALL     	R15 4 0 ; R15,... := R15(R16,R17,R18)
	156	[4466]	CALL     	R12 0 1 ; R12(R13,...)
	157	[4468]	RETURN   	R0 1 ; return 

function #104 <?:4470,4486> (24 instructions, 96 bytes at 0000021118F93720)
1 param, 4 slots, 1 upvalue, 0 locals, 12 constants, 0 functions
	1	[4471]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[4471]	SETTABLE 	R1 K0 K1 ; R1["SoloMission"] := nil
	3	[4472]	OP_LOADBOOL	R1 0 0 ; R1 := false
	4	[4472]	SETGLOBALHASH	R1 K2 ; mInputBlocked := R1
	5	[4474]	EQ       	0 R0 K4 ; if R0 ~= 5.000000 then PC := 10
	6	[4474]	JMP      	10 ; PC := 10
	7	[4475]	GETGLOBAL	R1 K5 ; R1 := mCachedSoloMission
	8	[4475]	SETTABLE 	R1 K6 K1 ; R1["Node"] := nil
	9	[4476]	RETURN   	R0 1 ; return 
	10	[4479]	GETGLOBAL	R1 K5 ; R1 := mCachedSoloMission
	11	[4479]	GETTABLE 	R1 R1 K6 ; R1 := R1["Node"]
	12	[4479]	TEST     	R1 1 ; if R1 then PC := 15
	13	[4479]	JMP      	15 ; PC := 15
	14	[4480]	RETURN   	R0 1 ; return 
	15	[4483]	OP_LOADBOOL	R1 1 0 ; R1 := true
	16	[4483]	SETGLOBALHASH	R1 K2 ; mInputBlocked := R1
	17	[4484]	GETGLOBAL	R1 K7 ; R1 := 0x3d106989
	18	[4484]	LOADK    	R2 K8 ; R2 := "ConfirmSoloMission"
	19	[4484]	CALL     	R1 2 1 ; R1(R2)
	20	[4485]	GETGLOBAL	R1 K9 ; R1 := 0xe7f2b02f
	21	[4485]	SELF     	R1 R1 K10 ; R2 := R1; R1 := R1[0x8229d239]
	22	[4485]	LOADK    	R3 K11 ; R3 := "OpenSoloMission"
	23	[4485]	CALL     	R1 3 1 ; R1(R2,R3)
	24	[4486]	RETURN   	R0 1 ; return 

function #105 <?:4488,4731> (272 instructions, 1088 bytes at 000002112EDF3870)
1 param, 27 slots, 6 upvalues, 0 locals, 61 constants, 4 functions
	1	[4489]	OP_LOADBOOL	R1 0 0 ; R1 := false
	2	[4489]	SETGLOBALHASH	R1 K0 ; mInputBlocked := R1
	3	[4490]	GETGLOBAL	R1 K1 ; R1 := _T
	4	[4490]	GETTABLE 	R1 R1 K2 ; R1 := R1["BackgroundMovie"]
	5	[4490]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xe4162eed]
	6	[4490]	LOADK    	R3 K4 ; R3 := "ShowBlockingMessage"
	7	[4490]	LOADK    	R4 K5 ; R4 := "0"
	8	[4490]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	9	[4492]	GETGLOBAL	R1 K6 ; R1 := 0x7b998233
	10	[4492]	GETGLOBAL	R2 K7 ; R2 := mRadialSolarMap
	11	[4492]	CALL     	R1 2 2 ; R1 := R1(R2)
	12	[4492]	TEST     	R1 0 ; if not R1 then PC := 15
	13	[4492]	JMP      	15 ; PC := 15
	14	[4493]	RETURN   	R0 1 ; return 
	15	[4496]	GETGLOBAL	R1 K7 ; R1 := mRadialSolarMap
	16	[4496]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0x6da94ca9]
	17	[4496]	CALL     	R1 2 2 ; R1 := R1(R2)
	18	[4517]	GETGLOBAL	R2 K9 ; R2 := mPendingHubInstances
	19	[4517]	GETTABLE 	R2 R2 K10 ; R2 := R2["sectorName"]
	20	[4518]	GETTABLE 	R3 R1 K11 ; R3 := R1["playerCount"]
	21	[4519]	GETTABLE 	R4 R1 K12 ; R4 := R1["scenarioProgress"]
	22	[4520]	LOADK    	R5 := 0.000000
	23	[4521]	LOADK    	R6 := 0.000000
	24	[4522]	LOADK    	R7 := 100.000000
	25	[4523]	LOADNIL  	R8 R10 ; R8 := R9 := R10 := nil
	26	[4526]	TEST     	R2 0 ; if not R2 then PC := 37
	27	[4526]	JMP      	37 ; PC := 37
	28	[4526]	EQ       	0 R2 K13 ; if R2 ~= "ScenarioEventHub5" then PC := 37
	29	[4526]	JMP      	37 ; PC := 37
	30	[4526]	GETGLOBAL	R11 K14 ; R11 := 0x0032441c
	31	[4526]	GETTABLE 	R11 R11 K15 ; R11 := R11["CachedGoalInfo"]
	32	[4526]	TEST     	R11 0 ; if not R11 then PC := 37
	33	[4526]	JMP      	37 ; PC := 37
	34	[4527]	GETGLOBAL	R11 K14 ; R11 := 0x0032441c
	35	[4527]	GETTABLE 	R11 R11 K15 ; R11 := R11["CachedGoalInfo"]
	36	[4527]	GETTABLE 	R10 R11 R2 ; R10 := R11[R2]
	37	[4529]	TEST     	R10 0 ; if not R10 then PC := 88
	38	[4529]	JMP      	88 ; PC := 88
	39	[4530]	GETTABLE 	R11 R10 K16 ; R11 := R10["mMetadata"]
	40	[4531]	TEST     	R11 0 ; if not R11 then PC := 51
	41	[4531]	JMP      	51 ; PC := 51
	42	[4531]	EQ       	1 R11 K17 ; if R11 == "" then PC := 51
	43	[4531]	JMP      	51 ; PC := 51
	44	[4532]	GETGLOBAL	R12 K18 ; R12 := cjson
	45	[4532]	GETTABLE 	R12 R12 K19 ; R12 := R12[0x7ab914d8]
	46	[4532]	MOVE     	R13 R11 ; R13 := R11
	47	[4532]	CALL     	R12 2 2 ; R12 := R12(R13)
	48	[4533]	TEST     	R12 0 ; if not R12 then PC := 51
	49	[4533]	JMP      	51 ; PC := 51
	50	[4534]	GETTABLE 	R7 R12 K20 ; R7 := R12["progressReq"]
	51	[4538]	GETGLOBAL	R13 K21 ; R13 := 0x34291f5c
	52	[4538]	GETTABLE 	R13 R13 K22 ; R13 := R13[0x397b920f]
	53	[4538]	GETTABLE 	R14 R10 K23 ; R14 := R10["mAltExpiry"]
	54	[4538]	CALL     	R13 2 2 ; R13 := R13(R14)
	55	[4538]	MOVE     	R6 R13 ; R6 := R13
	56	[4539]	LT       	0 R6 K24 ; if R6 >= 0.000000 then PC := 76
	57	[4539]	JMP      	76 ; PC := 76
	58	[4540]	GETGLOBAL	R13 K21 ; R13 := 0x34291f5c
	59	[4540]	GETTABLE 	R13 R13 K22 ; R13 := R13[0x397b920f]
	60	[4540]	GETTABLE 	R14 R10 K25 ; R14 := R10["mNextAltActivation"]
	61	[4540]	CALL     	R13 2 2 ; R13 := R13(R14)
	62	[4540]	MOVE     	R5 R13 ; R5 := R13
	63	[4541]	GETGLOBAL	R13 K26 ; R13 := 0x603636ad
	64	[4541]	LOADK    	R14 K27 ; R14 := "/Lotus/Language/Events/FragmentArrivalTime"
	65	[4541]	NEWTABLE 	R15 0 1 ; R15 := {}
	66	[4541]	GETUPVAL 	R16 U0 ; R16 := U0
	67	[4541]	GETTABLE 	R16 R16 K29 ; R16 := R16[0x817b1503]
	68	[4541]	GETGLOBAL	R17 K30 ; R17 := 0xae91e43b
	69	[4541]	MOVE     	R18 R5 ; R18 := R5
	70	[4541]	LOADK    	R19 K31 ; R19 := "Compact"
	71	[4541]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	72	[4541]	SETTABLE 	R15 K28 R16 ; R15["VALUE"] := R16
	73	[4541]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	74	[4541]	MOVE     	R9 R13 ; R9 := R13
	75	[4541]	JMP      	88 ; PC := 88
	76	[4543]	GETGLOBAL	R13 K26 ; R13 := 0x603636ad
	77	[4543]	LOADK    	R14 K32 ; R14 := "/Lotus/Language/Events/FlotillaTimeRemainingInstanceSelector"
	78	[4543]	NEWTABLE 	R15 0 1 ; R15 := {}
	79	[4543]	GETUPVAL 	R16 U0 ; R16 := U0
	80	[4543]	GETTABLE 	R16 R16 K29 ; R16 := R16[0x817b1503]
	81	[4543]	GETGLOBAL	R17 K30 ; R17 := 0xae91e43b
	82	[4543]	MOVE     	R18 R6 ; R18 := R6
	83	[4543]	LOADK    	R19 K31 ; R19 := "Compact"
	84	[4543]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	85	[4543]	SETTABLE 	R15 K28 R16 ; R15["VALUE"] := R16
	86	[4543]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	87	[4543]	MOVE     	R8 R13 ; R8 := R13
	88	[4547]	GETGLOBAL	R13 K1 ; R13 := _T
	89	[4593]	CLOSURE  	R14 0 ; R14 := closure(Function #1)
	90	[4593]	GETUPVAL 	R0 U1 ; R0 := U1
	91	[4593]	GETUPVAL 	R0 U2 ; R0 := U2
	92	[4593]	GETUPVAL 	R0 U3 ; R0 := U3
	93	[4593]	GETUPVAL 	R0 U0 ; R0 := U0
	94	[4593]	SETTABLE 	R13 K33 R14 ; R13["MenuSelectionDone"] := R14
	95	[4597]	TEST     	R0 0 ; if not R0 then PC := 154
	96	[4597]	JMP      	154 ; PC := 154
	97	[4597]	GETGLOBAL	R13 K9 ; R13 := mPendingHubInstances
	98	[4597]	GETTABLE 	R13 R13 K34 ; R13 := R13["mAutoJoinIfNotBusy"]
	99	[4597]	TEST     	R13 0 ; if not R13 then PC := 154
	100	[4597]	JMP      	154 ; PC := 154
	101	[4597]	GETGLOBAL	R13 K9 ; R13 := mPendingHubInstances
	102	[4597]	GETTABLE 	R13 R13 K35 ; R13 := R13["mBusyPlayerLoad"]
	103	[4597]	LT       	0 K24 R13 ; if 0.000000 >= R13 then PC := 154
	104	[4597]	JMP      	154 ; PC := 154
	105	[4598]	OP_LOADBOOL	R13 1 0 ; R13 := true
	106	[4600]	LEN      	R14 R4 ; R14 := # R4
	107	[4600]	LT       	0 K24 R14 ; if 0.000000 >= R14 then PC := 113
	108	[4600]	JMP      	113 ; PC := 113
	109	[4600]	GETTABLE 	R14 R4 K36 ; R14 := R4[1.000000]
	110	[4600]	LE       	0 R7 R14 ; if R7 > R14 then PC := 113
	111	[4600]	JMP      	113 ; PC := 113
	112	[4602]	OP_LOADBOOL	R13 0 0 ; R13 := false
	113	[4605]	TEST     	R13 0 ; if not R13 then PC := 154
	114	[4605]	JMP      	154 ; PC := 154
	115	[4606]	OP_LOADBOOL	R14 1 0 ; R14 := true
	116	[4607]	LOADK    	R15 := 2.000000
	117	[4607]	LEN      	R16 R3 ; R16 := # R3
	118	[4607]	LOADK    	R17 := 1.000000
	119	[4607]	FORPREP  	R15 125 ; R15 -= R17; PC := 125
	120	[4608]	GETTABLE 	R19 R3 R18 ; R19 := R3[R18]
	121	[4608]	LT       	0 K24 R19 ; if 0.000000 >= R19 then PC := 125
	122	[4608]	JMP      	125 ; PC := 125
	123	[4609]	OP_LOADBOOL	R14 0 0 ; R14 := false
	124	[4610]	JMP      	126 ; PC := 126
	125	[4607]	FORLOOP  	R15 120 ; R15 += R17; if R15 <= R16 then begin PC := 120; R18 := R15 end
	126	[4614]	TEST     	R14 0 ; if not R14 then PC := 154
	127	[4614]	JMP      	154 ; PC := 154
	128	[4615]	GETTABLE 	R19 R3 K36 ; R19 := R3[1.000000]
	129	[4615]	GETTABLE 	R20 R1 K37 ; R20 := R1["hubCapacity"]
	130	[4615]	DIV      	R19 R19 R20 ; R19 := R19 / R20
	131	[4616]	GETGLOBAL	R20 K9 ; R20 := mPendingHubInstances
	132	[4616]	GETTABLE 	R20 R20 K35 ; R20 := R20["mBusyPlayerLoad"]
	133	[4616]	LE       	0 R19 R20 ; if R19 > R20 then PC := 154
	134	[4616]	JMP      	154 ; PC := 154
	135	[4618]	GETGLOBAL	R20 K6 ; R20 := 0x7b998233
	136	[4618]	GETUPVAL 	R21 U1 ; R21 := U1
	137	[4618]	GETTABLE 	R21 R21 K38 ; R21 := R21["MultiMissionSelector"]
	138	[4618]	CALL     	R20 2 2 ; R20 := R20(R21)
	139	[4618]	TEST     	R20 1 ; if R20 then PC := 145
	140	[4618]	JMP      	145 ; PC := 145
	141	[4619]	GETUPVAL 	R20 U1 ; R20 := U1
	142	[4619]	GETTABLE 	R20 R20 K38 ; R20 := R20["MultiMissionSelector"]
	143	[4619]	SELF     	R20 R20 K39 ; R21 := R20; R20 := R20[0x32302b4a]
	144	[4619]	CALL     	R20 2 1 ; R20(R21)
	145	[4621]	GETGLOBAL	R20 K1 ; R20 := _T
	146	[4621]	GETTABLE 	R20 R20 K40 ; R20 := R20[0x6b15b4f5]
	147	[4621]	NEWTABLE 	R21 1 0 ; R21 := {}
	148	[4621]	NEWTABLE 	R22 0 2 ; R22 := {}
	149	[4621]	SETTABLE 	R22 K41 K24 ; R22["Instance"] := 0.000000
	150	[4621]	SETTABLE 	R22 K42 K43 ; R22["IsFull"] := false
	151	[4621]	SETLIST  	R21 1 1 ; R21[(1-1)*FPF+i] := R(21+i), 1 <= i <= 1
	152	[4621]	CALL     	R20 2 1 ; R20(R21)
	153	[4622]	RETURN   	R0 1 ; return 
	154	[4644]	CLOSURE  	R20 1 ; R20 := closure(Function #2)
	155	[4646]	TEST     	R0 0 ; if not R0 then PC := 167
	156	[4646]	JMP      	167 ; PC := 167
	157	[4647]	GETGLOBAL	R21 K1 ; R21 := _T
	158	[4681]	CLOSURE  	R22 2 ; R22 := closure(Function #3)
	159	[4681]	MOVE     	R0 R3 ; R0 := R3
	160	[4681]	MOVE     	R0 R4 ; R0 := R4
	161	[4681]	MOVE     	R0 R1 ; R0 := R1
	162	[4681]	MOVE     	R0 R7 ; R0 := R7
	163	[4681]	MOVE     	R0 R20 ; R0 := R20
	164	[4681]	MOVE     	R0 R6 ; R0 := R6
	165	[4681]	SETTABLE 	R21 K44 R22 ; R21["GetMenuEntries"] := R22
	166	[4681]	JMP      	193 ; PC := 193
	167	[4685]	GETGLOBAL	R21 K1 ; R21 := _T
	168	[4693]	CLOSURE  	R22 3 ; R22 := closure(Function #4)
	169	[4693]	SETTABLE 	R21 K44 R22 ; R21["GetMenuEntries"] := R22
	170	[4695]	GETUPVAL 	R21 U4 ; R21 := U4
	171	[4695]	TEST     	R21 0 ; if not R21 then PC := 193
	172	[4695]	JMP      	193 ; PC := 193
	173	[4695]	GETGLOBAL	R21 K6 ; R21 := 0x7b998233
	174	[4695]	GETGLOBAL	R22 K45 ; R22 := 0x76ea806b
	175	[4695]	SELF     	R22 R22 K46 ; R23 := R22; R22 := R22[0x3f3ae64c]
	176	[4695]	LOADK    	R24 := 0.000000
	177	[4695]	CALL     	R22 3 0 ; R22,... := R22(R23,R24)
	178	[4695]	CALL     	R21 0 2 ; R21 := R21(R22,...)
	179	[4695]	TEST     	R21 1 ; if R21 then PC := 193
	180	[4695]	JMP      	193 ; PC := 193
	181	[4696]	GETUPVAL 	R21 U2 ; R21 := U2
	182	[4696]	GETTABLE 	R21 R21 K47 ; R21 := R21[0xe0cba3ca]
	183	[4696]	LOADK    	R22 K48 ; R22 := "Warning: Hub Arbiter at "
	184	[4696]	GETGLOBAL	R23 K45 ; R23 := 0x76ea806b
	185	[4696]	SELF     	R23 R23 K46 ; R24 := R23; R23 := R23[0x3f3ae64c]
	186	[4696]	LOADK    	R25 := 0.000000
	187	[4696]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	188	[4696]	SELF     	R23 R23 K49 ; R24 := R23; R23 := R23[0x06687c36]
	189	[4696]	CALL     	R23 2 2 ; R23 := R23(R24)
	190	[4696]	LOADK    	R24 K50 ; R24 := " is down or gave bad response"
	191	[4696]	CONCAT   	R22 R22 R24 ; R22 := R22 .. R23 .. R24
	192	[4696]	CALL     	R21 2 1 ; R21(R22)
	193	[4700]	GETGLOBAL	R21 K1 ; R21 := _T
	194	[4700]	GETTABLE 	R21 R21 K51 ; R21 := R21[0xedfc284b]
	195	[4700]	CALL     	R21 1 2 ; R21 := R21()
	196	[4701]	LEN      	R22 R21 ; R22 := # R21
	197	[4701]	EQ       	0 R22 K36 ; if R22 ~= 1.000000 then PC := 220
	198	[4701]	JMP      	220 ; PC := 220
	199	[4703]	GETGLOBAL	R22 K6 ; R22 := 0x7b998233
	200	[4703]	GETUPVAL 	R23 U1 ; R23 := U1
	201	[4703]	GETTABLE 	R23 R23 K38 ; R23 := R23["MultiMissionSelector"]
	202	[4703]	CALL     	R22 2 2 ; R22 := R22(R23)
	203	[4703]	TEST     	R22 1 ; if R22 then PC := 209
	204	[4703]	JMP      	209 ; PC := 209
	205	[4704]	GETUPVAL 	R22 U1 ; R22 := U1
	206	[4704]	GETTABLE 	R22 R22 K38 ; R22 := R22["MultiMissionSelector"]
	207	[4704]	SELF     	R22 R22 K39 ; R23 := R22; R22 := R22[0x32302b4a]
	208	[4704]	CALL     	R22 2 1 ; R22(R23)
	209	[4707]	GETGLOBAL	R22 K1 ; R22 := _T
	210	[4707]	GETTABLE 	R22 R22 K40 ; R22 := R22[0x6b15b4f5]
	211	[4707]	NEWTABLE 	R23 1 0 ; R23 := {}
	212	[4707]	NEWTABLE 	R24 0 2 ; R24 := {}
	213	[4707]	GETTABLE 	R25 R21 K36 ; R25 := R21[1.000000]
	214	[4707]	GETTABLE 	R25 R25 K41 ; R25 := R25["Instance"]
	215	[4707]	SETTABLE 	R24 K41 R25 ; R24["Instance"] := R25
	216	[4707]	SETTABLE 	R24 K42 K43 ; R24["IsFull"] := false
	217	[4707]	SETLIST  	R23 1 1 ; R23[(1-1)*FPF+i] := R(23+i), 1 <= i <= 1
	218	[4707]	CALL     	R22 2 1 ; R22(R23)
	219	[4709]	RETURN   	R0 1 ; return 
	220	[4712]	LOADK    	R22 K52 ; R22 := "/Lotus/Language/Menu/ConfirmMultiHubInstance"
	221	[4713]	TEST     	R9 1 ; if R9 then PC := 225
	222	[4713]	JMP      	225 ; PC := 225
	223	[4713]	TEST     	R8 0 ; if not R8 then PC := 241
	224	[4713]	JMP      	241 ; PC := 241
	225	[4714]	GETGLOBAL	R23 K26 ; R23 := 0x603636ad
	226	[4714]	MOVE     	R24 R22 ; R24 := R22
	227	[4714]	OP_LOADBOOL	R25 1 0 ; R25 := true
	228	[4714]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	229	[4714]	MOVE     	R22 R23 ; R22 := R23
	230	[4715]	TEST     	R9 0 ; if not R9 then PC := 237
	231	[4715]	JMP      	237 ; PC := 237
	232	[4716]	MOVE     	R23 R22 ; R23 := R22
	233	[4716]	LOADK    	R24 K53 ; R24 := " | "
	234	[4716]	MOVE     	R25 R9 ; R25 := R9
	235	[4716]	CONCAT   	R22 R23 R25 ; R22 := R23 .. R24 .. R25
	236	[4716]	JMP      	241 ; PC := 241
	237	[4718]	MOVE     	R23 R22 ; R23 := R22
	238	[4718]	LOADK    	R24 K53 ; R24 := " | "
	239	[4718]	MOVE     	R25 R8 ; R25 := R8
	240	[4718]	CONCAT   	R22 R23 R25 ; R22 := R23 .. R24 .. R25
	241	[4721]	GETUPVAL 	R23 U1 ; R23 := U1
	242	[4721]	GETGLOBAL	R24 K30 ; R24 := 0xae91e43b
	243	[4721]	SELF     	R24 R24 K54 ; R25 := R24; R24 := R24[0x1fd6abd0]
	244	[4721]	GETGLOBAL	R26 K55 ; R26 := 0x08a5afb4
	245	[4721]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	246	[4721]	SETTABLE 	R23 K38 R24 ; R23["MultiMissionSelector"] := R24
	247	[4722]	GETUPVAL 	R23 U1 ; R23 := U1
	248	[4722]	GETTABLE 	R23 R23 K38 ; R23 := R23["MultiMissionSelector"]
	249	[4722]	SELF     	R23 R23 K3 ; R24 := R23; R23 := R23[0xe4162eed]
	250	[4722]	LOADK    	R25 K56 ; R25 := "SetTitle"
	251	[4722]	MOVE     	R26 R22 ; R26 := R22
	252	[4722]	CALL     	R23 4 1 ; R23(R24,R25,R26)
	253	[4723]	GETUPVAL 	R23 U1 ; R23 := U1
	254	[4723]	GETTABLE 	R23 R23 K38 ; R23 := R23["MultiMissionSelector"]
	255	[4723]	SELF     	R23 R23 K3 ; R24 := R23; R23 := R23[0xe4162eed]
	256	[4723]	LOADK    	R25 K57 ; R25 := "SetCallBack"
	257	[4723]	LOADK    	R26 K33 ; R26 := "MenuSelectionDone"
	258	[4723]	CALL     	R23 4 1 ; R23(R24,R25,R26)
	259	[4726]	GETGLOBAL	R23 K21 ; R23 := 0x34291f5c
	260	[4726]	GETTABLE 	R23 R23 K58 ; R23 := R23[0xe6b41adb]
	261	[4726]	CALL     	R23 1 2 ; R23 := R23()
	262	[4726]	TEST     	R23 0 ; if not R23 then PC := 266
	263	[4726]	JMP      	266 ; PC := 266
	264	[4727]	GETUPVAL 	R23 U5 ; R23 := U5
	265	[4727]	SETTABLE 	R23 K59 K43 ; R23["isLMBDown"] := false
	266	[4730]	GETUPVAL 	R23 U1 ; R23 := U1
	267	[4730]	GETTABLE 	R23 R23 K38 ; R23 := R23["MultiMissionSelector"]
	268	[4730]	SELF     	R23 R23 K3 ; R24 := R23; R23 := R23[0xe4162eed]
	269	[4730]	LOADK    	R25 K60 ; R25 := "SetElementsFunction"
	270	[4730]	LOADK    	R26 K44 ; R26 := "GetMenuEntries"
	271	[4730]	CALL     	R23 4 1 ; R23(R24,R25,R26)
	272	[4731]	RETURN   	R0 1 ; return 

function #106 <?:4733,4756> (57 instructions, 228 bytes at 000002112A6ABDB0)
1 param, 7 slots, 1 upvalue, 0 locals, 26 constants, 0 functions
	1	[4734]	GETGLOBAL	R1 K0 ; R1 := 0x64fb1586
	2	[4734]	GETTABLE 	R2 R0 K1 ; R2 := R0["name"]
	3	[4734]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[4735]	GETGLOBAL	R2 K2 ; R2 := mPendingHubInstances
	5	[4735]	SETTABLE 	R2 K3 R1 ; R2["sectorName"] := R1
	6	[4738]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	7	[4738]	SELF     	R2 R2 K5 ; R3 := R2; R2 := R2[0x42b04007]
	8	[4738]	GETGLOBAL	R4 K0 ; R4 := 0x64fb1586
	9	[4738]	GETTABLE 	R5 R0 K6 ; R5 := R0["locTag"]
	10	[4738]	CALL     	R4 2 2 ; R4 := R4(R5)
	11	[4738]	OP_LOADBOOL	R5 0 0 ; R5 := false
	12	[4738]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	13	[4739]	GETGLOBAL	R3 K7 ; R3 := 0x7f5022cf
	14	[4739]	GETTABLE 	R3 R3 K8 ; R3 := R3[0x66edf04f]
	15	[4739]	MOVE     	R4 R2 ; R4 := R2
	16	[4739]	LOADK    	R5 K9 ; R5 := "Relay"
	17	[4739]	LOADK    	R6 K10 ; R6 := ""
	18	[4739]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	19	[4739]	MOVE     	R2 R3 ; R2 := R3
	20	[4740]	GETGLOBAL	R3 K2 ; R3 := mPendingHubInstances
	21	[4740]	SETTABLE 	R3 K11 R2 ; R3["sectorLoc"] := R2
	22	[4742]	GETGLOBAL	R3 K12 ; R3 := 0x7b998233
	23	[4742]	GETGLOBAL	R4 K13 ; R4 := mRadialSolarMap
	24	[4742]	CALL     	R3 2 2 ; R3 := R3(R4)
	25	[4742]	TEST     	R3 0 ; if not R3 then PC := 28
	26	[4742]	JMP      	28 ; PC := 28
	27	[4743]	RETURN   	R0 1 ; return 
	28	[4746]	OP_LOADBOOL	R3 1 0 ; R3 := true
	29	[4746]	SETGLOBALHASH	R3 K14 ; mInputBlocked := R3
	30	[4747]	GETGLOBAL	R3 K15 ; R3 := _T
	31	[4747]	GETTABLE 	R3 R3 K16 ; R3 := R3["BackgroundMovie"]
	32	[4747]	SELF     	R3 R3 K17 ; R4 := R3; R3 := R3[0xe4162eed]
	33	[4747]	LOADK    	R5 K18 ; R5 := "ShowBlockingMessage"
	34	[4747]	LOADK    	R6 K19 ; R6 := "2"
	35	[4747]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	36	[4750]	GETGLOBAL	R3 K13 ; R3 := mRadialSolarMap
	37	[4750]	SELF     	R3 R3 K20 ; R4 := R3; R3 := R3[0xae7cd968]
	38	[4750]	LOADK    	R5 K21 ; R5 := "GotHubInstances"
	39	[4750]	CALL     	R3 3 1 ; R3(R4,R5)
	40	[4751]	GETUPVAL 	R3 U0 ; R3 := U0
	41	[4751]	GETTABLE 	R3 R3 K22 ; R3 := R3["POST_NEW_WAR_MISSIONS"]
	42	[4751]	GETTABLE 	R3 R3 R1 ; R3 := R3[R1]
	43	[4751]	TEST     	R3 0 ; if not R3 then PC := 53
	44	[4751]	JMP      	53 ; PC := 53
	45	[4751]	GETUPVAL 	R3 U0 ; R3 := U0
	46	[4751]	GETTABLE 	R3 R3 K23 ; R3 := R3[0xc14d48af]
	47	[4751]	CALL     	R3 1 2 ; R3 := R3()
	48	[4751]	TEST     	R3 0 ; if not R3 then PC := 53
	49	[4751]	JMP      	53 ; PC := 53
	50	[4753]	LOADK    	R3 K24 ; R3 := "Alt"
	51	[4753]	MOVE     	R4 R1 ; R4 := R1
	52	[4753]	CONCAT   	R1 R3 R4 ; R1 := R3 .. R4
	53	[4755]	GETGLOBAL	R3 K13 ; R3 := mRadialSolarMap
	54	[4755]	SELF     	R3 R3 K25 ; R4 := R3; R3 := R3[0x9b0efd87]
	55	[4755]	MOVE     	R5 R1 ; R5 := R1
	56	[4755]	CALL     	R3 3 1 ; R3(R4,R5)
	57	[4756]	RETURN   	R0 1 ; return 

function #107 <?:4760,4777> (30 instructions, 120 bytes at 000002112A6ABE40)
0 params, 5 slots, 2 upvalues, 0 locals, 17 constants, 0 functions
	1	[4761]	GETGLOBAL	R0 K0 ; R0 := 0x25d99d89
	2	[4761]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x4ae54c32]
	3	[4761]	GETUPVAL 	R2 U0 ; R2 := U0
	4	[4761]	GETTABLE 	R2 R2 K2 ; R2 := R2["SF_CLAN"]
	5	[4761]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	6	[4761]	TEST     	R0 1 ; if R0 then PC := 13
	7	[4761]	JMP      	13 ; PC := 13
	8	[4762]	GETUPVAL 	R0 U1 ; R0 := U1
	9	[4762]	GETTABLE 	R0 R0 K3 ; R0 := R0[0xe0cba3ca]
	10	[4762]	LOADK    	R1 K4 ; R1 := "/Lotus/Language/Menu/SolarMap_NoClanShipFeature"
	11	[4762]	CALL     	R0 2 1 ; R0(R1)
	12	[4762]	JMP      	30 ; PC := 30
	13	[4764]	GETGLOBAL	R0 K5 ; R0 := 0x7b998233
	14	[4764]	GETGLOBAL	R1 K6 ; R1 := _T
	15	[4764]	GETTABLE 	R1 R1 K7 ; R1 := R1["SquadOverlay"]
	16	[4764]	CALL     	R0 2 2 ; R0 := R0(R1)
	17	[4764]	TEST     	R0 1 ; if R0 then PC := 30
	18	[4764]	JMP      	30 ; PC := 30
	19	[4765]	NEWTABLE 	R0 0 3 ; R0 := {}
	20	[4765]	SETTABLE 	R0 K8 K9 ; R0["name"] := "DojoHUB_HUB"
	21	[4765]	SETTABLE 	R0 K10 K11 ; R0["quest"] := ""
	22	[4765]	SETTABLE 	R0 K12 K11 ; R0["difficulty"] := ""
	23	[4766]	GETGLOBAL	R1 K13 ; R1 := 0xe7f2b02f
	24	[4766]	SELF     	R1 R1 K14 ; R2 := R1; R1 := R1[0xd8f4f9d0]
	25	[4766]	GETGLOBAL	R3 K15 ; R3 := cjson
	26	[4766]	GETTABLE 	R3 R3 K16 ; R3 := R3[0xb139d7bc]
	27	[4766]	MOVE     	R4 R0 ; R4 := R0
	28	[4766]	CALL     	R3 2 0 ; R3,... := R3(R4)
	29	[4766]	CALL     	R1 0 1 ; R1(R2,...)
	30	[4777]	RETURN   	R0 1 ; return 

function #108 <?:4779,4790> (42 instructions, 168 bytes at 0000021132F739B0)
1 param, 6 slots, 1 upvalue, 0 locals, 12 constants, 0 functions
	1	[4780]	GETGLOBAL	R1 K0 ; R1 := mRailJack
	2	[4780]	GETTABLE 	R1 R1 K1 ; R1 := R1["Active"]
	3	[4780]	TEST     	R1 0 ; if not R1 then PC := 20
	4	[4780]	JMP      	20 ; PC := 20
	5	[4781]	GETGLOBAL	R1 K2 ; R1 := 0xe7f2b02f
	6	[4781]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x565be9ee]
	7	[4781]	CALL     	R1 2 2 ; R1 := R1(R2)
	8	[4782]	GETGLOBAL	R2 K4 ; R2 := 0x7b998233
	9	[4782]	MOVE     	R3 R1 ; R3 := R1
	10	[4782]	CALL     	R2 2 2 ; R2 := R2(R3)
	11	[4782]	TEST     	R2 1 ; if R2 then PC := 20
	12	[4782]	JMP      	20 ; PC := 20
	13	[4782]	SELF     	R2 R1 K5 ; R3 := R1; R2 := R1[0xfdd3576f]
	14	[4782]	CALL     	R2 2 2 ; R2 := R2(R3)
	15	[4782]	GETTABLE 	R2 R2 K6 ; R2 := R2["gameModeId"]
	16	[4782]	EQ       	1 R2 K7 ; if R2 == 0.000000 then PC := 20
	17	[4782]	JMP      	20 ; PC := 20
	18	[4783]	OP_LOADBOOL	R2 0 0 ; R2 := false
	19	[4783]	RETURN   	R2 2 ; return R2 
	20	[4787]	LOADK    	R2 := 30.000000
	21	[4789]	TEST     	R0 1 ; if R0 then PC := 39
	22	[4789]	JMP      	39 ; PC := 39
	23	[4789]	GETGLOBAL	R3 K2 ; R3 := 0xe7f2b02f
	24	[4789]	SELF     	R3 R3 K8 ; R4 := R3; R3 := R3[0xebe2f513]
	25	[4789]	CALL     	R3 2 2 ; R3 := R3(R4)
	26	[4789]	LE       	0 R3 K9 ; if R3 > 1.000000 then PC := 39
	27	[4789]	JMP      	39 ; PC := 39
	28	[4789]	GETUPVAL 	R3 U0 ; R3 := U0
	29	[4789]	GETTABLE 	R3 R3 K10 ; R3 := R3[0xa8947243]
	30	[4789]	CALL     	R3 1 2 ; R3 := R3()
	31	[4789]	TEST     	R3 0 ; if not R3 then PC := 41
	32	[4789]	JMP      	41 ; PC := 41
	33	[4789]	GETGLOBAL	R3 K2 ; R3 := 0xe7f2b02f
	34	[4789]	SELF     	R3 R3 K11 ; R4 := R3; R3 := R3[0x46712ae2]
	35	[4789]	MOVE     	R5 R2 ; R5 := R2
	36	[4789]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	37	[4789]	NOT      	R3 R3 ; R3 := not R3
	38	[4789]	JMP      	41 ; PC := 41
	39	[4789]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 40
	40	[4789]	OP_LOADBOOL	R3 1 0 ; R3 := true
	41	[4789]	RETURN   	R3 2 ; return R3 
	42	[4790]	RETURN   	R0 1 ; return 

function #109 <?:4792,4826> (87 instructions, 348 bytes at 00000211267DCD20)
1 param, 7 slots, 2 upvalues, 0 locals, 31 constants, 0 functions
	1	[4793]	GETGLOBAL	R1 K0 ; R1 := 0x34291f5c
	2	[4793]	GETTABLE 	R1 R1 K1 ; R1 := R1[0xe6b41adb]
	3	[4793]	CALL     	R1 1 2 ; R1 := R1()
	4	[4793]	TEST     	R1 0 ; if not R1 then PC := 12
	5	[4793]	JMP      	12 ; PC := 12
	6	[4794]	GETGLOBAL	R1 K2 ; R1 := 0x89326c93
	7	[4794]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xfb64e76c]
	8	[4794]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[4794]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x97c4ff93]
	10	[4794]	OP_LOADBOOL	R3 0 0 ; R3 := false
	11	[4794]	CALL     	R1 3 1 ; R1(R2,R3)
	12	[4797]	GETGLOBAL	R1 K5 ; R1 := 0xbe190284
	13	[4797]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0x33307f92]
	14	[4797]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[4798]	GETGLOBAL	R2 K7 ; R2 := 0x7b998233
	16	[4798]	MOVE     	R3 R1 ; R3 := R1
	17	[4798]	CALL     	R2 2 2 ; R2 := R2(R3)
	18	[4798]	TEST     	R2 1 ; if R2 then PC := 23
	19	[4798]	JMP      	23 ; PC := 23
	20	[4799]	SELF     	R2 R1 K8 ; R3 := R1; R2 := R1[0x368ad758]
	21	[4799]	OP_LOADBOOL	R4 1 0 ; R4 := true
	22	[4799]	CALL     	R2 3 1 ; R2(R3,R4)
	23	[4802]	GETUPVAL 	R2 U0 ; R2 := U0
	24	[4802]	MOVE     	R3 R0 ; R3 := R0
	25	[4802]	CALL     	R2 2 2 ; R2 := R2(R3)
	26	[4802]	TEST     	R2 0 ; if not R2 then PC := 40
	27	[4802]	JMP      	40 ; PC := 40
	28	[4803]	GETGLOBAL	R2 K7 ; R2 := 0x7b998233
	29	[4803]	GETGLOBAL	R3 K9 ; R3 := _T
	30	[4803]	GETTABLE 	R3 R3 K10 ; R3 := R3["SquadOverlay"]
	31	[4803]	CALL     	R2 2 2 ; R2 := R2(R3)
	32	[4803]	TEST     	R2 1 ; if R2 then PC := 40
	33	[4803]	JMP      	40 ; PC := 40
	34	[4804]	GETGLOBAL	R2 K9 ; R2 := _T
	35	[4804]	GETTABLE 	R2 R2 K10 ; R2 := R2["SquadOverlay"]
	36	[4804]	SELF     	R2 R2 K11 ; R3 := R2; R2 := R2[0xe4162eed]
	37	[4804]	LOADK    	R4 K12 ; R4 := "ForceExitMap"
	38	[4804]	LOADK    	R5 K13 ; R5 := ""
	39	[4804]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	40	[4808]	GETGLOBAL	R2 K9 ; R2 := _T
	41	[4808]	GETTABLE 	R2 R2 K14 ; R2 := R2[0x5e99b976]
	42	[4808]	LOADK    	R3 K15 ; R3 := "Clan"
	43	[4808]	CALL     	R2 2 1 ; R2(R3)
	44	[4809]	GETGLOBAL	R2 K9 ; R2 := _T
	45	[4809]	GETTABLE 	R2 R2 K14 ; R2 := R2[0x5e99b976]
	46	[4809]	LOADK    	R3 K16 ; R3 := "ClanSearch"
	47	[4809]	CALL     	R2 2 1 ; R2(R3)
	48	[4810]	GETGLOBAL	R2 K9 ; R2 := _T
	49	[4810]	GETTABLE 	R2 R2 K14 ; R2 := R2[0x5e99b976]
	50	[4810]	LOADK    	R3 K17 ; R3 := "InvasionSelection"
	51	[4810]	CALL     	R2 2 1 ; R2(R3)
	52	[4812]	GETGLOBAL	R2 K7 ; R2 := 0x7b998233
	53	[4812]	GETGLOBAL	R3 K9 ; R3 := _T
	54	[4812]	GETTABLE 	R3 R3 K18 ; R3 := R3["mTrigger"]
	55	[4812]	CALL     	R2 2 2 ; R2 := R2(R3)
	56	[4812]	TEST     	R2 1 ; if R2 then PC := 65
	57	[4812]	JMP      	65 ; PC := 65
	58	[4813]	GETGLOBAL	R2 K9 ; R2 := _T
	59	[4813]	GETTABLE 	R2 R2 K18 ; R2 := R2["mTrigger"]
	60	[4813]	SELF     	R2 R2 K19 ; R3 := R2; R2 := R2[0x8eb2112d]
	61	[4813]	LOADK    	R4 K20 ; R4 := "Close"
	62	[4813]	CALL     	R2 3 1 ; R2(R3,R4)
	63	[4814]	GETGLOBAL	R2 K9 ; R2 := _T
	64	[4814]	SETTABLE 	R2 K18 K21 ; R2["mTrigger"] := nil
	65	[4816]	GETGLOBAL	R2 K9 ; R2 := _T
	66	[4816]	SETTABLE 	R2 K22 K21 ; R2["DiegeticPosition"] := nil
	67	[4818]	GETUPVAL 	R2 U1 ; R2 := U1
	68	[4818]	GETTABLE 	R2 R2 K23 ; R2 := R2[0x659d451f]
	69	[4818]	GETGLOBAL	R3 K24 ; R3 := 0xb607efe1
	70	[4818]	CALL     	R2 2 1 ; R2(R3)
	71	[4820]	GETGLOBAL	R2 K2 ; R2 := 0x89326c93
	72	[4820]	SELF     	R2 R2 K25 ; R3 := R2; R2 := R2[0x78298275]
	73	[4820]	CALL     	R2 2 2 ; R2 := R2(R3)
	74	[4821]	GETGLOBAL	R3 K7 ; R3 := 0x7b998233
	75	[4821]	MOVE     	R4 R2 ; R4 := R2
	76	[4821]	CALL     	R3 2 2 ; R3 := R3(R4)
	77	[4821]	TEST     	R3 1 ; if R3 then PC := 84
	78	[4821]	JMP      	84 ; PC := 84
	79	[4822]	SELF     	R3 R2 K26 ; R4 := R2; R3 := R2[0xb2532845]
	80	[4822]	GETGLOBAL	R5 K27 ; R5 := 0x0469f296
	81	[4822]	LOADK    	R6 K28 ; R6 := "IDLE"
	82	[4822]	CALL     	R5 2 0 ; R5,... := R5(R6)
	83	[4822]	CALL     	R3 0 1 ; R3(R4,...)
	84	[4825]	GETGLOBAL	R3 K29 ; R3 := 0xae91e43b
	85	[4825]	SELF     	R3 R3 K30 ; R4 := R3; R3 := R3[0x32302b4a]
	86	[4825]	CALL     	R3 2 1 ; R3(R4)
	87	[4826]	RETURN   	R0 1 ; return 

function #110 <?:4828,4849> (47 instructions, 188 bytes at 00000211267DCDB0)
1 param, 6 slots, 1 upvalue, 0 locals, 10 constants, 0 functions
	1	[4829]	GETTABLE 	R1 R0 K0 ; R1 := R0["IsHomeNode"]
	2	[4829]	TEST     	R1 1 ; if R1 then PC := 5
	3	[4829]	JMP      	5 ; PC := 5
	4	[4830]	RETURN   	R0 1 ; return 
	5	[4833]	GETTABLE 	R1 R0 K1 ; R1 := R0["SeenTimer"]
	6	[4833]	EQ       	1 R1 K2 ; if R1 == nil then PC := 13
	7	[4833]	JMP      	13 ; PC := 13
	8	[4834]	GETUPVAL 	R1 U0 ; R1 := U0
	9	[4834]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x775c858b]
	10	[4834]	GETTABLE 	R3 R0 K1 ; R3 := R0["SeenTimer"]
	11	[4834]	CALL     	R1 3 1 ; R1(R2,R3)
	12	[4835]	SETTABLE 	R0 K1 K2 ; R0["SeenTimer"] := nil
	13	[4838]	GETGLOBAL	R1 K4 ; R1 := 0x25d99d89
	14	[4838]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xbf6c9575]
	15	[4838]	GETTABLE 	R3 R0 K6 ; R3 := R0["NodeIntro"]
	16	[4838]	CALL     	R1 3 1 ; R1(R2,R3)
	17	[4840]	LOADK    	R1 := 1.000000
	18	[4840]	GETGLOBAL	R2 K7 ; R2 := mFxNodes
	19	[4840]	GETTABLE 	R2 R2 K8 ; R2 := R2["Pending"]
	20	[4840]	LEN      	R2 R2 ; R2 := # R2
	21	[4840]	LOADK    	R3 := 1.000000
	22	[4840]	FORPREP  	R1 46 ; R1 -= R3; PC := 46
	23	[4843]	GETGLOBAL	R5 K7 ; R5 := mFxNodes
	24	[4843]	GETTABLE 	R5 R5 K8 ; R5 := R5["Pending"]
	25	[4843]	GETTABLE 	R5 R5 R4 ; R5 := R5[R4]
	26	[4843]	EQ       	1 R5 K2 ; if R5 == nil then PC := 46
	27	[4843]	JMP      	46 ; PC := 46
	28	[4843]	GETGLOBAL	R5 K7 ; R5 := mFxNodes
	29	[4843]	GETTABLE 	R5 R5 K8 ; R5 := R5["Pending"]
	30	[4843]	GETTABLE 	R5 R5 R4 ; R5 := R5[R4]
	31	[4843]	GETTABLE 	R5 R5 K9 ; R5 := R5["Node"]
	32	[4843]	EQ       	1 R5 K2 ; if R5 == nil then PC := 46
	33	[4843]	JMP      	46 ; PC := 46
	34	[4843]	GETGLOBAL	R5 K7 ; R5 := mFxNodes
	35	[4843]	GETTABLE 	R5 R5 K8 ; R5 := R5["Pending"]
	36	[4843]	GETTABLE 	R5 R5 R4 ; R5 := R5[R4]
	37	[4843]	GETTABLE 	R5 R5 K9 ; R5 := R5["Node"]
	38	[4843]	GETTABLE 	R5 R5 K0 ; R5 := R5["IsHomeNode"]
	39	[4843]	TEST     	R5 0 ; if not R5 then PC := 46
	40	[4843]	JMP      	46 ; PC := 46
	41	[4844]	GETGLOBAL	R5 K7 ; R5 := mFxNodes
	42	[4844]	GETTABLE 	R5 R5 K8 ; R5 := R5["Pending"]
	43	[4844]	GETTABLE 	R5 R5 R4 ; R5 := R5[R4]
	44	[4844]	SETTABLE 	R5 K9 K2 ; R5["Node"] := nil
	45	[4846]	JMP      	47 ; PC := 47
	46	[4840]	FORLOOP  	R1 23 ; R1 += R3; if R1 <= R2 then begin PC := 23; R4 := R1 end
	47	[4849]	RETURN   	R0 1 ; return 

function #111 <?:4851,5105> (1010 instructions, 4040 bytes at 0000021137AB4540)
1 param, 28 slots, 20 upvalues, 0 locals, 161 constants, 1 function
	1	[4852]	GETGLOBAL	R1 K0 ; R1 := mHover
	2	[4852]	GETTABLE 	R1 R1 K1 ; R1 := R1["Node"]
	3	[4852]	TEST     	R1 0 ; if not R1 then PC := 17
	4	[4852]	JMP      	17 ; PC := 17
	5	[4852]	GETGLOBAL	R1 K0 ; R1 := mHover
	6	[4852]	GETTABLE 	R1 R1 K1 ; R1 := R1["Node"]
	7	[4852]	GETTABLE 	R1 R1 K2 ; R1 := R1["locked"]
	8	[4852]	TEST     	R1 0 ; if not R1 then PC := 12
	9	[4852]	JMP      	12 ; PC := 12
	10	[4852]	TEST     	R0 0 ; if not R0 then PC := 17
	11	[4852]	JMP      	17 ; PC := 17
	12	[4852]	GETGLOBAL	R1 K0 ; R1 := mHover
	13	[4852]	GETTABLE 	R1 R1 K1 ; R1 := R1["Node"]
	14	[4852]	GETTABLE 	R1 R1 K3 ; R1 := R1["locationEnabled"]
	15	[4852]	TEST     	R1 1 ; if R1 then PC := 18
	16	[4852]	JMP      	18 ; PC := 18
	17	[4853]	RETURN   	R0 1 ; return 
	18	[4856]	GETGLOBAL	R1 K4 ; R1 := _T
	19	[4856]	GETTABLE 	R1 R1 K5 ; R1 := R1["gPendingMission"]
	20	[4856]	EQ       	1 R1 K6 ; if R1 == nil then PC := 36
	21	[4856]	JMP      	36 ; PC := 36
	22	[4856]	GETGLOBAL	R1 K0 ; R1 := mHover
	23	[4856]	GETTABLE 	R1 R1 K1 ; R1 := R1["Node"]
	24	[4856]	GETTABLE 	R1 R1 K7 ; R1 := R1["radialSector"]
	25	[4856]	EQ       	1 R1 K6 ; if R1 == nil then PC := 36
	26	[4856]	JMP      	36 ; PC := 36
	27	[4856]	GETGLOBAL	R1 K4 ; R1 := _T
	28	[4856]	GETTABLE 	R1 R1 K5 ; R1 := R1["gPendingMission"]
	29	[4856]	GETTABLE 	R1 R1 K8 ; R1 := R1["baseNodeName"]
	30	[4856]	GETGLOBAL	R2 K0 ; R2 := mHover
	31	[4856]	GETTABLE 	R2 R2 K1 ; R2 := R2["Node"]
	32	[4856]	GETTABLE 	R2 R2 K7 ; R2 := R2["radialSector"]
	33	[4856]	GETTABLE 	R2 R2 K9 ; R2 := R2["name"]
	34	[4856]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 37
	35	[4856]	JMP      	37 ; PC := 37
	36	[4856]	OP_LOADBOOL	R1 0 1 ; R1 := false; PC := 37
	37	[4856]	OP_LOADBOOL	R1 1 0 ; R1 := true
	38	[4857]	GETGLOBAL	R2 K10 ; R2 := 0x7b998233
	39	[4857]	GETGLOBAL	R3 K4 ; R3 := _T
	40	[4857]	GETTABLE 	R3 R3 K11 ; R3 := R3["SquadOverlay"]
	41	[4857]	CALL     	R2 2 2 ; R2 := R2(R3)
	42	[4857]	TEST     	R2 1 ; if R2 then PC := 53
	43	[4857]	JMP      	53 ; PC := 53
	44	[4857]	TEST     	R1 0 ; if not R1 then PC := 53
	45	[4857]	JMP      	53 ; PC := 53
	46	[4858]	GETGLOBAL	R2 K4 ; R2 := _T
	47	[4858]	GETTABLE 	R2 R2 K11 ; R2 := R2["SquadOverlay"]
	48	[4858]	SELF     	R2 R2 K12 ; R3 := R2; R2 := R2[0xe4162eed]
	49	[4858]	LOADK    	R4 K13 ; R4 := "Accept"
	50	[4858]	LOADK    	R5 K14 ; R5 := ""
	51	[4858]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	52	[4859]	RETURN   	R0 1 ; return 
	53	[4862]	GETGLOBAL	R2 K15 ; R2 := 0x64fb1586
	54	[4862]	GETGLOBAL	R3 K0 ; R3 := mHover
	55	[4862]	GETTABLE 	R3 R3 K1 ; R3 := R3["Node"]
	56	[4862]	GETTABLE 	R3 R3 K7 ; R3 := R3["radialSector"]
	57	[4862]	GETTABLE 	R3 R3 K9 ; R3 := R3["name"]
	58	[4862]	CALL     	R2 2 2 ; R2 := R2(R3)
	59	[4863]	GETGLOBAL	R3 K0 ; R3 := mHover
	60	[4863]	GETTABLE 	R3 R3 K1 ; R3 := R3["Node"]
	61	[4863]	GETTABLE 	R3 R3 K7 ; R3 := R3["radialSector"]
	62	[4863]	GETTABLE 	R3 R3 K16 ; R3 := R3["keyChain"]
	63	[4864]	LOADNIL  	R4 R4 ; R4 := nil
	64	[4865]	GETGLOBAL	R5 K0 ; R5 := mHover
	65	[4865]	GETTABLE 	R5 R5 K1 ; R5 := R5["Node"]
	66	[4865]	GETTABLE 	R5 R5 K7 ; R5 := R5["radialSector"]
	67	[4865]	GETTABLE 	R5 R5 K17 ; R5 := R5["mission"]
	68	[4865]	GETTABLE 	R5 R5 K18 ; R5 := R5["difficulty"]
	69	[4866]	OP_LOADBOOL	R6 0 0 ; R6 := false
	70	[4868]	GETGLOBAL	R7 K10 ; R7 := 0x7b998233
	71	[4868]	GETGLOBAL	R8 K0 ; R8 := mHover
	72	[4868]	GETTABLE 	R8 R8 K1 ; R8 := R8["Node"]
	73	[4868]	GETTABLE 	R8 R8 K7 ; R8 := R8["radialSector"]
	74	[4868]	GETTABLE 	R8 R8 K17 ; R8 := R8["mission"]
	75	[4868]	GETTABLE 	R8 R8 K19 ; R8 := R8["levelKeyName"]
	76	[4868]	CALL     	R7 2 2 ; R7 := R7(R8)
	77	[4868]	TEST     	R7 1 ; if R7 then PC := 121
	78	[4868]	JMP      	121 ; PC := 121
	79	[4868]	GETGLOBAL	R7 K20 ; R7 := mRailJack
	80	[4868]	GETTABLE 	R7 R7 K21 ; R7 := R7["Active"]
	81	[4868]	TEST     	R7 0 ; if not R7 then PC := 96
	82	[4868]	JMP      	96 ; PC := 96
	83	[4868]	GETGLOBAL	R7 K22 ; R7 := 0x7f5022cf
	84	[4868]	GETTABLE 	R7 R7 K23 ; R7 := R7[0xa5c556b9]
	85	[4868]	GETGLOBAL	R8 K0 ; R8 := mHover
	86	[4868]	GETTABLE 	R8 R8 K1 ; R8 := R8["Node"]
	87	[4868]	GETTABLE 	R8 R8 K7 ; R8 := R8["radialSector"]
	88	[4868]	GETTABLE 	R8 R8 K17 ; R8 := R8["mission"]
	89	[4868]	GETTABLE 	R8 R8 K19 ; R8 := R8["levelKeyName"]
	90	[4868]	SELF     	R8 R8 K24 ; R9 := R8; R8 := R8[0xed4e0128]
	91	[4868]	CALL     	R8 2 2 ; R8 := R8(R9)
	92	[4868]	LOADK    	R9 K25 ; R9 := "CrewBattle"
	93	[4868]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	94	[4868]	TEST     	R7 0 ; if not R7 then PC := 121
	95	[4868]	JMP      	121 ; PC := 121
	96	[4868]	GETGLOBAL	R7 K22 ; R7 := 0x7f5022cf
	97	[4868]	GETTABLE 	R7 R7 K23 ; R7 := R7[0xa5c556b9]
	98	[4868]	MOVE     	R8 R2 ; R8 := R2
	99	[4868]	GETUPVAL 	R9 U0 ; R9 := U0
	100	[4868]	GETTABLE 	R9 R9 K26 ; R9 := R9["KEY_TAG"]
	101	[4868]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	102	[4868]	TEST     	R7 1 ; if R7 then PC := 121
	103	[4868]	JMP      	121 ; PC := 121
	104	[4868]	GETGLOBAL	R7 K4 ; R7 := _T
	105	[4868]	GETTABLE 	R7 R7 K27 ; R7 := R7["DesiredGoToNodeTag"]
	106	[4868]	TEST     	R7 1 ; if R7 then PC := 121
	107	[4868]	JMP      	121 ; PC := 121
	108	[4870]	GETGLOBAL	R7 K15 ; R7 := 0x64fb1586
	109	[4870]	GETGLOBAL	R8 K0 ; R8 := mHover
	110	[4870]	GETTABLE 	R8 R8 K1 ; R8 := R8["Node"]
	111	[4870]	GETTABLE 	R8 R8 K7 ; R8 := R8["radialSector"]
	112	[4870]	GETTABLE 	R8 R8 K17 ; R8 := R8["mission"]
	113	[4870]	GETTABLE 	R8 R8 K19 ; R8 := R8["levelKeyName"]
	114	[4870]	SELF     	R8 R8 K24 ; R9 := R8; R8 := R8[0xed4e0128]
	115	[4870]	CALL     	R8 2 0 ; R8,... := R8(R9)
	116	[4870]	CALL     	R7 0 2 ; R7 := R7(R8,...)
	117	[4870]	GETUPVAL 	R8 U0 ; R8 := U0
	118	[4870]	GETTABLE 	R8 R8 K26 ; R8 := R8["KEY_TAG"]
	119	[4870]	CONCAT   	R2 R7 R8 ; R2 := R7 .. R8
	120	[4871]	OP_LOADBOOL	R6 1 0 ; R6 := true
	121	[4874]	GETGLOBAL	R7 K10 ; R7 := 0x7b998233
	122	[4874]	MOVE     	R8 R3 ; R8 := R3
	123	[4874]	CALL     	R7 2 2 ; R7 := R7(R8)
	124	[4874]	TEST     	R7 1 ; if R7 then PC := 163
	125	[4874]	JMP      	163 ; PC := 163
	126	[4874]	GETGLOBAL	R7 K28 ; R7 := 0xbe190284
	127	[4874]	SELF     	R7 R7 K29 ; R8 := R7; R7 := R7[0xf2deaf69]
	128	[4874]	GETGLOBAL	R9 K30 ; R9 := gLotusAttractModeGameRulesType
	129	[4874]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	130	[4874]	TEST     	R7 1 ; if R7 then PC := 138
	131	[4874]	JMP      	138 ; PC := 138
	132	[4874]	GETGLOBAL	R7 K28 ; R7 := 0xbe190284
	133	[4874]	SELF     	R7 R7 K29 ; R8 := R7; R7 := R7[0xf2deaf69]
	134	[4874]	GETGLOBAL	R9 K31 ; R9 := gLotusHubGameRulesType
	135	[4874]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	136	[4874]	TEST     	R7 0 ; if not R7 then PC := 163
	137	[4874]	JMP      	163 ; PC := 163
	138	[4875]	LOADNIL  	R7 R7 ; R7 := nil
	139	[4876]	GETGLOBAL	R8 K22 ; R8 := 0x7f5022cf
	140	[4876]	GETTABLE 	R8 R8 K23 ; R8 := R8[0xa5c556b9]
	141	[4876]	MOVE     	R9 R2 ; R9 := R2
	142	[4876]	GETUPVAL 	R10 U0 ; R10 := U0
	143	[4876]	GETTABLE 	R10 R10 K26 ; R10 := R10["KEY_TAG"]
	144	[4876]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	145	[4877]	EQ       	1 R8 K6 ; if R8 == nil then PC := 157
	146	[4877]	JMP      	157 ; PC := 157
	147	[4878]	GETGLOBAL	R9 K22 ; R9 := 0x7f5022cf
	148	[4878]	GETTABLE 	R9 R9 K32 ; R9 := R9[0x1a94c9cc]
	149	[4878]	MOVE     	R10 R2 ; R10 := R2
	150	[4878]	LOADK    	R11 := 1.000000
	151	[4878]	SUB      	R12 R8 K33 ; R12 := R8 - 1.000000
	152	[4878]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	153	[4879]	GETGLOBAL	R10 K34 ; R10 := 0xb009bbc6
	154	[4879]	MOVE     	R11 R9 ; R11 := R9
	155	[4879]	CALL     	R10 2 2 ; R10 := R10(R11)
	156	[4879]	MOVE     	R7 R10 ; R7 := R10
	157	[4881]	GETGLOBAL	R10 K28 ; R10 := 0xbe190284
	158	[4881]	SELF     	R10 R10 K35 ; R11 := R10; R10 := R10[0xf3ab18b1]
	159	[4881]	MOVE     	R12 R3 ; R12 := R3
	160	[4881]	MOVE     	R13 R7 ; R13 := R7
	161	[4881]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	162	[4881]	JMP      	208 ; PC := 208
	163	[4882]	GETGLOBAL	R10 K22 ; R10 := 0x7f5022cf
	164	[4882]	GETTABLE 	R10 R10 K23 ; R10 := R10[0xa5c556b9]
	165	[4882]	MOVE     	R11 R2 ; R11 := R2
	166	[4882]	GETUPVAL 	R12 U0 ; R12 := U0
	167	[4882]	GETTABLE 	R12 R12 K26 ; R12 := R12["KEY_TAG"]
	168	[4882]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	169	[4882]	TEST     	R10 0 ; if not R10 then PC := 208
	170	[4882]	JMP      	208 ; PC := 208
	171	[4883]	GETGLOBAL	R10 K22 ; R10 := 0x7f5022cf
	172	[4883]	GETTABLE 	R10 R10 K23 ; R10 := R10[0xa5c556b9]
	173	[4883]	MOVE     	R11 R2 ; R11 := R2
	174	[4883]	GETUPVAL 	R12 U0 ; R12 := U0
	175	[4883]	GETTABLE 	R12 R12 K26 ; R12 := R12["KEY_TAG"]
	176	[4883]	CALL     	R10 3 2 ; R10 := R10(R11,R12)
	177	[4884]	EQ       	1 R10 K6 ; if R10 == nil then PC := 208
	178	[4884]	JMP      	208 ; PC := 208
	179	[4885]	GETGLOBAL	R11 K22 ; R11 := 0x7f5022cf
	180	[4885]	GETTABLE 	R11 R11 K32 ; R11 := R11[0x1a94c9cc]
	181	[4885]	MOVE     	R12 R2 ; R12 := R2
	182	[4885]	LOADK    	R13 := 1.000000
	183	[4885]	SUB      	R14 R10 K33 ; R14 := R10 - 1.000000
	184	[4885]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	185	[4886]	GETGLOBAL	R12 K36 ; R12 := 0x7ed0a956
	186	[4886]	MOVE     	R13 R11 ; R13 := R11
	187	[4886]	CALL     	R12 2 2 ; R12 := R12(R13)
	188	[4887]	GETGLOBAL	R13 K10 ; R13 := 0x7b998233
	189	[4887]	MOVE     	R14 R12 ; R14 := R12
	190	[4887]	CALL     	R13 2 2 ; R13 := R13(R14)
	191	[4887]	TEST     	R13 1 ; if R13 then PC := 208
	192	[4887]	JMP      	208 ; PC := 208
	193	[4887]	GETGLOBAL	R13 K10 ; R13 := 0x7b998233
	194	[4887]	GETUPVAL 	R14 U1 ; R14 := U1
	195	[4887]	GETTABLE 	R14 R14 K37 ; R14 := R14["baseRaidKeyType"]
	196	[4887]	CALL     	R13 2 2 ; R13 := R13(R14)
	197	[4887]	TEST     	R13 1 ; if R13 then PC := 208
	198	[4887]	JMP      	208 ; PC := 208
	199	[4887]	SELF     	R13 R12 K29 ; R14 := R12; R13 := R12[0xf2deaf69]
	200	[4887]	GETUPVAL 	R15 U1 ; R15 := U1
	201	[4887]	GETTABLE 	R15 R15 K37 ; R15 := R15["baseRaidKeyType"]
	202	[4887]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	203	[4887]	TEST     	R13 0 ; if not R13 then PC := 208
	204	[4887]	JMP      	208 ; PC := 208
	205	[4888]	SELF     	R13 R12 K24 ; R14 := R12; R13 := R12[0xed4e0128]
	206	[4888]	CALL     	R13 2 2 ; R13 := R13(R14)
	207	[4888]	MOVE     	R4 R13 ; R4 := R13
	208	[4893]	GETGLOBAL	R13 K22 ; R13 := 0x7f5022cf
	209	[4893]	GETTABLE 	R13 R13 K23 ; R13 := R13[0xa5c556b9]
	210	[4893]	MOVE     	R14 R2 ; R14 := R2
	211	[4893]	LOADK    	R15 K38 ; R15 := "FeaturedDojo"
	212	[4893]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	213	[4893]	TEST     	R13 0 ; if not R13 then PC := 283
	214	[4893]	JMP      	283 ; PC := 283
	215	[4894]	GETUPVAL 	R13 U2 ; R13 := U2
	216	[4894]	GETTABLE 	R13 R13 K39 ; R13 := R13[0x23a862e6]
	217	[4894]	CALL     	R13 1 2 ; R13 := R13()
	218	[4894]	TEST     	R13 1 ; if R13 then PC := 274
	219	[4894]	JMP      	274 ; PC := 274
	220	[4895]	GETGLOBAL	R13 K40 ; R13 := 0x03f57322
	221	[4895]	GETGLOBAL	R14 K22 ; R14 := 0x7f5022cf
	222	[4895]	GETTABLE 	R14 R14 K41 ; R14 := R14[0x348c01f7]
	223	[4895]	MOVE     	R15 R2 ; R15 := R2
	224	[4895]	LOADK    	R16 K42 ; R16 := "%d+"
	225	[4895]	CALL     	R14 3 0 ; R14,... := R14(R15,R16)
	226	[4895]	CALL     	R13 0 2 ; R13 := R13(R14,...)
	227	[4896]	GETGLOBAL	R14 K43 ; R14 := 0x76ea806b
	228	[4896]	SELF     	R14 R14 K44 ; R15 := R14; R14 := R14[0x3f3ae64c]
	229	[4896]	LOADK    	R16 := 0.000000
	230	[4896]	CALL     	R14 3 2 ; R14 := R14(R15,R16)
	231	[4896]	SELF     	R14 R14 K45 ; R15 := R14; R14 := R14[0x80563238]
	232	[4896]	CALL     	R14 2 2 ; R14 := R14(R15)
	233	[4896]	SELF     	R14 R14 K46 ; R15 := R14; R14 := R14[0x69727e0b]
	234	[4896]	CALL     	R14 2 2 ; R14 := R14(R15)
	235	[4896]	GETTABLE 	R14 R14 K47 ; R14 := R14["mFeaturedGuilds"]
	236	[4896]	GETTABLE 	R14 R14 R13 ; R14 := R14[R13]
	237	[4896]	GETTABLE 	R14 R14 K48 ; R14 := R14["mId"]
	238	[4897]	GETGLOBAL	R15 K10 ; R15 := 0x7b998233
	239	[4897]	GETGLOBAL	R16 K4 ; R16 := _T
	240	[4897]	GETTABLE 	R16 R16 K11 ; R16 := R16["SquadOverlay"]
	241	[4897]	CALL     	R15 2 2 ; R15 := R15(R16)
	242	[4897]	TEST     	R15 1 ; if R15 then PC := 282
	243	[4897]	JMP      	282 ; PC := 282
	244	[4898]	GETGLOBAL	R15 K10 ; R15 := 0x7b998233
	245	[4898]	GETGLOBAL	R16 K49 ; R16 := 0xcb79539e
	246	[4898]	CALL     	R15 2 2 ; R15 := R15(R16)
	247	[4898]	TEST     	R15 1 ; if R15 then PC := 256
	248	[4898]	JMP      	256 ; PC := 256
	249	[4899]	GETGLOBAL	R15 K49 ; R15 := 0xcb79539e
	250	[4899]	SELF     	R15 R15 K50 ; R16 := R15; R15 := R15[0x8b8fb8b7]
	251	[4899]	GETGLOBAL	R17 K51 ; R17 := 0x0469f296
	252	[4899]	LOADK    	R18 K52 ; R18 := "FEATURED_DOJO"
	253	[4899]	CALL     	R17 2 2 ; R17 := R17(R18)
	254	[4899]	MOVE     	R18 R13 ; R18 := R13
	255	[4899]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	256	[4901]	GETGLOBAL	R15 K4 ; R15 := _T
	257	[4901]	GETTABLE 	R15 R15 K11 ; R15 := R15["SquadOverlay"]
	258	[4901]	SELF     	R15 R15 K12 ; R16 := R15; R15 := R15[0xe4162eed]
	259	[4901]	LOADK    	R17 K53 ; R17 := "InitiateDojoVisit"
	260	[4901]	GETTABLE 	R18 R14 K48 ; R18 := R14["mId"]
	261	[4901]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	262	[4903]	NEWTABLE 	R15 0 3 ; R15 := {}
	263	[4903]	SETTABLE 	R15 K9 K54 ; R15["name"] := "DojoHUB_HUB"
	264	[4903]	SETTABLE 	R15 K55 K14 ; R15["quest"] := ""
	265	[4903]	SETTABLE 	R15 K18 K14 ; R15["difficulty"] := ""
	266	[4904]	GETGLOBAL	R16 K56 ; R16 := 0xe7f2b02f
	267	[4904]	SELF     	R16 R16 K57 ; R17 := R16; R16 := R16[0xd8f4f9d0]
	268	[4904]	GETGLOBAL	R18 K58 ; R18 := cjson
	269	[4904]	GETTABLE 	R18 R18 K59 ; R18 := R18[0xb139d7bc]
	270	[4904]	MOVE     	R19 R15 ; R19 := R15
	271	[4904]	CALL     	R18 2 0 ; R18,... := R18(R19)
	272	[4904]	CALL     	R16 0 1 ; R16(R17,...)
	273	[4905]	JMP      	282 ; PC := 282
	274	[4907]	GETUPVAL 	R16 U2 ; R16 := U2
	275	[4907]	GETTABLE 	R16 R16 K60 ; R16 := R16[0xe0cba3ca]
	276	[4907]	GETGLOBAL	R17 K61 ; R17 := 0xae91e43b
	277	[4907]	SELF     	R17 R17 K62 ; R18 := R17; R17 := R17[0x42b04007]
	278	[4907]	LOADK    	R19 K63 ; R19 := "/Lotus/Language/Clan/RestrictedUGCWarning"
	279	[4907]	OP_LOADBOOL	R20 0 0 ; R20 := false
	280	[4907]	CALL     	R17 4 0 ; R17,... := R17(R18,R19,R20)
	281	[4907]	CALL     	R16 0 1 ; R16(R17,...)
	282	[4909]	RETURN   	R0 1 ; return 
	283	[4912]	GETGLOBAL	R16 K22 ; R16 := 0x7f5022cf
	284	[4912]	GETTABLE 	R16 R16 K23 ; R16 := R16[0xa5c556b9]
	285	[4912]	MOVE     	R17 R2 ; R17 := R2
	286	[4912]	LOADK    	R18 K64 ; R18 := "ToggleBootLevel"
	287	[4912]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	288	[4912]	TEST     	R16 0 ; if not R16 then PC := 343
	289	[4912]	JMP      	343 ; PC := 343
	290	[4913]	GETGLOBAL	R16 K65 ; R16 := 0x25d99d89
	291	[4913]	SELF     	R16 R16 K66 ; R17 := R16; R16 := R16[0x21a1810f]
	292	[4913]	GETGLOBAL	R18 K0 ; R18 := mHover
	293	[4913]	GETTABLE 	R18 R18 K1 ; R18 := R18["Node"]
	294	[4913]	GETTABLE 	R18 R18 K67 ; R18 := R18["NodeIntro"]
	295	[4913]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	296	[4913]	TEST     	R16 1 ; if R16 then PC := 302
	297	[4913]	JMP      	302 ; PC := 302
	298	[4914]	GETUPVAL 	R16 U3 ; R16 := U3
	299	[4914]	GETGLOBAL	R17 K0 ; R17 := mHover
	300	[4914]	GETTABLE 	R17 R17 K1 ; R17 := R17["Node"]
	301	[4914]	CALL     	R16 2 1 ; R16(R17)
	302	[4917]	GETGLOBAL	R16 K65 ; R16 := 0x25d99d89
	303	[4917]	SELF     	R16 R16 K68 ; R17 := R16; R16 := R16[0xcd57f819]
	304	[4917]	OP_LOADBOOL	R18 1 0 ; R18 := true
	305	[4917]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	306	[4917]	GETTABLE 	R16 R16 K69 ; R16 := R16["mBootLocation"]
	307	[4918]	GETUPVAL 	R17 U2 ; R17 := U2
	308	[4918]	GETTABLE 	R17 R17 K70 ; R17 := R17[0x06d055f9]
	309	[4918]	EQ       	1 R16 K72 ; if R16 == 0.000000 then PC := 312
	310	[4918]	JMP      	312 ; PC := 312
	311	[4918]	OP_LOADBOOL	R18 0 1 ; R18 := false; PC := 312
	312	[4918]	OP_LOADBOOL	R18 1 0 ; R18 := true
	313	[4918]	LOADK    	R19 := 1.000000
	314	[4918]	LOADK    	R20 := 0.000000
	315	[4918]	CALL     	R17 4 2 ; R17 := R17(R18,R19,R20)
	316	[4919]	GETGLOBAL	R18 K73 ; R18 := 0x603636ad
	317	[4919]	GETUPVAL 	R19 U2 ; R19 := U2
	318	[4919]	GETTABLE 	R19 R19 K70 ; R19 := R19[0x06d055f9]
	319	[4919]	EQ       	1 R17 K72 ; if R17 == 0.000000 then PC := 322
	320	[4919]	JMP      	322 ; PC := 322
	321	[4919]	OP_LOADBOOL	R20 0 1 ; R20 := false; PC := 322
	322	[4919]	OP_LOADBOOL	R20 1 0 ; R20 := true
	323	[4919]	LOADK    	R21 K74 ; R21 := "/Lotus/Language/NewWar/NewWarP3M1b"
	324	[4919]	LOADK    	R22 K75 ; R22 := "/Lotus/Language/NewWar/NewWarP2DrifterCamp"
	325	[4919]	CALL     	R19 4 2 ; R19 := R19(R20,R21,R22)
	326	[4919]	NEWTABLE 	R20 0 0 ; R20 := {}
	327	[4919]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	328	[4920]	GETGLOBAL	R19 K73 ; R19 := 0x603636ad
	329	[4920]	LOADK    	R20 K76 ; R20 := "/Lotus/Language/NewWar/ChangeBootLevel"
	330	[4920]	NEWTABLE 	R21 0 1 ; R21 := {}
	331	[4920]	SETTABLE 	R21 K77 R18 ; R21["LOCATION"] := R18
	332	[4920]	CALL     	R19 3 2 ; R19 := R19(R20,R21)
	333	[4921]	GETUPVAL 	R20 U2 ; R20 := U2
	334	[4921]	GETTABLE 	R20 R20 K78 ; R20 := R20[0xdedfded7]
	335	[4921]	MOVE     	R21 R19 ; R21 := R19
	336	[4945]	CLOSURE  	R22 0 ; R22 := closure(Function #1)
	337	[4945]	MOVE     	R0 R17 ; R0 := R17
	338	[4945]	GETUPVAL 	R0 U2 ; R0 := U2
	339	[4945]	GETUPVAL 	R0 U4 ; R0 := U4
	340	[4921]	CALL     	R20 3 1 ; R20(R21,R22)
	341	[4946]	RETURN   	R0 1 ; return 
	342	[4946]	CLOSE    	R16 ; SAVE R16,...
	343	[4950]	GETUPVAL 	R16 U5 ; R16 := U5
	344	[4950]	GETGLOBAL	R17 K79 ; R17 := 0x89326c93
	345	[4950]	SELF     	R17 R17 K80 ; R18 := R17; R17 := R17[0x78298275]
	346	[4950]	CALL     	R17 2 0 ; R17,... := R17(R18)
	347	[4950]	CALL     	R16 0 2 ; R16 := R16(R17,...)
	348	[4950]	TEST     	R16 1 ; if R16 then PC := 361
	349	[4950]	JMP      	361 ; PC := 361
	350	[4950]	GETGLOBAL	R16 K22 ; R16 := 0x7f5022cf
	351	[4950]	GETTABLE 	R16 R16 K23 ; R16 := R16[0xa5c556b9]
	352	[4950]	MOVE     	R17 R2 ; R17 := R2
	353	[4950]	LOADK    	R18 K81 ; R18 := "Dojo"
	354	[4950]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	355	[4950]	TEST     	R16 0 ; if not R16 then PC := 361
	356	[4950]	JMP      	361 ; PC := 361
	357	[4951]	GETUPVAL 	R16 U6 ; R16 := U6
	358	[4951]	CALL     	R16 1 1 ; R16()
	359	[4952]	RETURN   	R0 1 ; return 
	360	[4952]	JMP      	426 ; PC := 426
	361	[4953]	GETGLOBAL	R16 K22 ; R16 := 0x7f5022cf
	362	[4953]	GETTABLE 	R16 R16 K23 ; R16 := R16[0xa5c556b9]
	363	[4953]	MOVE     	R17 R2 ; R17 := R2
	364	[4953]	LOADK    	R18 K82 ; R18 := "StalkerHideout"
	365	[4953]	CALL     	R16 3 2 ; R16 := R16(R17,R18)
	366	[4953]	TEST     	R16 0 ; if not R16 then PC := 426
	367	[4953]	JMP      	426 ; PC := 426
	368	[4954]	LOADNIL  	R16 R16 ; R16 := nil
	369	[4955]	GETGLOBAL	R17 K22 ; R17 := 0x7f5022cf
	370	[4955]	GETTABLE 	R17 R17 K23 ; R17 := R17[0xa5c556b9]
	371	[4955]	MOVE     	R18 R2 ; R18 := R2
	372	[4955]	GETUPVAL 	R19 U0 ; R19 := U0
	373	[4955]	GETTABLE 	R19 R19 K26 ; R19 := R19["KEY_TAG"]
	374	[4955]	CALL     	R17 3 2 ; R17 := R17(R18,R19)
	375	[4956]	EQ       	1 R17 K6 ; if R17 == nil then PC := 425
	376	[4956]	JMP      	425 ; PC := 425
	377	[4957]	GETGLOBAL	R18 K22 ; R18 := 0x7f5022cf
	378	[4957]	GETTABLE 	R18 R18 K32 ; R18 := R18[0x1a94c9cc]
	379	[4957]	MOVE     	R19 R2 ; R19 := R2
	380	[4957]	LOADK    	R20 := 1.000000
	381	[4957]	SUB      	R21 R17 K33 ; R21 := R17 - 1.000000
	382	[4957]	CALL     	R18 4 2 ; R18 := R18(R19,R20,R21)
	383	[4958]	GETGLOBAL	R19 K34 ; R19 := 0xb009bbc6
	384	[4958]	MOVE     	R20 R18 ; R20 := R18
	385	[4958]	CALL     	R19 2 2 ; R19 := R19(R20)
	386	[4958]	MOVE     	R16 R19 ; R16 := R19
	387	[4959]	GETGLOBAL	R19 K10 ; R19 := 0x7b998233
	388	[4959]	MOVE     	R20 R16 ; R20 := R16
	389	[4959]	CALL     	R19 2 2 ; R19 := R19(R20)
	390	[4959]	TEST     	R19 1 ; if R19 then PC := 425
	391	[4959]	JMP      	425 ; PC := 425
	392	[4960]	SELF     	R19 R16 K83 ; R20 := R16; R19 := R16[0xef893aec]
	393	[4960]	CALL     	R19 2 2 ; R19 := R19(R20)
	394	[4961]	GETGLOBAL	R20 K10 ; R20 := 0x7b998233
	395	[4961]	GETTABLE 	R21 R19 K84 ; R21 := R19["levelOverride"]
	396	[4961]	CALL     	R20 2 2 ; R20 := R20(R21)
	397	[4961]	TEST     	R20 1 ; if R20 then PC := 425
	398	[4961]	JMP      	425 ; PC := 425
	399	[4962]	GETGLOBAL	R20 K85 ; R20 := 0x0032441c
	400	[4962]	SETTABLE 	R20 K86 K87 ; R20["StalkerMode"] := true
	401	[4964]	GETGLOBAL	R20 K88 ; R20 := 0xa94df70b
	402	[4964]	SELF     	R20 R20 K89 ; R21 := R20; R20 := R20[0x2b0141b8]
	403	[4964]	GETTABLE 	R22 R19 K84 ; R22 := R19["levelOverride"]
	404	[4964]	CALL     	R20 3 1 ; R20(R21,R22)
	405	[4966]	GETGLOBAL	R20 K79 ; R20 := 0x89326c93
	406	[4966]	SELF     	R20 R20 K90 ; R21 := R20; R20 := R20[0x98f20ca5]
	407	[4966]	CALL     	R20 2 2 ; R20 := R20(R21)
	408	[4967]	GETTABLE 	R21 R19 K84 ; R21 := R19["levelOverride"]
	409	[4967]	SETTABLE 	R20 K91 R21 ; R20["level"] := R21
	410	[4968]	GETTABLE 	R21 R19 K92 ; R21 := R19["gameRules"]
	411	[4968]	SETTABLE 	R20 K92 R21 ; R20["gameRules"] := R21
	412	[4969]	GETGLOBAL	R21 K65 ; R21 := 0x25d99d89
	413	[4969]	SELF     	R21 R21 K93 ; R22 := R21; R21 := R21[0xe4b15c4a]
	414	[4969]	MOVE     	R23 R20 ; R23 := R20
	415	[4969]	MOVE     	R24 R2 ; R24 := R2
	416	[4969]	CALL     	R21 4 1 ; R21(R22,R23,R24)
	417	[4970]	GETGLOBAL	R21 K65 ; R21 := 0x25d99d89
	418	[4970]	SELF     	R21 R21 K94 ; R22 := R21; R21 := R21[0x3be62eb2]
	419	[4970]	OP_LOADBOOL	R23 1 0 ; R23 := true
	420	[4970]	CALL     	R21 3 1 ; R21(R22,R23)
	421	[4972]	GETGLOBAL	R21 K95 ; R21 := 0x34291f5c
	422	[4972]	GETTABLE 	R21 R21 K96 ; R21 := R21[0x8ee24660]
	423	[4972]	OP_LOADBOOL	R22 0 0 ; R22 := false
	424	[4972]	CALL     	R21 2 1 ; R21(R22)
	425	[4976]	RETURN   	R0 1 ; return 
	426	[4979]	GETGLOBAL	R21 K85 ; R21 := 0x0032441c
	427	[4979]	GETTABLE 	R21 R21 K86 ; R21 := R21["StalkerMode"]
	428	[4979]	TEST     	R21 0 ; if not R21 then PC := 437
	429	[4979]	JMP      	437 ; PC := 437
	430	[4980]	GETUPVAL 	R21 U7 ; R21 := U7
	431	[4980]	MOVE     	R22 R2 ; R22 := R2
	432	[4980]	MOVE     	R23 R3 ; R23 := R3
	433	[4980]	MOVE     	R24 R4 ; R24 := R4
	434	[4980]	MOVE     	R25 R5 ; R25 := R5
	435	[4980]	CALL     	R21 5 1 ; R21(R22,R23,R24,R25)
	436	[4981]	RETURN   	R0 1 ; return 
	437	[4985]	TEST     	R6 1 ; if R6 then PC := 454
	438	[4985]	JMP      	454 ; PC := 454
	439	[4985]	GETGLOBAL	R21 K10 ; R21 := 0x7b998233
	440	[4985]	MOVE     	R22 R3 ; R22 := R3
	441	[4985]	CALL     	R21 2 2 ; R21 := R21(R22)
	442	[4985]	TEST     	R21 1 ; if R21 then PC := 452
	443	[4985]	JMP      	452 ; PC := 452
	444	[4985]	GETUPVAL 	R21 U1 ; R21 := U1
	445	[4985]	GETTABLE 	R21 R21 K97 ; R21 := R21["vorsPrizeQuestKey"]
	446	[4985]	EQ       	1 R3 R21 ; if R3 == R21 then PC := 453
	447	[4985]	JMP      	453 ; PC := 453
	448	[4985]	GETUPVAL 	R21 U1 ; R21 := U1
	449	[4985]	GETTABLE 	R21 R21 K98 ; R21 := R21["zarimanIntroQuest"]
	450	[4985]	EQ       	1 R3 R21 ; if R3 == R21 then PC := 453
	451	[4985]	JMP      	453 ; PC := 453
	452	[4985]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 453
	453	[4985]	OP_LOADBOOL	R6 1 0 ; R6 := true
	454	[4987]	TEST     	R6 1 ; if R6 then PC := 661
	455	[4987]	JMP      	661 ; PC := 661
	456	[4987]	GETGLOBAL	R21 K99 ; R21 := mNewWarMode
	457	[4987]	TEST     	R21 1 ; if R21 then PC := 661
	458	[4987]	JMP      	661 ; PC := 661
	459	[4987]	GETGLOBAL	R21 K0 ; R21 := mHover
	460	[4987]	GETTABLE 	R21 R21 K1 ; R21 := R21["Node"]
	461	[4987]	GETTABLE 	R21 R21 K7 ; R21 := R21["radialSector"]
	462	[4987]	GETTABLE 	R21 R21 K100 ; R21 := R21["nodeType"]
	463	[4987]	EQ       	1 R21 K72 ; if R21 == 0.000000 then PC := 500
	464	[4987]	JMP      	500 ; PC := 500
	465	[4987]	GETGLOBAL	R21 K0 ; R21 := mHover
	466	[4987]	GETTABLE 	R21 R21 K1 ; R21 := R21["Node"]
	467	[4987]	GETTABLE 	R21 R21 K7 ; R21 := R21["radialSector"]
	468	[4987]	GETTABLE 	R21 R21 K100 ; R21 := R21["nodeType"]
	469	[4987]	EQ       	0 R21 K101 ; if R21 ~= 4.000000 then PC := 661
	470	[4987]	JMP      	661 ; PC := 661
	471	[4987]	GETGLOBAL	R21 K4 ; R21 := _T
	472	[4987]	GETTABLE 	R21 R21 K102 ; R21 := R21["CachedEliteAlertMissions"]
	473	[4987]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	474	[4987]	TEST     	R21 1 ; if R21 then PC := 500
	475	[4987]	JMP      	500 ; PC := 500
	476	[4987]	GETGLOBAL	R21 K4 ; R21 := _T
	477	[4987]	GETTABLE 	R21 R21 K103 ; R21 := R21["CachedNemesisMissions"]
	478	[4987]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	479	[4987]	TEST     	R21 1 ; if R21 then PC := 500
	480	[4987]	JMP      	500 ; PC := 500
	481	[4987]	GETGLOBAL	R21 K4 ; R21 := _T
	482	[4987]	GETTABLE 	R21 R21 K104 ; R21 := R21["CachedHardModeDailyMissions"]
	483	[4987]	TEST     	R21 0 ; if not R21 then PC := 661
	484	[4987]	JMP      	661 ; PC := 661
	485	[4987]	GETGLOBAL	R21 K4 ; R21 := _T
	486	[4987]	GETTABLE 	R21 R21 K104 ; R21 := R21["CachedHardModeDailyMissions"]
	487	[4987]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	488	[4987]	TEST     	R21 0 ; if not R21 then PC := 661
	489	[4987]	JMP      	661 ; PC := 661
	490	[4987]	GETGLOBAL	R21 K4 ; R21 := _T
	491	[4987]	GETTABLE 	R21 R21 K104 ; R21 := R21["CachedHardModeDailyMissions"]
	492	[4987]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	493	[4987]	GETTABLE 	R21 R21 K105 ; R21 := R21["isVisible"]
	494	[4987]	TEST     	R21 0 ; if not R21 then PC := 661
	495	[4987]	JMP      	661 ; PC := 661
	496	[4987]	GETUPVAL 	R21 U8 ; R21 := U8
	497	[4987]	GETTABLE 	R21 R21 K106 ; R21 := R21["CurrentTier"]
	498	[4987]	LT       	0 K72 R21 ; if 0.000000 >= R21 then PC := 661
	499	[4987]	JMP      	661 ; PC := 661
	500	[4987]	GETUPVAL 	R21 U9 ; R21 := U9
	501	[4987]	GETGLOBAL	R22 K0 ; R22 := mHover
	502	[4987]	GETTABLE 	R22 R22 K1 ; R22 := R22["Node"]
	503	[4987]	OP_LOADBOOL	R23 1 0 ; R23 := true
	504	[4987]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	505	[4987]	TEST     	R21 1 ; if R21 then PC := 509
	506	[4987]	JMP      	509 ; PC := 509
	507	[4987]	TEST     	R0 0 ; if not R0 then PC := 661
	508	[4987]	JMP      	661 ; PC := 661
	509	[4988]	GETUPVAL 	R21 U10 ; R21 := U10
	510	[4988]	GETTABLE 	R21 R21 K107 ; R21 := R21[0x7f1a8dc0]
	511	[4988]	GETGLOBAL	R22 K0 ; R22 := mHover
	512	[4988]	GETTABLE 	R22 R22 K1 ; R22 := R22["Node"]
	513	[4988]	GETUPVAL 	R23 U8 ; R23 := U8
	514	[4988]	CALL     	R21 3 2 ; R21 := R21(R22,R23)
	515	[4988]	TEST     	R21 0 ; if not R21 then PC := 661
	516	[4988]	JMP      	661 ; PC := 661
	517	[4990]	GETGLOBAL	R21 K4 ; R21 := _T
	518	[4990]	GETTABLE 	R21 R21 K27 ; R21 := R21["DesiredGoToNodeTag"]
	519	[4990]	TEST     	R21 0 ; if not R21 then PC := 562
	520	[4990]	JMP      	562 ; PC := 562
	521	[4991]	GETGLOBAL	R21 K4 ; R21 := _T
	522	[4991]	GETTABLE 	R21 R21 K27 ; R21 := R21["DesiredGoToNodeTag"]
	523	[4991]	GETUPVAL 	R22 U0 ; R22 := U0
	524	[4991]	GETTABLE 	R22 R22 K108 ; R22 := R22["ACTIVE_MISSION_TAG"]
	525	[4991]	EQ       	0 R21 R22 ; if R21 ~= R22 then PC := 533
	526	[4991]	JMP      	533 ; PC := 533
	527	[4992]	GETGLOBAL	R21 K4 ; R21 := _T
	528	[4992]	SETTABLE 	R21 K27 K6 ; R21["DesiredGoToNodeTag"] := nil
	529	[4993]	GETUPVAL 	R21 U11 ; R21 := U11
	530	[4993]	MOVE     	R22 R2 ; R22 := R2
	531	[4993]	CALL     	R21 2 1 ; R21(R22)
	532	[4993]	JMP      	560 ; PC := 560
	533	[4994]	GETGLOBAL	R21 K4 ; R21 := _T
	534	[4994]	GETTABLE 	R21 R21 K27 ; R21 := R21["DesiredGoToNodeTag"]
	535	[4994]	GETUPVAL 	R22 U0 ; R22 := U0
	536	[4994]	GETTABLE 	R22 R22 K109 ; R22 := R22["INVASION_ATTACKER_TAG"]
	537	[4994]	EQ       	0 R21 R22 ; if R21 ~= R22 then PC := 545
	538	[4994]	JMP      	545 ; PC := 545
	539	[4995]	GETGLOBAL	R21 K4 ; R21 := _T
	540	[4995]	SETTABLE 	R21 K27 K6 ; R21["DesiredGoToNodeTag"] := nil
	541	[4996]	GETUPVAL 	R21 U12 ; R21 := U12
	542	[4996]	MOVE     	R22 R2 ; R22 := R2
	543	[4996]	CALL     	R21 2 1 ; R21(R22)
	544	[4996]	JMP      	560 ; PC := 560
	545	[4998]	GETGLOBAL	R21 K15 ; R21 := 0x64fb1586
	546	[4998]	GETGLOBAL	R22 K0 ; R22 := mHover
	547	[4998]	GETTABLE 	R22 R22 K1 ; R22 := R22["Node"]
	548	[4998]	GETTABLE 	R22 R22 K7 ; R22 := R22["radialSector"]
	549	[4998]	GETTABLE 	R22 R22 K9 ; R22 := R22["name"]
	550	[4998]	CALL     	R21 2 2 ; R21 := R21(R22)
	551	[4998]	GETGLOBAL	R22 K4 ; R22 := _T
	552	[4998]	GETTABLE 	R22 R22 K27 ; R22 := R22["DesiredGoToNodeTag"]
	553	[4998]	CONCAT   	R2 R21 R22 ; R2 := R21 .. R22
	554	[4999]	GETGLOBAL	R21 K4 ; R21 := _T
	555	[4999]	SETTABLE 	R21 K27 K6 ; R21["DesiredGoToNodeTag"] := nil
	556	[5000]	GETUPVAL 	R21 U7 ; R21 := U7
	557	[5000]	MOVE     	R22 R2 ; R22 := R2
	558	[5000]	LOADNIL  	R23 R25 ; R23 := R24 := R25 := nil
	559	[5000]	CALL     	R21 5 1 ; R21(R22,R23,R24,R25)
	560	[5002]	RETURN   	R0 1 ; return 
	561	[5002]	JMP      	661 ; PC := 661
	562	[5003]	GETGLOBAL	R21 K0 ; R21 := mHover
	563	[5003]	GETTABLE 	R21 R21 K1 ; R21 := R21["Node"]
	564	[5003]	GETTABLE 	R21 R21 K7 ; R21 := R21["radialSector"]
	565	[5003]	GETTABLE 	R21 R21 K17 ; R21 := R21["mission"]
	566	[5003]	GETTABLE 	R21 R21 K110 ; R21 := R21["missionType"]
	567	[5003]	EQ       	0 R21 K111 ; if R21 ~= 22.000000 then PC := 606
	568	[5003]	JMP      	606 ; PC := 606
	569	[5003]	GETGLOBAL	R21 K0 ; R21 := mHover
	570	[5003]	GETTABLE 	R21 R21 K1 ; R21 := R21["Node"]
	571	[5003]	GETTABLE 	R21 R21 K7 ; R21 := R21["radialSector"]
	572	[5003]	GETTABLE 	R21 R21 K17 ; R21 := R21["mission"]
	573	[5003]	GETTABLE 	R21 R21 K112 ; R21 := R21["faction"]
	574	[5003]	EQ       	0 R21 K33 ; if R21 ~= 1.000000 then PC := 606
	575	[5003]	JMP      	606 ; PC := 606
	576	[5003]	GETGLOBAL	R21 K0 ; R21 := mHover
	577	[5003]	GETTABLE 	R21 R21 K1 ; R21 := R21["Node"]
	578	[5003]	GETTABLE 	R21 R21 K9 ; R21 := R21["name"]
	579	[5003]	TEST     	R21 0 ; if not R21 then PC := 606
	580	[5003]	JMP      	606 ; PC := 606
	581	[5004]	GETGLOBAL	R21 K4 ; R21 := _T
	582	[5004]	GETTABLE 	R21 R21 K113 ; R21 := R21["DesiredGoToQuest"]
	583	[5004]	TEST     	R21 0 ; if not R21 then PC := 590
	584	[5004]	JMP      	590 ; PC := 590
	585	[5005]	GETGLOBAL	R21 K4 ; R21 := _T
	586	[5005]	GETTABLE 	R3 R21 K113 ; R3 := R21["DesiredGoToQuest"]
	587	[5006]	GETGLOBAL	R21 K4 ; R21 := _T
	588	[5006]	SETTABLE 	R21 K113 K6 ; R21["DesiredGoToQuest"] := nil
	589	[5006]	JMP      	598 ; PC := 598
	590	[5007]	GETGLOBAL	R21 K10 ; R21 := 0x7b998233
	591	[5007]	MOVE     	R22 R3 ; R22 := R3
	592	[5007]	CALL     	R21 2 2 ; R21 := R21(R22)
	593	[5007]	TEST     	R21 1 ; if R21 then PC := 598
	594	[5007]	JMP      	598 ; PC := 598
	595	[5008]	SELF     	R21 R3 K24 ; R22 := R3; R21 := R3[0xed4e0128]
	596	[5008]	CALL     	R21 2 2 ; R21 := R21(R22)
	597	[5008]	MOVE     	R3 R21 ; R3 := R21
	598	[5010]	GETUPVAL 	R21 U13 ; R21 := U13
	599	[5010]	MOVE     	R22 R2 ; R22 := R2
	600	[5010]	MOVE     	R23 R2 ; R23 := R2
	601	[5010]	MOVE     	R24 R3 ; R24 := R3
	602	[5010]	MOVE     	R25 R5 ; R25 := R5
	603	[5010]	CALL     	R21 5 1 ; R21(R22,R23,R24,R25)
	604	[5011]	RETURN   	R0 1 ; return 
	605	[5011]	JMP      	661 ; PC := 661
	606	[5012]	GETGLOBAL	R21 K4 ; R21 := _T
	607	[5012]	GETTABLE 	R21 R21 K113 ; R21 := R21["DesiredGoToQuest"]
	608	[5012]	TEST     	R21 0 ; if not R21 then PC := 615
	609	[5012]	JMP      	615 ; PC := 615
	610	[5013]	GETGLOBAL	R21 K4 ; R21 := _T
	611	[5013]	GETTABLE 	R3 R21 K113 ; R3 := R21["DesiredGoToQuest"]
	612	[5014]	GETGLOBAL	R21 K4 ; R21 := _T
	613	[5014]	SETTABLE 	R21 K113 K6 ; R21["DesiredGoToQuest"] := nil
	614	[5014]	JMP      	661 ; PC := 661
	615	[5015]	GETGLOBAL	R21 K0 ; R21 := mHover
	616	[5015]	GETTABLE 	R21 R21 K1 ; R21 := R21["Node"]
	617	[5015]	GETTABLE 	R21 R21 K114 ; R21 := R21["isBlockaded"]
	618	[5015]	TEST     	R21 0 ; if not R21 then PC := 634
	619	[5015]	JMP      	634 ; PC := 634
	620	[5016]	GETGLOBAL	R21 K15 ; R21 := 0x64fb1586
	621	[5016]	GETGLOBAL	R22 K0 ; R22 := mHover
	622	[5016]	GETTABLE 	R22 R22 K1 ; R22 := R22["Node"]
	623	[5016]	GETTABLE 	R22 R22 K7 ; R22 := R22["radialSector"]
	624	[5016]	GETTABLE 	R22 R22 K9 ; R22 := R22["name"]
	625	[5016]	CALL     	R21 2 2 ; R21 := R21(R22)
	626	[5016]	GETUPVAL 	R22 U0 ; R22 := U0
	627	[5016]	GETTABLE 	R22 R22 K115 ; R22 := R22["NEMESIS_MISSION_TAG"]
	628	[5016]	CONCAT   	R2 R21 R22 ; R2 := R21 .. R22
	629	[5017]	GETUPVAL 	R21 U7 ; R21 := U7
	630	[5017]	MOVE     	R22 R2 ; R22 := R2
	631	[5017]	CALL     	R21 2 1 ; R21(R22)
	632	[5018]	RETURN   	R0 1 ; return 
	633	[5018]	JMP      	661 ; PC := 661
	634	[5019]	GETGLOBAL	R21 K85 ; R21 := 0x0032441c
	635	[5019]	GETTABLE 	R21 R21 K116 ; R21 := R21["CachedGoalInfo"]
	636	[5019]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	637	[5019]	TEST     	R21 0 ; if not R21 then PC := 648
	638	[5019]	JMP      	648 ; PC := 648
	639	[5019]	GETGLOBAL	R21 K4 ; R21 := _T
	640	[5019]	GETTABLE 	R21 R21 K117 ; R21 := R21["LockedGoalMissionInfo"]
	641	[5019]	TEST     	R21 0 ; if not R21 then PC := 661
	642	[5019]	JMP      	661 ; PC := 661
	643	[5019]	GETGLOBAL	R21 K4 ; R21 := _T
	644	[5019]	GETTABLE 	R21 R21 K117 ; R21 := R21["LockedGoalMissionInfo"]
	645	[5019]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	646	[5019]	TEST     	R21 0 ; if not R21 then PC := 661
	647	[5019]	JMP      	661 ; PC := 661
	648	[5020]	GETGLOBAL	R21 K118 ; R21 := mInfoTip
	649	[5020]	SELF     	R21 R21 K119 ; R22 := R21; R21 := R21[0x554369c7]
	650	[5020]	GETGLOBAL	R23 K0 ; R23 := mHover
	651	[5020]	GETTABLE 	R23 R23 K1 ; R23 := R23["Node"]
	652	[5020]	GETTABLE 	R23 R23 K7 ; R23 := R23["radialSector"]
	653	[5020]	MOVE     	R24 R3 ; R24 := R3
	654	[5020]	MOVE     	R25 R4 ; R25 := R4
	655	[5020]	GETUPVAL 	R26 U8 ; R26 := U8
	656	[5020]	GETGLOBAL	R27 K20 ; R27 := mRailJack
	657	[5020]	CALL     	R21 7 1 ; R21(R22,R23,R24,R25,R26,R27)
	658	[5021]	GETUPVAL 	R21 U14 ; R21 := U14
	659	[5021]	SETTABLE 	R21 K120 K121 ; R21["isLMBDown"] := false
	660	[5022]	RETURN   	R0 1 ; return 
	661	[5026]	GETGLOBAL	R21 K10 ; R21 := 0x7b998233
	662	[5026]	GETGLOBAL	R22 K0 ; R22 := mHover
	663	[5026]	GETTABLE 	R22 R22 K1 ; R22 := R22["Node"]
	664	[5026]	GETTABLE 	R22 R22 K7 ; R22 := R22["radialSector"]
	665	[5026]	GETTABLE 	R22 R22 K16 ; R22 := R22["keyChain"]
	666	[5026]	CALL     	R21 2 2 ; R21 := R21(R22)
	667	[5026]	TEST     	R21 1 ; if R21 then PC := 677
	668	[5026]	JMP      	677 ; PC := 677
	669	[5027]	GETGLOBAL	R21 K0 ; R21 := mHover
	670	[5027]	GETTABLE 	R21 R21 K1 ; R21 := R21["Node"]
	671	[5027]	GETTABLE 	R21 R21 K7 ; R21 := R21["radialSector"]
	672	[5027]	GETTABLE 	R21 R21 K16 ; R21 := R21["keyChain"]
	673	[5027]	SELF     	R21 R21 K24 ; R22 := R21; R21 := R21[0xed4e0128]
	674	[5027]	CALL     	R21 2 2 ; R21 := R21(R22)
	675	[5027]	MOVE     	R3 R21 ; R3 := R21
	676	[5027]	JMP      	872 ; PC := 872
	677	[5028]	TEST     	R3 1 ; if R3 then PC := 872
	678	[5028]	JMP      	872 ; PC := 872
	679	[5029]	GETGLOBAL	R21 K4 ; R21 := _T
	680	[5029]	GETTABLE 	R21 R21 K122 ; R21 := R21["CachedAlerts"]
	681	[5029]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	682	[5029]	TEST     	R21 0 ; if not R21 then PC := 701
	683	[5029]	JMP      	701 ; PC := 701
	684	[5029]	GETGLOBAL	R21 K4 ; R21 := _T
	685	[5029]	GETTABLE 	R21 R21 K122 ; R21 := R21["CachedAlerts"]
	686	[5029]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	687	[5029]	GETTABLE 	R21 R21 K123 ; R21 := R21["mVisible"]
	688	[5029]	TEST     	R21 0 ; if not R21 then PC := 701
	689	[5029]	JMP      	701 ; PC := 701
	690	[5029]	GETGLOBAL	R21 K4 ; R21 := _T
	691	[5029]	GETTABLE 	R21 R21 K122 ; R21 := R21["CachedAlerts"]
	692	[5029]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	693	[5029]	GETTABLE 	R21 R21 K124 ; R21 := R21["mUnlocked"]
	694	[5029]	TEST     	R21 0 ; if not R21 then PC := 701
	695	[5029]	JMP      	701 ; PC := 701
	696	[5030]	MOVE     	R21 R2 ; R21 := R2
	697	[5030]	GETUPVAL 	R22 U0 ; R22 := U0
	698	[5030]	GETTABLE 	R22 R22 K125 ; R22 := R22["ALERT_TAG"]
	699	[5030]	CONCAT   	R2 R21 R22 ; R2 := R21 .. R22
	700	[5030]	JMP      	872 ; PC := 872
	701	[5031]	GETGLOBAL	R21 K85 ; R21 := 0x0032441c
	702	[5031]	GETTABLE 	R21 R21 K116 ; R21 := R21["CachedGoalInfo"]
	703	[5031]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	704	[5031]	TEST     	R21 0 ; if not R21 then PC := 728
	705	[5031]	JMP      	728 ; PC := 728
	706	[5031]	GETGLOBAL	R21 K0 ; R21 := mHover
	707	[5031]	GETTABLE 	R21 R21 K1 ; R21 := R21["Node"]
	708	[5031]	GETTABLE 	R21 R21 K7 ; R21 := R21["radialSector"]
	709	[5031]	GETTABLE 	R21 R21 K100 ; R21 := R21["nodeType"]
	710	[5031]	EQ       	1 R21 K126 ; if R21 == 3.000000 then PC := 728
	711	[5031]	JMP      	728 ; PC := 728
	712	[5032]	GETGLOBAL	R21 K4 ; R21 := _T
	713	[5032]	GETTABLE 	R21 R21 K127 ; R21 := R21["CachedInvasionInfo"]
	714	[5032]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	715	[5032]	TEST     	R21 0 ; if not R21 then PC := 723
	716	[5032]	JMP      	723 ; PC := 723
	717	[5033]	GETGLOBAL	R21 K4 ; R21 := _T
	718	[5033]	SETTABLE 	R21 K27 K6 ; R21["DesiredGoToNodeTag"] := nil
	719	[5034]	GETUPVAL 	R21 U12 ; R21 := U12
	720	[5034]	MOVE     	R22 R2 ; R22 := R2
	721	[5034]	CALL     	R21 2 1 ; R21(R22)
	722	[5035]	RETURN   	R0 1 ; return 
	723	[5037]	MOVE     	R21 R2 ; R21 := R2
	724	[5037]	GETUPVAL 	R22 U0 ; R22 := U0
	725	[5037]	GETTABLE 	R22 R22 K128 ; R22 := R22["EVENT_TAG"]
	726	[5037]	CONCAT   	R2 R21 R22 ; R2 := R21 .. R22
	727	[5037]	JMP      	872 ; PC := 872
	728	[5038]	GETGLOBAL	R21 K4 ; R21 := _T
	729	[5038]	GETTABLE 	R21 R21 K129 ; R21 := R21["CachedSyndicateMissions"]
	730	[5038]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	731	[5038]	TEST     	R21 0 ; if not R21 then PC := 750
	732	[5038]	JMP      	750 ; PC := 750
	733	[5038]	GETGLOBAL	R21 K4 ; R21 := _T
	734	[5038]	GETTABLE 	R21 R21 K129 ; R21 := R21["CachedSyndicateMissions"]
	735	[5038]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	736	[5038]	GETTABLE 	R21 R21 K123 ; R21 := R21["mVisible"]
	737	[5038]	TEST     	R21 0 ; if not R21 then PC := 750
	738	[5038]	JMP      	750 ; PC := 750
	739	[5038]	GETGLOBAL	R21 K4 ; R21 := _T
	740	[5038]	GETTABLE 	R21 R21 K129 ; R21 := R21["CachedSyndicateMissions"]
	741	[5038]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	742	[5038]	GETTABLE 	R21 R21 K124 ; R21 := R21["mUnlocked"]
	743	[5038]	TEST     	R21 0 ; if not R21 then PC := 750
	744	[5038]	JMP      	750 ; PC := 750
	745	[5039]	MOVE     	R21 R2 ; R21 := R2
	746	[5039]	GETUPVAL 	R22 U0 ; R22 := U0
	747	[5039]	GETTABLE 	R22 R22 K130 ; R22 := R22["SYNDICATE_MISSION_TAG"]
	748	[5039]	CONCAT   	R2 R21 R22 ; R2 := R21 .. R22
	749	[5039]	JMP      	872 ; PC := 872
	750	[5040]	GETGLOBAL	R21 K4 ; R21 := _T
	751	[5040]	GETTABLE 	R21 R21 K131 ; R21 := R21["CachedSortieMissions"]
	752	[5040]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	753	[5040]	TEST     	R21 0 ; if not R21 then PC := 766
	754	[5040]	JMP      	766 ; PC := 766
	755	[5040]	GETGLOBAL	R21 K4 ; R21 := _T
	756	[5040]	GETTABLE 	R21 R21 K131 ; R21 := R21["CachedSortieMissions"]
	757	[5040]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	758	[5040]	GETTABLE 	R21 R21 K132 ; R21 := R21["mShowInStarChart"]
	759	[5040]	TEST     	R21 0 ; if not R21 then PC := 766
	760	[5040]	JMP      	766 ; PC := 766
	761	[5041]	MOVE     	R21 R2 ; R21 := R2
	762	[5041]	GETUPVAL 	R22 U0 ; R22 := U0
	763	[5041]	GETTABLE 	R22 R22 K133 ; R22 := R22["SORTIE_MISSION_TAG"]
	764	[5041]	CONCAT   	R2 R21 R22 ; R2 := R21 .. R22
	765	[5041]	JMP      	872 ; PC := 872
	766	[5042]	GETGLOBAL	R21 K4 ; R21 := _T
	767	[5042]	GETTABLE 	R21 R21 K134 ; R21 := R21["CachedActiveMissions"]
	768	[5042]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	769	[5042]	TEST     	R21 0 ; if not R21 then PC := 788
	770	[5042]	JMP      	788 ; PC := 788
	771	[5042]	GETGLOBAL	R21 K4 ; R21 := _T
	772	[5042]	GETTABLE 	R21 R21 K134 ; R21 := R21["CachedActiveMissions"]
	773	[5042]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	774	[5042]	GETTABLE 	R21 R21 K123 ; R21 := R21["mVisible"]
	775	[5042]	TEST     	R21 0 ; if not R21 then PC := 788
	776	[5042]	JMP      	788 ; PC := 788
	777	[5042]	GETGLOBAL	R21 K4 ; R21 := _T
	778	[5042]	GETTABLE 	R21 R21 K134 ; R21 := R21["CachedActiveMissions"]
	779	[5042]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	780	[5042]	GETTABLE 	R21 R21 K124 ; R21 := R21["mUnlocked"]
	781	[5042]	TEST     	R21 0 ; if not R21 then PC := 788
	782	[5042]	JMP      	788 ; PC := 788
	783	[5043]	GETUPVAL 	R21 U11 ; R21 := U11
	784	[5043]	MOVE     	R22 R2 ; R22 := R2
	785	[5043]	CALL     	R21 2 1 ; R21(R22)
	786	[5044]	RETURN   	R0 1 ; return 
	787	[5044]	JMP      	872 ; PC := 872
	788	[5045]	GETGLOBAL	R21 K4 ; R21 := _T
	789	[5045]	GETTABLE 	R21 R21 K127 ; R21 := R21["CachedInvasionInfo"]
	790	[5045]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	791	[5045]	TEST     	R21 0 ; if not R21 then PC := 798
	792	[5045]	JMP      	798 ; PC := 798
	793	[5046]	GETUPVAL 	R21 U12 ; R21 := U12
	794	[5046]	MOVE     	R22 R2 ; R22 := R2
	795	[5046]	CALL     	R21 2 1 ; R21(R22)
	796	[5047]	RETURN   	R0 1 ; return 
	797	[5047]	JMP      	872 ; PC := 872
	798	[5048]	GETGLOBAL	R21 K4 ; R21 := _T
	799	[5048]	GETTABLE 	R21 R21 K135 ; R21 := R21["CachedSkullNodes"]
	800	[5048]	GETTABLE 	R21 R21 R2 ; R21 := R21[R2]
	801	[5048]	EQ       	1 R21 K6 ; if R21 == nil then PC := 808
	802	[5048]	JMP      	808 ; PC := 808
	803	[5049]	GETUPVAL 	R21 U15 ; R21 := U15
	804	[5049]	MOVE     	R22 R2 ; R22 := R2
	805	[5049]	CALL     	R21 2 1 ; R21(R22)
	806	[5050]	RETURN   	R0 1 ; return 
	807	[5050]	JMP      	872 ; PC := 872
	808	[5051]	GETGLOBAL	R21 K0 ; R21 := mHover
	809	[5051]	GETTABLE 	R21 R21 K1 ; R21 := R21["Node"]
	810	[5051]	GETTABLE 	R21 R21 K7 ; R21 := R21["radialSector"]
	811	[5051]	GETTABLE 	R21 R21 K100 ; R21 := R21["nodeType"]
	812	[5051]	EQ       	0 R21 K136 ; if R21 ~= 2.000000 then PC := 819
	813	[5051]	JMP      	819 ; PC := 819
	814	[5052]	MOVE     	R21 R2 ; R21 := R2
	815	[5052]	GETUPVAL 	R22 U0 ; R22 := U0
	816	[5052]	GETTABLE 	R22 R22 K137 ; R22 := R22["PVP_TAG"]
	817	[5052]	CONCAT   	R2 R21 R22 ; R2 := R21 .. R22
	818	[5052]	JMP      	872 ; PC := 872
	819	[5053]	GETGLOBAL	R21 K0 ; R21 := mHover
	820	[5053]	GETTABLE 	R21 R21 K1 ; R21 := R21["Node"]
	821	[5053]	GETTABLE 	R21 R21 K7 ; R21 := R21["radialSector"]
	822	[5053]	GETTABLE 	R21 R21 K100 ; R21 := R21["nodeType"]
	823	[5053]	EQ       	0 R21 K126 ; if R21 ~= 3.000000 then PC := 846
	824	[5053]	JMP      	846 ; PC := 846
	825	[5054]	GETGLOBAL	R21 K56 ; R21 := 0xe7f2b02f
	826	[5054]	SELF     	R21 R21 K138 ; R22 := R21; R21 := R21[0xca33534d]
	827	[5054]	CALL     	R21 2 2 ; R21 := R21(R22)
	828	[5054]	TEST     	R21 0 ; if not R21 then PC := 839
	829	[5054]	JMP      	839 ; PC := 839
	830	[5055]	GETUPVAL 	R21 U7 ; R21 := U7
	831	[5055]	MOVE     	R22 R2 ; R22 := R2
	832	[5055]	GETUPVAL 	R23 U0 ; R23 := U0
	833	[5055]	GETTABLE 	R23 R23 K139 ; R23 := R23["HUB_TAG"]
	834	[5055]	CONCAT   	R22 R22 R23 ; R22 := R22 .. R23
	835	[5055]	LOADNIL  	R23 R24 ; R23 := R24 := nil
	836	[5055]	LOADK    	R25 := 0.500000
	837	[5055]	CALL     	R21 5 1 ; R21(R22,R23,R24,R25)
	838	[5056]	RETURN   	R0 1 ; return 
	839	[5059]	GETUPVAL 	R21 U16 ; R21 := U16
	840	[5059]	GETGLOBAL	R22 K0 ; R22 := mHover
	841	[5059]	GETTABLE 	R22 R22 K1 ; R22 := R22["Node"]
	842	[5059]	GETTABLE 	R22 R22 K7 ; R22 := R22["radialSector"]
	843	[5059]	CALL     	R21 2 1 ; R21(R22)
	844	[5060]	RETURN   	R0 1 ; return 
	845	[5060]	JMP      	872 ; PC := 872
	846	[5061]	GETUPVAL 	R21 U17 ; R21 := U17
	847	[5061]	CALL     	R21 1 2 ; R21 := R21()
	848	[5061]	LT       	0 K72 R21 ; if 0.000000 >= R21 then PC := 872
	849	[5061]	JMP      	872 ; PC := 872
	850	[5062]	GETGLOBAL	R21 K15 ; R21 := 0x64fb1586
	851	[5062]	GETUPVAL 	R22 U0 ; R22 := U0
	852	[5062]	GETTABLE 	R22 R22 K140 ; R22 := R22["ENTRATI_LANDSCAPE_NODE_TAG"]
	853	[5062]	CALL     	R21 2 2 ; R21 := R21(R22)
	854	[5062]	EQ       	0 R2 R21 ; if R2 ~= R21 then PC := 864
	855	[5062]	JMP      	864 ; PC := 864
	856	[5062]	GETUPVAL 	R21 U0 ; R21 := U0
	857	[5062]	GETTABLE 	R21 R21 K141 ; R21 := R21[0x52fb05b3]
	858	[5062]	GETUPVAL 	R22 U1 ; R22 := U1
	859	[5062]	GETTABLE 	R22 R22 K142 ; R22 := R22["deimosIntroQuestInfo"]
	860	[5062]	GETTABLE 	R22 R22 K55 ; R22 := R22["quest"]
	861	[5062]	CALL     	R21 2 2 ; R21 := R21(R22)
	862	[5062]	TEST     	R21 0 ; if not R21 then PC := 872
	863	[5062]	JMP      	872 ; PC := 872
	864	[5063]	MOVE     	R21 R2 ; R21 := R2
	865	[5063]	GETUPVAL 	R22 U8 ; R22 := U8
	866	[5063]	GETTABLE 	R22 R22 K143 ; R22 := R22["Settings"]
	867	[5063]	GETUPVAL 	R23 U8 ; R23 := U8
	868	[5063]	GETTABLE 	R23 R23 K144 ; R23 := R23["CurrentIndex"]
	869	[5063]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	870	[5063]	GETTABLE 	R22 R22 K145 ; R22 := R22["MissionTag"]
	871	[5063]	CONCAT   	R2 R21 R22 ; R2 := R21 .. R22
	872	[5069]	GETGLOBAL	R21 K0 ; R21 := mHover
	873	[5069]	GETTABLE 	R21 R21 K1 ; R21 := R21["Node"]
	874	[5069]	GETTABLE 	R21 R21 K7 ; R21 := R21["radialSector"]
	875	[5069]	GETTABLE 	R21 R21 K17 ; R21 := R21["mission"]
	876	[5069]	GETTABLE 	R21 R21 K110 ; R21 := R21["missionType"]
	877	[5069]	EQ       	0 R21 K111 ; if R21 ~= 22.000000 then PC := 898
	878	[5069]	JMP      	898 ; PC := 898
	879	[5069]	GETGLOBAL	R21 K0 ; R21 := mHover
	880	[5069]	GETTABLE 	R21 R21 K1 ; R21 := R21["Node"]
	881	[5069]	GETTABLE 	R21 R21 K7 ; R21 := R21["radialSector"]
	882	[5069]	GETTABLE 	R21 R21 K17 ; R21 := R21["mission"]
	883	[5069]	GETTABLE 	R21 R21 K112 ; R21 := R21["faction"]
	884	[5069]	EQ       	0 R21 K33 ; if R21 ~= 1.000000 then PC := 898
	885	[5069]	JMP      	898 ; PC := 898
	886	[5069]	GETGLOBAL	R21 K0 ; R21 := mHover
	887	[5069]	GETTABLE 	R21 R21 K1 ; R21 := R21["Node"]
	888	[5069]	GETTABLE 	R21 R21 K9 ; R21 := R21["name"]
	889	[5069]	TEST     	R21 0 ; if not R21 then PC := 898
	890	[5069]	JMP      	898 ; PC := 898
	891	[5070]	GETUPVAL 	R21 U13 ; R21 := U13
	892	[5070]	MOVE     	R22 R2 ; R22 := R2
	893	[5070]	MOVE     	R23 R2 ; R23 := R2
	894	[5070]	MOVE     	R24 R3 ; R24 := R3
	895	[5070]	MOVE     	R25 R5 ; R25 := R5
	896	[5070]	CALL     	R21 5 1 ; R21(R22,R23,R24,R25)
	897	[5071]	RETURN   	R0 1 ; return 
	898	[5074]	GETGLOBAL	R21 K0 ; R21 := mHover
	899	[5074]	GETTABLE 	R21 R21 K1 ; R21 := R21["Node"]
	900	[5074]	GETTABLE 	R21 R21 K7 ; R21 := R21["radialSector"]
	901	[5074]	GETTABLE 	R21 R21 K17 ; R21 := R21["mission"]
	902	[5074]	GETTABLE 	R21 R21 K146 ; R21 := R21["soloMode"]
	903	[5074]	TEST     	R21 1 ; if R21 then PC := 910
	904	[5074]	JMP      	910 ; PC := 910
	905	[5074]	GETGLOBAL	R21 K0 ; R21 := mHover
	906	[5074]	GETTABLE 	R21 R21 K1 ; R21 := R21["Node"]
	907	[5074]	GETTABLE 	R21 R21 K147 ; R21 := R21["questSoloMode"]
	908	[5074]	TEST     	R21 0 ; if not R21 then PC := 996
	909	[5074]	JMP      	996 ; PC := 996
	910	[5075]	GETGLOBAL	R21 K56 ; R21 := 0xe7f2b02f
	911	[5075]	SELF     	R21 R21 K148 ; R22 := R21; R21 := R21[0xebe2f513]
	912	[5075]	CALL     	R21 2 2 ; R21 := R21(R22)
	913	[5075]	LT       	0 K33 R21 ; if 1.000000 >= R21 then PC := 972
	914	[5075]	JMP      	972 ; PC := 972
	915	[5076]	GETUPVAL 	R21 U18 ; R21 := U18
	916	[5076]	GETTABLE 	R21 R21 K149 ; R21 := R21[0x94098a1d]
	917	[5076]	GETGLOBAL	R22 K51 ; R22 := 0x0469f296
	918	[5076]	MOVE     	R23 R2 ; R23 := R2
	919	[5076]	CALL     	R22 2 2 ; R22 := R22(R23)
	920	[5076]	OP_LOADBOOL	R23 1 0 ; R23 := true
	921	[5076]	LOADNIL  	R24 R24 ; R24 := nil
	922	[5076]	OP_LOADBOOL	R25 1 0 ; R25 := true
	923	[5076]	CALL     	R21 5 2 ; R21 := R21(R22,R23,R24,R25)
	924	[5077]	EQ       	1 R21 K6 ; if R21 == nil then PC := 931
	925	[5077]	JMP      	931 ; PC := 931
	926	[5078]	GETUPVAL 	R22 U18 ; R22 := U18
	927	[5078]	GETTABLE 	R22 R22 K150 ; R22 := R22[0xc0ee6a07]
	928	[5078]	MOVE     	R23 R21 ; R23 := R21
	929	[5078]	CALL     	R22 2 1 ; R22(R23)
	930	[5078]	JMP      	995 ; PC := 995
	931	[5079]	GETGLOBAL	R22 K10 ; R22 := 0x7b998233
	932	[5079]	GETUPVAL 	R23 U19 ; R23 := U19
	933	[5079]	GETTABLE 	R23 R23 K151 ; R23 := R23["SoloMission"]
	934	[5079]	CALL     	R22 2 2 ; R22 := R22(R23)
	935	[5079]	TEST     	R22 0 ; if not R22 then PC := 995
	936	[5079]	JMP      	995 ; PC := 995
	937	[5080]	GETGLOBAL	R22 K20 ; R22 := mRailJack
	938	[5080]	GETTABLE 	R22 R22 K21 ; R22 := R22["Active"]
	939	[5080]	TEST     	R22 0 ; if not R22 then PC := 951
	940	[5080]	JMP      	951 ; PC := 951
	941	[5080]	GETGLOBAL	R22 K79 ; R22 := 0x89326c93
	942	[5080]	SELF     	R22 R22 K152 ; R23 := R22; R22 := R22[0x18d05d30]
	943	[5080]	CALL     	R22 2 2 ; R22 := R22(R23)
	944	[5080]	TEST     	R22 1 ; if R22 then PC := 951
	945	[5080]	JMP      	951 ; PC := 951
	946	[5081]	GETUPVAL 	R22 U2 ; R22 := U2
	947	[5081]	GETTABLE 	R22 R22 K60 ; R22 := R22[0xe0cba3ca]
	948	[5081]	LOADK    	R23 K153 ; R23 := "/Lotus/Language/Railjack/MissionRequiresOwnRailjack"
	949	[5081]	CALL     	R22 2 1 ; R22(R23)
	950	[5082]	RETURN   	R0 1 ; return 
	951	[5085]	GETGLOBAL	R22 K154 ; R22 := mCachedSoloMission
	952	[5085]	GETGLOBAL	R23 K0 ; R23 := mHover
	953	[5085]	GETTABLE 	R23 R23 K1 ; R23 := R23["Node"]
	954	[5085]	SETTABLE 	R22 K1 R23 ; R22["Node"] := R23
	955	[5086]	GETGLOBAL	R22 K154 ; R22 := mCachedSoloMission
	956	[5086]	SETTABLE 	R22 K155 R2 ; R22["SectorName"] := R2
	957	[5087]	TEST     	R3 0 ; if not R3 then PC := 964
	958	[5087]	JMP      	964 ; PC := 964
	959	[5088]	GETGLOBAL	R22 K154 ; R22 := mCachedSoloMission
	960	[5088]	GETGLOBAL	R23 K15 ; R23 := 0x64fb1586
	961	[5088]	MOVE     	R24 R3 ; R24 := R3
	962	[5088]	CALL     	R23 2 2 ; R23 := R23(R24)
	963	[5088]	SETTABLE 	R22 K156 R23 ; R22["SectorQuest"] := R23
	964	[5090]	GETUPVAL 	R22 U19 ; R22 := U19
	965	[5090]	GETUPVAL 	R23 U2 ; R23 := U2
	966	[5090]	GETTABLE 	R23 R23 K78 ; R23 := R23[0xdedfded7]
	967	[5090]	LOADK    	R24 K157 ; R24 := "/Lotus/Language/Menu/SoloModeRequired"
	968	[5090]	LOADK    	R25 K158 ; R25 := "ConfirmSoloMission"
	969	[5090]	CALL     	R23 3 2 ; R23 := R23(R24,R25)
	970	[5090]	SETTABLE 	R22 K151 R23 ; R22["SoloMission"] := R23
	971	[5091]	JMP      	995 ; PC := 995
	972	[5092]	GETGLOBAL	R22 K0 ; R22 := mHover
	973	[5092]	GETTABLE 	R22 R22 K1 ; R22 := R22["Node"]
	974	[5092]	TEST     	R22 0 ; if not R22 then PC := 995
	975	[5092]	JMP      	995 ; PC := 995
	976	[5092]	GETGLOBAL	R22 K0 ; R22 := mHover
	977	[5092]	GETTABLE 	R22 R22 K1 ; R22 := R22["Node"]
	978	[5092]	GETTABLE 	R22 R22 K7 ; R22 := R22["radialSector"]
	979	[5092]	TEST     	R22 0 ; if not R22 then PC := 995
	980	[5092]	JMP      	995 ; PC := 995
	981	[5093]	GETUPVAL 	R22 U7 ; R22 := U7
	982	[5093]	MOVE     	R23 R2 ; R23 := R2
	983	[5093]	MOVE     	R24 R3 ; R24 := R3
	984	[5093]	MOVE     	R25 R4 ; R25 := R4
	985	[5093]	MOVE     	R26 R5 ; R26 := R5
	986	[5093]	CALL     	R22 5 2 ; R22 := R22(R23,R24,R25,R26)
	987	[5093]	TEST     	R22 0 ; if not R22 then PC := 995
	988	[5093]	JMP      	995 ; PC := 995
	989	[5094]	GETGLOBAL	R22 K4 ; R22 := _T
	990	[5094]	GETTABLE 	R22 R22 K11 ; R22 := R22["SquadOverlay"]
	991	[5094]	SELF     	R22 R22 K12 ; R23 := R22; R22 := R22[0xe4162eed]
	992	[5094]	LOADK    	R24 K159 ; R24 := "NotifyForceLoadSoloMission"
	993	[5094]	LOADK    	R25 K14 ; R25 := ""
	994	[5094]	CALL     	R22 4 1 ; R22(R23,R24,R25)
	995	[5097]	RETURN   	R0 1 ; return 
	996	[5100]	GETGLOBAL	R22 K20 ; R22 := mRailJack
	997	[5100]	GETTABLE 	R22 R22 K21 ; R22 := R22["Active"]
	998	[5100]	TEST     	R22 0 ; if not R22 then PC := 1004
	999	[5100]	JMP      	1004 ; PC := 1004
	1000	[5101]	GETGLOBAL	R22 K20 ; R22 := mRailJack
	1001	[5101]	GETGLOBAL	R23 K0 ; R23 := mHover
	1002	[5101]	GETTABLE 	R23 R23 K1 ; R23 := R23["Node"]
	1003	[5101]	SETTABLE 	R22 K160 R23 ; R22["SelectionNode"] := R23
	1004	[5104]	GETUPVAL 	R22 U7 ; R22 := U7
	1005	[5104]	MOVE     	R23 R2 ; R23 := R2
	1006	[5104]	MOVE     	R24 R3 ; R24 := R3
	1007	[5104]	MOVE     	R25 R4 ; R25 := R4
	1008	[5104]	MOVE     	R26 R5 ; R26 := R5
	1009	[5104]	CALL     	R22 5 1 ; R22(R23,R24,R25,R26)
	1010	[5105]	RETURN   	R0 1 ; return 

function #112 <?:5107,5114> (10 instructions, 40 bytes at 00000211283EE370)
0 params, 2 slots, 2 upvalues, 0 locals, 6 constants, 0 functions
	1	[5108]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5108]	CALL     	R0 1 1 ; R0()
	3	[5111]	GETUPVAL 	R0 U1 ; R0 := U1
	4	[5111]	SETTABLE 	R0 K0 K1 ; R0["isLMBDown"] := false
	5	[5112]	GETUPVAL 	R0 U1 ; R0 := U1
	6	[5112]	SETTABLE 	R0 K2 K3 ; R0["mHandleJunctionClick"] := nil
	7	[5113]	GETGLOBAL	R0 K4 ; R0 := mDrag
	8	[5113]	SELF     	R0 R0 K5 ; R1 := R0; R0 := R0[0xcc5f3150]
	9	[5113]	CALL     	R0 2 1 ; R0(R1)
	10	[5114]	RETURN   	R0 1 ; return 

function #113 <?:5116,5118> (5 instructions, 20 bytes at 00000211283EE960)
0 params, 2 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[5117]	GETGLOBAL	R0 K0 ; R0 := _T
	2	[5117]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[5117]	CALL     	R1 1 2 ; R1 := R1()
	4	[5117]	SETTABLE 	R0 K1 R1 ; R0["InRailJackMode"] := R1
	5	[5118]	RETURN   	R0 1 ; return 

function #114 <?:5120,5122> (8 instructions, 32 bytes at 0000021121D270A0)
0 params, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[5121]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5121]	GETTABLE 	R0 R0 K0 ; R0 := R0[0x4c232afc]
	3	[5121]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	4	[5121]	LOADK    	R2 := 1.000000
	5	[5121]	LOADK    	R3 K2 ; R3 := 0.200000
	6	[5121]	LOADK    	R4 := 0.000000
	7	[5121]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	8	[5122]	RETURN   	R0 1 ; return 

function #115 <?:5124,5187> (231 instructions, 924 bytes at 0000021121D27170)
0 params, 17 slots, 11 upvalues, 0 locals, 66 constants, 0 functions
	1	[5125]	GETGLOBAL	R0 K0 ; R0 := 0x0032441c
	2	[5125]	GETTABLE 	R0 R0 K1 ; R0 := R0["StalkerMode"]
	3	[5125]	TEST     	R0 1 ; if R0 then PC := 7
	4	[5125]	JMP      	7 ; PC := 7
	5	[5125]	GETGLOBAL	R0 K2 ; R0 := _T
	6	[5125]	GETTABLE 	R0 R0 K3 ; R0 := R0["WareframeChallenge"]
	7	[5126]	GETGLOBAL	R1 K2 ; R1 := _T
	8	[5126]	GETTABLE 	R1 R1 K4 ; R1 := R1["SkippedTeleportFadeIn"]
	9	[5126]	TEST     	R1 0 ; if not R1 then PC := 21
	10	[5126]	JMP      	21 ; PC := 21
	11	[5127]	GETGLOBAL	R1 K2 ; R1 := _T
	12	[5127]	SETTABLE 	R1 K4 K5 ; R1["SkippedTeleportFadeIn"] := nil
	13	[5128]	GETGLOBAL	R1 K6 ; R1 := 0x2d0fad09
	14	[5128]	LOADK    	R2 K7 ; R2 := "Lotus.Scripts.PostProcess.BasePostProcessFade"
	15	[5128]	CALL     	R1 2 2 ; R1 := R1(R2)
	16	[5129]	GETTABLE 	R2 R1 K8 ; R2 := R1[0xd06ddfa8]
	17	[5129]	LOADK    	R3 := 1.000000
	18	[5129]	LOADK    	R4 := 0.000000
	19	[5129]	LOADK    	R5 := 0.000000
	20	[5129]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	21	[5132]	GETGLOBAL	R2 K9 ; R2 := 0x7b998233
	22	[5132]	GETGLOBAL	R3 K2 ; R3 := _T
	23	[5132]	GETTABLE 	R3 R3 K10 ; R3 := R3["SquadOverlay"]
	24	[5132]	CALL     	R2 2 2 ; R2 := R2(R3)
	25	[5132]	TEST     	R2 1 ; if R2 then PC := 80
	26	[5132]	JMP      	80 ; PC := 80
	27	[5132]	GETGLOBAL	R2 K9 ; R2 := 0x7b998233
	28	[5132]	GETGLOBAL	R3 K11 ; R3 := 0xe7f2b02f
	29	[5132]	SELF     	R3 R3 K12 ; R4 := R3; R3 := R3[0x565be9ee]
	30	[5132]	CALL     	R3 2 0 ; R3,... := R3(R4)
	31	[5132]	CALL     	R2 0 2 ; R2 := R2(R3,...)
	32	[5132]	TEST     	R2 0 ; if not R2 then PC := 80
	33	[5132]	JMP      	80 ; PC := 80
	34	[5132]	GETGLOBAL	R2 K9 ; R2 := 0x7b998233
	35	[5132]	GETGLOBAL	R3 K13 ; R3 := 0x83f4e77c
	36	[5132]	CALL     	R2 2 2 ; R2 := R2(R3)
	37	[5132]	TEST     	R2 1 ; if R2 then PC := 80
	38	[5132]	JMP      	80 ; PC := 80
	39	[5132]	GETGLOBAL	R2 K13 ; R2 := 0x83f4e77c
	40	[5132]	SELF     	R2 R2 K14 ; R3 := R2; R2 := R2[0x4f9a9020]
	41	[5132]	CALL     	R2 2 2 ; R2 := R2(R3)
	42	[5132]	TEST     	R2 1 ; if R2 then PC := 80
	43	[5132]	JMP      	80 ; PC := 80
	44	[5132]	TEST     	R0 1 ; if R0 then PC := 80
	45	[5132]	JMP      	80 ; PC := 80
	46	[5132]	GETGLOBAL	R2 K11 ; R2 := 0xe7f2b02f
	47	[5132]	SELF     	R2 R2 K15 ; R3 := R2; R2 := R2[0x53c3399f]
	48	[5132]	CALL     	R2 2 2 ; R2 := R2(R3)
	49	[5132]	EQ       	0 R2 K16 ; if R2 ~= 0.000000 then PC := 80
	50	[5132]	JMP      	80 ; PC := 80
	51	[5132]	GETGLOBAL	R2 K17 ; R2 := mNewWarMode
	52	[5132]	TEST     	R2 1 ; if R2 then PC := 80
	53	[5132]	JMP      	80 ; PC := 80
	54	[5133]	GETUPVAL 	R2 U0 ; R2 := U0
	55	[5133]	GETTABLE 	R2 R2 K18 ; R2 := R2[0x8e7c3b5e]
	56	[5133]	GETGLOBAL	R3 K19 ; R3 := 0x25d99d89
	57	[5133]	CALL     	R2 2 5 ; R2,R3,R4,R5 := R2(R3)
	58	[5134]	GETGLOBAL	R6 K9 ; R6 := 0x7b998233
	59	[5134]	MOVE     	R7 R2 ; R7 := R2
	60	[5134]	CALL     	R6 2 2 ; R6 := R6(R7)
	61	[5134]	TEST     	R6 1 ; if R6 then PC := 67
	62	[5134]	JMP      	67 ; PC := 67
	63	[5134]	GETUPVAL 	R6 U1 ; R6 := U1
	64	[5134]	GETTABLE 	R6 R6 K20 ; R6 := R6["zarimanIntroQuest"]
	65	[5134]	EQ       	1 R2 R6 ; if R2 == R6 then PC := 68
	66	[5134]	JMP      	68 ; PC := 68
	67	[5134]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 68
	68	[5134]	OP_LOADBOOL	R6 1 0 ; R6 := true
	69	[5135]	TEST     	R6 1 ; if R6 then PC := 80
	70	[5135]	JMP      	80 ; PC := 80
	71	[5136]	GETGLOBAL	R7 K21 ; R7 := 0x3d106989
	72	[5136]	LOADK    	R8 K22 ; R8 := "Hosting lobby from MapRedux.lua (InitializeMore)"
	73	[5136]	CALL     	R7 2 1 ; R7(R8)
	74	[5137]	GETGLOBAL	R7 K2 ; R7 := _T
	75	[5137]	GETTABLE 	R7 R7 K10 ; R7 := R7["SquadOverlay"]
	76	[5137]	SELF     	R7 R7 K23 ; R8 := R7; R7 := R7[0xe4162eed]
	77	[5137]	LOADK    	R9 K24 ; R9 := "HostLobby"
	78	[5137]	LOADK    	R10 K25 ; R10 := ""
	79	[5137]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	80	[5141]	GETGLOBAL	R7 K9 ; R7 := 0x7b998233
	81	[5141]	GETGLOBAL	R8 K26 ; R8 := 0xc1625025
	82	[5141]	CALL     	R7 2 2 ; R7 := R7(R8)
	83	[5141]	TEST     	R7 1 ; if R7 then PC := 116
	84	[5141]	JMP      	116 ; PC := 116
	85	[5141]	TEST     	R0 1 ; if R0 then PC := 116
	86	[5141]	JMP      	116 ; PC := 116
	87	[5142]	GETUPVAL 	R7 U2 ; R7 := U2
	88	[5142]	GETGLOBAL	R8 K28 ; R8 := 0x9ba7909f
	89	[5142]	SELF     	R8 R8 K29 ; R9 := R8; R8 := R8[0xbcfb64ab]
	90	[5142]	GETGLOBAL	R10 K26 ; R10 := 0xc1625025
	91	[5142]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	92	[5142]	SETTABLE 	R7 K27 R8 ; R7["Movie"] := R8
	93	[5143]	GETGLOBAL	R7 K9 ; R7 := 0x7b998233
	94	[5143]	GETUPVAL 	R8 U2 ; R8 := U2
	95	[5143]	GETTABLE 	R8 R8 K27 ; R8 := R8["Movie"]
	96	[5143]	CALL     	R7 2 2 ; R7 := R7(R8)
	97	[5143]	TEST     	R7 0 ; if not R7 then PC := 105
	98	[5143]	JMP      	105 ; PC := 105
	99	[5144]	GETUPVAL 	R7 U2 ; R7 := U2
	100	[5144]	GETGLOBAL	R8 K28 ; R8 := 0x9ba7909f
	101	[5144]	SELF     	R8 R8 K30 ; R9 := R8; R8 := R8[0x6dd7aa66]
	102	[5144]	GETGLOBAL	R10 K26 ; R10 := 0xc1625025
	103	[5144]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	104	[5144]	SETTABLE 	R7 K27 R8 ; R7["Movie"] := R8
	105	[5146]	GETGLOBAL	R7 K2 ; R7 := _T
	106	[5146]	GETTABLE 	R7 R7 K31 ; R7 := R7["MAP_HideExtraUI"]
	107	[5146]	TEST     	R7 0 ; if not R7 then PC := 116
	108	[5146]	JMP      	116 ; PC := 116
	109	[5147]	GETUPVAL 	R7 U2 ; R7 := U2
	110	[5147]	GETTABLE 	R7 R7 K27 ; R7 := R7["Movie"]
	111	[5147]	SELF     	R7 R7 K32 ; R8 := R7; R7 := R7[0xaade900e]
	112	[5147]	LOADK    	R9 K33 ; R9 := "_root"
	113	[5147]	LOADK    	R10 := 11.000000
	114	[5147]	OP_LOADBOOL	R11 0 0 ; R11 := false
	115	[5147]	CALL     	R7 5 1 ; R7(R8,R9,R10,R11)
	116	[5151]	GETGLOBAL	R7 K17 ; R7 := mNewWarMode
	117	[5151]	TEST     	R7 1 ; if R7 then PC := 172
	118	[5151]	JMP      	172 ; PC := 172
	119	[5152]	GETUPVAL 	R7 U0 ; R7 := U0
	120	[5152]	GETTABLE 	R7 R7 K34 ; R7 := R7[0x89e663e9]
	121	[5152]	CALL     	R7 1 2 ; R7 := R7()
	122	[5152]	TEST     	R7 1 ; if R7 then PC := 137
	123	[5152]	JMP      	137 ; PC := 137
	124	[5152]	GETGLOBAL	R7 K9 ; R7 := 0x7b998233
	125	[5152]	GETGLOBAL	R8 K19 ; R8 := 0x25d99d89
	126	[5152]	CALL     	R7 2 2 ; R7 := R7(R8)
	127	[5152]	TEST     	R7 1 ; if R7 then PC := 135
	128	[5152]	JMP      	135 ; PC := 135
	129	[5152]	GETGLOBAL	R7 K19 ; R7 := 0x25d99d89
	130	[5152]	SELF     	R7 R7 K35 ; R8 := R7; R7 := R7[0x600a0ad6]
	131	[5152]	CALL     	R7 2 2 ; R7 := R7(R8)
	132	[5152]	SELF     	R7 R7 K36 ; R8 := R7; R7 := R7[0xd8140b94]
	133	[5152]	CALL     	R7 2 2 ; R7 := R7(R8)
	134	[5152]	JMP      	137 ; PC := 137
	135	[5152]	OP_LOADBOOL	R7 0 1 ; R7 := false; PC := 136
	136	[5152]	OP_LOADBOOL	R7 1 0 ; R7 := true
	137	[5153]	TEST     	R7 0 ; if not R7 then PC := 157
	138	[5153]	JMP      	157 ; PC := 157
	139	[5154]	GETGLOBAL	R8 K37 ; R8 := 0x76ea806b
	140	[5154]	SELF     	R8 R8 K38 ; R9 := R8; R8 := R8[0x3f3ae64c]
	141	[5154]	LOADK    	R10 := 0.000000
	142	[5154]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	143	[5155]	SELF     	R9 R8 K39 ; R10 := R8; R9 := R8[0x40e9c32b]
	144	[5155]	CALL     	R9 2 2 ; R9 := R9(R10)
	145	[5156]	SELF     	R10 R9 K40 ; R11 := R9; R10 := R9[0xae210336]
	146	[5156]	CALL     	R10 2 2 ; R10 := R10(R11)
	147	[5156]	TESTSET  	R7 R10 1 ; if R10 then PC := 151 else R7 := R10 
	148	[5156]	JMP      	151 ; PC := 151
	149	[5156]	GETGLOBAL	R10 K41 ; R10 := mRailJack
	150	[5156]	GETTABLE 	R7 R10 K42 ; R7 := R10["Active"]
	151	[5158]	GETUPVAL 	R10 U3 ; R10 := U3
	152	[5158]	GETGLOBAL	R11 K44 ; R11 := 0xae91e43b
	153	[5158]	SELF     	R11 R11 K45 ; R12 := R11; R11 := R11[0x1fd6abd0]
	154	[5158]	GETGLOBAL	R13 K46 ; R13 := 0xa96c79cf
	155	[5158]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	156	[5158]	SETTABLE 	R10 K43 R11 ; R10["EpisodeStatus"] := R11
	157	[5161]	GETGLOBAL	R10 K2 ; R10 := _T
	158	[5161]	NOT      	R11 R7 ; R11 := not R7
	159	[5161]	SETTABLE 	R10 K47 R11 ; R10["ResourceDroneVisible"] := R11
	160	[5162]	GETUPVAL 	R10 U3 ; R10 := U3
	161	[5162]	GETGLOBAL	R11 K44 ; R11 := 0xae91e43b
	162	[5162]	SELF     	R11 R11 K45 ; R12 := R11; R11 := R11[0x1fd6abd0]
	163	[5162]	GETGLOBAL	R13 K49 ; R13 := 0x2b7ad504
	164	[5162]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	165	[5162]	SETTABLE 	R10 K48 R11 ; R10["ResourceDrone"] := R11
	166	[5163]	GETUPVAL 	R10 U3 ; R10 := U3
	167	[5163]	GETTABLE 	R10 R10 K48 ; R10 := R10["ResourceDrone"]
	168	[5163]	SELF     	R10 R10 K23 ; R11 := R10; R10 := R10[0xe4162eed]
	169	[5163]	LOADK    	R12 K50 ; R12 := "OnRegionZoomOut"
	170	[5163]	LOADK    	R13 K25 ; R13 := ""
	171	[5163]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	172	[5166]	GETUPVAL 	R10 U0 ; R10 := U0
	173	[5166]	GETTABLE 	R10 R10 K52 ; R10 := R10[0x5e35d4d6]
	174	[5166]	CALL     	R10 1 2 ; R10 := R10()
	175	[5166]	SETGLOBALHASH	R10 K51 ; mRadialSolarMap := R10
	176	[5168]	GETGLOBAL	R10 K51 ; R10 := mRadialSolarMap
	177	[5168]	SELF     	R10 R10 K54 ; R11 := R10; R10 := R10[0x20eadc16]
	178	[5168]	CALL     	R10 2 2 ; R10 := R10(R11)
	179	[5168]	SETGLOBALHASH	R10 K53 ; mSuperRegions := R10
	180	[5169]	GETGLOBAL	R10 K51 ; R10 := mRadialSolarMap
	181	[5169]	SELF     	R10 R10 K56 ; R11 := R10; R10 := R10[0xc1dee03f]
	182	[5169]	CALL     	R10 2 2 ; R10 := R10(R11)
	183	[5169]	SETGLOBALHASH	R10 K55 ; mRegions := R10
	184	[5170]	GETGLOBAL	R10 K51 ; R10 := mRadialSolarMap
	185	[5170]	SELF     	R10 R10 K58 ; R11 := R10; R10 := R10[0xd13b47be]
	186	[5170]	CALL     	R10 2 2 ; R10 := R10(R11)
	187	[5170]	SETGLOBALHASH	R10 K57 ; mMapNodes := R10
	188	[5172]	GETGLOBAL	R10 K28 ; R10 := 0x9ba7909f
	189	[5172]	SELF     	R10 R10 K59 ; R11 := R10; R10 := R10[0xb21930e8]
	190	[5172]	CALL     	R10 2 1 ; R10(R11)
	191	[5173]	GETUPVAL 	R10 U4 ; R10 := U4
	192	[5173]	CALL     	R10 1 1 ; R10()
	193	[5174]	GETUPVAL 	R10 U5 ; R10 := U5
	194	[5174]	CALL     	R10 1 1 ; R10()
	195	[5176]	GETUPVAL 	R10 U6 ; R10 := U6
	196	[5176]	CALL     	R10 1 1 ; R10()
	197	[5178]	GETUPVAL 	R10 U7 ; R10 := U7
	198	[5178]	CALL     	R10 1 1 ; R10()
	199	[5180]	GETUPVAL 	R10 U8 ; R10 := U8
	200	[5180]	CALL     	R10 1 1 ; R10()
	201	[5182]	GETGLOBAL	R10 K44 ; R10 := 0xae91e43b
	202	[5182]	SELF     	R10 R10 K32 ; R11 := R10; R10 := R10[0xaade900e]
	203	[5182]	LOADK    	R12 K60 ; R12 := "DifficultySelector"
	204	[5182]	LOADK    	R13 := 11.000000
	205	[5182]	GETGLOBAL	R14 K41 ; R14 := mRailJack
	206	[5182]	GETTABLE 	R14 R14 K42 ; R14 := R14["Active"]
	207	[5182]	TEST     	R14 1 ; if R14 then PC := 212
	208	[5182]	JMP      	212 ; PC := 212
	209	[5182]	GETUPVAL 	R14 U9 ; R14 := U9
	210	[5182]	GETTABLE 	R14 R14 K61 ; R14 := R14["EnableDifficultySelector"]
	211	[5182]	JMP      	214 ; PC := 214
	212	[5182]	OP_LOADBOOL	R14 0 1 ; R14 := false; PC := 213
	213	[5182]	OP_LOADBOOL	R14 1 0 ; R14 := true
	214	[5182]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	215	[5183]	GETGLOBAL	R10 K62 ; R10 := 0x25312c9b
	216	[5183]	GETGLOBAL	R11 K44 ; R11 := 0xae91e43b
	217	[5183]	LOADK    	R12 K60 ; R12 := "DifficultySelector"
	218	[5183]	LOADK    	R13 := 0.000000
	219	[5183]	NEWTABLE 	R14 1 0 ; R14 := {}
	220	[5183]	LOADK    	R15 := 10.000000
	221	[5183]	SETLIST  	R14 1 1 ; R14[(1-1)*FPF+i] := R(14+i), 1 <= i <= 1
	222	[5183]	NEWTABLE 	R15 1 0 ; R15 := {}
	223	[5183]	LOADK    	R16 := 100.000000
	224	[5183]	SETLIST  	R15 1 1 ; R15[(1-1)*FPF+i] := R(15+i), 1 <= i <= 1
	225	[5183]	LOADK    	R16 := 0.500000
	226	[5183]	CALL     	R10 7 1 ; R10(R11,R12,R13,R14,R15,R16)
	227	[5185]	GETUPVAL 	R10 U10 ; R10 := U10
	228	[5185]	CALL     	R10 1 1 ; R10()
	229	[5186]	GETGLOBAL	R10 K2 ; R10 := _T
	230	[5186]	SETTABLE 	R10 K64 K65 ; R10["RadialMapInitialized"] := true
	231	[5187]	RETURN   	R0 1 ; return 

function #116 <?:5189,5191> (3 instructions, 12 bytes at 000002112F767240)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[5190]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5190]	CALL     	R0 1 1 ; R0()
	3	[5191]	RETURN   	R0 1 ; return 

function #117 <?:5193,5205> (20 instructions, 80 bytes at 000002112F7672D0)
0 params, 3 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[5194]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[5194]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[5194]	GETTABLE 	R1 R1 K1 ; R1 := R1["cameraSpot"]
	4	[5194]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[5194]	TEST     	R0 0 ; if not R0 then PC := 8
	6	[5194]	JMP      	8 ; PC := 8
	7	[5195]	RETURN   	R0 1 ; return 
	8	[5198]	GETUPVAL 	R0 U0 ; R0 := U0
	9	[5198]	GETTABLE 	R0 R0 K1 ; R0 := R0["cameraSpot"]
	10	[5198]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x9307aa51]
	11	[5198]	GETUPVAL 	R2 U0 ; R2 := U0
	12	[5198]	GETTABLE 	R2 R2 K3 ; R2 := R2["pos"]
	13	[5198]	CALL     	R0 3 1 ; R0(R1,R2)
	14	[5199]	GETUPVAL 	R0 U0 ; R0 := U0
	15	[5199]	GETTABLE 	R0 R0 K1 ; R0 := R0["cameraSpot"]
	16	[5199]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0x70b8836c]
	17	[5199]	GETUPVAL 	R2 U0 ; R2 := U0
	18	[5199]	GETTABLE 	R2 R2 K5 ; R2 := R2["rotation"]
	19	[5199]	CALL     	R0 3 1 ; R0(R1,R2)
	20	[5205]	RETURN   	R0 1 ; return 

function #118 <?:5207,5215> (34 instructions, 136 bytes at 0000021118F92CA0)
0 params, 9 slots, 1 upvalue, 0 locals, 8 constants, 0 functions
	1	[5208]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[5208]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	3	[5208]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xcd73323e]
	4	[5208]	CALL     	R1 2 0 ; R1,... := R1(R2)
	5	[5208]	CALL     	R0 0 2 ; R0 := R0(R1,...)
	6	[5208]	TEST     	R0 0 ; if not R0 then PC := 11
	7	[5208]	JMP      	11 ; PC := 11
	8	[5209]	GETGLOBAL	R0 K3 ; R0 := 0xa421af95
	9	[5209]	TAILCALL 	R0 1 0 ; R0,... := R0()
	10	[5209]	RETURN   	R0 0 ; return R0,... 
	11	[5211]	GETGLOBAL	R0 K1 ; R0 := 0xae91e43b
	12	[5211]	SELF     	R0 R0 K4 ; R1 := R0; R0 := R0[0x548b03be]
	13	[5211]	CALL     	R0 2 2 ; R0 := R0(R1)
	14	[5212]	GETGLOBAL	R1 K5 ; R1 := 0xc2892f65
	15	[5212]	MOVE     	R2 R0 ; R2 := R0
	16	[5212]	CALL     	R1 2 1 ; R1(R2)
	17	[5213]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	18	[5213]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xcd73323e]
	19	[5213]	CALL     	R1 2 2 ; R1 := R1(R2)
	20	[5213]	SELF     	R1 R1 K6 ; R2 := R1; R1 := R1[0xd1586535]
	21	[5213]	CALL     	R1 2 2 ; R1 := R1(R2)
	22	[5214]	GETUPVAL 	R2 U0 ; R2 := U0
	23	[5214]	GETTABLE 	R2 R2 K7 ; R2 := R2[0xd2fc8b86]
	24	[5214]	MOVE     	R3 R1 ; R3 := R1
	25	[5214]	MOVE     	R4 R0 ; R4 := R0
	26	[5214]	GETGLOBAL	R5 K3 ; R5 := 0xa421af95
	27	[5214]	LOADK    	R6 := 0.000000
	28	[5214]	LOADK    	R7 := 0.000000
	29	[5214]	LOADK    	R8 := 1.000000
	30	[5214]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	31	[5214]	LOADK    	R6 := 0.000000
	32	[5214]	TAILCALL 	R2 5 0 ; R2,... := R2(R3,R4,R5,R6)
	33	[5214]	RETURN   	R2 0 ; return R2,... 
	34	[5215]	RETURN   	R0 1 ; return 

function #119 <?:5217,5238> (50 instructions, 200 bytes at 0000021137AB48F0)
1 param, 17 slots, 2 upvalues, 0 locals, 11 constants, 1 function
	1	[5218]	GETGLOBAL	R1 K0 ; R1 := mZoomedRegion
	2	[5218]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 5
	3	[5218]	JMP      	5 ; PC := 5
	4	[5219]	RETURN   	R0 1 ; return 
	5	[5222]	SETGLOBALHASH	R0 K0 ; mZoomedRegion := R0
	6	[5224]	GETGLOBAL	R1 K1 ; R1 := mRailJack
	7	[5224]	GETTABLE 	R1 R1 K2 ; R1 := R1["Active"]
	8	[5224]	TEST     	R1 0 ; if not R1 then PC := 50
	9	[5224]	JMP      	50 ; PC := 50
	10	[5225]	GETGLOBAL	R1 K3 ; R1 := 0x7b998233
	11	[5225]	GETGLOBAL	R2 K0 ; R2 := mZoomedRegion
	12	[5225]	CALL     	R1 2 2 ; R1 := R1(R2)
	13	[5225]	NOT      	R1 R1 ; R1 := not R1
	14	[5226]	GETUPVAL 	R2 U0 ; R2 := U0
	15	[5226]	GETTABLE 	R2 R2 K4 ; R2 := R2[0x06d055f9]
	16	[5226]	MOVE     	R3 R1 ; R3 := R1
	17	[5226]	LOADK    	R4 := 100.000000
	18	[5226]	LOADK    	R5 := 0.000000
	19	[5226]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	20	[5228]	GETGLOBAL	R3 K5 ; R3 := 0xcfc01047
	21	[5228]	GETUPVAL 	R4 U1 ; R4 := U1
	22	[5228]	CALL     	R3 2 4 ; R3,R4,R5 := R3(R4)
	23	[5228]	JMP      	47 ; PC := 47
	24	[5229]	GETGLOBAL	R8 K3 ; R8 := 0x7b998233
	25	[5229]	GETTABLE 	R9 R7 K6 ; R9 := R7["joinBtn"]
	26	[5229]	CALL     	R8 2 2 ; R8 := R8(R9)
	27	[5229]	TEST     	R8 1 ; if R8 then PC := 46
	28	[5229]	JMP      	46 ; PC := 46
	29	[5231]	GETGLOBAL	R8 K7 ; R8 := 0x25312c9b
	30	[5231]	GETGLOBAL	R9 K8 ; R9 := 0xae91e43b
	31	[5231]	GETTABLE 	R10 R7 K6 ; R10 := R7["joinBtn"]
	32	[5231]	GETTABLE 	R10 R10 K9 ; R10 := R10["mClipName"]
	33	[5231]	LOADK    	R11 := 0.000000
	34	[5231]	NEWTABLE 	R12 1 0 ; R12 := {}
	35	[5231]	LOADK    	R13 := 10.000000
	36	[5231]	SETLIST  	R12 1 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 1
	37	[5231]	NEWTABLE 	R13 1 0 ; R13 := {}
	38	[5231]	MOVE     	R14 R2 ; R14 := R2
	39	[5231]	SETLIST  	R13 1 1 ; R13[(1-1)*FPF+i] := R(13+i), 1 <= i <= 1
	40	[5231]	LOADK    	R14 := 0.500000
	41	[5231]	LOADK    	R15 := 0.000000
	42	[5234]	CLOSURE  	R16 0 ; R16 := closure(Function #1)
	43	[5234]	MOVE     	R0 R7 ; R0 := R7
	44	[5234]	MOVE     	R0 R1 ; R0 := R1
	45	[5231]	CALL     	R8 9 1 ; R8(R9,R10,R11,R12,R13,R14,R15,R16)
	46	[5235]	CLOSE    	R6 ; SAVE R6,...
	47	[5228]	TFORLOOP 	R3 2 ; R6,R7 := R3(R4,R5); if R6 ~= nil then begin PC = 24; R5 := R6 end
	48	[5235]	JMP      	24 ; PC := 24
	49	[5236]	CLOSE    	R1 ; SAVE R1,...
	50	[5238]	RETURN   	R0 1 ; return 

function #120 <?:5240,5396> (331 instructions, 1324 bytes at 0000021130817280)
0 params, 39 slots, 6 upvalues, 0 locals, 50 constants, 3 functions
	1	[5241]	GETGLOBAL	R0 K0 ; R0 := 0xa421af95
	2	[5241]	CALL     	R0 1 2 ; R0 := R0()
	3	[5242]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	4	[5242]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0x548b03be]
	5	[5242]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[5243]	GETGLOBAL	R2 K3 ; R2 := 0xc2892f65
	7	[5243]	MOVE     	R3 R1 ; R3 := R1
	8	[5243]	CALL     	R2 2 1 ; R2(R3)
	9	[5245]	GETGLOBAL	R2 K4 ; R2 := mHover
	10	[5245]	GETTABLE 	R2 R2 K5 ; R2 := R2["Region"]
	11	[5246]	GETGLOBAL	R3 K4 ; R3 := mHover
	12	[5246]	SETTABLE 	R3 K5 K6 ; R3["Region"] := nil
	13	[5247]	LOADK    	R3 := 500.000000
	14	[5248]	LOADNIL  	R4 R5 ; R4 := R5 := nil
	15	[5250]	GETGLOBAL	R6 K0 ; R6 := 0xa421af95
	16	[5250]	CALL     	R6 1 2 ; R6 := R6()
	17	[5251]	GETGLOBAL	R7 K0 ; R7 := 0xa421af95
	18	[5251]	CALL     	R7 1 2 ; R7 := R7()
	19	[5252]	LOADK    	R8 := 0.000000
	20	[5253]	LOADK    	R9 := 0.000000
	21	[5254]	OP_LOADBOOL	R10 0 0 ; R10 := false
	22	[5255]	GETGLOBAL	R11 K0 ; R11 := 0xa421af95
	23	[5255]	CALL     	R11 1 2 ; R11 := R11()
	24	[5256]	GETGLOBAL	R12 K0 ; R12 := 0xa421af95
	25	[5256]	CALL     	R12 1 2 ; R12 := R12()
	26	[5257]	LOADNIL  	R13 R13 ; R13 := nil
	27	[5259]	OP_LOADBOOL	R14 0 0 ; R14 := false
	28	[5260]	LOADK    	R15 := 500.000000
	29	[5261]	GETGLOBAL	R16 K0 ; R16 := 0xa421af95
	30	[5261]	CALL     	R16 1 2 ; R16 := R16()
	31	[5263]	GETGLOBAL	R17 K7 ; R17 := 0x7b998233
	32	[5263]	GETGLOBAL	R18 K8 ; R18 := 0x1211d00f
	33	[5263]	CALL     	R17 2 2 ; R17 := R17(R18)
	34	[5263]	TEST     	R17 1 ; if R17 then PC := 169
	35	[5263]	JMP      	169 ; PC := 169
	36	[5263]	GETGLOBAL	R17 K9 ; R17 := _T
	37	[5263]	GETTABLE 	R17 R17 K10 ; R17 := R17["MouseInWorldStateWindow"]
	38	[5263]	TEST     	R17 1 ; if R17 then PC := 169
	39	[5263]	JMP      	169 ; PC := 169
	40	[5263]	GETGLOBAL	R17 K9 ; R17 := _T
	41	[5263]	GETTABLE 	R17 R17 K11 ; R17 := R17["MouseInChatArea"]
	42	[5263]	TEST     	R17 1 ; if R17 then PC := 169
	43	[5263]	JMP      	169 ; PC := 169
	44	[5264]	GETGLOBAL	R17 K8 ; R17 := 0x1211d00f
	45	[5264]	SELF     	R17 R17 K12 ; R18 := R17; R17 := R17[0xb4364067]
	46	[5264]	CALL     	R17 2 2 ; R17 := R17(R18)
	47	[5264]	SELF     	R17 R17 K13 ; R18 := R17; R17 := R17[0x4078bbf8]
	48	[5264]	MOVE     	R19 R11 ; R19 := R11
	49	[5264]	CALL     	R17 3 1 ; R17(R18,R19)
	50	[5265]	LOADK    	R17 := 1.000000
	51	[5265]	GETGLOBAL	R18 K14 ; R18 := mRegions
	52	[5265]	LEN      	R18 R18 ; R18 := # R18
	53	[5265]	LOADK    	R19 := 1.000000
	54	[5265]	FORPREP  	R17 168 ; R17 -= R19; PC := 168
	55	[5266]	GETGLOBAL	R21 K14 ; R21 := mRegions
	56	[5266]	GETTABLE 	R5 R21 R20 ; R5 := R21[R20]
	57	[5267]	GETGLOBAL	R21 K15 ; R21 := mRegionInstances
	58	[5267]	GETTABLE 	R13 R21 R20 ; R13 := R21[R20]
	59	[5268]	GETGLOBAL	R21 K7 ; R21 := 0x7b998233
	60	[5268]	MOVE     	R22 R13 ; R22 := R13
	61	[5268]	CALL     	R21 2 2 ; R21 := R21(R22)
	62	[5268]	TEST     	R21 1 ; if R21 then PC := 168
	63	[5268]	JMP      	168 ; PC := 168
	64	[5268]	GETGLOBAL	R21 K16 ; R21 := mRailJack
	65	[5268]	GETTABLE 	R21 R21 K17 ; R21 := R21["Active"]
	66	[5268]	TEST     	R21 0 ; if not R21 then PC := 73
	67	[5268]	JMP      	73 ; PC := 73
	68	[5268]	GETGLOBAL	R21 K16 ; R21 := mRailJack
	69	[5268]	GETTABLE 	R21 R21 K18 ; R21 := R21["Regions"]
	70	[5268]	GETTABLE 	R21 R21 R20 ; R21 := R21[R20]
	71	[5268]	TEST     	R21 0 ; if not R21 then PC := 168
	72	[5268]	JMP      	168 ; PC := 168
	73	[5269]	SELF     	R21 R13 K13 ; R22 := R13; R21 := R13[0x4078bbf8]
	74	[5269]	MOVE     	R23 R12 ; R23 := R12
	75	[5269]	CALL     	R21 3 1 ; R21(R22,R23)
	76	[5270]	GETGLOBAL	R21 K19 ; R21 := 0x83ddcc65
	77	[5270]	MOVE     	R22 R6 ; R22 := R6
	78	[5270]	MOVE     	R23 R12 ; R23 := R12
	79	[5270]	MOVE     	R24 R11 ; R24 := R11
	80	[5270]	CALL     	R21 4 1 ; R21(R22,R23,R24)
	81	[5271]	GETGLOBAL	R21 K20 ; R21 := mRegionRadius
	82	[5271]	GETTABLE 	R9 R21 R20 ; R9 := R21[R20]
	83	[5272]	GETUPVAL 	R21 U0 ; R21 := U0
	84	[5272]	GETTABLE 	R21 R21 K21 ; R21 := R21["IsVisible"]
	85	[5272]	TEST     	R21 0 ; if not R21 then PC := 88
	86	[5272]	JMP      	88 ; PC := 88
	87	[5273]	ADD      	R9 R9 K22 ; R9 := R9 + 0.200000
	88	[5276]	GETGLOBAL	R21 K1 ; R21 := 0xae91e43b
	89	[5276]	SELF     	R21 R21 K23 ; R22 := R21; R21 := R21[0x84ca5a07]
	90	[5276]	MOVE     	R23 R7 ; R23 := R7
	91	[5276]	MOVE     	R24 R0 ; R24 := R0
	92	[5276]	MOVE     	R25 R1 ; R25 := R1
	93	[5276]	MOVE     	R26 R6 ; R26 := R6
	94	[5276]	MOVE     	R27 R9 ; R27 := R9
	95	[5276]	CALL     	R21 7 2 ; R21 := R21(R22,R23,R24,R25,R26,R27)
	96	[5276]	MOVE     	R10 R21 ; R10 := R21
	97	[5278]	TEST     	R10 0 ; if not R10 then PC := 108
	98	[5278]	JMP      	108 ; PC := 108
	99	[5278]	GETGLOBAL	R21 K24 ; R21 := 0xae2294fa
	100	[5278]	MOVE     	R22 R7 ; R22 := R7
	101	[5278]	CALL     	R21 2 2 ; R21 := R21(R22)
	102	[5278]	LT       	0 R21 R3 ; if R21 >= R3 then PC := 108
	103	[5278]	JMP      	108 ; PC := 108
	104	[5278]	GETUPVAL 	R21 U1 ; R21 := U1
	105	[5278]	GETTABLE 	R21 R21 R20 ; R21 := R21[R20]
	106	[5278]	TEST     	R21 0 ; if not R21 then PC := 112
	107	[5278]	JMP      	112 ; PC := 112
	108	[5278]	GETGLOBAL	R21 K4 ; R21 := mHover
	109	[5278]	GETTABLE 	R21 R21 K25 ; R21 := R21["RegionLabel"]
	110	[5278]	EQ       	0 R21 R20 ; if R21 ~= R20 then PC := 128
	111	[5278]	JMP      	128 ; PC := 128
	112	[5279]	MOVE     	R4 R7 ; R4 := R7
	113	[5280]	GETGLOBAL	R21 K4 ; R21 := mHover
	114	[5280]	GETTABLE 	R21 R21 K25 ; R21 := R21["RegionLabel"]
	115	[5280]	EQ       	0 R21 R20 ; if R21 ~= R20 then PC := 119
	116	[5280]	JMP      	119 ; PC := 119
	117	[5281]	LOADK    	R3 := 0.000000
	118	[5281]	JMP      	123 ; PC := 123
	119	[5283]	GETGLOBAL	R21 K24 ; R21 := 0xae2294fa
	120	[5283]	MOVE     	R22 R7 ; R22 := R7
	121	[5283]	CALL     	R21 2 2 ; R21 := R21(R22)
	122	[5283]	MOVE     	R3 R21 ; R3 := R21
	123	[5285]	GETGLOBAL	R21 K4 ; R21 := mHover
	124	[5285]	GETGLOBAL	R22 K14 ; R22 := mRegions
	125	[5285]	GETTABLE 	R22 R22 R20 ; R22 := R22[R20]
	126	[5285]	SETTABLE 	R21 K5 R22 ; R21["Region"] := R22
	127	[5286]	MOVE     	R8 R20 ; R8 := R20
	128	[5290]	GETGLOBAL	R21 K26 ; R21 := mSmoothZoom
	129	[5290]	GETTABLE 	R21 R21 K27 ; R21 := R21["mTargetVal"]
	130	[5290]	GETGLOBAL	R22 K28 ; R22 := Zoom
	131	[5290]	GETTABLE 	R22 R22 K29 ; R22 := R22["ZOOM_OUT_THRESHOLD"]
	132	[5290]	LT       	0 R22 R21 ; if R22 >= R21 then PC := 168
	133	[5290]	JMP      	168 ; PC := 168
	134	[5291]	GETUPVAL 	R21 U0 ; R21 := U0
	135	[5291]	GETTABLE 	R21 R21 K21 ; R21 := R21["IsVisible"]
	136	[5291]	TEST     	R21 1 ; if R21 then PC := 139
	137	[5291]	JMP      	139 ; PC := 139
	138	[5292]	ADD      	R9 R9 K22 ; R9 := R9 + 0.200000
	139	[5294]	GETGLOBAL	R21 K1 ; R21 := 0xae91e43b
	140	[5294]	SELF     	R21 R21 K23 ; R22 := R21; R21 := R21[0x84ca5a07]
	141	[5294]	MOVE     	R23 R16 ; R23 := R16
	142	[5294]	MOVE     	R24 R0 ; R24 := R0
	143	[5294]	GETUPVAL 	R25 U2 ; R25 := U2
	144	[5294]	GETTABLE 	R25 R25 K30 ; R25 := R25["CAMERA_FOCUS_DIR"]
	145	[5294]	MOVE     	R26 R6 ; R26 := R6
	146	[5294]	MOVE     	R27 R9 ; R27 := R9
	147	[5294]	CALL     	R21 7 2 ; R21 := R21(R22,R23,R24,R25,R26,R27)
	148	[5294]	MOVE     	R14 R21 ; R14 := R21
	149	[5296]	TEST     	R14 0 ; if not R14 then PC := 168
	150	[5296]	JMP      	168 ; PC := 168
	151	[5296]	GETGLOBAL	R21 K24 ; R21 := 0xae2294fa
	152	[5296]	MOVE     	R22 R16 ; R22 := R16
	153	[5296]	CALL     	R21 2 2 ; R21 := R21(R22)
	154	[5296]	LT       	0 R21 R15 ; if R21 >= R15 then PC := 168
	155	[5296]	JMP      	168 ; PC := 168
	156	[5296]	GETUPVAL 	R21 U1 ; R21 := U1
	157	[5296]	GETTABLE 	R21 R21 R20 ; R21 := R21[R20]
	158	[5296]	TEST     	R21 1 ; if R21 then PC := 168
	159	[5296]	JMP      	168 ; PC := 168
	160	[5297]	GETGLOBAL	R21 K24 ; R21 := 0xae2294fa
	161	[5297]	MOVE     	R22 R16 ; R22 := R16
	162	[5297]	CALL     	R21 2 2 ; R21 := R21(R22)
	163	[5297]	MOVE     	R15 R21 ; R15 := R21
	164	[5298]	GETUPVAL 	R21 U3 ; R21 := U3
	165	[5298]	GETGLOBAL	R22 K14 ; R22 := mRegions
	166	[5298]	GETTABLE 	R22 R22 R20 ; R22 := R22[R20]
	167	[5298]	CALL     	R21 2 1 ; R21(R22)
	168	[5265]	FORLOOP  	R17 55 ; R17 += R19; if R17 <= R18 then begin PC := 55; R20 := R17 end
	169	[5305]	GETGLOBAL	R21 K26 ; R21 := mSmoothZoom
	170	[5305]	GETTABLE 	R21 R21 K31 ; R21 := R21["mCurVal"]
	171	[5305]	LT       	0 K32 R21 ; if -2.000000 >= R21 then PC := 175
	172	[5305]	JMP      	175 ; PC := 175
	173	[5306]	GETGLOBAL	R21 K4 ; R21 := mHover
	174	[5306]	SETTABLE 	R21 K5 K6 ; R21["Region"] := nil
	175	[5309]	GETGLOBAL	R21 K4 ; R21 := mHover
	176	[5309]	GETTABLE 	R21 R21 K5 ; R21 := R21["Region"]
	177	[5309]	EQ       	1 R2 R21 ; if R2 == R21 then PC := 330
	178	[5309]	JMP      	330 ; PC := 330
	179	[5310]	GETGLOBAL	R21 K4 ; R21 := mHover
	180	[5310]	GETTABLE 	R21 R21 K5 ; R21 := R21["Region"]
	181	[5310]	EQ       	1 R21 K6 ; if R21 == nil then PC := 274
	182	[5310]	JMP      	274 ; PC := 274
	183	[5310]	GETGLOBAL	R21 K7 ; R21 := 0x7b998233
	184	[5310]	GETGLOBAL	R22 K4 ; R22 := mHover
	185	[5310]	GETTABLE 	R22 R22 K5 ; R22 := R22["Region"]
	186	[5310]	GETTABLE 	R22 R22 K33 ; R22 := R22["instance"]
	187	[5310]	CALL     	R21 2 2 ; R21 := R21(R22)
	188	[5310]	TEST     	R21 1 ; if R21 then PC := 274
	189	[5310]	JMP      	274 ; PC := 274
	190	[5311]	GETGLOBAL	R21 K34 ; R21 := mInputBlocked
	191	[5311]	TEST     	R21 1 ; if R21 then PC := 197
	192	[5311]	JMP      	197 ; PC := 197
	193	[5312]	GETUPVAL 	R21 U4 ; R21 := U4
	194	[5312]	GETTABLE 	R21 R21 K35 ; R21 := R21[0x659d451f]
	195	[5312]	GETGLOBAL	R22 K36 ; R22 := 0x6146a0ea
	196	[5312]	CALL     	R21 2 1 ; R21(R22)
	197	[5315]	GETGLOBAL	R21 K20 ; R21 := mRegionRadius
	198	[5315]	GETTABLE 	R9 R21 R8 ; R9 := R21[R8]
	199	[5316]	GETGLOBAL	R21 K37 ; R21 := mRegionRings
	200	[5316]	GETTABLE 	R21 R21 R8 ; R21 := R21[R8]
	201	[5316]	EQ       	0 R21 K6 ; if R21 ~= nil then PC := 206
	202	[5316]	JMP      	206 ; PC := 206
	203	[5317]	GETGLOBAL	R21 K37 ; R21 := mRegionRings
	204	[5317]	NEWTABLE 	R22 0 0 ; R22 := {}
	205	[5317]	SETTABLE 	R21 R8 R22 ; R21[R8] := R22
	206	[5320]	EQ       	1 R9 K6 ; if R9 == nil then PC := 274
	207	[5320]	JMP      	274 ; PC := 274
	208	[5322]	GETGLOBAL	R21 K37 ; R21 := mRegionRings
	209	[5322]	GETTABLE 	R21 R21 R8 ; R21 := R21[R8]
	210	[5324]	GETGLOBAL	R22 K7 ; R22 := 0x7b998233
	211	[5324]	GETTABLE 	R23 R21 K38 ; R23 := R21[1.000000]
	212	[5324]	CALL     	R22 2 2 ; R22 := R22(R23)
	213	[5324]	TEST     	R22 0 ; if not R22 then PC := 227
	214	[5324]	JMP      	227 ; PC := 227
	215	[5325]	GETGLOBAL	R22 K8 ; R22 := 0x1211d00f
	216	[5325]	SELF     	R22 R22 K39 ; R23 := R22; R22 := R22[0x05909209]
	217	[5325]	GETGLOBAL	R24 K40 ; R24 := 0x5a16eeaa
	218	[5325]	GETGLOBAL	R25 K4 ; R25 := mHover
	219	[5325]	GETTABLE 	R25 R25 K5 ; R25 := R25["Region"]
	220	[5325]	GETTABLE 	R25 R25 K33 ; R25 := R25["instance"]
	221	[5325]	SELF     	R25 R25 K41 ; R26 := R25; R25 := R25[0xd1586535]
	222	[5325]	CALL     	R25 2 2 ; R25 := R25(R26)
	223	[5325]	GETUPVAL 	R26 U2 ; R26 := U2
	224	[5325]	GETTABLE 	R26 R26 K42 ; R26 := R26["RING_ROTATION"]
	225	[5325]	CALL     	R22 5 2 ; R22 := R22(R23,R24,R25,R26)
	226	[5325]	SETTABLE 	R21 K38 R22 ; R21[1.000000] := R22
	227	[5328]	GETGLOBAL	R22 K7 ; R22 := 0x7b998233
	228	[5328]	GETTABLE 	R23 R21 K43 ; R23 := R21[2.000000]
	229	[5328]	CALL     	R22 2 2 ; R22 := R22(R23)
	230	[5328]	TEST     	R22 0 ; if not R22 then PC := 253
	231	[5328]	JMP      	253 ; PC := 253
	232	[5329]	GETGLOBAL	R22 K8 ; R22 := 0x1211d00f
	233	[5329]	SELF     	R22 R22 K39 ; R23 := R22; R22 := R22[0x05909209]
	234	[5329]	GETGLOBAL	R24 K40 ; R24 := 0x5a16eeaa
	235	[5329]	GETGLOBAL	R25 K4 ; R25 := mHover
	236	[5329]	GETTABLE 	R25 R25 K5 ; R25 := R25["Region"]
	237	[5329]	GETTABLE 	R25 R25 K33 ; R25 := R25["instance"]
	238	[5329]	SELF     	R25 R25 K41 ; R26 := R25; R25 := R25[0xd1586535]
	239	[5329]	CALL     	R25 2 2 ; R25 := R25(R26)
	240	[5329]	GETUPVAL 	R26 U2 ; R26 := U2
	241	[5329]	GETTABLE 	R26 R26 K42 ; R26 := R26["RING_ROTATION"]
	242	[5329]	CALL     	R22 5 2 ; R22 := R22(R23,R24,R25,R26)
	243	[5329]	SETTABLE 	R21 K43 R22 ; R21[2.000000] := R22
	244	[5331]	GETTABLE 	R22 R21 K43 ; R22 := R21[2.000000]
	245	[5331]	SELF     	R22 R22 K44 ; R23 := R22; R22 := R22[0xc2b4e597]
	246	[5331]	GETGLOBAL	R24 K45 ; R24 := 0x60130201
	247	[5331]	LOADK    	R25 := 255.000000
	248	[5331]	LOADK    	R26 := 255.000000
	249	[5331]	LOADK    	R27 := 255.000000
	250	[5331]	LOADK    	R28 := 150.000000
	251	[5331]	CALL     	R24 5 0 ; R24,... := R24(R25,R26,R27,R28)
	252	[5331]	CALL     	R22 0 1 ; R22(R23,...)
	253	[5334]	GETTABLE 	R22 R21 K38 ; R22 := R21[1.000000]
	254	[5335]	GETTABLE 	R23 R21 K43 ; R23 := R21[2.000000]
	255	[5348]	CLOSURE  	R24 0 ; R24 := closure(Function #1)
	256	[5348]	MOVE     	R0 R22 ; R0 := R22
	257	[5348]	MOVE     	R0 R9 ; R0 := R9
	258	[5348]	MOVE     	R0 R23 ; R0 := R23
	259	[5349]	GETGLOBAL	R25 K46 ; R25 := 0x25312c9b
	260	[5349]	GETGLOBAL	R26 K1 ; R26 := 0xae91e43b
	261	[5349]	GETUPVAL 	R27 U5 ; R27 := U5
	262	[5349]	GETTABLE 	R27 R27 R8 ; R27 := R27[R8]
	263	[5349]	GETTABLE 	R27 R27 K47 ; R27 := R27["clipName"]
	264	[5349]	LOADK    	R28 := 2.000000
	265	[5349]	NEWTABLE 	R29 1 0 ; R29 := {}
	266	[5349]	MOVE     	R30 R24 ; R30 := R24
	267	[5349]	SETLIST  	R29 1 1 ; R29[(1-1)*FPF+i] := R(29+i), 1 <= i <= 1
	268	[5349]	NEWTABLE 	R30 1 0 ; R30 := {}
	269	[5349]	LOADK    	R31 := 1.000000
	270	[5349]	SETLIST  	R30 1 1 ; R30[(1-1)*FPF+i] := R(30+i), 1 <= i <= 1
	271	[5349]	LOADK    	R31 := 0.250000
	272	[5349]	CALL     	R25 7 1 ; R25(R26,R27,R28,R29,R30,R31)
	273	[5349]	CLOSE    	R21 ; SAVE R21,...
	274	[5353]	EQ       	1 R2 K6 ; if R2 == nil then PC := 330
	275	[5353]	JMP      	330 ; PC := 330
	276	[5353]	GETGLOBAL	R21 K7 ; R21 := 0x7b998233
	277	[5353]	GETTABLE 	R22 R2 K33 ; R22 := R2["instance"]
	278	[5353]	CALL     	R21 2 2 ; R21 := R21(R22)
	279	[5353]	TEST     	R21 1 ; if R21 then PC := 330
	280	[5353]	JMP      	330 ; PC := 330
	281	[5354]	LOADK    	R21 := 0.000000
	282	[5355]	LOADK    	R22 := 1.000000
	283	[5355]	GETGLOBAL	R23 K14 ; R23 := mRegions
	284	[5355]	LEN      	R23 R23 ; R23 := # R23
	285	[5355]	LOADK    	R24 := 1.000000
	286	[5355]	FORPREP  	R22 293 ; R22 -= R24; PC := 293
	287	[5356]	GETGLOBAL	R26 K14 ; R26 := mRegions
	288	[5356]	GETTABLE 	R26 R26 R25 ; R26 := R26[R25]
	289	[5356]	EQ       	0 R26 R2 ; if R26 ~= R2 then PC := 293
	290	[5356]	JMP      	293 ; PC := 293
	291	[5357]	MOVE     	R21 R25 ; R21 := R25
	292	[5358]	JMP      	294 ; PC := 294
	293	[5355]	FORLOOP  	R22 287 ; R22 += R24; if R22 <= R23 then begin PC := 287; R25 := R22 end
	294	[5362]	GETGLOBAL	R26 K20 ; R26 := mRegionRadius
	295	[5362]	GETTABLE 	R9 R26 R21 ; R9 := R26[R21]
	296	[5364]	EQ       	1 R9 K6 ; if R9 == nil then PC := 330
	297	[5364]	JMP      	330 ; PC := 330
	298	[5364]	GETGLOBAL	R26 K7 ; R26 := 0x7b998233
	299	[5364]	GETTABLE 	R27 R2 K33 ; R27 := R2["instance"]
	300	[5364]	CALL     	R26 2 2 ; R26 := R26(R27)
	301	[5364]	TEST     	R26 1 ; if R26 then PC := 330
	302	[5364]	JMP      	330 ; PC := 330
	303	[5365]	GETGLOBAL	R26 K37 ; R26 := mRegionRings
	304	[5365]	GETTABLE 	R26 R26 R21 ; R26 := R26[R21]
	305	[5366]	GETTABLE 	R27 R26 K38 ; R27 := R26[1.000000]
	306	[5367]	GETTABLE 	R28 R26 K43 ; R28 := R26[2.000000]
	307	[5381]	CLOSURE  	R29 1 ; R29 := closure(Function #2)
	308	[5381]	MOVE     	R0 R27 ; R0 := R27
	309	[5381]	MOVE     	R0 R9 ; R0 := R9
	310	[5381]	MOVE     	R0 R28 ; R0 := R28
	311	[5382]	GETGLOBAL	R30 K46 ; R30 := 0x25312c9b
	312	[5382]	GETGLOBAL	R31 K1 ; R31 := 0xae91e43b
	313	[5382]	GETUPVAL 	R32 U5 ; R32 := U5
	314	[5382]	GETTABLE 	R32 R32 R21 ; R32 := R32[R21]
	315	[5382]	GETTABLE 	R32 R32 K47 ; R32 := R32["clipName"]
	316	[5382]	LOADK    	R33 := 1.000000
	317	[5382]	NEWTABLE 	R34 1 0 ; R34 := {}
	318	[5382]	MOVE     	R35 R29 ; R35 := R29
	319	[5382]	SETLIST  	R34 1 1 ; R34[(1-1)*FPF+i] := R(34+i), 1 <= i <= 1
	320	[5382]	NEWTABLE 	R35 1 0 ; R35 := {}
	321	[5382]	LOADK    	R36 := 1.000000
	322	[5382]	SETLIST  	R35 1 1 ; R35[(1-1)*FPF+i] := R(35+i), 1 <= i <= 1
	323	[5382]	LOADK    	R36 K49 ; R36 := 0.150000
	324	[5382]	LOADK    	R37 := 0.000000
	325	[5390]	CLOSURE  	R38 2 ; R38 := closure(Function #3)
	326	[5390]	MOVE     	R0 R27 ; R0 := R27
	327	[5390]	MOVE     	R0 R28 ; R0 := R28
	328	[5382]	CALL     	R30 9 1 ; R30(R31,R32,R33,R34,R35,R36,R37,R38)
	329	[5390]	CLOSE    	R26 ; SAVE R26,...
	330	[5395]	RETURN   	R4 2 ; return R4 
	331	[5396]	RETURN   	R0 1 ; return 

function #121 <?:5398,5416> (39 instructions, 156 bytes at 0000021132F85110)
0 params, 3 slots, 2 upvalues, 0 locals, 10 constants, 0 functions
	1	[5400]	OP_LOADBOOL	R0 0 0 ; R0 := false
	2	[5401]	GETGLOBAL	R1 K0 ; R1 := mRailJack
	3	[5401]	GETTABLE 	R1 R1 K1 ; R1 := R1["Active"]
	4	[5401]	TEST     	R1 1 ; if R1 then PC := 18
	5	[5401]	JMP      	18 ; PC := 18
	6	[5401]	GETGLOBAL	R1 K2 ; R1 := 0x7b998233
	7	[5401]	GETUPVAL 	R2 U0 ; R2 := U0
	8	[5401]	CALL     	R1 2 2 ; R1 := R1(R2)
	9	[5401]	TEST     	R1 1 ; if R1 then PC := 18
	10	[5401]	JMP      	18 ; PC := 18
	11	[5401]	GETGLOBAL	R1 K3 ; R1 := mPlayerPos
	12	[5401]	GETTABLE 	R1 R1 K4 ; R1 := R1["Locked"]
	13	[5401]	TEST     	R1 1 ; if R1 then PC := 18
	14	[5401]	JMP      	18 ; PC := 18
	15	[5401]	GETGLOBAL	R1 K5 ; R1 := mZoomedRegion
	16	[5401]	EQ       	0 R1 K6 ; if R1 ~= nil then PC := 19
	17	[5401]	JMP      	19 ; PC := 19
	18	[5402]	RETURN   	R0 2 ; return R0 
	19	[5405]	GETGLOBAL	R1 K7 ; R1 := mSmoothZoom
	20	[5405]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0x54ab95f9]
	21	[5405]	CALL     	R1 2 2 ; R1 := R1(R2)
	22	[5406]	GETUPVAL 	R2 U1 ; R2 := U1
	23	[5406]	EQ       	1 R1 R2 ; if R1 == R2 then PC := 37
	24	[5406]	JMP      	37 ; PC := 37
	25	[5407]	LT       	0 K9 R1 ; if -1.000000 >= R1 then PC := 31
	26	[5407]	JMP      	31 ; PC := 31
	27	[5407]	GETUPVAL 	R2 U1 ; R2 := U1
	28	[5407]	LE       	0 R2 K9 ; if R2 > -1.000000 then PC := 31
	29	[5407]	JMP      	31 ; PC := 31
	30	[5408]	OP_LOADBOOL	R0 1 0 ; R0 := true
	31	[5410]	LE       	0 R1 K9 ; if R1 > -1.000000 then PC := 37
	32	[5410]	JMP      	37 ; PC := 37
	33	[5410]	GETUPVAL 	R2 U1 ; R2 := U1
	34	[5410]	LT       	0 K9 R2 ; if -1.000000 >= R2 then PC := 37
	35	[5410]	JMP      	37 ; PC := 37
	36	[5411]	OP_LOADBOOL	R0 1 0 ; R0 := true
	37	[5414]	SETUPVAL 	R1 U1 ; U1 := R1
	38	[5415]	RETURN   	R0 2 ; return R0 
	39	[5416]	RETURN   	R0 1 ; return 

function #122 <?:5418,5753> (1104 instructions, 4416 bytes at 0000021132F75610)
0 params, 90 slots, 23 upvalues, 0 locals, 150 constants, 0 functions
	1	[5419]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[5419]	GETUPVAL 	R1 U1 ; R1 := U1
	3	[5419]	GETTABLE 	R1 R1 K0 ; R1 := R1["EDIT_REGIONS"]
	4	[5419]	EQ       	0 R0 R1 ; if R0 ~= R1 then PC := 83
	5	[5419]	JMP      	83 ; PC := 83
	6	[5419]	GETGLOBAL	R0 K1 ; R0 := 0x7b998233
	7	[5419]	GETUPVAL 	R1 U2 ; R1 := U2
	8	[5419]	GETTABLE 	R1 R1 K2 ; R1 := R1["mMovingRegion"]
	9	[5419]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[5419]	TEST     	R0 1 ; if R0 then PC := 83
	11	[5419]	JMP      	83 ; PC := 83
	12	[5420]	GETUPVAL 	R0 U3 ; R0 := U3
	13	[5420]	CALL     	R0 1 2 ; R0 := R0()
	14	[5421]	GETUPVAL 	R1 U2 ; R1 := U2
	15	[5421]	GETTABLE 	R1 R1 K3 ; R1 := R1["mInitialWorldCursor"]
	16	[5421]	SUB      	R1 R0 R1 ; R1 := R0 - R1
	17	[5422]	GETUPVAL 	R2 U2 ; R2 := U2
	18	[5422]	GETTABLE 	R2 R2 K4 ; R2 := R2["mInitialPosition"]
	19	[5422]	ADD      	R2 R2 R1 ; R2 := R2 + R1
	20	[5423]	SETTABLE 	R2 K5 K6 ; R2["z"] := 0.000000
	21	[5424]	GETUPVAL 	R3 U2 ; R3 := U2
	22	[5424]	GETTABLE 	R3 R3 K2 ; R3 := R3["mMovingRegion"]
	23	[5424]	GETTABLE 	R3 R3 K7 ; R3 := R3["instance"]
	24	[5424]	SELF     	R3 R3 K8 ; R4 := R3; R3 := R3[0x9307aa51]
	25	[5424]	MOVE     	R5 R2 ; R5 := R2
	26	[5424]	CALL     	R3 3 1 ; R3(R4,R5)
	27	[5425]	GETGLOBAL	R3 K9 ; R3 := mRadialSolarMap
	28	[5425]	SELF     	R3 R3 K10 ; R4 := R3; R3 := R3[0x16447aaa]
	29	[5425]	GETUPVAL 	R5 U2 ; R5 := U2
	30	[5425]	GETTABLE 	R5 R5 K2 ; R5 := R5["mMovingRegion"]
	31	[5425]	MOVE     	R6 R2 ; R6 := R2
	32	[5425]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	33	[5427]	LOADNIL  	R3 R3 ; R3 := nil
	34	[5428]	GETGLOBAL	R4 K11 ; R4 := 0xc8802016
	35	[5428]	GETUPVAL 	R5 U2 ; R5 := U2
	36	[5428]	GETTABLE 	R5 R5 K12 ; R5 := R5["mChildNodes"]
	37	[5428]	CALL     	R4 2 4 ; R4,R5,R6 := R4(R5)
	38	[5428]	JMP      	70 ; PC := 70
	39	[5429]	GETUPVAL 	R9 U4 ; R9 := U4
	40	[5429]	GETTABLE 	R10 R8 K13 ; R10 := R8["NodeIndex"]
	41	[5429]	GETTABLE 	R3 R9 R10 ; R3 := R9[R10]
	42	[5430]	GETTABLE 	R9 R8 K14 ; R9 := R8["InitialPosition"]
	43	[5430]	ADD      	R2 R9 R1 ; R2 := R9 + R1
	44	[5431]	SETTABLE 	R3 K15 R2 ; R3["position"] := R2
	45	[5432]	GETUPVAL 	R9 U5 ; R9 := U5
	46	[5432]	MOVE     	R10 R3 ; R10 := R3
	47	[5432]	CALL     	R9 2 2 ; R9 := R9(R10)
	48	[5432]	SETTABLE 	R3 K16 R9 ; R3["isSurfaceNode"] := R9
	49	[5433]	GETGLOBAL	R9 K9 ; R9 := mRadialSolarMap
	50	[5433]	SELF     	R9 R9 K17 ; R10 := R9; R9 := R9[0x251bbc8c]
	51	[5433]	GETTABLE 	R11 R3 K18 ; R11 := R3["radialSector"]
	52	[5433]	MOVE     	R12 R2 ; R12 := R2
	53	[5433]	CALL     	R9 4 1 ; R9(R10,R11,R12)
	54	[5434]	GETTABLE 	R9 R3 K19 ; R9 := R3["deco"]
	55	[5434]	EQ       	1 R9 K20 ; if R9 == nil then PC := 70
	56	[5434]	JMP      	70 ; PC := 70
	57	[5434]	GETGLOBAL	R9 K1 ; R9 := 0x7b998233
	58	[5434]	GETTABLE 	R10 R3 K19 ; R10 := R3["deco"]
	59	[5434]	GETTABLE 	R10 R10 K21 ; R10 := R10["mInstance"]
	60	[5434]	CALL     	R9 2 2 ; R9 := R9(R10)
	61	[5434]	TEST     	R9 1 ; if R9 then PC := 70
	62	[5434]	JMP      	70 ; PC := 70
	63	[5435]	GETTABLE 	R9 R3 K19 ; R9 := R3["deco"]
	64	[5435]	GETTABLE 	R9 R9 K21 ; R9 := R9["mInstance"]
	65	[5435]	SELF     	R9 R9 K8 ; R10 := R9; R9 := R9[0x9307aa51]
	66	[5435]	GETTABLE 	R11 R3 K19 ; R11 := R3["deco"]
	67	[5435]	GETTABLE 	R11 R11 K22 ; R11 := R11["mOffset"]
	68	[5435]	ADD      	R11 R2 R11 ; R11 := R2 + R11
	69	[5435]	CALL     	R9 3 1 ; R9(R10,R11)
	70	[5428]	TFORLOOP 	R4 2 ; R7,R8 := R4(R5,R6); if R7 ~= nil then begin PC = 39; R6 := R7 end
	71	[5436]	JMP      	39 ; PC := 39
	72	[5439]	LOADK    	R9 := 1.000000
	73	[5439]	GETGLOBAL	R10 K23 ; R10 := mFlatEdges
	74	[5439]	LEN      	R10 R10 ; R10 := # R10
	75	[5439]	LOADK    	R11 := 1.000000
	76	[5439]	FORPREP  	R9 81 ; R9 -= R11; PC := 81
	77	[5440]	GETUPVAL 	R13 U6 ; R13 := U6
	78	[5440]	GETGLOBAL	R14 K23 ; R14 := mFlatEdges
	79	[5440]	GETTABLE 	R14 R14 R12 ; R14 := R14[R12]
	80	[5440]	CALL     	R13 2 1 ; R13(R14)
	81	[5439]	FORLOOP  	R9 77 ; R9 += R11; if R9 <= R10 then begin PC := 77; R12 := R9 end
	82	[5443]	RETURN   	R0 1 ; return 
	83	[5446]	GETUPVAL 	R13 U0 ; R13 := U0
	84	[5446]	GETUPVAL 	R14 U1 ; R14 := U1
	85	[5446]	GETTABLE 	R14 R14 K24 ; R14 := R14["EDIT_NODES"]
	86	[5446]	EQ       	0 R13 R14 ; if R13 ~= R14 then PC := 190
	87	[5446]	JMP      	190 ; PC := 190
	88	[5446]	GETGLOBAL	R13 K1 ; R13 := 0x7b998233
	89	[5446]	GETUPVAL 	R14 U2 ; R14 := U2
	90	[5446]	GETTABLE 	R14 R14 K25 ; R14 := R14["mMovingNode"]
	91	[5446]	CALL     	R13 2 2 ; R13 := R13(R14)
	92	[5446]	TEST     	R13 1 ; if R13 then PC := 190
	93	[5446]	JMP      	190 ; PC := 190
	94	[5447]	GETUPVAL 	R13 U2 ; R13 := U2
	95	[5447]	GETTABLE 	R13 R13 K25 ; R13 := R13["mMovingNode"]
	96	[5447]	GETTABLE 	R13 R13 K18 ; R13 := R13["radialSector"]
	97	[5447]	GETTABLE 	R13 R13 K26 ; R13 := R13["region"]
	98	[5448]	LOADNIL  	R14 R14 ; R14 := nil
	99	[5449]	EQ       	1 R13 K27 ; if R13 == 21.000000 then PC := 104
	100	[5449]	JMP      	104 ; PC := 104
	101	[5450]	GETUPVAL 	R15 U7 ; R15 := U7
	102	[5450]	CALL     	R15 1 2 ; R15 := R15()
	103	[5450]	MOVE     	R14 R15 ; R14 := R15
	104	[5452]	EQ       	1 R14 K20 ; if R14 == nil then PC := 108
	105	[5452]	JMP      	108 ; PC := 108
	106	[5452]	EQ       	0 R14 K28 ; if R14 ~= false then PC := 139
	107	[5452]	JMP      	139 ; PC := 139
	108	[5453]	GETUPVAL 	R15 U3 ; R15 := U3
	109	[5453]	CALL     	R15 1 2 ; R15 := R15()
	110	[5454]	LOADNIL  	R16 R16 ; R16 := nil
	111	[5455]	GETUPVAL 	R17 U8 ; R17 := U8
	112	[5455]	GETTABLE 	R17 R17 K29 ; R17 := R17["mShiftDown"]
	113	[5455]	TEST     	R17 0 ; if not R17 then PC := 132
	114	[5455]	JMP      	132 ; PC := 132
	115	[5456]	GETUPVAL 	R17 U9 ; R17 := U9
	116	[5456]	GETTABLE 	R17 R17 K30 ; R17 := R17[0xfa9785e4]
	117	[5456]	GETGLOBAL	R18 K31 ; R18 := 0xae91e43b
	118	[5456]	CALL     	R17 2 2 ; R17 := R17(R18)
	119	[5457]	GETTABLE 	R18 R17 K32 ; R18 := R17["y"]
	120	[5457]	GETUPVAL 	R19 U2 ; R19 := U2
	121	[5457]	GETTABLE 	R19 R19 K33 ; R19 := R19["mInitialMousePosition"]
	122	[5457]	GETTABLE 	R19 R19 K32 ; R19 := R19["y"]
	123	[5457]	SUB      	R18 R18 R19 ; R18 := R18 - R19
	124	[5458]	GETGLOBAL	R19 K34 ; R19 := 0xa421af95
	125	[5458]	LOADK    	R20 := 0.000000
	126	[5458]	LOADK    	R21 := 0.000000
	127	[5458]	UNM      	R22 R18 ; R22 := ^ R18
	128	[5458]	DIV      	R22 R22 K35 ; R22 := R22 / 500.000000
	129	[5458]	CALL     	R19 4 2 ; R19 := R19(R20,R21,R22)
	130	[5458]	MOVE     	R16 R19 ; R16 := R19
	131	[5458]	JMP      	135 ; PC := 135
	132	[5460]	GETUPVAL 	R19 U2 ; R19 := U2
	133	[5460]	GETTABLE 	R19 R19 K3 ; R19 := R19["mInitialWorldCursor"]
	134	[5460]	SUB      	R16 R15 R19 ; R16 := R15 - R19
	135	[5462]	GETUPVAL 	R19 U2 ; R19 := U2
	136	[5462]	GETTABLE 	R19 R19 K4 ; R19 := R19["mInitialPosition"]
	137	[5462]	ADD      	R14 R19 R16 ; R14 := R19 + R16
	138	[5462]	JMP      	145 ; PC := 145
	139	[5464]	GETGLOBAL	R19 K36 ; R19 := 0x1211d00f
	140	[5464]	SELF     	R19 R19 K37 ; R20 := R19; R19 := R19[0xb4364067]
	141	[5464]	CALL     	R19 2 2 ; R19 := R19(R20)
	142	[5464]	SELF     	R19 R19 K38 ; R20 := R19; R19 := R19[0xd1586535]
	143	[5464]	CALL     	R19 2 2 ; R19 := R19(R20)
	144	[5465]	ADD      	R14 R14 R19 ; R14 := R14 + R19
	145	[5468]	GETUPVAL 	R20 U2 ; R20 := U2
	146	[5468]	GETTABLE 	R20 R20 K25 ; R20 := R20["mMovingNode"]
	147	[5468]	SETTABLE 	R20 K15 R14 ; R20["position"] := R14
	148	[5469]	GETUPVAL 	R20 U2 ; R20 := U2
	149	[5469]	GETTABLE 	R20 R20 K25 ; R20 := R20["mMovingNode"]
	150	[5469]	GETUPVAL 	R21 U5 ; R21 := U5
	151	[5469]	GETUPVAL 	R22 U2 ; R22 := U2
	152	[5469]	GETTABLE 	R22 R22 K25 ; R22 := R22["mMovingNode"]
	153	[5469]	CALL     	R21 2 2 ; R21 := R21(R22)
	154	[5469]	SETTABLE 	R20 K16 R21 ; R20["isSurfaceNode"] := R21
	155	[5471]	LOADK    	R20 := 1.000000
	156	[5471]	GETGLOBAL	R21 K23 ; R21 := mFlatEdges
	157	[5471]	LEN      	R21 R21 ; R21 := # R21
	158	[5471]	LOADK    	R22 := 1.000000
	159	[5471]	FORPREP  	R20 178 ; R20 -= R22; PC := 178
	160	[5472]	GETGLOBAL	R24 K23 ; R24 := mFlatEdges
	161	[5472]	GETTABLE 	R24 R24 R23 ; R24 := R24[R23]
	162	[5472]	GETTABLE 	R24 R24 K39 ; R24 := R24["NodeA"]
	163	[5472]	GETTABLE 	R24 R24 K18 ; R24 := R24["radialSector"]
	164	[5472]	GETTABLE 	R24 R24 K26 ; R24 := R24["region"]
	165	[5472]	EQ       	1 R24 R13 ; if R24 == R13 then PC := 174
	166	[5472]	JMP      	174 ; PC := 174
	167	[5472]	GETGLOBAL	R24 K23 ; R24 := mFlatEdges
	168	[5472]	GETTABLE 	R24 R24 R23 ; R24 := R24[R23]
	169	[5472]	GETTABLE 	R24 R24 K40 ; R24 := R24["NodeB"]
	170	[5472]	GETTABLE 	R24 R24 K18 ; R24 := R24["radialSector"]
	171	[5472]	GETTABLE 	R24 R24 K26 ; R24 := R24["region"]
	172	[5472]	EQ       	0 R24 R13 ; if R24 ~= R13 then PC := 178
	173	[5472]	JMP      	178 ; PC := 178
	174	[5473]	GETUPVAL 	R24 U6 ; R24 := U6
	175	[5473]	GETGLOBAL	R25 K23 ; R25 := mFlatEdges
	176	[5473]	GETTABLE 	R25 R25 R23 ; R25 := R25[R23]
	177	[5473]	CALL     	R24 2 1 ; R24(R25)
	178	[5471]	FORLOOP  	R20 160 ; R20 += R22; if R20 <= R21 then begin PC := 160; R23 := R20 end
	179	[5482]	GETGLOBAL	R24 K9 ; R24 := mRadialSolarMap
	180	[5482]	SELF     	R24 R24 K17 ; R25 := R24; R24 := R24[0x251bbc8c]
	181	[5482]	GETUPVAL 	R26 U2 ; R26 := U2
	182	[5482]	GETTABLE 	R26 R26 K25 ; R26 := R26["mMovingNode"]
	183	[5482]	GETTABLE 	R26 R26 K18 ; R26 := R26["radialSector"]
	184	[5482]	MOVE     	R27 R14 ; R27 := R14
	185	[5482]	CALL     	R24 4 1 ; R24(R25,R26,R27)
	186	[5484]	GETUPVAL 	R24 U10 ; R24 := U10
	187	[5484]	GETUPVAL 	R25 U2 ; R25 := U2
	188	[5484]	GETTABLE 	R25 R25 K25 ; R25 := R25["mMovingNode"]
	189	[5484]	CALL     	R24 2 1 ; R24(R25)
	190	[5487]	GETUPVAL 	R24 U0 ; R24 := U0
	191	[5487]	GETUPVAL 	R25 U1 ; R25 := U1
	192	[5487]	GETTABLE 	R25 R25 K41 ; R25 := R25["EDIT_SHORTCUT_CONTROL_POINTS"]
	193	[5487]	EQ       	0 R24 R25 ; if R24 ~= R25 then PC := 338
	194	[5487]	JMP      	338 ; PC := 338
	195	[5488]	GETUPVAL 	R24 U3 ; R24 := U3
	196	[5488]	CALL     	R24 1 2 ; R24 := R24()
	197	[5490]	GETUPVAL 	R25 U2 ; R25 := U2
	198	[5490]	GETTABLE 	R25 R25 K42 ; R25 := R25["mControlPointHeld"]
	199	[5490]	TEST     	R25 1 ; if R25 then PC := 279
	200	[5490]	JMP      	279 ; PC := 279
	201	[5491]	GETUPVAL 	R25 U2 ; R25 := U2
	202	[5491]	GETTABLE 	R25 R25 K43 ; R25 := R25["mMovingControlPoint"]
	203	[5492]	LOADNIL  	R26 R28 ; R26 := R27 := R28 := nil
	204	[5495]	LOADK    	R29 := 1.000000
	205	[5495]	GETGLOBAL	R30 K23 ; R30 := mFlatEdges
	206	[5495]	LEN      	R30 R30 ; R30 := # R30
	207	[5495]	LOADK    	R31 := 1.000000
	208	[5495]	FORPREP  	R29 244 ; R29 -= R31; PC := 244
	209	[5496]	GETGLOBAL	R33 K23 ; R33 := mFlatEdges
	210	[5496]	GETTABLE 	R33 R33 R32 ; R33 := R33[R32]
	211	[5496]	GETTABLE 	R33 R33 K44 ; R33 := R33["IsShortcut"]
	212	[5496]	TEST     	R33 0 ; if not R33 then PC := 244
	213	[5496]	JMP      	244 ; PC := 244
	214	[5497]	GETGLOBAL	R33 K11 ; R33 := 0xc8802016
	215	[5497]	NEWTABLE 	R34 2 0 ; R34 := {}
	216	[5497]	GETGLOBAL	R35 K23 ; R35 := mFlatEdges
	217	[5497]	GETTABLE 	R35 R35 R32 ; R35 := R35[R32]
	218	[5497]	GETTABLE 	R35 R35 K45 ; R35 := R35["controlPointA"]
	219	[5497]	GETGLOBAL	R36 K23 ; R36 := mFlatEdges
	220	[5497]	GETTABLE 	R36 R36 R32 ; R36 := R36[R32]
	221	[5497]	GETTABLE 	R36 R36 K46 ; R36 := R36["controlPointB"]
	222	[5497]	SETLIST  	R34 2 1 ; R34[(1-1)*FPF+i] := R(34+i), 1 <= i <= 2
	223	[5497]	CALL     	R33 2 4 ; R33,R34,R35 := R33(R34)
	224	[5497]	JMP      	242 ; PC := 242
	225	[5498]	GETGLOBAL	R38 K34 ; R38 := 0xa421af95
	226	[5498]	GETTABLE 	R39 R37 K15 ; R39 := R37["position"]
	227	[5498]	GETTABLE 	R39 R39 K47 ; R39 := R39["x"]
	228	[5498]	GETTABLE 	R40 R37 K15 ; R40 := R37["position"]
	229	[5498]	GETTABLE 	R40 R40 K32 ; R40 := R40["y"]
	230	[5498]	LOADK    	R41 := 0.000000
	231	[5498]	CALL     	R38 4 2 ; R38 := R38(R39,R40,R41)
	232	[5498]	MOVE     	R26 R38 ; R26 := R38
	233	[5499]	GETGLOBAL	R38 K48 ; R38 := 0xae2294fa
	234	[5499]	SUB      	R39 R26 R24 ; R39 := R26 - R24
	235	[5499]	CALL     	R38 2 2 ; R38 := R38(R39)
	236	[5499]	LT       	0 R38 K49 ; if R38 >= 0.100000 then PC := 242
	237	[5499]	JMP      	242 ; PC := 242
	238	[5500]	MOVE     	R27 R37 ; R27 := R37
	239	[5501]	GETGLOBAL	R38 K23 ; R38 := mFlatEdges
	240	[5501]	GETTABLE 	R28 R38 R32 ; R28 := R38[R32]
	241	[5502]	JMP      	244 ; PC := 244
	242	[5497]	TFORLOOP 	R33 2 ; R36,R37 := R33(R34,R35); if R36 ~= nil then begin PC = 225; R35 := R36 end
	243	[5503]	JMP      	225 ; PC := 225
	244	[5495]	FORLOOP  	R29 209 ; R29 += R31; if R29 <= R30 then begin PC := 209; R32 := R29 end
	245	[5508]	EQ       	1 R25 R27 ; if R25 == R27 then PC := 279
	246	[5508]	JMP      	279 ; PC := 279
	247	[5509]	GETGLOBAL	R38 K1 ; R38 := 0x7b998233
	248	[5509]	MOVE     	R39 R25 ; R39 := R25
	249	[5509]	CALL     	R38 2 2 ; R38 := R38(R39)
	250	[5509]	TEST     	R38 1 ; if R38 then PC := 261
	251	[5509]	JMP      	261 ; PC := 261
	252	[5510]	GETTABLE 	R38 R25 K50 ; R38 := R25["ringInstance"]
	253	[5510]	SELF     	R38 R38 K51 ; R39 := R38; R38 := R38[0xc2b4e597]
	254	[5510]	GETGLOBAL	R40 K52 ; R40 := 0x60130201
	255	[5510]	LOADK    	R41 := 0.000000
	256	[5510]	LOADK    	R42 := 255.000000
	257	[5510]	LOADK    	R43 := 0.000000
	258	[5510]	LOADK    	R44 := 255.000000
	259	[5510]	CALL     	R40 5 0 ; R40,... := R40(R41,R42,R43,R44)
	260	[5510]	CALL     	R38 0 1 ; R38(R39,...)
	261	[5512]	GETGLOBAL	R38 K1 ; R38 := 0x7b998233
	262	[5512]	MOVE     	R39 R27 ; R39 := R27
	263	[5512]	CALL     	R38 2 2 ; R38 := R38(R39)
	264	[5512]	TEST     	R38 1 ; if R38 then PC := 275
	265	[5512]	JMP      	275 ; PC := 275
	266	[5513]	GETTABLE 	R38 R27 K50 ; R38 := R27["ringInstance"]
	267	[5513]	SELF     	R38 R38 K51 ; R39 := R38; R38 := R38[0xc2b4e597]
	268	[5513]	GETGLOBAL	R40 K52 ; R40 := 0x60130201
	269	[5513]	LOADK    	R41 := 0.000000
	270	[5513]	LOADK    	R42 := 0.000000
	271	[5513]	LOADK    	R43 := 255.000000
	272	[5513]	LOADK    	R44 := 255.000000
	273	[5513]	CALL     	R40 5 0 ; R40,... := R40(R41,R42,R43,R44)
	274	[5513]	CALL     	R38 0 1 ; R38(R39,...)
	275	[5515]	GETUPVAL 	R38 U2 ; R38 := U2
	276	[5515]	SETTABLE 	R38 K43 R27 ; R38["mMovingControlPoint"] := R27
	277	[5516]	GETUPVAL 	R38 U2 ; R38 := U2
	278	[5516]	SETTABLE 	R38 K53 R28 ; R38["mEditingEdge"] := R28
	279	[5520]	GETGLOBAL	R38 K1 ; R38 := 0x7b998233
	280	[5520]	GETUPVAL 	R39 U2 ; R39 := U2
	281	[5520]	GETTABLE 	R39 R39 K43 ; R39 := R39["mMovingControlPoint"]
	282	[5520]	CALL     	R38 2 2 ; R38 := R38(R39)
	283	[5520]	TEST     	R38 1 ; if R38 then PC := 338
	284	[5520]	JMP      	338 ; PC := 338
	285	[5520]	GETUPVAL 	R38 U2 ; R38 := U2
	286	[5520]	GETTABLE 	R38 R38 K42 ; R38 := R38["mControlPointHeld"]
	287	[5520]	TEST     	R38 0 ; if not R38 then PC := 338
	288	[5520]	JMP      	338 ; PC := 338
	289	[5521]	GETUPVAL 	R38 U2 ; R38 := U2
	290	[5521]	GETTABLE 	R38 R38 K43 ; R38 := R38["mMovingControlPoint"]
	291	[5521]	GETTABLE 	R38 R38 K15 ; R38 := R38["position"]
	292	[5521]	GETTABLE 	R38 R38 K5 ; R38 := R38["z"]
	293	[5522]	GETUPVAL 	R39 U2 ; R39 := U2
	294	[5522]	GETTABLE 	R39 R39 K3 ; R39 := R39["mInitialWorldCursor"]
	295	[5522]	SUB      	R39 R24 R39 ; R39 := R24 - R39
	296	[5523]	GETUPVAL 	R40 U2 ; R40 := U2
	297	[5523]	GETTABLE 	R40 R40 K4 ; R40 := R40["mInitialPosition"]
	298	[5523]	ADD      	R40 R40 R39 ; R40 := R40 + R39
	299	[5524]	SETTABLE 	R40 K5 R38 ; R40["z"] := R38
	300	[5525]	GETUPVAL 	R41 U2 ; R41 := U2
	301	[5525]	GETTABLE 	R41 R41 K43 ; R41 := R41["mMovingControlPoint"]
	302	[5525]	SETTABLE 	R41 K15 R40 ; R41["position"] := R40
	303	[5526]	GETUPVAL 	R41 U11 ; R41 := U11
	304	[5526]	GETUPVAL 	R42 U2 ; R42 := U2
	305	[5526]	GETTABLE 	R42 R42 K53 ; R42 := R42["mEditingEdge"]
	306	[5526]	CALL     	R41 2 2 ; R41 := R41(R42)
	307	[5527]	GETUPVAL 	R42 U2 ; R42 := U2
	308	[5527]	GETTABLE 	R42 R42 K53 ; R42 := R42["mEditingEdge"]
	309	[5527]	GETTABLE 	R42 R42 K54 ; R42 := R42["Instance"]
	310	[5527]	SELF     	R42 R42 K55 ; R43 := R42; R42 := R42[0x7ceafc23]
	311	[5527]	MOVE     	R44 R41 ; R44 := R41
	312	[5527]	CALL     	R42 3 1 ; R42(R43,R44)
	313	[5529]	GETUPVAL 	R42 U2 ; R42 := U2
	314	[5529]	GETTABLE 	R42 R42 K43 ; R42 := R42["mMovingControlPoint"]
	315	[5529]	GETTABLE 	R42 R42 K50 ; R42 := R42["ringInstance"]
	316	[5529]	SELF     	R42 R42 K8 ; R43 := R42; R42 := R42[0x9307aa51]
	317	[5529]	MOVE     	R44 R40 ; R44 := R40
	318	[5529]	CALL     	R42 3 1 ; R42(R43,R44)
	319	[5531]	GETGLOBAL	R42 K9 ; R42 := mRadialSolarMap
	320	[5531]	SELF     	R42 R42 K56 ; R43 := R42; R42 := R42[0x3b2960bd]
	321	[5531]	GETUPVAL 	R44 U2 ; R44 := U2
	322	[5531]	GETTABLE 	R44 R44 K53 ; R44 := R44["mEditingEdge"]
	323	[5531]	GETTABLE 	R44 R44 K39 ; R44 := R44["NodeA"]
	324	[5531]	GETTABLE 	R44 R44 K18 ; R44 := R44["radialSector"]
	325	[5531]	GETUPVAL 	R45 U2 ; R45 := U2
	326	[5531]	GETTABLE 	R45 R45 K53 ; R45 := R45["mEditingEdge"]
	327	[5531]	GETTABLE 	R45 R45 K40 ; R45 := R45["NodeB"]
	328	[5531]	GETTABLE 	R45 R45 K18 ; R45 := R45["radialSector"]
	329	[5531]	GETUPVAL 	R46 U2 ; R46 := U2
	330	[5531]	GETTABLE 	R46 R46 K53 ; R46 := R46["mEditingEdge"]
	331	[5531]	GETTABLE 	R46 R46 K45 ; R46 := R46["controlPointA"]
	332	[5531]	GETTABLE 	R46 R46 K15 ; R46 := R46["position"]
	333	[5531]	GETUPVAL 	R47 U2 ; R47 := U2
	334	[5531]	GETTABLE 	R47 R47 K53 ; R47 := R47["mEditingEdge"]
	335	[5531]	GETTABLE 	R47 R47 K46 ; R47 := R47["controlPointB"]
	336	[5531]	GETTABLE 	R47 R47 K15 ; R47 := R47["position"]
	337	[5531]	CALL     	R42 6 1 ; R42(R43,R44,R45,R46,R47)
	338	[5535]	GETUPVAL 	R42 U0 ; R42 := U0
	339	[5535]	GETUPVAL 	R43 U1 ; R43 := U1
	340	[5535]	GETTABLE 	R43 R43 K57 ; R43 := R43["EDIT_NODE_DECOS"]
	341	[5535]	EQ       	0 R42 R43 ; if R42 ~= R43 then PC := 552
	342	[5535]	JMP      	552 ; PC := 552
	343	[5535]	GETGLOBAL	R42 K1 ; R42 := 0x7b998233
	344	[5535]	GETUPVAL 	R43 U2 ; R43 := U2
	345	[5535]	GETTABLE 	R43 R43 K25 ; R43 := R43["mMovingNode"]
	346	[5535]	CALL     	R42 2 2 ; R42 := R42(R43)
	347	[5535]	TEST     	R42 1 ; if R42 then PC := 552
	348	[5535]	JMP      	552 ; PC := 552
	349	[5536]	GETUPVAL 	R42 U2 ; R42 := U2
	350	[5536]	GETTABLE 	R42 R42 K58 ; R42 := R42["mEditingOffset"]
	351	[5536]	TEST     	R42 0 ; if not R42 then PC := 383
	352	[5536]	JMP      	383 ; PC := 383
	353	[5537]	GETUPVAL 	R42 U3 ; R42 := U3
	354	[5537]	CALL     	R42 1 2 ; R42 := R42()
	355	[5538]	GETUPVAL 	R43 U2 ; R43 := U2
	356	[5538]	GETTABLE 	R43 R43 K3 ; R43 := R43["mInitialWorldCursor"]
	357	[5538]	SUB      	R43 R42 R43 ; R43 := R42 - R43
	358	[5539]	GETUPVAL 	R44 U2 ; R44 := U2
	359	[5539]	GETTABLE 	R44 R44 K4 ; R44 := R44["mInitialPosition"]
	360	[5539]	ADD      	R44 R44 R43 ; R44 := R44 + R43
	361	[5541]	GETUPVAL 	R45 U2 ; R45 := U2
	362	[5541]	GETTABLE 	R45 R45 K25 ; R45 := R45["mMovingNode"]
	363	[5541]	GETTABLE 	R45 R45 K19 ; R45 := R45["deco"]
	364	[5541]	SETTABLE 	R45 K22 R44 ; R45["mOffset"] := R44
	365	[5542]	GETUPVAL 	R45 U2 ; R45 := U2
	366	[5542]	GETTABLE 	R45 R45 K25 ; R45 := R45["mMovingNode"]
	367	[5542]	GETTABLE 	R45 R45 K19 ; R45 := R45["deco"]
	368	[5542]	GETTABLE 	R45 R45 K21 ; R45 := R45["mInstance"]
	369	[5542]	SELF     	R45 R45 K8 ; R46 := R45; R45 := R45[0x9307aa51]
	370	[5542]	GETUPVAL 	R47 U2 ; R47 := U2
	371	[5542]	GETTABLE 	R47 R47 K25 ; R47 := R47["mMovingNode"]
	372	[5542]	GETTABLE 	R47 R47 K15 ; R47 := R47["position"]
	373	[5542]	ADD      	R47 R47 R44 ; R47 := R47 + R44
	374	[5542]	CALL     	R45 3 1 ; R45(R46,R47)
	375	[5543]	GETGLOBAL	R45 K9 ; R45 := mRadialSolarMap
	376	[5543]	SELF     	R45 R45 K59 ; R46 := R45; R45 := R45[0xe754ade0]
	377	[5543]	GETUPVAL 	R47 U2 ; R47 := U2
	378	[5543]	GETTABLE 	R47 R47 K25 ; R47 := R47["mMovingNode"]
	379	[5543]	GETTABLE 	R47 R47 K18 ; R47 := R47["radialSector"]
	380	[5543]	MOVE     	R48 R44 ; R48 := R44
	381	[5543]	CALL     	R45 4 1 ; R45(R46,R47,R48)
	382	[5543]	JMP      	548 ; PC := 548
	383	[5544]	GETUPVAL 	R45 U2 ; R45 := U2
	384	[5544]	GETTABLE 	R45 R45 K60 ; R45 := R45["mEditingRotation"]
	385	[5544]	TEST     	R45 0 ; if not R45 then PC := 474
	386	[5544]	JMP      	474 ; PC := 474
	387	[5545]	GETUPVAL 	R45 U9 ; R45 := U9
	388	[5545]	GETTABLE 	R45 R45 K30 ; R45 := R45[0xfa9785e4]
	389	[5545]	GETGLOBAL	R46 K31 ; R46 := 0xae91e43b
	390	[5545]	CALL     	R45 2 2 ; R45 := R45(R46)
	391	[5546]	GETTABLE 	R46 R45 K47 ; R46 := R45["x"]
	392	[5546]	GETUPVAL 	R47 U2 ; R47 := U2
	393	[5546]	GETTABLE 	R47 R47 K33 ; R47 := R47["mInitialMousePosition"]
	394	[5546]	GETTABLE 	R47 R47 K47 ; R47 := R47["x"]
	395	[5546]	SUB      	R46 R46 R47 ; R46 := R46 - R47
	396	[5547]	GETTABLE 	R47 R45 K32 ; R47 := R45["y"]
	397	[5547]	GETUPVAL 	R48 U2 ; R48 := U2
	398	[5547]	GETTABLE 	R48 R48 K33 ; R48 := R48["mInitialMousePosition"]
	399	[5547]	GETTABLE 	R48 R48 K32 ; R48 := R48["y"]
	400	[5547]	SUB      	R47 R47 R48 ; R47 := R47 - R48
	401	[5548]	LOADNIL  	R48 R48 ; R48 := nil
	402	[5549]	GETUPVAL 	R49 U2 ; R49 := U2
	403	[5549]	GETTABLE 	R49 R49 K61 ; R49 := R49["mRotationAxis"]
	404	[5549]	EQ       	0 R49 K62 ; if R49 ~= "heading" then PC := 420
	405	[5549]	JMP      	420 ; PC := 420
	406	[5550]	GETGLOBAL	R49 K63 ; R49 := 0x00046924
	407	[5550]	GETUPVAL 	R50 U2 ; R50 := U2
	408	[5550]	GETTABLE 	R50 R50 K64 ; R50 := R50["mInitialRotation"]
	409	[5550]	GETTABLE 	R50 R50 K62 ; R50 := R50["heading"]
	410	[5550]	ADD      	R50 R50 R46 ; R50 := R50 + R46
	411	[5550]	GETUPVAL 	R51 U2 ; R51 := U2
	412	[5550]	GETTABLE 	R51 R51 K64 ; R51 := R51["mInitialRotation"]
	413	[5550]	GETTABLE 	R51 R51 K65 ; R51 := R51["pitch"]
	414	[5550]	GETUPVAL 	R52 U2 ; R52 := U2
	415	[5550]	GETTABLE 	R52 R52 K64 ; R52 := R52["mInitialRotation"]
	416	[5550]	GETTABLE 	R52 R52 K66 ; R52 := R52["bank"]
	417	[5550]	CALL     	R49 4 2 ; R49 := R49(R50,R51,R52)
	418	[5550]	MOVE     	R48 R49 ; R48 := R49
	419	[5550]	JMP      	455 ; PC := 455
	420	[5551]	GETUPVAL 	R49 U2 ; R49 := U2
	421	[5551]	GETTABLE 	R49 R49 K61 ; R49 := R49["mRotationAxis"]
	422	[5551]	EQ       	0 R49 K65 ; if R49 ~= "pitch" then PC := 438
	423	[5551]	JMP      	438 ; PC := 438
	424	[5552]	GETGLOBAL	R49 K63 ; R49 := 0x00046924
	425	[5552]	GETUPVAL 	R50 U2 ; R50 := U2
	426	[5552]	GETTABLE 	R50 R50 K64 ; R50 := R50["mInitialRotation"]
	427	[5552]	GETTABLE 	R50 R50 K62 ; R50 := R50["heading"]
	428	[5552]	GETUPVAL 	R51 U2 ; R51 := U2
	429	[5552]	GETTABLE 	R51 R51 K64 ; R51 := R51["mInitialRotation"]
	430	[5552]	GETTABLE 	R51 R51 K65 ; R51 := R51["pitch"]
	431	[5552]	ADD      	R51 R51 R47 ; R51 := R51 + R47
	432	[5552]	GETUPVAL 	R52 U2 ; R52 := U2
	433	[5552]	GETTABLE 	R52 R52 K64 ; R52 := R52["mInitialRotation"]
	434	[5552]	GETTABLE 	R52 R52 K66 ; R52 := R52["bank"]
	435	[5552]	CALL     	R49 4 2 ; R49 := R49(R50,R51,R52)
	436	[5552]	MOVE     	R48 R49 ; R48 := R49
	437	[5552]	JMP      	455 ; PC := 455
	438	[5553]	GETUPVAL 	R49 U2 ; R49 := U2
	439	[5553]	GETTABLE 	R49 R49 K61 ; R49 := R49["mRotationAxis"]
	440	[5553]	EQ       	0 R49 K66 ; if R49 ~= "bank" then PC := 455
	441	[5553]	JMP      	455 ; PC := 455
	442	[5554]	GETGLOBAL	R49 K63 ; R49 := 0x00046924
	443	[5554]	GETUPVAL 	R50 U2 ; R50 := U2
	444	[5554]	GETTABLE 	R50 R50 K64 ; R50 := R50["mInitialRotation"]
	445	[5554]	GETTABLE 	R50 R50 K62 ; R50 := R50["heading"]
	446	[5554]	GETUPVAL 	R51 U2 ; R51 := U2
	447	[5554]	GETTABLE 	R51 R51 K64 ; R51 := R51["mInitialRotation"]
	448	[5554]	GETTABLE 	R51 R51 K65 ; R51 := R51["pitch"]
	449	[5554]	GETUPVAL 	R52 U2 ; R52 := U2
	450	[5554]	GETTABLE 	R52 R52 K64 ; R52 := R52["mInitialRotation"]
	451	[5554]	GETTABLE 	R52 R52 K66 ; R52 := R52["bank"]
	452	[5554]	ADD      	R52 R52 R46 ; R52 := R52 + R46
	453	[5554]	CALL     	R49 4 2 ; R49 := R49(R50,R51,R52)
	454	[5554]	MOVE     	R48 R49 ; R48 := R49
	455	[5557]	GETUPVAL 	R49 U2 ; R49 := U2
	456	[5557]	GETTABLE 	R49 R49 K25 ; R49 := R49["mMovingNode"]
	457	[5557]	GETTABLE 	R49 R49 K19 ; R49 := R49["deco"]
	458	[5557]	SETTABLE 	R49 K67 R48 ; R49["mRotation"] := R48
	459	[5558]	GETUPVAL 	R49 U2 ; R49 := U2
	460	[5558]	GETTABLE 	R49 R49 K25 ; R49 := R49["mMovingNode"]
	461	[5558]	GETTABLE 	R49 R49 K19 ; R49 := R49["deco"]
	462	[5558]	GETTABLE 	R49 R49 K21 ; R49 := R49["mInstance"]
	463	[5558]	SELF     	R49 R49 K68 ; R50 := R49; R49 := R49[0x70b8836c]
	464	[5558]	MOVE     	R51 R48 ; R51 := R48
	465	[5558]	CALL     	R49 3 1 ; R49(R50,R51)
	466	[5559]	GETGLOBAL	R49 K9 ; R49 := mRadialSolarMap
	467	[5559]	SELF     	R49 R49 K69 ; R50 := R49; R49 := R49[0x8929c50d]
	468	[5559]	GETUPVAL 	R51 U2 ; R51 := U2
	469	[5559]	GETTABLE 	R51 R51 K25 ; R51 := R51["mMovingNode"]
	470	[5559]	GETTABLE 	R51 R51 K18 ; R51 := R51["radialSector"]
	471	[5559]	MOVE     	R52 R48 ; R52 := R48
	472	[5559]	CALL     	R49 4 1 ; R49(R50,R51,R52)
	473	[5559]	JMP      	548 ; PC := 548
	474	[5560]	GETUPVAL 	R49 U2 ; R49 := U2
	475	[5560]	GETTABLE 	R49 R49 K70 ; R49 := R49["mEditingScale"]
	476	[5560]	TEST     	R49 0 ; if not R49 then PC := 548
	477	[5560]	JMP      	548 ; PC := 548
	478	[5561]	GETUPVAL 	R49 U9 ; R49 := U9
	479	[5561]	GETTABLE 	R49 R49 K30 ; R49 := R49[0xfa9785e4]
	480	[5561]	GETGLOBAL	R50 K31 ; R50 := 0xae91e43b
	481	[5561]	CALL     	R49 2 2 ; R49 := R49(R50)
	482	[5562]	GETGLOBAL	R50 K71 ; R50 := 0x03ea2485
	483	[5562]	MOVE     	R51 R49 ; R51 := R49
	484	[5562]	GETUPVAL 	R52 U2 ; R52 := U2
	485	[5562]	GETTABLE 	R52 R52 K33 ; R52 := R52["mInitialMousePosition"]
	486	[5562]	CALL     	R50 3 2 ; R50 := R50(R51,R52)
	487	[5563]	GETTABLE 	R51 R49 K32 ; R51 := R49["y"]
	488	[5563]	GETUPVAL 	R52 U2 ; R52 := U2
	489	[5563]	GETTABLE 	R52 R52 K33 ; R52 := R52["mInitialMousePosition"]
	490	[5563]	GETTABLE 	R52 R52 K32 ; R52 := R52["y"]
	491	[5563]	LT       	1 R52 R51 ; if R52 < R51 then PC := 494
	492	[5563]	JMP      	494 ; PC := 494
	493	[5563]	OP_LOADBOOL	R51 0 1 ; R51 := false; PC := 494
	494	[5563]	OP_LOADBOOL	R51 1 0 ; R51 := true
	495	[5564]	DIV      	R52 R50 K72 ; R52 := R50 / 200.000000
	496	[5564]	GETUPVAL 	R53 U9 ; R53 := U9
	497	[5564]	GETTABLE 	R53 R53 K73 ; R53 := R53[0x06d055f9]
	498	[5564]	MOVE     	R54 R51 ; R54 := R51
	499	[5564]	LOADK    	R55 := 1.000000
	500	[5564]	LOADK    	R56 := -1.000000
	501	[5564]	CALL     	R53 4 2 ; R53 := R53(R54,R55,R56)
	502	[5564]	MUL      	R52 R52 R53 ; R52 := R52 * R53
	503	[5565]	GETGLOBAL	R53 K74 ; R53 := 0x42dcc9f5
	504	[5565]	GETUPVAL 	R54 U2 ; R54 := U2
	505	[5565]	GETTABLE 	R54 R54 K75 ; R54 := R54["mInitialScale"]
	506	[5565]	SUB      	R55 K76 R52 ; R55 := 1.000000 - R52
	507	[5565]	MUL      	R54 R54 R55 ; R54 := R54 * R55
	508	[5565]	LOADK    	R55 K77 ; R55 := 0.000010
	509	[5565]	LOADK    	R56 := 10.000000
	510	[5565]	CALL     	R53 4 2 ; R53 := R53(R54,R55,R56)
	511	[5567]	GETUPVAL 	R54 U2 ; R54 := U2
	512	[5567]	GETTABLE 	R54 R54 K25 ; R54 := R54["mMovingNode"]
	513	[5567]	GETTABLE 	R54 R54 K19 ; R54 := R54["deco"]
	514	[5567]	SETTABLE 	R54 K78 R53 ; R54["mScale"] := R53
	515	[5568]	GETUPVAL 	R54 U2 ; R54 := U2
	516	[5568]	GETTABLE 	R54 R54 K25 ; R54 := R54["mMovingNode"]
	517	[5568]	GETTABLE 	R54 R54 K19 ; R54 := R54["deco"]
	518	[5568]	GETTABLE 	R54 R54 K21 ; R54 := R54["mInstance"]
	519	[5568]	SELF     	R54 R54 K79 ; R55 := R54; R54 := R54[0x2d9ba74f]
	520	[5568]	GETUPVAL 	R56 U12 ; R56 := U12
	521	[5568]	GETTABLE 	R56 R56 K80 ; R56 := R56["DECO_SCALE_MULTIPLIER"]
	522	[5568]	MUL      	R56 R53 R56 ; R56 := R53 * R56
	523	[5568]	OP_LOADBOOL	R57 1 0 ; R57 := true
	524	[5568]	CALL     	R54 4 1 ; R54(R55,R56,R57)
	525	[5569]	GETGLOBAL	R54 K9 ; R54 := mRadialSolarMap
	526	[5569]	SELF     	R54 R54 K81 ; R55 := R54; R54 := R54[0x50f6b4e4]
	527	[5569]	GETUPVAL 	R56 U2 ; R56 := U2
	528	[5569]	GETTABLE 	R56 R56 K25 ; R56 := R56["mMovingNode"]
	529	[5569]	GETTABLE 	R56 R56 K18 ; R56 := R56["radialSector"]
	530	[5569]	MOVE     	R57 R53 ; R57 := R53
	531	[5569]	CALL     	R54 4 1 ; R54(R55,R56,R57)
	532	[5570]	GETUPVAL 	R54 U2 ; R54 := U2
	533	[5570]	GETTABLE 	R54 R54 K25 ; R54 := R54["mMovingNode"]
	534	[5570]	GETTABLE 	R54 R54 K19 ; R54 := R54["deco"]
	535	[5570]	GETTABLE 	R54 R54 K21 ; R54 := R54["mInstance"]
	536	[5570]	SELF     	R54 R54 K82 ; R55 := R54; R54 := R54[0x905bb2bd]
	537	[5570]	CALL     	R54 2 2 ; R54 := R54(R55)
	538	[5572]	LOADK    	R55 := 1.000000
	539	[5572]	LEN      	R56 R54 ; R56 := # R54
	540	[5572]	LOADK    	R57 := 1.000000
	541	[5572]	FORPREP  	R55 547 ; R55 -= R57; PC := 547
	542	[5573]	GETTABLE 	R59 R54 R58 ; R59 := R54[R58]
	543	[5573]	SELF     	R59 R59 K79 ; R60 := R59; R59 := R59[0x2d9ba74f]
	544	[5573]	LOADK    	R61 := 1.000000
	545	[5573]	OP_LOADBOOL	R62 1 0 ; R62 := true
	546	[5573]	CALL     	R59 4 1 ; R59(R60,R61,R62)
	547	[5572]	FORLOOP  	R55 542 ; R55 += R57; if R55 <= R56 then begin PC := 542; R58 := R55 end
	548	[5576]	GETUPVAL 	R59 U10 ; R59 := U10
	549	[5576]	GETUPVAL 	R60 U2 ; R60 := U2
	550	[5576]	GETTABLE 	R60 R60 K25 ; R60 := R60["mMovingNode"]
	551	[5576]	CALL     	R59 2 1 ; R59(R60)
	552	[5579]	GETGLOBAL	R59 K83 ; R59 := mDrag
	553	[5579]	TEST     	R59 1 ; if R59 then PC := 556
	554	[5579]	JMP      	556 ; PC := 556
	555	[5580]	RETURN   	R0 1 ; return 
	556	[5583]	GETGLOBAL	R59 K84 ; R59 := _T
	557	[5583]	GETTABLE 	R59 R59 K85 ; R59 := R59["MouseInWorldStateWindow"]
	558	[5583]	TEST     	R59 1 ; if R59 then PC := 564
	559	[5583]	JMP      	564 ; PC := 564
	560	[5583]	GETGLOBAL	R59 K84 ; R59 := _T
	561	[5583]	GETTABLE 	R59 R59 K86 ; R59 := R59["MouseInChatArea"]
	562	[5583]	TEST     	R59 0 ; if not R59 then PC := 571
	563	[5583]	JMP      	571 ; PC := 571
	564	[5584]	GETGLOBAL	R59 K83 ; R59 := mDrag
	565	[5584]	GETTABLE 	R59 R59 K87 ; R59 := R59["mDragging"]
	566	[5584]	TEST     	R59 0 ; if not R59 then PC := 571
	567	[5584]	JMP      	571 ; PC := 571
	568	[5585]	GETGLOBAL	R59 K83 ; R59 := mDrag
	569	[5585]	SELF     	R59 R59 K88 ; R60 := R59; R59 := R59[0xcc5f3150]
	570	[5585]	CALL     	R59 2 1 ; R59(R60)
	571	[5589]	GETGLOBAL	R59 K89 ; R59 := 0x67652851
	572	[5589]	CALL     	R59 1 2 ; R59 := R59()
	573	[5590]	GETGLOBAL	R60 K83 ; R60 := mDrag
	574	[5590]	SELF     	R60 R60 K90 ; R61 := R60; R60 := R60[0xfaa69527]
	575	[5590]	MOVE     	R62 R59 ; R62 := R59
	576	[5590]	CALL     	R60 3 1 ; R60(R61,R62)
	577	[5592]	GETGLOBAL	R60 K83 ; R60 := mDrag
	578	[5592]	GETTABLE 	R60 R60 K91 ; R60 := R60["mCurrentScroll"]
	579	[5592]	GETTABLE 	R60 R60 K47 ; R60 := R60["x"]
	580	[5593]	GETGLOBAL	R61 K83 ; R61 := mDrag
	581	[5593]	GETTABLE 	R61 R61 K91 ; R61 := R61["mCurrentScroll"]
	582	[5593]	GETTABLE 	R61 R61 K32 ; R61 := R61["y"]
	583	[5595]	GETGLOBAL	R62 K92 ; R62 := mRailJack
	584	[5595]	GETTABLE 	R62 R62 K93 ; R62 := R62["Active"]
	585	[5595]	TEST     	R62 0 ; if not R62 then PC := 632
	586	[5595]	JMP      	632 ; PC := 632
	587	[5596]	GETUPVAL 	R62 U9 ; R62 := U9
	588	[5596]	GETTABLE 	R62 R62 K94 ; R62 := R62[0x44537adf]
	589	[5596]	GETGLOBAL	R63 K31 ; R63 := 0xae91e43b
	590	[5596]	CALL     	R62 2 3 ; R62,R63 := R62(R63)
	591	[5598]	GETGLOBAL	R64 K74 ; R64 := 0x42dcc9f5
	592	[5598]	GETGLOBAL	R65 K31 ; R65 := 0xae91e43b
	593	[5598]	SELF     	R65 R65 K95 ; R66 := R65; R65 := R65[0x906faf80]
	594	[5598]	CALL     	R65 2 2 ; R65 := R65(R66)
	595	[5598]	LOADK    	R66 := 0.000000
	596	[5598]	MOVE     	R67 R62 ; R67 := R62
	597	[5598]	CALL     	R64 4 2 ; R64 := R64(R65,R66,R67)
	598	[5598]	DIV      	R65 R62 K96 ; R65 := R62 / 2.000000
	599	[5598]	SUB      	R64 R64 R65 ; R64 := R64 - R65
	600	[5599]	GETGLOBAL	R65 K74 ; R65 := 0x42dcc9f5
	601	[5599]	GETGLOBAL	R66 K31 ; R66 := 0xae91e43b
	602	[5599]	SELF     	R66 R66 K97 ; R67 := R66; R66 := R66[0x916fb113]
	603	[5599]	CALL     	R66 2 2 ; R66 := R66(R67)
	604	[5599]	LOADK    	R67 := 0.000000
	605	[5599]	MOVE     	R68 R63 ; R68 := R63
	606	[5599]	CALL     	R65 4 2 ; R65 := R65(R66,R67,R68)
	607	[5599]	DIV      	R66 R63 K96 ; R66 := R63 / 2.000000
	608	[5599]	SUB      	R65 R65 R66 ; R65 := R65 - R66
	609	[5600]	GETGLOBAL	R66 K74 ; R66 := 0x42dcc9f5
	610	[5600]	DIV      	R67 R64 R62 ; R67 := R64 / R62
	611	[5600]	LOADK    	R68 := -1.000000
	612	[5600]	LOADK    	R69 := 1.000000
	613	[5600]	CALL     	R66 4 2 ; R66 := R66(R67,R68,R69)
	614	[5600]	UNM      	R64 R66 ; R64 := ^ R66
	615	[5601]	GETGLOBAL	R66 K74 ; R66 := 0x42dcc9f5
	616	[5601]	DIV      	R67 R65 R63 ; R67 := R65 / R63
	617	[5601]	LOADK    	R68 := -1.000000
	618	[5601]	LOADK    	R69 := 1.000000
	619	[5601]	CALL     	R66 4 2 ; R66 := R66(R67,R68,R69)
	620	[5601]	UNM      	R65 R66 ; R65 := ^ R66
	621	[5603]	GETGLOBAL	R66 K98 ; R66 := mSmoothX
	622	[5603]	SELF     	R66 R66 K99 ; R67 := R66; R66 := R66[0x188e2bee]
	623	[5603]	MUL      	R68 R64 K100 ; R68 := R64 * -0.004000
	624	[5603]	ADD      	R68 R60 R68 ; R68 := R60 + R68
	625	[5603]	CALL     	R66 3 1 ; R66(R67,R68)
	626	[5604]	GETGLOBAL	R66 K101 ; R66 := mSmoothY
	627	[5604]	SELF     	R66 R66 K99 ; R67 := R66; R66 := R66[0x188e2bee]
	628	[5604]	MUL      	R68 R65 K102 ; R68 := R65 * -0.003000
	629	[5604]	ADD      	R68 R61 R68 ; R68 := R61 + R68
	630	[5604]	CALL     	R66 3 1 ; R66(R67,R68)
	631	[5604]	JMP      	640 ; PC := 640
	632	[5606]	GETGLOBAL	R66 K98 ; R66 := mSmoothX
	633	[5606]	SELF     	R66 R66 K99 ; R67 := R66; R66 := R66[0x188e2bee]
	634	[5606]	MOVE     	R68 R60 ; R68 := R60
	635	[5606]	CALL     	R66 3 1 ; R66(R67,R68)
	636	[5607]	GETGLOBAL	R66 K101 ; R66 := mSmoothY
	637	[5607]	SELF     	R66 R66 K99 ; R67 := R66; R66 := R66[0x188e2bee]
	638	[5607]	MOVE     	R68 R61 ; R68 := R61
	639	[5607]	CALL     	R66 3 1 ; R66(R67,R68)
	640	[5609]	GETGLOBAL	R66 K98 ; R66 := mSmoothX
	641	[5609]	GETTABLE 	R66 R66 K103 ; R66 := R66["mCurVal"]
	642	[5610]	GETGLOBAL	R67 K101 ; R67 := mSmoothY
	643	[5610]	GETTABLE 	R67 R67 K103 ; R67 := R67["mCurVal"]
	644	[5611]	GETGLOBAL	R68 K98 ; R68 := mSmoothX
	645	[5611]	SELF     	R68 R68 K90 ; R69 := R68; R68 := R68[0xfaa69527]
	646	[5611]	MOVE     	R70 R59 ; R70 := R59
	647	[5611]	CALL     	R68 3 1 ; R68(R69,R70)
	648	[5612]	GETGLOBAL	R68 K101 ; R68 := mSmoothY
	649	[5612]	SELF     	R68 R68 K90 ; R69 := R68; R68 := R68[0xfaa69527]
	650	[5612]	MOVE     	R70 R59 ; R70 := R59
	651	[5612]	CALL     	R68 3 1 ; R68(R69,R70)
	652	[5614]	GETGLOBAL	R68 K104 ; R68 := 0x5bced4c4
	653	[5614]	GETTABLE 	R68 R68 K105 ; R68 := R68[0xe4a5b3ca]
	654	[5614]	GETGLOBAL	R69 K98 ; R69 := mSmoothX
	655	[5614]	GETTABLE 	R69 R69 K106 ; R69 := R69["mTargetVal"]
	656	[5614]	SUB      	R69 R66 R69 ; R69 := R66 - R69
	657	[5614]	CALL     	R68 2 2 ; R68 := R68(R69)
	658	[5614]	LT       	1 K107 R68 ; if 0.000005 < R68 then PC := 661
	659	[5614]	JMP      	661 ; PC := 661
	660	[5614]	OP_LOADBOOL	R68 0 1 ; R68 := false; PC := 661
	661	[5614]	OP_LOADBOOL	R68 1 0 ; R68 := true
	662	[5615]	TEST     	R68 1 ; if R68 then PC := 675
	663	[5615]	JMP      	675 ; PC := 675
	664	[5615]	GETGLOBAL	R69 K98 ; R69 := mSmoothX
	665	[5615]	GETTABLE 	R69 R69 K103 ; R69 := R69["mCurVal"]
	666	[5615]	GETGLOBAL	R70 K98 ; R70 := mSmoothX
	667	[5615]	GETTABLE 	R70 R70 K106 ; R70 := R70["mTargetVal"]
	668	[5615]	EQ       	1 R69 R70 ; if R69 == R70 then PC := 675
	669	[5615]	JMP      	675 ; PC := 675
	670	[5616]	GETGLOBAL	R69 K98 ; R69 := mSmoothX
	671	[5616]	SELF     	R69 R69 K108 ; R70 := R69; R69 := R69[0xd0f998cd]
	672	[5616]	GETGLOBAL	R71 K98 ; R71 := mSmoothX
	673	[5616]	GETTABLE 	R71 R71 K106 ; R71 := R71["mTargetVal"]
	674	[5616]	CALL     	R69 3 1 ; R69(R70,R71)
	675	[5618]	GETGLOBAL	R69 K104 ; R69 := 0x5bced4c4
	676	[5618]	GETTABLE 	R69 R69 K105 ; R69 := R69[0xe4a5b3ca]
	677	[5618]	GETGLOBAL	R70 K101 ; R70 := mSmoothY
	678	[5618]	GETTABLE 	R70 R70 K106 ; R70 := R70["mTargetVal"]
	679	[5618]	SUB      	R70 R67 R70 ; R70 := R67 - R70
	680	[5618]	CALL     	R69 2 2 ; R69 := R69(R70)
	681	[5618]	LT       	1 K107 R69 ; if 0.000005 < R69 then PC := 684
	682	[5618]	JMP      	684 ; PC := 684
	683	[5618]	OP_LOADBOOL	R69 0 1 ; R69 := false; PC := 684
	684	[5618]	OP_LOADBOOL	R69 1 0 ; R69 := true
	685	[5619]	TEST     	R69 1 ; if R69 then PC := 698
	686	[5619]	JMP      	698 ; PC := 698
	687	[5619]	GETGLOBAL	R70 K101 ; R70 := mSmoothY
	688	[5619]	GETTABLE 	R70 R70 K103 ; R70 := R70["mCurVal"]
	689	[5619]	GETGLOBAL	R71 K101 ; R71 := mSmoothY
	690	[5619]	GETTABLE 	R71 R71 K106 ; R71 := R71["mTargetVal"]
	691	[5619]	EQ       	1 R70 R71 ; if R70 == R71 then PC := 698
	692	[5619]	JMP      	698 ; PC := 698
	693	[5620]	GETGLOBAL	R70 K101 ; R70 := mSmoothY
	694	[5620]	SELF     	R70 R70 K108 ; R71 := R70; R70 := R70[0xd0f998cd]
	695	[5620]	GETGLOBAL	R72 K101 ; R72 := mSmoothY
	696	[5620]	GETTABLE 	R72 R72 K106 ; R72 := R72["mTargetVal"]
	697	[5620]	CALL     	R70 3 1 ; R70(R71,R72)
	698	[5623]	GETGLOBAL	R70 K109 ; R70 := mSmoothZoom
	699	[5623]	GETTABLE 	R70 R70 K103 ; R70 := R70["mCurVal"]
	700	[5624]	GETGLOBAL	R71 K109 ; R71 := mSmoothZoom
	701	[5624]	SELF     	R71 R71 K90 ; R72 := R71; R71 := R71[0xfaa69527]
	702	[5624]	MOVE     	R73 R59 ; R73 := R59
	703	[5624]	CALL     	R71 3 1 ; R71(R72,R73)
	704	[5625]	GETGLOBAL	R71 K104 ; R71 := 0x5bced4c4
	705	[5625]	GETTABLE 	R71 R71 K105 ; R71 := R71[0xe4a5b3ca]
	706	[5625]	GETGLOBAL	R72 K109 ; R72 := mSmoothZoom
	707	[5625]	GETTABLE 	R72 R72 K106 ; R72 := R72["mTargetVal"]
	708	[5625]	SUB      	R72 R70 R72 ; R72 := R70 - R72
	709	[5625]	CALL     	R71 2 2 ; R71 := R71(R72)
	710	[5625]	LT       	1 K110 R71 ; if 0.010000 < R71 then PC := 713
	711	[5625]	JMP      	713 ; PC := 713
	712	[5625]	OP_LOADBOOL	R71 0 1 ; R71 := false; PC := 713
	713	[5625]	OP_LOADBOOL	R71 1 0 ; R71 := true
	714	[5626]	TEST     	R71 1 ; if R71 then PC := 727
	715	[5626]	JMP      	727 ; PC := 727
	716	[5626]	GETGLOBAL	R72 K83 ; R72 := mDrag
	717	[5626]	GETTABLE 	R72 R72 K103 ; R72 := R72["mCurVal"]
	718	[5626]	GETGLOBAL	R73 K83 ; R73 := mDrag
	719	[5626]	GETTABLE 	R73 R73 K106 ; R73 := R73["mTargetVal"]
	720	[5626]	EQ       	1 R72 R73 ; if R72 == R73 then PC := 727
	721	[5626]	JMP      	727 ; PC := 727
	722	[5627]	GETGLOBAL	R72 K83 ; R72 := mDrag
	723	[5627]	SELF     	R72 R72 K108 ; R73 := R72; R72 := R72[0xd0f998cd]
	724	[5627]	GETGLOBAL	R74 K83 ; R74 := mDrag
	725	[5627]	GETTABLE 	R74 R74 K106 ; R74 := R74["mTargetVal"]
	726	[5627]	CALL     	R72 3 1 ; R72(R73,R74)
	727	[5629]	GETUPVAL 	R72 U13 ; R72 := U13
	728	[5629]	TEST     	R72 0 ; if not R72 then PC := 736
	729	[5629]	JMP      	736 ; PC := 736
	730	[5629]	TEST     	R71 1 ; if R71 then PC := 736
	731	[5629]	JMP      	736 ; PC := 736
	732	[5630]	GETUPVAL 	R72 U13 ; R72 := U13
	733	[5630]	CALL     	R72 1 1 ; R72()
	734	[5631]	LOADNIL  	R72 R72 ; R72 := nil
	735	[5631]	SETUPVAL 	R72 U13 ; U13 := R72
	736	[5634]	TEST     	R71 0 ; if not R71 then PC := 740
	737	[5634]	JMP      	740 ; PC := 740
	738	[5635]	GETUPVAL 	R72 U14 ; R72 := U14
	739	[5635]	CALL     	R72 1 1 ; R72()
	740	[5638]	GETGLOBAL	R72 K98 ; R72 := mSmoothX
	741	[5638]	SELF     	R72 R72 K111 ; R73 := R72; R72 := R72[0x54ab95f9]
	742	[5638]	CALL     	R72 2 2 ; R72 := R72(R73)
	743	[5638]	MUL      	R72 R72 K96 ; R72 := R72 * 2.000000
	744	[5638]	SUB      	R72 R72 K76 ; R72 := R72 - 1.000000
	745	[5638]	GETGLOBAL	R73 K112 ; R73 := dragScale
	746	[5638]	MUL      	R72 R72 R73 ; R72 := R72 * R73
	747	[5639]	GETGLOBAL	R73 K101 ; R73 := mSmoothY
	748	[5639]	SELF     	R73 R73 K111 ; R74 := R73; R73 := R73[0x54ab95f9]
	749	[5639]	CALL     	R73 2 2 ; R73 := R73(R74)
	750	[5639]	MUL      	R73 R73 K96 ; R73 := R73 * 2.000000
	751	[5639]	SUB      	R73 R73 K76 ; R73 := R73 - 1.000000
	752	[5639]	GETGLOBAL	R74 K112 ; R74 := dragScale
	753	[5639]	UNM      	R74 R74 ; R74 := ^ R74
	754	[5639]	MUL      	R73 R73 R74 ; R73 := R73 * R74
	755	[5641]	GETGLOBAL	R74 K34 ; R74 := 0xa421af95
	756	[5641]	GETUPVAL 	R75 U15 ; R75 := U15
	757	[5641]	GETTABLE 	R75 R75 K113 ; R75 := R75["origFacing"]
	758	[5641]	GETTABLE 	R75 R75 K47 ; R75 := R75["x"]
	759	[5641]	GETUPVAL 	R76 U15 ; R76 := U15
	760	[5641]	GETTABLE 	R76 R76 K113 ; R76 := R76["origFacing"]
	761	[5641]	GETTABLE 	R76 R76 K32 ; R76 := R76["y"]
	762	[5641]	GETUPVAL 	R77 U15 ; R77 := U15
	763	[5641]	GETTABLE 	R77 R77 K113 ; R77 := R77["origFacing"]
	764	[5641]	GETTABLE 	R77 R77 K5 ; R77 := R77["z"]
	765	[5641]	CALL     	R74 4 2 ; R74 := R74(R75,R76,R77)
	766	[5647]	GETGLOBAL	R75 K109 ; R75 := mSmoothZoom
	767	[5647]	SELF     	R75 R75 K111 ; R76 := R75; R75 := R75[0x54ab95f9]
	768	[5647]	CALL     	R75 2 2 ; R75 := R75(R76)
	769	[5647]	MUL      	R75 R74 R75 ; R75 := R74 * R75
	770	[5649]	GETTABLE 	R76 R75 K47 ; R76 := R75["x"]
	771	[5649]	ADD      	R76 R76 R72 ; R76 := R76 + R72
	772	[5649]	SETTABLE 	R75 K47 R76 ; R75["x"] := R76
	773	[5650]	GETTABLE 	R76 R75 K32 ; R76 := R75["y"]
	774	[5650]	ADD      	R76 R76 R73 ; R76 := R76 + R73
	775	[5650]	SETTABLE 	R75 K32 R76 ; R75["y"] := R76
	776	[5666]	LOADK    	R76 K114 ; R76 := -0.200000
	777	[5667]	LOADK    	R77 K115 ; R77 := 0.400000
	778	[5668]	LOADK    	R78 K116 ; R78 := -0.265000
	779	[5669]	GETGLOBAL	R79 K92 ; R79 := mRailJack
	780	[5669]	GETTABLE 	R79 R79 K93 ; R79 := R79["Active"]
	781	[5669]	TEST     	R79 1 ; if R79 then PC := 901
	782	[5669]	JMP      	901 ; PC := 901
	783	[5669]	GETGLOBAL	R79 K117 ; R79 := mPlayerPos
	784	[5669]	GETTABLE 	R79 R79 K118 ; R79 := R79["Region"]
	785	[5669]	GETGLOBAL	R80 K119 ; R80 := mZoomedRegion
	786	[5669]	EQ       	1 R79 R80 ; if R79 == R80 then PC := 901
	787	[5669]	JMP      	901 ; PC := 901
	788	[5669]	GETGLOBAL	R79 K1 ; R79 := 0x7b998233
	789	[5669]	GETUPVAL 	R80 U16 ; R80 := U16
	790	[5669]	CALL     	R79 2 2 ; R79 := R79(R80)
	791	[5669]	TEST     	R79 1 ; if R79 then PC := 901
	792	[5669]	JMP      	901 ; PC := 901
	793	[5669]	GETGLOBAL	R79 K117 ; R79 := mPlayerPos
	794	[5669]	GETTABLE 	R79 R79 K120 ; R79 := R79["Locked"]
	795	[5669]	TEST     	R79 1 ; if R79 then PC := 901
	796	[5669]	JMP      	901 ; PC := 901
	797	[5670]	GETGLOBAL	R79 K117 ; R79 := mPlayerPos
	798	[5670]	GETUPVAL 	R80 U16 ; R80 := U16
	799	[5670]	SELF     	R80 R80 K38 ; R81 := R80; R80 := R80[0xd1586535]
	800	[5670]	CALL     	R80 2 2 ; R80 := R80(R81)
	801	[5670]	SETTABLE 	R79 K121 R80 ; R79["Previous"] := R80
	802	[5671]	GETGLOBAL	R79 K117 ; R79 := mPlayerPos
	803	[5671]	GETGLOBAL	R80 K119 ; R80 := mZoomedRegion
	804	[5671]	SETTABLE 	R79 K118 R80 ; R79["Region"] := R80
	805	[5672]	GETGLOBAL	R79 K1 ; R79 := 0x7b998233
	806	[5672]	GETGLOBAL	R80 K119 ; R80 := mZoomedRegion
	807	[5672]	CALL     	R79 2 2 ; R79 := R79(R80)
	808	[5672]	TEST     	R79 1 ; if R79 then PC := 833
	809	[5672]	JMP      	833 ; PC := 833
	810	[5673]	GETGLOBAL	R79 K119 ; R79 := mZoomedRegion
	811	[5673]	GETTABLE 	R79 R79 K122 ; R79 := R79["pos"]
	812	[5674]	GETTABLE 	R80 R79 K47 ; R80 := R79["x"]
	813	[5674]	LE       	0 K6 R80 ; if 0.000000 > R80 then PC := 822
	814	[5674]	JMP      	822 ; PC := 822
	815	[5675]	GETGLOBAL	R80 K34 ; R80 := 0xa421af95
	816	[5675]	UNM      	R81 R77 ; R81 := ^ R77
	817	[5675]	MOVE     	R82 R78 ; R82 := R78
	818	[5675]	MOVE     	R83 R76 ; R83 := R76
	819	[5675]	CALL     	R80 4 2 ; R80 := R80(R81,R82,R83)
	820	[5675]	MOVE     	R79 R80 ; R79 := R80
	821	[5675]	JMP      	828 ; PC := 828
	822	[5677]	GETGLOBAL	R80 K34 ; R80 := 0xa421af95
	823	[5677]	ADD      	R81 R77 K123 ; R81 := R77 + 0.200000
	824	[5677]	MOVE     	R82 R78 ; R82 := R78
	825	[5677]	MOVE     	R83 R76 ; R83 := R76
	826	[5677]	CALL     	R80 4 2 ; R80 := R80(R81,R82,R83)
	827	[5677]	MOVE     	R79 R80 ; R79 := R80
	828	[5679]	GETGLOBAL	R80 K117 ; R80 := mPlayerPos
	829	[5679]	GETUPVAL 	R81 U17 ; R81 := U17
	830	[5679]	ADD      	R81 R81 R79 ; R81 := R81 + R79
	831	[5679]	SETTABLE 	R80 K124 R81 ; R80["Target"] := R81
	832	[5679]	JMP      	842 ; PC := 842
	833	[5681]	GETGLOBAL	R80 K117 ; R80 := mPlayerPos
	834	[5681]	GETUPVAL 	R81 U17 ; R81 := U17
	835	[5681]	GETGLOBAL	R82 K34 ; R82 := 0xa421af95
	836	[5681]	LOADK    	R83 K49 ; R83 := 0.100000
	837	[5681]	LOADK    	R84 := 0.000000
	838	[5681]	LOADK    	R85 := 4.000000
	839	[5681]	CALL     	R82 4 2 ; R82 := R82(R83,R84,R85)
	840	[5681]	ADD      	R81 R81 R82 ; R81 := R81 + R82
	841	[5681]	SETTABLE 	R80 K124 R81 ; R80["Target"] := R81
	842	[5683]	GETGLOBAL	R80 K117 ; R80 := mPlayerPos
	843	[5683]	GETTABLE 	R80 R80 K125 ; R80 := R80["Prop"]
	844	[5683]	SELF     	R80 R80 K108 ; R81 := R80; R80 := R80[0xd0f998cd]
	845	[5683]	LOADK    	R82 := 0.000000
	846	[5683]	CALL     	R80 3 1 ; R80(R81,R82)
	847	[5684]	GETGLOBAL	R80 K117 ; R80 := mPlayerPos
	848	[5684]	GETTABLE 	R80 R80 K125 ; R80 := R80["Prop"]
	849	[5684]	SELF     	R80 R80 K99 ; R81 := R80; R80 := R80[0x188e2bee]
	850	[5684]	LOADK    	R82 := 1.000000
	851	[5684]	CALL     	R80 3 1 ; R80(R81,R82)
	852	[5686]	GETGLOBAL	R80 K119 ; R80 := mZoomedRegion
	853	[5686]	EQ       	0 R80 K20 ; if R80 ~= nil then PC := 863
	854	[5686]	JMP      	863 ; PC := 863
	855	[5687]	GETUPVAL 	R80 U16 ; R80 := U16
	856	[5687]	SELF     	R80 R80 K126 ; R81 := R80; R80 := R80[0x5d985c7e]
	857	[5687]	GETUPVAL 	R82 U18 ; R82 := U18
	858	[5687]	OP_LOADBOOL	R83 0 0 ; R83 := false
	859	[5687]	OP_LOADBOOL	R84 1 0 ; R84 := true
	860	[5687]	LOADK    	R85 := 1.000000
	861	[5687]	CALL     	R80 6 1 ; R80(R81,R82,R83,R84,R85)
	862	[5687]	JMP      	896 ; PC := 896
	863	[5688]	GETGLOBAL	R80 K109 ; R80 := mSmoothZoom
	864	[5688]	SELF     	R80 R80 K111 ; R81 := R80; R80 := R80[0x54ab95f9]
	865	[5688]	CALL     	R80 2 2 ; R80 := R80(R81)
	866	[5688]	LT       	0 R80 K127 ; if R80 >= -1.000000 then PC := 876
	867	[5688]	JMP      	876 ; PC := 876
	868	[5689]	GETUPVAL 	R80 U16 ; R80 := U16
	869	[5689]	SELF     	R80 R80 K126 ; R81 := R80; R80 := R80[0x5d985c7e]
	870	[5689]	GETUPVAL 	R82 U18 ; R82 := U18
	871	[5689]	OP_LOADBOOL	R83 0 0 ; R83 := false
	872	[5689]	OP_LOADBOOL	R84 1 0 ; R84 := true
	873	[5689]	LOADK    	R85 := 1.000000
	874	[5689]	CALL     	R80 6 1 ; R80(R81,R82,R83,R84,R85)
	875	[5689]	JMP      	896 ; PC := 896
	876	[5690]	GETGLOBAL	R80 K119 ; R80 := mZoomedRegion
	877	[5690]	GETTABLE 	R80 R80 K122 ; R80 := R80["pos"]
	878	[5690]	GETTABLE 	R80 R80 K47 ; R80 := R80["x"]
	879	[5690]	LE       	0 K6 R80 ; if 0.000000 > R80 then PC := 889
	880	[5690]	JMP      	889 ; PC := 889
	881	[5691]	GETUPVAL 	R80 U16 ; R80 := U16
	882	[5691]	SELF     	R80 R80 K126 ; R81 := R80; R80 := R80[0x5d985c7e]
	883	[5691]	GETGLOBAL	R82 K128 ; R82 := 0xe582b0d3
	884	[5691]	OP_LOADBOOL	R83 0 0 ; R83 := false
	885	[5691]	OP_LOADBOOL	R84 1 0 ; R84 := true
	886	[5691]	LOADK    	R85 := 1.000000
	887	[5691]	CALL     	R80 6 1 ; R80(R81,R82,R83,R84,R85)
	888	[5691]	JMP      	896 ; PC := 896
	889	[5693]	GETUPVAL 	R80 U16 ; R80 := U16
	890	[5693]	SELF     	R80 R80 K126 ; R81 := R80; R80 := R80[0x5d985c7e]
	891	[5693]	GETGLOBAL	R82 K129 ; R82 := 0x0cfe7d32
	892	[5693]	OP_LOADBOOL	R83 0 0 ; R83 := false
	893	[5693]	OP_LOADBOOL	R84 1 0 ; R84 := true
	894	[5693]	LOADK    	R85 := 1.000000
	895	[5693]	CALL     	R80 6 1 ; R80(R81,R82,R83,R84,R85)
	896	[5695]	GETGLOBAL	R80 K109 ; R80 := mSmoothZoom
	897	[5695]	SELF     	R80 R80 K111 ; R81 := R80; R80 := R80[0x54ab95f9]
	898	[5695]	CALL     	R80 2 2 ; R80 := R80(R81)
	899	[5695]	SETUPVAL 	R80 U19 ; U19 := R80
	900	[5695]	JMP      	938 ; PC := 938
	901	[5697]	GETUPVAL 	R80 U20 ; R80 := U20
	902	[5697]	CALL     	R80 1 2 ; R80 := R80()
	903	[5697]	TEST     	R80 0 ; if not R80 then PC := 938
	904	[5697]	JMP      	938 ; PC := 938
	905	[5698]	GETGLOBAL	R80 K109 ; R80 := mSmoothZoom
	906	[5698]	SELF     	R80 R80 K111 ; R81 := R80; R80 := R80[0x54ab95f9]
	907	[5698]	CALL     	R80 2 2 ; R80 := R80(R81)
	908	[5698]	LT       	0 R80 K127 ; if R80 >= -1.000000 then PC := 918
	909	[5698]	JMP      	918 ; PC := 918
	910	[5699]	GETUPVAL 	R80 U16 ; R80 := U16
	911	[5699]	SELF     	R80 R80 K126 ; R81 := R80; R80 := R80[0x5d985c7e]
	912	[5699]	GETUPVAL 	R82 U18 ; R82 := U18
	913	[5699]	OP_LOADBOOL	R83 0 0 ; R83 := false
	914	[5699]	OP_LOADBOOL	R84 1 0 ; R84 := true
	915	[5699]	LOADK    	R85 := 1.000000
	916	[5699]	CALL     	R80 6 1 ; R80(R81,R82,R83,R84,R85)
	917	[5699]	JMP      	938 ; PC := 938
	918	[5700]	GETGLOBAL	R80 K119 ; R80 := mZoomedRegion
	919	[5700]	GETTABLE 	R80 R80 K122 ; R80 := R80["pos"]
	920	[5700]	GETTABLE 	R80 R80 K47 ; R80 := R80["x"]
	921	[5700]	LE       	0 K6 R80 ; if 0.000000 > R80 then PC := 931
	922	[5700]	JMP      	931 ; PC := 931
	923	[5701]	GETUPVAL 	R80 U16 ; R80 := U16
	924	[5701]	SELF     	R80 R80 K126 ; R81 := R80; R80 := R80[0x5d985c7e]
	925	[5701]	GETGLOBAL	R82 K128 ; R82 := 0xe582b0d3
	926	[5701]	OP_LOADBOOL	R83 0 0 ; R83 := false
	927	[5701]	OP_LOADBOOL	R84 1 0 ; R84 := true
	928	[5701]	LOADK    	R85 := 1.000000
	929	[5701]	CALL     	R80 6 1 ; R80(R81,R82,R83,R84,R85)
	930	[5701]	JMP      	938 ; PC := 938
	931	[5703]	GETUPVAL 	R80 U16 ; R80 := U16
	932	[5703]	SELF     	R80 R80 K126 ; R81 := R80; R80 := R80[0x5d985c7e]
	933	[5703]	GETGLOBAL	R82 K129 ; R82 := 0x0cfe7d32
	934	[5703]	OP_LOADBOOL	R83 0 0 ; R83 := false
	935	[5703]	OP_LOADBOOL	R84 1 0 ; R84 := true
	936	[5703]	LOADK    	R85 := 1.000000
	937	[5703]	CALL     	R80 6 1 ; R80(R81,R82,R83,R84,R85)
	938	[5709]	GETUPVAL 	R80 U15 ; R80 := U15
	939	[5709]	GETUPVAL 	R81 U15 ; R81 := U15
	940	[5709]	GETTABLE 	R81 R81 K130 ; R81 := R81["originPos"]
	941	[5709]	ADD      	R81 R81 R75 ; R81 := R81 + R75
	942	[5709]	SETTABLE 	R80 K122 R81 ; R80["pos"] := R81
	943	[5712]	GETUPVAL 	R80 U0 ; R80 := U0
	944	[5712]	GETUPVAL 	R81 U1 ; R81 := U1
	945	[5712]	GETTABLE 	R81 R81 K131 ; R81 := R81["EDIT_REGION_FRAMING"]
	946	[5712]	EQ       	0 R80 R81 ; if R80 ~= R81 then PC := 980
	947	[5712]	JMP      	980 ; PC := 980
	948	[5713]	GETGLOBAL	R80 K132 ; R80 := mRegions
	949	[5713]	GETUPVAL 	R81 U2 ; R81 := U2
	950	[5713]	GETTABLE 	R81 R81 K133 ; R81 := R81["mFramingRegion"]
	951	[5713]	GETTABLE 	R80 R80 R81 ; R80 := R80[R81]
	952	[5714]	TEST     	R80 0 ; if not R80 then PC := 980
	953	[5714]	JMP      	980 ; PC := 980
	954	[5714]	GETTABLE 	R81 R80 K134 ; R81 := R80["zoomedFraming"]
	955	[5714]	GETTABLE 	R81 R81 K47 ; R81 := R81["x"]
	956	[5714]	EQ       	0 R81 R60 ; if R81 ~= R60 then PC := 968
	957	[5714]	JMP      	968 ; PC := 968
	958	[5714]	GETTABLE 	R81 R80 K134 ; R81 := R80["zoomedFraming"]
	959	[5714]	GETTABLE 	R81 R81 K32 ; R81 := R81["y"]
	960	[5714]	EQ       	0 R81 R61 ; if R81 ~= R61 then PC := 968
	961	[5714]	JMP      	968 ; PC := 968
	962	[5714]	GETTABLE 	R81 R80 K134 ; R81 := R80["zoomedFraming"]
	963	[5714]	GETTABLE 	R81 R81 K5 ; R81 := R81["z"]
	964	[5714]	GETGLOBAL	R82 K109 ; R82 := mSmoothZoom
	965	[5714]	GETTABLE 	R82 R82 K106 ; R82 := R82["mTargetVal"]
	966	[5714]	EQ       	1 R81 R82 ; if R81 == R82 then PC := 980
	967	[5714]	JMP      	980 ; PC := 980
	968	[5715]	GETGLOBAL	R81 K34 ; R81 := 0xa421af95
	969	[5715]	MOVE     	R82 R60 ; R82 := R60
	970	[5715]	MOVE     	R83 R61 ; R83 := R61
	971	[5715]	GETGLOBAL	R84 K109 ; R84 := mSmoothZoom
	972	[5715]	GETTABLE 	R84 R84 K106 ; R84 := R84["mTargetVal"]
	973	[5715]	CALL     	R81 4 2 ; R81 := R81(R82,R83,R84)
	974	[5715]	SETTABLE 	R80 K134 R81 ; R80["zoomedFraming"] := R81
	975	[5716]	GETGLOBAL	R81 K9 ; R81 := mRadialSolarMap
	976	[5716]	SELF     	R81 R81 K135 ; R82 := R81; R81 := R81[0x3070289c]
	977	[5716]	MOVE     	R83 R80 ; R83 := R80
	978	[5716]	GETTABLE 	R84 R80 K134 ; R84 := R80["zoomedFraming"]
	979	[5716]	CALL     	R81 4 1 ; R81(R82,R83,R84)
	980	[5720]	GETUPVAL 	R81 U7 ; R81 := U7
	981	[5720]	CALL     	R81 1 1 ; R81()
	982	[5722]	GETGLOBAL	R81 K136 ; R81 := mNodeDuck
	983	[5722]	SELF     	R81 R81 K111 ; R82 := R81; R81 := R81[0x54ab95f9]
	984	[5722]	CALL     	R81 2 2 ; R81 := R81(R82)
	985	[5723]	LOADK    	R82 := 1.000000
	986	[5724]	GETGLOBAL	R83 K84 ; R83 := _T
	987	[5724]	GETTABLE 	R83 R83 K137 ; R83 := R83["HideSquadOverlay"]
	988	[5724]	EQ       	1 R83 K20 ; if R83 == nil then PC := 995
	989	[5724]	JMP      	995 ; PC := 995
	990	[5724]	GETGLOBAL	R83 K84 ; R83 := _T
	991	[5724]	GETTABLE 	R83 R83 K137 ; R83 := R83["HideSquadOverlay"]
	992	[5724]	LE       	1 R83 K6 ; if R83 <= 0.000000 then PC := 995
	993	[5724]	JMP      	995 ; PC := 995
	994	[5724]	OP_LOADBOOL	R83 0 1 ; R83 := false; PC := 995
	995	[5724]	OP_LOADBOOL	R83 1 0 ; R83 := true
	996	[5725]	GETGLOBAL	R84 K84 ; R84 := _T
	997	[5725]	GETTABLE 	R84 R84 K138 ; R84 := R84["BackgroundVisible"]
	998	[5725]	TEST     	R84 1 ; if R84 then PC := 1010
	999	[5725]	JMP      	1010 ; PC := 1010
	1000	[5725]	GETGLOBAL	R84 K84 ; R84 := _T
	1001	[5725]	GETTABLE 	R84 R84 K139 ; R84 := R84["HideMapRedux"]
	1002	[5725]	EQ       	1 R84 K20 ; if R84 == nil then PC := 1008
	1003	[5725]	JMP      	1008 ; PC := 1008
	1004	[5725]	GETGLOBAL	R84 K84 ; R84 := _T
	1005	[5725]	GETTABLE 	R84 R84 K139 ; R84 := R84["HideMapRedux"]
	1006	[5725]	LT       	1 K6 R84 ; if 0.000000 < R84 then PC := 1010
	1007	[5725]	JMP      	1010 ; PC := 1010
	1008	[5725]	TEST     	R83 1 ; if R83 then PC := 1012
	1009	[5725]	JMP      	1012 ; PC := 1012
	1010	[5726]	LOADK    	R82 := 0.000000
	1011	[5726]	JMP      	1027 ; PC := 1027
	1012	[5727]	GETGLOBAL	R84 K140 ; R84 := mHover
	1013	[5727]	GETTABLE 	R84 R84 K141 ; R84 := R84["Node"]
	1014	[5727]	EQ       	0 R84 K20 ; if R84 ~= nil then PC := 1020
	1015	[5727]	JMP      	1020 ; PC := 1020
	1016	[5727]	GETGLOBAL	R84 K84 ; R84 := _T
	1017	[5727]	GETTABLE 	R84 R84 K142 ; R84 := R84["gPendingMission"]
	1018	[5727]	EQ       	1 R84 K20 ; if R84 == nil then PC := 1022
	1019	[5727]	JMP      	1022 ; PC := 1022
	1020	[5728]	LOADK    	R82 K123 ; R82 := 0.200000
	1021	[5728]	JMP      	1027 ; PC := 1027
	1022	[5729]	GETGLOBAL	R84 K84 ; R84 := _T
	1023	[5729]	GETTABLE 	R84 R84 K85 ; R84 := R84["MouseInWorldStateWindow"]
	1024	[5729]	TEST     	R84 0 ; if not R84 then PC := 1027
	1025	[5729]	JMP      	1027 ; PC := 1027
	1026	[5730]	LOADK    	R82 K49 ; R82 := 0.100000
	1027	[5732]	GETGLOBAL	R84 K140 ; R84 := mHover
	1028	[5732]	GETTABLE 	R84 R84 K141 ; R84 := R84["Node"]
	1029	[5732]	EQ       	1 R84 K20 ; if R84 == nil then PC := 1041
	1030	[5732]	JMP      	1041 ; PC := 1041
	1031	[5732]	GETGLOBAL	R84 K140 ; R84 := mHover
	1032	[5732]	GETTABLE 	R84 R84 K141 ; R84 := R84["Node"]
	1033	[5732]	GETTABLE 	R84 R84 K143 ; R84 := R84["hideNode"]
	1034	[5732]	TEST     	R84 0 ; if not R84 then PC := 1041
	1035	[5732]	JMP      	1041 ; PC := 1041
	1036	[5733]	GETGLOBAL	R84 K136 ; R84 := mNodeDuck
	1037	[5733]	SELF     	R84 R84 K99 ; R85 := R84; R84 := R84[0x188e2bee]
	1038	[5733]	LOADK    	R86 := 0.000000
	1039	[5733]	CALL     	R84 3 1 ; R84(R85,R86)
	1040	[5733]	JMP      	1045 ; PC := 1045
	1041	[5735]	GETGLOBAL	R84 K136 ; R84 := mNodeDuck
	1042	[5735]	SELF     	R84 R84 K99 ; R85 := R84; R84 := R84[0x188e2bee]
	1043	[5735]	MOVE     	R86 R82 ; R86 := R82
	1044	[5735]	CALL     	R84 3 1 ; R84(R85,R86)
	1045	[5737]	GETGLOBAL	R84 K136 ; R84 := mNodeDuck
	1046	[5737]	SELF     	R84 R84 K90 ; R85 := R84; R84 := R84[0xfaa69527]
	1047	[5737]	MOVE     	R86 R59 ; R86 := R59
	1048	[5737]	CALL     	R84 3 1 ; R84(R85,R86)
	1049	[5738]	GETGLOBAL	R84 K140 ; R84 := mHover
	1050	[5738]	GETTABLE 	R84 R84 K141 ; R84 := R84["Node"]
	1051	[5738]	EQ       	1 R84 K20 ; if R84 == nil then PC := 1057
	1052	[5738]	JMP      	1057 ; PC := 1057
	1053	[5739]	GETGLOBAL	R84 K144 ; R84 := mPreviousNodeDuck
	1054	[5739]	GETGLOBAL	R85 K140 ; R85 := mHover
	1055	[5739]	GETTABLE 	R85 R85 K141 ; R85 := R85["Node"]
	1056	[5739]	SETTABLE 	R84 K141 R85 ; R84["Node"] := R85
	1057	[5741]	GETGLOBAL	R84 K136 ; R84 := mNodeDuck
	1058	[5741]	SELF     	R84 R84 K111 ; R85 := R84; R84 := R84[0x54ab95f9]
	1059	[5741]	CALL     	R84 2 2 ; R84 := R84(R85)
	1060	[5741]	EQ       	1 R81 R84 ; if R81 == R84 then PC := 1075
	1061	[5741]	JMP      	1075 ; PC := 1075
	1062	[5741]	GETGLOBAL	R84 K1 ; R84 := 0x7b998233
	1063	[5741]	GETGLOBAL	R85 K145 ; R85 := 0x469c30de
	1064	[5741]	CALL     	R84 2 2 ; R84 := R84(R85)
	1065	[5741]	TEST     	R84 1 ; if R84 then PC := 1075
	1066	[5741]	JMP      	1075 ; PC := 1075
	1067	[5742]	GETGLOBAL	R84 K145 ; R84 := 0x469c30de
	1068	[5742]	SELF     	R84 R84 K146 ; R85 := R84; R84 := R84[0x830eea67]
	1069	[5742]	GETUPVAL 	R86 U21 ; R86 := U21
	1070	[5742]	GETTABLE 	R86 R86 K147 ; R86 := R86["UNLIT_ATTEN"]
	1071	[5742]	GETGLOBAL	R87 K136 ; R87 := mNodeDuck
	1072	[5742]	SELF     	R87 R87 K111 ; R88 := R87; R87 := R87[0x54ab95f9]
	1073	[5742]	CALL     	R87 2 0 ; R87,... := R87(R88)
	1074	[5742]	CALL     	R84 0 1 ; R84(R85,...)
	1075	[5745]	GETGLOBAL	R84 K148 ; R84 := mRegionConnectionsDuck
	1076	[5745]	SELF     	R84 R84 K99 ; R85 := R84; R84 := R84[0x188e2bee]
	1077	[5745]	GETUPVAL 	R86 U9 ; R86 := U9
	1078	[5745]	GETTABLE 	R86 R86 K73 ; R86 := R86[0x06d055f9]
	1079	[5745]	GETGLOBAL	R87 K140 ; R87 := mHover
	1080	[5745]	GETTABLE 	R87 R87 K118 ; R87 := R87["Region"]
	1081	[5745]	EQ       	0 R87 K20 ; if R87 ~= nil then PC := 1084
	1082	[5745]	JMP      	1084 ; PC := 1084
	1083	[5745]	OP_LOADBOOL	R87 0 1 ; R87 := false; PC := 1084
	1084	[5745]	OP_LOADBOOL	R87 1 0 ; R87 := true
	1085	[5745]	LOADK    	R88 := 1.000000
	1086	[5745]	LOADK    	R89 := 0.000000
	1087	[5745]	CALL     	R86 4 0 ; R86,... := R86(R87,R88,R89)
	1088	[5745]	CALL     	R84 0 1 ; R84(R85,...)
	1089	[5746]	GETGLOBAL	R84 K148 ; R84 := mRegionConnectionsDuck
	1090	[5746]	SELF     	R84 R84 K90 ; R85 := R84; R84 := R84[0xfaa69527]
	1091	[5746]	GETGLOBAL	R86 K89 ; R86 := 0x67652851
	1092	[5746]	CALL     	R86 1 0 ; R86,... := R86()
	1093	[5746]	CALL     	R84 0 1 ; R84(R85,...)
	1094	[5747]	GETGLOBAL	R84 K140 ; R84 := mHover
	1095	[5747]	GETTABLE 	R84 R84 K118 ; R84 := R84["Region"]
	1096	[5747]	EQ       	1 R84 K20 ; if R84 == nil then PC := 1102
	1097	[5747]	JMP      	1102 ; PC := 1102
	1098	[5748]	GETGLOBAL	R84 K149 ; R84 := mPreviousRegionDuck
	1099	[5748]	GETGLOBAL	R85 K140 ; R85 := mHover
	1100	[5748]	GETTABLE 	R85 R85 K118 ; R85 := R85["Region"]
	1101	[5748]	SETTABLE 	R84 K118 R85 ; R84["Region"] := R85
	1102	[5752]	OP_LOADBOOL	R84 0 0 ; R84 := false
	1103	[5752]	SETUPVAL 	R84 U22 ; U22 := R84
	1104	[5753]	RETURN   	R0 1 ; return 

function #123 <?:5755,5767> (52 instructions, 208 bytes at 0000021132F768B0)
0 params, 13 slots, 1 upvalue, 0 locals, 17 constants, 0 functions
	1	[5756]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[5756]	GETGLOBAL	R1 K1 ; R1 := mShip
	3	[5756]	GETTABLE 	R1 R1 K2 ; R1 := R1["Deco"]
	4	[5756]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[5756]	TEST     	R0 1 ; if R0 then PC := 52
	6	[5756]	JMP      	52 ; PC := 52
	7	[5757]	LOADK    	R0 := 120.000000
	8	[5758]	GETGLOBAL	R1 K3 ; R1 := 0x55156ff7
	9	[5758]	CALL     	R1 1 2 ; R1 := R1()
	10	[5758]	MOD      	R1 R1 R0 ; R1 := R1 % R0
	11	[5758]	DIV      	R1 R1 R0 ; R1 := R1 / R0
	12	[5759]	MUL      	R2 K5 R1 ; R2 := 6.283185 * R1
	13	[5760]	GETGLOBAL	R3 K6 ; R3 := mRegionRadius
	14	[5760]	GETGLOBAL	R4 K1 ; R4 := mShip
	15	[5760]	GETTABLE 	R4 R4 K7 ; R4 := R4["RegionIndex"]
	16	[5760]	GETTABLE 	R3 R3 R4 ; R3 := R3[R4]
	17	[5760]	ADD      	R3 R3 K8 ; R3 := R3 + 0.050000
	18	[5761]	GETGLOBAL	R4 K4 ; R4 := 0x5bced4c4
	19	[5761]	GETTABLE 	R4 R4 K9 ; R4 := R4[0x3eda26fc]
	20	[5761]	MOVE     	R5 R2 ; R5 := R2
	21	[5761]	CALL     	R4 2 2 ; R4 := R4(R5)
	22	[5761]	MUL      	R4 R4 R3 ; R4 := R4 * R3
	23	[5762]	GETGLOBAL	R5 K4 ; R5 := 0x5bced4c4
	24	[5762]	GETTABLE 	R5 R5 K10 ; R5 := R5[0x00fa6bf1]
	25	[5762]	MOVE     	R6 R2 ; R6 := R2
	26	[5762]	CALL     	R5 2 2 ; R5 := R5(R6)
	27	[5762]	MUL      	R5 R5 R3 ; R5 := R5 * R3
	28	[5764]	GETGLOBAL	R6 K1 ; R6 := mShip
	29	[5764]	GETTABLE 	R6 R6 K2 ; R6 := R6["Deco"]
	30	[5764]	SELF     	R6 R6 K11 ; R7 := R6; R6 := R6[0x9307aa51]
	31	[5764]	GETGLOBAL	R8 K1 ; R8 := mShip
	32	[5764]	GETTABLE 	R8 R8 K12 ; R8 := R8["AnchorPosition"]
	33	[5764]	GETGLOBAL	R9 K13 ; R9 := 0xa421af95
	34	[5764]	MOVE     	R10 R4 ; R10 := R4
	35	[5764]	MOVE     	R11 R5 ; R11 := R5
	36	[5764]	LOADK    	R12 := 0.000000
	37	[5764]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	38	[5764]	ADD      	R8 R8 R9 ; R8 := R8 + R9
	39	[5764]	CALL     	R6 3 1 ; R6(R7,R8)
	40	[5765]	GETGLOBAL	R6 K1 ; R6 := mShip
	41	[5765]	GETTABLE 	R6 R6 K2 ; R6 := R6["Deco"]
	42	[5765]	SELF     	R6 R6 K14 ; R7 := R6; R6 := R6[0x70b8836c]
	43	[5765]	GETGLOBAL	R8 K15 ; R8 := 0x00046924
	44	[5765]	LOADK    	R9 := 90.000000
	45	[5765]	GETUPVAL 	R10 U0 ; R10 := U0
	46	[5765]	GETTABLE 	R10 R10 K16 ; R10 := R10[0xd4ea5665]
	47	[5765]	MOVE     	R11 R2 ; R11 := R2
	48	[5765]	CALL     	R10 2 2 ; R10 := R10(R11)
	49	[5765]	LOADK    	R11 := -90.000000
	50	[5765]	CALL     	R8 4 0 ; R8,... := R8(R9,R10,R11)
	51	[5765]	CALL     	R6 0 1 ; R6(R7,...)
	52	[5767]	RETURN   	R0 1 ; return 

function #124 <?:5769,5805> (169 instructions, 676 bytes at 0000021132F921C0)
0 params, 17 slots, 6 upvalues, 0 locals, 44 constants, 0 functions
	1	[5770]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[5770]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[5770]	GETTABLE 	R1 R1 K1 ; R1 := R1["Region"]
	4	[5770]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[5770]	TEST     	R0 1 ; if R0 then PC := 169
	6	[5770]	JMP      	169 ; PC := 169
	7	[5770]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	8	[5770]	GETGLOBAL	R1 K2 ; R1 := _T
	9	[5770]	GETTABLE 	R1 R1 K3 ; R1 := R1["FortressLocation"]
	10	[5770]	CALL     	R0 2 2 ; R0 := R0(R1)
	11	[5770]	TEST     	R0 1 ; if R0 then PC := 169
	12	[5770]	JMP      	169 ; PC := 169
	13	[5770]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	14	[5770]	GETUPVAL 	R1 U0 ; R1 := U0
	15	[5770]	GETTABLE 	R1 R1 K4 ; R1 := R1["Splines"]
	16	[5770]	GETGLOBAL	R2 K2 ; R2 := _T
	17	[5770]	GETTABLE 	R2 R2 K3 ; R2 := R2["FortressLocation"]
	18	[5770]	GETTABLE 	R2 R2 K5 ; R2 := R2["SplineIndex"]
	19	[5770]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	20	[5770]	CALL     	R0 2 2 ; R0 := R0(R1)
	21	[5770]	TEST     	R0 1 ; if R0 then PC := 169
	22	[5770]	JMP      	169 ; PC := 169
	23	[5771]	GETUPVAL 	R0 U0 ; R0 := U0
	24	[5771]	GETTABLE 	R0 R0 K4 ; R0 := R0["Splines"]
	25	[5771]	GETGLOBAL	R1 K2 ; R1 := _T
	26	[5771]	GETTABLE 	R1 R1 K3 ; R1 := R1["FortressLocation"]
	27	[5771]	GETTABLE 	R1 R1 K5 ; R1 := R1["SplineIndex"]
	28	[5771]	GETTABLE 	R0 R0 R1 ; R0 := R0[R1]
	29	[5771]	SELF     	R0 R0 K6 ; R1 := R0; R0 := R0[0x7482ae82]
	30	[5771]	GETGLOBAL	R2 K2 ; R2 := _T
	31	[5771]	GETTABLE 	R2 R2 K3 ; R2 := R2["FortressLocation"]
	32	[5771]	GETTABLE 	R2 R2 K7 ; R2 := R2["Progress"]
	33	[5771]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	34	[5773]	GETGLOBAL	R1 K8 ; R1 := 0x03ea2485
	35	[5773]	GETUPVAL 	R2 U0 ; R2 := U0
	36	[5773]	GETTABLE 	R2 R2 K1 ; R2 := R2["Region"]
	37	[5773]	GETTABLE 	R2 R2 K9 ; R2 := R2["pos"]
	38	[5773]	MOVE     	R3 R0 ; R3 := R0
	39	[5773]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	40	[5773]	LT       	0 R1 K10 ; if R1 >= 0.001000 then PC := 43
	41	[5773]	JMP      	43 ; PC := 43
	42	[5774]	RETURN   	R0 1 ; return 
	43	[5777]	GETGLOBAL	R1 K11 ; R1 := mRadialSolarMap
	44	[5777]	SELF     	R1 R1 K12 ; R2 := R1; R1 := R1[0x3070289c]
	45	[5777]	GETUPVAL 	R3 U0 ; R3 := U0
	46	[5777]	GETTABLE 	R3 R3 K1 ; R3 := R3["Region"]
	47	[5777]	GETGLOBAL	R4 K13 ; R4 := 0xa421af95
	48	[5777]	GETTABLE 	R5 R0 K14 ; R5 := R0["x"]
	49	[5777]	MUL      	R5 R5 K15 ; R5 := R5 * 0.041000
	50	[5777]	ADD      	R5 K16 R5 ; R5 := 0.500000 + R5
	51	[5777]	GETTABLE 	R6 R0 K17 ; R6 := R0["y"]
	52	[5777]	ADD      	R6 R6 K18 ; R6 := R6 + 0.030000
	53	[5777]	MUL      	R6 R6 K19 ; R6 := R6 * 0.043000
	54	[5777]	SUB      	R6 K16 R6 ; R6 := 0.500000 - R6
	55	[5777]	GETGLOBAL	R7 K20 ; R7 := Zoom
	56	[5777]	GETTABLE 	R7 R7 K21 ; R7 := R7["MAX_ZOOM"]
	57	[5777]	SUB      	R7 R7 K22 ; R7 := R7 - 0.300000
	58	[5777]	GETTABLE 	R8 R0 K23 ; R8 := R0["z"]
	59	[5777]	ADD      	R7 R7 R8 ; R7 := R7 + R8
	60	[5777]	CALL     	R4 4 0 ; R4,... := R4(R5,R6,R7)
	61	[5777]	CALL     	R1 0 1 ; R1(R2,...)
	62	[5779]	GETGLOBAL	R1 K24 ; R1 := mZoomedRegion
	63	[5779]	GETUPVAL 	R2 U0 ; R2 := U0
	64	[5779]	GETTABLE 	R2 R2 K1 ; R2 := R2["Region"]
	65	[5779]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 82
	66	[5779]	JMP      	82 ; PC := 82
	67	[5780]	GETUPVAL 	R1 U1 ; R1 := U1
	68	[5780]	GETGLOBAL	R2 K24 ; R2 := mZoomedRegion
	69	[5780]	GETGLOBAL	R3 K24 ; R3 := mZoomedRegion
	70	[5780]	GETTABLE 	R3 R3 K25 ; R3 := R3["zoomedFraming"]
	71	[5780]	CALL     	R1 3 4 ; R1,R2,R3 := R1(R2,R3)
	72	[5781]	GETGLOBAL	R4 K26 ; R4 := mDrag
	73	[5781]	SELF     	R4 R4 K27 ; R5 := R4; R4 := R4[0x4c4f8717]
	74	[5781]	LOADK    	R6 K14 ; R6 := "x"
	75	[5781]	MOVE     	R7 R1 ; R7 := R1
	76	[5781]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	77	[5782]	GETGLOBAL	R4 K26 ; R4 := mDrag
	78	[5782]	SELF     	R4 R4 K27 ; R5 := R4; R4 := R4[0x4c4f8717]
	79	[5782]	LOADK    	R6 K17 ; R6 := "y"
	80	[5782]	MOVE     	R7 R2 ; R7 := R2
	81	[5782]	CALL     	R4 4 1 ; R4(R5,R6,R7)
	82	[5785]	GETUPVAL 	R4 U0 ; R4 := U0
	83	[5785]	GETTABLE 	R4 R4 K1 ; R4 := R4["Region"]
	84	[5785]	SETTABLE 	R4 K9 R0 ; R4["pos"] := R0
	85	[5787]	GETGLOBAL	R4 K13 ; R4 := 0xa421af95
	86	[5787]	GETUPVAL 	R5 U0 ; R5 := U0
	87	[5787]	GETTABLE 	R5 R5 K1 ; R5 := R5["Region"]
	88	[5787]	GETTABLE 	R5 R5 K9 ; R5 := R5["pos"]
	89	[5787]	GETTABLE 	R5 R5 K14 ; R5 := R5["x"]
	90	[5787]	GETUPVAL 	R6 U0 ; R6 := U0
	91	[5787]	GETTABLE 	R6 R6 K1 ; R6 := R6["Region"]
	92	[5787]	GETTABLE 	R6 R6 K9 ; R6 := R6["pos"]
	93	[5787]	GETTABLE 	R6 R6 K17 ; R6 := R6["y"]
	94	[5787]	GETUPVAL 	R7 U0 ; R7 := U0
	95	[5787]	GETTABLE 	R7 R7 K1 ; R7 := R7["Region"]
	96	[5787]	GETTABLE 	R7 R7 K9 ; R7 := R7["pos"]
	97	[5787]	GETTABLE 	R7 R7 K23 ; R7 := R7["z"]
	98	[5787]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	99	[5788]	GETUPVAL 	R5 U2 ; R5 := U2
	100	[5788]	MOVE     	R6 R4 ; R6 := R4
	101	[5788]	CALL     	R5 2 2 ; R5 := R5(R6)
	102	[5788]	MOVE     	R4 R5 ; R4 := R5
	103	[5790]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	104	[5790]	GETUPVAL 	R6 U0 ; R6 := U0
	105	[5790]	GETTABLE 	R6 R6 K1 ; R6 := R6["Region"]
	106	[5790]	GETTABLE 	R6 R6 K28 ; R6 := R6["instance"]
	107	[5790]	CALL     	R5 2 2 ; R5 := R5(R6)
	108	[5790]	TEST     	R5 1 ; if R5 then PC := 133
	109	[5790]	JMP      	133 ; PC := 133
	110	[5791]	GETUPVAL 	R5 U0 ; R5 := U0
	111	[5791]	GETTABLE 	R5 R5 K1 ; R5 := R5["Region"]
	112	[5791]	GETTABLE 	R5 R5 K28 ; R5 := R5["instance"]
	113	[5791]	SELF     	R5 R5 K29 ; R6 := R5; R5 := R5[0x9307aa51]
	114	[5791]	MOVE     	R7 R4 ; R7 := R4
	115	[5791]	CALL     	R5 3 1 ; R5(R6,R7)
	116	[5792]	GETUPVAL 	R5 U3 ; R5 := U3
	117	[5792]	GETUPVAL 	R6 U0 ; R6 := U0
	118	[5792]	GETTABLE 	R6 R6 K30 ; R6 := R6["SubLabelIndex"]
	119	[5792]	GETTABLE 	R5 R5 R6 ; R5 := R5[R6]
	120	[5792]	GETGLOBAL	R6 K13 ; R6 := 0xa421af95
	121	[5792]	LOADK    	R7 := 0.000000
	122	[5792]	GETUPVAL 	R8 U0 ; R8 := U0
	123	[5792]	GETTABLE 	R8 R8 K1 ; R8 := R8["Region"]
	124	[5792]	GETTABLE 	R8 R8 K31 ; R8 := R8["scale"]
	125	[5792]	MUL      	R8 R8 K32 ; R8 := R8 * 1.050000
	126	[5792]	GETUPVAL 	R9 U4 ; R9 := U4
	127	[5792]	GETTABLE 	R9 R9 K33 ; R9 := R9["PLANET_UNIT_MULTIPLIER"]
	128	[5792]	MUL      	R8 R8 R9 ; R8 := R8 * R9
	129	[5792]	LOADK    	R9 K34 ; R9 := 0.000100
	130	[5792]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	131	[5792]	ADD      	R6 R4 R6 ; R6 := R4 + R6
	132	[5792]	SETTABLE 	R5 K9 R6 ; R5["pos"] := R6
	133	[5795]	GETGLOBAL	R5 K35 ; R5 := 0xcfc01047
	134	[5795]	GETUPVAL 	R6 U0 ; R6 := U0
	135	[5795]	GETTABLE 	R6 R6 K36 ; R6 := R6["Sectors"]
	136	[5795]	CALL     	R5 2 4 ; R5,R6,R7 := R5(R6)
	137	[5795]	JMP      	155 ; PC := 155
	138	[5796]	GETUPVAL 	R10 U0 ; R10 := U0
	139	[5796]	GETTABLE 	R10 R10 K37 ; R10 := R10["Nodes"]
	140	[5796]	EQ       	1 R10 K38 ; if R10 == nil then PC := 155
	141	[5796]	JMP      	155 ; PC := 155
	142	[5796]	GETUPVAL 	R10 U0 ; R10 := U0
	143	[5796]	GETTABLE 	R10 R10 K37 ; R10 := R10["Nodes"]
	144	[5796]	GETTABLE 	R10 R10 R8 ; R10 := R10[R8]
	145	[5796]	EQ       	1 R10 K38 ; if R10 == nil then PC := 155
	146	[5796]	JMP      	155 ; PC := 155
	147	[5797]	GETGLOBAL	R10 K39 ; R10 := 0x808dc004
	148	[5797]	GETUPVAL 	R11 U0 ; R11 := U0
	149	[5797]	GETTABLE 	R11 R11 K37 ; R11 := R11["Nodes"]
	150	[5797]	GETTABLE 	R11 R11 R8 ; R11 := R11[R8]
	151	[5797]	GETTABLE 	R11 R11 K40 ; R11 := R11["position"]
	152	[5797]	MOVE     	R12 R0 ; R12 := R0
	153	[5797]	GETTABLE 	R13 R9 K41 ; R13 := R9["decoOffset"]
	154	[5797]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	155	[5795]	TFORLOOP 	R5 2 ; R8,R9 := R5(R6,R7); if R8 ~= nil then begin PC = 138; R7 := R8 end
	156	[5798]	JMP      	138 ; PC := 138
	157	[5801]	LOADK    	R10 := 1.000000
	158	[5801]	GETGLOBAL	R11 K42 ; R11 := mMovingEdgeIndices
	159	[5801]	LEN      	R11 R11 ; R11 := # R11
	160	[5801]	LOADK    	R12 := 1.000000
	161	[5801]	FORPREP  	R10 168 ; R10 -= R12; PC := 168
	162	[5802]	GETUPVAL 	R14 U5 ; R14 := U5
	163	[5802]	GETGLOBAL	R15 K43 ; R15 := mFlatEdges
	164	[5802]	GETGLOBAL	R16 K42 ; R16 := mMovingEdgeIndices
	165	[5802]	GETTABLE 	R16 R16 R13 ; R16 := R16[R13]
	166	[5802]	GETTABLE 	R15 R15 R16 ; R15 := R15[R16]
	167	[5802]	CALL     	R14 2 1 ; R14(R15)
	168	[5801]	FORLOOP  	R10 162 ; R10 += R12; if R10 <= R11 then begin PC := 162; R13 := R10 end
	169	[5805]	RETURN   	R0 1 ; return 

function #125 <?:5807,5832> (54 instructions, 216 bytes at 0000021132F76CA0)
0 params, 10 slots, 2 upvalues, 0 locals, 12 constants, 0 functions
	1	[5808]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[5808]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[5808]	GETTABLE 	R1 R1 K1 ; R1 := R1["ResourceDrone"]
	4	[5808]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[5808]	TEST     	R0 0 ; if not R0 then PC := 8
	6	[5808]	JMP      	8 ; PC := 8
	7	[5809]	RETURN   	R0 1 ; return 
	8	[5812]	GETGLOBAL	R0 K2 ; R0 := mSmoothZoom
	9	[5812]	GETTABLE 	R0 R0 K3 ; R0 := R0["mCurVal"]
	10	[5813]	LT       	0 R0 K4 ; if R0 >= -2.000000 then PC := 21
	11	[5813]	JMP      	21 ; PC := 21
	12	[5815]	GETUPVAL 	R1 U0 ; R1 := U0
	13	[5815]	GETTABLE 	R1 R1 K1 ; R1 := R1["ResourceDrone"]
	14	[5815]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xe4162eed]
	15	[5815]	LOADK    	R3 K6 ; R3 := "OnRegionZoomOut"
	16	[5815]	LOADK    	R4 K7 ; R4 := ""
	17	[5815]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	18	[5816]	GETUPVAL 	R1 U1 ; R1 := U1
	19	[5816]	CALL     	R1 1 1 ; R1()
	20	[5817]	RETURN   	R0 1 ; return 
	21	[5822]	LOADK    	R1 := 1.000000
	22	[5822]	GETGLOBAL	R2 K8 ; R2 := mRegions
	23	[5822]	LEN      	R2 R2 ; R2 := # R2
	24	[5822]	LOADK    	R3 := 1.000000
	25	[5822]	FORPREP  	R1 45 ; R1 -= R3; PC := 45
	26	[5824]	GETGLOBAL	R5 K0 ; R5 := 0x7b998233
	27	[5824]	GETGLOBAL	R6 K9 ; R6 := mZoomedRegion
	28	[5824]	CALL     	R5 2 2 ; R5 := R5(R6)
	29	[5824]	TEST     	R5 1 ; if R5 then PC := 45
	30	[5824]	JMP      	45 ; PC := 45
	31	[5824]	GETGLOBAL	R5 K9 ; R5 := mZoomedRegion
	32	[5824]	GETGLOBAL	R6 K8 ; R6 := mRegions
	33	[5824]	GETTABLE 	R6 R6 R4 ; R6 := R6[R4]
	34	[5824]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 45
	35	[5824]	JMP      	45 ; PC := 45
	36	[5825]	GETUPVAL 	R5 U0 ; R5 := U0
	37	[5825]	GETTABLE 	R5 R5 K1 ; R5 := R5["ResourceDrone"]
	38	[5825]	SELF     	R5 R5 K5 ; R6 := R5; R5 := R5[0xe4162eed]
	39	[5825]	LOADK    	R7 K10 ; R7 := "OnRegionZoomIn"
	40	[5825]	GETGLOBAL	R8 K11 ; R8 := 0x64fb1586
	41	[5825]	MOVE     	R9 R4 ; R9 := R4
	42	[5825]	CALL     	R8 2 0 ; R8,... := R8(R9)
	43	[5825]	CALL     	R5 0 1 ; R5(R6,...)
	44	[5826]	RETURN   	R0 1 ; return 
	45	[5822]	FORLOOP  	R1 26 ; R1 += R3; if R1 <= R2 then begin PC := 26; R4 := R1 end
	46	[5830]	GETUPVAL 	R5 U0 ; R5 := U0
	47	[5830]	GETTABLE 	R5 R5 K1 ; R5 := R5["ResourceDrone"]
	48	[5830]	SELF     	R5 R5 K5 ; R6 := R5; R5 := R5[0xe4162eed]
	49	[5830]	LOADK    	R7 K6 ; R7 := "OnRegionZoomOut"
	50	[5830]	LOADK    	R8 K7 ; R8 := ""
	51	[5830]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	52	[5831]	GETUPVAL 	R5 U1 ; R5 := U1
	53	[5831]	CALL     	R5 1 1 ; R5()
	54	[5832]	RETURN   	R0 1 ; return 

function #126 <?:5834,5839> (15 instructions, 60 bytes at 000002112F765430)
2 params, 9 slots, 1 upvalue, 0 locals, 5 constants, 0 functions
	1	[5835]	LOADK    	R2 := 0.000000
	2	[5836]	GETUPVAL 	R3 U0 ; R3 := U0
	3	[5836]	GETTABLE 	R3 R3 K0 ; R3 := R3[0xd4ea5665]
	4	[5836]	GETUPVAL 	R4 U0 ; R4 := U0
	5	[5836]	GETTABLE 	R4 R4 K1 ; R4 := R4[0x538cf9d0]
	6	[5836]	GETTABLE 	R5 R1 K2 ; R5 := R1["x"]
	7	[5836]	GETTABLE 	R6 R1 K3 ; R6 := R1["y"]
	8	[5836]	GETTABLE 	R7 R0 K2 ; R7 := R0["x"]
	9	[5836]	GETTABLE 	R8 R0 K3 ; R8 := R0["y"]
	10	[5836]	CALL     	R4 5 0 ; R4,... := R4(R5,R6,R7,R8)
	11	[5836]	CALL     	R3 0 2 ; R3 := R3(R4,...)
	12	[5836]	MOVE     	R2 R3 ; R2 := R3
	13	[5837]	SUB      	R2 R2 K4 ; R2 := R2 - 90.000000
	14	[5838]	RETURN   	R2 2 ; return R2 
	15	[5839]	RETURN   	R0 1 ; return 

function #127 <?:5841,6229> (1506 instructions, 6024 bytes at 00000211364375F0)
1 param, 86 slots, 20 upvalues, 0 locals, 167 constants, 0 functions
	1	[5842]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[5842]	GETTABLE 	R1 R1 K0 ; R1 := R1["forceUpdate3dElements"]
	3	[5842]	TEST     	R1 0 ; if not R1 then PC := 8
	4	[5842]	JMP      	8 ; PC := 8
	5	[5843]	OP_LOADBOOL	R0 1 0 ; R0 := true
	6	[5845]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[5845]	SETTABLE 	R1 K0 K1 ; R1["forceUpdate3dElements"] := false
	8	[5848]	GETGLOBAL	R1 K2 ; R1 := 0xa421af95
	9	[5848]	CALL     	R1 1 2 ; R1 := R1()
	10	[5849]	GETGLOBAL	R2 K3 ; R2 := mSmoothZoom
	11	[5849]	GETTABLE 	R2 R2 K4 ; R2 := R2["mCurVal"]
	12	[5850]	GETGLOBAL	R3 K5 ; R3 := mPreviousZoom
	13	[5850]	EQ       	0 R3 R2 ; if R3 ~= R2 then PC := 16
	14	[5850]	JMP      	16 ; PC := 16
	15	[5850]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 16
	16	[5850]	OP_LOADBOOL	R3 1 0 ; R3 := true
	17	[5851]	SETGLOBALHASH	R2 K5 ; mPreviousZoom := R2
	18	[5852]	GETGLOBAL	R4 K6 ; R4 := mPreviousDrag
	19	[5852]	GETTABLE 	R4 R4 K7 ; R4 := R4["x"]
	20	[5852]	GETGLOBAL	R5 K8 ; R5 := mSmoothX
	21	[5852]	SELF     	R5 R5 K9 ; R6 := R5; R5 := R5[0x54ab95f9]
	22	[5852]	CALL     	R5 2 2 ; R5 := R5(R6)
	23	[5852]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 39
	24	[5852]	JMP      	39 ; PC := 39
	25	[5852]	GETGLOBAL	R4 K6 ; R4 := mPreviousDrag
	26	[5852]	GETTABLE 	R4 R4 K10 ; R4 := R4["y"]
	27	[5852]	GETGLOBAL	R5 K11 ; R5 := mSmoothY
	28	[5852]	SELF     	R5 R5 K9 ; R6 := R5; R5 := R5[0x54ab95f9]
	29	[5852]	CALL     	R5 2 2 ; R5 := R5(R6)
	30	[5852]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 39
	31	[5852]	JMP      	39 ; PC := 39
	32	[5852]	GETGLOBAL	R4 K12 ; R4 := mHover
	33	[5852]	GETTABLE 	R4 R4 K13 ; R4 := R4["mPrevHoverNode"]
	34	[5852]	GETGLOBAL	R5 K12 ; R5 := mHover
	35	[5852]	GETTABLE 	R5 R5 K14 ; R5 := R5["Node"]
	36	[5852]	EQ       	0 R4 R5 ; if R4 ~= R5 then PC := 39
	37	[5852]	JMP      	39 ; PC := 39
	38	[5852]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 39
	39	[5852]	OP_LOADBOOL	R4 1 0 ; R4 := true
	40	[5853]	GETGLOBAL	R5 K6 ; R5 := mPreviousDrag
	41	[5853]	GETGLOBAL	R6 K8 ; R6 := mSmoothX
	42	[5853]	SELF     	R6 R6 K9 ; R7 := R6; R6 := R6[0x54ab95f9]
	43	[5853]	CALL     	R6 2 2 ; R6 := R6(R7)
	44	[5853]	SETTABLE 	R5 K7 R6 ; R5["x"] := R6
	45	[5854]	GETGLOBAL	R5 K6 ; R5 := mPreviousDrag
	46	[5854]	GETGLOBAL	R6 K11 ; R6 := mSmoothY
	47	[5854]	SELF     	R6 R6 K9 ; R7 := R6; R6 := R6[0x54ab95f9]
	48	[5854]	CALL     	R6 2 2 ; R6 := R6(R7)
	49	[5854]	SETTABLE 	R5 K10 R6 ; R5["y"] := R6
	50	[5855]	GETGLOBAL	R5 K12 ; R5 := mHover
	51	[5855]	GETGLOBAL	R6 K12 ; R6 := mHover
	52	[5855]	GETTABLE 	R6 R6 K14 ; R6 := R6["Node"]
	53	[5855]	SETTABLE 	R5 K13 R6 ; R5["mPrevHoverNode"] := R6
	54	[5856]	GETGLOBAL	R5 K15 ; R5 := mPreviousNodeDuck
	55	[5856]	GETTABLE 	R5 R5 K16 ; R5 := R5["Alpha"]
	56	[5856]	GETGLOBAL	R6 K17 ; R6 := mNodeDuck
	57	[5856]	SELF     	R6 R6 K9 ; R7 := R6; R6 := R6[0x54ab95f9]
	58	[5856]	CALL     	R6 2 2 ; R6 := R6(R7)
	59	[5856]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 62
	60	[5856]	JMP      	62 ; PC := 62
	61	[5856]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 62
	62	[5856]	OP_LOADBOOL	R5 1 0 ; R5 := true
	63	[5857]	GETGLOBAL	R6 K15 ; R6 := mPreviousNodeDuck
	64	[5857]	GETGLOBAL	R7 K17 ; R7 := mNodeDuck
	65	[5857]	SELF     	R7 R7 K9 ; R8 := R7; R7 := R7[0x54ab95f9]
	66	[5857]	CALL     	R7 2 2 ; R7 := R7(R8)
	67	[5857]	SETTABLE 	R6 K16 R7 ; R6["Alpha"] := R7
	68	[5859]	GETGLOBAL	R6 K12 ; R6 := mHover
	69	[5859]	GETTABLE 	R6 R6 K18 ; R6 := R6["Region"]
	70	[5860]	EQ       	0 R6 K19 ; if R6 ~= nil then PC := 82
	71	[5860]	JMP      	82 ; PC := 82
	72	[5860]	GETGLOBAL	R7 K20 ; R7 := mPreviousRegionDuck
	73	[5860]	GETTABLE 	R7 R7 K18 ; R7 := R7["Region"]
	74	[5860]	EQ       	1 R7 K19 ; if R7 == nil then PC := 82
	75	[5860]	JMP      	82 ; PC := 82
	76	[5860]	GETGLOBAL	R7 K20 ; R7 := mPreviousRegionDuck
	77	[5860]	GETTABLE 	R7 R7 K16 ; R7 := R7["Alpha"]
	78	[5860]	LT       	0 K21 R7 ; if 0.000000 >= R7 then PC := 82
	79	[5860]	JMP      	82 ; PC := 82
	80	[5861]	GETGLOBAL	R7 K20 ; R7 := mPreviousRegionDuck
	81	[5861]	GETTABLE 	R6 R7 K18 ; R6 := R7["Region"]
	82	[5863]	LOADNIL  	R7 R7 ; R7 := nil
	83	[5864]	EQ       	1 R6 K19 ; if R6 == nil then PC := 97
	84	[5864]	JMP      	97 ; PC := 97
	85	[5865]	LOADK    	R8 := 1.000000
	86	[5865]	GETGLOBAL	R9 K22 ; R9 := mRegions
	87	[5865]	LEN      	R9 R9 ; R9 := # R9
	88	[5865]	LOADK    	R10 := 1.000000
	89	[5865]	FORPREP  	R8 96 ; R8 -= R10; PC := 96
	90	[5866]	GETGLOBAL	R12 K22 ; R12 := mRegions
	91	[5866]	GETTABLE 	R12 R12 R11 ; R12 := R12[R11]
	92	[5866]	EQ       	0 R6 R12 ; if R6 ~= R12 then PC := 96
	93	[5866]	JMP      	96 ; PC := 96
	94	[5867]	SUB      	R7 R11 K23 ; R7 := R11 - 1.000000
	95	[5868]	JMP      	97 ; PC := 97
	96	[5865]	FORLOOP  	R8 90 ; R8 += R10; if R8 <= R9 then begin PC := 90; R11 := R8 end
	97	[5873]	GETGLOBAL	R12 K20 ; R12 := mPreviousRegionDuck
	98	[5873]	GETTABLE 	R12 R12 K16 ; R12 := R12["Alpha"]
	99	[5873]	GETGLOBAL	R13 K24 ; R13 := mRegionConnectionsDuck
	100	[5873]	SELF     	R13 R13 K9 ; R14 := R13; R13 := R13[0x54ab95f9]
	101	[5873]	CALL     	R13 2 2 ; R13 := R13(R14)
	102	[5873]	EQ       	0 R12 R13 ; if R12 ~= R13 then PC := 105
	103	[5873]	JMP      	105 ; PC := 105
	104	[5873]	OP_LOADBOOL	R12 0 1 ; R12 := false; PC := 105
	105	[5873]	OP_LOADBOOL	R12 1 0 ; R12 := true
	106	[5874]	GETGLOBAL	R13 K20 ; R13 := mPreviousRegionDuck
	107	[5874]	GETGLOBAL	R14 K24 ; R14 := mRegionConnectionsDuck
	108	[5874]	SELF     	R14 R14 K9 ; R15 := R14; R14 := R14[0x54ab95f9]
	109	[5874]	CALL     	R14 2 2 ; R14 := R14(R15)
	110	[5874]	SETTABLE 	R13 K16 R14 ; R13["Alpha"] := R14
	111	[5876]	GETUPVAL 	R13 U1 ; R13 := U1
	112	[5876]	GETUPVAL 	R14 U2 ; R14 := U2
	113	[5876]	GETTABLE 	R14 R14 K25 ; R14 := R14["READ_ONLY"]
	114	[5876]	EQ       	1 R13 R14 ; if R13 == R14 then PC := 119
	115	[5876]	JMP      	119 ; PC := 119
	116	[5878]	OP_LOADBOOL	R3 1 0 ; R3 := true
	117	[5879]	OP_LOADBOOL	R4 1 0 ; R4 := true
	118	[5879]	JMP      	156 ; PC := 156
	119	[5880]	GETGLOBAL	R13 K26 ; R13 := 0x7b998233
	120	[5880]	GETUPVAL 	R14 U0 ; R14 := U0
	121	[5880]	GETTABLE 	R14 R14 K27 ; R14 := R14["cameraSpot"]
	122	[5880]	CALL     	R13 2 2 ; R13 := R13(R14)
	123	[5880]	TEST     	R13 1 ; if R13 then PC := 156
	124	[5880]	JMP      	156 ; PC := 156
	125	[5881]	GETUPVAL 	R13 U0 ; R13 := U0
	126	[5881]	GETTABLE 	R13 R13 K27 ; R13 := R13["cameraSpot"]
	127	[5881]	SELF     	R13 R13 K28 ; R14 := R13; R13 := R13[0xf6ebd926]
	128	[5881]	CALL     	R13 2 2 ; R13 := R13(R14)
	129	[5881]	GETUPVAL 	R14 U0 ; R14 := U0
	130	[5881]	GETTABLE 	R14 R14 K29 ; R14 := R14["oldPos"]
	131	[5881]	SUB      	R13 R13 R14 ; R13 := R13 - R14
	132	[5882]	GETTABLE 	R14 R13 K7 ; R14 := R13["x"]
	133	[5882]	EQ       	0 R14 K21 ; if R14 ~= 0.000000 then PC := 138
	134	[5882]	JMP      	138 ; PC := 138
	135	[5882]	GETTABLE 	R14 R13 K10 ; R14 := R13["y"]
	136	[5882]	EQ       	1 R14 K21 ; if R14 == 0.000000 then PC := 146
	137	[5882]	JMP      	146 ; PC := 146
	138	[5883]	GETUPVAL 	R14 U0 ; R14 := U0
	139	[5883]	GETUPVAL 	R15 U0 ; R15 := U0
	140	[5883]	GETTABLE 	R15 R15 K27 ; R15 := R15["cameraSpot"]
	141	[5883]	SELF     	R15 R15 K28 ; R16 := R15; R15 := R15[0xf6ebd926]
	142	[5883]	CALL     	R15 2 2 ; R15 := R15(R16)
	143	[5883]	SETTABLE 	R14 K29 R15 ; R14["oldPos"] := R15
	144	[5884]	OP_LOADBOOL	R4 1 0 ; R4 := true
	145	[5884]	JMP      	156 ; PC := 156
	146	[5885]	GETTABLE 	R14 R13 K30 ; R14 := R13["z"]
	147	[5885]	EQ       	1 R14 K21 ; if R14 == 0.000000 then PC := 156
	148	[5885]	JMP      	156 ; PC := 156
	149	[5886]	GETUPVAL 	R14 U0 ; R14 := U0
	150	[5886]	GETUPVAL 	R15 U0 ; R15 := U0
	151	[5886]	GETTABLE 	R15 R15 K27 ; R15 := R15["cameraSpot"]
	152	[5886]	SELF     	R15 R15 K28 ; R16 := R15; R15 := R15[0xf6ebd926]
	153	[5886]	CALL     	R15 2 2 ; R15 := R15(R16)
	154	[5886]	SETTABLE 	R14 K29 R15 ; R14["oldPos"] := R15
	155	[5887]	OP_LOADBOOL	R3 1 0 ; R3 := true
	156	[5891]	LOADNIL  	R14 R15 ; R14 := R15 := nil
	157	[5892]	GETGLOBAL	R16 K2 ; R16 := 0xa421af95
	158	[5892]	CALL     	R16 1 2 ; R16 := R16()
	159	[5893]	GETGLOBAL	R17 K2 ; R17 := 0xa421af95
	160	[5893]	CALL     	R17 1 2 ; R17 := R17()
	161	[5894]	GETGLOBAL	R18 K31 ; R18 := 0x00046924
	162	[5894]	CALL     	R18 1 2 ; R18 := R18()
	163	[5895]	GETGLOBAL	R19 K2 ; R19 := 0xa421af95
	164	[5895]	CALL     	R19 1 2 ; R19 := R19()
	165	[5897]	TEST     	R4 1 ; if R4 then PC := 175
	166	[5897]	JMP      	175 ; PC := 175
	167	[5897]	TEST     	R3 1 ; if R3 then PC := 175
	168	[5897]	JMP      	175 ; PC := 175
	169	[5897]	TEST     	R5 1 ; if R5 then PC := 175
	170	[5897]	JMP      	175 ; PC := 175
	171	[5897]	TEST     	R12 1 ; if R12 then PC := 175
	172	[5897]	JMP      	175 ; PC := 175
	173	[5897]	TEST     	R0 0 ; if not R0 then PC := 1055
	174	[5897]	JMP      	1055 ; PC := 1055
	175	[5899]	LOADK    	R20 := 100.000000
	176	[5899]	LOADNIL  	R21 R23 ; R21 := R22 := R23 := nil
	177	[5901]	TEST     	R3 0 ; if not R3 then PC := 248
	178	[5901]	JMP      	248 ; PC := 248
	179	[5902]	LOADK    	R24 K32 ; R24 := 0.200000
	180	[5903]	GETGLOBAL	R25 K33 ; R25 := 0x42dcc9f5
	181	[5903]	MOVE     	R26 R2 ; R26 := R2
	182	[5903]	GETUPVAL 	R27 U3 ; R27 := U3
	183	[5903]	GETTABLE 	R27 R27 K34 ; R27 := R27["LAYER_1_RANGE"]
	184	[5903]	GETTABLE 	R27 R27 K35 ; R27 := R27["minValue"]
	185	[5903]	GETUPVAL 	R28 U3 ; R28 := U3
	186	[5903]	GETTABLE 	R28 R28 K34 ; R28 := R28["LAYER_1_RANGE"]
	187	[5903]	GETTABLE 	R28 R28 K36 ; R28 := R28["maxValue"]
	188	[5903]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	189	[5903]	MOVE     	R15 R25 ; R15 := R25
	190	[5904]	GETUPVAL 	R25 U3 ; R25 := U3
	191	[5904]	GETTABLE 	R25 R25 K34 ; R25 := R25["LAYER_1_RANGE"]
	192	[5904]	SELF     	R25 R25 K37 ; R26 := R25; R25 := R25[0x3b93153d]
	193	[5904]	MOVE     	R27 R15 ; R27 := R15
	194	[5904]	CALL     	R25 3 2 ; R25 := R25(R26,R27)
	195	[5904]	MOVE     	R15 R25 ; R15 := R25
	196	[5905]	LT       	0 R15 R24 ; if R15 >= R24 then PC := 205
	197	[5905]	JMP      	205 ; PC := 205
	198	[5906]	GETGLOBAL	R25 K38 ; R25 := 0x9bafffe3
	199	[5906]	LOADK    	R26 := 0.000000
	200	[5906]	LOADK    	R27 := 80.000000
	201	[5906]	DIV      	R28 R15 R24 ; R28 := R15 / R24
	202	[5906]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	203	[5906]	MOVE     	R20 R25 ; R20 := R25
	204	[5906]	JMP      	218 ; PC := 218
	205	[5907]	SUB      	R25 K23 R24 ; R25 := 1.000000 - R24
	206	[5907]	LT       	0 R25 R15 ; if R25 >= R15 then PC := 217
	207	[5907]	JMP      	217 ; PC := 217
	208	[5908]	GETGLOBAL	R25 K38 ; R25 := 0x9bafffe3
	209	[5908]	LOADK    	R26 := 80.000000
	210	[5908]	LOADK    	R27 := 0.000000
	211	[5908]	SUB      	R28 K23 R24 ; R28 := 1.000000 - R24
	212	[5908]	SUB      	R28 R15 R28 ; R28 := R15 - R28
	213	[5908]	DIV      	R28 R28 R24 ; R28 := R28 / R24
	214	[5908]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	215	[5908]	MOVE     	R20 R25 ; R20 := R25
	216	[5908]	JMP      	218 ; PC := 218
	217	[5910]	LOADK    	R20 := 80.000000
	218	[5913]	GETGLOBAL	R25 K33 ; R25 := 0x42dcc9f5
	219	[5913]	MOVE     	R26 R2 ; R26 := R2
	220	[5913]	GETUPVAL 	R27 U3 ; R27 := U3
	221	[5913]	GETTABLE 	R27 R27 K39 ; R27 := R27["PLANET_VIS_RANGE"]
	222	[5913]	GETTABLE 	R27 R27 K35 ; R27 := R27["minValue"]
	223	[5913]	GETUPVAL 	R28 U3 ; R28 := U3
	224	[5913]	GETTABLE 	R28 R28 K39 ; R28 := R28["PLANET_VIS_RANGE"]
	225	[5913]	GETTABLE 	R28 R28 K36 ; R28 := R28["maxValue"]
	226	[5913]	CALL     	R25 4 2 ; R25 := R25(R26,R27,R28)
	227	[5913]	MOVE     	R15 R25 ; R15 := R25
	228	[5914]	GETGLOBAL	R25 K38 ; R25 := 0x9bafffe3
	229	[5914]	LOADK    	R26 := 0.000000
	230	[5914]	LOADK    	R27 := 80.000000
	231	[5914]	GETUPVAL 	R28 U3 ; R28 := U3
	232	[5914]	GETTABLE 	R28 R28 K39 ; R28 := R28["PLANET_VIS_RANGE"]
	233	[5914]	SELF     	R28 R28 K37 ; R29 := R28; R28 := R28[0x3b93153d]
	234	[5914]	MOVE     	R30 R15 ; R30 := R15
	235	[5914]	CALL     	R28 3 0 ; R28,... := R28(R29,R30)
	236	[5914]	CALL     	R25 0 2 ; R25 := R25(R26,...)
	237	[5914]	MOVE     	R21 R25 ; R21 := R25
	238	[5915]	GETGLOBAL	R25 K38 ; R25 := 0x9bafffe3
	239	[5915]	LOADK    	R26 := 50.000000
	240	[5915]	LOADK    	R27 := 80.000000
	241	[5915]	GETUPVAL 	R28 U3 ; R28 := U3
	242	[5915]	GETTABLE 	R28 R28 K39 ; R28 := R28["PLANET_VIS_RANGE"]
	243	[5915]	SELF     	R28 R28 K37 ; R29 := R28; R28 := R28[0x3b93153d]
	244	[5915]	MOVE     	R30 R15 ; R30 := R15
	245	[5915]	CALL     	R28 3 0 ; R28,... := R28(R29,R30)
	246	[5915]	CALL     	R25 0 2 ; R25 := R25(R26,...)
	247	[5915]	MOVE     	R22 R25 ; R22 := R25
	248	[5918]	TEST     	R4 1 ; if R4 then PC := 254
	249	[5918]	JMP      	254 ; PC := 254
	250	[5918]	TEST     	R3 1 ; if R3 then PC := 254
	251	[5918]	JMP      	254 ; PC := 254
	252	[5918]	TEST     	R0 0 ; if not R0 then PC := 315
	253	[5918]	JMP      	315 ; PC := 315
	254	[5919]	LOADK    	R25 := 1.000000
	255	[5919]	GETUPVAL 	R26 U4 ; R26 := U4
	256	[5919]	LEN      	R26 R26 ; R26 := # R26
	257	[5919]	LOADK    	R27 := 1.000000
	258	[5919]	FORPREP  	R25 314 ; R25 -= R27; PC := 314
	259	[5920]	GETGLOBAL	R29 K40 ; R29 := 0xae91e43b
	260	[5920]	SELF     	R29 R29 K41 ; R30 := R29; R29 := R29[0xb9ad3599]
	261	[5920]	MOVE     	R31 R16 ; R31 := R16
	262	[5920]	GETUPVAL 	R32 U4 ; R32 := U4
	263	[5920]	GETTABLE 	R32 R32 R28 ; R32 := R32[R28]
	264	[5920]	GETTABLE 	R32 R32 K42 ; R32 := R32["pos"]
	265	[5920]	OP_LOADBOOL	R33 1 0 ; R33 := true
	266	[5920]	OP_LOADBOOL	R34 0 0 ; R34 := false
	267	[5920]	CALL     	R29 6 1 ; R29(R30,R31,R32,R33,R34)
	268	[5921]	GETGLOBAL	R29 K40 ; R29 := 0xae91e43b
	269	[5921]	SELF     	R29 R29 K43 ; R30 := R29; R29 := R29[0xd38cedf3]
	270	[5921]	GETUPVAL 	R31 U4 ; R31 := U4
	271	[5921]	GETTABLE 	R31 R31 R28 ; R31 := R31[R28]
	272	[5921]	GETTABLE 	R31 R31 K44 ; R31 := R31["memberIndex"]
	273	[5921]	GETTABLE 	R32 R16 K7 ; R32 := R16["x"]
	274	[5921]	GETTABLE 	R33 R16 K10 ; R33 := R16["y"]
	275	[5921]	SUB      	R33 R33 K45 ; R33 := R33 - 10.000000
	276	[5921]	CALL     	R29 5 1 ; R29(R30,R31,R32,R33)
	277	[5923]	TEST     	R3 0 ; if not R3 then PC := 314
	278	[5923]	JMP      	314 ; PC := 314
	279	[5923]	GETUPVAL 	R29 U4 ; R29 := U4
	280	[5923]	GETTABLE 	R29 R29 R28 ; R29 := R29[R28]
	281	[5923]	GETTABLE 	R29 R29 K46 ; R29 := R29["layer"]
	282	[5923]	TEST     	R29 0 ; if not R29 then PC := 314
	283	[5923]	JMP      	314 ; PC := 314
	284	[5924]	LOADK    	R14 := 100.000000
	285	[5926]	GETUPVAL 	R29 U4 ; R29 := U4
	286	[5926]	GETTABLE 	R29 R29 R28 ; R29 := R29[R28]
	287	[5926]	GETTABLE 	R29 R29 K46 ; R29 := R29["layer"]
	288	[5926]	EQ       	0 R29 K23 ; if R29 ~= 1.000000 then PC := 292
	289	[5926]	JMP      	292 ; PC := 292
	290	[5927]	MOVE     	R14 R20 ; R14 := R20
	291	[5927]	JMP      	306 ; PC := 306
	292	[5928]	GETUPVAL 	R29 U4 ; R29 := U4
	293	[5928]	GETTABLE 	R29 R29 R28 ; R29 := R29[R28]
	294	[5928]	GETTABLE 	R29 R29 K46 ; R29 := R29["layer"]
	295	[5928]	EQ       	0 R29 K47 ; if R29 ~= 2.000000 then PC := 306
	296	[5928]	JMP      	306 ; PC := 306
	297	[5929]	MOVE     	R14 R21 ; R14 := R21
	298	[5930]	GETGLOBAL	R29 K40 ; R29 := 0xae91e43b
	299	[5930]	SELF     	R29 R29 K48 ; R30 := R29; R29 := R29[0x9621a812]
	300	[5930]	GETUPVAL 	R31 U4 ; R31 := U4
	301	[5930]	GETTABLE 	R31 R31 R28 ; R31 := R31[R28]
	302	[5930]	GETTABLE 	R31 R31 K44 ; R31 := R31["memberIndex"]
	303	[5930]	MOVE     	R32 R22 ; R32 := R22
	304	[5930]	MOVE     	R33 R22 ; R33 := R22
	305	[5930]	CALL     	R29 5 1 ; R29(R30,R31,R32,R33)
	306	[5933]	GETGLOBAL	R29 K40 ; R29 := 0xae91e43b
	307	[5933]	SELF     	R29 R29 K49 ; R30 := R29; R29 := R29[0xcd12f3f1]
	308	[5933]	GETUPVAL 	R31 U4 ; R31 := U4
	309	[5933]	GETTABLE 	R31 R31 R28 ; R31 := R31[R28]
	310	[5933]	GETTABLE 	R31 R31 K44 ; R31 := R31["memberIndex"]
	311	[5933]	LOADK    	R32 := 10.000000
	312	[5933]	MOVE     	R33 R14 ; R33 := R14
	313	[5933]	CALL     	R29 5 1 ; R29(R30,R31,R32,R33)
	314	[5919]	FORLOOP  	R25 259 ; R25 += R27; if R25 <= R26 then begin PC := 259; R28 := R25 end
	315	[5938]	GETGLOBAL	R29 K33 ; R29 := 0x42dcc9f5
	316	[5938]	MOVE     	R30 R2 ; R30 := R2
	317	[5938]	GETUPVAL 	R31 U3 ; R31 := U3
	318	[5938]	GETTABLE 	R31 R31 K50 ; R31 := R31["LAYER_2_RANGE"]
	319	[5938]	GETTABLE 	R31 R31 K35 ; R31 := R31["minValue"]
	320	[5938]	GETUPVAL 	R32 U3 ; R32 := U3
	321	[5938]	GETTABLE 	R32 R32 K50 ; R32 := R32["LAYER_2_RANGE"]
	322	[5938]	GETTABLE 	R32 R32 K36 ; R32 := R32["maxValue"]
	323	[5938]	CALL     	R29 4 2 ; R29 := R29(R30,R31,R32)
	324	[5938]	MOVE     	R15 R29 ; R15 := R29
	325	[5939]	GETGLOBAL	R29 K51 ; R29 := mNodeAlphaValues
	326	[5939]	GETTABLE 	R29 R29 K52 ; R29 := R29["NodeLayerAlpha"]
	327	[5940]	GETGLOBAL	R30 K38 ; R30 := 0x9bafffe3
	328	[5940]	LOADK    	R31 := 0.000000
	329	[5940]	LOADK    	R32 := 100.000000
	330	[5940]	GETUPVAL 	R33 U3 ; R33 := U3
	331	[5940]	GETTABLE 	R33 R33 K50 ; R33 := R33["LAYER_2_RANGE"]
	332	[5940]	SELF     	R33 R33 K37 ; R34 := R33; R33 := R33[0x3b93153d]
	333	[5940]	MOVE     	R35 R15 ; R35 := R15
	334	[5940]	CALL     	R33 3 0 ; R33,... := R33(R34,R35)
	335	[5940]	CALL     	R30 0 2 ; R30 := R30(R31,...)
	336	[5941]	GETGLOBAL	R31 K51 ; R31 := mNodeAlphaValues
	337	[5941]	GETTABLE 	R31 R31 K53 ; R31 := R31["MinNodeAlphaToClick"]
	338	[5941]	LT       	0 R31 R29 ; if R31 >= R29 then PC := 353
	339	[5941]	JMP      	353 ; PC := 353
	340	[5941]	GETGLOBAL	R31 K51 ; R31 := mNodeAlphaValues
	341	[5941]	GETTABLE 	R31 R31 K53 ; R31 := R31["MinNodeAlphaToClick"]
	342	[5941]	LE       	0 R30 R31 ; if R30 > R31 then PC := 353
	343	[5941]	JMP      	353 ; PC := 353
	344	[5942]	GETUPVAL 	R31 U5 ; R31 := U5
	345	[5942]	CALL     	R31 1 1 ; R31()
	346	[5943]	GETGLOBAL	R31 K40 ; R31 := 0xae91e43b
	347	[5943]	SELF     	R31 R31 K54 ; R32 := R31; R31 := R31[0x0c33ebb2]
	348	[5943]	LOADK    	R33 K55 ; R33 := "Nodes"
	349	[5943]	LOADK    	R34 K56 ; R34 := "noMenuSelection"
	350	[5943]	OP_LOADBOOL	R35 1 0 ; R35 := true
	351	[5943]	CALL     	R31 5 1 ; R31(R32,R33,R34,R35)
	352	[5943]	JMP      	367 ; PC := 367
	353	[5944]	GETGLOBAL	R31 K51 ; R31 := mNodeAlphaValues
	354	[5944]	GETTABLE 	R31 R31 K53 ; R31 := R31["MinNodeAlphaToClick"]
	355	[5944]	LE       	0 R29 R31 ; if R29 > R31 then PC := 367
	356	[5944]	JMP      	367 ; PC := 367
	357	[5944]	GETGLOBAL	R31 K51 ; R31 := mNodeAlphaValues
	358	[5944]	GETTABLE 	R31 R31 K53 ; R31 := R31["MinNodeAlphaToClick"]
	359	[5944]	LT       	0 R31 R30 ; if R31 >= R30 then PC := 367
	360	[5944]	JMP      	367 ; PC := 367
	361	[5945]	GETGLOBAL	R31 K40 ; R31 := 0xae91e43b
	362	[5945]	SELF     	R31 R31 K54 ; R32 := R31; R31 := R31[0x0c33ebb2]
	363	[5945]	LOADK    	R33 K55 ; R33 := "Nodes"
	364	[5945]	LOADK    	R34 K56 ; R34 := "noMenuSelection"
	365	[5945]	OP_LOADBOOL	R35 0 0 ; R35 := false
	366	[5945]	CALL     	R31 5 1 ; R31(R32,R33,R34,R35)
	367	[5948]	GETGLOBAL	R31 K51 ; R31 := mNodeAlphaValues
	368	[5948]	SETTABLE 	R31 K52 R30 ; R31["NodeLayerAlpha"] := R30
	369	[5950]	GETUPVAL 	R31 U3 ; R31 := U3
	370	[5950]	GETTABLE 	R31 R31 K50 ; R31 := R31["LAYER_2_RANGE"]
	371	[5950]	SELF     	R31 R31 K37 ; R32 := R31; R31 := R31[0x3b93153d]
	372	[5950]	MOVE     	R33 R15 ; R33 := R15
	373	[5950]	CALL     	R31 3 2 ; R31 := R31(R32,R33)
	374	[5952]	GETGLOBAL	R32 K33 ; R32 := 0x42dcc9f5
	375	[5952]	MOVE     	R33 R2 ; R33 := R2
	376	[5952]	GETUPVAL 	R34 U3 ; R34 := U3
	377	[5952]	GETTABLE 	R34 R34 K57 ; R34 := R34["SHORTCUT_RANGE"]
	378	[5952]	GETTABLE 	R34 R34 K35 ; R34 := R34["minValue"]
	379	[5952]	GETUPVAL 	R35 U3 ; R35 := U3
	380	[5952]	GETTABLE 	R35 R35 K57 ; R35 := R35["SHORTCUT_RANGE"]
	381	[5952]	GETTABLE 	R35 R35 K36 ; R35 := R35["maxValue"]
	382	[5952]	CALL     	R32 4 2 ; R32 := R32(R33,R34,R35)
	383	[5952]	MOVE     	R15 R32 ; R15 := R32
	384	[5953]	GETGLOBAL	R32 K38 ; R32 := 0x9bafffe3
	385	[5953]	LOADK    	R33 := 0.000000
	386	[5953]	LOADK    	R34 := 100.000000
	387	[5953]	GETUPVAL 	R35 U3 ; R35 := U3
	388	[5953]	GETTABLE 	R35 R35 K57 ; R35 := R35["SHORTCUT_RANGE"]
	389	[5953]	SELF     	R35 R35 K37 ; R36 := R35; R35 := R35[0x3b93153d]
	390	[5953]	MOVE     	R37 R15 ; R37 := R15
	391	[5953]	CALL     	R35 3 0 ; R35,... := R35(R36,R37)
	392	[5953]	CALL     	R32 0 2 ; R32 := R32(R33,...)
	393	[5953]	MOVE     	R23 R32 ; R23 := R32
	394	[5955]	GETUPVAL 	R32 U1 ; R32 := U1
	395	[5955]	GETUPVAL 	R33 U2 ; R33 := U2
	396	[5955]	GETTABLE 	R33 R33 K58 ; R33 := R33["EDIT_NODES"]
	397	[5955]	EQ       	1 R32 R33 ; if R32 == R33 then PC := 409
	398	[5955]	JMP      	409 ; PC := 409
	399	[5955]	GETUPVAL 	R32 U1 ; R32 := U1
	400	[5955]	GETUPVAL 	R33 U2 ; R33 := U2
	401	[5955]	GETTABLE 	R33 R33 K59 ; R33 := R33["EDIT_EDGES"]
	402	[5955]	EQ       	1 R32 R33 ; if R32 == R33 then PC := 409
	403	[5955]	JMP      	409 ; PC := 409
	404	[5955]	GETUPVAL 	R32 U1 ; R32 := U1
	405	[5955]	GETUPVAL 	R33 U2 ; R33 := U2
	406	[5955]	GETTABLE 	R33 R33 K60 ; R33 := R33["EDIT_NODE_DECOS"]
	407	[5955]	EQ       	0 R32 R33 ; if R32 ~= R33 then PC := 411
	408	[5955]	JMP      	411 ; PC := 411
	409	[5956]	GETGLOBAL	R32 K51 ; R32 := mNodeAlphaValues
	410	[5956]	SETTABLE 	R32 K52 K61 ; R32["NodeLayerAlpha"] := 100.000000
	411	[5959]	LOADNIL  	R32 R36 ; R32 := R33 := R34 := R35 := R36 := nil
	412	[5962]	GETGLOBAL	R37 K51 ; R37 := mNodeAlphaValues
	413	[5962]	GETTABLE 	R37 R37 K52 ; R37 := R37["NodeLayerAlpha"]
	414	[5962]	LT       	1 K21 R37 ; if 0.000000 < R37 then PC := 428
	415	[5962]	JMP      	428 ; PC := 428
	416	[5962]	GETGLOBAL	R37 K51 ; R37 := mNodeAlphaValues
	417	[5962]	GETTABLE 	R37 R37 K52 ; R37 := R37["NodeLayerAlpha"]
	418	[5962]	LT       	1 K21 R37 ; if 0.000000 < R37 then PC := 421
	419	[5962]	JMP      	421 ; PC := 421
	420	[5962]	OP_LOADBOOL	R37 0 1 ; R37 := false; PC := 421
	421	[5962]	OP_LOADBOOL	R37 1 0 ; R37 := true
	422	[5962]	LT       	1 K21 R29 ; if 0.000000 < R29 then PC := 425
	423	[5962]	JMP      	425 ; PC := 425
	424	[5962]	OP_LOADBOOL	R38 0 1 ; R38 := false; PC := 425
	425	[5962]	OP_LOADBOOL	R38 1 0 ; R38 := true
	426	[5962]	EQ       	0 R37 R38 ; if R37 ~= R38 then PC := 428
	427	[5962]	JMP      	428 ; PC := 428
	428	[5963]	LOADK    	R37 := 1.000000
	429	[5963]	GETUPVAL 	R38 U6 ; R38 := U6
	430	[5963]	LEN      	R38 R38 ; R38 := # R38
	431	[5963]	LOADK    	R39 := 1.000000
	432	[5963]	FORPREP  	R37 838 ; R37 -= R39; PC := 838
	433	[5964]	GETGLOBAL	R41 K62 ; R41 := 0xce225efa
	434	[5964]	CALL     	R41 1 1 ; R41()
	435	[5966]	GETUPVAL 	R41 U6 ; R41 := U6
	436	[5966]	GETTABLE 	R41 R41 R40 ; R41 := R41[R40]
	437	[5967]	GETTABLE 	R42 R41 K63 ; R42 := R41["radialSector"]
	438	[5969]	TEST     	R4 1 ; if R4 then PC := 444
	439	[5969]	JMP      	444 ; PC := 444
	440	[5969]	TEST     	R3 1 ; if R3 then PC := 444
	441	[5969]	JMP      	444 ; PC := 444
	442	[5969]	TEST     	R0 0 ; if not R0 then PC := 584
	443	[5969]	JMP      	584 ; PC := 584
	444	[5970]	GETTABLE 	R33 R41 K64 ; R33 := R41["position"]
	445	[5972]	GETGLOBAL	R43 K40 ; R43 := 0xae91e43b
	446	[5972]	SELF     	R43 R43 K41 ; R44 := R43; R43 := R43[0xb9ad3599]
	447	[5972]	MOVE     	R45 R16 ; R45 := R16
	448	[5972]	MOVE     	R46 R33 ; R46 := R33
	449	[5972]	OP_LOADBOOL	R47 1 0 ; R47 := true
	450	[5972]	GETUPVAL 	R48 U7 ; R48 := U7
	451	[5972]	CALL     	R43 6 1 ; R43(R44,R45,R46,R47,R48)
	452	[5973]	GETGLOBAL	R43 K40 ; R43 := 0xae91e43b
	453	[5973]	SELF     	R43 R43 K43 ; R44 := R43; R43 := R43[0xd38cedf3]
	454	[5973]	GETTABLE 	R45 R41 K44 ; R45 := R41["memberIndex"]
	455	[5973]	GETTABLE 	R46 R16 K7 ; R46 := R16["x"]
	456	[5973]	GETTABLE 	R47 R16 K10 ; R47 := R16["y"]
	457	[5973]	CALL     	R43 5 1 ; R43(R44,R45,R46,R47)
	458	[5975]	GETGLOBAL	R43 K38 ; R43 := 0x9bafffe3
	459	[5975]	LOADK    	R44 := 20.000000
	460	[5975]	LOADK    	R45 := 50.000000
	461	[5975]	MOVE     	R46 R31 ; R46 := R31
	462	[5975]	CALL     	R43 4 2 ; R43 := R43(R44,R45,R46)
	463	[5975]	MOVE     	R32 R43 ; R32 := R43
	464	[5976]	GETTABLE 	R43 R41 K65 ; R43 := R41["isSurfaceNode"]
	465	[5976]	TEST     	R43 0 ; if not R43 then PC := 559
	466	[5976]	JMP      	559 ; PC := 559
	467	[5977]	LOADK    	R34 := 100.000000
	468	[5978]	GETTABLE 	R35 R33 K30 ; R35 := R33["z"]
	469	[5979]	MUL      	R35 R35 K45 ; R35 := R35 * 10.000000
	470	[5980]	LE       	0 K21 R35 ; if 0.000000 > R35 then PC := 487
	471	[5980]	JMP      	487 ; PC := 487
	472	[5981]	GETGLOBAL	R43 K38 ; R43 := 0x9bafffe3
	473	[5981]	LOADK    	R44 := 75.000000
	474	[5981]	LOADK    	R45 := 50.000000
	475	[5981]	GETGLOBAL	R46 K33 ; R46 := 0x42dcc9f5
	476	[5981]	GETGLOBAL	R47 K66 ; R47 := 0x5bced4c4
	477	[5981]	GETTABLE 	R47 R47 K67 ; R47 := R47[0xa40531d8]
	478	[5981]	MOVE     	R48 R35 ; R48 := R35
	479	[5981]	LOADK    	R49 := 3.000000
	480	[5981]	CALL     	R47 3 2 ; R47 := R47(R48,R49)
	481	[5981]	LOADK    	R48 := 0.000000
	482	[5981]	LOADK    	R49 := 1.000000
	483	[5981]	CALL     	R46 4 0 ; R46,... := R46(R47,R48,R49)
	484	[5981]	CALL     	R43 0 2 ; R43 := R43(R44,...)
	485	[5981]	MOVE     	R34 R43 ; R34 := R43
	486	[5981]	JMP      	504 ; PC := 504
	487	[5983]	GETGLOBAL	R43 K38 ; R43 := 0x9bafffe3
	488	[5983]	LOADK    	R44 := 75.000000
	489	[5983]	LOADK    	R45 := 100.000000
	490	[5983]	GETGLOBAL	R46 K33 ; R46 := 0x42dcc9f5
	491	[5983]	GETGLOBAL	R47 K66 ; R47 := 0x5bced4c4
	492	[5983]	GETTABLE 	R47 R47 K67 ; R47 := R47[0xa40531d8]
	493	[5983]	GETGLOBAL	R48 K66 ; R48 := 0x5bced4c4
	494	[5983]	GETTABLE 	R48 R48 K68 ; R48 := R48[0xe4a5b3ca]
	495	[5983]	MOVE     	R49 R35 ; R49 := R35
	496	[5983]	CALL     	R48 2 2 ; R48 := R48(R49)
	497	[5983]	LOADK    	R49 := 3.000000
	498	[5983]	CALL     	R47 3 2 ; R47 := R47(R48,R49)
	499	[5983]	LOADK    	R48 := 0.000000
	500	[5983]	LOADK    	R49 := 1.000000
	501	[5983]	CALL     	R46 4 0 ; R46,... := R46(R47,R48,R49)
	502	[5983]	CALL     	R43 0 2 ; R43 := R43(R44,...)
	503	[5983]	MOVE     	R34 R43 ; R34 := R43
	504	[5986]	GETGLOBAL	R43 K69 ; R43 := mRegionInstances
	505	[5986]	GETTABLE 	R44 R42 K70 ; R44 := R42["region"]
	506	[5986]	ADD      	R44 R44 K23 ; R44 := R44 + 1.000000
	507	[5986]	GETTABLE 	R36 R43 R44 ; R36 := R43[R44]
	508	[5988]	GETGLOBAL	R43 K26 ; R43 := 0x7b998233
	509	[5988]	MOVE     	R44 R36 ; R44 := R36
	510	[5988]	CALL     	R43 2 2 ; R43 := R43(R44)
	511	[5988]	TEST     	R43 1 ; if R43 then PC := 542
	512	[5988]	JMP      	542 ; PC := 542
	513	[5988]	GETTABLE 	R43 R41 K71 ; R43 := R41["newWarMode"]
	514	[5988]	TEST     	R43 1 ; if R43 then PC := 542
	515	[5988]	JMP      	542 ; PC := 542
	516	[5989]	SELF     	R43 R36 K72 ; R44 := R36; R43 := R36[0x4078bbf8]
	517	[5989]	MOVE     	R45 R17 ; R45 := R17
	518	[5989]	CALL     	R43 3 1 ; R43(R44,R45)
	519	[5990]	GETGLOBAL	R43 K73 ; R43 := 0x83ddcc65
	520	[5990]	MOVE     	R44 R19 ; R44 := R19
	521	[5990]	MOVE     	R45 R33 ; R45 := R33
	522	[5990]	MOVE     	R46 R17 ; R46 := R17
	523	[5990]	CALL     	R43 4 1 ; R43(R44,R45,R46)
	524	[5991]	GETGLOBAL	R43 K74 ; R43 := 0x83a41541
	525	[5991]	MOVE     	R44 R18 ; R44 := R18
	526	[5991]	MOVE     	R45 R1 ; R45 := R1
	527	[5991]	MOVE     	R46 R19 ; R46 := R19
	528	[5991]	CALL     	R43 4 1 ; R43(R44,R45,R46)
	529	[5992]	GETTABLE 	R43 R18 K75 ; R43 := R18["heading"]
	530	[5992]	UNM      	R43 R43 ; R43 := ^ R43
	531	[5992]	SUB      	R43 R43 K76 ; R43 := R43 - 180.000000
	532	[5992]	SETTABLE 	R18 K75 R43 ; R18["heading"] := R43
	533	[5993]	GETGLOBAL	R43 K33 ; R43 := 0x42dcc9f5
	534	[5993]	GETTABLE 	R44 R18 K77 ; R44 := R18["pitch"]
	535	[5993]	MUL      	R44 R44 K78 ; R44 := R44 * 0.750000
	536	[5993]	LOADK    	R45 := -75.000000
	537	[5993]	LOADK    	R46 := 75.000000
	538	[5993]	CALL     	R43 4 2 ; R43 := R43(R44,R45,R46)
	539	[5993]	MUL      	R43 R43 K79 ; R43 := R43 * -1.000000
	540	[5993]	SETTABLE 	R18 K77 R43 ; R18["pitch"] := R43
	541	[5993]	JMP      	544 ; PC := 544
	542	[5995]	SETTABLE 	R18 K75 K21 ; R18["heading"] := 0.000000
	543	[5996]	SETTABLE 	R18 K77 K21 ; R18["pitch"] := 0.000000
	544	[5999]	GETGLOBAL	R43 K40 ; R43 := 0xae91e43b
	545	[5999]	SELF     	R43 R43 K80 ; R44 := R43; R43 := R43[0xf64b7262]
	546	[5999]	GETTABLE 	R45 R41 K81 ; R45 := R41["clipName"]
	547	[5999]	LOADK    	R46 K82 ; R46 := "Node.Container"
	548	[5999]	LOADK    	R47 := 15.000000
	549	[5999]	GETTABLE 	R48 R18 K75 ; R48 := R18["heading"]
	550	[5999]	CALL     	R43 6 1 ; R43(R44,R45,R46,R47,R48)
	551	[6000]	GETGLOBAL	R43 K40 ; R43 := 0xae91e43b
	552	[6000]	SELF     	R43 R43 K80 ; R44 := R43; R43 := R43[0xf64b7262]
	553	[6000]	GETTABLE 	R45 R41 K81 ; R45 := R41["clipName"]
	554	[6000]	LOADK    	R46 K82 ; R46 := "Node.Container"
	555	[6000]	LOADK    	R47 := 16.000000
	556	[6000]	GETTABLE 	R48 R18 K77 ; R48 := R18["pitch"]
	557	[6000]	CALL     	R43 6 1 ; R43(R44,R45,R46,R47,R48)
	558	[6000]	JMP      	578 ; PC := 578
	559	[6001]	GETUPVAL 	R43 U1 ; R43 := U1
	560	[6001]	GETUPVAL 	R44 U2 ; R44 := U2
	561	[6001]	GETTABLE 	R44 R44 K25 ; R44 := R44["READ_ONLY"]
	562	[6001]	EQ       	1 R43 R44 ; if R43 == R44 then PC := 578
	563	[6001]	JMP      	578 ; PC := 578
	564	[6002]	GETGLOBAL	R43 K40 ; R43 := 0xae91e43b
	565	[6002]	SELF     	R43 R43 K80 ; R44 := R43; R43 := R43[0xf64b7262]
	566	[6002]	GETTABLE 	R45 R41 K81 ; R45 := R41["clipName"]
	567	[6002]	LOADK    	R46 K82 ; R46 := "Node.Container"
	568	[6002]	LOADK    	R47 := 15.000000
	569	[6002]	LOADK    	R48 := 0.000000
	570	[6002]	CALL     	R43 6 1 ; R43(R44,R45,R46,R47,R48)
	571	[6003]	GETGLOBAL	R43 K40 ; R43 := 0xae91e43b
	572	[6003]	SELF     	R43 R43 K80 ; R44 := R43; R43 := R43[0xf64b7262]
	573	[6003]	GETTABLE 	R45 R41 K81 ; R45 := R41["clipName"]
	574	[6003]	LOADK    	R46 K82 ; R46 := "Node.Container"
	575	[6003]	LOADK    	R47 := 16.000000
	576	[6003]	LOADK    	R48 := 0.000000
	577	[6003]	CALL     	R43 6 1 ; R43(R44,R45,R46,R47,R48)
	578	[6006]	GETGLOBAL	R43 K40 ; R43 := 0xae91e43b
	579	[6006]	SELF     	R43 R43 K48 ; R44 := R43; R43 := R43[0x9621a812]
	580	[6006]	GETTABLE 	R45 R41 K83 ; R45 := R41["nodeIndex"]
	581	[6006]	MOVE     	R46 R32 ; R46 := R32
	582	[6006]	MOVE     	R47 R32 ; R47 := R32
	583	[6006]	CALL     	R43 5 1 ; R43(R44,R45,R46,R47)
	584	[6009]	GETGLOBAL	R43 K84 ; R43 := 0x34291f5c
	585	[6009]	GETTABLE 	R43 R43 K85 ; R43 := R43[0xe6b41adb]
	586	[6009]	CALL     	R43 1 2 ; R43 := R43()
	587	[6009]	TEST     	R43 1 ; if R43 then PC := 672
	588	[6009]	JMP      	672 ; PC := 672
	589	[6010]	GETGLOBAL	R43 K86 ; R43 := _T
	590	[6010]	GETTABLE 	R43 R43 K87 ; R43 := R43["MouseInWorldStateWindow"]
	591	[6010]	TEST     	R43 1 ; if R43 then PC := 617
	592	[6010]	JMP      	617 ; PC := 617
	593	[6010]	GETGLOBAL	R43 K86 ; R43 := _T
	594	[6010]	GETTABLE 	R43 R43 K88 ; R43 := R43["gPendingMission"]
	595	[6010]	EQ       	0 R43 K19 ; if R43 ~= nil then PC := 617
	596	[6010]	JMP      	617 ; PC := 617
	597	[6010]	GETGLOBAL	R43 K12 ; R43 := mHover
	598	[6010]	GETTABLE 	R43 R43 K14 ; R43 := R43["Node"]
	599	[6010]	EQ       	1 R43 K19 ; if R43 == nil then PC := 607
	600	[6010]	JMP      	607 ; PC := 607
	601	[6010]	GETGLOBAL	R43 K12 ; R43 := mHover
	602	[6010]	GETTABLE 	R43 R43 K14 ; R43 := R43["Node"]
	603	[6010]	GETTABLE 	R43 R43 K83 ; R43 := R43["nodeIndex"]
	604	[6010]	GETTABLE 	R44 R41 K83 ; R44 := R41["nodeIndex"]
	605	[6010]	EQ       	0 R43 R44 ; if R43 ~= R44 then PC := 617
	606	[6010]	JMP      	617 ; PC := 617
	607	[6010]	GETGLOBAL	R43 K15 ; R43 := mPreviousNodeDuck
	608	[6010]	GETTABLE 	R43 R43 K14 ; R43 := R43["Node"]
	609	[6010]	EQ       	1 R43 K19 ; if R43 == nil then PC := 617
	610	[6010]	JMP      	617 ; PC := 617
	611	[6010]	GETGLOBAL	R43 K15 ; R43 := mPreviousNodeDuck
	612	[6010]	GETTABLE 	R43 R43 K14 ; R43 := R43["Node"]
	613	[6010]	GETTABLE 	R43 R43 K83 ; R43 := R43["nodeIndex"]
	614	[6010]	GETTABLE 	R44 R41 K83 ; R44 := R41["nodeIndex"]
	615	[6010]	EQ       	1 R43 R44 ; if R43 == R44 then PC := 630
	616	[6010]	JMP      	630 ; PC := 630
	617	[6011]	GETGLOBAL	R43 K86 ; R43 := _T
	618	[6011]	GETTABLE 	R43 R43 K88 ; R43 := R43["gPendingMission"]
	619	[6011]	EQ       	1 R43 K19 ; if R43 == nil then PC := 638
	620	[6011]	JMP      	638 ; PC := 638
	621	[6011]	GETTABLE 	R43 R41 K63 ; R43 := R41["radialSector"]
	622	[6011]	EQ       	1 R43 K19 ; if R43 == nil then PC := 638
	623	[6011]	JMP      	638 ; PC := 638
	624	[6011]	GETGLOBAL	R43 K86 ; R43 := _T
	625	[6011]	GETTABLE 	R43 R43 K88 ; R43 := R43["gPendingMission"]
	626	[6011]	GETTABLE 	R43 R43 K89 ; R43 := R43["baseNodeName"]
	627	[6011]	GETTABLE 	R44 R42 K90 ; R44 := R42["name"]
	628	[6011]	EQ       	0 R43 R44 ; if R43 ~= R44 then PC := 638
	629	[6011]	JMP      	638 ; PC := 638
	630	[6012]	GETGLOBAL	R43 K40 ; R43 := 0xae91e43b
	631	[6012]	SELF     	R43 R43 K49 ; R44 := R43; R43 := R43[0xcd12f3f1]
	632	[6012]	GETTABLE 	R45 R41 K44 ; R45 := R41["memberIndex"]
	633	[6012]	LOADK    	R46 := 10.000000
	634	[6012]	GETGLOBAL	R47 K51 ; R47 := mNodeAlphaValues
	635	[6012]	GETTABLE 	R47 R47 K52 ; R47 := R47["NodeLayerAlpha"]
	636	[6012]	CALL     	R43 5 1 ; R43(R44,R45,R46,R47)
	637	[6012]	JMP      	793 ; PC := 793
	638	[6013]	EQ       	1 R7 K19 ; if R7 == nil then PC := 660
	639	[6013]	JMP      	660 ; PC := 660
	640	[6013]	GETTABLE 	R43 R41 K91 ; R43 := R41["isShortcut"]
	641	[6013]	TEST     	R43 0 ; if not R43 then PC := 660
	642	[6013]	JMP      	660 ; PC := 660
	643	[6013]	GETTABLE 	R43 R42 K70 ; R43 := R42["region"]
	644	[6013]	EQ       	0 R43 R7 ; if R43 ~= R7 then PC := 660
	645	[6013]	JMP      	660 ; PC := 660
	646	[6014]	GETGLOBAL	R43 K40 ; R43 := 0xae91e43b
	647	[6014]	SELF     	R43 R43 K49 ; R44 := R43; R43 := R43[0xcd12f3f1]
	648	[6014]	GETTABLE 	R45 R41 K44 ; R45 := R41["memberIndex"]
	649	[6014]	LOADK    	R46 := 10.000000
	650	[6014]	GETGLOBAL	R47 K38 ; R47 := 0x9bafffe3
	651	[6014]	GETGLOBAL	R48 K51 ; R48 := mNodeAlphaValues
	652	[6014]	GETTABLE 	R48 R48 K52 ; R48 := R48["NodeLayerAlpha"]
	653	[6014]	MOVE     	R49 R23 ; R49 := R23
	654	[6014]	GETGLOBAL	R50 K24 ; R50 := mRegionConnectionsDuck
	655	[6014]	SELF     	R50 R50 K9 ; R51 := R50; R50 := R50[0x54ab95f9]
	656	[6014]	CALL     	R50 2 0 ; R50,... := R50(R51)
	657	[6014]	CALL     	R47 0 0 ; R47,... := R47(R48,...)
	658	[6014]	CALL     	R43 0 1 ; R43(R44,...)
	659	[6014]	JMP      	793 ; PC := 793
	660	[6016]	GETGLOBAL	R43 K40 ; R43 := 0xae91e43b
	661	[6016]	SELF     	R43 R43 K49 ; R44 := R43; R43 := R43[0xcd12f3f1]
	662	[6016]	GETTABLE 	R45 R41 K44 ; R45 := R41["memberIndex"]
	663	[6016]	LOADK    	R46 := 10.000000
	664	[6016]	GETGLOBAL	R47 K17 ; R47 := mNodeDuck
	665	[6016]	SELF     	R47 R47 K9 ; R48 := R47; R47 := R47[0x54ab95f9]
	666	[6016]	CALL     	R47 2 2 ; R47 := R47(R48)
	667	[6016]	GETGLOBAL	R48 K51 ; R48 := mNodeAlphaValues
	668	[6016]	GETTABLE 	R48 R48 K52 ; R48 := R48["NodeLayerAlpha"]
	669	[6016]	MUL      	R47 R47 R48 ; R47 := R47 * R48
	670	[6016]	CALL     	R43 5 1 ; R43(R44,R45,R46,R47)
	671	[6017]	JMP      	793 ; PC := 793
	672	[6019]	GETUPVAL 	R43 U8 ; R43 := U8
	673	[6019]	GETTABLE 	R43 R43 K92 ; R43 := R43["mNodeVisible"]
	674	[6019]	TEST     	R43 0 ; if not R43 then PC := 687
	675	[6019]	JMP      	687 ; PC := 687
	676	[6019]	GETGLOBAL	R43 K12 ; R43 := mHover
	677	[6019]	GETTABLE 	R43 R43 K14 ; R43 := R43["Node"]
	678	[6019]	EQ       	1 R41 R43 ; if R41 == R43 then PC := 687
	679	[6019]	JMP      	687 ; PC := 687
	680	[6021]	GETGLOBAL	R43 K40 ; R43 := 0xae91e43b
	681	[6021]	SELF     	R43 R43 K49 ; R44 := R43; R43 := R43[0xcd12f3f1]
	682	[6021]	GETTABLE 	R45 R41 K44 ; R45 := R41["memberIndex"]
	683	[6021]	LOADK    	R46 := 10.000000
	684	[6021]	LOADK    	R47 := 0.000000
	685	[6021]	CALL     	R43 5 1 ; R43(R44,R45,R46,R47)
	686	[6021]	JMP      	793 ; PC := 793
	687	[6023]	GETGLOBAL	R43 K86 ; R43 := _T
	688	[6023]	GETTABLE 	R43 R43 K87 ; R43 := R43["MouseInWorldStateWindow"]
	689	[6023]	TEST     	R43 1 ; if R43 then PC := 715
	690	[6023]	JMP      	715 ; PC := 715
	691	[6023]	GETGLOBAL	R43 K86 ; R43 := _T
	692	[6023]	GETTABLE 	R43 R43 K88 ; R43 := R43["gPendingMission"]
	693	[6023]	EQ       	0 R43 K19 ; if R43 ~= nil then PC := 715
	694	[6023]	JMP      	715 ; PC := 715
	695	[6023]	GETGLOBAL	R43 K12 ; R43 := mHover
	696	[6023]	GETTABLE 	R43 R43 K14 ; R43 := R43["Node"]
	697	[6023]	EQ       	1 R43 K19 ; if R43 == nil then PC := 705
	698	[6023]	JMP      	705 ; PC := 705
	699	[6023]	GETGLOBAL	R43 K12 ; R43 := mHover
	700	[6023]	GETTABLE 	R43 R43 K14 ; R43 := R43["Node"]
	701	[6023]	GETTABLE 	R43 R43 K83 ; R43 := R43["nodeIndex"]
	702	[6023]	GETTABLE 	R44 R41 K83 ; R44 := R41["nodeIndex"]
	703	[6023]	EQ       	0 R43 R44 ; if R43 ~= R44 then PC := 715
	704	[6023]	JMP      	715 ; PC := 715
	705	[6023]	GETGLOBAL	R43 K15 ; R43 := mPreviousNodeDuck
	706	[6023]	GETTABLE 	R43 R43 K14 ; R43 := R43["Node"]
	707	[6023]	EQ       	1 R43 K19 ; if R43 == nil then PC := 715
	708	[6023]	JMP      	715 ; PC := 715
	709	[6023]	GETGLOBAL	R43 K15 ; R43 := mPreviousNodeDuck
	710	[6023]	GETTABLE 	R43 R43 K14 ; R43 := R43["Node"]
	711	[6023]	GETTABLE 	R43 R43 K83 ; R43 := R43["nodeIndex"]
	712	[6023]	GETTABLE 	R44 R41 K83 ; R44 := R41["nodeIndex"]
	713	[6023]	EQ       	1 R43 R44 ; if R43 == R44 then PC := 728
	714	[6023]	JMP      	728 ; PC := 728
	715	[6024]	GETGLOBAL	R43 K86 ; R43 := _T
	716	[6024]	GETTABLE 	R43 R43 K88 ; R43 := R43["gPendingMission"]
	717	[6024]	EQ       	1 R43 K19 ; if R43 == nil then PC := 736
	718	[6024]	JMP      	736 ; PC := 736
	719	[6024]	GETTABLE 	R43 R41 K63 ; R43 := R41["radialSector"]
	720	[6024]	EQ       	1 R43 K19 ; if R43 == nil then PC := 736
	721	[6024]	JMP      	736 ; PC := 736
	722	[6024]	GETGLOBAL	R43 K86 ; R43 := _T
	723	[6024]	GETTABLE 	R43 R43 K88 ; R43 := R43["gPendingMission"]
	724	[6024]	GETTABLE 	R43 R43 K89 ; R43 := R43["baseNodeName"]
	725	[6024]	GETTABLE 	R44 R42 K90 ; R44 := R42["name"]
	726	[6024]	EQ       	0 R43 R44 ; if R43 ~= R44 then PC := 736
	727	[6024]	JMP      	736 ; PC := 736
	728	[6025]	GETGLOBAL	R43 K40 ; R43 := 0xae91e43b
	729	[6025]	SELF     	R43 R43 K49 ; R44 := R43; R43 := R43[0xcd12f3f1]
	730	[6025]	GETTABLE 	R45 R41 K44 ; R45 := R41["memberIndex"]
	731	[6025]	LOADK    	R46 := 10.000000
	732	[6025]	GETGLOBAL	R47 K51 ; R47 := mNodeAlphaValues
	733	[6025]	GETTABLE 	R47 R47 K52 ; R47 := R47["NodeLayerAlpha"]
	734	[6025]	CALL     	R43 5 1 ; R43(R44,R45,R46,R47)
	735	[6025]	JMP      	793 ; PC := 793
	736	[6026]	EQ       	1 R7 K19 ; if R7 == nil then PC := 771
	737	[6026]	JMP      	771 ; PC := 771
	738	[6026]	GETTABLE 	R43 R41 K91 ; R43 := R41["isShortcut"]
	739	[6026]	TEST     	R43 0 ; if not R43 then PC := 771
	740	[6026]	JMP      	771 ; PC := 771
	741	[6026]	GETTABLE 	R43 R42 K70 ; R43 := R42["region"]
	742	[6026]	EQ       	0 R43 R7 ; if R43 ~= R7 then PC := 771
	743	[6026]	JMP      	771 ; PC := 771
	744	[6027]	GETGLOBAL	R43 K40 ; R43 := 0xae91e43b
	745	[6027]	SELF     	R43 R43 K49 ; R44 := R43; R43 := R43[0xcd12f3f1]
	746	[6027]	GETTABLE 	R45 R41 K93 ; R45 := R41["labelIndex"]
	747	[6027]	LOADK    	R46 := 10.000000
	748	[6027]	GETGLOBAL	R47 K38 ; R47 := 0x9bafffe3
	749	[6027]	GETGLOBAL	R48 K51 ; R48 := mNodeAlphaValues
	750	[6027]	GETTABLE 	R48 R48 K52 ; R48 := R48["NodeLayerAlpha"]
	751	[6027]	MOVE     	R49 R23 ; R49 := R23
	752	[6027]	GETGLOBAL	R50 K24 ; R50 := mRegionConnectionsDuck
	753	[6027]	SELF     	R50 R50 K9 ; R51 := R50; R50 := R50[0x54ab95f9]
	754	[6027]	CALL     	R50 2 0 ; R50,... := R50(R51)
	755	[6027]	CALL     	R47 0 0 ; R47,... := R47(R48,...)
	756	[6027]	CALL     	R43 0 1 ; R43(R44,...)
	757	[6028]	GETGLOBAL	R43 K40 ; R43 := 0xae91e43b
	758	[6028]	SELF     	R43 R43 K49 ; R44 := R43; R43 := R43[0xcd12f3f1]
	759	[6028]	GETTABLE 	R45 R41 K44 ; R45 := R41["memberIndex"]
	760	[6028]	LOADK    	R46 := 10.000000
	761	[6028]	GETGLOBAL	R47 K38 ; R47 := 0x9bafffe3
	762	[6028]	GETGLOBAL	R48 K51 ; R48 := mNodeAlphaValues
	763	[6028]	GETTABLE 	R48 R48 K52 ; R48 := R48["NodeLayerAlpha"]
	764	[6028]	MOVE     	R49 R23 ; R49 := R23
	765	[6028]	GETGLOBAL	R50 K24 ; R50 := mRegionConnectionsDuck
	766	[6028]	SELF     	R50 R50 K9 ; R51 := R50; R50 := R50[0x54ab95f9]
	767	[6028]	CALL     	R50 2 0 ; R50,... := R50(R51)
	768	[6028]	CALL     	R47 0 0 ; R47,... := R47(R48,...)
	769	[6028]	CALL     	R43 0 1 ; R43(R44,...)
	770	[6028]	JMP      	793 ; PC := 793
	771	[6030]	GETGLOBAL	R43 K40 ; R43 := 0xae91e43b
	772	[6030]	SELF     	R43 R43 K49 ; R44 := R43; R43 := R43[0xcd12f3f1]
	773	[6030]	GETTABLE 	R45 R41 K93 ; R45 := R41["labelIndex"]
	774	[6030]	LOADK    	R46 := 10.000000
	775	[6030]	GETGLOBAL	R47 K17 ; R47 := mNodeDuck
	776	[6030]	SELF     	R47 R47 K9 ; R48 := R47; R47 := R47[0x54ab95f9]
	777	[6030]	CALL     	R47 2 2 ; R47 := R47(R48)
	778	[6030]	GETGLOBAL	R48 K51 ; R48 := mNodeAlphaValues
	779	[6030]	GETTABLE 	R48 R48 K52 ; R48 := R48["NodeLayerAlpha"]
	780	[6030]	MUL      	R47 R47 R48 ; R47 := R47 * R48
	781	[6030]	CALL     	R43 5 1 ; R43(R44,R45,R46,R47)
	782	[6031]	GETGLOBAL	R43 K40 ; R43 := 0xae91e43b
	783	[6031]	SELF     	R43 R43 K49 ; R44 := R43; R43 := R43[0xcd12f3f1]
	784	[6031]	GETTABLE 	R45 R41 K44 ; R45 := R41["memberIndex"]
	785	[6031]	LOADK    	R46 := 10.000000
	786	[6031]	GETGLOBAL	R47 K17 ; R47 := mNodeDuck
	787	[6031]	SELF     	R47 R47 K9 ; R48 := R47; R47 := R47[0x54ab95f9]
	788	[6031]	CALL     	R47 2 2 ; R47 := R47(R48)
	789	[6031]	GETGLOBAL	R48 K51 ; R48 := mNodeAlphaValues
	790	[6031]	GETTABLE 	R48 R48 K52 ; R48 := R48["NodeLayerAlpha"]
	791	[6031]	MUL      	R47 R47 R48 ; R47 := R47 * R48
	792	[6031]	CALL     	R43 5 1 ; R43(R44,R45,R46,R47)
	793	[6036]	GETTABLE 	R43 R41 K91 ; R43 := R41["isShortcut"]
	794	[6036]	TEST     	R43 0 ; if not R43 then PC := 804
	795	[6036]	JMP      	804 ; PC := 804
	796	[6037]	GETGLOBAL	R43 K40 ; R43 := 0xae91e43b
	797	[6037]	SELF     	R43 R43 K49 ; R44 := R43; R43 := R43[0xcd12f3f1]
	798	[6037]	GETTABLE 	R45 R41 K93 ; R45 := R41["labelIndex"]
	799	[6037]	LOADK    	R46 := 10.000000
	800	[6037]	GETGLOBAL	R47 K51 ; R47 := mNodeAlphaValues
	801	[6037]	GETTABLE 	R47 R47 K52 ; R47 := R47["NodeLayerAlpha"]
	802	[6037]	CALL     	R43 5 1 ; R43(R44,R45,R46,R47)
	803	[6037]	JMP      	816 ; PC := 816
	804	[6038]	GETGLOBAL	R43 K94 ; R43 := mNewWarMode
	805	[6038]	TEST     	R43 0 ; if not R43 then PC := 816
	806	[6038]	JMP      	816 ; PC := 816
	807	[6038]	GETTABLE 	R43 R41 K71 ; R43 := R41["newWarMode"]
	808	[6038]	TEST     	R43 1 ; if R43 then PC := 816
	809	[6038]	JMP      	816 ; PC := 816
	810	[6039]	GETGLOBAL	R43 K40 ; R43 := 0xae91e43b
	811	[6039]	SELF     	R43 R43 K49 ; R44 := R43; R43 := R43[0xcd12f3f1]
	812	[6039]	GETTABLE 	R45 R41 K93 ; R45 := R41["labelIndex"]
	813	[6039]	LOADK    	R46 := 10.000000
	814	[6039]	LOADK    	R47 := 0.000000
	815	[6039]	CALL     	R43 5 1 ; R43(R44,R45,R46,R47)
	816	[6042]	GETUPVAL 	R43 U1 ; R43 := U1
	817	[6042]	GETUPVAL 	R44 U2 ; R44 := U2
	818	[6042]	GETTABLE 	R44 R44 K58 ; R44 := R44["EDIT_NODES"]
	819	[6042]	EQ       	0 R43 R44 ; if R43 ~= R44 then PC := 838
	820	[6042]	JMP      	838 ; PC := 838
	821	[6042]	GETTABLE 	R43 R41 K95 ; R43 := R41["deco"]
	822	[6042]	EQ       	1 R43 K19 ; if R43 == nil then PC := 838
	823	[6042]	JMP      	838 ; PC := 838
	824	[6042]	GETGLOBAL	R43 K26 ; R43 := 0x7b998233
	825	[6042]	GETTABLE 	R44 R41 K95 ; R44 := R41["deco"]
	826	[6042]	GETTABLE 	R44 R44 K96 ; R44 := R44["mInstance"]
	827	[6042]	CALL     	R43 2 2 ; R43 := R43(R44)
	828	[6042]	TEST     	R43 1 ; if R43 then PC := 838
	829	[6042]	JMP      	838 ; PC := 838
	830	[6043]	GETTABLE 	R43 R41 K95 ; R43 := R41["deco"]
	831	[6043]	GETTABLE 	R43 R43 K96 ; R43 := R43["mInstance"]
	832	[6043]	SELF     	R43 R43 K97 ; R44 := R43; R43 := R43[0x9307aa51]
	833	[6043]	GETTABLE 	R45 R41 K64 ; R45 := R41["position"]
	834	[6043]	GETTABLE 	R46 R41 K95 ; R46 := R41["deco"]
	835	[6043]	GETTABLE 	R46 R46 K98 ; R46 := R46["mOffset"]
	836	[6043]	ADD      	R45 R45 R46 ; R45 := R45 + R46
	837	[6043]	CALL     	R43 3 1 ; R43(R44,R45)
	838	[5963]	FORLOOP  	R37 433 ; R37 += R39; if R37 <= R38 then begin PC := 433; R40 := R37 end
	839	[6048]	LOADNIL  	R43 R46 ; R43 := R44 := R45 := R46 := nil
	840	[6049]	LOADK    	R47 := 1.000000
	841	[6049]	GETGLOBAL	R48 K99 ; R48 := mFlatEdges
	842	[6049]	LEN      	R48 R48 ; R48 := # R48
	843	[6049]	LOADK    	R49 := 1.000000
	844	[6049]	FORPREP  	R47 965 ; R47 -= R49; PC := 965
	845	[6050]	GETGLOBAL	R51 K99 ; R51 := mFlatEdges
	846	[6050]	GETTABLE 	R43 R51 R50 ; R43 := R51[R50]
	847	[6052]	GETGLOBAL	R51 K26 ; R51 := 0x7b998233
	848	[6052]	GETTABLE 	R52 R43 K100 ; R52 := R43["Instance"]
	849	[6052]	CALL     	R51 2 2 ; R51 := R51(R52)
	850	[6052]	TEST     	R51 1 ; if R51 then PC := 965
	851	[6052]	JMP      	965 ; PC := 965
	852	[6053]	GETTABLE 	R51 R43 K101 ; R51 := R43["IsShortcut"]
	853	[6053]	TEST     	R51 1 ; if R51 then PC := 858
	854	[6053]	JMP      	858 ; PC := 858
	855	[6053]	GETTABLE 	R51 R43 K102 ; R51 := R43["IsJunction"]
	856	[6053]	TEST     	R51 0 ; if not R51 then PC := 910
	857	[6053]	JMP      	910 ; PC := 910
	858	[6054]	GETTABLE 	R51 R43 K101 ; R51 := R43["IsShortcut"]
	859	[6054]	TEST     	R51 0 ; if not R51 then PC := 890
	860	[6054]	JMP      	890 ; PC := 890
	861	[6055]	GETUPVAL 	R51 U9 ; R51 := U9
	862	[6055]	GETTABLE 	R52 R43 K103 ; R52 := R43["NodeA"]
	863	[6055]	GETTABLE 	R52 R52 K64 ; R52 := R52["position"]
	864	[6055]	GETTABLE 	R53 R43 K104 ; R53 := R43["controlPointA"]
	865	[6055]	GETTABLE 	R53 R53 K64 ; R53 := R53["position"]
	866	[6055]	CALL     	R51 3 2 ; R51 := R51(R52,R53)
	867	[6055]	MOVE     	R44 R51 ; R44 := R51
	868	[6056]	GETGLOBAL	R51 K40 ; R51 := 0xae91e43b
	869	[6056]	SELF     	R51 R51 K49 ; R52 := R51; R51 := R51[0xcd12f3f1]
	870	[6056]	GETTABLE 	R53 R43 K103 ; R53 := R43["NodeA"]
	871	[6056]	GETTABLE 	R53 R53 K83 ; R53 := R53["nodeIndex"]
	872	[6056]	LOADK    	R54 := 14.000000
	873	[6056]	MOVE     	R55 R44 ; R55 := R44
	874	[6056]	CALL     	R51 5 1 ; R51(R52,R53,R54,R55)
	875	[6057]	GETUPVAL 	R51 U9 ; R51 := U9
	876	[6057]	GETTABLE 	R52 R43 K105 ; R52 := R43["NodeB"]
	877	[6057]	GETTABLE 	R52 R52 K64 ; R52 := R52["position"]
	878	[6057]	GETTABLE 	R53 R43 K106 ; R53 := R43["controlPointB"]
	879	[6057]	GETTABLE 	R53 R53 K64 ; R53 := R53["position"]
	880	[6057]	CALL     	R51 3 2 ; R51 := R51(R52,R53)
	881	[6057]	MOVE     	R44 R51 ; R44 := R51
	882	[6058]	GETGLOBAL	R51 K40 ; R51 := 0xae91e43b
	883	[6058]	SELF     	R51 R51 K49 ; R52 := R51; R51 := R51[0xcd12f3f1]
	884	[6058]	GETTABLE 	R53 R43 K105 ; R53 := R43["NodeB"]
	885	[6058]	GETTABLE 	R53 R53 K83 ; R53 := R53["nodeIndex"]
	886	[6058]	LOADK    	R54 := 14.000000
	887	[6058]	MOVE     	R55 R44 ; R55 := R44
	888	[6058]	CALL     	R51 5 1 ; R51(R52,R53,R54,R55)
	889	[6058]	JMP      	910 ; PC := 910
	890	[6060]	GETTABLE 	R51 R43 K103 ; R51 := R43["NodeA"]
	891	[6060]	GETTABLE 	R51 R51 K107 ; R51 := R51["isJunction"]
	892	[6060]	TEST     	R51 0 ; if not R51 then PC := 897
	893	[6060]	JMP      	897 ; PC := 897
	894	[6061]	GETTABLE 	R45 R43 K103 ; R45 := R43["NodeA"]
	895	[6062]	GETTABLE 	R46 R43 K105 ; R46 := R43["NodeB"]
	896	[6062]	JMP      	899 ; PC := 899
	897	[6064]	GETTABLE 	R45 R43 K105 ; R45 := R43["NodeB"]
	898	[6065]	GETTABLE 	R46 R43 K103 ; R46 := R43["NodeA"]
	899	[6067]	GETUPVAL 	R51 U9 ; R51 := U9
	900	[6067]	GETTABLE 	R52 R45 K64 ; R52 := R45["position"]
	901	[6067]	GETTABLE 	R53 R46 K64 ; R53 := R46["position"]
	902	[6067]	CALL     	R51 3 2 ; R51 := R51(R52,R53)
	903	[6067]	MOVE     	R44 R51 ; R44 := R51
	904	[6068]	GETGLOBAL	R51 K40 ; R51 := 0xae91e43b
	905	[6068]	SELF     	R51 R51 K49 ; R52 := R51; R51 := R51[0xcd12f3f1]
	906	[6068]	GETTABLE 	R53 R45 K83 ; R53 := R45["nodeIndex"]
	907	[6068]	LOADK    	R54 := 14.000000
	908	[6068]	MOVE     	R55 R44 ; R55 := R44
	909	[6068]	CALL     	R51 5 1 ; R51(R52,R53,R54,R55)
	910	[6072]	GETGLOBAL	R51 K86 ; R51 := _T
	911	[6072]	GETTABLE 	R51 R51 K108 ; R51 := R51["CustomStarChartNodeFilter"]
	912	[6072]	EQ       	1 R51 K19 ; if R51 == nil then PC := 921
	913	[6072]	JMP      	921 ; PC := 921
	914	[6073]	GETTABLE 	R51 R43 K100 ; R51 := R43["Instance"]
	915	[6073]	SELF     	R51 R51 K109 ; R52 := R51; R51 := R51[0x986d2ab8]
	916	[6073]	GETUPVAL 	R53 U10 ; R53 := U10
	917	[6073]	GETTABLE 	R53 R53 K110 ; R53 := R53["ALPHA_ATTEN"]
	918	[6073]	LOADK    	R54 := 0.000000
	919	[6073]	CALL     	R51 4 1 ; R51(R52,R53,R54)
	920	[6073]	JMP      	965 ; PC := 965
	921	[6074]	GETTABLE 	R51 R43 K101 ; R51 := R43["IsShortcut"]
	922	[6074]	TEST     	R51 0 ; if not R51 then PC := 953
	923	[6074]	JMP      	953 ; PC := 953
	924	[6074]	GETTABLE 	R51 R43 K103 ; R51 := R43["NodeA"]
	925	[6074]	GETTABLE 	R51 R51 K63 ; R51 := R51["radialSector"]
	926	[6074]	GETTABLE 	R51 R51 K70 ; R51 := R51["region"]
	927	[6074]	EQ       	1 R51 R7 ; if R51 == R7 then PC := 934
	928	[6074]	JMP      	934 ; PC := 934
	929	[6074]	GETTABLE 	R51 R43 K105 ; R51 := R43["NodeB"]
	930	[6074]	GETTABLE 	R51 R51 K63 ; R51 := R51["radialSector"]
	931	[6074]	GETTABLE 	R51 R51 K70 ; R51 := R51["region"]
	932	[6074]	EQ       	0 R51 R7 ; if R51 ~= R7 then PC := 953
	933	[6074]	JMP      	953 ; PC := 953
	934	[6075]	GETTABLE 	R51 R43 K100 ; R51 := R43["Instance"]
	935	[6075]	SELF     	R51 R51 K109 ; R52 := R51; R51 := R51[0x986d2ab8]
	936	[6075]	GETUPVAL 	R53 U10 ; R53 := U10
	937	[6075]	GETTABLE 	R53 R53 K110 ; R53 := R53["ALPHA_ATTEN"]
	938	[6075]	GETGLOBAL	R54 K38 ; R54 := 0x9bafffe3
	939	[6075]	GETGLOBAL	R55 K51 ; R55 := mNodeAlphaValues
	940	[6075]	GETTABLE 	R55 R55 K52 ; R55 := R55["NodeLayerAlpha"]
	941	[6075]	MOVE     	R56 R23 ; R56 := R23
	942	[6075]	GETGLOBAL	R57 K24 ; R57 := mRegionConnectionsDuck
	943	[6075]	SELF     	R57 R57 K9 ; R58 := R57; R57 := R57[0x54ab95f9]
	944	[6075]	CALL     	R57 2 0 ; R57,... := R57(R58)
	945	[6075]	CALL     	R54 0 2 ; R54 := R54(R55,...)
	946	[6075]	DIV      	R54 R54 K61 ; R54 := R54 / 100.000000
	947	[6075]	GETGLOBAL	R55 K17 ; R55 := mNodeDuck
	948	[6075]	SELF     	R55 R55 K9 ; R56 := R55; R55 := R55[0x54ab95f9]
	949	[6075]	CALL     	R55 2 2 ; R55 := R55(R56)
	950	[6075]	MUL      	R54 R54 R55 ; R54 := R54 * R55
	951	[6075]	CALL     	R51 4 1 ; R51(R52,R53,R54)
	952	[6075]	JMP      	965 ; PC := 965
	953	[6077]	GETTABLE 	R51 R43 K100 ; R51 := R43["Instance"]
	954	[6077]	SELF     	R51 R51 K109 ; R52 := R51; R51 := R51[0x986d2ab8]
	955	[6077]	GETUPVAL 	R53 U10 ; R53 := U10
	956	[6077]	GETTABLE 	R53 R53 K110 ; R53 := R53["ALPHA_ATTEN"]
	957	[6077]	GETGLOBAL	R54 K51 ; R54 := mNodeAlphaValues
	958	[6077]	GETTABLE 	R54 R54 K52 ; R54 := R54["NodeLayerAlpha"]
	959	[6077]	DIV      	R54 R54 K61 ; R54 := R54 / 100.000000
	960	[6077]	GETGLOBAL	R55 K17 ; R55 := mNodeDuck
	961	[6077]	SELF     	R55 R55 K9 ; R56 := R55; R55 := R55[0x54ab95f9]
	962	[6077]	CALL     	R55 2 2 ; R55 := R55(R56)
	963	[6077]	MUL      	R54 R54 R55 ; R54 := R54 * R55
	964	[6077]	CALL     	R51 4 1 ; R51(R52,R53,R54)
	965	[6049]	FORLOOP  	R47 845 ; R47 += R49; if R47 <= R48 then begin PC := 845; R50 := R47 end
	966	[6082]	MOVE     	R15 R2 ; R15 := R2
	967	[6083]	GETGLOBAL	R51 K33 ; R51 := 0x42dcc9f5
	968	[6083]	MOVE     	R52 R15 ; R52 := R15
	969	[6083]	GETUPVAL 	R53 U3 ; R53 := U3
	970	[6083]	GETTABLE 	R53 R53 K34 ; R53 := R53["LAYER_1_RANGE"]
	971	[6083]	GETTABLE 	R53 R53 K35 ; R53 := R53["minValue"]
	972	[6083]	GETUPVAL 	R54 U3 ; R54 := U3
	973	[6083]	GETTABLE 	R54 R54 K34 ; R54 := R54["LAYER_1_RANGE"]
	974	[6083]	GETTABLE 	R54 R54 K36 ; R54 := R54["maxValue"]
	975	[6083]	CALL     	R51 4 2 ; R51 := R51(R52,R53,R54)
	976	[6083]	MOVE     	R15 R51 ; R15 := R51
	977	[6084]	GETGLOBAL	R51 K38 ; R51 := 0x9bafffe3
	978	[6084]	LOADK    	R52 := 30.000000
	979	[6084]	LOADK    	R53 := 10.000000
	980	[6084]	GETUPVAL 	R54 U3 ; R54 := U3
	981	[6084]	GETTABLE 	R54 R54 K34 ; R54 := R54["LAYER_1_RANGE"]
	982	[6084]	SELF     	R54 R54 K37 ; R55 := R54; R54 := R54[0x3b93153d]
	983	[6084]	MOVE     	R56 R15 ; R56 := R15
	984	[6084]	CALL     	R54 3 0 ; R54,... := R54(R55,R56)
	985	[6084]	CALL     	R51 0 2 ; R51 := R51(R52,...)
	986	[6085]	LOADK    	R52 := 1.000000
	987	[6085]	GETGLOBAL	R53 K111 ; R53 := mSuperPoly
	988	[6085]	LEN      	R53 R53 ; R53 := # R53
	989	[6085]	LOADK    	R54 := 1.000000
	990	[6085]	FORPREP  	R52 1008 ; R52 -= R54; PC := 1008
	991	[6086]	MOVE     	R14 R51 ; R14 := R51
	992	[6087]	GETGLOBAL	R56 K26 ; R56 := 0x7b998233
	993	[6087]	GETGLOBAL	R57 K111 ; R57 := mSuperPoly
	994	[6087]	GETTABLE 	R57 R57 R55 ; R57 := R57[R55]
	995	[6087]	CALL     	R56 2 2 ; R56 := R56(R57)
	996	[6087]	TEST     	R56 1 ; if R56 then PC := 1008
	997	[6087]	JMP      	1008 ; PC := 1008
	998	[6088]	GETGLOBAL	R56 K111 ; R56 := mSuperPoly
	999	[6088]	GETTABLE 	R56 R56 R55 ; R56 := R56[R55]
	1000	[6088]	SELF     	R56 R56 K109 ; R57 := R56; R56 := R56[0x986d2ab8]
	1001	[6088]	GETGLOBAL	R58 K112 ; R58 := 0x6c97a788
	1002	[6088]	GETTABLE 	R58 R58 K113 ; R58 := R58["TINT_COLOR"]
	1003	[6088]	LOADK    	R59 := 0.000000
	1004	[6088]	LOADK    	R60 := 0.000000
	1005	[6088]	LOADK    	R61 := 0.000000
	1006	[6088]	DIV      	R62 R14 K61 ; R62 := R14 / 100.000000
	1007	[6088]	CALL     	R56 7 1 ; R56(R57,R58,R59,R60,R61,R62)
	1008	[6085]	FORLOOP  	R52 991 ; R52 += R54; if R52 <= R53 then begin PC := 991; R55 := R52 end
	1009	[6092]	GETGLOBAL	R56 K114 ; R56 := mVoidTrader
	1010	[6092]	GETTABLE 	R56 R56 K115 ; R56 := R56["Active"]
	1011	[6092]	TEST     	R56 0 ; if not R56 then PC := 1051
	1012	[6092]	JMP      	1051 ; PC := 1051
	1013	[6093]	GETGLOBAL	R56 K40 ; R56 := 0xae91e43b
	1014	[6093]	SELF     	R56 R56 K41 ; R57 := R56; R56 := R56[0xb9ad3599]
	1015	[6093]	MOVE     	R58 R16 ; R58 := R16
	1016	[6093]	GETGLOBAL	R59 K114 ; R59 := mVoidTrader
	1017	[6093]	GETTABLE 	R59 R59 K116 ; R59 := R59["Position"]
	1018	[6093]	OP_LOADBOOL	R60 1 0 ; R60 := true
	1019	[6093]	GETUPVAL 	R61 U7 ; R61 := U7
	1020	[6093]	CALL     	R56 6 1 ; R56(R57,R58,R59,R60,R61)
	1021	[6094]	GETGLOBAL	R56 K38 ; R56 := 0x9bafffe3
	1022	[6094]	LOADK    	R57 := 60.000000
	1023	[6094]	LOADK    	R58 := 100.000000
	1024	[6094]	MOVE     	R59 R31 ; R59 := R31
	1025	[6094]	CALL     	R56 4 2 ; R56 := R56(R57,R58,R59)
	1026	[6094]	MOVE     	R32 R56 ; R32 := R56
	1027	[6095]	GETGLOBAL	R56 K40 ; R56 := 0xae91e43b
	1028	[6095]	SELF     	R56 R56 K117 ; R57 := R56; R56 := R56[0x67bc869f]
	1029	[6095]	LOADK    	R58 K118 ; R58 := "VoidTrader"
	1030	[6095]	LOADK    	R59 := 0.000000
	1031	[6095]	GETTABLE 	R60 R16 K7 ; R60 := R16["x"]
	1032	[6095]	CALL     	R56 5 1 ; R56(R57,R58,R59,R60)
	1033	[6096]	GETGLOBAL	R56 K40 ; R56 := 0xae91e43b
	1034	[6096]	SELF     	R56 R56 K117 ; R57 := R56; R56 := R56[0x67bc869f]
	1035	[6096]	LOADK    	R58 K118 ; R58 := "VoidTrader"
	1036	[6096]	LOADK    	R59 := 1.000000
	1037	[6096]	GETTABLE 	R60 R16 K10 ; R60 := R16["y"]
	1038	[6096]	CALL     	R56 5 1 ; R56(R57,R58,R59,R60)
	1039	[6097]	GETGLOBAL	R56 K40 ; R56 := 0xae91e43b
	1040	[6097]	SELF     	R56 R56 K117 ; R57 := R56; R56 := R56[0x67bc869f]
	1041	[6097]	LOADK    	R58 K118 ; R58 := "VoidTrader"
	1042	[6097]	LOADK    	R59 := 5.000000
	1043	[6097]	MOVE     	R60 R32 ; R60 := R32
	1044	[6097]	CALL     	R56 5 1 ; R56(R57,R58,R59,R60)
	1045	[6098]	GETGLOBAL	R56 K40 ; R56 := 0xae91e43b
	1046	[6098]	SELF     	R56 R56 K117 ; R57 := R56; R56 := R56[0x67bc869f]
	1047	[6098]	LOADK    	R58 K118 ; R58 := "VoidTrader"
	1048	[6098]	LOADK    	R59 := 6.000000
	1049	[6098]	MOVE     	R60 R32 ; R60 := R32
	1050	[6098]	CALL     	R56 5 1 ; R56(R57,R58,R59,R60)
	1051	[6101]	GETUPVAL 	R56 U11 ; R56 := U11
	1052	[6101]	CALL     	R56 1 1 ; R56()
	1053	[6104]	GETUPVAL 	R56 U12 ; R56 := U12
	1054	[6104]	CALL     	R56 1 1 ; R56()
	1055	[6107]	GETGLOBAL	R56 K114 ; R56 := mVoidTrader
	1056	[6107]	GETTABLE 	R56 R56 K115 ; R56 := R56["Active"]
	1057	[6107]	TEST     	R56 0 ; if not R56 then PC := 1079
	1058	[6107]	JMP      	1079 ; PC := 1079
	1059	[6109]	GETGLOBAL	R56 K119 ; R56 := 0xcb2f6c8f
	1060	[6109]	CALL     	R56 1 2 ; R56 := R56()
	1061	[6110]	GETGLOBAL	R57 K114 ; R57 := mVoidTrader
	1062	[6110]	GETTABLE 	R57 R57 K121 ; R57 := R57["Expiry"]
	1063	[6110]	SETTABLE 	R56 K120 R57 ; R56["sec"] := R57
	1064	[6111]	GETGLOBAL	R57 K84 ; R57 := 0x34291f5c
	1065	[6111]	GETTABLE 	R57 R57 K122 ; R57 := R57[0x397b920f]
	1066	[6111]	MOVE     	R58 R56 ; R58 := R56
	1067	[6111]	CALL     	R57 2 2 ; R57 := R57(R58)
	1068	[6112]	LE       	0 R57 K21 ; if R57 > 0.000000 then PC := 1079
	1069	[6112]	JMP      	1079 ; PC := 1079
	1070	[6113]	GETGLOBAL	R58 K114 ; R58 := mVoidTrader
	1071	[6113]	SETTABLE 	R58 K115 K1 ; R58["Active"] := false
	1072	[6114]	GETGLOBAL	R58 K40 ; R58 := 0xae91e43b
	1073	[6114]	SELF     	R58 R58 K123 ; R59 := R58; R58 := R58[0xaade900e]
	1074	[6114]	LOADK    	R60 K118 ; R60 := "VoidTrader"
	1075	[6114]	LOADK    	R61 := 11.000000
	1076	[6114]	GETGLOBAL	R62 K114 ; R62 := mVoidTrader
	1077	[6114]	GETTABLE 	R62 R62 K115 ; R62 := R62["Active"]
	1078	[6114]	CALL     	R58 5 1 ; R58(R59,R60,R61,R62)
	1079	[6118]	GETGLOBAL	R58 K26 ; R58 := 0x7b998233
	1080	[6118]	GETUPVAL 	R59 U13 ; R59 := U13
	1081	[6118]	GETTABLE 	R59 R59 K18 ; R59 := R59["Region"]
	1082	[6118]	CALL     	R58 2 2 ; R58 := R58(R59)
	1083	[6118]	TEST     	R58 1 ; if R58 then PC := 1288
	1084	[6118]	JMP      	1288 ; PC := 1288
	1085	[6119]	GETGLOBAL	R58 K33 ; R58 := 0x42dcc9f5
	1086	[6119]	MOVE     	R59 R2 ; R59 := R2
	1087	[6119]	GETUPVAL 	R60 U3 ; R60 := U3
	1088	[6119]	GETTABLE 	R60 R60 K50 ; R60 := R60["LAYER_2_RANGE"]
	1089	[6119]	GETTABLE 	R60 R60 K35 ; R60 := R60["minValue"]
	1090	[6119]	GETUPVAL 	R61 U3 ; R61 := U3
	1091	[6119]	GETTABLE 	R61 R61 K50 ; R61 := R61["LAYER_2_RANGE"]
	1092	[6119]	GETTABLE 	R61 R61 K36 ; R61 := R61["maxValue"]
	1093	[6119]	CALL     	R58 4 2 ; R58 := R58(R59,R60,R61)
	1094	[6119]	MOVE     	R2 R58 ; R2 := R58
	1095	[6120]	GETUPVAL 	R58 U3 ; R58 := U3
	1096	[6120]	GETTABLE 	R58 R58 K50 ; R58 := R58["LAYER_2_RANGE"]
	1097	[6120]	SELF     	R58 R58 K37 ; R59 := R58; R58 := R58[0x3b93153d]
	1098	[6120]	MOVE     	R60 R2 ; R60 := R2
	1099	[6120]	CALL     	R58 3 2 ; R58 := R58(R59,R60)
	1100	[6121]	LOADNIL  	R59 R60 ; R59 := R60 := nil
	1101	[6123]	GETGLOBAL	R61 K124 ; R61 := 0xcfc01047
	1102	[6123]	GETUPVAL 	R62 U13 ; R62 := U13
	1103	[6123]	GETTABLE 	R62 R62 K55 ; R62 := R62["Nodes"]
	1104	[6123]	CALL     	R61 2 4 ; R61,R62,R63 := R61(R62)
	1105	[6123]	JMP      	1264 ; PC := 1264
	1106	[6124]	GETTABLE 	R66 R65 K63 ; R66 := R65["radialSector"]
	1107	[6125]	GETTABLE 	R67 R65 K64 ; R67 := R65["position"]
	1108	[6126]	GETGLOBAL	R68 K40 ; R68 := 0xae91e43b
	1109	[6126]	SELF     	R68 R68 K41 ; R69 := R68; R68 := R68[0xb9ad3599]
	1110	[6126]	MOVE     	R70 R16 ; R70 := R16
	1111	[6126]	MOVE     	R71 R67 ; R71 := R67
	1112	[6126]	OP_LOADBOOL	R72 1 0 ; R72 := true
	1113	[6126]	GETUPVAL 	R73 U7 ; R73 := U7
	1114	[6126]	CALL     	R68 6 1 ; R68(R69,R70,R71,R72,R73)
	1115	[6127]	GETGLOBAL	R68 K40 ; R68 := 0xae91e43b
	1116	[6127]	SELF     	R68 R68 K43 ; R69 := R68; R68 := R68[0xd38cedf3]
	1117	[6127]	GETTABLE 	R70 R65 K44 ; R70 := R65["memberIndex"]
	1118	[6127]	GETTABLE 	R71 R16 K7 ; R71 := R16["x"]
	1119	[6127]	GETTABLE 	R72 R16 K10 ; R72 := R16["y"]
	1120	[6127]	CALL     	R68 5 1 ; R68(R69,R70,R71,R72)
	1121	[6129]	GETGLOBAL	R68 K38 ; R68 := 0x9bafffe3
	1122	[6129]	LOADK    	R69 := 20.000000
	1123	[6129]	LOADK    	R70 := 50.000000
	1124	[6129]	MOVE     	R71 R58 ; R71 := R58
	1125	[6129]	CALL     	R68 4 2 ; R68 := R68(R69,R70,R71)
	1126	[6130]	GETTABLE 	R69 R65 K65 ; R69 := R65["isSurfaceNode"]
	1127	[6130]	TEST     	R69 0 ; if not R69 then PC := 1239
	1128	[6130]	JMP      	1239 ; PC := 1239
	1129	[6131]	LOADK    	R59 := 100.000000
	1130	[6132]	GETTABLE 	R60 R67 K30 ; R60 := R67["z"]
	1131	[6133]	MUL      	R60 R60 K45 ; R60 := R60 * 10.000000
	1132	[6134]	LE       	0 K21 R60 ; if 0.000000 > R60 then PC := 1149
	1133	[6134]	JMP      	1149 ; PC := 1149
	1134	[6135]	GETGLOBAL	R69 K38 ; R69 := 0x9bafffe3
	1135	[6135]	LOADK    	R70 := 75.000000
	1136	[6135]	LOADK    	R71 := 50.000000
	1137	[6135]	GETGLOBAL	R72 K33 ; R72 := 0x42dcc9f5
	1138	[6135]	GETGLOBAL	R73 K66 ; R73 := 0x5bced4c4
	1139	[6135]	GETTABLE 	R73 R73 K67 ; R73 := R73[0xa40531d8]
	1140	[6135]	MOVE     	R74 R60 ; R74 := R60
	1141	[6135]	LOADK    	R75 := 3.000000
	1142	[6135]	CALL     	R73 3 2 ; R73 := R73(R74,R75)
	1143	[6135]	LOADK    	R74 := 0.000000
	1144	[6135]	LOADK    	R75 := 1.000000
	1145	[6135]	CALL     	R72 4 0 ; R72,... := R72(R73,R74,R75)
	1146	[6135]	CALL     	R69 0 2 ; R69 := R69(R70,...)
	1147	[6135]	MOVE     	R59 R69 ; R59 := R69
	1148	[6135]	JMP      	1166 ; PC := 1166
	1149	[6137]	GETGLOBAL	R69 K38 ; R69 := 0x9bafffe3
	1150	[6137]	LOADK    	R70 := 75.000000
	1151	[6137]	LOADK    	R71 := 100.000000
	1152	[6137]	GETGLOBAL	R72 K33 ; R72 := 0x42dcc9f5
	1153	[6137]	GETGLOBAL	R73 K66 ; R73 := 0x5bced4c4
	1154	[6137]	GETTABLE 	R73 R73 K67 ; R73 := R73[0xa40531d8]
	1155	[6137]	GETGLOBAL	R74 K66 ; R74 := 0x5bced4c4
	1156	[6137]	GETTABLE 	R74 R74 K68 ; R74 := R74[0xe4a5b3ca]
	1157	[6137]	MOVE     	R75 R60 ; R75 := R60
	1158	[6137]	CALL     	R74 2 2 ; R74 := R74(R75)
	1159	[6137]	LOADK    	R75 := 3.000000
	1160	[6137]	CALL     	R73 3 2 ; R73 := R73(R74,R75)
	1161	[6137]	LOADK    	R74 := 0.000000
	1162	[6137]	LOADK    	R75 := 1.000000
	1163	[6137]	CALL     	R72 4 0 ; R72,... := R72(R73,R74,R75)
	1164	[6137]	CALL     	R69 0 2 ; R69 := R69(R70,...)
	1165	[6137]	MOVE     	R59 R69 ; R59 := R69
	1166	[6140]	GETGLOBAL	R69 K69 ; R69 := mRegionInstances
	1167	[6140]	GETTABLE 	R70 R66 K70 ; R70 := R66["region"]
	1168	[6140]	ADD      	R70 R70 K23 ; R70 := R70 + 1.000000
	1169	[6140]	GETTABLE 	R69 R69 R70 ; R69 := R69[R70]
	1170	[6142]	GETGLOBAL	R70 K26 ; R70 := 0x7b998233
	1171	[6142]	MOVE     	R71 R69 ; R71 := R69
	1172	[6142]	CALL     	R70 2 2 ; R70 := R70(R71)
	1173	[6142]	TEST     	R70 1 ; if R70 then PC := 1199
	1174	[6142]	JMP      	1199 ; PC := 1199
	1175	[6143]	SELF     	R70 R69 K72 ; R71 := R69; R70 := R69[0x4078bbf8]
	1176	[6143]	MOVE     	R72 R17 ; R72 := R17
	1177	[6143]	CALL     	R70 3 1 ; R70(R71,R72)
	1178	[6144]	GETGLOBAL	R70 K73 ; R70 := 0x83ddcc65
	1179	[6144]	MOVE     	R71 R19 ; R71 := R19
	1180	[6144]	MOVE     	R72 R67 ; R72 := R67
	1181	[6144]	MOVE     	R73 R17 ; R73 := R17
	1182	[6144]	CALL     	R70 4 1 ; R70(R71,R72,R73)
	1183	[6145]	GETGLOBAL	R70 K74 ; R70 := 0x83a41541
	1184	[6145]	MOVE     	R71 R18 ; R71 := R18
	1185	[6145]	MOVE     	R72 R1 ; R72 := R1
	1186	[6145]	MOVE     	R73 R19 ; R73 := R19
	1187	[6145]	CALL     	R70 4 1 ; R70(R71,R72,R73)
	1188	[6146]	GETTABLE 	R70 R18 K75 ; R70 := R18["heading"]
	1189	[6146]	UNM      	R70 R70 ; R70 := ^ R70
	1190	[6146]	SETTABLE 	R18 K75 R70 ; R18["heading"] := R70
	1191	[6147]	GETGLOBAL	R70 K33 ; R70 := 0x42dcc9f5
	1192	[6147]	GETTABLE 	R71 R18 K77 ; R71 := R18["pitch"]
	1193	[6147]	MUL      	R71 R71 K78 ; R71 := R71 * 0.750000
	1194	[6147]	LOADK    	R72 := -75.000000
	1195	[6147]	LOADK    	R73 := 75.000000
	1196	[6147]	CALL     	R70 4 2 ; R70 := R70(R71,R72,R73)
	1197	[6147]	SETTABLE 	R18 K77 R70 ; R18["pitch"] := R70
	1198	[6147]	JMP      	1203 ; PC := 1203
	1199	[6149]	NEWTABLE 	R70 0 2 ; R70 := {}
	1200	[6149]	SETTABLE 	R70 K75 K21 ; R70["heading"] := 0.000000
	1201	[6149]	SETTABLE 	R70 K77 K21 ; R70["pitch"] := 0.000000
	1202	[6149]	MOVE     	R18 R70 ; R18 := R70
	1203	[6152]	GETTABLE 	R70 R65 K125 ; R70 := R65["visibleLabel"]
	1204	[6152]	TEST     	R70 1 ; if R70 then PC := 1224
	1205	[6152]	JMP      	1224 ; PC := 1224
	1206	[6152]	GETTABLE 	R70 R65 K91 ; R70 := R65["isShortcut"]
	1207	[6152]	TEST     	R70 1 ; if R70 then PC := 1224
	1208	[6152]	JMP      	1224 ; PC := 1224
	1209	[6153]	GETGLOBAL	R70 K40 ; R70 := 0xae91e43b
	1210	[6153]	SELF     	R70 R70 K80 ; R71 := R70; R70 := R70[0xf64b7262]
	1211	[6153]	GETTABLE 	R72 R65 K81 ; R72 := R65["clipName"]
	1212	[6153]	LOADK    	R73 K82 ; R73 := "Node.Container"
	1213	[6153]	LOADK    	R74 := 15.000000
	1214	[6153]	GETTABLE 	R75 R18 K75 ; R75 := R18["heading"]
	1215	[6153]	CALL     	R70 6 1 ; R70(R71,R72,R73,R74,R75)
	1216	[6154]	GETGLOBAL	R70 K40 ; R70 := 0xae91e43b
	1217	[6154]	SELF     	R70 R70 K80 ; R71 := R70; R70 := R70[0xf64b7262]
	1218	[6154]	GETTABLE 	R72 R65 K81 ; R72 := R65["clipName"]
	1219	[6154]	LOADK    	R73 K82 ; R73 := "Node.Container"
	1220	[6154]	LOADK    	R74 := 16.000000
	1221	[6154]	GETTABLE 	R75 R18 K77 ; R75 := R18["pitch"]
	1222	[6154]	CALL     	R70 6 1 ; R70(R71,R72,R73,R74,R75)
	1223	[6154]	JMP      	1258 ; PC := 1258
	1224	[6156]	GETGLOBAL	R70 K40 ; R70 := 0xae91e43b
	1225	[6156]	SELF     	R70 R70 K80 ; R71 := R70; R70 := R70[0xf64b7262]
	1226	[6156]	GETTABLE 	R72 R65 K81 ; R72 := R65["clipName"]
	1227	[6156]	LOADK    	R73 K82 ; R73 := "Node.Container"
	1228	[6156]	LOADK    	R74 := 15.000000
	1229	[6156]	GETTABLE 	R75 R18 K75 ; R75 := R18["heading"]
	1230	[6156]	CALL     	R70 6 1 ; R70(R71,R72,R73,R74,R75)
	1231	[6157]	GETGLOBAL	R70 K40 ; R70 := 0xae91e43b
	1232	[6157]	SELF     	R70 R70 K80 ; R71 := R70; R70 := R70[0xf64b7262]
	1233	[6157]	GETTABLE 	R72 R65 K81 ; R72 := R65["clipName"]
	1234	[6157]	LOADK    	R73 K82 ; R73 := "Node.Container"
	1235	[6157]	LOADK    	R74 := 16.000000
	1236	[6157]	GETTABLE 	R75 R18 K77 ; R75 := R18["pitch"]
	1237	[6157]	CALL     	R70 6 1 ; R70(R71,R72,R73,R74,R75)
	1238	[6158]	JMP      	1258 ; PC := 1258
	1239	[6159]	GETUPVAL 	R70 U1 ; R70 := U1
	1240	[6159]	GETUPVAL 	R71 U2 ; R71 := U2
	1241	[6159]	GETTABLE 	R71 R71 K25 ; R71 := R71["READ_ONLY"]
	1242	[6159]	EQ       	1 R70 R71 ; if R70 == R71 then PC := 1258
	1243	[6159]	JMP      	1258 ; PC := 1258
	1244	[6160]	GETGLOBAL	R70 K40 ; R70 := 0xae91e43b
	1245	[6160]	SELF     	R70 R70 K80 ; R71 := R70; R70 := R70[0xf64b7262]
	1246	[6160]	GETTABLE 	R72 R65 K81 ; R72 := R65["clipName"]
	1247	[6160]	LOADK    	R73 K82 ; R73 := "Node.Container"
	1248	[6160]	LOADK    	R74 := 15.000000
	1249	[6160]	LOADK    	R75 := 0.000000
	1250	[6160]	CALL     	R70 6 1 ; R70(R71,R72,R73,R74,R75)
	1251	[6161]	GETGLOBAL	R70 K40 ; R70 := 0xae91e43b
	1252	[6161]	SELF     	R70 R70 K80 ; R71 := R70; R70 := R70[0xf64b7262]
	1253	[6161]	GETTABLE 	R72 R65 K81 ; R72 := R65["clipName"]
	1254	[6161]	LOADK    	R73 K82 ; R73 := "Node.Container"
	1255	[6161]	LOADK    	R74 := 16.000000
	1256	[6161]	LOADK    	R75 := 0.000000
	1257	[6161]	CALL     	R70 6 1 ; R70(R71,R72,R73,R74,R75)
	1258	[6164]	GETGLOBAL	R70 K40 ; R70 := 0xae91e43b
	1259	[6164]	SELF     	R70 R70 K48 ; R71 := R70; R70 := R70[0x9621a812]
	1260	[6164]	GETTABLE 	R72 R65 K83 ; R72 := R65["nodeIndex"]
	1261	[6164]	MOVE     	R73 R68 ; R73 := R68
	1262	[6164]	MOVE     	R74 R68 ; R74 := R68
	1263	[6164]	CALL     	R70 5 1 ; R70(R71,R72,R73,R74)
	1264	[6123]	TFORLOOP 	R61 2 ; R64,R65 := R61(R62,R63); if R64 ~= nil then begin PC = 1106; R63 := R64 end
	1265	[6164]	JMP      	1106 ; PC := 1106
	1266	[6167]	GETGLOBAL	R70 K40 ; R70 := 0xae91e43b
	1267	[6167]	SELF     	R70 R70 K41 ; R71 := R70; R70 := R70[0xb9ad3599]
	1268	[6167]	MOVE     	R72 R16 ; R72 := R16
	1269	[6167]	GETUPVAL 	R73 U4 ; R73 := U4
	1270	[6167]	GETUPVAL 	R74 U13 ; R74 := U13
	1271	[6167]	GETTABLE 	R74 R74 K126 ; R74 := R74["SubLabelIndex"]
	1272	[6167]	GETTABLE 	R73 R73 R74 ; R73 := R73[R74]
	1273	[6167]	GETTABLE 	R73 R73 K42 ; R73 := R73["pos"]
	1274	[6167]	OP_LOADBOOL	R74 1 0 ; R74 := true
	1275	[6167]	OP_LOADBOOL	R75 0 0 ; R75 := false
	1276	[6167]	CALL     	R70 6 1 ; R70(R71,R72,R73,R74,R75)
	1277	[6168]	GETGLOBAL	R70 K40 ; R70 := 0xae91e43b
	1278	[6168]	SELF     	R70 R70 K43 ; R71 := R70; R70 := R70[0xd38cedf3]
	1279	[6168]	GETUPVAL 	R72 U4 ; R72 := U4
	1280	[6168]	GETUPVAL 	R73 U13 ; R73 := U13
	1281	[6168]	GETTABLE 	R73 R73 K126 ; R73 := R73["SubLabelIndex"]
	1282	[6168]	GETTABLE 	R72 R72 R73 ; R72 := R72[R73]
	1283	[6168]	GETTABLE 	R72 R72 K44 ; R72 := R72["memberIndex"]
	1284	[6168]	GETTABLE 	R73 R16 K7 ; R73 := R16["x"]
	1285	[6168]	GETTABLE 	R74 R16 K10 ; R74 := R16["y"]
	1286	[6168]	SUB      	R74 R74 K45 ; R74 := R74 - 10.000000
	1287	[6168]	CALL     	R70 5 1 ; R70(R71,R72,R73,R74)
	1288	[6171]	GETGLOBAL	R70 K12 ; R70 := mHover
	1289	[6171]	GETTABLE 	R70 R70 K14 ; R70 := R70["Node"]
	1290	[6171]	EQ       	1 R70 K19 ; if R70 == nil then PC := 1439
	1291	[6171]	JMP      	1439 ; PC := 1439
	1292	[6171]	GETGLOBAL	R70 K12 ; R70 := mHover
	1293	[6171]	GETTABLE 	R70 R70 K14 ; R70 := R70["Node"]
	1294	[6171]	GETTABLE 	R70 R70 K91 ; R70 := R70["isShortcut"]
	1295	[6171]	TEST     	R70 1 ; if R70 then PC := 1439
	1296	[6171]	JMP      	1439 ; PC := 1439
	1297	[6171]	GETGLOBAL	R70 K12 ; R70 := mHover
	1298	[6171]	GETTABLE 	R70 R70 K14 ; R70 := R70["Node"]
	1299	[6171]	GETTABLE 	R70 R70 K107 ; R70 := R70["isJunction"]
	1300	[6171]	TEST     	R70 1 ; if R70 then PC := 1439
	1301	[6171]	JMP      	1439 ; PC := 1439
	1302	[6172]	GETUPVAL 	R70 U14 ; R70 := U14
	1303	[6172]	GETTABLE 	R70 R70 K127 ; R70 := R70[0xb5be5d4a]
	1304	[6172]	GETGLOBAL	R71 K40 ; R71 := 0xae91e43b
	1305	[6172]	GETGLOBAL	R72 K12 ; R72 := mHover
	1306	[6172]	GETTABLE 	R72 R72 K14 ; R72 := R72["Node"]
	1307	[6172]	GETTABLE 	R72 R72 K81 ; R72 := R72["clipName"]
	1308	[6172]	CALL     	R70 3 3 ; R70,R71 := R70(R71,R72)
	1309	[6173]	LOADK    	R72 := 0.000000
	1310	[6173]	LOADNIL  	R73 R73 ; R73 := nil
	1311	[6174]	LOADK    	R74 := 20.000000
	1312	[6175]	GETGLOBAL	R75 K40 ; R75 := 0xae91e43b
	1313	[6175]	SELF     	R75 R75 K128 ; R76 := R75; R75 := R75[0x091c120e]
	1314	[6175]	CALL     	R75 2 2 ; R75 := R75(R76)
	1315	[6175]	DIV      	R75 R75 K47 ; R75 := R75 / 2.000000
	1316	[6175]	LT       	0 R75 R70 ; if R75 >= R70 then PC := 1321
	1317	[6175]	JMP      	1321 ; PC := 1321
	1318	[6176]	SUB      	R70 R70 K129 ; R70 := R70 - 485.000000
	1319	[6177]	LOADK    	R72 := -20.000000
	1320	[6177]	JMP      	1324 ; PC := 1324
	1321	[6179]	SUB      	R70 R70 K130 ; R70 := R70 - 20.000000
	1322	[6180]	LOADK    	R72 := 20.000000
	1323	[6181]	LOADK    	R74 := -35.000000
	1324	[6184]	GETGLOBAL	R75 K131 ; R75 := mInfoTip
	1325	[6184]	GETTABLE 	R75 R75 K132 ; R75 := R75["BgHeight"]
	1326	[6185]	GETGLOBAL	R76 K131 ; R76 := mInfoTip
	1327	[6185]	GETTABLE 	R76 R76 K133 ; R76 := R76["NodeSelectionOpen"]
	1328	[6185]	TEST     	R76 0 ; if not R76 then PC := 1341
	1329	[6185]	JMP      	1341 ; PC := 1341
	1330	[6186]	GETGLOBAL	R76 K131 ; R76 := mInfoTip
	1331	[6186]	GETTABLE 	R76 R76 K134 ; R76 := R76["mBaseHeight"]
	1332	[6186]	GETGLOBAL	R77 K131 ; R77 := mInfoTip
	1333	[6186]	GETTABLE 	R77 R77 K135 ; R77 := R77["NodeMissionList"]
	1334	[6186]	SELF     	R77 R77 K136 ; R78 := R77; R77 := R77[0x5fbddc1a]
	1335	[6186]	CALL     	R77 2 2 ; R77 := R77(R78)
	1336	[6186]	GETGLOBAL	R78 K131 ; R78 := mInfoTip
	1337	[6186]	GETTABLE 	R78 R78 K135 ; R78 := R78["NodeMissionList"]
	1338	[6186]	GETTABLE 	R78 R78 K137 ; R78 := R78["mForcedVerticalSeparation"]
	1339	[6186]	MUL      	R77 R77 R78 ; R77 := R77 * R78
	1340	[6186]	ADD      	R75 R76 R77 ; R75 := R76 + R77
	1341	[6188]	GETGLOBAL	R76 K40 ; R76 := 0xae91e43b
	1342	[6188]	SELF     	R76 R76 K138 ; R77 := R76; R76 := R76[0x2cc9d281]
	1343	[6188]	CALL     	R76 2 2 ; R76 := R76(R77)
	1344	[6188]	DIV      	R76 R76 K47 ; R76 := R76 / 2.000000
	1345	[6188]	LT       	0 R76 R71 ; if R76 >= R71 then PC := 1352
	1346	[6188]	JMP      	1352 ; PC := 1352
	1347	[6189]	SUB      	R76 R71 R75 ; R76 := R71 - R75
	1348	[6189]	ADD      	R76 R76 K139 ; R76 := R76 + 50.000000
	1349	[6189]	ADD      	R71 R76 R74 ; R71 := R76 + R74
	1350	[6190]	LOADK    	R73 := -20.000000
	1351	[6190]	JMP      	1365 ; PC := 1365
	1352	[6192]	GETGLOBAL	R76 K40 ; R76 := 0xae91e43b
	1353	[6192]	SELF     	R76 R76 K138 ; R77 := R76; R76 := R76[0x2cc9d281]
	1354	[6192]	CALL     	R76 2 2 ; R76 := R76(R77)
	1355	[6192]	MUL      	R76 R76 K140 ; R76 := R76 * 0.950000
	1356	[6192]	SUB      	R76 R76 R75 ; R76 := R76 - R75
	1357	[6193]	GETGLOBAL	R77 K66 ; R77 := 0x5bced4c4
	1358	[6193]	GETTABLE 	R77 R77 K141 ; R77 := R77[0xac1b386a]
	1359	[6193]	ADD      	R78 R71 K142 ; R78 := R71 + 47.000000
	1360	[6193]	SUB      	R78 R78 R74 ; R78 := R78 - R74
	1361	[6193]	MOVE     	R79 R76 ; R79 := R76
	1362	[6193]	CALL     	R77 3 2 ; R77 := R77(R78,R79)
	1363	[6193]	MOVE     	R71 R77 ; R71 := R77
	1364	[6194]	LOADK    	R73 := 20.000000
	1365	[6197]	GETGLOBAL	R77 K40 ; R77 := 0xae91e43b
	1366	[6197]	SELF     	R77 R77 K117 ; R78 := R77; R77 := R77[0x67bc869f]
	1367	[6197]	LOADK    	R79 K143 ; R79 := "InfoTip"
	1368	[6197]	LOADK    	R80 := 0.000000
	1369	[6197]	MOVE     	R81 R70 ; R81 := R70
	1370	[6197]	CALL     	R77 5 1 ; R77(R78,R79,R80,R81)
	1371	[6198]	GETGLOBAL	R77 K131 ; R77 := mInfoTip
	1372	[6198]	GETTABLE 	R77 R77 K11 ; R77 := R77["mSmoothY"]
	1373	[6198]	SELF     	R77 R77 K9 ; R78 := R77; R77 := R77[0x54ab95f9]
	1374	[6198]	CALL     	R77 2 2 ; R77 := R77(R78)
	1375	[6198]	EQ       	0 R77 K79 ; if R77 ~= -1.000000 then PC := 1383
	1376	[6198]	JMP      	1383 ; PC := 1383
	1377	[6199]	GETGLOBAL	R77 K131 ; R77 := mInfoTip
	1378	[6199]	GETTABLE 	R77 R77 K11 ; R77 := R77["mSmoothY"]
	1379	[6199]	SELF     	R77 R77 K144 ; R78 := R77; R77 := R77[0xd0f998cd]
	1380	[6199]	MOVE     	R79 R71 ; R79 := R71
	1381	[6199]	CALL     	R77 3 1 ; R77(R78,R79)
	1382	[6199]	JMP      	1388 ; PC := 1388
	1383	[6201]	GETGLOBAL	R77 K131 ; R77 := mInfoTip
	1384	[6201]	GETTABLE 	R77 R77 K11 ; R77 := R77["mSmoothY"]
	1385	[6201]	SELF     	R77 R77 K145 ; R78 := R77; R77 := R77[0x188e2bee]
	1386	[6201]	MOVE     	R79 R71 ; R79 := R71
	1387	[6201]	CALL     	R77 3 1 ; R77(R78,R79)
	1388	[6203]	GETGLOBAL	R77 K131 ; R77 := mInfoTip
	1389	[6203]	GETTABLE 	R77 R77 K11 ; R77 := R77["mSmoothY"]
	1390	[6203]	SELF     	R77 R77 K146 ; R78 := R77; R77 := R77[0xfaa69527]
	1391	[6203]	GETGLOBAL	R79 K147 ; R79 := 0x67652851
	1392	[6203]	CALL     	R79 1 0 ; R79,... := R79()
	1393	[6203]	CALL     	R77 0 1 ; R77(R78,...)
	1394	[6204]	GETGLOBAL	R77 K40 ; R77 := 0xae91e43b
	1395	[6204]	SELF     	R77 R77 K117 ; R78 := R77; R77 := R77[0x67bc869f]
	1396	[6204]	LOADK    	R79 K143 ; R79 := "InfoTip"
	1397	[6204]	LOADK    	R80 := 1.000000
	1398	[6204]	GETGLOBAL	R81 K131 ; R81 := mInfoTip
	1399	[6204]	GETTABLE 	R81 R81 K11 ; R81 := R81["mSmoothY"]
	1400	[6204]	SELF     	R81 R81 K9 ; R82 := R81; R81 := R81[0x54ab95f9]
	1401	[6204]	CALL     	R81 2 0 ; R81,... := R81(R82)
	1402	[6204]	CALL     	R77 0 1 ; R77(R78,...)
	1403	[6206]	GETGLOBAL	R77 K40 ; R77 := 0xae91e43b
	1404	[6206]	SELF     	R77 R77 K49 ; R78 := R77; R77 := R77[0xcd12f3f1]
	1405	[6206]	GETGLOBAL	R79 K12 ; R79 := mHover
	1406	[6206]	GETTABLE 	R79 R79 K14 ; R79 := R79["Node"]
	1407	[6206]	GETTABLE 	R79 R79 K93 ; R79 := R79["labelIndex"]
	1408	[6206]	LOADK    	R80 := 10.000000
	1409	[6206]	LOADK    	R81 := 100.000000
	1410	[6206]	CALL     	R77 5 1 ; R77(R78,R79,R80,R81)
	1411	[6208]	GETGLOBAL	R77 K26 ; R77 := 0x7b998233
	1412	[6208]	GETGLOBAL	R78 K131 ; R78 := mInfoTip
	1413	[6208]	GETTABLE 	R78 R78 K148 ; R78 := R78["mTransmissionStatus"]
	1414	[6208]	GETTABLE 	R78 R78 K149 ; R78 := R78["Projector"]
	1415	[6208]	CALL     	R77 2 2 ; R77 := R77(R78)
	1416	[6208]	TEST     	R77 0 ; if not R77 then PC := 1439
	1417	[6208]	JMP      	1439 ; PC := 1439
	1418	[6209]	GETGLOBAL	R77 K131 ; R77 := mInfoTip
	1419	[6209]	GETTABLE 	R77 R77 K148 ; R77 := R77["mTransmissionStatus"]
	1420	[6209]	GETGLOBAL	R78 K150 ; R78 := 0x1211d00f
	1421	[6209]	SELF     	R78 R78 K151 ; R79 := R78; R78 := R78[0x05909209]
	1422	[6209]	GETGLOBAL	R80 K152 ; R80 := 0x21d6d17b
	1423	[6209]	GETGLOBAL	R81 K12 ; R81 := mHover
	1424	[6209]	GETTABLE 	R81 R81 K14 ; R81 := R81["Node"]
	1425	[6209]	GETTABLE 	R81 R81 K64 ; R81 := R81["position"]
	1426	[6209]	GETGLOBAL	R82 K31 ; R82 := 0x00046924
	1427	[6209]	MOVE     	R83 R72 ; R83 := R72
	1428	[6209]	MOVE     	R84 R73 ; R84 := R73
	1429	[6209]	LOADK    	R85 := 0.000000
	1430	[6209]	CALL     	R82 4 0 ; R82,... := R82(R83,R84,R85)
	1431	[6209]	CALL     	R78 0 2 ; R78 := R78(R79,...)
	1432	[6209]	SETTABLE 	R77 K149 R78 ; R77["Projector"] := R78
	1433	[6210]	GETGLOBAL	R77 K131 ; R77 := mInfoTip
	1434	[6210]	GETTABLE 	R77 R77 K148 ; R77 := R77["mTransmissionStatus"]
	1435	[6210]	GETTABLE 	R77 R77 K149 ; R77 := R77["Projector"]
	1436	[6210]	SELF     	R77 R77 K153 ; R78 := R77; R77 := R77[0x2d9ba74f]
	1437	[6210]	LOADK    	R79 := 0.125000
	1438	[6210]	CALL     	R77 3 1 ; R77(R78,R79)
	1439	[6214]	GETGLOBAL	R77 K131 ; R77 := mInfoTip
	1440	[6214]	GETTABLE 	R77 R77 K148 ; R77 := R77["mTransmissionStatus"]
	1441	[6214]	GETTABLE 	R77 R77 K154 ; R77 := R77["Playing"]
	1442	[6214]	TEST     	R77 0 ; if not R77 then PC := 1451
	1443	[6214]	JMP      	1451 ; PC := 1451
	1444	[6214]	GETGLOBAL	R77 K12 ; R77 := mHover
	1445	[6214]	GETTABLE 	R77 R77 K14 ; R77 := R77["Node"]
	1446	[6214]	EQ       	0 R77 K19 ; if R77 ~= nil then PC := 1451
	1447	[6214]	JMP      	1451 ; PC := 1451
	1448	[6215]	GETGLOBAL	R77 K131 ; R77 := mInfoTip
	1449	[6215]	SELF     	R77 R77 K155 ; R78 := R77; R77 := R77[0xfe0d9469]
	1450	[6215]	CALL     	R77 2 1 ; R77(R78)
	1451	[6218]	GETUPVAL 	R77 U15 ; R77 := U15
	1452	[6218]	CALL     	R77 1 1 ; R77()
	1453	[6219]	GETUPVAL 	R77 U16 ; R77 := U16
	1454	[6219]	GETUPVAL 	R78 U17 ; R78 := U17
	1455	[6219]	GETTABLE 	R78 R78 K156 ; R78 := R78["REGION_ID_FORTRESS"]
	1456	[6219]	GETTABLE 	R77 R77 R78 ; R77 := R77[R78]
	1457	[6219]	EQ       	1 R77 K157 ; if R77 == true then PC := 1461
	1458	[6219]	JMP      	1461 ; PC := 1461
	1459	[6220]	GETUPVAL 	R77 U18 ; R77 := U18
	1460	[6220]	CALL     	R77 1 1 ; R77()
	1461	[6223]	GETGLOBAL	R77 K158 ; R77 := mPlayerPos
	1462	[6223]	GETTABLE 	R77 R77 K159 ; R77 := R77["Prop"]
	1463	[6223]	SELF     	R77 R77 K9 ; R78 := R77; R77 := R77[0x54ab95f9]
	1464	[6223]	CALL     	R77 2 2 ; R77 := R77(R78)
	1465	[6224]	GETGLOBAL	R78 K158 ; R78 := mPlayerPos
	1466	[6224]	GETTABLE 	R78 R78 K159 ; R78 := R78["Prop"]
	1467	[6224]	SELF     	R78 R78 K146 ; R79 := R78; R78 := R78[0xfaa69527]
	1468	[6224]	GETGLOBAL	R80 K147 ; R80 := 0x67652851
	1469	[6224]	CALL     	R80 1 0 ; R80,... := R80()
	1470	[6224]	CALL     	R78 0 1 ; R78(R79,...)
	1471	[6225]	GETGLOBAL	R78 K66 ; R78 := 0x5bced4c4
	1472	[6225]	GETTABLE 	R78 R78 K68 ; R78 := R78[0xe4a5b3ca]
	1473	[6225]	GETGLOBAL	R79 K158 ; R79 := mPlayerPos
	1474	[6225]	GETTABLE 	R79 R79 K159 ; R79 := R79["Prop"]
	1475	[6225]	GETTABLE 	R79 R79 K160 ; R79 := R79["mTargetVal"]
	1476	[6225]	SUB      	R79 R77 R79 ; R79 := R77 - R79
	1477	[6225]	CALL     	R78 2 2 ; R78 := R78(R79)
	1478	[6225]	LT       	1 K161 R78 ; if 0.010000 < R78 then PC := 1481
	1479	[6225]	JMP      	1481 ; PC := 1481
	1480	[6225]	OP_LOADBOOL	R78 0 1 ; R78 := false; PC := 1481
	1481	[6225]	OP_LOADBOOL	R78 1 0 ; R78 := true
	1482	[6226]	TEST     	R78 0 ; if not R78 then PC := 1506
	1483	[6226]	JMP      	1506 ; PC := 1506
	1484	[6226]	GETGLOBAL	R79 K26 ; R79 := 0x7b998233
	1485	[6226]	GETUPVAL 	R80 U19 ; R80 := U19
	1486	[6226]	CALL     	R79 2 2 ; R79 := R79(R80)
	1487	[6226]	TEST     	R79 1 ; if R79 then PC := 1506
	1488	[6226]	JMP      	1506 ; PC := 1506
	1489	[6226]	GETGLOBAL	R79 K162 ; R79 := mCountDown
	1490	[6226]	GETTABLE 	R79 R79 K163 ; R79 := R79["TransitioningOut"]
	1491	[6226]	TEST     	R79 1 ; if R79 then PC := 1506
	1492	[6226]	JMP      	1506 ; PC := 1506
	1493	[6227]	GETUPVAL 	R79 U19 ; R79 := U19
	1494	[6227]	SELF     	R79 R79 K97 ; R80 := R79; R79 := R79[0x9307aa51]
	1495	[6227]	GETGLOBAL	R81 K164 ; R81 := 0x5db3ce80
	1496	[6227]	GETGLOBAL	R82 K158 ; R82 := mPlayerPos
	1497	[6227]	GETTABLE 	R82 R82 K165 ; R82 := R82["Previous"]
	1498	[6227]	GETGLOBAL	R83 K158 ; R83 := mPlayerPos
	1499	[6227]	GETTABLE 	R83 R83 K166 ; R83 := R83["Target"]
	1500	[6227]	GETGLOBAL	R84 K158 ; R84 := mPlayerPos
	1501	[6227]	GETTABLE 	R84 R84 K159 ; R84 := R84["Prop"]
	1502	[6227]	SELF     	R84 R84 K9 ; R85 := R84; R84 := R84[0x54ab95f9]
	1503	[6227]	CALL     	R84 2 0 ; R84,... := R84(R85)
	1504	[6227]	CALL     	R81 0 0 ; R81,... := R81(R82,...)
	1505	[6227]	CALL     	R79 0 1 ; R79(R80,...)
	1506	[6229]	RETURN   	R0 1 ; return 

function #128 <?:6232,6242> (33 instructions, 132 bytes at 00000211364376C0)
0 params, 4 slots, 4 upvalues, 0 locals, 6 constants, 0 functions
	1	[6233]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[6233]	TEST     	R0 0 ; if not R0 then PC := 33
	3	[6233]	JMP      	33 ; PC := 33
	4	[6233]	GETUPVAL 	R0 U1 ; R0 := U1
	5	[6233]	GETTABLE 	R0 R0 K0 ; R0 := R0["mControlDown"]
	6	[6233]	TEST     	R0 0 ; if not R0 then PC := 33
	7	[6233]	JMP      	33 ; PC := 33
	8	[6233]	GETGLOBAL	R0 K1 ; R0 := mSuperPoly
	9	[6233]	GETUPVAL 	R1 U0 ; R1 := U0
	10	[6233]	GETTABLE 	R0 R0 R1 ; R0 := R0[R1]
	11	[6233]	TEST     	R0 0 ; if not R0 then PC := 33
	12	[6233]	JMP      	33 ; PC := 33
	13	[6235]	GETUPVAL 	R0 U2 ; R0 := U2
	14	[6235]	CALL     	R0 1 2 ; R0 := R0()
	15	[6236]	GETGLOBAL	R1 K2 ; R1 := 0x03ea2485
	16	[6236]	MOVE     	R2 R0 ; R2 := R0
	17	[6236]	GETUPVAL 	R3 U3 ; R3 := U3
	18	[6236]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	19	[6236]	LT       	0 K3 R1 ; if 0.100000 >= R1 then PC := 33
	20	[6236]	JMP      	33 ; PC := 33
	21	[6237]	GETGLOBAL	R1 K1 ; R1 := mSuperPoly
	22	[6237]	GETUPVAL 	R2 U0 ; R2 := U0
	23	[6237]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	24	[6237]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xf5934be3]
	25	[6237]	MOVE     	R3 R0 ; R3 := R0
	26	[6237]	CALL     	R1 3 1 ; R1(R2,R3)
	27	[6238]	GETGLOBAL	R1 K1 ; R1 := mSuperPoly
	28	[6238]	GETUPVAL 	R2 U0 ; R2 := U0
	29	[6238]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	30	[6238]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0x0744d776]
	31	[6238]	CALL     	R1 2 1 ; R1(R2)
	32	[6239]	SETUPVAL 	R0 U3 ; U3 := R0
	33	[6242]	RETURN   	R0 1 ; return 

function #129 <?:6244,6254> (49 instructions, 196 bytes at 000002111F503330)
1 param, 13 slots, 3 upvalues, 0 locals, 10 constants, 0 functions
	1	[6245]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[6245]	SETTABLE 	R1 K0 R0 ; R1["IsVisible"] := R0
	3	[6246]	GETGLOBAL	R1 K1 ; R1 := 0xae91e43b
	4	[6246]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xaade900e]
	5	[6246]	LOADK    	R3 K3 ; R3 := "Reticle"
	6	[6246]	LOADK    	R4 := 11.000000
	7	[6246]	MOVE     	R5 R0 ; R5 := R0
	8	[6246]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	9	[6247]	GETUPVAL 	R1 U1 ; R1 := U1
	10	[6247]	LEN      	R1 R1 ; R1 := # R1
	11	[6248]	GETUPVAL 	R2 U2 ; R2 := U2
	12	[6248]	GETTABLE 	R2 R2 K4 ; R2 := R2[0x06d055f9]
	13	[6248]	MOVE     	R3 R0 ; R3 := R0
	14	[6248]	LOADK    	R4 := 48.000000
	15	[6248]	LOADK    	R5 := 32.000000
	16	[6248]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	17	[6249]	LOADK    	R3 := 1.000000
	18	[6249]	MOVE     	R4 R1 ; R4 := R1
	19	[6249]	LOADK    	R5 := 1.000000
	20	[6249]	FORPREP  	R3 48 ; R3 -= R5; PC := 48
	21	[6250]	GETGLOBAL	R7 K1 ; R7 := 0xae91e43b
	22	[6250]	SELF     	R7 R7 K5 ; R8 := R7; R7 := R7[0xf64b7262]
	23	[6250]	GETUPVAL 	R9 U1 ; R9 := U1
	24	[6250]	GETTABLE 	R9 R9 R6 ; R9 := R9[R6]
	25	[6250]	GETTABLE 	R9 R9 K6 ; R9 := R9["clipName"]
	26	[6250]	LOADK    	R10 K7 ; R10 := "Btn"
	27	[6250]	LOADK    	R11 := 12.000000
	28	[6250]	MOVE     	R12 R2 ; R12 := R2
	29	[6250]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	30	[6251]	GETGLOBAL	R7 K1 ; R7 := 0xae91e43b
	31	[6251]	SELF     	R7 R7 K5 ; R8 := R7; R7 := R7[0xf64b7262]
	32	[6251]	GETUPVAL 	R9 U1 ; R9 := U1
	33	[6251]	GETTABLE 	R9 R9 R6 ; R9 := R9[R6]
	34	[6251]	GETTABLE 	R9 R9 K6 ; R9 := R9["clipName"]
	35	[6251]	LOADK    	R10 K7 ; R10 := "Btn"
	36	[6251]	LOADK    	R11 := 13.000000
	37	[6251]	MOVE     	R12 R2 ; R12 := R2
	38	[6251]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	39	[6252]	GETGLOBAL	R7 K1 ; R7 := 0xae91e43b
	40	[6252]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0xc0a3774b]
	41	[6252]	GETUPVAL 	R9 U1 ; R9 := U1
	42	[6252]	GETTABLE 	R9 R9 R6 ; R9 := R9[R6]
	43	[6252]	GETTABLE 	R9 R9 K6 ; R9 := R9["clipName"]
	44	[6252]	LOADK    	R10 K9 ; R10 := "Name"
	45	[6252]	LOADK    	R11 := 59.000000
	46	[6252]	NOT      	R12 R0 ; R12 := not R0
	47	[6252]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	48	[6249]	FORLOOP  	R3 21 ; R3 += R5; if R3 <= R4 then begin PC := 21; R6 := R3 end
	49	[6254]	RETURN   	R0 1 ; return 

function #130 <?:6256,6266> (44 instructions, 176 bytes at 000002111B2D1AB0)
2 params, 10 slots, 2 upvalues, 0 locals, 20 constants, 0 functions
	1	[6257]	GETGLOBAL	R2 K0 ; R2 := 0x7b998233
	2	[6257]	GETUPVAL 	R3 U0 ; R3 := U0
	3	[6257]	GETTABLE 	R3 R3 K1 ; R3 := R3["JunctionTasks"]
	4	[6257]	CALL     	R2 2 2 ; R2 := R2(R3)
	5	[6257]	TEST     	R2 0 ; if not R2 then PC := 44
	6	[6257]	JMP      	44 ; PC := 44
	7	[6258]	GETGLOBAL	R2 K2 ; R2 := mZoomedRegion
	8	[6258]	EQ       	1 R2 K3 ; if R2 == nil then PC := 15
	9	[6258]	JMP      	15 ; PC := 15
	10	[6258]	GETGLOBAL	R2 K2 ; R2 := mZoomedRegion
	11	[6258]	GETTABLE 	R2 R2 K4 ; R2 := R2["pos"]
	12	[6258]	GETTABLE 	R2 R2 K5 ; R2 := R2["x"]
	13	[6258]	LT       	1 R2 K6 ; if R2 < 0.000000 then PC := 16
	14	[6258]	JMP      	16 ; PC := 16
	15	[6258]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 16
	16	[6258]	OP_LOADBOOL	R2 1 0 ; R2 := true
	17	[6260]	GETGLOBAL	R3 K7 ; R3 := _T
	18	[6260]	GETTABLE 	R4 R0 K9 ; R4 := R0["radialSector"]
	19	[6260]	SETTABLE 	R3 K8 R4 ; R3["JunctionTasksUIRadialSector"] := R4
	20	[6261]	GETGLOBAL	R3 K7 ; R3 := _T
	21	[6261]	SETTABLE 	R3 K10 R1 ; R3["JunctionTasksInstant"] := R1
	22	[6262]	GETUPVAL 	R3 U0 ; R3 := U0
	23	[6262]	GETGLOBAL	R4 K11 ; R4 := 0x9ba7909f
	24	[6262]	SELF     	R4 R4 K12 ; R5 := R4; R4 := R4[0x6dd7aa66]
	25	[6262]	GETGLOBAL	R6 K13 ; R6 := 0x49efc1bc
	26	[6262]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	27	[6262]	SETTABLE 	R3 K1 R4 ; R3["JunctionTasks"] := R4
	28	[6263]	GETUPVAL 	R3 U0 ; R3 := U0
	29	[6263]	GETTABLE 	R3 R3 K1 ; R3 := R3["JunctionTasks"]
	30	[6263]	SELF     	R3 R3 K14 ; R4 := R3; R3 := R3[0xaa503602]
	31	[6263]	OP_LOADBOOL	R5 0 0 ; R5 := false
	32	[6263]	CALL     	R3 3 1 ; R3(R4,R5)
	33	[6264]	GETUPVAL 	R3 U0 ; R3 := U0
	34	[6264]	GETTABLE 	R3 R3 K1 ; R3 := R3["JunctionTasks"]
	35	[6264]	SELF     	R3 R3 K15 ; R4 := R3; R3 := R3[0xe4162eed]
	36	[6264]	LOADK    	R5 K16 ; R5 := "SetRightAligned"
	37	[6264]	GETUPVAL 	R6 U1 ; R6 := U1
	38	[6264]	GETTABLE 	R6 R6 K17 ; R6 := R6[0x06d055f9]
	39	[6264]	MOVE     	R7 R2 ; R7 := R2
	40	[6264]	LOADK    	R8 K18 ; R8 := "true"
	41	[6264]	LOADK    	R9 K19 ; R9 := "false"
	42	[6264]	CALL     	R6 4 0 ; R6,... := R6(R7,R8,R9)
	43	[6264]	CALL     	R3 0 1 ; R3(R4,...)
	44	[6266]	RETURN   	R0 1 ; return 

function #131 <?:6268,6279> (52 instructions, 208 bytes at 000002111B2D1C00)
0 params, 12 slots, 1 upvalue, 0 locals, 18 constants, 0 functions
	1	[6269]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[6269]	GETGLOBAL	R1 K1 ; R1 := mWagerMission
	3	[6269]	GETTABLE 	R1 R1 K2 ; R1 := R1["MovieInst"]
	4	[6269]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[6269]	TEST     	R0 1 ; if R0 then PC := 13
	6	[6269]	JMP      	13 ; PC := 13
	7	[6270]	GETGLOBAL	R0 K1 ; R0 := mWagerMission
	8	[6270]	GETTABLE 	R0 R0 K2 ; R0 := R0["MovieInst"]
	9	[6270]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0xe4162eed]
	10	[6270]	LOADK    	R2 K4 ; R2 := "ForceClose"
	11	[6270]	LOADK    	R3 K5 ; R3 := ""
	12	[6270]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	13	[6273]	LOADK    	R0 := 1.000000
	14	[6273]	GETUPVAL 	R1 U0 ; R1 := U0
	15	[6273]	LEN      	R1 R1 ; R1 := # R1
	16	[6273]	LOADK    	R2 := 1.000000
	17	[6273]	FORPREP  	R0 51 ; R0 -= R2; PC := 51
	18	[6274]	GETUPVAL 	R4 U0 ; R4 := U0
	19	[6274]	GETTABLE 	R4 R4 R3 ; R4 := R4[R3]
	20	[6275]	GETTABLE 	R5 R4 K6 ; R5 := R4["locked"]
	21	[6275]	TEST     	R5 0 ; if not R5 then PC := 27
	22	[6275]	JMP      	27 ; PC := 27
	23	[6275]	GETTABLE 	R5 R4 K7 ; R5 := R4["forceHover"]
	24	[6275]	EQ       	1 R5 K8 ; if R5 == true then PC := 27
	25	[6275]	JMP      	27 ; PC := 27
	26	[6275]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 27
	27	[6275]	OP_LOADBOOL	R5 1 0 ; R5 := true
	28	[6277]	GETGLOBAL	R6 K9 ; R6 := 0xae91e43b
	29	[6277]	SELF     	R6 R6 K10 ; R7 := R6; R6 := R6[0xaade900e]
	30	[6277]	GETTABLE 	R8 R4 K11 ; R8 := R4["clipName"]
	31	[6277]	LOADK    	R9 := 59.000000
	32	[6277]	TESTSET  	R10 R5 0 ; if not R5 then PC := 50 else R10 := R5 
	33	[6277]	JMP      	50 ; PC := 50
	34	[6277]	GETGLOBAL	R10 K12 ; R10 := _T
	35	[6277]	GETTABLE 	R10 R10 K13 ; R10 := R10["gPendingMission"]
	36	[6277]	EQ       	1 R10 K14 ; if R10 == nil then PC := 49
	37	[6277]	JMP      	49 ; PC := 49
	38	[6277]	GETTABLE 	R10 R4 K15 ; R10 := R4["radialSector"]
	39	[6277]	EQ       	1 R10 K14 ; if R10 == nil then PC := 48
	40	[6277]	JMP      	48 ; PC := 48
	41	[6277]	GETGLOBAL	R10 K12 ; R10 := _T
	42	[6277]	GETTABLE 	R10 R10 K13 ; R10 := R10["gPendingMission"]
	43	[6277]	GETTABLE 	R10 R10 K16 ; R10 := R10["baseNodeName"]
	44	[6277]	GETTABLE 	R11 R4 K15 ; R11 := R4["radialSector"]
	45	[6277]	GETTABLE 	R11 R11 K17 ; R11 := R11["name"]
	46	[6277]	EQ       	1 R10 R11 ; if R10 == R11 then PC := 49
	47	[6277]	JMP      	49 ; PC := 49
	48	[6277]	OP_LOADBOOL	R10 0 1 ; R10 := false; PC := 49
	49	[6277]	OP_LOADBOOL	R10 1 0 ; R10 := true
	50	[6277]	CALL     	R6 5 1 ; R6(R7,R8,R9,R10)
	51	[6273]	FORLOOP  	R0 18 ; R0 += R2; if R0 <= R1 then begin PC := 18; R3 := R0 end
	52	[6279]	RETURN   	R0 1 ; return 

function #132 <?:6281,6293> (48 instructions, 192 bytes at 000002111B2D1FE0)
2 params, 11 slots, 1 upvalue, 0 locals, 11 constants, 0 functions
	1	[6282]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[6282]	GETTABLE 	R2 R2 K0 ; R2 := R2[0xd2fc8b86]
	3	[6282]	MOVE     	R3 R0 ; R3 := R0
	4	[6282]	MOVE     	R4 R1 ; R4 := R1
	5	[6282]	GETGLOBAL	R5 K1 ; R5 := 0xa421af95
	6	[6282]	LOADK    	R6 := 0.000000
	7	[6282]	LOADK    	R7 := 0.000000
	8	[6282]	LOADK    	R8 := 1.000000
	9	[6282]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	10	[6282]	GETGLOBAL	R6 K2 ; R6 := mRailJack
	11	[6282]	GETTABLE 	R6 R6 K3 ; R6 := R6["voidDecoData"]
	12	[6282]	GETTABLE 	R6 R6 K4 ; R6 := R6[1.000000]
	13	[6282]	GETTABLE 	R6 R6 K5 ; R6 := R6["pos"]
	14	[6282]	GETTABLE 	R6 R6 K6 ; R6 := R6["z"]
	15	[6282]	CALL     	R2 5 2 ; R2 := R2(R3,R4,R5,R6)
	16	[6284]	NEWTABLE 	R3 0 0 ; R3 := {}
	17	[6285]	LOADK    	R4 := 1.000000
	18	[6285]	GETGLOBAL	R5 K2 ; R5 := mRailJack
	19	[6285]	GETTABLE 	R5 R5 K3 ; R5 := R5["voidDecoData"]
	20	[6285]	LEN      	R5 R5 ; R5 := # R5
	21	[6285]	LOADK    	R6 := 1.000000
	22	[6285]	FORPREP  	R4 46 ; R4 -= R6; PC := 46
	23	[6286]	GETGLOBAL	R8 K2 ; R8 := mRailJack
	24	[6286]	GETTABLE 	R8 R8 K3 ; R8 := R8["voidDecoData"]
	25	[6286]	GETTABLE 	R8 R8 R7 ; R8 := R8[R7]
	26	[6286]	GETTABLE 	R8 R8 K7 ; R8 := R8["BMin"]
	27	[6286]	SUB      	R8 R2 R8 ; R8 := R2 - R8
	28	[6287]	GETTABLE 	R9 R8 K8 ; R9 := R8["x"]
	29	[6287]	GETGLOBAL	R10 K2 ; R10 := mRailJack
	30	[6287]	GETTABLE 	R10 R10 K3 ; R10 := R10["voidDecoData"]
	31	[6287]	GETTABLE 	R10 R10 R7 ; R10 := R10[R7]
	32	[6287]	GETTABLE 	R10 R10 K9 ; R10 := R10["BScale"]
	33	[6287]	GETTABLE 	R10 R10 K8 ; R10 := R10["x"]
	34	[6287]	MUL      	R9 R9 R10 ; R9 := R9 * R10
	35	[6287]	SUB      	R9 K4 R9 ; R9 := 1.000000 - R9
	36	[6287]	SETTABLE 	R8 K8 R9 ; R8["x"] := R9
	37	[6288]	GETTABLE 	R9 R8 K10 ; R9 := R8["y"]
	38	[6288]	GETGLOBAL	R10 K2 ; R10 := mRailJack
	39	[6288]	GETTABLE 	R10 R10 K3 ; R10 := R10["voidDecoData"]
	40	[6288]	GETTABLE 	R10 R10 R7 ; R10 := R10[R7]
	41	[6288]	GETTABLE 	R10 R10 K9 ; R10 := R10["BScale"]
	42	[6288]	GETTABLE 	R10 R10 K10 ; R10 := R10["y"]
	43	[6288]	MUL      	R9 R9 R10 ; R9 := R9 * R10
	44	[6288]	SETTABLE 	R8 K10 R9 ; R8["y"] := R9
	45	[6289]	SETTABLE 	R3 R7 R8 ; R3[R7] := R8
	46	[6285]	FORLOOP  	R4 23 ; R4 += R6; if R4 <= R5 then begin PC := 23; R7 := R4 end
	47	[6292]	RETURN   	R3 2 ; return R3 
	48	[6293]	RETURN   	R0 1 ; return 

function #133 <?:6295,6309> (33 instructions, 132 bytes at 0000021137AB41C0)
5 params, 20 slots, 0 upvalues, 0 locals, 10 constants, 0 functions
	1	[6296]	LOADK    	R5 := 1.000000
	2	[6296]	LEN      	R6 R0 ; R6 := # R0
	3	[6296]	LOADK    	R7 := 1.000000
	4	[6296]	FORPREP  	R5 32 ; R5 -= R7; PC := 32
	5	[6297]	GETTABLE 	R9 R0 R8 ; R9 := R0[R8]
	6	[6297]	GETTABLE 	R9 R9 K0 ; R9 := R9["x"]
	7	[6298]	GETTABLE 	R10 R0 R8 ; R10 := R0[R8]
	8	[6298]	GETTABLE 	R10 R10 K1 ; R10 := R10["y"]
	9	[6300]	EQ       	0 R8 K2 ; if R8 ~= 2.000000 then PC := 14
	10	[6300]	JMP      	14 ; PC := 14
	11	[6301]	UNM      	R9 R9 ; R9 := ^ R9
	12	[6302]	UNM      	R10 R10 ; R10 := ^ R10
	13	[6302]	JMP      	15 ; PC := 15
	14	[6304]	UNM      	R9 R9 ; R9 := ^ R9
	15	[6307]	GETGLOBAL	R11 K3 ; R11 := mRailJack
	16	[6307]	GETTABLE 	R11 R11 K4 ; R11 := R11["voidDecos"]
	17	[6307]	GETTABLE 	R11 R11 R8 ; R11 := R11[R8]
	18	[6307]	SELF     	R11 R11 K5 ; R12 := R11; R11 := R11[0x986d2ab8]
	19	[6307]	GETGLOBAL	R13 K3 ; R13 := mRailJack
	20	[6307]	GETTABLE 	R13 R13 K6 ; R13 := R13["uvHoles"]
	21	[6307]	GETTABLE 	R13 R13 R1 ; R13 := R13[R1]
	22	[6307]	MOVE     	R14 R9 ; R14 := R9
	23	[6307]	MOVE     	R15 R10 ; R15 := R10
	24	[6307]	GETGLOBAL	R16 K7 ; R16 := 0x9bafffe3
	25	[6307]	LOADK    	R17 K8 ; R17 := 0.012500
	26	[6307]	LOADK    	R18 K9 ; R18 := 0.050000
	27	[6307]	MOVE     	R19 R2 ; R19 := R2
	28	[6307]	CALL     	R16 4 2 ; R16 := R16(R17,R18,R19)
	29	[6307]	MUL      	R16 R16 R3 ; R16 := R16 * R3
	30	[6307]	MOVE     	R17 R4 ; R17 := R4
	31	[6307]	CALL     	R11 7 1 ; R11(R12,R13,R14,R15,R16,R17)
	32	[6296]	FORLOOP  	R5 5 ; R5 += R7; if R5 <= R6 then begin PC := 5; R8 := R5 end
	33	[6309]	RETURN   	R0 1 ; return 

function #134 <?:6311,6768> (1441 instructions, 5764 bytes at 0000021191CDA350)
0 params, 90 slots, 39 upvalues, 0 locals, 204 constants, 5 functions
	1	[6312]	GETGLOBAL	R0 K0 ; R0 := 0xb693b6c1
	2	[6312]	CALL     	R0 1 2 ; R0 := R0()
	3	[6314]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	4	[6314]	GETGLOBAL	R2 K2 ; R2 := 0xae91e43b
	5	[6314]	CALL     	R1 2 2 ; R1 := R1(R2)
	6	[6314]	TEST     	R1 0 ; if not R1 then PC := 9
	7	[6314]	JMP      	9 ; PC := 9
	8	[6315]	RETURN   	R0 1 ; return 
	9	[6318]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	10	[6318]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x8a8c8d5a]
	11	[6318]	MOVE     	R3 R0 ; R3 := R0
	12	[6318]	CALL     	R1 3 1 ; R1(R2,R3)
	13	[6320]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	14	[6320]	GETUPVAL 	R2 U0 ; R2 := U0
	15	[6320]	CALL     	R1 2 2 ; R1 := R1(R2)
	16	[6320]	TEST     	R1 1 ; if R1 then PC := 22
	17	[6320]	JMP      	22 ; PC := 22
	18	[6321]	GETUPVAL 	R1 U0 ; R1 := U0
	19	[6321]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0xfaa69527]
	20	[6321]	MOVE     	R3 R0 ; R3 := R0
	21	[6321]	CALL     	R1 3 1 ; R1(R2,R3)
	22	[6324]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	23	[6324]	GETUPVAL 	R2 U1 ; R2 := U1
	24	[6324]	GETTABLE 	R2 R2 K5 ; R2 := R2["sky"]
	25	[6324]	GETTABLE 	R2 R2 K6 ; R2 := R2["Zone"]
	26	[6324]	CALL     	R1 2 2 ; R1 := R1(R2)
	27	[6324]	TEST     	R1 1 ; if R1 then PC := 29
	28	[6324]	JMP      	29 ; PC := 29
	29	[6328]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	30	[6328]	GETGLOBAL	R2 K7 ; R2 := mRailJack
	31	[6328]	GETTABLE 	R2 R2 K8 ; R2 := R2["voidDecos"]
	32	[6328]	CALL     	R1 2 2 ; R1 := R1(R2)
	33	[6328]	TEST     	R1 1 ; if R1 then PC := 297
	34	[6328]	JMP      	297 ; PC := 297
	35	[6328]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	36	[6328]	SELF     	R1 R1 K9 ; R2 := R1; R1 := R1[0xcd73323e]
	37	[6328]	CALL     	R1 2 2 ; R1 := R1(R2)
	38	[6328]	TEST     	R1 0 ; if not R1 then PC := 297
	39	[6328]	JMP      	297 ; PC := 297
	40	[6330]	GETGLOBAL	R1 K10 ; R1 := 0xb7cbd06b
	41	[6330]	GETGLOBAL	R2 K11 ; R2 := Zoom
	42	[6330]	GETTABLE 	R2 R2 K12 ; R2 := R2["MIN_ZOOM"]
	43	[6330]	GETGLOBAL	R3 K11 ; R3 := Zoom
	44	[6330]	GETTABLE 	R3 R3 K13 ; R3 := R3["MAX_ZOOM"]
	45	[6330]	CALL     	R1 3 2 ; R1 := R1(R2,R3)
	46	[6331]	GETGLOBAL	R2 K14 ; R2 := 0x42dcc9f5
	47	[6331]	GETGLOBAL	R3 K15 ; R3 := mSmoothZoom
	48	[6331]	GETTABLE 	R3 R3 K16 ; R3 := R3["mCurVal"]
	49	[6331]	GETTABLE 	R4 R1 K17 ; R4 := R1["minValue"]
	50	[6331]	GETTABLE 	R5 R1 K18 ; R5 := R1["maxValue"]
	51	[6331]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	52	[6332]	SELF     	R3 R1 K19 ; R4 := R1; R3 := R1[0x3b93153d]
	53	[6332]	MOVE     	R5 R2 ; R5 := R2
	54	[6332]	CALL     	R3 3 2 ; R3 := R3(R4,R5)
	55	[6332]	MOVE     	R2 R3 ; R2 := R3
	56	[6333]	MUL      	R2 R2 R2 ; R2 := R2 * R2
	57	[6335]	GETGLOBAL	R3 K2 ; R3 := 0xae91e43b
	58	[6335]	SELF     	R3 R3 K9 ; R4 := R3; R3 := R3[0xcd73323e]
	59	[6335]	CALL     	R3 2 2 ; R3 := R3(R4)
	60	[6335]	SELF     	R3 R3 K20 ; R4 := R3; R3 := R3[0xd1586535]
	61	[6335]	CALL     	R3 2 2 ; R3 := R3(R4)
	62	[6336]	GETGLOBAL	R4 K21 ; R4 := 0xa421af95
	63	[6336]	CALL     	R4 1 2 ; R4 := R4()
	64	[6336]	SUB      	R4 R4 R3 ; R4 := R4 - R3
	65	[6337]	GETGLOBAL	R5 K22 ; R5 := 0xc2892f65
	66	[6337]	MOVE     	R6 R4 ; R6 := R4
	67	[6337]	CALL     	R5 2 1 ; R5(R6)
	68	[6338]	GETGLOBAL	R5 K7 ; R5 := mRailJack
	69	[6338]	GETTABLE 	R5 R5 K23 ; R5 := R5[0xc95d7929]
	70	[6338]	MOVE     	R6 R3 ; R6 := R3
	71	[6338]	MOVE     	R7 R4 ; R7 := R4
	72	[6338]	CALL     	R5 3 2 ; R5 := R5(R6,R7)
	73	[6339]	LOADK    	R6 := 1.000000
	74	[6340]	GETGLOBAL	R7 K7 ; R7 := mRailJack
	75	[6340]	GETTABLE 	R7 R7 K24 ; R7 := R7[0xf6f3d76e]
	76	[6340]	MOVE     	R8 R5 ; R8 := R5
	77	[6340]	MOVE     	R9 R6 ; R9 := R6
	78	[6340]	MOVE     	R10 R2 ; R10 := R2
	79	[6340]	LOADK    	R11 := 3.000000
	80	[6340]	LOADK    	R12 K25 ; R12 := 0.030000
	81	[6340]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	82	[6341]	ADD      	R6 R6 K26 ; R6 := R6 + 1.000000
	83	[6343]	GETGLOBAL	R7 K27 ; R7 := mZoomedRegion
	84	[6343]	TEST     	R7 1 ; if R7 then PC := 141
	85	[6343]	JMP      	141 ; PC := 141
	86	[6344]	LOADK    	R7 := 1.000000
	87	[6344]	GETGLOBAL	R8 K28 ; R8 := mRegions
	88	[6344]	LEN      	R8 R8 ; R8 := # R8
	89	[6344]	LOADK    	R9 := 1.000000
	90	[6344]	FORPREP  	R7 139 ; R7 -= R9; PC := 139
	91	[6345]	GETGLOBAL	R11 K1 ; R11 := 0x7b998233
	92	[6345]	GETGLOBAL	R12 K29 ; R12 := mRegionInstances
	93	[6345]	GETTABLE 	R12 R12 R10 ; R12 := R12[R10]
	94	[6345]	CALL     	R11 2 2 ; R11 := R11(R12)
	95	[6345]	TEST     	R11 1 ; if R11 then PC := 139
	96	[6345]	JMP      	139 ; PC := 139
	97	[6345]	GETGLOBAL	R11 K29 ; R11 := mRegionInstances
	98	[6345]	GETTABLE 	R11 R11 R10 ; R11 := R11[R10]
	99	[6345]	SELF     	R11 R11 K30 ; R12 := R11; R11 := R11[0xd4cc05b4]
	100	[6345]	CALL     	R11 2 2 ; R11 := R11(R12)
	101	[6345]	TEST     	R11 0 ; if not R11 then PC := 139
	102	[6345]	JMP      	139 ; PC := 139
	103	[6346]	GETGLOBAL	R11 K31 ; R11 := 0x7f5022cf
	104	[6346]	GETTABLE 	R11 R11 K32 ; R11 := R11[0xa5c556b9]
	105	[6346]	GETGLOBAL	R12 K28 ; R12 := mRegions
	106	[6346]	GETTABLE 	R12 R12 R10 ; R12 := R12[R10]
	107	[6346]	GETTABLE 	R12 R12 K33 ; R12 := R12["name"]
	108	[6346]	LOADK    	R13 K34 ; R13 := "Space"
	109	[6346]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	110	[6346]	TEST     	R11 1 ; if R11 then PC := 139
	111	[6346]	JMP      	139 ; PC := 139
	112	[6347]	GETGLOBAL	R11 K28 ; R11 := mRegions
	113	[6347]	GETTABLE 	R11 R11 R10 ; R11 := R11[R10]
	114	[6347]	GETTABLE 	R11 R11 K35 ; R11 := R11["pos"]
	115	[6347]	SUB      	R4 R11 R3 ; R4 := R11 - R3
	116	[6348]	GETGLOBAL	R11 K22 ; R11 := 0xc2892f65
	117	[6348]	MOVE     	R12 R4 ; R12 := R4
	118	[6348]	CALL     	R11 2 1 ; R11(R12)
	119	[6349]	GETGLOBAL	R11 K7 ; R11 := mRailJack
	120	[6349]	GETTABLE 	R11 R11 K23 ; R11 := R11[0xc95d7929]
	121	[6349]	MOVE     	R12 R3 ; R12 := R3
	122	[6349]	MOVE     	R13 R4 ; R13 := R4
	123	[6349]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	124	[6349]	MOVE     	R5 R11 ; R5 := R11
	125	[6350]	GETGLOBAL	R11 K7 ; R11 := mRailJack
	126	[6350]	GETTABLE 	R11 R11 K36 ; R11 := R11["uvHoles"]
	127	[6350]	LEN      	R11 R11 ; R11 := # R11
	128	[6350]	LE       	0 R6 R11 ; if R6 > R11 then PC := 139
	129	[6350]	JMP      	139 ; PC := 139
	130	[6351]	GETGLOBAL	R11 K7 ; R11 := mRailJack
	131	[6351]	GETTABLE 	R11 R11 K24 ; R11 := R11[0xf6f3d76e]
	132	[6351]	MOVE     	R12 R5 ; R12 := R5
	133	[6351]	MOVE     	R13 R6 ; R13 := R6
	134	[6351]	MOVE     	R14 R2 ; R14 := R2
	135	[6351]	LOADK    	R15 K37 ; R15 := 1.300000
	136	[6351]	LOADK    	R16 K38 ; R16 := 0.050000
	137	[6351]	CALL     	R11 6 1 ; R11(R12,R13,R14,R15,R16)
	138	[6352]	ADD      	R6 R6 K26 ; R6 := R6 + 1.000000
	139	[6344]	FORLOOP  	R7 91 ; R7 += R9; if R7 <= R8 then begin PC := 91; R10 := R7 end
	140	[6356]	JMP      	271 ; PC := 271
	141	[6359]	GETGLOBAL	R11 K31 ; R11 := 0x7f5022cf
	142	[6359]	GETTABLE 	R11 R11 K32 ; R11 := R11[0xa5c556b9]
	143	[6359]	GETGLOBAL	R12 K27 ; R12 := mZoomedRegion
	144	[6359]	GETTABLE 	R12 R12 K33 ; R12 := R12["name"]
	145	[6359]	LOADK    	R13 K34 ; R13 := "Space"
	146	[6359]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	147	[6359]	TEST     	R11 1 ; if R11 then PC := 175
	148	[6359]	JMP      	175 ; PC := 175
	149	[6360]	GETGLOBAL	R11 K27 ; R11 := mZoomedRegion
	150	[6360]	GETTABLE 	R11 R11 K35 ; R11 := R11["pos"]
	151	[6360]	SUB      	R4 R11 R3 ; R4 := R11 - R3
	152	[6361]	GETGLOBAL	R11 K22 ; R11 := 0xc2892f65
	153	[6361]	MOVE     	R12 R4 ; R12 := R4
	154	[6361]	CALL     	R11 2 1 ; R11(R12)
	155	[6362]	GETGLOBAL	R11 K7 ; R11 := mRailJack
	156	[6362]	GETTABLE 	R11 R11 K23 ; R11 := R11[0xc95d7929]
	157	[6362]	MOVE     	R12 R3 ; R12 := R3
	158	[6362]	MOVE     	R13 R4 ; R13 := R4
	159	[6362]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	160	[6362]	MOVE     	R5 R11 ; R5 := R11
	161	[6363]	GETGLOBAL	R11 K7 ; R11 := mRailJack
	162	[6363]	GETTABLE 	R11 R11 K36 ; R11 := R11["uvHoles"]
	163	[6363]	LEN      	R11 R11 ; R11 := # R11
	164	[6363]	LE       	0 R6 R11 ; if R6 > R11 then PC := 175
	165	[6363]	JMP      	175 ; PC := 175
	166	[6364]	GETGLOBAL	R11 K7 ; R11 := mRailJack
	167	[6364]	GETTABLE 	R11 R11 K24 ; R11 := R11[0xf6f3d76e]
	168	[6364]	MOVE     	R12 R5 ; R12 := R5
	169	[6364]	MOVE     	R13 R6 ; R13 := R6
	170	[6364]	MOVE     	R14 R2 ; R14 := R2
	171	[6364]	LOADK    	R15 K37 ; R15 := 1.300000
	172	[6364]	LOADK    	R16 K38 ; R16 := 0.050000
	173	[6364]	CALL     	R11 6 1 ; R11(R12,R13,R14,R15,R16)
	174	[6365]	ADD      	R6 R6 K26 ; R6 := R6 + 1.000000
	175	[6370]	LOADK    	R11 := 1.000000
	176	[6370]	GETUPVAL 	R12 U2 ; R12 := U2
	177	[6370]	LEN      	R12 R12 ; R12 := # R12
	178	[6370]	LOADK    	R13 := 1.000000
	179	[6370]	FORPREP  	R11 270 ; R11 -= R13; PC := 270
	180	[6371]	GETUPVAL 	R15 U2 ; R15 := U2
	181	[6371]	GETTABLE 	R15 R15 R14 ; R15 := R15[R14]
	182	[6373]	GETUPVAL 	R16 U3 ; R16 := U3
	183	[6373]	GETTABLE 	R16 R16 K39 ; R16 := R16[0xaf1d1047]
	184	[6373]	GETTABLE 	R17 R15 K40 ; R17 := R15["radialSector"]
	185	[6373]	CALL     	R16 2 2 ; R16 := R16(R17)
	186	[6373]	TEST     	R16 0 ; if not R16 then PC := 213
	187	[6373]	JMP      	213 ; PC := 213
	188	[6373]	GETGLOBAL	R16 K41 ; R16 := mParticles
	189	[6373]	GETTABLE 	R16 R16 K42 ; R16 := R16["SentientFx"]
	190	[6373]	GETTABLE 	R16 R16 K26 ; R16 := R16[1.000000]
	191	[6373]	EQ       	1 R16 K43 ; if R16 == nil then PC := 201
	192	[6373]	JMP      	201 ; PC := 201
	193	[6373]	GETGLOBAL	R16 K1 ; R16 := 0x7b998233
	194	[6373]	GETGLOBAL	R17 K41 ; R17 := mParticles
	195	[6373]	GETTABLE 	R17 R17 K42 ; R17 := R17["SentientFx"]
	196	[6373]	GETTABLE 	R17 R17 K26 ; R17 := R17[1.000000]
	197	[6373]	GETTABLE 	R17 R17 K44 ; R17 := R17["mInstance"]
	198	[6373]	CALL     	R16 2 2 ; R16 := R16(R17)
	199	[6373]	TEST     	R16 0 ; if not R16 then PC := 213
	200	[6373]	JMP      	213 ; PC := 213
	201	[6374]	GETGLOBAL	R16 K41 ; R16 := mParticles
	202	[6374]	GETTABLE 	R16 R16 K42 ; R16 := R16["SentientFx"]
	203	[6374]	GETUPVAL 	R17 U4 ; R17 := U4
	204	[6374]	GETTABLE 	R17 R17 K45 ; R17 := R17[0x310355a7]
	205	[6374]	GETGLOBAL	R18 K2 ; R18 := 0xae91e43b
	206	[6374]	GETTABLE 	R19 R15 K46 ; R19 := R15["clipName"]
	207	[6374]	GETGLOBAL	R20 K47 ; R20 := 0x20998951
	208	[6374]	LOADK    	R21 := 0.000000
	209	[6374]	LOADK    	R22 := 0.000000
	210	[6374]	GETGLOBAL	R23 K48 ; R23 := 0x1211d00f
	211	[6374]	CALL     	R17 7 2 ; R17 := R17(R18,R19,R20,R21,R22,R23)
	212	[6374]	SETTABLE 	R16 K26 R17 ; R16[1.000000] := R17
	213	[6377]	GETGLOBAL	R16 K28 ; R16 := mRegions
	214	[6377]	GETTABLE 	R17 R15 K40 ; R17 := R15["radialSector"]
	215	[6377]	GETTABLE 	R17 R17 K49 ; R17 := R17["region"]
	216	[6377]	ADD      	R17 R17 K26 ; R17 := R17 + 1.000000
	217	[6377]	GETTABLE 	R16 R16 R17 ; R16 := R16[R17]
	218	[6378]	GETGLOBAL	R17 K27 ; R17 := mZoomedRegion
	219	[6378]	EQ       	0 R16 R17 ; if R16 ~= R17 then PC := 270
	220	[6378]	JMP      	270 ; PC := 270
	221	[6378]	GETGLOBAL	R17 K1 ; R17 := 0x7b998233
	222	[6378]	GETTABLE 	R18 R15 K50 ; R18 := R15["deco"]
	223	[6378]	CALL     	R17 2 2 ; R17 := R17(R18)
	224	[6378]	TEST     	R17 1 ; if R17 then PC := 270
	225	[6378]	JMP      	270 ; PC := 270
	226	[6378]	GETGLOBAL	R17 K1 ; R17 := 0x7b998233
	227	[6378]	GETTABLE 	R18 R15 K50 ; R18 := R15["deco"]
	228	[6378]	GETTABLE 	R18 R18 K44 ; R18 := R18["mInstance"]
	229	[6378]	CALL     	R17 2 2 ; R17 := R17(R18)
	230	[6378]	TEST     	R17 1 ; if R17 then PC := 270
	231	[6378]	JMP      	270 ; PC := 270
	232	[6379]	GETGLOBAL	R17 K7 ; R17 := mRailJack
	233	[6379]	GETTABLE 	R17 R17 K36 ; R17 := R17["uvHoles"]
	234	[6379]	LEN      	R17 R17 ; R17 := # R17
	235	[6379]	LE       	0 R6 R17 ; if R6 > R17 then PC := 270
	236	[6379]	JMP      	270 ; PC := 270
	237	[6380]	GETTABLE 	R17 R15 K50 ; R17 := R15["deco"]
	238	[6380]	GETTABLE 	R17 R17 K44 ; R17 := R17["mInstance"]
	239	[6380]	SELF     	R17 R17 K51 ; R18 := R17; R17 := R17[0x65d389cb]
	240	[6380]	CALL     	R17 2 2 ; R17 := R17(R18)
	241	[6380]	GETTABLE 	R18 R15 K50 ; R18 := R15["deco"]
	242	[6380]	GETTABLE 	R18 R18 K52 ; R18 := R18["mScale"]
	243	[6380]	DIV      	R17 R17 R18 ; R17 := R17 / R18
	244	[6381]	GETTABLE 	R18 R15 K53 ; R18 := R15["position"]
	245	[6381]	SUB      	R4 R18 R3 ; R4 := R18 - R3
	246	[6382]	GETGLOBAL	R18 K22 ; R18 := 0xc2892f65
	247	[6382]	MOVE     	R19 R4 ; R19 := R4
	248	[6382]	CALL     	R18 2 1 ; R18(R19)
	249	[6383]	GETGLOBAL	R18 K7 ; R18 := mRailJack
	250	[6383]	GETTABLE 	R18 R18 K23 ; R18 := R18[0xc95d7929]
	251	[6383]	MOVE     	R19 R3 ; R19 := R3
	252	[6383]	MOVE     	R20 R4 ; R20 := R4
	253	[6383]	CALL     	R18 3 2 ; R18 := R18(R19,R20)
	254	[6383]	MOVE     	R5 R18 ; R5 := R18
	255	[6384]	LOADK    	R18 := 1.000000
	256	[6384]	LEN      	R19 R5 ; R19 := # R5
	257	[6384]	LOADK    	R20 := 1.000000
	258	[6384]	FORPREP  	R18 268 ; R18 -= R20; PC := 268
	259	[6385]	GETGLOBAL	R22 K7 ; R22 := mRailJack
	260	[6385]	GETTABLE 	R22 R22 K24 ; R22 := R22[0xf6f3d76e]
	261	[6385]	MOVE     	R23 R5 ; R23 := R5
	262	[6385]	MOVE     	R24 R6 ; R24 := R6
	263	[6385]	MOVE     	R25 R2 ; R25 := R2
	264	[6385]	MUL      	R26 R17 K38 ; R26 := R17 * 0.050000
	265	[6385]	ADD      	R26 K54 R26 ; R26 := 0.100000 + R26
	266	[6385]	LOADK    	R27 K55 ; R27 := 0.015000
	267	[6385]	CALL     	R22 6 1 ; R22(R23,R24,R25,R26,R27)
	268	[6384]	FORLOOP  	R18 259 ; R18 += R20; if R18 <= R19 then begin PC := 259; R21 := R18 end
	269	[6387]	ADD      	R6 R6 K26 ; R6 := R6 + 1.000000
	270	[6370]	FORLOOP  	R11 180 ; R11 += R13; if R11 <= R12 then begin PC := 180; R14 := R11 end
	271	[6393]	MOVE     	R22 R6 ; R22 := R6
	272	[6393]	GETGLOBAL	R23 K7 ; R23 := mRailJack
	273	[6393]	GETTABLE 	R23 R23 K36 ; R23 := R23["uvHoles"]
	274	[6393]	LEN      	R23 R23 ; R23 := # R23
	275	[6393]	LOADK    	R24 := 1.000000
	276	[6393]	FORPREP  	R22 296 ; R22 -= R24; PC := 296
	277	[6394]	LOADK    	R26 := 1.000000
	278	[6394]	GETGLOBAL	R27 K7 ; R27 := mRailJack
	279	[6394]	GETTABLE 	R27 R27 K8 ; R27 := R27["voidDecos"]
	280	[6394]	LEN      	R27 R27 ; R27 := # R27
	281	[6394]	LOADK    	R28 := 1.000000
	282	[6394]	FORPREP  	R26 295 ; R26 -= R28; PC := 295
	283	[6395]	GETGLOBAL	R30 K7 ; R30 := mRailJack
	284	[6395]	GETTABLE 	R30 R30 K8 ; R30 := R30["voidDecos"]
	285	[6395]	GETTABLE 	R30 R30 R29 ; R30 := R30[R29]
	286	[6395]	SELF     	R30 R30 K56 ; R31 := R30; R30 := R30[0x986d2ab8]
	287	[6395]	GETGLOBAL	R32 K7 ; R32 := mRailJack
	288	[6395]	GETTABLE 	R32 R32 K36 ; R32 := R32["uvHoles"]
	289	[6395]	GETTABLE 	R32 R32 R25 ; R32 := R32[R25]
	290	[6395]	LOADK    	R33 := 0.000000
	291	[6395]	LOADK    	R34 := 0.000000
	292	[6395]	LOADK    	R35 := 0.000000
	293	[6395]	LOADK    	R36 := 0.000000
	294	[6395]	CALL     	R30 7 1 ; R30(R31,R32,R33,R34,R35,R36)
	295	[6394]	FORLOOP  	R26 283 ; R26 += R28; if R26 <= R27 then begin PC := 283; R29 := R26 end
	296	[6393]	FORLOOP  	R22 277 ; R22 += R24; if R22 <= R23 then begin PC := 277; R25 := R22 end
	297	[6401]	GETGLOBAL	R30 K1 ; R30 := 0x7b998233
	298	[6401]	GETUPVAL 	R31 U5 ; R31 := U5
	299	[6401]	CALL     	R30 2 2 ; R30 := R30(R31)
	300	[6401]	TEST     	R30 1 ; if R30 then PC := 326
	301	[6401]	JMP      	326 ; PC := 326
	302	[6402]	LOADK    	R30 := 1.000000
	303	[6402]	LOADK    	R31 := 3.000000
	304	[6402]	LOADK    	R32 := 1.000000
	305	[6402]	FORPREP  	R30 311 ; R30 -= R32; PC := 311
	306	[6403]	GETUPVAL 	R34 U6 ; R34 := U6
	307	[6403]	GETTABLE 	R34 R34 R33 ; R34 := R34[R33]
	308	[6403]	SELF     	R34 R34 K4 ; R35 := R34; R34 := R34[0xfaa69527]
	309	[6403]	MOVE     	R36 R0 ; R36 := R0
	310	[6403]	CALL     	R34 3 1 ; R34(R35,R36)
	311	[6402]	FORLOOP  	R30 306 ; R30 += R32; if R30 <= R31 then begin PC := 306; R33 := R30 end
	312	[6405]	GETUPVAL 	R34 U5 ; R34 := U5
	313	[6405]	SELF     	R34 R34 K57 ; R35 := R34; R34 := R34[0xa3927fe9]
	314	[6405]	GETGLOBAL	R36 K58 ; R36 := 0x60130201
	315	[6405]	GETUPVAL 	R37 U6 ; R37 := U6
	316	[6405]	GETTABLE 	R37 R37 K26 ; R37 := R37[1.000000]
	317	[6405]	GETTABLE 	R37 R37 K16 ; R37 := R37["mCurVal"]
	318	[6405]	GETUPVAL 	R38 U6 ; R38 := U6
	319	[6405]	GETTABLE 	R38 R38 K59 ; R38 := R38[2.000000]
	320	[6405]	GETTABLE 	R38 R38 K16 ; R38 := R38["mCurVal"]
	321	[6405]	GETUPVAL 	R39 U6 ; R39 := U6
	322	[6405]	GETTABLE 	R39 R39 K60 ; R39 := R39[3.000000]
	323	[6405]	GETTABLE 	R39 R39 K16 ; R39 := R39["mCurVal"]
	324	[6405]	CALL     	R36 4 0 ; R36,... := R36(R37,R38,R39)
	325	[6405]	CALL     	R34 0 1 ; R34(R35,...)
	326	[6408]	LOADNIL  	R34 R34 ; R34 := nil
	327	[6408]	SETGLOBALHASH	R34 K61 ; mPriorHoverNode := R34
	328	[6410]	GETGLOBAL	R34 K1 ; R34 := 0x7b998233
	329	[6410]	GETUPVAL 	R35 U7 ; R35 := U7
	330	[6410]	GETTABLE 	R35 R35 K62 ; R35 := R35["ResourceDrone"]
	331	[6410]	CALL     	R34 2 2 ; R34 := R34(R35)
	332	[6410]	TEST     	R34 1 ; if R34 then PC := 349
	333	[6410]	JMP      	349 ; PC := 349
	334	[6411]	GETUPVAL 	R34 U7 ; R34 := U7
	335	[6411]	GETTABLE 	R34 R34 K62 ; R34 := R34["ResourceDrone"]
	336	[6411]	SELF     	R34 R34 K63 ; R35 := R34; R34 := R34[0xe4162eed]
	337	[6411]	LOADK    	R36 K64 ; R36 := "IsBrowsingForDrone"
	338	[6411]	LOADK    	R37 K65 ; R37 := ""
	339	[6411]	CALL     	R34 4 2 ; R34 := R34(R35,R36,R37)
	340	[6411]	TEST     	R34 1 ; if R34 then PC := 351
	341	[6411]	JMP      	351 ; PC := 351
	342	[6411]	GETUPVAL 	R34 U7 ; R34 := U7
	343	[6411]	GETTABLE 	R34 R34 K62 ; R34 := R34["ResourceDrone"]
	344	[6411]	SELF     	R34 R34 K63 ; R35 := R34; R34 := R34[0xe4162eed]
	345	[6411]	LOADK    	R36 K66 ; R36 := "IsViewingExtractAllManifest"
	346	[6411]	LOADK    	R37 K65 ; R37 := ""
	347	[6411]	CALL     	R34 4 2 ; R34 := R34(R35,R36,R37)
	348	[6411]	JMP      	351 ; PC := 351
	349	[6411]	OP_LOADBOOL	R34 0 1 ; R34 := false; PC := 350
	350	[6411]	OP_LOADBOOL	R34 1 0 ; R34 := true
	351	[6412]	GETUPVAL 	R35 U8 ; R35 := U8
	352	[6412]	EQ       	1 R34 R35 ; if R34 == R35 then PC := 368
	353	[6412]	JMP      	368 ; PC := 368
	354	[6413]	GETGLOBAL	R35 K1 ; R35 := 0x7b998233
	355	[6413]	GETUPVAL 	R36 U9 ; R36 := U9
	356	[6413]	GETTABLE 	R36 R36 K67 ; R36 := R36["Movie"]
	357	[6413]	CALL     	R35 2 2 ; R35 := R35(R36)
	358	[6413]	TEST     	R35 1 ; if R35 then PC := 368
	359	[6413]	JMP      	368 ; PC := 368
	360	[6414]	GETUPVAL 	R35 U9 ; R35 := U9
	361	[6414]	GETTABLE 	R35 R35 K67 ; R35 := R35["Movie"]
	362	[6414]	SELF     	R35 R35 K63 ; R36 := R35; R35 := R35[0xe4162eed]
	363	[6414]	LOADK    	R37 K68 ; R37 := "ItemBrowsing"
	364	[6414]	GETGLOBAL	R38 K69 ; R38 := 0x64fb1586
	365	[6414]	MOVE     	R39 R34 ; R39 := R34
	366	[6414]	CALL     	R38 2 0 ; R38,... := R38(R39)
	367	[6414]	CALL     	R35 0 1 ; R35(R36,...)
	368	[6417]	SETUPVAL 	R34 U8 ; U8 := R34
	369	[6418]	GETGLOBAL	R35 K70 ; R35 := _T
	370	[6418]	GETTABLE 	R35 R35 K71 ; R35 := R35["HideSquadOverlay"]
	371	[6418]	EQ       	1 R35 K43 ; if R35 == nil then PC := 378
	372	[6418]	JMP      	378 ; PC := 378
	373	[6418]	GETGLOBAL	R35 K70 ; R35 := _T
	374	[6418]	GETTABLE 	R35 R35 K71 ; R35 := R35["HideSquadOverlay"]
	375	[6418]	LE       	1 R35 K72 ; if R35 <= 0.000000 then PC := 378
	376	[6418]	JMP      	378 ; PC := 378
	377	[6418]	OP_LOADBOOL	R35 0 1 ; R35 := false; PC := 378
	378	[6418]	OP_LOADBOOL	R35 1 0 ; R35 := true
	379	[6419]	GETGLOBAL	R36 K2 ; R36 := 0xae91e43b
	380	[6419]	SELF     	R36 R36 K73 ; R37 := R36; R36 := R36[0x368ad758]
	381	[6419]	GETUPVAL 	R38 U8 ; R38 := U8
	382	[6419]	TEST     	R38 1 ; if R38 then PC := 402
	383	[6419]	JMP      	402 ; PC := 402
	384	[6419]	GETUPVAL 	R38 U9 ; R38 := U9
	385	[6419]	GETTABLE 	R38 R38 K74 ; R38 := R38["DioOpen"]
	386	[6419]	TEST     	R38 1 ; if R38 then PC := 402
	387	[6419]	JMP      	402 ; PC := 402
	388	[6419]	GETGLOBAL	R38 K70 ; R38 := _T
	389	[6419]	GETTABLE 	R38 R38 K75 ; R38 := R38["BackgroundVisible"]
	390	[6419]	TEST     	R38 1 ; if R38 then PC := 402
	391	[6419]	JMP      	402 ; PC := 402
	392	[6419]	GETGLOBAL	R38 K70 ; R38 := _T
	393	[6419]	GETTABLE 	R38 R38 K76 ; R38 := R38["HideMapRedux"]
	394	[6419]	EQ       	1 R38 K43 ; if R38 == nil then PC := 400
	395	[6419]	JMP      	400 ; PC := 400
	396	[6419]	GETGLOBAL	R38 K70 ; R38 := _T
	397	[6419]	GETTABLE 	R38 R38 K76 ; R38 := R38["HideMapRedux"]
	398	[6419]	EQ       	0 R38 K72 ; if R38 ~= 0.000000 then PC := 402
	399	[6419]	JMP      	402 ; PC := 402
	400	[6419]	MOVE     	R38 R35 ; R38 := R35
	401	[6419]	JMP      	404 ; PC := 404
	402	[6419]	OP_LOADBOOL	R38 0 1 ; R38 := false; PC := 403
	403	[6419]	OP_LOADBOOL	R38 1 0 ; R38 := true
	404	[6419]	CALL     	R36 3 1 ; R36(R37,R38)
	405	[6421]	GETUPVAL 	R36 U10 ; R36 := U10
	406	[6421]	CALL     	R36 1 1 ; R36()
	407	[6423]	GETGLOBAL	R36 K77 ; R36 := mInputBlocked
	408	[6423]	TEST     	R36 1 ; if R36 then PC := 551
	409	[6423]	JMP      	551 ; PC := 551
	410	[6423]	GETGLOBAL	R36 K7 ; R36 := mRailJack
	411	[6423]	GETTABLE 	R36 R36 K78 ; R36 := R36["NameNodeMapRebuildQueued"]
	412	[6423]	TEST     	R36 1 ; if R36 then PC := 551
	413	[6423]	JMP      	551 ; PC := 551
	414	[6424]	GETGLOBAL	R36 K70 ; R36 := _T
	415	[6424]	GETTABLE 	R36 R36 K79 ; R36 := R36["DesiredGoToNode"]
	416	[6424]	TEST     	R36 0 ; if not R36 then PC := 508
	417	[6424]	JMP      	508 ; PC := 508
	418	[6425]	GETGLOBAL	R36 K80 ; R36 := 0x0469f296
	419	[6425]	GETGLOBAL	R37 K70 ; R37 := _T
	420	[6425]	GETTABLE 	R37 R37 K79 ; R37 := R37["DesiredGoToNode"]
	421	[6425]	CALL     	R36 2 2 ; R36 := R36(R37)
	422	[6426]	GETUPVAL 	R37 U11 ; R37 := U11
	423	[6426]	GETGLOBAL	R38 K69 ; R38 := 0x64fb1586
	424	[6426]	MOVE     	R39 R36 ; R39 := R36
	425	[6426]	CALL     	R38 2 2 ; R38 := R38(R39)
	426	[6426]	GETTABLE 	R37 R37 R38 ; R37 := R37[R38]
	427	[6440]	CLOSURE  	R38 0 ; R38 := closure(Function #1)
	428	[6440]	MOVE     	R0 R37 ; R0 := R37
	429	[6440]	GETUPVAL 	R0 U12 ; R0 := U12
	430	[6440]	GETUPVAL 	R0 U13 ; R0 := U13
	431	[6440]	GETUPVAL 	R0 U14 ; R0 := U14
	432	[6440]	GETUPVAL 	R0 U15 ; R0 := U15
	433	[6440]	GETUPVAL 	R0 U0 ; R0 := U0
	434	[6442]	TEST     	R37 0 ; if not R37 then PC := 464
	435	[6442]	JMP      	464 ; PC := 464
	436	[6443]	GETGLOBAL	R39 K28 ; R39 := mRegions
	437	[6443]	GETTABLE 	R40 R37 K40 ; R40 := R37["radialSector"]
	438	[6443]	GETTABLE 	R40 R40 K49 ; R40 := R40["region"]
	439	[6443]	ADD      	R40 R40 K26 ; R40 := R40 + 1.000000
	440	[6443]	GETTABLE 	R39 R39 R40 ; R39 := R39[R40]
	441	[6444]	GETUPVAL 	R40 U16 ; R40 := U16
	442	[6444]	GETTABLE 	R41 R37 K40 ; R41 := R37["radialSector"]
	443	[6444]	GETTABLE 	R41 R41 K49 ; R41 := R41["region"]
	444	[6444]	ADD      	R41 R41 K26 ; R41 := R41 + 1.000000
	445	[6444]	GETTABLE 	R40 R40 R41 ; R40 := R40[R41]
	446	[6444]	TEST     	R40 0 ; if not R40 then PC := 451
	447	[6444]	JMP      	451 ; PC := 451
	448	[6445]	MOVE     	R40 R38 ; R40 := R38
	449	[6445]	CALL     	R40 1 1 ; R40()
	450	[6445]	JMP      	504 ; PC := 504
	451	[6446]	GETGLOBAL	R40 K27 ; R40 := mZoomedRegion
	452	[6446]	TEST     	R40 0 ; if not R40 then PC := 459
	453	[6446]	JMP      	459 ; PC := 459
	454	[6447]	GETUPVAL 	R40 U17 ; R40 := U17
	455	[6447]	MOVE     	R41 R39 ; R41 := R39
	456	[6447]	MOVE     	R42 R38 ; R42 := R38
	457	[6447]	CALL     	R40 3 1 ; R40(R41,R42)
	458	[6447]	JMP      	504 ; PC := 504
	459	[6449]	GETUPVAL 	R40 U18 ; R40 := U18
	460	[6449]	MOVE     	R41 R39 ; R41 := R39
	461	[6449]	MOVE     	R42 R38 ; R42 := R38
	462	[6449]	CALL     	R40 3 1 ; R40(R41,R42)
	463	[6450]	JMP      	504 ; PC := 504
	464	[6451]	GETGLOBAL	R40 K7 ; R40 := mRailJack
	465	[6451]	GETTABLE 	R40 R40 K81 ; R40 := R40["Active"]
	466	[6451]	TEST     	R40 1 ; if R40 then PC := 486
	467	[6451]	JMP      	486 ; PC := 486
	468	[6451]	GETUPVAL 	R40 U19 ; R40 := U19
	469	[6451]	GETTABLE 	R40 R40 K82 ; R40 := R40["SANCTUARY_ONSLAUGHT_NODE"]
	470	[6451]	EQ       	1 R36 R40 ; if R36 == R40 then PC := 476
	471	[6451]	JMP      	476 ; PC := 476
	472	[6451]	GETUPVAL 	R40 U19 ; R40 := U19
	473	[6451]	GETTABLE 	R40 R40 K83 ; R40 := R40["SANCTUARY_ONSLAUGHT_CHALLENGE_NODE"]
	474	[6451]	EQ       	0 R36 R40 ; if R36 ~= R40 then PC := 486
	475	[6451]	JMP      	486 ; PC := 486
	476	[6452]	GETUPVAL 	R40 U19 ; R40 := U19
	477	[6452]	GETTABLE 	R40 R40 K84 ; R40 := R40[0x39db3911]
	478	[6452]	GETUPVAL 	R41 U19 ; R41 := U19
	479	[6452]	GETTABLE 	R41 R41 K83 ; R41 := R41["SANCTUARY_ONSLAUGHT_CHALLENGE_NODE"]
	480	[6452]	EQ       	1 R36 R41 ; if R36 == R41 then PC := 483
	481	[6452]	JMP      	483 ; PC := 483
	482	[6452]	OP_LOADBOOL	R41 0 1 ; R41 := false; PC := 483
	483	[6452]	OP_LOADBOOL	R41 1 0 ; R41 := true
	484	[6452]	CALL     	R40 2 1 ; R40(R41)
	485	[6452]	JMP      	504 ; PC := 504
	486	[6453]	GETGLOBAL	R40 K31 ; R40 := 0x7f5022cf
	487	[6453]	GETTABLE 	R40 R40 K32 ; R40 := R40[0xa5c556b9]
	488	[6453]	GETGLOBAL	R41 K70 ; R41 := _T
	489	[6453]	GETTABLE 	R41 R41 K79 ; R41 := R41["DesiredGoToNode"]
	490	[6453]	LOADK    	R42 K85 ; R42 := "CrewBattle"
	491	[6453]	CALL     	R40 3 2 ; R40 := R40(R41,R42)
	492	[6453]	TEST     	R40 0 ; if not R40 then PC := 504
	493	[6453]	JMP      	504 ; PC := 504
	494	[6453]	GETGLOBAL	R40 K7 ; R40 := mRailJack
	495	[6453]	GETTABLE 	R40 R40 K81 ; R40 := R40["Active"]
	496	[6453]	TEST     	R40 1 ; if R40 then PC := 504
	497	[6453]	JMP      	504 ; PC := 504
	498	[6454]	GETGLOBAL	R40 K2 ; R40 := 0xae91e43b
	499	[6454]	SELF     	R40 R40 K63 ; R41 := R40; R40 := R40[0xe4162eed]
	500	[6454]	LOADK    	R42 K86 ; R42 := "ToggleRailJack"
	501	[6454]	LOADK    	R43 K65 ; R43 := ""
	502	[6454]	CALL     	R40 4 1 ; R40(R41,R42,R43)
	503	[6455]	RETURN   	R0 1 ; return 
	504	[6457]	GETGLOBAL	R40 K70 ; R40 := _T
	505	[6457]	SETTABLE 	R40 K79 K43 ; R40["DesiredGoToNode"] := nil
	506	[6457]	CLOSE    	R36 ; SAVE R36,...
	507	[6457]	JMP      	551 ; PC := 551
	508	[6458]	GETGLOBAL	R36 K70 ; R36 := _T
	509	[6458]	GETTABLE 	R36 R36 K87 ; R36 := R36["DesiredGoToRegion"]
	510	[6458]	TEST     	R36 0 ; if not R36 then PC := 551
	511	[6458]	JMP      	551 ; PC := 551
	512	[6459]	GETUPVAL 	R36 U16 ; R36 := U16
	513	[6459]	GETGLOBAL	R37 K70 ; R37 := _T
	514	[6459]	GETTABLE 	R37 R37 K87 ; R37 := R37["DesiredGoToRegion"]
	515	[6459]	GETTABLE 	R36 R36 R37 ; R36 := R36[R37]
	516	[6459]	EQ       	1 R36 K88 ; if R36 == true then PC := 530
	517	[6459]	JMP      	530 ; PC := 530
	518	[6459]	GETGLOBAL	R36 K7 ; R36 := mRailJack
	519	[6459]	GETTABLE 	R36 R36 K81 ; R36 := R36["Active"]
	520	[6459]	TEST     	R36 0 ; if not R36 then PC := 531
	521	[6459]	JMP      	531 ; PC := 531
	522	[6459]	GETGLOBAL	R36 K7 ; R36 := mRailJack
	523	[6459]	GETTABLE 	R36 R36 K89 ; R36 := R36["Regions"]
	524	[6459]	GETGLOBAL	R37 K70 ; R37 := _T
	525	[6459]	GETTABLE 	R37 R37 K87 ; R37 := R37["DesiredGoToRegion"]
	526	[6459]	GETTABLE 	R36 R36 R37 ; R36 := R36[R37]
	527	[6459]	NOT      	R36 R36 ; R36 := not R36
	528	[6459]	JMP      	531 ; PC := 531
	529	[6459]	OP_LOADBOOL	R36 0 1 ; R36 := false; PC := 530
	530	[6459]	OP_LOADBOOL	R36 1 0 ; R36 := true
	531	[6460]	TEST     	R36 1 ; if R36 then PC := 549
	532	[6460]	JMP      	549 ; PC := 549
	533	[6461]	GETGLOBAL	R37 K27 ; R37 := mZoomedRegion
	534	[6461]	TEST     	R37 0 ; if not R37 then PC := 543
	535	[6461]	JMP      	543 ; PC := 543
	536	[6462]	GETUPVAL 	R37 U17 ; R37 := U17
	537	[6462]	GETGLOBAL	R38 K28 ; R38 := mRegions
	538	[6462]	GETGLOBAL	R39 K70 ; R39 := _T
	539	[6462]	GETTABLE 	R39 R39 K87 ; R39 := R39["DesiredGoToRegion"]
	540	[6462]	GETTABLE 	R38 R38 R39 ; R38 := R38[R39]
	541	[6462]	CALL     	R37 2 1 ; R37(R38)
	542	[6462]	JMP      	549 ; PC := 549
	543	[6464]	GETUPVAL 	R37 U18 ; R37 := U18
	544	[6464]	GETGLOBAL	R38 K28 ; R38 := mRegions
	545	[6464]	GETGLOBAL	R39 K70 ; R39 := _T
	546	[6464]	GETTABLE 	R39 R39 K87 ; R39 := R39["DesiredGoToRegion"]
	547	[6464]	GETTABLE 	R38 R38 R39 ; R38 := R38[R39]
	548	[6464]	CALL     	R37 2 1 ; R37(R38)
	549	[6467]	GETGLOBAL	R37 K70 ; R37 := _T
	550	[6467]	SETTABLE 	R37 K87 K43 ; R37["DesiredGoToRegion"] := nil
	551	[6471]	GETUPVAL 	R37 U20 ; R37 := U20
	552	[6471]	CALL     	R37 1 1 ; R37()
	553	[6473]	GETGLOBAL	R37 K1 ; R37 := 0x7b998233
	554	[6473]	GETGLOBAL	R38 K48 ; R38 := 0x1211d00f
	555	[6473]	CALL     	R37 2 2 ; R37 := R37(R38)
	556	[6473]	TEST     	R37 0 ; if not R37 then PC := 559
	557	[6473]	JMP      	559 ; PC := 559
	558	[6474]	RETURN   	R0 1 ; return 
	559	[6477]	GETUPVAL 	R37 U21 ; R37 := U21
	560	[6477]	CALL     	R37 1 1 ; R37()
	561	[6478]	GETUPVAL 	R37 U22 ; R37 := U22
	562	[6478]	CALL     	R37 1 1 ; R37()
	563	[6479]	GETUPVAL 	R37 U23 ; R37 := U23
	564	[6479]	CALL     	R37 1 1 ; R37()
	565	[6481]	GETUPVAL 	R37 U24 ; R37 := U24
	566	[6481]	CALL     	R37 1 1 ; R37()
	567	[6483]	GETGLOBAL	R37 K1 ; R37 := 0x7b998233
	568	[6483]	GETGLOBAL	R38 K7 ; R38 := mRailJack
	569	[6483]	GETTABLE 	R38 R38 K90 ; R38 := R38["Button"]
	570	[6483]	CALL     	R37 2 2 ; R37 := R37(R38)
	571	[6483]	TEST     	R37 1 ; if R37 then PC := 578
	572	[6483]	JMP      	578 ; PC := 578
	573	[6484]	GETGLOBAL	R37 K7 ; R37 := mRailJack
	574	[6484]	GETTABLE 	R37 R37 K90 ; R37 := R37["Button"]
	575	[6484]	SELF     	R37 R37 K4 ; R38 := R37; R37 := R37[0xfaa69527]
	576	[6484]	MOVE     	R39 R0 ; R39 := R0
	577	[6484]	CALL     	R37 3 1 ; R37(R38,R39)
	578	[6487]	GETGLOBAL	R37 K70 ; R37 := _T
	579	[6487]	GETTABLE 	R37 R37 K91 ; R37 := R37["WareframeChallenge"]
	580	[6487]	TEST     	R37 0 ; if not R37 then PC := 584
	581	[6487]	JMP      	584 ; PC := 584
	582	[6488]	GETUPVAL 	R37 U25 ; R37 := U25
	583	[6488]	CALL     	R37 1 1 ; R37()
	584	[6491]	GETGLOBAL	R37 K92 ; R37 := mConfirmSoloMissionQueued
	585	[6491]	TEST     	R37 0 ; if not R37 then PC := 596
	586	[6491]	JMP      	596 ; PC := 596
	587	[6492]	GETUPVAL 	R37 U7 ; R37 := U7
	588	[6492]	GETUPVAL 	R38 U4 ; R38 := U4
	589	[6492]	GETTABLE 	R38 R38 K94 ; R38 := R38[0xdedfded7]
	590	[6492]	LOADK    	R39 K95 ; R39 := "/Lotus/Language/Menu/SoloModeRequired"
	591	[6492]	LOADK    	R40 K96 ; R40 := "ConfirmSoloMission"
	592	[6492]	CALL     	R38 3 2 ; R38 := R38(R39,R40)
	593	[6492]	SETTABLE 	R37 K93 R38 ; R37["SoloMission"] := R38
	594	[6493]	OP_LOADBOOL	R37 0 0 ; R37 := false
	595	[6493]	SETGLOBALHASH	R37 K92 ; mConfirmSoloMissionQueued := R37
	596	[6496]	GETGLOBAL	R37 K1 ; R37 := 0x7b998233
	597	[6496]	GETUPVAL 	R38 U26 ; R38 := U26
	598	[6496]	CALL     	R37 2 2 ; R37 := R37(R38)
	599	[6496]	TEST     	R37 1 ; if R37 then PC := 749
	600	[6496]	JMP      	749 ; PC := 749
	601	[6496]	GETGLOBAL	R37 K1 ; R37 := 0x7b998233
	602	[6496]	GETGLOBAL	R38 K27 ; R38 := mZoomedRegion
	603	[6496]	CALL     	R37 2 2 ; R37 := R37(R38)
	604	[6496]	TEST     	R37 1 ; if R37 then PC := 749
	605	[6496]	JMP      	749 ; PC := 749
	606	[6496]	GETGLOBAL	R37 K1 ; R37 := 0x7b998233
	607	[6496]	GETGLOBAL	R38 K27 ; R38 := mZoomedRegion
	608	[6496]	GETTABLE 	R38 R38 K97 ; R38 := R38["instance"]
	609	[6496]	CALL     	R37 2 2 ; R37 := R37(R38)
	610	[6496]	TEST     	R37 1 ; if R37 then PC := 749
	611	[6496]	JMP      	749 ; PC := 749
	612	[6496]	GETGLOBAL	R37 K1 ; R37 := 0x7b998233
	613	[6496]	GETUPVAL 	R38 U1 ; R38 := U1
	614	[6496]	GETTABLE 	R38 R38 K98 ; R38 := R38["cameraSpot"]
	615	[6496]	CALL     	R37 2 2 ; R37 := R37(R38)
	616	[6496]	TEST     	R37 1 ; if R37 then PC := 749
	617	[6496]	JMP      	749 ; PC := 749
	618	[6497]	GETGLOBAL	R37 K99 ; R37 := 0x67652851
	619	[6497]	CALL     	R37 1 2 ; R37 := R37()
	620	[6498]	GETUPVAL 	R38 U26 ; R38 := U26
	621	[6498]	SELF     	R38 R38 K100 ; R39 := R38; R38 := R38[0xcb3851b8]
	622	[6498]	CALL     	R38 2 2 ; R38 := R38(R39)
	623	[6500]	GETTABLE 	R39 R38 K101 ; R39 := R38["heading"]
	624	[6500]	UNM      	R39 R39 ; R39 := ^ R39
	625	[6500]	SETTABLE 	R38 K101 R39 ; R38["heading"] := R39
	626	[6501]	GETTABLE 	R39 R38 K102 ; R39 := R38["pitch"]
	627	[6501]	UNM      	R39 R39 ; R39 := ^ R39
	628	[6501]	SETTABLE 	R38 K102 R39 ; R38["pitch"] := R39
	629	[6503]	GETGLOBAL	R39 K27 ; R39 := mZoomedRegion
	630	[6503]	GETTABLE 	R39 R39 K97 ; R39 := R39["instance"]
	631	[6503]	SELF     	R39 R39 K20 ; R40 := R39; R39 := R39[0xd1586535]
	632	[6503]	CALL     	R39 2 2 ; R39 := R39(R40)
	633	[6504]	GETGLOBAL	R40 K103 ; R40 := 0x808dc004
	634	[6504]	MOVE     	R41 R39 ; R41 := R39
	635	[6504]	MOVE     	R42 R39 ; R42 := R39
	636	[6504]	GETUPVAL 	R43 U27 ; R43 := U27
	637	[6504]	GETTABLE 	R43 R43 K104 ; R43 := R43["CAMERA_OFFSET"]
	638	[6504]	CALL     	R40 4 1 ; R40(R41,R42,R43)
	639	[6506]	GETGLOBAL	R40 K2 ; R40 := 0xae91e43b
	640	[6506]	SELF     	R40 R40 K105 ; R41 := R40; R40 := R40[0x906faf80]
	641	[6506]	CALL     	R40 2 2 ; R40 := R40(R41)
	642	[6506]	GETGLOBAL	R41 K2 ; R41 := 0xae91e43b
	643	[6506]	SELF     	R41 R41 K106 ; R42 := R41; R41 := R41[0x6b837788]
	644	[6506]	CALL     	R41 2 2 ; R41 := R41(R42)
	645	[6506]	DIV      	R40 R40 R41 ; R40 := R40 / R41
	646	[6507]	GETGLOBAL	R41 K2 ; R41 := 0xae91e43b
	647	[6507]	SELF     	R41 R41 K107 ; R42 := R41; R41 := R41[0x916fb113]
	648	[6507]	CALL     	R41 2 2 ; R41 := R41(R42)
	649	[6507]	GETGLOBAL	R42 K2 ; R42 := 0xae91e43b
	650	[6507]	SELF     	R42 R42 K108 ; R43 := R42; R42 := R42[0xaf9fda9f]
	651	[6507]	CALL     	R42 2 2 ; R42 := R42(R43)
	652	[6507]	DIV      	R41 R41 R42 ; R41 := R41 / R42
	653	[6509]	GETTABLE 	R42 R39 K109 ; R42 := R39["x"]
	654	[6509]	MUL      	R43 R40 K59 ; R43 := R40 * 2.000000
	655	[6509]	SUB      	R43 R43 K26 ; R43 := R43 - 1.000000
	656	[6509]	GETGLOBAL	R44 K110 ; R44 := 0x5bced4c4
	657	[6509]	GETTABLE 	R44 R44 K111 ; R44 := R44[0xd8da5899]
	658	[6509]	LOADK    	R45 K112 ; R45 := 0.698132
	659	[6509]	CALL     	R44 2 2 ; R44 := R44(R45)
	660	[6509]	MUL      	R43 R43 R44 ; R43 := R43 * R44
	661	[6509]	MUL      	R43 R43 K113 ; R43 := R43 * 1.500000
	662	[6509]	ADD      	R42 R42 R43 ; R42 := R42 + R43
	663	[6509]	SETTABLE 	R39 K109 R42 ; R39["x"] := R42
	664	[6510]	GETTABLE 	R42 R39 K114 ; R42 := R39["y"]
	665	[6510]	MUL      	R43 R41 K59 ; R43 := R41 * 2.000000
	666	[6510]	SUB      	R43 R43 K26 ; R43 := R43 - 1.000000
	667	[6510]	UNM      	R43 R43 ; R43 := ^ R43
	668	[6510]	MUL      	R43 R43 K115 ; R43 := R43 * 0.750000
	669	[6510]	ADD      	R42 R42 R43 ; R42 := R42 + R43
	670	[6510]	SETTABLE 	R39 K114 R42 ; R39["y"] := R42
	671	[6517]	GETGLOBAL	R42 K116 ; R42 := 0x83ddcc65
	672	[6517]	MOVE     	R43 R39 ; R43 := R39
	673	[6517]	MOVE     	R44 R39 ; R44 := R39
	674	[6517]	GETUPVAL 	R45 U26 ; R45 := U26
	675	[6517]	SELF     	R45 R45 K117 ; R46 := R45; R45 := R45[0x003c792f]
	676	[6517]	GETUPVAL 	R47 U28 ; R47 := U28
	677	[6517]	GETTABLE 	R47 R47 K118 ; R47 := R47["GAME_C1_HEAD1"]
	678	[6517]	CALL     	R45 3 0 ; R45,... := R45(R46,R47)
	679	[6517]	CALL     	R42 0 1 ; R42(R43,...)
	680	[6518]	GETGLOBAL	R42 K103 ; R42 := 0x808dc004
	681	[6518]	MOVE     	R43 R39 ; R43 := R39
	682	[6518]	MOVE     	R44 R39 ; R44 := R39
	683	[6518]	GETUPVAL 	R45 U1 ; R45 := U1
	684	[6518]	GETTABLE 	R45 R45 K119 ; R45 := R45["skyOrigin"]
	685	[6518]	CALL     	R42 4 1 ; R42(R43,R44,R45)
	686	[6519]	GETUPVAL 	R42 U1 ; R42 := U1
	687	[6519]	GETTABLE 	R42 R42 K98 ; R42 := R42["cameraSpot"]
	688	[6519]	SELF     	R42 R42 K20 ; R43 := R42; R42 := R42[0xd1586535]
	689	[6519]	CALL     	R42 2 2 ; R42 := R42(R43)
	690	[6520]	GETUPVAL 	R43 U29 ; R43 := U29
	691	[6520]	GETTABLE 	R44 R42 K120 ; R44 := R42["z"]
	692	[6520]	CALL     	R43 2 1 ; R43(R44)
	693	[6521]	SETTABLE 	R42 K120 K121 ; R42["z"] := -1.000000
	694	[6522]	GETGLOBAL	R43 K116 ; R43 := 0x83ddcc65
	695	[6522]	MOVE     	R44 R39 ; R44 := R39
	696	[6522]	MOVE     	R45 R39 ; R45 := R39
	697	[6522]	MOVE     	R46 R42 ; R46 := R42
	698	[6522]	CALL     	R43 4 1 ; R43(R44,R45,R46)
	699	[6524]	GETGLOBAL	R43 K122 ; R43 := 0x492c7f2a
	700	[6524]	MOVE     	R44 R39 ; R44 := R39
	701	[6524]	MOVE     	R45 R38 ; R45 := R38
	702	[6524]	CALL     	R43 3 2 ; R43 := R43(R44,R45)
	703	[6526]	GETGLOBAL	R44 K123 ; R44 := 0x20b7f774
	704	[6526]	GETGLOBAL	R45 K124 ; R45 := ZERO_VECTOR
	705	[6526]	MOVE     	R46 R43 ; R46 := R43
	706	[6526]	CALL     	R44 3 2 ; R44 := R44(R45,R46)
	707	[6528]	GETGLOBAL	R45 K14 ; R45 := 0x42dcc9f5
	708	[6528]	GETTABLE 	R46 R44 K101 ; R46 := R44["heading"]
	709	[6528]	LOADK    	R47 := -45.000000
	710	[6528]	LOADK    	R48 := 45.000000
	711	[6528]	CALL     	R45 4 2 ; R45 := R45(R46,R47,R48)
	712	[6528]	SETTABLE 	R44 K101 R45 ; R44["heading"] := R45
	713	[6529]	GETGLOBAL	R45 K14 ; R45 := 0x42dcc9f5
	714	[6529]	GETTABLE 	R46 R44 K102 ; R46 := R44["pitch"]
	715	[6529]	LOADK    	R47 := -35.000000
	716	[6529]	LOADK    	R48 := 35.000000
	717	[6529]	CALL     	R45 4 2 ; R45 := R45(R46,R47,R48)
	718	[6529]	SETTABLE 	R44 K102 R45 ; R44["pitch"] := R45
	719	[6530]	SETTABLE 	R44 K125 K72 ; R44["bank"] := 0.000000
	720	[6532]	GETUPVAL 	R45 U30 ; R45 := U30
	721	[6532]	SELF     	R45 R45 K126 ; R46 := R45; R45 := R45[0x188e2bee]
	722	[6532]	GETTABLE 	R47 R44 K101 ; R47 := R44["heading"]
	723	[6532]	CALL     	R45 3 1 ; R45(R46,R47)
	724	[6533]	GETUPVAL 	R45 U31 ; R45 := U31
	725	[6533]	SELF     	R45 R45 K126 ; R46 := R45; R45 := R45[0x188e2bee]
	726	[6533]	GETTABLE 	R47 R44 K102 ; R47 := R44["pitch"]
	727	[6533]	CALL     	R45 3 1 ; R45(R46,R47)
	728	[6534]	GETUPVAL 	R45 U30 ; R45 := U30
	729	[6534]	SELF     	R45 R45 K4 ; R46 := R45; R45 := R45[0xfaa69527]
	730	[6534]	MOVE     	R47 R37 ; R47 := R37
	731	[6534]	CALL     	R45 3 1 ; R45(R46,R47)
	732	[6535]	GETUPVAL 	R45 U31 ; R45 := U31
	733	[6535]	SELF     	R45 R45 K4 ; R46 := R45; R45 := R45[0xfaa69527]
	734	[6535]	MOVE     	R47 R37 ; R47 := R37
	735	[6535]	CALL     	R45 3 1 ; R45(R46,R47)
	736	[6536]	GETUPVAL 	R45 U30 ; R45 := U30
	737	[6536]	GETTABLE 	R45 R45 K16 ; R45 := R45["mCurVal"]
	738	[6536]	SETTABLE 	R44 K101 R45 ; R44["heading"] := R45
	739	[6537]	GETUPVAL 	R45 U31 ; R45 := U31
	740	[6537]	GETTABLE 	R45 R45 K16 ; R45 := R45["mCurVal"]
	741	[6537]	SETTABLE 	R44 K102 R45 ; R44["pitch"] := R45
	742	[6539]	GETUPVAL 	R45 U26 ; R45 := U26
	743	[6539]	SELF     	R45 R45 K127 ; R46 := R45; R45 := R45[0xb63fc1d8]
	744	[6539]	GETUPVAL 	R47 U28 ; R47 := U28
	745	[6539]	GETTABLE 	R47 R47 K118 ; R47 := R47["GAME_C1_HEAD1"]
	746	[6539]	MOVE     	R48 R44 ; R48 := R44
	747	[6539]	CALL     	R45 4 1 ; R45(R46,R47,R48)
	748	[6539]	JMP      	760 ; PC := 760
	749	[6540]	GETGLOBAL	R45 K1 ; R45 := 0x7b998233
	750	[6540]	GETUPVAL 	R46 U26 ; R46 := U26
	751	[6540]	CALL     	R45 2 2 ; R45 := R45(R46)
	752	[6540]	TEST     	R45 1 ; if R45 then PC := 760
	753	[6540]	JMP      	760 ; PC := 760
	754	[6541]	GETUPVAL 	R45 U26 ; R45 := U26
	755	[6541]	SELF     	R45 R45 K127 ; R46 := R45; R45 := R45[0xb63fc1d8]
	756	[6541]	GETUPVAL 	R47 U28 ; R47 := U28
	757	[6541]	GETTABLE 	R47 R47 K118 ; R47 := R47["GAME_C1_HEAD1"]
	758	[6541]	GETGLOBAL	R48 K128 ; R48 := ZERO_ROTATION
	759	[6541]	CALL     	R45 4 1 ; R45(R46,R47,R48)
	760	[6544]	GETGLOBAL	R45 K70 ; R45 := _T
	761	[6544]	GETTABLE 	R45 R45 K129 ; R45 := R45["SquadCountdownTimer"]
	762	[6544]	EQ       	1 R45 K43 ; if R45 == nil then PC := 873
	763	[6544]	JMP      	873 ; PC := 873
	764	[6545]	GETGLOBAL	R45 K70 ; R45 := _T
	765	[6545]	GETTABLE 	R45 R45 K130 ; R45 := R45["gPendingMission"]
	766	[6545]	EQ       	1 R45 K43 ; if R45 == nil then PC := 798
	767	[6545]	JMP      	798 ; PC := 798
	768	[6546]	GETGLOBAL	R45 K131 ; R45 := mCountDown
	769	[6546]	GETTABLE 	R45 R45 K132 ; R45 := R45["Node"]
	770	[6546]	EQ       	1 R45 K43 ; if R45 == nil then PC := 780
	771	[6546]	JMP      	780 ; PC := 780
	772	[6546]	GETGLOBAL	R45 K131 ; R45 := mCountDown
	773	[6546]	GETTABLE 	R45 R45 K132 ; R45 := R45["Node"]
	774	[6546]	GETTABLE 	R45 R45 K33 ; R45 := R45["name"]
	775	[6546]	GETGLOBAL	R46 K70 ; R46 := _T
	776	[6546]	GETTABLE 	R46 R46 K130 ; R46 := R46["gPendingMission"]
	777	[6546]	GETTABLE 	R46 R46 K133 ; R46 := R46["baseNodeName"]
	778	[6546]	EQ       	1 R45 R46 ; if R45 == R46 then PC := 798
	779	[6546]	JMP      	798 ; PC := 798
	780	[6547]	GETUPVAL 	R45 U11 ; R45 := U11
	781	[6547]	GETGLOBAL	R46 K69 ; R46 := 0x64fb1586
	782	[6547]	GETGLOBAL	R47 K70 ; R47 := _T
	783	[6547]	GETTABLE 	R47 R47 K130 ; R47 := R47["gPendingMission"]
	784	[6547]	GETTABLE 	R47 R47 K133 ; R47 := R47["baseNodeName"]
	785	[6547]	CALL     	R46 2 2 ; R46 := R46(R47)
	786	[6547]	GETTABLE 	R45 R45 R46 ; R45 := R45[R46]
	787	[6547]	EQ       	1 R45 K43 ; if R45 == nil then PC := 798
	788	[6547]	JMP      	798 ; PC := 798
	789	[6548]	GETGLOBAL	R45 K131 ; R45 := mCountDown
	790	[6548]	GETUPVAL 	R46 U11 ; R46 := U11
	791	[6548]	GETGLOBAL	R47 K69 ; R47 := 0x64fb1586
	792	[6548]	GETGLOBAL	R48 K70 ; R48 := _T
	793	[6548]	GETTABLE 	R48 R48 K130 ; R48 := R48["gPendingMission"]
	794	[6548]	GETTABLE 	R48 R48 K133 ; R48 := R48["baseNodeName"]
	795	[6548]	CALL     	R47 2 2 ; R47 := R47(R48)
	796	[6548]	GETTABLE 	R46 R46 R47 ; R46 := R46[R47]
	797	[6548]	SETTABLE 	R45 K132 R46 ; R45["Node"] := R46
	798	[6551]	GETGLOBAL	R45 K131 ; R45 := mCountDown
	799	[6551]	GETTABLE 	R45 R45 K132 ; R45 := R45["Node"]
	800	[6551]	EQ       	1 R45 K43 ; if R45 == nil then PC := 873
	801	[6551]	JMP      	873 ; PC := 873
	802	[6551]	GETGLOBAL	R45 K131 ; R45 := mCountDown
	803	[6551]	GETTABLE 	R45 R45 K134 ; R45 := R45["Timer"]
	804	[6551]	GETGLOBAL	R46 K70 ; R46 := _T
	805	[6551]	GETTABLE 	R46 R46 K129 ; R46 := R46["SquadCountdownTimer"]
	806	[6551]	EQ       	1 R45 R46 ; if R45 == R46 then PC := 873
	807	[6551]	JMP      	873 ; PC := 873
	808	[6552]	LOADK    	R45 := -1.000000
	809	[6553]	GETGLOBAL	R46 K131 ; R46 := mCountDown
	810	[6553]	GETTABLE 	R46 R46 K134 ; R46 := R46["Timer"]
	811	[6553]	EQ       	1 R46 K43 ; if R46 == nil then PC := 819
	812	[6553]	JMP      	819 ; PC := 819
	813	[6554]	GETGLOBAL	R46 K110 ; R46 := 0x5bced4c4
	814	[6554]	GETTABLE 	R46 R46 K135 ; R46 := R46[0x99675e23]
	815	[6554]	GETGLOBAL	R47 K131 ; R47 := mCountDown
	816	[6554]	GETTABLE 	R47 R47 K134 ; R47 := R47["Timer"]
	817	[6554]	CALL     	R46 2 2 ; R46 := R46(R47)
	818	[6554]	MOVE     	R45 R46 ; R45 := R46
	819	[6556]	GETGLOBAL	R46 K131 ; R46 := mCountDown
	820	[6556]	GETGLOBAL	R47 K70 ; R47 := _T
	821	[6556]	GETTABLE 	R47 R47 K129 ; R47 := R47["SquadCountdownTimer"]
	822	[6556]	SETTABLE 	R46 K134 R47 ; R46["Timer"] := R47
	823	[6557]	GETGLOBAL	R46 K131 ; R46 := mCountDown
	824	[6557]	GETTABLE 	R46 R46 K134 ; R46 := R46["Timer"]
	825	[6557]	EQ       	0 R46 K121 ; if R46 ~= -1.000000 then PC := 849
	826	[6557]	JMP      	849 ; PC := 849
	827	[6558]	GETGLOBAL	R46 K131 ; R46 := mCountDown
	828	[6558]	SETTABLE 	R46 K132 K43 ; R46["Node"] := nil
	829	[6560]	GETGLOBAL	R46 K131 ; R46 := mCountDown
	830	[6560]	GETTABLE 	R46 R46 K136 ; R46 := R46["TransitioningOut"]
	831	[6560]	TEST     	R46 0 ; if not R46 then PC := 849
	832	[6560]	JMP      	849 ; PC := 849
	833	[6561]	GETGLOBAL	R46 K131 ; R46 := mCountDown
	834	[6561]	SETTABLE 	R46 K136 K137 ; R46["TransitioningOut"] := false
	835	[6562]	GETGLOBAL	R46 K131 ; R46 := mCountDown
	836	[6562]	GETTABLE 	R46 R46 K138 ; R46 := R46["InitialFOV"]
	837	[6562]	EQ       	1 R46 K43 ; if R46 == nil then PC := 845
	838	[6562]	JMP      	845 ; PC := 845
	839	[6563]	GETUPVAL 	R46 U1 ; R46 := U1
	840	[6563]	GETTABLE 	R46 R46 K98 ; R46 := R46["cameraSpot"]
	841	[6563]	SELF     	R46 R46 K139 ; R47 := R46; R46 := R46[0xacea6d71]
	842	[6563]	GETGLOBAL	R48 K131 ; R48 := mCountDown
	843	[6563]	GETTABLE 	R48 R48 K138 ; R48 := R48["InitialFOV"]
	844	[6563]	CALL     	R46 3 1 ; R46(R47,R48)
	845	[6565]	GETGLOBAL	R46 K140 ; R46 := mPlayerPos
	846	[6565]	SETTABLE 	R46 K141 K137 ; R46["Locked"] := false
	847	[6566]	OP_LOADBOOL	R46 0 0 ; R46 := false
	848	[6566]	SETGLOBALHASH	R46 K77 ; mInputBlocked := R46
	849	[6570]	GETGLOBAL	R46 K110 ; R46 := 0x5bced4c4
	850	[6570]	GETTABLE 	R46 R46 K135 ; R46 := R46[0x99675e23]
	851	[6570]	GETGLOBAL	R47 K131 ; R47 := mCountDown
	852	[6570]	GETTABLE 	R47 R47 K134 ; R47 := R47["Timer"]
	853	[6570]	CALL     	R46 2 2 ; R46 := R46(R47)
	854	[6571]	EQ       	1 R45 R46 ; if R45 == R46 then PC := 873
	855	[6571]	JMP      	873 ; PC := 873
	856	[6571]	GETGLOBAL	R47 K131 ; R47 := mCountDown
	857	[6571]	GETTABLE 	R47 R47 K132 ; R47 := R47["Node"]
	858	[6571]	EQ       	1 R47 K43 ; if R47 == nil then PC := 873
	859	[6571]	JMP      	873 ; PC := 873
	860	[6572]	GETGLOBAL	R47 K41 ; R47 := mParticles
	861	[6572]	GETUPVAL 	R48 U4 ; R48 := U4
	862	[6572]	GETTABLE 	R48 R48 K45 ; R48 := R48[0x310355a7]
	863	[6572]	GETGLOBAL	R49 K2 ; R49 := 0xae91e43b
	864	[6572]	GETGLOBAL	R50 K131 ; R50 := mCountDown
	865	[6572]	GETTABLE 	R50 R50 K132 ; R50 := R50["Node"]
	866	[6572]	GETTABLE 	R50 R50 K46 ; R50 := R50["clipName"]
	867	[6572]	GETGLOBAL	R51 K143 ; R51 := 0x72696ae8
	868	[6572]	LOADK    	R52 := 0.000000
	869	[6572]	LOADK    	R53 := 0.000000
	870	[6572]	GETGLOBAL	R54 K48 ; R54 := 0x1211d00f
	871	[6572]	CALL     	R48 7 2 ; R48 := R48(R49,R50,R51,R52,R53,R54)
	872	[6572]	SETTABLE 	R47 K142 R48 ; R47["CountdownFx"] := R48
	873	[6577]	GETGLOBAL	R47 K144 ; R47 := 0x9ba7909f
	874	[6577]	SELF     	R47 R47 K145 ; R48 := R47; R47 := R47[0xc12c4f71]
	875	[6577]	CALL     	R47 2 2 ; R47 := R47(R48)
	876	[6577]	GETGLOBAL	R48 K2 ; R48 := 0xae91e43b
	877	[6577]	EQ       	0 R47 R48 ; if R47 ~= R48 then PC := 1159
	878	[6577]	JMP      	1159 ; PC := 1159
	879	[6578]	GETGLOBAL	R47 K110 ; R47 := 0x5bced4c4
	880	[6578]	GETTABLE 	R47 R47 K146 ; R47 := R47[0xb62ecfe0]
	881	[6578]	GETGLOBAL	R48 K2 ; R48 := 0xae91e43b
	882	[6578]	SELF     	R48 R48 K106 ; R49 := R48; R48 := R48[0x6b837788]
	883	[6578]	CALL     	R48 2 2 ; R48 := R48(R49)
	884	[6578]	GETGLOBAL	R49 K2 ; R49 := 0xae91e43b
	885	[6578]	SELF     	R49 R49 K147 ; R50 := R49; R49 := R49[0x091c120e]
	886	[6578]	CALL     	R49 2 0 ; R49,... := R49(R50)
	887	[6578]	CALL     	R47 0 2 ; R47 := R47(R48,...)
	888	[6579]	GETGLOBAL	R48 K148 ; R48 := mFxNodes
	889	[6579]	GETTABLE 	R48 R48 K149 ; R48 := R48["Pending"]
	890	[6579]	LEN      	R48 R48 ; R48 := # R48
	891	[6579]	LT       	0 K72 R48 ; if 0.000000 >= R48 then PC := 897
	892	[6579]	JMP      	897 ; PC := 897
	893	[6579]	GETGLOBAL	R48 K150 ; R48 := mNodeAlphaValues
	894	[6579]	GETTABLE 	R48 R48 K151 ; R48 := R48["NodeLayerAlpha"]
	895	[6579]	LT       	1 K72 R48 ; if 0.000000 < R48 then PC := 907
	896	[6579]	JMP      	907 ; PC := 907
	897	[6579]	GETGLOBAL	R48 K148 ; R48 := mFxNodes
	898	[6579]	GETTABLE 	R48 R48 K152 ; R48 := R48["Quest"]
	899	[6579]	LEN      	R48 R48 ; R48 := # R48
	900	[6579]	LT       	1 K72 R48 ; if 0.000000 < R48 then PC := 907
	901	[6579]	JMP      	907 ; PC := 907
	902	[6579]	GETGLOBAL	R48 K148 ; R48 := mFxNodes
	903	[6579]	GETTABLE 	R48 R48 K153 ; R48 := R48["Invasion"]
	904	[6579]	LEN      	R48 R48 ; R48 := # R48
	905	[6579]	LT       	0 K72 R48 ; if 0.000000 >= R48 then PC := 1173
	906	[6579]	JMP      	1173 ; PC := 1173
	907	[6580]	GETGLOBAL	R48 K148 ; R48 := mFxNodes
	908	[6580]	GETGLOBAL	R49 K148 ; R49 := mFxNodes
	909	[6580]	GETTABLE 	R49 R49 K154 ; R49 := R49["NotificationTime"]
	910	[6580]	GETGLOBAL	R50 K99 ; R50 := 0x67652851
	911	[6580]	CALL     	R50 1 2 ; R50 := R50()
	912	[6580]	SUB      	R49 R49 R50 ; R49 := R49 - R50
	913	[6580]	SETTABLE 	R48 K154 R49 ; R48["NotificationTime"] := R49
	914	[6581]	GETGLOBAL	R48 K148 ; R48 := mFxNodes
	915	[6581]	GETTABLE 	R48 R48 K154 ; R48 := R48["NotificationTime"]
	916	[6581]	LE       	0 R48 K72 ; if R48 > 0.000000 then PC := 1173
	917	[6581]	JMP      	1173 ; PC := 1173
	918	[6582]	GETGLOBAL	R48 K148 ; R48 := mFxNodes
	919	[6582]	GETUPVAL 	R49 U4 ; R49 := U4
	920	[6582]	GETTABLE 	R49 R49 K155 ; R49 := R49[0x06d055f9]
	921	[6582]	GETGLOBAL	R50 K156 ; R50 := mVorsPrizeQuestActiveNode
	922	[6582]	LOADK    	R51 := 1.000000
	923	[6582]	LOADK    	R52 := 2.000000
	924	[6582]	CALL     	R49 4 2 ; R49 := R49(R50,R51,R52)
	925	[6582]	SETTABLE 	R48 K154 R49 ; R48["NotificationTime"] := R49
	926	[6584]	OP_LOADBOOL	R48 0 0 ; R48 := false
	927	[6585]	GETGLOBAL	R49 K150 ; R49 := mNodeAlphaValues
	928	[6585]	GETTABLE 	R49 R49 K151 ; R49 := R49["NodeLayerAlpha"]
	929	[6585]	LT       	0 K72 R49 ; if 0.000000 >= R49 then PC := 1095
	930	[6585]	JMP      	1095 ; PC := 1095
	931	[6585]	GETGLOBAL	R49 K70 ; R49 := _T
	932	[6585]	GETTABLE 	R49 R49 K157 ; R49 := R49["CustomStarChartNodeFilter"]
	933	[6585]	EQ       	0 R49 K43 ; if R49 ~= nil then PC := 1095
	934	[6585]	JMP      	1095 ; PC := 1095
	935	[6586]	LOADK    	R49 := 1.000000
	936	[6586]	GETGLOBAL	R50 K148 ; R50 := mFxNodes
	937	[6586]	GETTABLE 	R50 R50 K149 ; R50 := R50["Pending"]
	938	[6586]	LEN      	R50 R50 ; R50 := # R50
	939	[6586]	LOADK    	R51 := 1.000000
	940	[6586]	FORPREP  	R49 1003 ; R49 -= R51; PC := 1003
	941	[6587]	GETGLOBAL	R53 K148 ; R53 := mFxNodes
	942	[6587]	GETTABLE 	R53 R53 K149 ; R53 := R53["Pending"]
	943	[6587]	GETTABLE 	R53 R53 R52 ; R53 := R53[R52]
	944	[6587]	GETTABLE 	R53 R53 K132 ; R53 := R53["Node"]
	945	[6587]	EQ       	1 R53 K43 ; if R53 == nil then PC := 1002
	946	[6587]	JMP      	1002 ; PC := 1002
	947	[6588]	GETGLOBAL	R53 K2 ; R53 := 0xae91e43b
	948	[6588]	SELF     	R53 R53 K158 ; R54 := R53; R53 := R53[0xb052d775]
	949	[6588]	GETGLOBAL	R55 K148 ; R55 := mFxNodes
	950	[6588]	GETTABLE 	R55 R55 K149 ; R55 := R55["Pending"]
	951	[6588]	GETTABLE 	R55 R55 R52 ; R55 := R55[R52]
	952	[6588]	GETTABLE 	R55 R55 K132 ; R55 := R55["Node"]
	953	[6588]	GETTABLE 	R55 R55 K159 ; R55 := R55["memberIndex"]
	954	[6588]	LOADK    	R56 := 0.000000
	955	[6588]	CALL     	R53 4 2 ; R53 := R53(R54,R55,R56)
	956	[6589]	GETGLOBAL	R54 K2 ; R54 := 0xae91e43b
	957	[6589]	SELF     	R54 R54 K158 ; R55 := R54; R54 := R54[0xb052d775]
	958	[6589]	GETGLOBAL	R56 K148 ; R56 := mFxNodes
	959	[6589]	GETTABLE 	R56 R56 K149 ; R56 := R56["Pending"]
	960	[6589]	GETTABLE 	R56 R56 R52 ; R56 := R56[R52]
	961	[6589]	GETTABLE 	R56 R56 K132 ; R56 := R56["Node"]
	962	[6589]	GETTABLE 	R56 R56 K159 ; R56 := R56["memberIndex"]
	963	[6589]	LOADK    	R57 := 1.000000
	964	[6589]	CALL     	R54 4 2 ; R54 := R54(R55,R56,R57)
	965	[6591]	GETUPVAL 	R55 U4 ; R55 := U4
	966	[6591]	GETTABLE 	R55 R55 K160 ; R55 := R55[0x6d7e6810]
	967	[6591]	GETGLOBAL	R56 K2 ; R56 := 0xae91e43b
	968	[6591]	NEWTABLE 	R57 0 2 ; R57 := {}
	969	[6591]	SETTABLE 	R57 K109 R53 ; R57["x"] := R53
	970	[6591]	SETTABLE 	R57 K114 R54 ; R57["y"] := R54
	971	[6591]	CALL     	R55 3 2 ; R55 := R55(R56,R57)
	972	[6592]	GETTABLE 	R56 R55 K109 ; R56 := R55["x"]
	973	[6592]	LT       	0 K72 R56 ; if 0.000000 >= R56 then PC := 1002
	974	[6592]	JMP      	1002 ; PC := 1002
	975	[6592]	GETTABLE 	R56 R55 K114 ; R56 := R55["y"]
	976	[6592]	LT       	0 K72 R56 ; if 0.000000 >= R56 then PC := 1002
	977	[6592]	JMP      	1002 ; PC := 1002
	978	[6592]	GETTABLE 	R56 R55 K109 ; R56 := R55["x"]
	979	[6592]	LT       	0 R56 K26 ; if R56 >= 1.000000 then PC := 1002
	980	[6592]	JMP      	1002 ; PC := 1002
	981	[6592]	GETTABLE 	R56 R55 K114 ; R56 := R55["y"]
	982	[6592]	LT       	0 R56 K26 ; if R56 >= 1.000000 then PC := 1002
	983	[6592]	JMP      	1002 ; PC := 1002
	984	[6593]	GETUPVAL 	R56 U0 ; R56 := U0
	985	[6593]	SELF     	R56 R56 K161 ; R57 := R56; R56 := R56[0xbd2e96ea]
	986	[6593]	DIV      	R58 R53 R47 ; R58 := R53 / R47
	987	[6593]	MUL      	R58 R58 K26 ; R58 := R58 * 1.000000
	988	[6604]	CLOSURE  	R59 1 ; R59 := closure(Function #2)
	989	[6604]	MOVE     	R0 R52 ; R0 := R52
	990	[6604]	GETUPVAL 	R0 U4 ; R0 := U4
	991	[6593]	CALL     	R56 4 1 ; R56(R57,R58,R59)
	992	[6605]	TEST     	R48 1 ; if R48 then PC := 1002
	993	[6605]	JMP      	1002 ; PC := 1002
	994	[6606]	OP_LOADBOOL	R48 1 0 ; R48 := true
	995	[6607]	GETUPVAL 	R56 U0 ; R56 := U0
	996	[6607]	SELF     	R56 R56 K161 ; R57 := R56; R56 := R56[0xbd2e96ea]
	997	[6607]	DIV      	R58 R53 R47 ; R58 := R53 / R47
	998	[6607]	MUL      	R58 R58 K26 ; R58 := R58 * 1.000000
	999	[6609]	CLOSURE  	R59 2 ; R59 := closure(Function #3)
	1000	[6609]	GETUPVAL 	R0 U4 ; R0 := U4
	1001	[6607]	CALL     	R56 4 1 ; R56(R57,R58,R59)
	1002	[6612]	CLOSE    	R52 ; SAVE R52,...
	1003	[6586]	FORLOOP  	R49 941 ; R49 += R51; if R49 <= R50 then begin PC := 941; R52 := R49 end
	1004	[6615]	LOADK    	R52 := 1.000000
	1005	[6615]	GETGLOBAL	R53 K148 ; R53 := mFxNodes
	1006	[6615]	GETTABLE 	R53 R53 K153 ; R53 := R53["Invasion"]
	1007	[6615]	LEN      	R53 R53 ; R53 := # R53
	1008	[6615]	LOADK    	R54 := 1.000000
	1009	[6615]	FORPREP  	R52 1094 ; R52 -= R54; PC := 1094
	1010	[6617]	GETGLOBAL	R56 K2 ; R56 := 0xae91e43b
	1011	[6617]	SELF     	R56 R56 K158 ; R57 := R56; R56 := R56[0xb052d775]
	1012	[6617]	GETGLOBAL	R58 K148 ; R58 := mFxNodes
	1013	[6617]	GETTABLE 	R58 R58 K153 ; R58 := R58["Invasion"]
	1014	[6617]	GETTABLE 	R58 R58 R55 ; R58 := R58[R55]
	1015	[6617]	GETTABLE 	R58 R58 K132 ; R58 := R58["Node"]
	1016	[6617]	GETTABLE 	R58 R58 K159 ; R58 := R58["memberIndex"]
	1017	[6617]	LOADK    	R59 := 0.000000
	1018	[6617]	CALL     	R56 4 2 ; R56 := R56(R57,R58,R59)
	1019	[6618]	GETGLOBAL	R57 K2 ; R57 := 0xae91e43b
	1020	[6618]	SELF     	R57 R57 K158 ; R58 := R57; R57 := R57[0xb052d775]
	1021	[6618]	GETGLOBAL	R59 K148 ; R59 := mFxNodes
	1022	[6618]	GETTABLE 	R59 R59 K153 ; R59 := R59["Invasion"]
	1023	[6618]	GETTABLE 	R59 R59 R55 ; R59 := R59[R55]
	1024	[6618]	GETTABLE 	R59 R59 K132 ; R59 := R59["Node"]
	1025	[6618]	GETTABLE 	R59 R59 K159 ; R59 := R59["memberIndex"]
	1026	[6618]	LOADK    	R60 := 1.000000
	1027	[6618]	CALL     	R57 4 2 ; R57 := R57(R58,R59,R60)
	1028	[6620]	GETUPVAL 	R58 U4 ; R58 := U4
	1029	[6620]	GETTABLE 	R58 R58 K160 ; R58 := R58[0x6d7e6810]
	1030	[6620]	GETGLOBAL	R59 K2 ; R59 := 0xae91e43b
	1031	[6620]	NEWTABLE 	R60 0 2 ; R60 := {}
	1032	[6620]	SETTABLE 	R60 K109 R56 ; R60["x"] := R56
	1033	[6620]	SETTABLE 	R60 K114 R57 ; R60["y"] := R57
	1034	[6620]	CALL     	R58 3 2 ; R58 := R58(R59,R60)
	1035	[6621]	GETTABLE 	R59 R58 K109 ; R59 := R58["x"]
	1036	[6621]	LT       	0 K72 R59 ; if 0.000000 >= R59 then PC := 1094
	1037	[6621]	JMP      	1094 ; PC := 1094
	1038	[6621]	GETTABLE 	R59 R58 K114 ; R59 := R58["y"]
	1039	[6621]	LT       	0 K72 R59 ; if 0.000000 >= R59 then PC := 1094
	1040	[6621]	JMP      	1094 ; PC := 1094
	1041	[6621]	GETTABLE 	R59 R58 K109 ; R59 := R58["x"]
	1042	[6621]	LT       	0 R59 K26 ; if R59 >= 1.000000 then PC := 1094
	1043	[6621]	JMP      	1094 ; PC := 1094
	1044	[6621]	GETTABLE 	R59 R58 K114 ; R59 := R58["y"]
	1045	[6621]	LT       	0 R59 K26 ; if R59 >= 1.000000 then PC := 1094
	1046	[6621]	JMP      	1094 ; PC := 1094
	1047	[6623]	GETGLOBAL	R59 K148 ; R59 := mFxNodes
	1048	[6623]	GETTABLE 	R59 R59 K153 ; R59 := R59["Invasion"]
	1049	[6623]	GETTABLE 	R59 R59 R55 ; R59 := R59[R55]
	1050	[6623]	EQ       	1 R59 K43 ; if R59 == nil then PC := 1094
	1051	[6623]	JMP      	1094 ; PC := 1094
	1052	[6624]	GETGLOBAL	R59 K148 ; R59 := mFxNodes
	1053	[6624]	GETTABLE 	R59 R59 K153 ; R59 := R59["Invasion"]
	1054	[6624]	GETTABLE 	R59 R59 R55 ; R59 := R59[R55]
	1055	[6624]	GETTABLE 	R59 R59 K132 ; R59 := R59["Node"]
	1056	[6624]	EQ       	1 R59 K43 ; if R59 == nil then PC := 1094
	1057	[6624]	JMP      	1094 ; PC := 1094
	1058	[6625]	GETGLOBAL	R59 K148 ; R59 := mFxNodes
	1059	[6625]	GETTABLE 	R59 R59 K153 ; R59 := R59["Invasion"]
	1060	[6625]	GETTABLE 	R59 R59 R55 ; R59 := R59[R55]
	1061	[6625]	GETTABLE 	R59 R59 K132 ; R59 := R59["Node"]
	1062	[6625]	GETTABLE 	R59 R59 K46 ; R59 := R59["clipName"]
	1063	[6625]	EQ       	1 R59 K43 ; if R59 == nil then PC := 1094
	1064	[6625]	JMP      	1094 ; PC := 1094
	1065	[6626]	GETGLOBAL	R59 K41 ; R59 := mParticles
	1066	[6626]	GETTABLE 	R59 R59 K162 ; R59 := R59["InvasionFx"]
	1067	[6626]	GETTABLE 	R59 R59 R55 ; R59 := R59[R55]
	1068	[6626]	EQ       	1 R59 K43 ; if R59 == nil then PC := 1078
	1069	[6626]	JMP      	1078 ; PC := 1078
	1070	[6626]	GETGLOBAL	R59 K1 ; R59 := 0x7b998233
	1071	[6626]	GETGLOBAL	R60 K41 ; R60 := mParticles
	1072	[6626]	GETTABLE 	R60 R60 K162 ; R60 := R60["InvasionFx"]
	1073	[6626]	GETTABLE 	R60 R60 R55 ; R60 := R60[R55]
	1074	[6626]	GETTABLE 	R60 R60 K44 ; R60 := R60["mInstance"]
	1075	[6626]	CALL     	R59 2 2 ; R59 := R59(R60)
	1076	[6626]	TEST     	R59 0 ; if not R59 then PC := 1094
	1077	[6626]	JMP      	1094 ; PC := 1094
	1078	[6628]	GETGLOBAL	R59 K41 ; R59 := mParticles
	1079	[6628]	GETTABLE 	R59 R59 K162 ; R59 := R59["InvasionFx"]
	1080	[6628]	GETUPVAL 	R60 U4 ; R60 := U4
	1081	[6628]	GETTABLE 	R60 R60 K45 ; R60 := R60[0x310355a7]
	1082	[6628]	GETGLOBAL	R61 K2 ; R61 := 0xae91e43b
	1083	[6628]	GETGLOBAL	R62 K148 ; R62 := mFxNodes
	1084	[6628]	GETTABLE 	R62 R62 K153 ; R62 := R62["Invasion"]
	1085	[6628]	GETTABLE 	R62 R62 R55 ; R62 := R62[R55]
	1086	[6628]	GETTABLE 	R62 R62 K132 ; R62 := R62["Node"]
	1087	[6628]	GETTABLE 	R62 R62 K46 ; R62 := R62["clipName"]
	1088	[6628]	GETGLOBAL	R63 K163 ; R63 := 0x354261dc
	1089	[6628]	LOADK    	R64 := 0.000000
	1090	[6628]	LOADK    	R65 := 0.000000
	1091	[6628]	GETGLOBAL	R66 K48 ; R66 := 0x1211d00f
	1092	[6628]	CALL     	R60 7 2 ; R60 := R60(R61,R62,R63,R64,R65,R66)
	1093	[6628]	SETTABLE 	R59 R55 R60 ; R59[R55] := R60
	1094	[6615]	FORLOOP  	R52 1010 ; R52 += R54; if R52 <= R53 then begin PC := 1010; R55 := R52 end
	1095	[6633]	LOADK    	R59 := 1.000000
	1096	[6633]	GETGLOBAL	R60 K148 ; R60 := mFxNodes
	1097	[6633]	GETTABLE 	R60 R60 K152 ; R60 := R60["Quest"]
	1098	[6633]	LEN      	R60 R60 ; R60 := # R60
	1099	[6633]	LOADK    	R61 := 1.000000
	1100	[6633]	FORPREP  	R59 1157 ; R59 -= R61; PC := 1157
	1101	[6635]	GETGLOBAL	R63 K2 ; R63 := 0xae91e43b
	1102	[6635]	SELF     	R63 R63 K158 ; R64 := R63; R63 := R63[0xb052d775]
	1103	[6635]	GETGLOBAL	R65 K148 ; R65 := mFxNodes
	1104	[6635]	GETTABLE 	R65 R65 K152 ; R65 := R65["Quest"]
	1105	[6635]	GETTABLE 	R65 R65 R62 ; R65 := R65[R62]
	1106	[6635]	GETTABLE 	R65 R65 K132 ; R65 := R65["Node"]
	1107	[6635]	GETTABLE 	R65 R65 K159 ; R65 := R65["memberIndex"]
	1108	[6635]	LOADK    	R66 := 0.000000
	1109	[6635]	CALL     	R63 4 2 ; R63 := R63(R64,R65,R66)
	1110	[6636]	GETGLOBAL	R64 K2 ; R64 := 0xae91e43b
	1111	[6636]	SELF     	R64 R64 K158 ; R65 := R64; R64 := R64[0xb052d775]
	1112	[6636]	GETGLOBAL	R66 K148 ; R66 := mFxNodes
	1113	[6636]	GETTABLE 	R66 R66 K152 ; R66 := R66["Quest"]
	1114	[6636]	GETTABLE 	R66 R66 R62 ; R66 := R66[R62]
	1115	[6636]	GETTABLE 	R66 R66 K132 ; R66 := R66["Node"]
	1116	[6636]	GETTABLE 	R66 R66 K159 ; R66 := R66["memberIndex"]
	1117	[6636]	LOADK    	R67 := 1.000000
	1118	[6636]	CALL     	R64 4 2 ; R64 := R64(R65,R66,R67)
	1119	[6638]	GETUPVAL 	R65 U4 ; R65 := U4
	1120	[6638]	GETTABLE 	R65 R65 K160 ; R65 := R65[0x6d7e6810]
	1121	[6638]	GETGLOBAL	R66 K2 ; R66 := 0xae91e43b
	1122	[6638]	NEWTABLE 	R67 0 2 ; R67 := {}
	1123	[6638]	SETTABLE 	R67 K109 R63 ; R67["x"] := R63
	1124	[6638]	SETTABLE 	R67 K114 R64 ; R67["y"] := R64
	1125	[6638]	CALL     	R65 3 2 ; R65 := R65(R66,R67)
	1126	[6639]	GETTABLE 	R66 R65 K109 ; R66 := R65["x"]
	1127	[6639]	LT       	0 K72 R66 ; if 0.000000 >= R66 then PC := 1156
	1128	[6639]	JMP      	1156 ; PC := 1156
	1129	[6639]	GETTABLE 	R66 R65 K114 ; R66 := R65["y"]
	1130	[6639]	LT       	0 K72 R66 ; if 0.000000 >= R66 then PC := 1156
	1131	[6639]	JMP      	1156 ; PC := 1156
	1132	[6639]	GETTABLE 	R66 R65 K109 ; R66 := R65["x"]
	1133	[6639]	LT       	0 R66 K26 ; if R66 >= 1.000000 then PC := 1156
	1134	[6639]	JMP      	1156 ; PC := 1156
	1135	[6639]	GETTABLE 	R66 R65 K114 ; R66 := R65["y"]
	1136	[6639]	LT       	0 R66 K26 ; if R66 >= 1.000000 then PC := 1156
	1137	[6639]	JMP      	1156 ; PC := 1156
	1138	[6640]	GETUPVAL 	R66 U0 ; R66 := U0
	1139	[6640]	SELF     	R66 R66 K161 ; R67 := R66; R66 := R66[0xbd2e96ea]
	1140	[6640]	DIV      	R68 R63 R47 ; R68 := R63 / R47
	1141	[6640]	MUL      	R68 R68 K26 ; R68 := R68 * 1.000000
	1142	[6650]	CLOSURE  	R69 3 ; R69 := closure(Function #4)
	1143	[6650]	MOVE     	R0 R62 ; R0 := R62
	1144	[6650]	GETUPVAL 	R0 U4 ; R0 := U4
	1145	[6640]	CALL     	R66 4 1 ; R66(R67,R68,R69)
	1146	[6651]	TEST     	R48 1 ; if R48 then PC := 1156
	1147	[6651]	JMP      	1156 ; PC := 1156
	1148	[6652]	OP_LOADBOOL	R48 1 0 ; R48 := true
	1149	[6653]	GETUPVAL 	R66 U0 ; R66 := U0
	1150	[6653]	SELF     	R66 R66 K161 ; R67 := R66; R66 := R66[0xbd2e96ea]
	1151	[6653]	DIV      	R68 R63 R47 ; R68 := R63 / R47
	1152	[6653]	MUL      	R68 R68 K26 ; R68 := R68 * 1.000000
	1153	[6655]	CLOSURE  	R69 4 ; R69 := closure(Function #5)
	1154	[6655]	GETUPVAL 	R0 U4 ; R0 := U4
	1155	[6653]	CALL     	R66 4 1 ; R66(R67,R68,R69)
	1156	[6657]	CLOSE    	R62 ; SAVE R62,...
	1157	[6633]	FORLOOP  	R59 1101 ; R59 += R61; if R59 <= R60 then begin PC := 1101; R62 := R59 end
	1158	[6660]	JMP      	1173 ; PC := 1173
	1159	[6661]	GETGLOBAL	R62 K70 ; R62 := _T
	1160	[6661]	GETTABLE 	R62 R62 K164 ; R62 := R62["DialogOpen"]
	1161	[6661]	TEST     	R62 0 ; if not R62 then PC := 1173
	1162	[6661]	JMP      	1173 ; PC := 1173
	1163	[6662]	GETGLOBAL	R62 K165 ; R62 := mDrag
	1164	[6662]	EQ       	1 R62 K43 ; if R62 == nil then PC := 1173
	1165	[6662]	JMP      	1173 ; PC := 1173
	1166	[6662]	GETGLOBAL	R62 K165 ; R62 := mDrag
	1167	[6662]	GETTABLE 	R62 R62 K166 ; R62 := R62["mDragging"]
	1168	[6662]	TEST     	R62 0 ; if not R62 then PC := 1173
	1169	[6662]	JMP      	1173 ; PC := 1173
	1170	[6663]	GETGLOBAL	R62 K165 ; R62 := mDrag
	1171	[6663]	SELF     	R62 R62 K167 ; R63 := R62; R62 := R62[0xcc5f3150]
	1172	[6663]	CALL     	R62 2 1 ; R62(R63)
	1173	[6668]	GETGLOBAL	R62 K168 ; R62 := mHover
	1174	[6668]	GETTABLE 	R62 R62 K132 ; R62 := R62["Node"]
	1175	[6668]	EQ       	1 R62 K43 ; if R62 == nil then PC := 1200
	1176	[6668]	JMP      	1200 ; PC := 1200
	1177	[6668]	GETGLOBAL	R62 K168 ; R62 := mHover
	1178	[6668]	GETTABLE 	R62 R62 K169 ; R62 := R62["UpdateTimer"]
	1179	[6668]	EQ       	1 R62 K43 ; if R62 == nil then PC := 1200
	1180	[6668]	JMP      	1200 ; PC := 1200
	1181	[6668]	GETGLOBAL	R62 K168 ; R62 := mHover
	1182	[6668]	GETTABLE 	R62 R62 K170 ; R62 := R62["TimerPre"]
	1183	[6668]	EQ       	1 R62 K43 ; if R62 == nil then PC := 1200
	1184	[6668]	JMP      	1200 ; PC := 1200
	1185	[6668]	GETGLOBAL	R62 K168 ; R62 := mHover
	1186	[6668]	GETTABLE 	R62 R62 K171 ; R62 := R62["TimerPost"]
	1187	[6668]	EQ       	1 R62 K43 ; if R62 == nil then PC := 1200
	1188	[6668]	JMP      	1200 ; PC := 1200
	1189	[6668]	GETGLOBAL	R62 K168 ; R62 := mHover
	1190	[6668]	GETTABLE 	R62 R62 K172 ; R62 := R62["NodeTime"]
	1191	[6668]	EQ       	1 R62 K43 ; if R62 == nil then PC := 1200
	1192	[6668]	JMP      	1200 ; PC := 1200
	1193	[6669]	GETUPVAL 	R62 U32 ; R62 := U32
	1194	[6669]	GETTABLE 	R62 R62 K173 ; R62 := R62[0x1b3b34b9]
	1195	[6669]	GETGLOBAL	R63 K174 ; R63 := mInfoTip
	1196	[6669]	GETGLOBAL	R64 K168 ; R64 := mHover
	1197	[6669]	MOVE     	R65 R0 ; R65 := R0
	1198	[6669]	GETGLOBAL	R66 K175 ; R66 := mMissionInfo
	1199	[6669]	CALL     	R62 5 1 ; R62(R63,R64,R65,R66)
	1200	[6672]	GETGLOBAL	R62 K7 ; R62 := mRailJack
	1201	[6672]	EQ       	1 R62 K43 ; if R62 == nil then PC := 1236
	1202	[6672]	JMP      	1236 ; PC := 1236
	1203	[6672]	GETGLOBAL	R62 K7 ; R62 := mRailJack
	1204	[6672]	GETTABLE 	R62 R62 K90 ; R62 := R62["Button"]
	1205	[6672]	EQ       	1 R62 K43 ; if R62 == nil then PC := 1236
	1206	[6672]	JMP      	1236 ; PC := 1236
	1207	[6672]	GETGLOBAL	R62 K7 ; R62 := mRailJack
	1208	[6672]	GETTABLE 	R62 R62 K90 ; R62 := R62["Button"]
	1209	[6672]	GETTABLE 	R62 R62 K176 ; R62 := R62["mVisible"]
	1210	[6672]	TEST     	R62 0 ; if not R62 then PC := 1236
	1211	[6672]	JMP      	1236 ; PC := 1236
	1212	[6673]	GETGLOBAL	R62 K7 ; R62 := mRailJack
	1213	[6673]	GETTABLE 	R62 R62 K90 ; R62 := R62["Button"]
	1214	[6673]	GETTABLE 	R62 R62 K177 ; R62 := R62["WorldStateUp"]
	1215	[6673]	GETGLOBAL	R63 K70 ; R63 := _T
	1216	[6673]	GETTABLE 	R63 R63 K178 ; R63 := R63["MouseInWorldStateWindow"]
	1217	[6673]	EQ       	1 R62 R63 ; if R62 == R63 then PC := 1236
	1218	[6673]	JMP      	1236 ; PC := 1236
	1219	[6674]	GETGLOBAL	R62 K7 ; R62 := mRailJack
	1220	[6674]	GETTABLE 	R62 R62 K90 ; R62 := R62["Button"]
	1221	[6674]	GETGLOBAL	R63 K70 ; R63 := _T
	1222	[6674]	GETTABLE 	R63 R63 K178 ; R63 := R63["MouseInWorldStateWindow"]
	1223	[6674]	SETTABLE 	R62 K177 R63 ; R62["WorldStateUp"] := R63
	1224	[6675]	GETGLOBAL	R62 K7 ; R62 := mRailJack
	1225	[6675]	GETTABLE 	R62 R62 K90 ; R62 := R62["Button"]
	1226	[6675]	SELF     	R62 R62 K179 ; R63 := R62; R62 := R62[0x16ca639e]
	1227	[6675]	GETUPVAL 	R64 U4 ; R64 := U4
	1228	[6675]	GETTABLE 	R64 R64 K155 ; R64 := R64[0x06d055f9]
	1229	[6675]	GETGLOBAL	R65 K7 ; R65 := mRailJack
	1230	[6675]	GETTABLE 	R65 R65 K90 ; R65 := R65["Button"]
	1231	[6675]	GETTABLE 	R65 R65 K177 ; R65 := R65["WorldStateUp"]
	1232	[6675]	LOADK    	R66 := 10.000000
	1233	[6675]	LOADK    	R67 := 100.000000
	1234	[6675]	CALL     	R64 4 0 ; R64,... := R64(R65,R66,R67)
	1235	[6675]	CALL     	R62 0 1 ; R62(R63,...)
	1236	[6680]	GETGLOBAL	R62 K1 ; R62 := 0x7b998233
	1237	[6680]	GETGLOBAL	R63 K41 ; R63 := mParticles
	1238	[6680]	GETTABLE 	R63 R63 K180 ; R63 := R63["CountDownFx"]
	1239	[6680]	CALL     	R62 2 2 ; R62 := R62(R63)
	1240	[6680]	TEST     	R62 1 ; if R62 then PC := 1254
	1241	[6680]	JMP      	1254 ; PC := 1254
	1242	[6680]	GETGLOBAL	R62 K1 ; R62 := 0x7b998233
	1243	[6680]	GETGLOBAL	R63 K41 ; R63 := mParticles
	1244	[6680]	GETTABLE 	R63 R63 K180 ; R63 := R63["CountDownFx"]
	1245	[6680]	GETTABLE 	R63 R63 K44 ; R63 := R63["mInstance"]
	1246	[6680]	CALL     	R62 2 2 ; R62 := R62(R63)
	1247	[6680]	TEST     	R62 1 ; if R62 then PC := 1254
	1248	[6680]	JMP      	1254 ; PC := 1254
	1249	[6681]	GETGLOBAL	R62 K41 ; R62 := mParticles
	1250	[6681]	GETTABLE 	R62 R62 K180 ; R62 := R62["CountDownFx"]
	1251	[6681]	SELF     	R62 R62 K4 ; R63 := R62; R62 := R62[0xfaa69527]
	1252	[6681]	MOVE     	R64 R0 ; R64 := R0
	1253	[6681]	CALL     	R62 3 1 ; R62(R63,R64)
	1254	[6684]	GETGLOBAL	R62 K181 ; R62 := 0xcfc01047
	1255	[6684]	GETGLOBAL	R63 K41 ; R63 := mParticles
	1256	[6684]	GETTABLE 	R63 R63 K182 ; R63 := R63["PendingFx"]
	1257	[6684]	CALL     	R62 2 4 ; R62,R63,R64 := R62(R63)
	1258	[6684]	JMP      	1271 ; PC := 1271
	1259	[6685]	GETGLOBAL	R67 K1 ; R67 := 0x7b998233
	1260	[6685]	GETTABLE 	R68 R66 K44 ; R68 := R66["mInstance"]
	1261	[6685]	CALL     	R67 2 2 ; R67 := R67(R68)
	1262	[6685]	TEST     	R67 1 ; if R67 then PC := 1268
	1263	[6685]	JMP      	1268 ; PC := 1268
	1264	[6686]	SELF     	R67 R66 K4 ; R68 := R66; R67 := R66[0xfaa69527]
	1265	[6686]	MOVE     	R69 R0 ; R69 := R0
	1266	[6686]	CALL     	R67 3 1 ; R67(R68,R69)
	1267	[6686]	JMP      	1271 ; PC := 1271
	1268	[6688]	GETGLOBAL	R67 K41 ; R67 := mParticles
	1269	[6688]	GETTABLE 	R67 R67 K182 ; R67 := R67["PendingFx"]
	1270	[6688]	SETTABLE 	R67 R65 K43 ; R67[R65] := nil
	1271	[6684]	TFORLOOP 	R62 2 ; R65,R66 := R62(R63,R64); if R65 ~= nil then begin PC = 1259; R64 := R65 end
	1272	[6689]	JMP      	1259 ; PC := 1259
	1273	[6692]	GETGLOBAL	R67 K181 ; R67 := 0xcfc01047
	1274	[6692]	GETGLOBAL	R68 K41 ; R68 := mParticles
	1275	[6692]	GETTABLE 	R68 R68 K183 ; R68 := R68["QuestFx"]
	1276	[6692]	CALL     	R67 2 4 ; R67,R68,R69 := R67(R68)
	1277	[6692]	JMP      	1290 ; PC := 1290
	1278	[6693]	GETGLOBAL	R72 K1 ; R72 := 0x7b998233
	1279	[6693]	GETTABLE 	R73 R71 K44 ; R73 := R71["mInstance"]
	1280	[6693]	CALL     	R72 2 2 ; R72 := R72(R73)
	1281	[6693]	TEST     	R72 1 ; if R72 then PC := 1287
	1282	[6693]	JMP      	1287 ; PC := 1287
	1283	[6694]	SELF     	R72 R71 K4 ; R73 := R71; R72 := R71[0xfaa69527]
	1284	[6694]	MOVE     	R74 R0 ; R74 := R0
	1285	[6694]	CALL     	R72 3 1 ; R72(R73,R74)
	1286	[6694]	JMP      	1290 ; PC := 1290
	1287	[6696]	GETGLOBAL	R72 K41 ; R72 := mParticles
	1288	[6696]	GETTABLE 	R72 R72 K183 ; R72 := R72["QuestFx"]
	1289	[6696]	SETTABLE 	R72 R70 K43 ; R72[R70] := nil
	1290	[6692]	TFORLOOP 	R67 2 ; R70,R71 := R67(R68,R69); if R70 ~= nil then begin PC = 1278; R69 := R70 end
	1291	[6697]	JMP      	1278 ; PC := 1278
	1292	[6700]	GETGLOBAL	R72 K181 ; R72 := 0xcfc01047
	1293	[6700]	GETGLOBAL	R73 K41 ; R73 := mParticles
	1294	[6700]	GETTABLE 	R73 R73 K162 ; R73 := R73["InvasionFx"]
	1295	[6700]	CALL     	R72 2 4 ; R72,R73,R74 := R72(R73)
	1296	[6700]	JMP      	1309 ; PC := 1309
	1297	[6701]	GETGLOBAL	R77 K1 ; R77 := 0x7b998233
	1298	[6701]	GETTABLE 	R78 R76 K44 ; R78 := R76["mInstance"]
	1299	[6701]	CALL     	R77 2 2 ; R77 := R77(R78)
	1300	[6701]	TEST     	R77 1 ; if R77 then PC := 1306
	1301	[6701]	JMP      	1306 ; PC := 1306
	1302	[6702]	SELF     	R77 R76 K4 ; R78 := R76; R77 := R76[0xfaa69527]
	1303	[6702]	MOVE     	R79 R0 ; R79 := R0
	1304	[6702]	CALL     	R77 3 1 ; R77(R78,R79)
	1305	[6702]	JMP      	1309 ; PC := 1309
	1306	[6704]	GETGLOBAL	R77 K41 ; R77 := mParticles
	1307	[6704]	GETTABLE 	R77 R77 K162 ; R77 := R77["InvasionFx"]
	1308	[6704]	SETTABLE 	R77 R75 K43 ; R77[R75] := nil
	1309	[6700]	TFORLOOP 	R72 2 ; R75,R76 := R72(R73,R74); if R75 ~= nil then begin PC = 1297; R74 := R75 end
	1310	[6705]	JMP      	1297 ; PC := 1297
	1311	[6708]	GETGLOBAL	R77 K181 ; R77 := 0xcfc01047
	1312	[6708]	GETGLOBAL	R78 K41 ; R78 := mParticles
	1313	[6708]	GETTABLE 	R78 R78 K42 ; R78 := R78["SentientFx"]
	1314	[6708]	CALL     	R77 2 4 ; R77,R78,R79 := R77(R78)
	1315	[6708]	JMP      	1328 ; PC := 1328
	1316	[6709]	GETGLOBAL	R82 K1 ; R82 := 0x7b998233
	1317	[6709]	GETTABLE 	R83 R81 K44 ; R83 := R81["mInstance"]
	1318	[6709]	CALL     	R82 2 2 ; R82 := R82(R83)
	1319	[6709]	TEST     	R82 1 ; if R82 then PC := 1325
	1320	[6709]	JMP      	1325 ; PC := 1325
	1321	[6710]	SELF     	R82 R81 K4 ; R83 := R81; R82 := R81[0xfaa69527]
	1322	[6710]	MOVE     	R84 R0 ; R84 := R0
	1323	[6710]	CALL     	R82 3 1 ; R82(R83,R84)
	1324	[6710]	JMP      	1328 ; PC := 1328
	1325	[6712]	GETGLOBAL	R82 K41 ; R82 := mParticles
	1326	[6712]	GETTABLE 	R82 R82 K42 ; R82 := R82["SentientFx"]
	1327	[6712]	SETTABLE 	R82 R80 K43 ; R82[R80] := nil
	1328	[6708]	TFORLOOP 	R77 2 ; R80,R81 := R77(R78,R79); if R80 ~= nil then begin PC = 1316; R79 := R80 end
	1329	[6713]	JMP      	1316 ; PC := 1316
	1330	[6716]	GETUPVAL 	R82 U33 ; R82 := U33
	1331	[6716]	TEST     	R82 0 ; if not R82 then PC := 1337
	1332	[6716]	JMP      	1337 ; PC := 1337
	1333	[6717]	OP_LOADBOOL	R82 0 0 ; R82 := false
	1334	[6717]	SETUPVAL 	R82 U33 ; U33 := R82
	1335	[6718]	GETUPVAL 	R82 U34 ; R82 := U34
	1336	[6718]	CALL     	R82 1 1 ; R82()
	1337	[6721]	GETGLOBAL	R82 K70 ; R82 := _T
	1338	[6721]	GETTABLE 	R82 R82 K184 ; R82 := R82["UserInvitePending"]
	1339	[6721]	EQ       	0 R82 K43 ; if R82 ~= nil then PC := 1342
	1340	[6721]	JMP      	1342 ; PC := 1342
	1341	[6721]	OP_LOADBOOL	R82 0 1 ; R82 := false; PC := 1342
	1342	[6721]	OP_LOADBOOL	R82 1 0 ; R82 := true
	1343	[6722]	GETGLOBAL	R83 K185 ; R83 := mInvitePopupShowing
	1344	[6722]	EQ       	1 R83 R82 ; if R83 == R82 then PC := 1349
	1345	[6722]	JMP      	1349 ; PC := 1349
	1346	[6723]	SETGLOBALHASH	R82 K185 ; mInvitePopupShowing := R82
	1347	[6724]	GETUPVAL 	R83 U35 ; R83 := U35
	1348	[6724]	CALL     	R83 1 1 ; R83()
	1349	[6730]	GETUPVAL 	R83 U36 ; R83 := U36
	1350	[6730]	GETTABLE 	R83 R83 K186 ; R83 := R83["mHandleJunctionClick"]
	1351	[6730]	TEST     	R83 0 ; if not R83 then PC := 1361
	1352	[6730]	JMP      	1361 ; PC := 1361
	1353	[6732]	GETUPVAL 	R83 U36 ; R83 := U36
	1354	[6732]	GETTABLE 	R83 R83 K187 ; R83 := R83[0xd1b09c9d]
	1355	[6732]	CALL     	R83 1 2 ; R83 := R83()
	1356	[6732]	TEST     	R83 1 ; if R83 then PC := 1413
	1357	[6732]	JMP      	1413 ; PC := 1413
	1358	[6733]	GETUPVAL 	R83 U36 ; R83 := U36
	1359	[6733]	SETTABLE 	R83 K186 K43 ; R83["mHandleJunctionClick"] := nil
	1360	[6734]	JMP      	1413 ; PC := 1413
	1361	[6735]	GETUPVAL 	R83 U36 ; R83 := U36
	1362	[6735]	GETTABLE 	R83 R83 K188 ; R83 := R83["JunctionDrag"]
	1363	[6735]	TEST     	R83 0 ; if not R83 then PC := 1397
	1364	[6735]	JMP      	1397 ; PC := 1397
	1365	[6737]	GETGLOBAL	R83 K189 ; R83 := 0x03f57322
	1366	[6737]	GETGLOBAL	R84 K2 ; R84 := 0xae91e43b
	1367	[6737]	SELF     	R84 R84 K190 ; R85 := R84; R84 := R84[0x5b638cce]
	1368	[6737]	LOADK    	R86 K191 ; R86 := "_root"
	1369	[6737]	LOADK    	R87 K192 ; R87 := "_xmouse"
	1370	[6737]	CALL     	R84 4 0 ; R84,... := R84(R85,R86,R87)
	1371	[6737]	CALL     	R83 0 2 ; R83 := R83(R84,...)
	1372	[6738]	GETGLOBAL	R84 K189 ; R84 := 0x03f57322
	1373	[6738]	GETGLOBAL	R85 K2 ; R85 := 0xae91e43b
	1374	[6738]	SELF     	R85 R85 K190 ; R86 := R85; R85 := R85[0x5b638cce]
	1375	[6738]	LOADK    	R87 K191 ; R87 := "_root"
	1376	[6738]	LOADK    	R88 K193 ; R88 := "_ymouse"
	1377	[6738]	CALL     	R85 4 0 ; R85,... := R85(R86,R87,R88)
	1378	[6738]	CALL     	R84 0 2 ; R84 := R84(R85,...)
	1379	[6739]	LT       	0 K194 R83 ; if -1000.000000 >= R83 then PC := 1413
	1380	[6739]	JMP      	1413 ; PC := 1413
	1381	[6739]	LT       	0 K194 R84 ; if -1000.000000 >= R84 then PC := 1413
	1382	[6739]	JMP      	1413 ; PC := 1413
	1383	[6740]	GETUPVAL 	R85 U4 ; R85 := U4
	1384	[6740]	GETTABLE 	R85 R85 K160 ; R85 := R85[0x6d7e6810]
	1385	[6740]	GETGLOBAL	R86 K2 ; R86 := 0xae91e43b
	1386	[6740]	NEWTABLE 	R87 0 2 ; R87 := {}
	1387	[6740]	SETTABLE 	R87 K109 R83 ; R87["x"] := R83
	1388	[6740]	SETTABLE 	R87 K114 R84 ; R87["y"] := R84
	1389	[6740]	CALL     	R85 3 2 ; R85 := R85(R86,R87)
	1390	[6741]	GETUPVAL 	R86 U7 ; R86 := U7
	1391	[6741]	GETTABLE 	R86 R86 K195 ; R86 := R86["JunctionTasks"]
	1392	[6741]	SELF     	R86 R86 K63 ; R87 := R86; R86 := R86[0xe4162eed]
	1393	[6741]	LOADK    	R88 K196 ; R88 := "UpdateDrag"
	1394	[6741]	GETTABLE 	R89 R85 K114 ; R89 := R85["y"]
	1395	[6741]	CALL     	R86 4 1 ; R86(R87,R88,R89)
	1396	[6742]	JMP      	1413 ; PC := 1413
	1397	[6745]	GETGLOBAL	R86 K197 ; R86 := 0x34291f5c
	1398	[6745]	GETTABLE 	R86 R86 K198 ; R86 := R86[0xe6b41adb]
	1399	[6745]	CALL     	R86 1 2 ; R86 := R86()
	1400	[6745]	TEST     	R86 0 ; if not R86 then PC := 1413
	1401	[6745]	JMP      	1413 ; PC := 1413
	1402	[6745]	GETUPVAL 	R86 U36 ; R86 := U36
	1403	[6745]	GETTABLE 	R86 R86 K199 ; R86 := R86["isLMBDown"]
	1404	[6745]	TEST     	R86 0 ; if not R86 then PC := 1413
	1405	[6745]	JMP      	1413 ; PC := 1413
	1406	[6745]	GETGLOBAL	R86 K165 ; R86 := mDrag
	1407	[6745]	GETTABLE 	R86 R86 K166 ; R86 := R86["mDragging"]
	1408	[6745]	EQ       	0 R86 K137 ; if R86 ~= false then PC := 1413
	1409	[6745]	JMP      	1413 ; PC := 1413
	1410	[6746]	GETGLOBAL	R86 K165 ; R86 := mDrag
	1411	[6746]	SELF     	R86 R86 K200 ; R87 := R86; R86 := R86[0xd033d908]
	1412	[6746]	CALL     	R86 2 1 ; R86(R87)
	1413	[6751]	GETUPVAL 	R86 U36 ; R86 := U36
	1414	[6751]	GETTABLE 	R86 R86 K201 ; R86 := R86["mHandleMouseUp"]
	1415	[6751]	TEST     	R86 0 ; if not R86 then PC := 1434
	1416	[6751]	JMP      	1434 ; PC := 1434
	1417	[6752]	GETUPVAL 	R86 U36 ; R86 := U36
	1418	[6752]	SETTABLE 	R86 K201 K137 ; R86["mHandleMouseUp"] := false
	1419	[6753]	GETUPVAL 	R86 U37 ; R86 := U37
	1420	[6753]	EQ       	1 R86 K43 ; if R86 == nil then PC := 1426
	1421	[6753]	JMP      	1426 ; PC := 1426
	1422	[6754]	GETUPVAL 	R86 U37 ; R86 := U37
	1423	[6754]	CALL     	R86 1 1 ; R86()
	1424	[6755]	LOADNIL  	R86 R86 ; R86 := nil
	1425	[6755]	SETUPVAL 	R86 U37 ; U37 := R86
	1426	[6759]	GETGLOBAL	R86 K168 ; R86 := mHover
	1427	[6759]	GETTABLE 	R86 R86 K202 ; R86 := R86["Region"]
	1428	[6759]	TEST     	R86 0 ; if not R86 then PC := 1434
	1429	[6759]	JMP      	1434 ; PC := 1434
	1430	[6760]	GETGLOBAL	R86 K168 ; R86 := mHover
	1431	[6760]	SETTABLE 	R86 K202 K43 ; R86["Region"] := nil
	1432	[6761]	GETGLOBAL	R86 K168 ; R86 := mHover
	1433	[6761]	SETTABLE 	R86 K203 K43 ; R86["RegionLabel"] := nil
	1434	[6765]	GETGLOBAL	R86 K1 ; R86 := 0x7b998233
	1435	[6765]	GETUPVAL 	R87 U38 ; R87 := U38
	1436	[6765]	CALL     	R86 2 2 ; R86 := R86(R87)
	1437	[6765]	TEST     	R86 1 ; if R86 then PC := 1441
	1438	[6765]	JMP      	1441 ; PC := 1441
	1439	[6766]	GETUPVAL 	R86 U38 ; R86 := U38
	1440	[6766]	CALL     	R86 1 1 ; R86()
	1441	[6768]	RETURN   	R0 1 ; return 

function #135 <?:6770,6855> (235 instructions, 940 bytes at 00000211283ED260)
3 params, 10 slots, 11 upvalues, 0 locals, 53 constants, 1 function
	1	[6771]	TEST     	R0 1 ; if R0 then PC := 106
	2	[6771]	JMP      	106 ; PC := 106
	3	[6772]	GETGLOBAL	R3 K0 ; R3 := mInputBlocked
	4	[6772]	TEST     	R3 0 ; if not R3 then PC := 7
	5	[6772]	JMP      	7 ; PC := 7
	6	[6773]	RETURN   	R0 1 ; return 
	7	[6776]	GETUPVAL 	R3 U0 ; R3 := U0
	8	[6776]	GETTABLE 	R3 R3 K1 ; R3 := R3["Open"]
	9	[6776]	TEST     	R3 1 ; if R3 then PC := 15
	10	[6776]	JMP      	15 ; PC := 15
	11	[6776]	GETUPVAL 	R3 U0 ; R3 := U0
	12	[6776]	GETTABLE 	R3 R3 K2 ; R3 := R3["DioOpen"]
	13	[6776]	TEST     	R3 0 ; if not R3 then PC := 28
	14	[6776]	JMP      	28 ; PC := 28
	15	[6776]	GETGLOBAL	R3 K3 ; R3 := 0x7b998233
	16	[6776]	GETUPVAL 	R4 U0 ; R4 := U0
	17	[6776]	GETTABLE 	R4 R4 K4 ; R4 := R4["Movie"]
	18	[6776]	CALL     	R3 2 2 ; R3 := R3(R4)
	19	[6776]	TEST     	R3 1 ; if R3 then PC := 28
	20	[6776]	JMP      	28 ; PC := 28
	21	[6777]	GETUPVAL 	R3 U0 ; R3 := U0
	22	[6777]	GETTABLE 	R3 R3 K4 ; R3 := R3["Movie"]
	23	[6777]	SELF     	R3 R3 K5 ; R4 := R3; R3 := R3[0xe4162eed]
	24	[6777]	LOADK    	R5 K6 ; R5 := "CancelPressed"
	25	[6777]	LOADK    	R6 K7 ; R6 := ""
	26	[6777]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	27	[6778]	RETURN   	R0 1 ; return 
	28	[6781]	GETGLOBAL	R3 K8 ; R3 := mInfoTip
	29	[6781]	GETTABLE 	R3 R3 K9 ; R3 := R3["NodeSelectionOpen"]
	30	[6781]	TEST     	R3 0 ; if not R3 then PC := 40
	31	[6781]	JMP      	40 ; PC := 40
	32	[6782]	GETGLOBAL	R3 K8 ; R3 := mInfoTip
	33	[6782]	GETTABLE 	R3 R3 K10 ; R3 := R3["NodeMissionList"]
	34	[6782]	SELF     	R3 R3 K11 ; R4 := R3; R3 := R3[0x368ad758]
	35	[6782]	OP_LOADBOOL	R5 0 0 ; R5 := false
	36	[6782]	CALL     	R3 3 1 ; R3(R4,R5)
	37	[6783]	GETUPVAL 	R3 U1 ; R3 := U1
	38	[6783]	CALL     	R3 1 1 ; R3()
	39	[6784]	RETURN   	R0 1 ; return 
	40	[6787]	GETGLOBAL	R3 K12 ; R3 := 0x34291f5c
	41	[6787]	GETTABLE 	R3 R3 K13 ; R3 := R3[0x1467d5f4]
	42	[6787]	CALL     	R3 1 2 ; R3 := R3()
	43	[6787]	TEST     	R3 0 ; if not R3 then PC := 66
	44	[6787]	JMP      	66 ; PC := 66
	45	[6787]	GETGLOBAL	R3 K3 ; R3 := 0x7b998233
	46	[6787]	GETUPVAL 	R4 U2 ; R4 := U2
	47	[6787]	GETTABLE 	R4 R4 K14 ; R4 := R4["ResourceDrone"]
	48	[6787]	CALL     	R3 2 2 ; R3 := R3(R4)
	49	[6787]	TEST     	R3 1 ; if R3 then PC := 66
	50	[6787]	JMP      	66 ; PC := 66
	51	[6787]	GETUPVAL 	R3 U2 ; R3 := U2
	52	[6787]	GETTABLE 	R3 R3 K14 ; R3 := R3["ResourceDrone"]
	53	[6787]	SELF     	R3 R3 K5 ; R4 := R3; R3 := R3[0xe4162eed]
	54	[6787]	LOADK    	R5 K15 ; R5 := "IsExpanded"
	55	[6787]	LOADK    	R6 K7 ; R6 := ""
	56	[6787]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	57	[6787]	TEST     	R3 0 ; if not R3 then PC := 66
	58	[6787]	JMP      	66 ; PC := 66
	59	[6788]	GETUPVAL 	R3 U2 ; R3 := U2
	60	[6788]	GETTABLE 	R3 R3 K14 ; R3 := R3["ResourceDrone"]
	61	[6788]	SELF     	R3 R3 K5 ; R4 := R3; R3 := R3[0xe4162eed]
	62	[6788]	LOADK    	R5 K16 ; R5 := "DroneInfoUnfocused"
	63	[6788]	LOADK    	R6 K7 ; R6 := ""
	64	[6788]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	65	[6789]	RETURN   	R0 1 ; return 
	66	[6792]	GETGLOBAL	R3 K3 ; R3 := 0x7b998233
	67	[6792]	GETGLOBAL	R4 K17 ; R4 := _T
	68	[6792]	GETTABLE 	R4 R4 K18 ; R4 := R4["SquadOverlay"]
	69	[6792]	CALL     	R3 2 2 ; R3 := R3(R4)
	70	[6792]	TEST     	R3 1 ; if R3 then PC := 81
	71	[6792]	JMP      	81 ; PC := 81
	72	[6792]	GETGLOBAL	R3 K17 ; R3 := _T
	73	[6792]	GETTABLE 	R3 R3 K18 ; R3 := R3["SquadOverlay"]
	74	[6792]	SELF     	R3 R3 K5 ; R4 := R3; R3 := R3[0xe4162eed]
	75	[6792]	LOADK    	R5 K19 ; R5 := "CancelMatchmakingDropdown"
	76	[6792]	LOADK    	R6 K7 ; R6 := ""
	77	[6792]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	78	[6792]	TEST     	R3 0 ; if not R3 then PC := 81
	79	[6792]	JMP      	81 ; PC := 81
	80	[6793]	RETURN   	R0 1 ; return 
	81	[6796]	GETUPVAL 	R3 U3 ; R3 := U3
	82	[6796]	GETUPVAL 	R4 U4 ; R4 := U4
	83	[6796]	GETTABLE 	R4 R4 K20 ; R4 := R4["READ_ONLY"]
	84	[6796]	EQ       	1 R3 R4 ; if R3 == R4 then PC := 91
	85	[6796]	JMP      	91 ; PC := 91
	86	[6797]	GETUPVAL 	R3 U5 ; R3 := U5
	87	[6797]	GETUPVAL 	R4 U4 ; R4 := U4
	88	[6797]	GETTABLE 	R4 R4 K20 ; R4 := R4["READ_ONLY"]
	89	[6797]	CALL     	R3 2 1 ; R3(R4)
	90	[6798]	RETURN   	R0 1 ; return 
	91	[6801]	GETGLOBAL	R3 K21 ; R3 := mSmoothZoom
	92	[6801]	GETTABLE 	R3 R3 K22 ; R3 := R3["mTargetVal"]
	93	[6801]	GETGLOBAL	R4 K23 ; R4 := Zoom
	94	[6801]	GETTABLE 	R4 R4 K24 ; R4 := R4["STARTING_ZOOM"]
	95	[6801]	EQ       	1 R3 R4 ; if R3 == R4 then PC := 103
	96	[6801]	JMP      	103 ; PC := 103
	97	[6802]	GETGLOBAL	R3 K25 ; R3 := 0xae91e43b
	98	[6802]	SELF     	R3 R3 K5 ; R4 := R3; R3 := R3[0xe4162eed]
	99	[6802]	LOADK    	R5 K26 ; R5 := "onKeyDown_MENU_RIGHT_CLICK"
	100	[6802]	LOADK    	R6 K7 ; R6 := ""
	101	[6802]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	102	[6803]	RETURN   	R0 1 ; return 
	103	[6806]	EQ       	0 R0 K27 ; if R0 ~= false then PC := 106
	104	[6806]	JMP      	106 ; PC := 106
	105	[6807]	RETURN   	R0 1 ; return 
	106	[6811]	GETGLOBAL	R3 K3 ; R3 := 0x7b998233
	107	[6811]	GETUPVAL 	R4 U0 ; R4 := U0
	108	[6811]	GETTABLE 	R4 R4 K4 ; R4 := R4["Movie"]
	109	[6811]	CALL     	R3 2 2 ; R3 := R3(R4)
	110	[6811]	TEST     	R3 1 ; if R3 then PC := 125
	111	[6811]	JMP      	125 ; PC := 125
	112	[6812]	GETGLOBAL	R3 K28 ; R3 := 0x25312c9b
	113	[6812]	GETUPVAL 	R4 U0 ; R4 := U0
	114	[6812]	GETTABLE 	R4 R4 K4 ; R4 := R4["Movie"]
	115	[6812]	LOADK    	R5 K29 ; R5 := "_root"
	116	[6812]	LOADK    	R6 := 0.000000
	117	[6812]	NEWTABLE 	R7 1 0 ; R7 := {}
	118	[6812]	LOADK    	R8 := 10.000000
	119	[6812]	SETLIST  	R7 1 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
	120	[6812]	NEWTABLE 	R8 1 0 ; R8 := {}
	121	[6812]	LOADK    	R9 := 0.000000
	122	[6812]	SETLIST  	R8 1 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
	123	[6812]	LOADK    	R9 K31 ; R9 := 0.300000
	124	[6812]	CALL     	R3 7 1 ; R3(R4,R5,R6,R7,R8,R9)
	125	[6815]	TEST     	R2 1 ; if R2 then PC := 131
	126	[6815]	JMP      	131 ; PC := 131
	127	[6816]	GETUPVAL 	R3 U6 ; R3 := U6
	128	[6816]	GETTABLE 	R3 R3 K32 ; R3 := R3[0x659d451f]
	129	[6816]	GETGLOBAL	R4 K33 ; R4 := 0xb607efe1
	130	[6816]	CALL     	R3 2 1 ; R3(R4)
	131	[6819]	GETUPVAL 	R3 U7 ; R3 := U7
	132	[6819]	MOVE     	R4 R2 ; R4 := R2
	133	[6819]	CALL     	R3 2 2 ; R3 := R3(R4)
	134	[6819]	TEST     	R3 0 ; if not R3 then PC := 148
	135	[6819]	JMP      	148 ; PC := 148
	136	[6820]	GETGLOBAL	R3 K3 ; R3 := 0x7b998233
	137	[6820]	GETGLOBAL	R4 K17 ; R4 := _T
	138	[6820]	GETTABLE 	R4 R4 K18 ; R4 := R4["SquadOverlay"]
	139	[6820]	CALL     	R3 2 2 ; R3 := R3(R4)
	140	[6820]	TEST     	R3 1 ; if R3 then PC := 148
	141	[6820]	JMP      	148 ; PC := 148
	142	[6821]	GETGLOBAL	R3 K17 ; R3 := _T
	143	[6821]	GETTABLE 	R3 R3 K18 ; R3 := R3["SquadOverlay"]
	144	[6821]	SELF     	R3 R3 K5 ; R4 := R3; R3 := R3[0xe4162eed]
	145	[6821]	LOADK    	R5 K34 ; R5 := "ForceExitMap"
	146	[6821]	LOADK    	R6 K7 ; R6 := ""
	147	[6821]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	148	[6825]	GETGLOBAL	R3 K17 ; R3 := _T
	149	[6825]	GETTABLE 	R3 R3 K35 ; R3 := R3[0x80172c74]
	150	[6825]	CALL     	R3 1 1 ; R3()
	151	[6827]	OP_LOADBOOL	R3 1 0 ; R3 := true
	152	[6827]	SETGLOBALHASH	R3 K0 ; mInputBlocked := R3
	153	[6829]	GETGLOBAL	R3 K3 ; R3 := 0x7b998233
	154	[6829]	GETGLOBAL	R4 K36 ; R4 := mDrag
	155	[6829]	CALL     	R3 2 2 ; R3 := R3(R4)
	156	[6829]	TEST     	R3 1 ; if R3 then PC := 168
	157	[6829]	JMP      	168 ; PC := 168
	158	[6830]	GETGLOBAL	R3 K36 ; R3 := mDrag
	159	[6830]	SELF     	R3 R3 K37 ; R4 := R3; R3 := R3[0x4c4f8717]
	160	[6830]	LOADK    	R5 K38 ; R5 := "x"
	161	[6830]	LOADK    	R6 := 0.500000
	162	[6830]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	163	[6831]	GETGLOBAL	R3 K36 ; R3 := mDrag
	164	[6831]	SELF     	R3 R3 K37 ; R4 := R3; R3 := R3[0x4c4f8717]
	165	[6831]	LOADK    	R5 K39 ; R5 := "y"
	166	[6831]	LOADK    	R6 := 0.500000
	167	[6831]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	168	[6834]	GETGLOBAL	R3 K3 ; R3 := 0x7b998233
	169	[6834]	GETUPVAL 	R4 U8 ; R4 := U8
	170	[6834]	CALL     	R3 2 2 ; R3 := R3(R4)
	171	[6834]	TEST     	R3 1 ; if R3 then PC := 199
	172	[6834]	JMP      	199 ; PC := 199
	173	[6835]	GETGLOBAL	R3 K40 ; R3 := mPlayerPos
	174	[6835]	SETTABLE 	R3 K41 K42 ; R3["Locked"] := true
	175	[6836]	GETGLOBAL	R3 K40 ; R3 := mPlayerPos
	176	[6836]	GETUPVAL 	R4 U8 ; R4 := U8
	177	[6836]	SELF     	R4 R4 K44 ; R5 := R4; R4 := R4[0xd1586535]
	178	[6836]	CALL     	R4 2 2 ; R4 := R4(R5)
	179	[6836]	SETTABLE 	R3 K43 R4 ; R3["Previous"] := R4
	180	[6837]	GETGLOBAL	R3 K40 ; R3 := mPlayerPos
	181	[6837]	GETUPVAL 	R4 U9 ; R4 := U9
	182	[6837]	GETGLOBAL	R5 K46 ; R5 := 0xa421af95
	183	[6837]	LOADK    	R6 := 0.000000
	184	[6837]	LOADK    	R7 := 0.000000
	185	[6837]	LOADK    	R8 := 35.000000
	186	[6837]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	187	[6837]	ADD      	R4 R4 R5 ; R4 := R4 + R5
	188	[6837]	SETTABLE 	R3 K45 R4 ; R3["Target"] := R4
	189	[6838]	GETGLOBAL	R3 K40 ; R3 := mPlayerPos
	190	[6838]	GETTABLE 	R3 R3 K47 ; R3 := R3["Prop"]
	191	[6838]	SELF     	R3 R3 K48 ; R4 := R3; R3 := R3[0xd0f998cd]
	192	[6838]	LOADK    	R5 := 0.000000
	193	[6838]	CALL     	R3 3 1 ; R3(R4,R5)
	194	[6839]	GETGLOBAL	R3 K40 ; R3 := mPlayerPos
	195	[6839]	GETTABLE 	R3 R3 K47 ; R3 := R3["Prop"]
	196	[6839]	SELF     	R3 R3 K49 ; R4 := R3; R3 := R3[0x188e2bee]
	197	[6839]	LOADK    	R5 := 1.000000
	198	[6839]	CALL     	R3 3 1 ; R3(R4,R5)
	199	[6842]	GETGLOBAL	R3 K21 ; R3 := mSmoothZoom
	200	[6842]	SELF     	R3 R3 K49 ; R4 := R3; R3 := R3[0x188e2bee]
	201	[6842]	LOADK    	R5 := -100.000000
	202	[6842]	CALL     	R3 3 1 ; R3(R4,R5)
	203	[6843]	TEST     	R1 0 ; if not R1 then PC := 212
	204	[6843]	JMP      	212 ; PC := 212
	205	[6844]	GETGLOBAL	R3 K50 ; R3 := 0x9ba7909f
	206	[6844]	SELF     	R3 R3 K51 ; R4 := R3; R3 := R3[0xb21930e8]
	207	[6844]	CALL     	R3 2 1 ; R3(R4)
	208	[6845]	GETUPVAL 	R3 U10 ; R3 := U10
	209	[6845]	MOVE     	R4 R2 ; R4 := R2
	210	[6845]	CALL     	R3 2 1 ; R3(R4)
	211	[6845]	JMP      	235 ; PC := 235
	212	[6847]	GETGLOBAL	R3 K28 ; R3 := 0x25312c9b
	213	[6847]	GETGLOBAL	R4 K25 ; R4 := 0xae91e43b
	214	[6847]	LOADK    	R5 K29 ; R5 := "_root"
	215	[6847]	LOADK    	R6 := 0.000000
	216	[6847]	NEWTABLE 	R7 1 0 ; R7 := {}
	217	[6847]	LOADK    	R8 := 10.000000
	218	[6847]	SETLIST  	R7 1 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
	219	[6847]	NEWTABLE 	R8 1 0 ; R8 := {}
	220	[6847]	LOADK    	R9 := 0.000000
	221	[6847]	SETLIST  	R8 1 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
	222	[6847]	LOADK    	R9 K31 ; R9 := 0.300000
	223	[6847]	CALL     	R3 7 1 ; R3(R4,R5,R6,R7,R8,R9)
	224	[6848]	GETUPVAL 	R3 U6 ; R3 := U6
	225	[6848]	GETTABLE 	R3 R3 K52 ; R3 := R3[0x4c232afc]
	226	[6848]	GETGLOBAL	R4 K25 ; R4 := 0xae91e43b
	227	[6848]	LOADK    	R5 := 1.000000
	228	[6848]	LOADK    	R6 K31 ; R6 := 0.300000
	229	[6848]	LOADK    	R7 := 0.000000
	230	[6853]	CLOSURE  	R8 0 ; R8 := closure(Function #1)
	231	[6853]	GETUPVAL 	R0 U10 ; R0 := U10
	232	[6853]	MOVE     	R0 R2 ; R0 := R2
	233	[6853]	GETUPVAL 	R0 U6 ; R0 := U6
	234	[6848]	CALL     	R3 6 1 ; R3(R4,R5,R6,R7,R8)
	235	[6855]	RETURN   	R0 1 ; return 

function #136 <?:6857,6859> (23 instructions, 92 bytes at 00000211283ECF40)
3 params, 7 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[6858]	GETUPVAL 	R3 U0 ; R3 := U0
	2	[6858]	EQ       	1 R0 K0 ; if R0 == "true" then PC := 13
	3	[6858]	JMP      	13 ; PC := 13
	4	[6858]	GETGLOBAL	R4 K1 ; R4 := _T
	5	[6858]	GETTABLE 	R4 R4 K2 ; R4 := R4["SCREEN_EXIT_REASON_FORCE_CLOSE"]
	6	[6858]	EQ       	1 R0 R4 ; if R0 == R4 then PC := 13
	7	[6858]	JMP      	13 ; PC := 13
	8	[6858]	GETGLOBAL	R4 K1 ; R4 := _T
	9	[6858]	GETTABLE 	R4 R4 K3 ; R4 := R4["SCREEN_EXIT_REASON_TELEPORT_TO_CONSOLE"]
	10	[6858]	EQ       	1 R0 R4 ; if R0 == R4 then PC := 13
	11	[6858]	JMP      	13 ; PC := 13
	12	[6858]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 13
	13	[6858]	OP_LOADBOOL	R4 1 0 ; R4 := true
	14	[6858]	EQ       	1 R1 K0 ; if R1 == "true" then PC := 17
	15	[6858]	JMP      	17 ; PC := 17
	16	[6858]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 17
	17	[6858]	OP_LOADBOOL	R5 1 0 ; R5 := true
	18	[6858]	EQ       	1 R2 K0 ; if R2 == "true" then PC := 21
	19	[6858]	JMP      	21 ; PC := 21
	20	[6858]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 21
	21	[6858]	OP_LOADBOOL	R6 1 0 ; R6 := true
	22	[6858]	CALL     	R3 4 1 ; R3(R4,R5,R6)
	23	[6859]	RETURN   	R0 1 ; return 

function #137 <?:6861,6873> (17 instructions, 68 bytes at 000002111CA3DA50)
2 params, 11 slots, 0 upvalues, 0 locals, 2 constants, 0 functions
	1	[6862]	LOADK    	R2 := 1.000000
	2	[6863]	LOADK    	R3 K0 ; R3 := 100000.000000
	3	[6865]	LOADK    	R4 := 1.000000
	4	[6865]	LEN      	R5 R0 ; R5 := # R0
	5	[6865]	LOADK    	R6 := 1.000000
	6	[6865]	FORPREP  	R4 15 ; R4 -= R6; PC := 15
	7	[6866]	GETGLOBAL	R8 K1 ; R8 := 0x03ea2485
	8	[6866]	GETTABLE 	R9 R0 R7 ; R9 := R0[R7]
	9	[6866]	MOVE     	R10 R1 ; R10 := R1
	10	[6866]	CALL     	R8 3 2 ; R8 := R8(R9,R10)
	11	[6867]	LT       	0 R8 R3 ; if R8 >= R3 then PC := 15
	12	[6867]	JMP      	15 ; PC := 15
	13	[6868]	MOVE     	R3 R8 ; R3 := R8
	14	[6869]	MOVE     	R2 R7 ; R2 := R7
	15	[6865]	FORLOOP  	R4 7 ; R4 += R6; if R4 <= R5 then begin PC := 7; R7 := R4 end
	16	[6872]	RETURN   	R2 2 ; return R2 
	17	[6873]	RETURN   	R0 1 ; return 

function #138 <?:6875,6923> (128 instructions, 512 bytes at 000002111CA3DBA0)
0 params, 7 slots, 8 upvalues, 0 locals, 36 constants, 0 functions
	1	[6876]	GETGLOBAL	R0 K0 ; R0 := mInputBlocked
	2	[6876]	TEST     	R0 1 ; if R0 then PC := 13
	3	[6876]	JMP      	13 ; PC := 13
	4	[6876]	GETGLOBAL	R0 K1 ; R0 := 0x7b998233
	5	[6876]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	6	[6876]	CALL     	R0 2 2 ; R0 := R0(R1)
	7	[6876]	TEST     	R0 1 ; if R0 then PC := 13
	8	[6876]	JMP      	13 ; PC := 13
	9	[6876]	GETGLOBAL	R0 K3 ; R0 := mInfoTip
	10	[6876]	GETTABLE 	R0 R0 K4 ; R0 := R0["NodeSelectionOpen"]
	11	[6876]	TEST     	R0 0 ; if not R0 then PC := 14
	12	[6876]	JMP      	14 ; PC := 14
	13	[6877]	RETURN   	R0 1 ; return 
	14	[6881]	GETGLOBAL	R0 K5 ; R0 := 0x34291f5c
	15	[6881]	GETTABLE 	R0 R0 K6 ; R0 := R0[0xe6b41adb]
	16	[6881]	CALL     	R0 1 2 ; R0 := R0()
	17	[6881]	TEST     	R0 0 ; if not R0 then PC := 35
	18	[6881]	JMP      	35 ; PC := 35
	19	[6882]	GETUPVAL 	R0 U0 ; R0 := U0
	20	[6882]	SETTABLE 	R0 K7 K8 ; R0["isLMBDown"] := false
	21	[6883]	GETUPVAL 	R0 U1 ; R0 := U1
	22	[6883]	GETTABLE 	R0 R0 K9 ; R0 := R0["JunctionTasks"]
	23	[6883]	TEST     	R0 0 ; if not R0 then PC := 33
	24	[6883]	JMP      	33 ; PC := 33
	25	[6885]	GETUPVAL 	R0 U1 ; R0 := U1
	26	[6885]	GETTABLE 	R0 R0 K9 ; R0 := R0["JunctionTasks"]
	27	[6885]	SELF     	R0 R0 K10 ; R1 := R0; R0 := R0[0xe4162eed]
	28	[6885]	LOADK    	R2 K11 ; R2 := "EndDrag"
	29	[6885]	LOADK    	R3 K12 ; R3 := ""
	30	[6885]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	31	[6886]	GETUPVAL 	R0 U0 ; R0 := U0
	32	[6886]	SETTABLE 	R0 K13 K8 ; R0["JunctionDrag"] := false
	33	[6888]	GETUPVAL 	R0 U0 ; R0 := U0
	34	[6888]	SETTABLE 	R0 K14 K15 ; R0["mHandleMouseUp"] := true
	35	[6891]	GETUPVAL 	R0 U2 ; R0 := U2
	36	[6891]	GETTABLE 	R0 R0 K16 ; R0 := R0[0xfa9785e4]
	37	[6891]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	38	[6891]	CALL     	R0 2 2 ; R0 := R0(R1)
	39	[6892]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	40	[6892]	SELF     	R1 R1 K17 ; R2 := R1; R1 := R1[0x67bc869f]
	41	[6892]	LOADK    	R3 K18 ; R3 := "Reticle"
	42	[6892]	LOADK    	R4 := 0.000000
	43	[6892]	GETUPVAL 	R5 U2 ; R5 := U2
	44	[6892]	GETTABLE 	R5 R5 K19 ; R5 := R5[0x74a11ec6]
	45	[6892]	GETTABLE 	R6 R0 K20 ; R6 := R0["x"]
	46	[6892]	CALL     	R5 2 0 ; R5,... := R5(R6)
	47	[6892]	CALL     	R1 0 1 ; R1(R2,...)
	48	[6893]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	49	[6893]	SELF     	R1 R1 K17 ; R2 := R1; R1 := R1[0x67bc869f]
	50	[6893]	LOADK    	R3 K18 ; R3 := "Reticle"
	51	[6893]	LOADK    	R4 := 1.000000
	52	[6893]	GETUPVAL 	R5 U2 ; R5 := U2
	53	[6893]	GETTABLE 	R5 R5 K19 ; R5 := R5[0x74a11ec6]
	54	[6893]	GETTABLE 	R6 R0 K21 ; R6 := R0["y"]
	55	[6893]	CALL     	R5 2 0 ; R5,... := R5(R6)
	56	[6893]	CALL     	R1 0 1 ; R1(R2,...)
	57	[6895]	GETUPVAL 	R1 U3 ; R1 := U3
	58	[6895]	EQ       	1 R1 K22 ; if R1 == nil then PC := 64
	59	[6895]	JMP      	64 ; PC := 64
	60	[6896]	GETUPVAL 	R1 U3 ; R1 := U3
	61	[6896]	CALL     	R1 1 1 ; R1()
	62	[6897]	LOADNIL  	R1 R1 ; R1 := nil
	63	[6897]	SETUPVAL 	R1 U3 ; U3 := R1
	64	[6900]	GETUPVAL 	R1 U4 ; R1 := U4
	65	[6900]	TEST     	R1 1 ; if R1 then PC := 70
	66	[6900]	JMP      	70 ; PC := 70
	67	[6901]	GETGLOBAL	R1 K23 ; R1 := mDrag
	68	[6901]	SELF     	R1 R1 K24 ; R2 := R1; R1 := R1[0xcc5f3150]
	69	[6901]	CALL     	R1 2 1 ; R1(R2)
	70	[6904]	GETUPVAL 	R1 U5 ; R1 := U5
	71	[6904]	GETUPVAL 	R2 U6 ; R2 := U6
	72	[6904]	GETTABLE 	R2 R2 K25 ; R2 := R2["EDIT_REGIONS"]
	73	[6904]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 85
	74	[6904]	JMP      	85 ; PC := 85
	75	[6904]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	76	[6904]	GETUPVAL 	R2 U7 ; R2 := U7
	77	[6904]	GETTABLE 	R2 R2 K26 ; R2 := R2["mMovingRegion"]
	78	[6904]	CALL     	R1 2 2 ; R1 := R1(R2)
	79	[6904]	TEST     	R1 1 ; if R1 then PC := 85
	80	[6904]	JMP      	85 ; PC := 85
	81	[6905]	GETUPVAL 	R1 U7 ; R1 := U7
	82	[6905]	SETTABLE 	R1 K26 K22 ; R1["mMovingRegion"] := nil
	83	[6906]	GETUPVAL 	R1 U7 ; R1 := U7
	84	[6906]	SETTABLE 	R1 K27 K22 ; R1["mChildNodes"] := nil
	85	[6909]	GETUPVAL 	R1 U5 ; R1 := U5
	86	[6909]	GETUPVAL 	R2 U6 ; R2 := U6
	87	[6909]	GETTABLE 	R2 R2 K28 ; R2 := R2["EDIT_NODES"]
	88	[6909]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 98
	89	[6909]	JMP      	98 ; PC := 98
	90	[6909]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	91	[6909]	GETUPVAL 	R2 U7 ; R2 := U7
	92	[6909]	GETTABLE 	R2 R2 K29 ; R2 := R2["mMovingNode"]
	93	[6909]	CALL     	R1 2 2 ; R1 := R1(R2)
	94	[6909]	TEST     	R1 1 ; if R1 then PC := 98
	95	[6909]	JMP      	98 ; PC := 98
	96	[6910]	GETUPVAL 	R1 U7 ; R1 := U7
	97	[6910]	SETTABLE 	R1 K29 K22 ; R1["mMovingNode"] := nil
	98	[6913]	GETUPVAL 	R1 U5 ; R1 := U5
	99	[6913]	GETUPVAL 	R2 U6 ; R2 := U6
	100	[6913]	GETTABLE 	R2 R2 K30 ; R2 := R2["EDIT_NODE_DECOS"]
	101	[6913]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 117
	102	[6913]	JMP      	117 ; PC := 117
	103	[6913]	GETGLOBAL	R1 K1 ; R1 := 0x7b998233
	104	[6913]	GETUPVAL 	R2 U7 ; R2 := U7
	105	[6913]	GETTABLE 	R2 R2 K29 ; R2 := R2["mMovingNode"]
	106	[6913]	CALL     	R1 2 2 ; R1 := R1(R2)
	107	[6913]	TEST     	R1 1 ; if R1 then PC := 117
	108	[6913]	JMP      	117 ; PC := 117
	109	[6914]	GETUPVAL 	R1 U7 ; R1 := U7
	110	[6914]	SETTABLE 	R1 K29 K22 ; R1["mMovingNode"] := nil
	111	[6915]	GETUPVAL 	R1 U7 ; R1 := U7
	112	[6915]	SETTABLE 	R1 K31 K8 ; R1["mEditingOffset"] := false
	113	[6916]	GETUPVAL 	R1 U7 ; R1 := U7
	114	[6916]	SETTABLE 	R1 K32 K8 ; R1["mEditingRotation"] := false
	115	[6917]	GETUPVAL 	R1 U7 ; R1 := U7
	116	[6917]	SETTABLE 	R1 K33 K8 ; R1["mEditingScale"] := false
	117	[6920]	GETUPVAL 	R1 U5 ; R1 := U5
	118	[6920]	GETUPVAL 	R2 U6 ; R2 := U6
	119	[6920]	GETTABLE 	R2 R2 K34 ; R2 := R2["EDIT_SHORTCUT_CONTROL_POINTS"]
	120	[6920]	EQ       	0 R1 R2 ; if R1 ~= R2 then PC := 128
	121	[6920]	JMP      	128 ; PC := 128
	122	[6920]	GETUPVAL 	R1 U7 ; R1 := U7
	123	[6920]	GETTABLE 	R1 R1 K35 ; R1 := R1["mControlPointHeld"]
	124	[6920]	TEST     	R1 0 ; if not R1 then PC := 128
	125	[6920]	JMP      	128 ; PC := 128
	126	[6921]	GETUPVAL 	R1 U7 ; R1 := U7
	127	[6921]	SETTABLE 	R1 K35 K8 ; R1["mControlPointHeld"] := false
	128	[6923]	RETURN   	R0 1 ; return 

function #139 <?:6925,6927> (4 instructions, 16 bytes at 000002112F769BF0)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[6926]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[6926]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[6926]	RETURN   	R0 0 ; return R0,... 
	4	[6927]	RETURN   	R0 1 ; return 

function #140 <?:6929,6949> (5 instructions, 20 bytes at 000002112F769C80)
2 params, 5 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[6948]	GETTABLE 	R2 R1 K0 ; R2 := R1["x"]
	2	[6948]	GETTABLE 	R3 R1 K1 ; R3 := R1["y"]
	3	[6948]	GETTABLE 	R4 R1 K2 ; R4 := R1["z"]
	4	[6948]	RETURN   	R2 4 ; return R2, R3, R4 
	5	[6949]	RETURN   	R0 1 ; return 

function #141 <?:6951,6974> (50 instructions, 200 bytes at 000002112F769D10)
1 param, 11 slots, 0 upvalues, 0 locals, 15 constants, 0 functions
	1	[6952]	GETTABLE 	R1 R0 K0 ; R1 := R0["position"]
	2	[6953]	GETGLOBAL	R2 K1 ; R2 := 0xa421af95
	3	[6953]	GETTABLE 	R3 R1 K2 ; R3 := R1["x"]
	4	[6953]	GETTABLE 	R4 R1 K3 ; R4 := R1["y"]
	5	[6953]	GETTABLE 	R5 R1 K4 ; R5 := R1["z"]
	6	[6953]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	7	[6955]	LOADNIL  	R3 R3 ; R3 := nil
	8	[6956]	LOADK    	R4 := 1.000000
	9	[6956]	GETGLOBAL	R5 K5 ; R5 := mRegions
	10	[6956]	LEN      	R5 R5 ; R5 := # R5
	11	[6956]	LOADK    	R6 := 1.000000
	12	[6956]	FORPREP  	R4 20 ; R4 -= R6; PC := 20
	13	[6957]	GETTABLE 	R8 R0 K6 ; R8 := R0["radialSector"]
	14	[6957]	GETTABLE 	R8 R8 K7 ; R8 := R8["region"]
	15	[6957]	SUB      	R9 R7 K8 ; R9 := R7 - 1.000000
	16	[6957]	EQ       	0 R8 R9 ; if R8 ~= R9 then PC := 20
	17	[6957]	JMP      	20 ; PC := 20
	18	[6958]	GETGLOBAL	R8 K5 ; R8 := mRegions
	19	[6958]	GETTABLE 	R3 R8 R7 ; R3 := R8[R7]
	20	[6956]	FORLOOP  	R4 13 ; R4 += R6; if R4 <= R5 then begin PC := 13; R7 := R4 end
	21	[6962]	GETTABLE 	R8 R2 K2 ; R8 := R2["x"]
	22	[6962]	GETGLOBAL	R9 K9 ; R9 := dragScale
	23	[6962]	DIV      	R8 R8 R9 ; R8 := R8 / R9
	24	[6962]	SETTABLE 	R2 K2 R8 ; R2[0x0469f296] := R8
	25	[6963]	GETTABLE 	R8 R2 K3 ; R8 := R2["y"]
	26	[6963]	UNM      	R8 R8 ; R8 := ^ R8
	27	[6963]	GETGLOBAL	R9 K9 ; R9 := dragScale
	28	[6963]	DIV      	R8 R8 R9 ; R8 := R8 / R9
	29	[6963]	SETTABLE 	R2 K3 R8 ; R2["y"] := R8
	30	[6964]	EQ       	1 R3 K10 ; if R3 == nil then PC := 37
	31	[6964]	JMP      	37 ; PC := 37
	32	[6965]	GETTABLE 	R8 R3 K11 ; R8 := R3["zoomedFraming"]
	33	[6965]	GETTABLE 	R8 R8 K4 ; R8 := R8["z"]
	34	[6965]	ADD      	R8 R8 K12 ; R8 := R8 + 0.650000
	35	[6965]	SETTABLE 	R2 K4 R8 ; R2[0x7b998233] := R8
	36	[6965]	JMP      	38 ; PC := 38
	37	[6967]	SETTABLE 	R2 K4 K13 ; R2["z"] := 8.000000
	38	[6970]	GETTABLE 	R8 R2 K2 ; R8 := R2["x"]
	39	[6970]	MUL      	R8 R8 K14 ; R8 := R8 * 0.500000
	40	[6970]	ADD      	R8 R8 K14 ; R8 := R8 + 0.500000
	41	[6970]	SETTABLE 	R2 K2 R8 ; R2[0x0469f296] := R8
	42	[6971]	GETTABLE 	R8 R2 K3 ; R8 := R2["y"]
	43	[6971]	MUL      	R8 R8 K14 ; R8 := R8 * 0.500000
	44	[6971]	ADD      	R8 R8 K14 ; R8 := R8 + 0.500000
	45	[6971]	SETTABLE 	R2 K3 R8 ; R2["y"] := R8
	46	[6973]	GETTABLE 	R8 R2 K2 ; R8 := R2["x"]
	47	[6973]	GETTABLE 	R9 R2 K3 ; R9 := R2["y"]
	48	[6973]	GETTABLE 	R10 R2 K4 ; R10 := R2["z"]
	49	[6973]	RETURN   	R8 4 ; return R8, R9, R10 
	50	[6974]	RETURN   	R0 1 ; return 

function #142 <?:6976,6986> (14 instructions, 56 bytes at 0000021123EB3310)
0 params, 2 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[6977]	GETGLOBAL	R0 K0 ; R0 := mZoomedRegion
	2	[6977]	EQ       	1 R0 K1 ; if R0 == nil then PC := 14
	3	[6977]	JMP      	14 ; PC := 14
	4	[6978]	GETUPVAL 	R0 U0 ; R0 := U0
	5	[6978]	GETGLOBAL	R1 K0 ; R1 := mZoomedRegion
	6	[6978]	CALL     	R0 2 2 ; R0 := R0(R1)
	7	[6980]	GETGLOBAL	R1 K2 ; R1 := mZoomedSuper
	8	[6980]	EQ       	1 R1 R0 ; if R1 == R0 then PC := 14
	9	[6980]	JMP      	14 ; PC := 14
	10	[6980]	EQ       	1 R0 K1 ; if R0 == nil then PC := 14
	11	[6980]	JMP      	14 ; PC := 14
	12	[6981]	SETGLOBALHASH	R0 K2 ; mZoomedSuper := R0
	13	[6982]	JMP      	14 ; PC := 14
	14	[6986]	RETURN   	R0 1 ; return 

function #143 <?:6988,7047> (168 instructions, 672 bytes at 00000211252EE2E0)
3 params, 16 slots, 8 upvalues, 0 locals, 52 constants, 0 functions
	1	[6989]	GETGLOBAL	R3 K0 ; R3 := mZoomedRegion
	2	[6989]	EQ       	0 R3 R0 ; if R3 ~= R0 then PC := 9
	3	[6989]	JMP      	9 ; PC := 9
	4	[6990]	TEST     	R1 0 ; if not R1 then PC := 8
	5	[6990]	JMP      	8 ; PC := 8
	6	[6991]	MOVE     	R3 R1 ; R3 := R1
	7	[6991]	CALL     	R3 1 1 ; R3()
	8	[6993]	RETURN   	R0 1 ; return 
	9	[6995]	GETUPVAL 	R3 U0 ; R3 := U0
	10	[6995]	MOVE     	R4 R0 ; R4 := R0
	11	[6995]	CALL     	R3 2 1 ; R3(R4)
	12	[6997]	GETUPVAL 	R3 U1 ; R3 := U1
	13	[6997]	CALL     	R3 1 1 ; R3()
	14	[6999]	GETUPVAL 	R3 U2 ; R3 := U2
	15	[6999]	MOVE     	R4 R0 ; R4 := R0
	16	[6999]	GETTABLE 	R5 R0 K1 ; R5 := R0["zoomedFraming"]
	17	[6999]	CALL     	R3 3 4 ; R3,R4,R5 := R3(R4,R5)
	18	[7000]	GETGLOBAL	R6 K2 ; R6 := mDrag
	19	[7000]	SELF     	R6 R6 K3 ; R7 := R6; R6 := R6[0x4c4f8717]
	20	[7000]	LOADK    	R8 K4 ; R8 := "x"
	21	[7000]	MOVE     	R9 R3 ; R9 := R3
	22	[7000]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	23	[7001]	GETGLOBAL	R6 K2 ; R6 := mDrag
	24	[7001]	SELF     	R6 R6 K3 ; R7 := R6; R6 := R6[0x4c4f8717]
	25	[7001]	LOADK    	R8 K5 ; R8 := "y"
	26	[7001]	MOVE     	R9 R4 ; R9 := R4
	27	[7001]	CALL     	R6 4 1 ; R6(R7,R8,R9)
	28	[7004]	GETGLOBAL	R6 K6 ; R6 := 0x7b998233
	29	[7004]	MOVE     	R7 R2 ; R7 := R2
	30	[7004]	CALL     	R6 2 2 ; R6 := R6(R7)
	31	[7004]	TEST     	R6 0 ; if not R6 then PC := 38
	32	[7004]	JMP      	38 ; PC := 38
	33	[7005]	GETGLOBAL	R6 K7 ; R6 := mSmoothZoom
	34	[7005]	SELF     	R6 R6 K8 ; R7 := R6; R6 := R6[0x188e2bee]
	35	[7005]	MOVE     	R8 R5 ; R8 := R5
	36	[7005]	CALL     	R6 3 1 ; R6(R7,R8)
	37	[7006]	SETUPVAL 	R1 U3 ; U3 := R1
	38	[7009]	GETGLOBAL	R6 K9 ; R6 := mFxNodes
	39	[7009]	GETUPVAL 	R7 U4 ; R7 := U4
	40	[7009]	GETTABLE 	R7 R7 K11 ; R7 := R7[0x06d055f9]
	41	[7009]	GETGLOBAL	R8 K12 ; R8 := mVorsPrizeQuestActiveNode
	42	[7009]	LOADK    	R9 := 0.500000
	43	[7009]	LOADK    	R10 := 2.000000
	44	[7009]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	45	[7009]	SETTABLE 	R6 K10 R7 ; R6["NotificationTime"] := R7
	46	[7011]	GETUPVAL 	R6 U4 ; R6 := U4
	47	[7011]	GETTABLE 	R6 R6 K13 ; R6 := R6[0x659d451f]
	48	[7011]	GETGLOBAL	R7 K14 ; R7 := 0x4593b059
	49	[7011]	CALL     	R6 2 1 ; R6(R7)
	50	[7013]	GETUPVAL 	R6 U5 ; R6 := U5
	51	[7013]	CALL     	R6 1 1 ; R6()
	52	[7015]	GETGLOBAL	R6 K15 ; R6 := 0x88efc25e
	53	[7015]	GETTABLE 	R7 R0 K16 ; R7 := R0["zoomedInEffects"]
	54	[7015]	CALL     	R6 2 2 ; R6 := R6(R7)
	55	[7016]	GETGLOBAL	R7 K6 ; R7 := 0x7b998233
	56	[7016]	GETTABLE 	R8 R0 K17 ; R8 := R0["instance"]
	57	[7016]	CALL     	R7 2 2 ; R7 := R7(R8)
	58	[7016]	TEST     	R7 1 ; if R7 then PC := 70
	59	[7016]	JMP      	70 ; PC := 70
	60	[7016]	GETGLOBAL	R7 K6 ; R7 := 0x7b998233
	61	[7016]	MOVE     	R8 R6 ; R8 := R6
	62	[7016]	CALL     	R7 2 2 ; R7 := R7(R8)
	63	[7016]	TEST     	R7 1 ; if R7 then PC := 70
	64	[7016]	JMP      	70 ; PC := 70
	65	[7017]	GETTABLE 	R7 R0 K17 ; R7 := R0["instance"]
	66	[7017]	SELF     	R7 R7 K18 ; R8 := R7; R7 := R7[0x47901f07]
	67	[7017]	MOVE     	R9 R6 ; R9 := R6
	68	[7017]	GETGLOBAL	R10 K19 ; R10 := EMPTY_SYMBOL
	69	[7017]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	70	[7020]	GETUPVAL 	R7 U6 ; R7 := U6
	71	[7020]	GETTABLE 	R7 R7 K20 ; R7 := R7[1.000000]
	72	[7020]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x188e2bee]
	73	[7020]	GETTABLE 	R9 R0 K21 ; R9 := R0["color"]
	74	[7020]	GETTABLE 	R9 R9 K22 ; R9 := R9["red"]
	75	[7020]	CALL     	R7 3 1 ; R7(R8,R9)
	76	[7021]	GETUPVAL 	R7 U6 ; R7 := U6
	77	[7021]	GETTABLE 	R7 R7 K23 ; R7 := R7[2.000000]
	78	[7021]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x188e2bee]
	79	[7021]	GETTABLE 	R9 R0 K21 ; R9 := R0["color"]
	80	[7021]	GETTABLE 	R9 R9 K24 ; R9 := R9["green"]
	81	[7021]	CALL     	R7 3 1 ; R7(R8,R9)
	82	[7022]	GETUPVAL 	R7 U6 ; R7 := U6
	83	[7022]	GETTABLE 	R7 R7 K25 ; R7 := R7[3.000000]
	84	[7022]	SELF     	R7 R7 K8 ; R8 := R7; R7 := R7[0x188e2bee]
	85	[7022]	GETTABLE 	R9 R0 K21 ; R9 := R0["color"]
	86	[7022]	GETTABLE 	R9 R9 K26 ; R9 := R9["blue"]
	87	[7022]	CALL     	R7 3 1 ; R7(R8,R9)
	88	[7024]	GETGLOBAL	R7 K27 ; R7 := _T
	89	[7024]	GETTABLE 	R7 R7 K28 ; R7 := R7["WareframeChallenge"]
	90	[7024]	TEST     	R7 0 ; if not R7 then PC := 95
	91	[7024]	JMP      	95 ; PC := 95
	92	[7025]	GETGLOBAL	R7 K27 ; R7 := _T
	93	[7025]	GETTABLE 	R7 R7 K28 ; R7 := R7["WareframeChallenge"]
	94	[7025]	SETTABLE 	R7 K29 R0 ; R7[0x5afc67dc] := R0
	95	[7028]	GETGLOBAL	R7 K27 ; R7 := _T
	96	[7028]	GETTABLE 	R7 R7 K30 ; R7 := R7["NemesisRegionTransmissionPlayed"]
	97	[7028]	TEST     	R7 1 ; if R7 then PC := 166
	98	[7028]	JMP      	166 ; PC := 166
	99	[7028]	GETGLOBAL	R7 K31 ; R7 := mRailJack
	100	[7028]	GETTABLE 	R7 R7 K32 ; R7 := R7["Active"]
	101	[7028]	TEST     	R7 1 ; if R7 then PC := 166
	102	[7028]	JMP      	166 ; PC := 166
	103	[7028]	GETGLOBAL	R7 K27 ; R7 := _T
	104	[7028]	GETTABLE 	R7 R7 K33 ; R7 := R7["CustomStarChartNodeFilter"]
	105	[7028]	EQ       	0 R7 K34 ; if R7 ~= nil then PC := 166
	106	[7028]	JMP      	166 ; PC := 166
	107	[7029]	GETGLOBAL	R7 K35 ; R7 := 0x25d99d89
	108	[7029]	SELF     	R7 R7 K36 ; R8 := R7; R7 := R7[0x600a0ad6]
	109	[7029]	CALL     	R7 2 2 ; R7 := R7(R8)
	110	[7030]	GETGLOBAL	R8 K6 ; R8 := 0x7b998233
	111	[7030]	MOVE     	R9 R7 ; R9 := R7
	112	[7030]	CALL     	R8 2 2 ; R8 := R8(R9)
	113	[7030]	TEST     	R8 1 ; if R8 then PC := 166
	114	[7030]	JMP      	166 ; PC := 166
	115	[7031]	GETTABLE 	R8 R7 K37 ; R8 := R7["mInfluenceNodes"]
	116	[7032]	LOADK    	R9 := 1.000000
	117	[7032]	LEN      	R10 R8 ; R10 := # R8
	118	[7032]	LOADK    	R11 := 1.000000
	119	[7032]	FORPREP  	R9 165 ; R9 -= R11; PC := 165
	120	[7033]	GETGLOBAL	R13 K38 ; R13 := mRadialSolarMap
	121	[7033]	SELF     	R13 R13 K39 ; R14 := R13; R13 := R13[0x5484bf3c]
	122	[7033]	GETTABLE 	R15 R8 R12 ; R15 := R8[R12]
	123	[7033]	GETTABLE 	R15 R15 K40 ; R15 := R15["mNode"]
	124	[7033]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	125	[7033]	GETTABLE 	R13 R13 K41 ; R13 := R13["name"]
	126	[7033]	GETTABLE 	R14 R0 K41 ; R14 := R0["name"]
	127	[7033]	EQ       	0 R13 R14 ; if R13 ~= R14 then PC := 165
	128	[7033]	JMP      	165 ; PC := 165
	129	[7034]	GETGLOBAL	R13 K42 ; R13 := 0x0032441c
	130	[7034]	GETGLOBAL	R14 K42 ; R14 := 0x0032441c
	131	[7034]	GETTABLE 	R14 R14 K43 ; R14 := R14["NemesisTauntCooldowns"]
	132	[7034]	TEST     	R14 1 ; if R14 then PC := 135
	133	[7034]	JMP      	135 ; PC := 135
	134	[7034]	NEWTABLE 	R14 0 0 ; R14 := {}
	135	[7034]	SETTABLE 	R13 K43 R14 ; R13["NemesisTauntCooldowns"] := R14
	136	[7035]	GETGLOBAL	R13 K42 ; R13 := 0x0032441c
	137	[7035]	GETTABLE 	R13 R13 K43 ; R13 := R13["NemesisTauntCooldowns"]
	138	[7035]	GETTABLE 	R13 R13 K44 ; R13 := R13["InfluenceRegion"]
	139	[7035]	TEST     	R13 0 ; if not R13 then PC := 150
	140	[7035]	JMP      	150 ; PC := 150
	141	[7035]	GETGLOBAL	R13 K42 ; R13 := 0x0032441c
	142	[7035]	GETTABLE 	R13 R13 K43 ; R13 := R13["NemesisTauntCooldowns"]
	143	[7035]	GETTABLE 	R13 R13 K44 ; R13 := R13["InfluenceRegion"]
	144	[7035]	ADD      	R13 R13 K45 ; R13 := R13 + 1200.000000
	145	[7035]	GETGLOBAL	R14 K46 ; R14 := 0xbe190284
	146	[7035]	SELF     	R14 R14 K47 ; R15 := R14; R14 := R14[0x715c5d7f]
	147	[7035]	CALL     	R14 2 2 ; R14 := R14(R15)
	148	[7035]	LT       	0 R13 R14 ; if R13 >= R14 then PC := 162
	149	[7035]	JMP      	162 ; PC := 162
	150	[7036]	GETUPVAL 	R13 U7 ; R13 := U7
	151	[7036]	GETTABLE 	R13 R13 K48 ; R13 := R13[0x9d3fe9c0]
	152	[7036]	GETGLOBAL	R14 K49 ; R14 := 0x0469f296
	153	[7036]	LOADK    	R15 K44 ; R15 := "InfluenceRegion"
	154	[7036]	CALL     	R14 2 0 ; R14,... := R14(R15)
	155	[7036]	CALL     	R13 0 1 ; R13(R14,...)
	156	[7037]	GETGLOBAL	R13 K42 ; R13 := 0x0032441c
	157	[7037]	GETTABLE 	R13 R13 K43 ; R13 := R13["NemesisTauntCooldowns"]
	158	[7037]	GETGLOBAL	R14 K46 ; R14 := 0xbe190284
	159	[7037]	SELF     	R14 R14 K47 ; R15 := R14; R14 := R14[0x715c5d7f]
	160	[7037]	CALL     	R14 2 2 ; R14 := R14(R15)
	161	[7037]	SETTABLE 	R13 K44 R14 ; R13["InfluenceRegion"] := R14
	162	[7039]	GETGLOBAL	R13 K27 ; R13 := _T
	163	[7039]	SETTABLE 	R13 K30 K50 ; R13["NemesisRegionTransmissionPlayed"] := true
	164	[7040]	JMP      	166 ; PC := 166
	165	[7032]	FORLOOP  	R9 120 ; R9 += R11; if R9 <= R10 then begin PC := 120; R12 := R9 end
	166	[7046]	GETGLOBAL	R13 K27 ; R13 := _T
	167	[7046]	SETTABLE 	R13 K51 R0 ; R13["StarChartSelectedRegion"] := R0
	168	[7047]	RETURN   	R0 1 ; return 

function #144 <?:7049,7115> (123 instructions, 492 bytes at 0000021130812BD0)
2 params, 23 slots, 5 upvalues, 0 locals, 40 constants, 2 functions
	1	[7050]	GETGLOBAL	R2 K0 ; R2 := mZoomedRegion
	2	[7050]	EQ       	0 R2 R0 ; if R2 ~= R0 then PC := 9
	3	[7050]	JMP      	9 ; PC := 9
	4	[7051]	TEST     	R1 0 ; if not R1 then PC := 8
	5	[7051]	JMP      	8 ; PC := 8
	6	[7052]	MOVE     	R2 R1 ; R2 := R1
	7	[7052]	CALL     	R2 1 1 ; R2()
	8	[7054]	RETURN   	R0 1 ; return 
	9	[7056]	GETUPVAL 	R2 U0 ; R2 := U0
	10	[7056]	MOVE     	R3 R0 ; R3 := R0
	11	[7056]	CALL     	R2 2 1 ; R2(R3)
	12	[7058]	GETUPVAL 	R2 U1 ; R2 := U1
	13	[7058]	CALL     	R2 1 1 ; R2()
	14	[7060]	GETGLOBAL	R2 K1 ; R2 := mFxNodes
	15	[7060]	GETUPVAL 	R3 U2 ; R3 := U2
	16	[7060]	GETTABLE 	R3 R3 K3 ; R3 := R3[0x06d055f9]
	17	[7060]	GETGLOBAL	R4 K4 ; R4 := mVorsPrizeQuestActiveNode
	18	[7060]	LOADK    	R5 := 0.500000
	19	[7060]	LOADK    	R6 := 2.000000
	20	[7060]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	21	[7060]	SETTABLE 	R2 K2 R3 ; R2["NotificationTime"] := R3
	22	[7062]	GETUPVAL 	R2 U3 ; R2 := U3
	23	[7062]	MOVE     	R3 R0 ; R3 := R0
	24	[7062]	GETTABLE 	R4 R0 K5 ; R4 := R0["zoomedFraming"]
	25	[7062]	CALL     	R2 3 4 ; R2,R3,R4 := R2(R3,R4)
	26	[7064]	GETGLOBAL	R5 K6 ; R5 := mDrag
	27	[7064]	GETTABLE 	R5 R5 K7 ; R5 := R5["mCurrentScroll"]
	28	[7064]	GETTABLE 	R5 R5 K8 ; R5 := R5["x"]
	29	[7065]	GETGLOBAL	R6 K6 ; R6 := mDrag
	30	[7065]	GETTABLE 	R6 R6 K7 ; R6 := R6["mCurrentScroll"]
	31	[7065]	GETTABLE 	R6 R6 K9 ; R6 := R6["y"]
	32	[7067]	GETUPVAL 	R7 U2 ; R7 := U2
	33	[7067]	GETTABLE 	R7 R7 K10 ; R7 := R7[0x91ed4068]
	34	[7067]	NEWTABLE 	R8 0 2 ; R8 := {}
	35	[7067]	SETTABLE 	R8 K11 R5 ; R8["X"] := R5
	36	[7067]	SETTABLE 	R8 K12 R6 ; R8["Y"] := R6
	37	[7067]	NEWTABLE 	R9 0 2 ; R9 := {}
	38	[7067]	SETTABLE 	R9 K11 R2 ; R9["X"] := R2
	39	[7067]	SETTABLE 	R9 K12 R3 ; R9["Y"] := R3
	40	[7067]	CALL     	R7 3 2 ; R7 := R7(R8,R9)
	41	[7068]	LOADK    	R8 := 0.000000
	42	[7069]	LOADK    	R9 := 0.000000
	43	[7071]	GETGLOBAL	R10 K13 ; R10 := mSmoothZoom
	44	[7071]	GETTABLE 	R10 R10 K14 ; R10 := R10["mCurVal"]
	45	[7072]	LT       	0 K15 R7 ; if 0.000000 >= R7 then PC := 54
	46	[7072]	JMP      	54 ; PC := 54
	47	[7072]	GETGLOBAL	R11 K16 ; R11 := 0x5bced4c4
	48	[7072]	GETTABLE 	R11 R11 K17 ; R11 := R11[0xb62ecfe0]
	49	[7072]	LOADK    	R12 := 1.500000
	50	[7072]	MUL      	R13 K18 R7 ; R13 := 4.000000 * R7
	51	[7072]	CALL     	R11 3 2 ; R11 := R11(R12,R13)
	52	[7072]	TEST     	R11 1 ; if R11 then PC := 55
	53	[7072]	JMP      	55 ; PC := 55
	54	[7072]	LOADK    	R11 := 0.000000
	55	[7073]	LOADK    	R12 := -2.000000
	56	[7096]	CLOSURE  	R13 0 ; R13 := closure(Function #1)
	57	[7096]	MOVE     	R0 R10 ; R0 := R10
	58	[7096]	MOVE     	R0 R12 ; R0 := R12
	59	[7096]	MOVE     	R0 R4 ; R0 := R4
	60	[7096]	MOVE     	R0 R8 ; R0 := R8
	61	[7096]	MOVE     	R0 R5 ; R0 := R5
	62	[7096]	MOVE     	R0 R2 ; R0 := R2
	63	[7096]	MOVE     	R0 R9 ; R0 := R9
	64	[7096]	MOVE     	R0 R6 ; R0 := R6
	65	[7096]	MOVE     	R0 R3 ; R0 := R3
	66	[7097]	OP_LOADBOOL	R14 1 0 ; R14 := true
	67	[7097]	SETGLOBALHASH	R14 K19 ; mInputBlocked := R14
	68	[7098]	GETGLOBAL	R14 K20 ; R14 := 0x25312c9b
	69	[7098]	GETGLOBAL	R15 K21 ; R15 := 0xae91e43b
	70	[7098]	LOADK    	R16 K22 ; R16 := "_root"
	71	[7098]	LOADK    	R17 := 0.000000
	72	[7098]	NEWTABLE 	R18 1 0 ; R18 := {}
	73	[7098]	MOVE     	R19 R13 ; R19 := R13
	74	[7098]	SETLIST  	R18 1 1 ; R18[(1-1)*FPF+i] := R(18+i), 1 <= i <= 1
	75	[7098]	NEWTABLE 	R19 1 0 ; R19 := {}
	76	[7098]	LOADK    	R20 := 1.000000
	77	[7098]	SETLIST  	R19 1 1 ; R19[(1-1)*FPF+i] := R(19+i), 1 <= i <= 1
	78	[7098]	MOVE     	R20 R11 ; R20 := R11
	79	[7098]	LOADK    	R21 := 0.000000
	80	[7104]	CLOSURE  	R22 1 ; R22 := closure(Function #2)
	81	[7104]	MOVE     	R0 R1 ; R0 := R1
	82	[7098]	CALL     	R14 9 1 ; R14(R15,R16,R17,R18,R19,R20,R21,R22)
	83	[7106]	GETUPVAL 	R14 U2 ; R14 := U2
	84	[7106]	GETTABLE 	R14 R14 K24 ; R14 := R14[0x659d451f]
	85	[7106]	GETGLOBAL	R15 K25 ; R15 := 0x00356c12
	86	[7106]	CALL     	R14 2 1 ; R14(R15)
	87	[7107]	GETUPVAL 	R14 U4 ; R14 := U4
	88	[7107]	GETTABLE 	R14 R14 K26 ; R14 := R14[1.000000]
	89	[7107]	SELF     	R14 R14 K27 ; R15 := R14; R14 := R14[0x188e2bee]
	90	[7107]	GETTABLE 	R16 R0 K28 ; R16 := R0["color"]
	91	[7107]	GETTABLE 	R16 R16 K29 ; R16 := R16["red"]
	92	[7107]	CALL     	R14 3 1 ; R14(R15,R16)
	93	[7108]	GETUPVAL 	R14 U4 ; R14 := U4
	94	[7108]	GETTABLE 	R14 R14 K30 ; R14 := R14[2.000000]
	95	[7108]	SELF     	R14 R14 K27 ; R15 := R14; R14 := R14[0x188e2bee]
	96	[7108]	GETTABLE 	R16 R0 K28 ; R16 := R0["color"]
	97	[7108]	GETTABLE 	R16 R16 K31 ; R16 := R16["green"]
	98	[7108]	CALL     	R14 3 1 ; R14(R15,R16)
	99	[7109]	GETUPVAL 	R14 U4 ; R14 := U4
	100	[7109]	GETTABLE 	R14 R14 K32 ; R14 := R14[3.000000]
	101	[7109]	SELF     	R14 R14 K27 ; R15 := R14; R14 := R14[0x188e2bee]
	102	[7109]	GETTABLE 	R16 R0 K28 ; R16 := R0["color"]
	103	[7109]	GETTABLE 	R16 R16 K33 ; R16 := R16["blue"]
	104	[7109]	CALL     	R14 3 1 ; R14(R15,R16)
	105	[7111]	GETGLOBAL	R14 K34 ; R14 := 0x88efc25e
	106	[7111]	GETTABLE 	R15 R0 K35 ; R15 := R0["zoomedInEffects"]
	107	[7111]	CALL     	R14 2 2 ; R14 := R14(R15)
	108	[7112]	GETGLOBAL	R15 K36 ; R15 := 0x7b998233
	109	[7112]	GETTABLE 	R16 R0 K37 ; R16 := R0["instance"]
	110	[7112]	CALL     	R15 2 2 ; R15 := R15(R16)
	111	[7112]	TEST     	R15 1 ; if R15 then PC := 123
	112	[7112]	JMP      	123 ; PC := 123
	113	[7112]	GETGLOBAL	R15 K36 ; R15 := 0x7b998233
	114	[7112]	MOVE     	R16 R14 ; R16 := R14
	115	[7112]	CALL     	R15 2 2 ; R15 := R15(R16)
	116	[7112]	TEST     	R15 1 ; if R15 then PC := 123
	117	[7112]	JMP      	123 ; PC := 123
	118	[7113]	GETTABLE 	R15 R0 K37 ; R15 := R0["instance"]
	119	[7113]	SELF     	R15 R15 K38 ; R16 := R15; R15 := R15[0x47901f07]
	120	[7113]	MOVE     	R17 R14 ; R17 := R14
	121	[7113]	GETGLOBAL	R18 K39 ; R18 := EMPTY_SYMBOL
	122	[7113]	CALL     	R15 4 1 ; R15(R16,R17,R18)
	123	[7115]	RETURN   	R0 1 ; return 

function #145 <?:7117,7123> (18 instructions, 72 bytes at 000002111B95FB80)
2 params, 8 slots, 0 upvalues, 0 locals, 8 constants, 0 functions
	1	[7118]	GETGLOBAL	R2 K0 ; R2 := 0x3d106989
	2	[7118]	LOADK    	R3 K1 ; R3 := "OnEmblemReady("
	3	[7118]	GETGLOBAL	R4 K2 ; R4 := 0x64fb1586
	4	[7118]	MOVE     	R5 R0 ; R5 := R0
	5	[7118]	CALL     	R4 2 2 ; R4 := R4(R5)
	6	[7118]	LOADK    	R5 K3 ; R5 := ", "
	7	[7118]	MOVE     	R6 R1 ; R6 := R1
	8	[7118]	LOADK    	R7 K4 ; R7 := ")"
	9	[7118]	CONCAT   	R3 R3 R7 ; R3 := R3 .. R4 .. R5 .. R6 .. R7
	10	[7118]	CALL     	R2 2 1 ; R2(R3)
	11	[7120]	TEST     	R0 0 ; if not R0 then PC := 18
	12	[7120]	JMP      	18 ; PC := 18
	13	[7121]	GETGLOBAL	R2 K5 ; R2 := mInfoTip
	14	[7121]	SELF     	R2 R2 K6 ; R3 := R2; R2 := R2[0x8a71c110]
	15	[7121]	MOVE     	R4 R1 ; R4 := R1
	16	[7121]	GETGLOBAL	R5 K7 ; R5 := mHover
	17	[7121]	CALL     	R2 4 1 ; R2(R3,R4,R5)
	18	[7123]	RETURN   	R0 1 ; return 

function #146 <?:7125,7127> (6 instructions, 24 bytes at 000002111CE3DF70)
1 param, 5 slots, 0 upvalues, 0 locals, 3 constants, 0 functions
	1	[7126]	GETGLOBAL	R1 K0 ; R1 := 0xbe190284
	2	[7126]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x8e07e77f]
	3	[7126]	MOVE     	R3 R0 ; R3 := R0
	4	[7126]	LOADK    	R4 K2 ; R4 := "OnEmblemReady"
	5	[7126]	CALL     	R1 4 1 ; R1(R2,R3,R4)
	6	[7127]	RETURN   	R0 1 ; return 

function #147 <?:7129,7214> (337 instructions, 1348 bytes at 000002111CE3E000)
1 param, 21 slots, 15 upvalues, 0 locals, 76 constants, 1 function
	1	[7130]	GETGLOBAL	R1 K0 ; R1 := mNodeAlphaValues
	2	[7130]	GETTABLE 	R1 R1 K1 ; R1 := R1["NodeLayerAlpha"]
	3	[7130]	GETGLOBAL	R2 K0 ; R2 := mNodeAlphaValues
	4	[7130]	GETTABLE 	R2 R2 K2 ; R2 := R2["MinNodeAlphaToClick"]
	5	[7130]	LE       	0 R1 R2 ; if R1 > R2 then PC := 8
	6	[7130]	JMP      	8 ; PC := 8
	7	[7131]	RETURN   	R0 1 ; return 
	8	[7134]	GETGLOBAL	R1 K3 ; R1 := 0xae91e43b
	9	[7134]	SELF     	R1 R1 K4 ; R2 := R1; R1 := R1[0x91a24e4b]
	10	[7134]	LOADK    	R3 K5 ; R3 := "_root"
	11	[7134]	LOADK    	R4 := 25.000000
	12	[7134]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	13	[7135]	GETGLOBAL	R2 K3 ; R2 := 0xae91e43b
	14	[7135]	SELF     	R2 R2 K4 ; R3 := R2; R2 := R2[0x91a24e4b]
	15	[7135]	LOADK    	R4 K5 ; R4 := "_root"
	16	[7135]	LOADK    	R5 := 26.000000
	17	[7135]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	18	[7136]	LE       	0 R1 K6 ; if R1 > -1000.000000 then PC := 23
	19	[7136]	JMP      	23 ; PC := 23
	20	[7136]	LE       	0 R2 K6 ; if R2 > -1000.000000 then PC := 23
	21	[7136]	JMP      	23 ; PC := 23
	22	[7137]	RETURN   	R0 1 ; return 
	23	[7140]	GETGLOBAL	R3 K7 ; R3 := mHover
	24	[7140]	GETTABLE 	R3 R3 K8 ; R3 := R3["Node"]
	25	[7140]	EQ       	1 R3 K9 ; if R3 == nil then PC := 78
	26	[7140]	JMP      	78 ; PC := 78
	27	[7141]	GETGLOBAL	R3 K3 ; R3 := 0xae91e43b
	28	[7141]	SELF     	R3 R3 K10 ; R4 := R3; R3 := R3[0xf64b7262]
	29	[7141]	GETGLOBAL	R5 K7 ; R5 := mHover
	30	[7141]	GETTABLE 	R5 R5 K8 ; R5 := R5["Node"]
	31	[7141]	GETTABLE 	R5 R5 K11 ; R5 := R5["clipName"]
	32	[7141]	LOADK    	R6 K8 ; R6 := "Node"
	33	[7141]	LOADK    	R7 := 9.000000
	34	[7141]	GETGLOBAL	R8 K12 ; R8 := 0x0032441c
	35	[7141]	GETTABLE 	R8 R8 K13 ; R8 := R8["UIColor_White"]
	36	[7141]	CALL     	R3 6 1 ; R3(R4,R5,R6,R7,R8)
	37	[7142]	GETGLOBAL	R3 K3 ; R3 := 0xae91e43b
	38	[7142]	SELF     	R3 R3 K14 ; R4 := R3; R3 := R3[0xcd12f3f1]
	39	[7142]	GETGLOBAL	R5 K7 ; R5 := mHover
	40	[7142]	GETTABLE 	R5 R5 K8 ; R5 := R5["Node"]
	41	[7142]	GETTABLE 	R5 R5 K15 ; R5 := R5["labelIndex"]
	42	[7142]	LOADK    	R6 := 10.000000
	43	[7142]	GETUPVAL 	R7 U0 ; R7 := U0
	44	[7142]	GETGLOBAL	R8 K7 ; R8 := mHover
	45	[7142]	GETTABLE 	R8 R8 K8 ; R8 := R8["Node"]
	46	[7142]	CALL     	R7 2 0 ; R7,... := R7(R8)
	47	[7142]	CALL     	R3 0 1 ; R3(R4,...)
	48	[7143]	GETGLOBAL	R3 K7 ; R3 := mHover
	49	[7143]	GETTABLE 	R3 R3 K8 ; R3 := R3["Node"]
	50	[7143]	GETTABLE 	R3 R3 K16 ; R3 := R3["guildId"]
	51	[7143]	EQ       	1 R3 K9 ; if R3 == nil then PC := 58
	52	[7143]	JMP      	58 ; PC := 58
	53	[7143]	GETGLOBAL	R3 K7 ; R3 := mHover
	54	[7143]	GETTABLE 	R3 R3 K8 ; R3 := R3["Node"]
	55	[7143]	GETTABLE 	R3 R3 K17 ; R3 := R3["clanTier"]
	56	[7143]	EQ       	0 R3 K9 ; if R3 ~= nil then PC := 59
	57	[7143]	JMP      	59 ; PC := 59
	58	[7143]	OP_LOADBOOL	R3 0 1 ; R3 := false; PC := 59
	59	[7143]	OP_LOADBOOL	R3 1 0 ; R3 := true
	60	[7144]	TEST     	R3 0 ; if not R3 then PC := 78
	61	[7144]	JMP      	78 ; PC := 78
	62	[7145]	GETGLOBAL	R4 K18 ; R4 := 0x25312c9b
	63	[7145]	GETGLOBAL	R5 K3 ; R5 := 0xae91e43b
	64	[7145]	GETGLOBAL	R6 K7 ; R6 := mHover
	65	[7145]	GETTABLE 	R6 R6 K8 ; R6 := R6["Node"]
	66	[7145]	GETTABLE 	R6 R6 K11 ; R6 := R6["clipName"]
	67	[7145]	LOADK    	R7 K19 ; R7 := ".Node.Container.Node"
	68	[7145]	CONCAT   	R6 R6 R7 ; R6 := R6 .. R7
	69	[7145]	LOADK    	R7 := 0.000000
	70	[7145]	NEWTABLE 	R8 1 0 ; R8 := {}
	71	[7145]	LOADK    	R9 K21 ; R9 := "_alpha"
	72	[7145]	SETLIST  	R8 1 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
	73	[7145]	NEWTABLE 	R9 1 0 ; R9 := {}
	74	[7145]	LOADK    	R10 := 0.000000
	75	[7145]	SETLIST  	R9 1 1 ; R9[(1-1)*FPF+i] := R(9+i), 1 <= i <= 1
	76	[7145]	LOADK    	R10 := 0.250000
	77	[7145]	CALL     	R4 7 1 ; R4(R5,R6,R7,R8,R9,R10)
	78	[7149]	GETUPVAL 	R4 U1 ; R4 := U1
	79	[7149]	GETTABLE 	R4 R4 R0 ; R4 := R4[R0]
	80	[7150]	OP_LOADBOOL	R5 0 0 ; R5 := false
	81	[7151]	GETGLOBAL	R6 K22 ; R6 := mPriorHoverNode
	82	[7151]	EQ       	0 R4 R6 ; if R4 ~= R6 then PC := 85
	83	[7151]	JMP      	85 ; PC := 85
	84	[7152]	OP_LOADBOOL	R5 1 0 ; R5 := true
	85	[7155]	GETGLOBAL	R6 K23 ; R6 := 0x7b998233
	86	[7155]	MOVE     	R7 R4 ; R7 := R4
	87	[7155]	CALL     	R6 2 2 ; R6 := R6(R7)
	88	[7155]	TEST     	R6 1 ; if R6 then PC := 337
	89	[7155]	JMP      	337 ; PC := 337
	90	[7155]	GETTABLE 	R6 R4 K24 ; R6 := R4["forceHover"]
	91	[7155]	TEST     	R6 1 ; if R6 then PC := 111
	92	[7155]	JMP      	111 ; PC := 111
	93	[7155]	GETTABLE 	R6 R4 K25 ; R6 := R4["locked"]
	94	[7155]	TEST     	R6 0 ; if not R6 then PC := 111
	95	[7155]	JMP      	111 ; PC := 111
	96	[7155]	GETUPVAL 	R6 U2 ; R6 := U2
	97	[7155]	GETUPVAL 	R7 U3 ; R7 := U3
	98	[7155]	GETTABLE 	R7 R7 K26 ; R7 := R7["EDIT_NODES"]
	99	[7155]	EQ       	1 R6 R7 ; if R6 == R7 then PC := 111
	100	[7155]	JMP      	111 ; PC := 111
	101	[7155]	GETUPVAL 	R6 U2 ; R6 := U2
	102	[7155]	GETUPVAL 	R7 U3 ; R7 := U3
	103	[7155]	GETTABLE 	R7 R7 K27 ; R7 := R7["EDIT_EDGES"]
	104	[7155]	EQ       	1 R6 R7 ; if R6 == R7 then PC := 111
	105	[7155]	JMP      	111 ; PC := 111
	106	[7155]	GETUPVAL 	R6 U2 ; R6 := U2
	107	[7155]	GETUPVAL 	R7 U3 ; R7 := U3
	108	[7155]	GETTABLE 	R7 R7 K28 ; R7 := R7["EDIT_NODE_DECOS"]
	109	[7155]	EQ       	0 R6 R7 ; if R6 ~= R7 then PC := 337
	110	[7155]	JMP      	337 ; PC := 337
	111	[7155]	GETTABLE 	R6 R4 K29 ; R6 := R4["locationEnabled"]
	112	[7155]	TEST     	R6 0 ; if not R6 then PC := 337
	113	[7155]	JMP      	337 ; PC := 337
	114	[7156]	GETGLOBAL	R6 K7 ; R6 := mHover
	115	[7156]	SETTABLE 	R6 K8 R4 ; R6["Node"] := R4
	116	[7158]	GETGLOBAL	R6 K23 ; R6 := 0x7b998233
	117	[7158]	GETGLOBAL	R7 K7 ; R7 := mHover
	118	[7158]	GETTABLE 	R7 R7 K8 ; R7 := R7["Node"]
	119	[7158]	CALL     	R6 2 2 ; R6 := R6(R7)
	120	[7158]	TEST     	R6 0 ; if not R6 then PC := 123
	121	[7158]	JMP      	123 ; PC := 123
	122	[7159]	RETURN   	R0 1 ; return 
	123	[7161]	GETGLOBAL	R6 K7 ; R6 := mHover
	124	[7161]	GETTABLE 	R6 R6 K8 ; R6 := R6["Node"]
	125	[7161]	GETTABLE 	R6 R6 K30 ; R6 := R6["radialSector"]
	126	[7161]	GETTABLE 	R6 R6 K31 ; R6 := R6["mission"]
	127	[7161]	GETTABLE 	R6 R6 K32 ; R6 := R6["missionType"]
	128	[7161]	EQ       	0 R6 K34 ; if R6 ~= 0.000000 then PC := 134
	129	[7161]	JMP      	134 ; PC := 134
	130	[7162]	GETUPVAL 	R6 U4 ; R6 := U4
	131	[7162]	GETGLOBAL	R7 K7 ; R7 := mHover
	132	[7162]	GETTABLE 	R7 R7 K8 ; R7 := R7["Node"]
	133	[7162]	CALL     	R6 2 1 ; R6(R7)
	134	[7165]	GETGLOBAL	R6 K7 ; R6 := mHover
	135	[7165]	GETTABLE 	R6 R6 K8 ; R6 := R6["Node"]
	136	[7165]	GETTABLE 	R6 R6 K35 ; R6 := R6["IsHomeNode"]
	137	[7165]	TEST     	R6 0 ; if not R6 then PC := 156
	138	[7165]	JMP      	156 ; PC := 156
	139	[7165]	GETGLOBAL	R6 K36 ; R6 := 0x25d99d89
	140	[7165]	SELF     	R6 R6 K37 ; R7 := R6; R6 := R6[0x21a1810f]
	141	[7165]	GETGLOBAL	R8 K7 ; R8 := mHover
	142	[7165]	GETTABLE 	R8 R8 K8 ; R8 := R8["Node"]
	143	[7165]	GETTABLE 	R8 R8 K38 ; R8 := R8["NodeIntro"]
	144	[7165]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	145	[7165]	TEST     	R6 1 ; if R6 then PC := 156
	146	[7165]	JMP      	156 ; PC := 156
	147	[7166]	GETGLOBAL	R6 K7 ; R6 := mHover
	148	[7166]	GETTABLE 	R6 R6 K8 ; R6 := R6["Node"]
	149	[7166]	GETUPVAL 	R7 U5 ; R7 := U5
	150	[7166]	SELF     	R7 R7 K40 ; R8 := R7; R7 := R7[0xbd2e96ea]
	151	[7166]	LOADK    	R9 := 2.000000
	152	[7169]	CLOSURE  	R10 0 ; R10 := closure(Function #1)
	153	[7169]	GETUPVAL 	R0 U6 ; R0 := U6
	154	[7166]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	155	[7169]	SETTABLE 	R6 K39 R7 ; R6["SeenTimer"] := R7
	156	[7172]	TEST     	R5 1 ; if R5 then PC := 163
	157	[7172]	JMP      	163 ; PC := 163
	158	[7173]	GETUPVAL 	R6 U7 ; R6 := U7
	159	[7173]	GETTABLE 	R6 R6 K41 ; R6 := R6[0x659d451f]
	160	[7173]	GETGLOBAL	R7 K12 ; R7 := 0x0032441c
	161	[7173]	GETTABLE 	R7 R7 K42 ; R7 := R7["UISound_Focus"]
	162	[7173]	CALL     	R6 2 1 ; R6(R7)
	163	[7176]	GETTABLE 	R6 R4 K16 ; R6 := R4["guildId"]
	164	[7176]	EQ       	1 R6 K9 ; if R6 == nil then PC := 169
	165	[7176]	JMP      	169 ; PC := 169
	166	[7176]	GETTABLE 	R6 R4 K17 ; R6 := R4["clanTier"]
	167	[7176]	EQ       	0 R6 K9 ; if R6 ~= nil then PC := 170
	168	[7176]	JMP      	170 ; PC := 170
	169	[7176]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 170
	170	[7176]	OP_LOADBOOL	R6 1 0 ; R6 := true
	171	[7177]	TEST     	R6 0 ; if not R6 then PC := 188
	172	[7177]	JMP      	188 ; PC := 188
	173	[7178]	GETGLOBAL	R7 K18 ; R7 := 0x25312c9b
	174	[7178]	GETGLOBAL	R8 K3 ; R8 := 0xae91e43b
	175	[7178]	GETTABLE 	R9 R4 K11 ; R9 := R4["clipName"]
	176	[7178]	LOADK    	R10 K19 ; R10 := ".Node.Container.Node"
	177	[7178]	CONCAT   	R9 R9 R10 ; R9 := R9 .. R10
	178	[7178]	LOADK    	R10 := 0.000000
	179	[7178]	NEWTABLE 	R11 1 0 ; R11 := {}
	180	[7178]	LOADK    	R12 K21 ; R12 := "_alpha"
	181	[7178]	SETLIST  	R11 1 1 ; R11[(1-1)*FPF+i] := R(11+i), 1 <= i <= 1
	182	[7178]	NEWTABLE 	R12 1 0 ; R12 := {}
	183	[7178]	LOADK    	R13 := 35.000000
	184	[7178]	SETLIST  	R12 1 1 ; R12[(1-1)*FPF+i] := R(12+i), 1 <= i <= 1
	185	[7178]	LOADK    	R13 := 0.250000
	186	[7178]	CALL     	R7 7 1 ; R7(R8,R9,R10,R11,R12,R13)
	187	[7178]	JMP      	225 ; PC := 225
	188	[7179]	GETGLOBAL	R7 K43 ; R7 := _T
	189	[7179]	GETTABLE 	R7 R7 K44 ; R7 := R7["CustomStarChartNodeFilter"]
	190	[7179]	EQ       	1 R7 K9 ; if R7 == nil then PC := 209
	191	[7179]	JMP      	209 ; PC := 209
	192	[7180]	GETGLOBAL	R7 K3 ; R7 := 0xae91e43b
	193	[7180]	SELF     	R7 R7 K10 ; R8 := R7; R7 := R7[0xf64b7262]
	194	[7180]	GETTABLE 	R9 R4 K11 ; R9 := R4["clipName"]
	195	[7180]	LOADK    	R10 K8 ; R10 := "Node"
	196	[7180]	LOADK    	R11 := 9.000000
	197	[7180]	GETGLOBAL	R12 K12 ; R12 := 0x0032441c
	198	[7180]	GETTABLE 	R12 R12 K13 ; R12 := R12["UIColor_White"]
	199	[7180]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	200	[7181]	GETGLOBAL	R7 K3 ; R7 := 0xae91e43b
	201	[7181]	SELF     	R7 R7 K10 ; R8 := R7; R7 := R7[0xf64b7262]
	202	[7181]	GETTABLE 	R9 R4 K11 ; R9 := R4["clipName"]
	203	[7181]	LOADK    	R10 K45 ; R10 := "Name"
	204	[7181]	LOADK    	R11 := 9.000000
	205	[7181]	GETGLOBAL	R12 K12 ; R12 := 0x0032441c
	206	[7181]	GETTABLE 	R12 R12 K46 ; R12 := R12["UIColor_Yellow"]
	207	[7181]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	208	[7181]	JMP      	225 ; PC := 225
	209	[7183]	GETGLOBAL	R7 K3 ; R7 := 0xae91e43b
	210	[7183]	SELF     	R7 R7 K10 ; R8 := R7; R7 := R7[0xf64b7262]
	211	[7183]	GETTABLE 	R9 R4 K11 ; R9 := R4["clipName"]
	212	[7183]	LOADK    	R10 K8 ; R10 := "Node"
	213	[7183]	LOADK    	R11 := 9.000000
	214	[7183]	GETGLOBAL	R12 K12 ; R12 := 0x0032441c
	215	[7183]	GETTABLE 	R12 R12 K46 ; R12 := R12["UIColor_Yellow"]
	216	[7183]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	217	[7184]	GETGLOBAL	R7 K3 ; R7 := 0xae91e43b
	218	[7184]	SELF     	R7 R7 K10 ; R8 := R7; R7 := R7[0xf64b7262]
	219	[7184]	GETTABLE 	R9 R4 K11 ; R9 := R4["clipName"]
	220	[7184]	LOADK    	R10 K45 ; R10 := "Name"
	221	[7184]	LOADK    	R11 := 9.000000
	222	[7184]	GETGLOBAL	R12 K12 ; R12 := 0x0032441c
	223	[7184]	GETTABLE 	R12 R12 K46 ; R12 := R12["UIColor_Yellow"]
	224	[7184]	CALL     	R7 6 1 ; R7(R8,R9,R10,R11,R12)
	225	[7187]	GETGLOBAL	R7 K47 ; R7 := 0x3d106989
	226	[7187]	LOADK    	R8 K48 ; R8 := "MapRedux::NodeRollOver "
	227	[7187]	GETGLOBAL	R9 K49 ; R9 := 0x64fb1586
	228	[7187]	GETTABLE 	R10 R4 K30 ; R10 := R4["radialSector"]
	229	[7187]	GETTABLE 	R10 R10 K50 ; R10 := R10["name"]
	230	[7187]	CALL     	R9 2 2 ; R9 := R9(R10)
	231	[7187]	LOADK    	R10 K51 ; R10 := " - "
	232	[7187]	GETGLOBAL	R11 K3 ; R11 := 0xae91e43b
	233	[7187]	SELF     	R11 R11 K52 ; R12 := R11; R11 := R11[0x42b04007]
	234	[7187]	GETGLOBAL	R13 K49 ; R13 := 0x64fb1586
	235	[7187]	GETTABLE 	R14 R4 K53 ; R14 := R4["locName"]
	236	[7187]	CALL     	R13 2 2 ; R13 := R13(R14)
	237	[7187]	OP_LOADBOOL	R14 0 0 ; R14 := false
	238	[7187]	CALL     	R11 4 2 ; R11 := R11(R12,R13,R14)
	239	[7187]	CONCAT   	R8 R8 R11 ; R8 := R8 .. R9 .. R10 .. R11
	240	[7187]	CALL     	R7 2 1 ; R7(R8)
	241	[7189]	GETTABLE 	R7 R4 K30 ; R7 := R4["radialSector"]
	242	[7190]	GETTABLE 	R8 R7 K54 ; R8 := R7["keyChain"]
	243	[7192]	GETTABLE 	R9 R4 K55 ; R9 := R4["isJunction"]
	244	[7192]	TEST     	R9 0 ; if not R9 then PC := 262
	245	[7192]	JMP      	262 ; PC := 262
	246	[7192]	GETUPVAL 	R9 U8 ; R9 := U8
	247	[7192]	CALL     	R9 1 2 ; R9 := R9()
	248	[7192]	EQ       	0 R9 K34 ; if R9 ~= 0.000000 then PC := 262
	249	[7192]	JMP      	262 ; PC := 262
	250	[7193]	GETGLOBAL	R9 K43 ; R9 := _T
	251	[7193]	SETTABLE 	R9 K56 K9 ; R9["JunctionTasksRelayReconstruction"] := nil
	252	[7194]	GETGLOBAL	R9 K57 ; R9 := 0x34291f5c
	253	[7194]	GETTABLE 	R9 R9 K58 ; R9 := R9[0x781669d7]
	254	[7194]	CALL     	R9 1 2 ; R9 := R9()
	255	[7194]	TEST     	R9 1 ; if R9 then PC := 337
	256	[7194]	JMP      	337 ; PC := 337
	257	[7196]	GETUPVAL 	R9 U9 ; R9 := U9
	258	[7196]	MOVE     	R10 R4 ; R10 := R4
	259	[7196]	MOVE     	R11 R5 ; R11 := R5
	260	[7196]	CALL     	R9 3 1 ; R9(R10,R11)
	261	[7197]	JMP      	337 ; PC := 337
	262	[7198]	GETTABLE 	R9 R4 K59 ; R9 := R4["reconstructionProgress"]
	263	[7198]	TEST     	R9 0 ; if not R9 then PC := 298
	264	[7198]	JMP      	298 ; PC := 298
	265	[7198]	GETTABLE 	R9 R4 K59 ; R9 := R4["reconstructionProgress"]
	266	[7198]	EQ       	0 R9 K34 ; if R9 ~= 0.000000 then PC := 298
	267	[7198]	JMP      	298 ; PC := 298
	268	[7199]	GETTABLE 	R9 R4 K50 ; R9 := R4["name"]
	269	[7199]	SELF     	R9 R9 K60 ; R10 := R9; R9 := R9[0x6d604ba7]
	270	[7199]	CALL     	R9 2 2 ; R9 := R9(R10)
	271	[7200]	GETGLOBAL	R10 K61 ; R10 := 0x7f5022cf
	272	[7200]	GETTABLE 	R10 R10 K62 ; R10 := R10[0x1a94c9cc]
	273	[7200]	MOVE     	R11 R9 ; R11 := R9
	274	[7200]	LOADK    	R12 := 1.000000
	275	[7200]	GETGLOBAL	R13 K61 ; R13 := 0x7f5022cf
	276	[7200]	GETTABLE 	R13 R13 K63 ; R13 := R13[0xa5c556b9]
	277	[7200]	MOVE     	R14 R9 ; R14 := R9
	278	[7200]	LOADK    	R15 K64 ; R15 := "Rebuild"
	279	[7200]	CALL     	R13 3 2 ; R13 := R13(R14,R15)
	280	[7200]	SUB      	R13 R13 K65 ; R13 := R13 - 1.000000
	281	[7200]	CALL     	R10 4 2 ; R10 := R10(R11,R12,R13)
	282	[7200]	MOVE     	R9 R10 ; R9 := R10
	283	[7201]	GETGLOBAL	R10 K43 ; R10 := _T
	284	[7201]	GETGLOBAL	R11 K66 ; R11 := mConstructionProjectNodes
	285	[7201]	GETTABLE 	R11 R11 R9 ; R11 := R11[R9]
	286	[7201]	GETTABLE 	R11 R11 K67 ; R11 := R11["info"]
	287	[7201]	SETTABLE 	R10 K56 R11 ; R10["JunctionTasksRelayReconstruction"] := R11
	288	[7202]	GETGLOBAL	R10 K57 ; R10 := 0x34291f5c
	289	[7202]	GETTABLE 	R10 R10 K58 ; R10 := R10[0x781669d7]
	290	[7202]	CALL     	R10 1 2 ; R10 := R10()
	291	[7202]	TEST     	R10 1 ; if R10 then PC := 337
	292	[7202]	JMP      	337 ; PC := 337
	293	[7204]	GETUPVAL 	R10 U9 ; R10 := U9
	294	[7204]	MOVE     	R11 R4 ; R11 := R4
	295	[7204]	MOVE     	R12 R5 ; R12 := R5
	296	[7204]	CALL     	R10 3 1 ; R10(R11,R12)
	297	[7205]	JMP      	337 ; PC := 337
	298	[7206]	GETUPVAL 	R10 U2 ; R10 := U2
	299	[7206]	GETUPVAL 	R11 U3 ; R11 := U3
	300	[7206]	GETTABLE 	R11 R11 K28 ; R11 := R11["EDIT_NODE_DECOS"]
	301	[7206]	EQ       	1 R10 R11 ; if R10 == R11 then PC := 337
	302	[7206]	JMP      	337 ; PC := 337
	303	[7206]	GETGLOBAL	R10 K68 ; R10 := mVisibleTags
	304	[7206]	TEST     	R10 0 ; if not R10 then PC := 337
	305	[7206]	JMP      	337 ; PC := 337
	306	[7206]	GETTABLE 	R10 R4 K24 ; R10 := R4["forceHover"]
	307	[7206]	TEST     	R10 1 ; if R10 then PC := 312
	308	[7206]	JMP      	312 ; PC := 312
	309	[7206]	GETTABLE 	R10 R4 K25 ; R10 := R4["locked"]
	310	[7206]	TEST     	R10 1 ; if R10 then PC := 337
	311	[7206]	JMP      	337 ; PC := 337
	312	[7206]	GETTABLE 	R10 R4 K69 ; R10 := R4["isShortcut"]
	313	[7206]	TEST     	R10 1 ; if R10 then PC := 337
	314	[7206]	JMP      	337 ; PC := 337
	315	[7207]	GETUPVAL 	R10 U10 ; R10 := U10
	316	[7207]	GETTABLE 	R10 R10 K71 ; R10 := R10[0x0e1d10ad]
	317	[7207]	GETGLOBAL	R11 K72 ; R11 := mInfoTip
	318	[7207]	MOVE     	R12 R4 ; R12 := R4
	319	[7207]	GETUPVAL 	R13 U11 ; R13 := U11
	320	[7207]	GETGLOBAL	R14 K73 ; R14 := mRailJack
	321	[7207]	GETUPVAL 	R15 U12 ; R15 := U12
	322	[7207]	GETGLOBAL	R16 K74 ; R16 := mCodexManifest
	323	[7207]	GETUPVAL 	R17 U13 ; R17 := U13
	324	[7207]	GETGLOBAL	R18 K7 ; R18 := mHover
	325	[7207]	MOVE     	R19 R5 ; R19 := R5
	326	[7207]	MOVE     	R20 R0 ; R20 := R0
	327	[7207]	CALL     	R10 11 2 ; R10 := R10(R11,R12,R13,R14,R15,R16,R17,R18,R19,R20)
	328	[7207]	SETGLOBALHASH	R10 K70 ; mMissionInfo := R10
	329	[7208]	GETGLOBAL	R10 K57 ; R10 := 0x34291f5c
	330	[7208]	GETTABLE 	R10 R10 K58 ; R10 := R10[0x781669d7]
	331	[7208]	CALL     	R10 1 2 ; R10 := R10()
	332	[7208]	TEST     	R10 1 ; if R10 then PC := 337
	333	[7208]	JMP      	337 ; PC := 337
	334	[7210]	GETUPVAL 	R10 U14 ; R10 := U14
	335	[7210]	GETTABLE 	R10 R10 K75 ; R10 := R10[0xc59bc2e0]
	336	[7210]	CALL     	R10 1 1 ; R10()
	337	[7214]	RETURN   	R0 1 ; return 

function #148 <?:7216,7275> (169 instructions, 676 bytes at 000002111B2D0FA0)
1 param, 10 slots, 6 upvalues, 0 locals, 43 constants, 1 function
	1	[7217]	GETGLOBAL	R1 K0 ; R1 := mNodeAlphaValues
	2	[7217]	GETTABLE 	R1 R1 K1 ; R1 := R1["NodeLayerAlpha"]
	3	[7217]	GETGLOBAL	R2 K0 ; R2 := mNodeAlphaValues
	4	[7217]	GETTABLE 	R2 R2 K2 ; R2 := R2["MinNodeAlphaToClick"]
	5	[7217]	LE       	1 R1 R2 ; if R1 <= R2 then PC := 16
	6	[7217]	JMP      	16 ; PC := 16
	7	[7217]	GETGLOBAL	R1 K3 ; R1 := 0x7b998233
	8	[7217]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	9	[7217]	CALL     	R1 2 2 ; R1 := R1(R2)
	10	[7217]	TEST     	R1 1 ; if R1 then PC := 16
	11	[7217]	JMP      	16 ; PC := 16
	12	[7217]	GETGLOBAL	R1 K5 ; R1 := mInfoTip
	13	[7217]	GETTABLE 	R1 R1 K6 ; R1 := R1["NodeSelectionOpen"]
	14	[7217]	TEST     	R1 0 ; if not R1 then PC := 17
	15	[7217]	JMP      	17 ; PC := 17
	16	[7218]	RETURN   	R0 1 ; return 
	17	[7221]	GETGLOBAL	R1 K7 ; R1 := 0x34291f5c
	18	[7221]	GETTABLE 	R1 R1 K8 ; R1 := R1[0x781669d7]
	19	[7221]	CALL     	R1 1 2 ; R1 := R1()
	20	[7221]	TEST     	R1 0 ; if not R1 then PC := 27
	21	[7221]	JMP      	27 ; PC := 27
	22	[7221]	GETUPVAL 	R1 U0 ; R1 := U0
	23	[7221]	GETTABLE 	R1 R1 K9 ; R1 := R1["mNodeVisible"]
	24	[7221]	TEST     	R1 0 ; if not R1 then PC := 27
	25	[7221]	JMP      	27 ; PC := 27
	26	[7223]	RETURN   	R0 1 ; return 
	27	[7226]	GETGLOBAL	R1 K10 ; R1 := mHover
	28	[7226]	GETTABLE 	R1 R1 K11 ; R1 := R1["Node"]
	29	[7228]	GETGLOBAL	R2 K10 ; R2 := mHover
	30	[7228]	GETTABLE 	R2 R2 K11 ; R2 := R2["Node"]
	31	[7228]	SETGLOBALHASH	R2 K12 ; mPriorHoverNode := R2
	32	[7229]	GETGLOBAL	R2 K10 ; R2 := mHover
	33	[7229]	SETTABLE 	R2 K11 K13 ; R2["Node"] := nil
	34	[7231]	EQ       	1 R0 K13 ; if R0 == nil then PC := 42
	35	[7231]	JMP      	42 ; PC := 42
	36	[7231]	GETUPVAL 	R2 U1 ; R2 := U1
	37	[7231]	GETTABLE 	R2 R2 R0 ; R2 := R2[R0]
	38	[7231]	EQ       	1 R2 K13 ; if R2 == nil then PC := 42
	39	[7231]	JMP      	42 ; PC := 42
	40	[7232]	GETUPVAL 	R2 U1 ; R2 := U1
	41	[7232]	GETTABLE 	R1 R2 R0 ; R1 := R2[R0]
	42	[7235]	GETGLOBAL	R2 K3 ; R2 := 0x7b998233
	43	[7235]	GETGLOBAL	R3 K5 ; R3 := mInfoTip
	44	[7235]	GETTABLE 	R3 R3 K14 ; R3 := R3["mTransmissionStatus"]
	45	[7235]	GETTABLE 	R3 R3 K15 ; R3 := R3["Projector"]
	46	[7235]	CALL     	R2 2 2 ; R2 := R2(R3)
	47	[7235]	TEST     	R2 1 ; if R2 then PC := 55
	48	[7235]	JMP      	55 ; PC := 55
	49	[7236]	GETGLOBAL	R2 K16 ; R2 := 0x1211d00f
	50	[7236]	SELF     	R2 R2 K17 ; R3 := R2; R2 := R2[0x59c96e77]
	51	[7236]	GETGLOBAL	R4 K5 ; R4 := mInfoTip
	52	[7236]	GETTABLE 	R4 R4 K14 ; R4 := R4["mTransmissionStatus"]
	53	[7236]	GETTABLE 	R4 R4 K15 ; R4 := R4["Projector"]
	54	[7236]	CALL     	R2 3 1 ; R2(R3,R4)
	55	[7239]	GETGLOBAL	R2 K3 ; R2 := 0x7b998233
	56	[7239]	MOVE     	R3 R1 ; R3 := R1
	57	[7239]	CALL     	R2 2 2 ; R2 := R2(R3)
	58	[7239]	TEST     	R2 1 ; if R2 then PC := 169
	59	[7239]	JMP      	169 ; PC := 169
	60	[7240]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	61	[7240]	SELF     	R2 R2 K18 ; R3 := R2; R2 := R2[0xf64b7262]
	62	[7240]	GETTABLE 	R4 R1 K19 ; R4 := R1["clipName"]
	63	[7240]	LOADK    	R5 K11 ; R5 := "Node"
	64	[7240]	LOADK    	R6 := 9.000000
	65	[7240]	GETGLOBAL	R7 K20 ; R7 := 0x0032441c
	66	[7240]	GETTABLE 	R7 R7 K21 ; R7 := R7["UIColor_White"]
	67	[7240]	CALL     	R2 6 1 ; R2(R3,R4,R5,R6,R7)
	68	[7241]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	69	[7241]	SELF     	R2 R2 K18 ; R3 := R2; R2 := R2[0xf64b7262]
	70	[7241]	GETTABLE 	R4 R1 K19 ; R4 := R1["clipName"]
	71	[7241]	LOADK    	R5 K22 ; R5 := "Name"
	72	[7241]	LOADK    	R6 := 9.000000
	73	[7241]	GETGLOBAL	R7 K20 ; R7 := 0x0032441c
	74	[7241]	GETTABLE 	R7 R7 K21 ; R7 := R7["UIColor_White"]
	75	[7241]	CALL     	R2 6 1 ; R2(R3,R4,R5,R6,R7)
	76	[7242]	GETGLOBAL	R2 K7 ; R2 := 0x34291f5c
	77	[7242]	GETTABLE 	R2 R2 K23 ; R2 := R2[0xe6b41adb]
	78	[7242]	CALL     	R2 1 2 ; R2 := R2()
	79	[7242]	TEST     	R2 1 ; if R2 then PC := 89
	80	[7242]	JMP      	89 ; PC := 89
	81	[7243]	GETGLOBAL	R2 K4 ; R2 := 0xae91e43b
	82	[7243]	SELF     	R2 R2 K24 ; R3 := R2; R2 := R2[0xcd12f3f1]
	83	[7243]	GETTABLE 	R4 R1 K25 ; R4 := R1["labelIndex"]
	84	[7243]	LOADK    	R5 := 10.000000
	85	[7243]	GETUPVAL 	R6 U2 ; R6 := U2
	86	[7243]	MOVE     	R7 R1 ; R7 := R1
	87	[7243]	CALL     	R6 2 0 ; R6,... := R6(R7)
	88	[7243]	CALL     	R2 0 1 ; R2(R3,...)
	89	[7245]	GETTABLE 	R2 R1 K26 ; R2 := R1["guildId"]
	90	[7245]	EQ       	1 R2 K13 ; if R2 == nil then PC := 95
	91	[7245]	JMP      	95 ; PC := 95
	92	[7245]	GETTABLE 	R2 R1 K27 ; R2 := R1["clanTier"]
	93	[7245]	EQ       	0 R2 K13 ; if R2 ~= nil then PC := 96
	94	[7245]	JMP      	96 ; PC := 96
	95	[7245]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 96
	96	[7245]	OP_LOADBOOL	R2 1 0 ; R2 := true
	97	[7246]	TEST     	R2 0 ; if not R2 then PC := 113
	98	[7246]	JMP      	113 ; PC := 113
	99	[7247]	GETGLOBAL	R3 K28 ; R3 := 0x25312c9b
	100	[7247]	GETGLOBAL	R4 K4 ; R4 := 0xae91e43b
	101	[7247]	GETTABLE 	R5 R1 K19 ; R5 := R1["clipName"]
	102	[7247]	LOADK    	R6 K29 ; R6 := ".Node.Container.Node"
	103	[7247]	CONCAT   	R5 R5 R6 ; R5 := R5 .. R6
	104	[7247]	LOADK    	R6 := 0.000000
	105	[7247]	NEWTABLE 	R7 1 0 ; R7 := {}
	106	[7247]	LOADK    	R8 K31 ; R8 := "_alpha"
	107	[7247]	SETLIST  	R7 1 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
	108	[7247]	NEWTABLE 	R8 1 0 ; R8 := {}
	109	[7247]	LOADK    	R9 := 0.000000
	110	[7247]	SETLIST  	R8 1 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
	111	[7247]	LOADK    	R9 := 0.250000
	112	[7247]	CALL     	R3 7 1 ; R3(R4,R5,R6,R7,R8,R9)
	113	[7250]	GETGLOBAL	R3 K7 ; R3 := 0x34291f5c
	114	[7250]	GETTABLE 	R3 R3 K8 ; R3 := R3[0x781669d7]
	115	[7250]	CALL     	R3 1 2 ; R3 := R3()
	116	[7250]	TEST     	R3 1 ; if R3 then PC := 121
	117	[7250]	JMP      	121 ; PC := 121
	118	[7252]	GETUPVAL 	R3 U0 ; R3 := U0
	119	[7252]	GETTABLE 	R3 R3 K32 ; R3 := R3[0x64ac06bf]
	120	[7252]	CALL     	R3 1 1 ; R3()
	121	[7255]	GETTABLE 	R3 R1 K33 ; R3 := R1["IsHomeNode"]
	122	[7255]	TEST     	R3 0 ; if not R3 then PC := 132
	123	[7255]	JMP      	132 ; PC := 132
	124	[7255]	GETTABLE 	R3 R1 K34 ; R3 := R1["SeenTimer"]
	125	[7255]	EQ       	1 R3 K13 ; if R3 == nil then PC := 132
	126	[7255]	JMP      	132 ; PC := 132
	127	[7256]	GETUPVAL 	R3 U3 ; R3 := U3
	128	[7256]	SELF     	R3 R3 K35 ; R4 := R3; R3 := R3[0x775c858b]
	129	[7256]	GETTABLE 	R5 R1 K34 ; R5 := R1["SeenTimer"]
	130	[7256]	CALL     	R3 3 1 ; R3(R4,R5)
	131	[7257]	SETTABLE 	R1 K34 K13 ; R1["SeenTimer"] := nil
	132	[7260]	GETTABLE 	R3 R1 K36 ; R3 := R1["deco"]
	133	[7260]	EQ       	1 R3 K13 ; if R3 == nil then PC := 155
	134	[7260]	JMP      	155 ; PC := 155
	135	[7260]	GETGLOBAL	R3 K3 ; R3 := 0x7b998233
	136	[7260]	GETTABLE 	R4 R1 K36 ; R4 := R1["deco"]
	137	[7260]	GETTABLE 	R4 R4 K37 ; R4 := R4["mInstance"]
	138	[7260]	CALL     	R3 2 2 ; R3 := R3(R4)
	139	[7260]	TEST     	R3 1 ; if R3 then PC := 155
	140	[7260]	JMP      	155 ; PC := 155
	141	[7261]	GETGLOBAL	R3 K28 ; R3 := 0x25312c9b
	142	[7261]	GETGLOBAL	R4 K4 ; R4 := 0xae91e43b
	143	[7261]	GETTABLE 	R5 R1 K19 ; R5 := R1["clipName"]
	144	[7261]	LOADK    	R6 := 2.000000
	145	[7261]	NEWTABLE 	R7 1 0 ; R7 := {}
	146	[7266]	CLOSURE  	R8 0 ; R8 := closure(Function #1)
	147	[7266]	MOVE     	R0 R1 ; R0 := R1
	148	[7266]	GETUPVAL 	R0 U4 ; R0 := U4
	149	[7266]	SETLIST  	R7 1 1 ; R7[(1-1)*FPF+i] := R(7+i), 1 <= i <= 1
	150	[7266]	NEWTABLE 	R8 1 0 ; R8 := {}
	151	[7266]	LOADK    	R9 := 1.000000
	152	[7266]	SETLIST  	R8 1 1 ; R8[(1-1)*FPF+i] := R(8+i), 1 <= i <= 1
	153	[7266]	LOADK    	R9 K38 ; R9 := 0.200000
	154	[7261]	CALL     	R3 7 1 ; R3(R4,R5,R6,R7,R8,R9)
	155	[7269]	GETGLOBAL	R3 K3 ; R3 := 0x7b998233
	156	[7269]	GETUPVAL 	R4 U5 ; R4 := U5
	157	[7269]	GETTABLE 	R4 R4 K39 ; R4 := R4["JunctionTasks"]
	158	[7269]	CALL     	R3 2 2 ; R3 := R3(R4)
	159	[7269]	TEST     	R3 1 ; if R3 then PC := 169
	160	[7269]	JMP      	169 ; PC := 169
	161	[7270]	GETGLOBAL	R3 K40 ; R3 := _T
	162	[7270]	SETTABLE 	R3 K41 K13 ; R3["JunctionTasksUIRadialSector"] := nil
	163	[7271]	GETUPVAL 	R3 U5 ; R3 := U5
	164	[7271]	GETTABLE 	R3 R3 K39 ; R3 := R3["JunctionTasks"]
	165	[7271]	SELF     	R3 R3 K42 ; R4 := R3; R3 := R3[0x32302b4a]
	166	[7271]	CALL     	R3 2 1 ; R3(R4)
	167	[7272]	GETUPVAL 	R3 U5 ; R3 := U5
	168	[7272]	SETTABLE 	R3 K39 K13 ; R3["JunctionTasks"] := nil
	169	[7275]	RETURN   	R0 1 ; return 

function #149 <?:7277,7285> (17 instructions, 68 bytes at 000002111B1951D0)
0 params, 2 slots, 1 upvalue, 0 locals, 7 constants, 0 functions
	1	[7279]	GETGLOBAL	R0 K0 ; R0 := 0x34291f5c
	2	[7279]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x781669d7]
	3	[7279]	CALL     	R0 1 2 ; R0 := R0()
	4	[7279]	TEST     	R0 1 ; if R0 then PC := 11
	5	[7279]	JMP      	11 ; PC := 11
	6	[7280]	GETUPVAL 	R0 U0 ; R0 := U0
	7	[7280]	GETTABLE 	R0 R0 K2 ; R0 := R0[0x282ca791]
	8	[7280]	TAILCALL 	R0 1 0 ; R0,... := R0()
	9	[7280]	RETURN   	R0 0 ; return R0,... 
	10	[7280]	JMP      	17 ; PC := 17
	11	[7282]	GETUPVAL 	R0 U0 ; R0 := U0
	12	[7282]	GETUPVAL 	R1 U0 ; R1 := U0
	13	[7282]	GETTABLE 	R1 R1 K4 ; R1 := R1["HandleMenuClick"]
	14	[7282]	SETTABLE 	R0 K3 R1 ; R0["mHandleJunctionClick"] := R1
	15	[7283]	GETUPVAL 	R0 U0 ; R0 := U0
	16	[7283]	SETTABLE 	R0 K5 K6 ; R0["isLMBDown"] := true
	17	[7285]	RETURN   	R0 1 ; return 

function #150 <?:7287,7500> (794 instructions, 3176 bytes at 000002112064D9B0)
0 params, 37 slots, 21 upvalues, 0 locals, 120 constants, 0 functions
	1	[7288]	GETGLOBAL	R0 K0 ; R0 := mInputBlocked
	2	[7288]	TEST     	R0 1 ; if R0 then PC := 8
	3	[7288]	JMP      	8 ; PC := 8
	4	[7288]	GETUPVAL 	R0 U0 ; R0 := U0
	5	[7288]	GETTABLE 	R0 R0 K1 ; R0 := R0["DioOpen"]
	6	[7288]	TEST     	R0 0 ; if not R0 then PC := 10
	7	[7288]	JMP      	10 ; PC := 10
	8	[7289]	OP_LOADBOOL	R0 1 0 ; R0 := true
	9	[7289]	RETURN   	R0 2 ; return R0 
	10	[7292]	GETGLOBAL	R0 K2 ; R0 := 0xae91e43b
	11	[7292]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x91a24e4b]
	12	[7292]	LOADK    	R2 K4 ; R2 := "_root"
	13	[7292]	LOADK    	R3 := 25.000000
	14	[7292]	CALL     	R0 4 2 ; R0 := R0(R1,R2,R3)
	15	[7293]	GETGLOBAL	R1 K2 ; R1 := 0xae91e43b
	16	[7293]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x91a24e4b]
	17	[7293]	LOADK    	R3 K4 ; R3 := "_root"
	18	[7293]	LOADK    	R4 := 26.000000
	19	[7293]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	20	[7294]	LE       	0 R0 K5 ; if R0 > -1000.000000 then PC := 25
	21	[7294]	JMP      	25 ; PC := 25
	22	[7294]	LE       	0 R1 K5 ; if R1 > -1000.000000 then PC := 25
	23	[7294]	JMP      	25 ; PC := 25
	24	[7295]	RETURN   	R0 1 ; return 
	25	[7298]	GETGLOBAL	R2 K6 ; R2 := _T
	26	[7298]	GETTABLE 	R2 R2 K7 ; R2 := R2["MouseInWorldStateWindow"]
	27	[7298]	TEST     	R2 1 ; if R2 then PC := 33
	28	[7298]	JMP      	33 ; PC := 33
	29	[7298]	GETGLOBAL	R2 K6 ; R2 := _T
	30	[7298]	GETTABLE 	R2 R2 K8 ; R2 := R2["MouseInChatArea"]
	31	[7298]	TEST     	R2 0 ; if not R2 then PC := 34
	32	[7298]	JMP      	34 ; PC := 34
	33	[7299]	RETURN   	R0 1 ; return 
	34	[7302]	GETGLOBAL	R2 K6 ; R2 := _T
	35	[7302]	GETTABLE 	R2 R2 K9 ; R2 := R2["AcceptInvitePanel"]
	36	[7302]	EQ       	1 R2 K10 ; if R2 == nil then PC := 47
	37	[7302]	JMP      	47 ; PC := 47
	38	[7302]	GETGLOBAL	R2 K6 ; R2 := _T
	39	[7302]	GETTABLE 	R2 R2 K9 ; R2 := R2["AcceptInvitePanel"]
	40	[7302]	SELF     	R2 R2 K11 ; R3 := R2; R2 := R2[0xe4162eed]
	41	[7302]	LOADK    	R4 K12 ; R4 := "HasFocus"
	42	[7302]	LOADK    	R5 K13 ; R5 := ""
	43	[7302]	CALL     	R2 4 2 ; R2 := R2(R3,R4,R5)
	44	[7302]	TEST     	R2 0 ; if not R2 then PC := 47
	45	[7302]	JMP      	47 ; PC := 47
	46	[7303]	RETURN   	R0 1 ; return 
	47	[7306]	GETGLOBAL	R2 K6 ; R2 := _T
	48	[7306]	GETTABLE 	R2 R2 K14 ; R2 := R2["TopMenuOpen"]
	49	[7306]	TEST     	R2 0 ; if not R2 then PC := 52
	50	[7306]	JMP      	52 ; PC := 52
	51	[7307]	RETURN   	R0 1 ; return 
	52	[7310]	GETGLOBAL	R2 K15 ; R2 := 0xa94df70b
	53	[7310]	SELF     	R2 R2 K16 ; R3 := R2; R2 := R2[0xf87f9433]
	54	[7310]	CALL     	R2 2 2 ; R2 := R2(R3)
	55	[7310]	TEST     	R2 1 ; if R2 then PC := 68
	56	[7310]	JMP      	68 ; PC := 68
	57	[7310]	GETGLOBAL	R2 K17 ; R2 := mRailJack
	58	[7310]	GETTABLE 	R2 R2 K18 ; R2 := R2["Active"]
	59	[7310]	TEST     	R2 0 ; if not R2 then PC := 158
	60	[7310]	JMP      	158 ; PC := 158
	61	[7310]	GETGLOBAL	R2 K19 ; R2 := 0x14459a1c
	62	[7310]	TEST     	R2 0 ; if not R2 then PC := 158
	63	[7310]	JMP      	158 ; PC := 158
	64	[7310]	GETGLOBAL	R2 K20 ; R2 := mHover
	65	[7310]	GETTABLE 	R2 R2 K21 ; R2 := R2["Node"]
	66	[7310]	TEST     	R2 0 ; if not R2 then PC := 158
	67	[7310]	JMP      	158 ; PC := 158
	68	[7311]	GETGLOBAL	R2 K17 ; R2 := mRailJack
	69	[7311]	GETTABLE 	R2 R2 K18 ; R2 := R2["Active"]
	70	[7311]	TEST     	R2 0 ; if not R2 then PC := 109
	71	[7311]	JMP      	109 ; PC := 109
	72	[7313]	GETGLOBAL	R2 K20 ; R2 := mHover
	73	[7313]	GETTABLE 	R2 R2 K22 ; R2 := R2["Region"]
	74	[7313]	EQ       	1 R2 K10 ; if R2 == nil then PC := 84
	75	[7313]	JMP      	84 ; PC := 84
	76	[7313]	GETGLOBAL	R2 K20 ; R2 := mHover
	77	[7313]	GETTABLE 	R2 R2 K22 ; R2 := R2["Region"]
	78	[7313]	GETGLOBAL	R3 K23 ; R3 := mRegions
	79	[7313]	GETUPVAL 	R4 U1 ; R4 := U1
	80	[7313]	GETTABLE 	R4 R4 K24 ; R4 := R4["REGION_ID_DOJO"]
	81	[7313]	GETTABLE 	R3 R3 R4 ; R3 := R3[R4]
	82	[7313]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 108
	83	[7313]	JMP      	108 ; PC := 108
	84	[7314]	GETGLOBAL	R2 K20 ; R2 := mHover
	85	[7314]	GETTABLE 	R2 R2 K21 ; R2 := R2["Node"]
	86	[7314]	TEST     	R2 0 ; if not R2 then PC := 109
	87	[7314]	JMP      	109 ; PC := 109
	88	[7314]	GETGLOBAL	R2 K20 ; R2 := mHover
	89	[7314]	GETTABLE 	R2 R2 K21 ; R2 := R2["Node"]
	90	[7314]	GETTABLE 	R2 R2 K25 ; R2 := R2["radialSector"]
	91	[7314]	TEST     	R2 0 ; if not R2 then PC := 109
	92	[7314]	JMP      	109 ; PC := 109
	93	[7316]	GETGLOBAL	R2 K20 ; R2 := mHover
	94	[7316]	GETTABLE 	R2 R2 K21 ; R2 := R2["Node"]
	95	[7316]	GETTABLE 	R2 R2 K25 ; R2 := R2["radialSector"]
	96	[7316]	GETTABLE 	R2 R2 K26 ; R2 := R2["region"]
	97	[7316]	GETUPVAL 	R3 U1 ; R3 := U1
	98	[7316]	GETTABLE 	R3 R3 K24 ; R3 := R3["REGION_ID_DOJO"]
	99	[7316]	EQ       	1 R2 R3 ; if R2 == R3 then PC := 108
	100	[7316]	JMP      	108 ; PC := 108
	101	[7317]	GETUPVAL 	R2 U2 ; R2 := U2
	102	[7317]	GETGLOBAL	R3 K20 ; R3 := mHover
	103	[7317]	GETTABLE 	R3 R3 K21 ; R3 := R3["Node"]
	104	[7317]	GETTABLE 	R3 R3 K25 ; R3 := R3["radialSector"]
	105	[7317]	CALL     	R2 2 2 ; R2 := R2(R3)
	106	[7319]	JMP      	109 ; PC := 109
	107	[7319]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 108
	108	[7319]	OP_LOADBOOL	R2 1 0 ; R2 := true
	109	[7321]	TEST     	R2 1 ; if R2 then PC := 133
	110	[7321]	JMP      	133 ; PC := 133
	111	[7321]	GETGLOBAL	R3 K17 ; R3 := mRailJack
	112	[7321]	GETTABLE 	R3 R3 K18 ; R3 := R3["Active"]
	113	[7321]	TEST     	R3 0 ; if not R3 then PC := 133
	114	[7321]	JMP      	133 ; PC := 133
	115	[7323]	GETGLOBAL	R3 K20 ; R3 := mHover
	116	[7323]	GETTABLE 	R3 R3 K21 ; R3 := R3["Node"]
	117	[7323]	TEST     	R3 0 ; if not R3 then PC := 132
	118	[7323]	JMP      	132 ; PC := 132
	119	[7324]	GETGLOBAL	R3 K20 ; R3 := mHover
	120	[7324]	GETTABLE 	R3 R3 K21 ; R3 := R3["Node"]
	121	[7324]	GETTABLE 	R3 R3 K25 ; R3 := R3["radialSector"]
	122	[7324]	TEST     	R3 0 ; if not R3 then PC := 133
	123	[7324]	JMP      	133 ; PC := 133
	124	[7324]	GETGLOBAL	R3 K20 ; R3 := mHover
	125	[7324]	GETTABLE 	R3 R3 K21 ; R3 := R3["Node"]
	126	[7324]	GETTABLE 	R3 R3 K25 ; R3 := R3["radialSector"]
	127	[7324]	GETTABLE 	R3 R3 K27 ; R3 := R3["missionTag"]
	128	[7324]	GETUPVAL 	R4 U3 ; R4 := U3
	129	[7324]	GETTABLE 	R4 R4 K28 ; R4 := R4["SQUAD_LINK_EVENT"]
	130	[7324]	EQ       	0 R3 R4 ; if R3 ~= R4 then PC := 133
	131	[7324]	JMP      	133 ; PC := 133
	132	[7327]	OP_LOADBOOL	R2 1 0 ; R2 := true
	133	[7330]	TEST     	R2 1 ; if R2 then PC := 158
	134	[7330]	JMP      	158 ; PC := 158
	135	[7331]	LOADNIL  	R3 R3 ; R3 := nil
	136	[7332]	GETGLOBAL	R4 K17 ; R4 := mRailJack
	137	[7332]	GETTABLE 	R4 R4 K18 ; R4 := R4["Active"]
	138	[7332]	TEST     	R4 0 ; if not R4 then PC := 148
	139	[7332]	JMP      	148 ; PC := 148
	140	[7333]	GETUPVAL 	R4 U4 ; R4 := U4
	141	[7333]	GETTABLE 	R4 R4 K29 ; R4 := R4[0x06d055f9]
	142	[7333]	GETGLOBAL	R5 K19 ; R5 := 0x14459a1c
	143	[7333]	LOADK    	R6 K30 ; R6 := "/Lotus/Language/Menu/HostMigrationMissionsBlocked"
	144	[7333]	LOADK    	R7 K31 ; R7 := "/Lotus/Language/Menu/MainMenu_NewBuildMissionsBlockedRailjack"
	145	[7333]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	146	[7333]	MOVE     	R3 R4 ; R3 := R4
	147	[7333]	JMP      	149 ; PC := 149
	148	[7335]	LOADK    	R3 K32 ; R3 := "/Lotus/Language/Menu/MainMenu_NewBuildMissionsBlocked"
	149	[7337]	GETUPVAL 	R4 U4 ; R4 := U4
	150	[7337]	GETTABLE 	R4 R4 K33 ; R4 := R4[0xe0cba3ca]
	151	[7337]	GETGLOBAL	R5 K2 ; R5 := 0xae91e43b
	152	[7337]	SELF     	R5 R5 K34 ; R6 := R5; R5 := R5[0x42b04007]
	153	[7337]	MOVE     	R7 R3 ; R7 := R3
	154	[7337]	OP_LOADBOOL	R8 0 0 ; R8 := false
	155	[7337]	CALL     	R5 4 0 ; R5,... := R5(R6,R7,R8)
	156	[7337]	CALL     	R4 0 1 ; R4(R5,...)
	157	[7338]	RETURN   	R0 1 ; return 
	158	[7342]	GETGLOBAL	R4 K35 ; R4 := 0x34291f5c
	159	[7342]	GETTABLE 	R4 R4 K36 ; R4 := R4[0x1467d5f4]
	160	[7342]	CALL     	R4 1 2 ; R4 := R4()
	161	[7342]	TEST     	R4 0 ; if not R4 then PC := 178
	162	[7342]	JMP      	178 ; PC := 178
	163	[7342]	GETGLOBAL	R4 K37 ; R4 := 0x7b998233
	164	[7342]	GETGLOBAL	R5 K6 ; R5 := _T
	165	[7342]	GETTABLE 	R5 R5 K38 ; R5 := R5["SquadOverlay"]
	166	[7342]	CALL     	R4 2 2 ; R4 := R4(R5)
	167	[7342]	TEST     	R4 1 ; if R4 then PC := 178
	168	[7342]	JMP      	178 ; PC := 178
	169	[7343]	GETGLOBAL	R4 K6 ; R4 := _T
	170	[7343]	GETTABLE 	R4 R4 K38 ; R4 := R4["SquadOverlay"]
	171	[7343]	SELF     	R4 R4 K11 ; R5 := R4; R4 := R4[0xe4162eed]
	172	[7343]	LOADK    	R6 K39 ; R6 := "MatchmakingFocused"
	173	[7343]	LOADK    	R7 K13 ; R7 := ""
	174	[7343]	CALL     	R4 4 2 ; R4 := R4(R5,R6,R7)
	175	[7343]	TEST     	R4 0 ; if not R4 then PC := 178
	176	[7343]	JMP      	178 ; PC := 178
	177	[7344]	RETURN   	R0 1 ; return 
	178	[7348]	GETGLOBAL	R4 K35 ; R4 := 0x34291f5c
	179	[7348]	GETTABLE 	R4 R4 K40 ; R4 := R4[0x781669d7]
	180	[7348]	CALL     	R4 1 2 ; R4 := R4()
	181	[7348]	TEST     	R4 0 ; if not R4 then PC := 277
	182	[7348]	JMP      	277 ; PC := 277
	183	[7350]	GETGLOBAL	R4 K37 ; R4 := 0x7b998233
	184	[7350]	GETUPVAL 	R5 U5 ; R5 := U5
	185	[7350]	GETTABLE 	R5 R5 K41 ; R5 := R5["JunctionTasks"]
	186	[7350]	CALL     	R4 2 2 ; R4 := R4(R5)
	187	[7350]	TEST     	R4 1 ; if R4 then PC := 212
	188	[7350]	JMP      	212 ; PC := 212
	189	[7352]	GETUPVAL 	R4 U4 ; R4 := U4
	190	[7352]	GETTABLE 	R4 R4 K42 ; R4 := R4[0x6d7e6810]
	191	[7352]	GETGLOBAL	R5 K2 ; R5 := 0xae91e43b
	192	[7352]	NEWTABLE 	R6 0 2 ; R6 := {}
	193	[7352]	SETTABLE 	R6 K43 R0 ; R6["x"] := R0
	194	[7352]	SETTABLE 	R6 K44 R1 ; R6["y"] := R1
	195	[7352]	CALL     	R4 3 2 ; R4 := R4(R5,R6)
	196	[7353]	GETUPVAL 	R5 U5 ; R5 := U5
	197	[7353]	GETTABLE 	R5 R5 K41 ; R5 := R5["JunctionTasks"]
	198	[7353]	SELF     	R5 R5 K11 ; R6 := R5; R5 := R5[0xe4162eed]
	199	[7353]	LOADK    	R7 K45 ; R7 := "StartDrag"
	200	[7353]	GETTABLE 	R8 R4 K43 ; R8 := R4["x"]
	201	[7353]	LOADK    	R9 K46 ; R9 := ", "
	202	[7353]	GETTABLE 	R10 R4 K44 ; R10 := R4["y"]
	203	[7353]	CONCAT   	R8 R8 R10 ; R8 := R8 .. R9 .. R10
	204	[7353]	CALL     	R5 4 2 ; R5 := R5(R6,R7,R8)
	205	[7353]	TEST     	R5 0 ; if not R5 then PC := 212
	206	[7353]	JMP      	212 ; PC := 212
	207	[7354]	GETUPVAL 	R5 U6 ; R5 := U6
	208	[7354]	SETTABLE 	R5 K47 K48 ; R5["JunctionDrag"] := true
	209	[7355]	GETUPVAL 	R5 U6 ; R5 := U6
	210	[7355]	SETTABLE 	R5 K49 K50 ; R5["isLMBDown"] := false
	211	[7356]	RETURN   	R0 1 ; return 
	212	[7360]	OP_LOADBOOL	R5 0 0 ; R5 := false
	213	[7362]	GETGLOBAL	R6 K37 ; R6 := 0x7b998233
	214	[7362]	GETUPVAL 	R7 U6 ; R7 := U6
	215	[7362]	GETTABLE 	R7 R7 K51 ; R7 := R7["TooltipNode"]
	216	[7362]	CALL     	R6 2 2 ; R6 := R6(R7)
	217	[7362]	TEST     	R6 1 ; if R6 then PC := 263
	218	[7362]	JMP      	263 ; PC := 263
	219	[7363]	GETGLOBAL	R6 K2 ; R6 := 0xae91e43b
	220	[7363]	SELF     	R6 R6 K52 ; R7 := R6; R6 := R6[0xb052d775]
	221	[7363]	GETUPVAL 	R8 U6 ; R8 := U6
	222	[7363]	GETTABLE 	R8 R8 K51 ; R8 := R8["TooltipNode"]
	223	[7363]	GETTABLE 	R8 R8 K53 ; R8 := R8["memberIndex"]
	224	[7363]	LOADK    	R9 := 12.000000
	225	[7363]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	226	[7364]	GETGLOBAL	R7 K2 ; R7 := 0xae91e43b
	227	[7364]	SELF     	R7 R7 K52 ; R8 := R7; R7 := R7[0xb052d775]
	228	[7364]	GETUPVAL 	R9 U6 ; R9 := U6
	229	[7364]	GETTABLE 	R9 R9 K51 ; R9 := R9["TooltipNode"]
	230	[7364]	GETTABLE 	R9 R9 K53 ; R9 := R9["memberIndex"]
	231	[7364]	LOADK    	R10 := 13.000000
	232	[7364]	CALL     	R7 4 2 ; R7 := R7(R8,R9,R10)
	233	[7365]	GETGLOBAL	R8 K2 ; R8 := 0xae91e43b
	234	[7365]	SELF     	R8 R8 K52 ; R9 := R8; R8 := R8[0xb052d775]
	235	[7365]	GETUPVAL 	R10 U6 ; R10 := U6
	236	[7365]	GETTABLE 	R10 R10 K51 ; R10 := R10["TooltipNode"]
	237	[7365]	GETTABLE 	R10 R10 K53 ; R10 := R10["memberIndex"]
	238	[7365]	LOADK    	R11 := 0.000000
	239	[7365]	CALL     	R8 4 2 ; R8 := R8(R9,R10,R11)
	240	[7365]	DIV      	R9 R6 K54 ; R9 := R6 / 2.000000
	241	[7365]	SUB      	R8 R8 R9 ; R8 := R8 - R9
	242	[7366]	GETGLOBAL	R9 K2 ; R9 := 0xae91e43b
	243	[7366]	SELF     	R9 R9 K52 ; R10 := R9; R9 := R9[0xb052d775]
	244	[7366]	GETUPVAL 	R11 U6 ; R11 := U6
	245	[7366]	GETTABLE 	R11 R11 K51 ; R11 := R11["TooltipNode"]
	246	[7366]	GETTABLE 	R11 R11 K53 ; R11 := R11["memberIndex"]
	247	[7366]	LOADK    	R12 := 1.000000
	248	[7366]	CALL     	R9 4 2 ; R9 := R9(R10,R11,R12)
	249	[7366]	DIV      	R10 R7 K54 ; R10 := R7 / 2.000000
	250	[7366]	SUB      	R9 R9 R10 ; R9 := R9 - R10
	251	[7367]	LT       	0 R8 R0 ; if R8 >= R0 then PC := 261
	252	[7367]	JMP      	261 ; PC := 261
	253	[7367]	ADD      	R10 R8 R6 ; R10 := R8 + R6
	254	[7367]	LT       	0 R0 R10 ; if R0 >= R10 then PC := 261
	255	[7367]	JMP      	261 ; PC := 261
	256	[7367]	LT       	0 R9 R1 ; if R9 >= R1 then PC := 261
	257	[7367]	JMP      	261 ; PC := 261
	258	[7367]	ADD      	R10 R9 R7 ; R10 := R9 + R7
	259	[7367]	LT       	1 R1 R10 ; if R1 < R10 then PC := 262
	260	[7367]	JMP      	262 ; PC := 262
	261	[7367]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 262
	262	[7367]	OP_LOADBOOL	R5 1 0 ; R5 := true
	263	[7370]	GETUPVAL 	R10 U6 ; R10 := U6
	264	[7370]	GETTABLE 	R10 R10 K55 ; R10 := R10["mNodeVisible"]
	265	[7370]	TEST     	R10 0 ; if not R10 then PC := 277
	266	[7370]	JMP      	277 ; PC := 277
	267	[7370]	LT       	0 R1 K56 ; if R1 >= 780.000000 then PC := 277
	268	[7370]	JMP      	277 ; PC := 277
	269	[7370]	TEST     	R5 1 ; if R5 then PC := 277
	270	[7370]	JMP      	277 ; PC := 277
	271	[7371]	GETUPVAL 	R10 U6 ; R10 := U6
	272	[7371]	GETTABLE 	R10 R10 K57 ; R10 := R10[0x64ac06bf]
	273	[7371]	CALL     	R10 1 1 ; R10()
	274	[7372]	GETUPVAL 	R10 U7 ; R10 := U7
	275	[7372]	CALL     	R10 1 1 ; R10()
	276	[7373]	RETURN   	R0 1 ; return 
	277	[7377]	GETUPVAL 	R10 U8 ; R10 := U8
	278	[7377]	GETUPVAL 	R11 U9 ; R11 := U9
	279	[7377]	GETTABLE 	R11 R11 K58 ; R11 := R11["EDIT_REGIONS"]
	280	[7377]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 351
	281	[7377]	JMP      	351 ; PC := 351
	282	[7377]	GETGLOBAL	R10 K37 ; R10 := 0x7b998233
	283	[7377]	GETGLOBAL	R11 K20 ; R11 := mHover
	284	[7377]	GETTABLE 	R11 R11 K22 ; R11 := R11["Region"]
	285	[7377]	CALL     	R10 2 2 ; R10 := R10(R11)
	286	[7377]	TEST     	R10 1 ; if R10 then PC := 351
	287	[7377]	JMP      	351 ; PC := 351
	288	[7378]	GETUPVAL 	R10 U10 ; R10 := U10
	289	[7378]	GETGLOBAL	R11 K20 ; R11 := mHover
	290	[7378]	GETTABLE 	R11 R11 K22 ; R11 := R11["Region"]
	291	[7378]	SETTABLE 	R10 K59 R11 ; R10["mMovingRegion"] := R11
	292	[7379]	GETUPVAL 	R10 U10 ; R10 := U10
	293	[7379]	GETGLOBAL	R11 K20 ; R11 := mHover
	294	[7379]	GETTABLE 	R11 R11 K22 ; R11 := R11["Region"]
	295	[7379]	GETTABLE 	R11 R11 K61 ; R11 := R11["instance"]
	296	[7379]	SELF     	R11 R11 K62 ; R12 := R11; R11 := R11[0xd1586535]
	297	[7379]	CALL     	R11 2 2 ; R11 := R11(R12)
	298	[7379]	SETTABLE 	R10 K60 R11 ; R10["mInitialPosition"] := R11
	299	[7380]	GETUPVAL 	R10 U10 ; R10 := U10
	300	[7380]	GETUPVAL 	R11 U11 ; R11 := U11
	301	[7380]	CALL     	R11 1 2 ; R11 := R11()
	302	[7380]	SETTABLE 	R10 K63 R11 ; R10["mInitialWorldCursor"] := R11
	303	[7382]	LOADNIL  	R10 R10 ; R10 := nil
	304	[7383]	GETGLOBAL	R11 K64 ; R11 := 0xc8802016
	305	[7383]	GETGLOBAL	R12 K23 ; R12 := mRegions
	306	[7383]	CALL     	R11 2 4 ; R11,R12,R13 := R11(R12)
	307	[7383]	JMP      	314 ; PC := 314
	308	[7384]	GETGLOBAL	R16 K20 ; R16 := mHover
	309	[7384]	GETTABLE 	R16 R16 K22 ; R16 := R16["Region"]
	310	[7384]	EQ       	0 R16 R15 ; if R16 ~= R15 then PC := 314
	311	[7384]	JMP      	314 ; PC := 314
	312	[7385]	SUB      	R10 R14 K65 ; R10 := R14 - 1.000000
	313	[7386]	JMP      	316 ; PC := 316
	314	[7383]	TFORLOOP 	R11 2 ; R14,R15 := R11(R12,R13); if R14 ~= nil then begin PC = 308; R13 := R14 end
	315	[7387]	JMP      	308 ; PC := 308
	316	[7390]	GETGLOBAL	R16 K37 ; R16 := 0x7b998233
	317	[7390]	MOVE     	R17 R10 ; R17 := R10
	318	[7390]	CALL     	R16 2 2 ; R16 := R16(R17)
	319	[7390]	TEST     	R16 1 ; if R16 then PC := 792
	320	[7390]	JMP      	792 ; PC := 792
	321	[7391]	GETUPVAL 	R16 U10 ; R16 := U10
	322	[7391]	NEWTABLE 	R17 0 0 ; R17 := {}
	323	[7391]	SETTABLE 	R16 K66 R17 ; R16["mChildNodes"] := R17
	324	[7392]	GETGLOBAL	R16 K64 ; R16 := 0xc8802016
	325	[7392]	GETUPVAL 	R17 U12 ; R17 := U12
	326	[7392]	CALL     	R16 2 4 ; R16,R17,R18 := R16(R17)
	327	[7392]	JMP      	348 ; PC := 348
	328	[7393]	GETTABLE 	R21 R20 K25 ; R21 := R20["radialSector"]
	329	[7393]	GETTABLE 	R21 R21 K26 ; R21 := R21["region"]
	330	[7393]	EQ       	0 R21 R10 ; if R21 ~= R10 then PC := 348
	331	[7393]	JMP      	348 ; PC := 348
	332	[7394]	GETGLOBAL	R21 K67 ; R21 := 0x33bdd652
	333	[7394]	GETTABLE 	R21 R21 K68 ; R21 := R21[0x23d5322f]
	334	[7394]	GETUPVAL 	R22 U10 ; R22 := U10
	335	[7394]	GETTABLE 	R22 R22 K66 ; R22 := R22["mChildNodes"]
	336	[7394]	NEWTABLE 	R23 0 2 ; R23 := {}
	337	[7394]	SETTABLE 	R23 K69 R19 ; R23["NodeIndex"] := R19
	338	[7394]	GETGLOBAL	R24 K71 ; R24 := 0xa421af95
	339	[7394]	GETTABLE 	R25 R20 K72 ; R25 := R20["position"]
	340	[7394]	GETTABLE 	R25 R25 K43 ; R25 := R25["x"]
	341	[7394]	GETTABLE 	R26 R20 K72 ; R26 := R20["position"]
	342	[7394]	GETTABLE 	R26 R26 K44 ; R26 := R26["y"]
	343	[7394]	GETTABLE 	R27 R20 K72 ; R27 := R20["position"]
	344	[7394]	GETTABLE 	R27 R27 K73 ; R27 := R27["z"]
	345	[7394]	CALL     	R24 4 2 ; R24 := R24(R25,R26,R27)
	346	[7394]	SETTABLE 	R23 K70 R24 ; R23["InitialPosition"] := R24
	347	[7394]	CALL     	R21 3 1 ; R21(R22,R23)
	348	[7392]	TFORLOOP 	R16 2 ; R19,R20 := R16(R17,R18); if R19 ~= nil then begin PC = 328; R18 := R19 end
	349	[7395]	JMP      	328 ; PC := 328
	350	[7397]	JMP      	792 ; PC := 792
	351	[7398]	GETUPVAL 	R21 U8 ; R21 := U8
	352	[7398]	GETUPVAL 	R22 U9 ; R22 := U9
	353	[7398]	GETTABLE 	R22 R22 K74 ; R22 := R22["EDIT_NODES"]
	354	[7398]	EQ       	0 R21 R22 ; if R21 ~= R22 then PC := 393
	355	[7398]	JMP      	393 ; PC := 393
	356	[7398]	GETGLOBAL	R21 K37 ; R21 := 0x7b998233
	357	[7398]	GETGLOBAL	R22 K20 ; R22 := mHover
	358	[7398]	GETTABLE 	R22 R22 K21 ; R22 := R22["Node"]
	359	[7398]	CALL     	R21 2 2 ; R21 := R21(R22)
	360	[7398]	TEST     	R21 1 ; if R21 then PC := 393
	361	[7398]	JMP      	393 ; PC := 393
	362	[7399]	GETUPVAL 	R21 U10 ; R21 := U10
	363	[7399]	GETGLOBAL	R22 K20 ; R22 := mHover
	364	[7399]	GETTABLE 	R22 R22 K21 ; R22 := R22["Node"]
	365	[7399]	SETTABLE 	R21 K75 R22 ; R21[0x8010002a] := R22
	366	[7400]	GETUPVAL 	R21 U10 ; R21 := U10
	367	[7400]	GETGLOBAL	R22 K71 ; R22 := 0xa421af95
	368	[7400]	GETGLOBAL	R23 K20 ; R23 := mHover
	369	[7400]	GETTABLE 	R23 R23 K21 ; R23 := R23["Node"]
	370	[7400]	GETTABLE 	R23 R23 K72 ; R23 := R23["position"]
	371	[7400]	GETTABLE 	R23 R23 K43 ; R23 := R23["x"]
	372	[7400]	GETGLOBAL	R24 K20 ; R24 := mHover
	373	[7400]	GETTABLE 	R24 R24 K21 ; R24 := R24["Node"]
	374	[7400]	GETTABLE 	R24 R24 K72 ; R24 := R24["position"]
	375	[7400]	GETTABLE 	R24 R24 K44 ; R24 := R24["y"]
	376	[7400]	GETGLOBAL	R25 K20 ; R25 := mHover
	377	[7400]	GETTABLE 	R25 R25 K21 ; R25 := R25["Node"]
	378	[7400]	GETTABLE 	R25 R25 K72 ; R25 := R25["position"]
	379	[7400]	GETTABLE 	R25 R25 K73 ; R25 := R25["z"]
	380	[7400]	CALL     	R22 4 2 ; R22 := R22(R23,R24,R25)
	381	[7400]	SETTABLE 	R21 K60 R22 ; R21["mInitialPosition"] := R22
	382	[7401]	GETUPVAL 	R21 U10 ; R21 := U10
	383	[7401]	GETUPVAL 	R22 U11 ; R22 := U11
	384	[7401]	CALL     	R22 1 2 ; R22 := R22()
	385	[7401]	SETTABLE 	R21 K63 R22 ; R21["mInitialWorldCursor"] := R22
	386	[7402]	GETUPVAL 	R21 U10 ; R21 := U10
	387	[7402]	GETUPVAL 	R22 U4 ; R22 := U4
	388	[7402]	GETTABLE 	R22 R22 K77 ; R22 := R22[0xfa9785e4]
	389	[7402]	GETGLOBAL	R23 K2 ; R23 := 0xae91e43b
	390	[7402]	CALL     	R22 2 2 ; R22 := R22(R23)
	391	[7402]	SETTABLE 	R21 K76 R22 ; R21["mInitialMousePosition"] := R22
	392	[7402]	JMP      	792 ; PC := 792
	393	[7403]	GETUPVAL 	R21 U8 ; R21 := U8
	394	[7403]	GETUPVAL 	R22 U9 ; R22 := U9
	395	[7403]	GETTABLE 	R22 R22 K78 ; R22 := R22["EDIT_EDGES"]
	396	[7403]	EQ       	0 R21 R22 ; if R21 ~= R22 then PC := 474
	397	[7403]	JMP      	474 ; PC := 474
	398	[7404]	GETGLOBAL	R21 K37 ; R21 := 0x7b998233
	399	[7404]	GETGLOBAL	R22 K20 ; R22 := mHover
	400	[7404]	GETTABLE 	R22 R22 K21 ; R22 := R22["Node"]
	401	[7404]	CALL     	R21 2 2 ; R21 := R21(R22)
	402	[7404]	TEST     	R21 0 ; if not R21 then PC := 409
	403	[7404]	JMP      	409 ; PC := 409
	404	[7405]	GETUPVAL 	R21 U10 ; R21 := U10
	405	[7405]	SETTABLE 	R21 K79 K10 ; R21["mEdgeNode1"] := nil
	406	[7406]	GETUPVAL 	R21 U10 ; R21 := U10
	407	[7406]	SETTABLE 	R21 K80 K10 ; R21["mEdgeNode2"] := nil
	408	[7406]	JMP      	466 ; PC := 466
	409	[7408]	GETGLOBAL	R21 K37 ; R21 := 0x7b998233
	410	[7408]	GETUPVAL 	R22 U10 ; R22 := U10
	411	[7408]	GETTABLE 	R22 R22 K79 ; R22 := R22["mEdgeNode1"]
	412	[7408]	CALL     	R21 2 2 ; R21 := R21(R22)
	413	[7408]	TEST     	R21 1 ; if R21 then PC := 423
	414	[7408]	JMP      	423 ; PC := 423
	415	[7408]	GETUPVAL 	R21 U13 ; R21 := U13
	416	[7408]	GETTABLE 	R21 R21 K81 ; R21 := R21["mControlDown"]
	417	[7408]	TEST     	R21 1 ; if R21 then PC := 428
	418	[7408]	JMP      	428 ; PC := 428
	419	[7408]	GETUPVAL 	R21 U13 ; R21 := U13
	420	[7408]	GETTABLE 	R21 R21 K82 ; R21 := R21["mShiftDown"]
	421	[7408]	TEST     	R21 1 ; if R21 then PC := 428
	422	[7408]	JMP      	428 ; PC := 428
	423	[7409]	GETUPVAL 	R21 U10 ; R21 := U10
	424	[7409]	GETGLOBAL	R22 K20 ; R22 := mHover
	425	[7409]	GETTABLE 	R22 R22 K21 ; R22 := R22["Node"]
	426	[7409]	SETTABLE 	R21 K79 R22 ; R21["mEdgeNode1"] := R22
	427	[7409]	JMP      	440 ; PC := 440
	428	[7410]	GETGLOBAL	R21 K20 ; R21 := mHover
	429	[7410]	GETTABLE 	R21 R21 K21 ; R21 := R21["Node"]
	430	[7410]	GETTABLE 	R21 R21 K83 ; R21 := R21["name"]
	431	[7410]	GETUPVAL 	R22 U10 ; R22 := U10
	432	[7410]	GETTABLE 	R22 R22 K79 ; R22 := R22["mEdgeNode1"]
	433	[7410]	GETTABLE 	R22 R22 K83 ; R22 := R22["name"]
	434	[7410]	EQ       	1 R21 R22 ; if R21 == R22 then PC := 440
	435	[7410]	JMP      	440 ; PC := 440
	436	[7411]	GETUPVAL 	R21 U10 ; R21 := U10
	437	[7411]	GETGLOBAL	R22 K20 ; R22 := mHover
	438	[7411]	GETTABLE 	R22 R22 K21 ; R22 := R22["Node"]
	439	[7411]	SETTABLE 	R21 K80 R22 ; R21["mEdgeNode2"] := R22
	440	[7413]	GETUPVAL 	R21 U10 ; R21 := U10
	441	[7413]	GETGLOBAL	R22 K71 ; R22 := 0xa421af95
	442	[7413]	GETGLOBAL	R23 K20 ; R23 := mHover
	443	[7413]	GETTABLE 	R23 R23 K21 ; R23 := R23["Node"]
	444	[7413]	GETTABLE 	R23 R23 K72 ; R23 := R23["position"]
	445	[7413]	GETTABLE 	R23 R23 K43 ; R23 := R23["x"]
	446	[7413]	GETGLOBAL	R24 K20 ; R24 := mHover
	447	[7413]	GETTABLE 	R24 R24 K21 ; R24 := R24["Node"]
	448	[7413]	GETTABLE 	R24 R24 K72 ; R24 := R24["position"]
	449	[7413]	GETTABLE 	R24 R24 K44 ; R24 := R24["y"]
	450	[7413]	GETGLOBAL	R25 K20 ; R25 := mHover
	451	[7413]	GETTABLE 	R25 R25 K21 ; R25 := R25["Node"]
	452	[7413]	GETTABLE 	R25 R25 K72 ; R25 := R25["position"]
	453	[7413]	GETTABLE 	R25 R25 K73 ; R25 := R25["z"]
	454	[7413]	CALL     	R22 4 2 ; R22 := R22(R23,R24,R25)
	455	[7413]	SETTABLE 	R21 K60 R22 ; R21["mInitialPosition"] := R22
	456	[7414]	GETUPVAL 	R21 U10 ; R21 := U10
	457	[7414]	GETUPVAL 	R22 U11 ; R22 := U11
	458	[7414]	CALL     	R22 1 2 ; R22 := R22()
	459	[7414]	SETTABLE 	R21 K63 R22 ; R21["mInitialWorldCursor"] := R22
	460	[7415]	GETUPVAL 	R21 U10 ; R21 := U10
	461	[7415]	GETUPVAL 	R22 U4 ; R22 := U4
	462	[7415]	GETTABLE 	R22 R22 K77 ; R22 := R22[0xfa9785e4]
	463	[7415]	GETGLOBAL	R23 K2 ; R23 := 0xae91e43b
	464	[7415]	CALL     	R22 2 2 ; R22 := R22(R23)
	465	[7415]	SETTABLE 	R21 K76 R22 ; R21["mInitialMousePosition"] := R22
	466	[7417]	GETGLOBAL	R21 K2 ; R21 := 0xae91e43b
	467	[7417]	SELF     	R21 R21 K84 ; R22 := R21; R21 := R21[0x5f56eeab]
	468	[7417]	LOADK    	R23 K85 ; R23 := "ScreenModeLabel"
	469	[7417]	LOADK    	R24 := 29.000000
	470	[7417]	GETUPVAL 	R25 U14 ; R25 := U14
	471	[7417]	CALL     	R25 1 0 ; R25,... := R25()
	472	[7417]	CALL     	R21 0 1 ; R21(R22,...)
	473	[7417]	JMP      	792 ; PC := 792
	474	[7418]	GETUPVAL 	R21 U8 ; R21 := U8
	475	[7418]	GETUPVAL 	R22 U9 ; R22 := U9
	476	[7418]	GETTABLE 	R22 R22 K86 ; R22 := R22["EDIT_NODE_DECOS"]
	477	[7418]	EQ       	0 R21 R22 ; if R21 ~= R22 then PC := 590
	478	[7418]	JMP      	590 ; PC := 590
	479	[7418]	GETGLOBAL	R21 K37 ; R21 := 0x7b998233
	480	[7418]	GETGLOBAL	R22 K20 ; R22 := mHover
	481	[7418]	GETTABLE 	R22 R22 K21 ; R22 := R22["Node"]
	482	[7418]	CALL     	R21 2 2 ; R21 := R21(R22)
	483	[7418]	TEST     	R21 1 ; if R21 then PC := 590
	484	[7418]	JMP      	590 ; PC := 590
	485	[7419]	GETGLOBAL	R21 K20 ; R21 := mHover
	486	[7419]	GETTABLE 	R21 R21 K21 ; R21 := R21["Node"]
	487	[7419]	GETTABLE 	R21 R21 K87 ; R21 := R21["deco"]
	488	[7419]	EQ       	1 R21 K10 ; if R21 == nil then PC := 498
	489	[7419]	JMP      	498 ; PC := 498
	490	[7419]	GETGLOBAL	R21 K37 ; R21 := 0x7b998233
	491	[7419]	GETGLOBAL	R22 K20 ; R22 := mHover
	492	[7419]	GETTABLE 	R22 R22 K21 ; R22 := R22["Node"]
	493	[7419]	GETTABLE 	R22 R22 K87 ; R22 := R22["deco"]
	494	[7419]	GETTABLE 	R22 R22 K88 ; R22 := R22["mInstance"]
	495	[7419]	CALL     	R21 2 2 ; R21 := R21(R22)
	496	[7419]	TEST     	R21 0 ; if not R21 then PC := 499
	497	[7419]	JMP      	499 ; PC := 499
	498	[7420]	RETURN   	R0 1 ; return 
	499	[7422]	GETUPVAL 	R21 U10 ; R21 := U10
	500	[7422]	GETGLOBAL	R22 K20 ; R22 := mHover
	501	[7422]	GETTABLE 	R22 R22 K21 ; R22 := R22["Node"]
	502	[7422]	SETTABLE 	R21 K75 R22 ; R21[0x8010002a] := R22
	503	[7424]	GETUPVAL 	R21 U10 ; R21 := U10
	504	[7424]	SETTABLE 	R21 K89 K50 ; R21["mEditingOffset"] := false
	505	[7425]	GETUPVAL 	R21 U10 ; R21 := U10
	506	[7425]	SETTABLE 	R21 K90 K50 ; R21["mEditingRotation"] := false
	507	[7426]	GETUPVAL 	R21 U10 ; R21 := U10
	508	[7426]	SETTABLE 	R21 K91 K50 ; R21["mEditingScale"] := false
	509	[7428]	GETUPVAL 	R21 U13 ; R21 := U13
	510	[7428]	GETTABLE 	R21 R21 K92 ; R21 := R21["mAltDown"]
	511	[7428]	TEST     	R21 0 ; if not R21 then PC := 528
	512	[7428]	JMP      	528 ; PC := 528
	513	[7429]	GETUPVAL 	R21 U10 ; R21 := U10
	514	[7429]	GETGLOBAL	R22 K20 ; R22 := mHover
	515	[7429]	GETTABLE 	R22 R22 K21 ; R22 := R22["Node"]
	516	[7429]	GETTABLE 	R22 R22 K87 ; R22 := R22["deco"]
	517	[7429]	GETTABLE 	R22 R22 K94 ; R22 := R22["mScale"]
	518	[7429]	SETTABLE 	R21 K93 R22 ; R21["mInitialScale"] := R22
	519	[7430]	GETUPVAL 	R21 U10 ; R21 := U10
	520	[7430]	GETUPVAL 	R22 U4 ; R22 := U4
	521	[7430]	GETTABLE 	R22 R22 K77 ; R22 := R22[0xfa9785e4]
	522	[7430]	GETGLOBAL	R23 K2 ; R23 := 0xae91e43b
	523	[7430]	CALL     	R22 2 2 ; R22 := R22(R23)
	524	[7430]	SETTABLE 	R21 K76 R22 ; R21["mInitialMousePosition"] := R22
	525	[7431]	GETUPVAL 	R21 U10 ; R21 := U10
	526	[7431]	SETTABLE 	R21 K91 K48 ; R21["mEditingScale"] := true
	527	[7431]	JMP      	585 ; PC := 585
	528	[7432]	GETUPVAL 	R21 U13 ; R21 := U13
	529	[7432]	GETTABLE 	R21 R21 K82 ; R21 := R21["mShiftDown"]
	530	[7432]	TEST     	R21 1 ; if R21 then PC := 536
	531	[7432]	JMP      	536 ; PC := 536
	532	[7432]	GETUPVAL 	R21 U13 ; R21 := U13
	533	[7432]	GETTABLE 	R21 R21 K81 ; R21 := R21["mControlDown"]
	534	[7432]	TEST     	R21 0 ; if not R21 then PC := 564
	535	[7432]	JMP      	564 ; PC := 564
	536	[7433]	GETUPVAL 	R21 U10 ; R21 := U10
	537	[7433]	GETGLOBAL	R22 K96 ; R22 := 0x00046924
	538	[7433]	GETGLOBAL	R23 K20 ; R23 := mHover
	539	[7433]	GETTABLE 	R23 R23 K21 ; R23 := R23["Node"]
	540	[7433]	GETTABLE 	R23 R23 K87 ; R23 := R23["deco"]
	541	[7433]	GETTABLE 	R23 R23 K97 ; R23 := R23["mRotation"]
	542	[7433]	GETTABLE 	R23 R23 K98 ; R23 := R23["heading"]
	543	[7433]	GETGLOBAL	R24 K20 ; R24 := mHover
	544	[7433]	GETTABLE 	R24 R24 K21 ; R24 := R24["Node"]
	545	[7433]	GETTABLE 	R24 R24 K87 ; R24 := R24["deco"]
	546	[7433]	GETTABLE 	R24 R24 K97 ; R24 := R24["mRotation"]
	547	[7433]	GETTABLE 	R24 R24 K99 ; R24 := R24["pitch"]
	548	[7433]	GETGLOBAL	R25 K20 ; R25 := mHover
	549	[7433]	GETTABLE 	R25 R25 K21 ; R25 := R25["Node"]
	550	[7433]	GETTABLE 	R25 R25 K87 ; R25 := R25["deco"]
	551	[7433]	GETTABLE 	R25 R25 K97 ; R25 := R25["mRotation"]
	552	[7433]	GETTABLE 	R25 R25 K100 ; R25 := R25["bank"]
	553	[7433]	CALL     	R22 4 2 ; R22 := R22(R23,R24,R25)
	554	[7433]	SETTABLE 	R21 K95 R22 ; R21["mInitialRotation"] := R22
	555	[7434]	GETUPVAL 	R21 U10 ; R21 := U10
	556	[7434]	GETUPVAL 	R22 U4 ; R22 := U4
	557	[7434]	GETTABLE 	R22 R22 K77 ; R22 := R22[0xfa9785e4]
	558	[7434]	GETGLOBAL	R23 K2 ; R23 := 0xae91e43b
	559	[7434]	CALL     	R22 2 2 ; R22 := R22(R23)
	560	[7434]	SETTABLE 	R21 K76 R22 ; R21["mInitialMousePosition"] := R22
	561	[7435]	GETUPVAL 	R21 U10 ; R21 := U10
	562	[7435]	SETTABLE 	R21 K90 K48 ; R21["mEditingRotation"] := true
	563	[7435]	JMP      	585 ; PC := 585
	564	[7437]	GETUPVAL 	R21 U10 ; R21 := U10
	565	[7437]	GETGLOBAL	R22 K71 ; R22 := 0xa421af95
	566	[7437]	GETGLOBAL	R23 K20 ; R23 := mHover
	567	[7437]	GETTABLE 	R23 R23 K21 ; R23 := R23["Node"]
	568	[7437]	GETTABLE 	R23 R23 K87 ; R23 := R23["deco"]
	569	[7437]	GETTABLE 	R23 R23 K101 ; R23 := R23["mOffset"]
	570	[7437]	GETTABLE 	R23 R23 K43 ; R23 := R23["x"]
	571	[7437]	GETGLOBAL	R24 K20 ; R24 := mHover
	572	[7437]	GETTABLE 	R24 R24 K21 ; R24 := R24["Node"]
	573	[7437]	GETTABLE 	R24 R24 K87 ; R24 := R24["deco"]
	574	[7437]	GETTABLE 	R24 R24 K101 ; R24 := R24["mOffset"]
	575	[7437]	GETTABLE 	R24 R24 K44 ; R24 := R24["y"]
	576	[7437]	GETGLOBAL	R25 K20 ; R25 := mHover
	577	[7437]	GETTABLE 	R25 R25 K21 ; R25 := R25["Node"]
	578	[7437]	GETTABLE 	R25 R25 K87 ; R25 := R25["deco"]
	579	[7437]	GETTABLE 	R25 R25 K101 ; R25 := R25["mOffset"]
	580	[7437]	GETTABLE 	R25 R25 K73 ; R25 := R25["z"]
	581	[7437]	CALL     	R22 4 2 ; R22 := R22(R23,R24,R25)
	582	[7437]	SETTABLE 	R21 K60 R22 ; R21["mInitialPosition"] := R22
	583	[7438]	GETUPVAL 	R21 U10 ; R21 := U10
	584	[7438]	SETTABLE 	R21 K89 K48 ; R21["mEditingOffset"] := true
	585	[7440]	GETUPVAL 	R21 U10 ; R21 := U10
	586	[7440]	GETUPVAL 	R22 U11 ; R22 := U11
	587	[7440]	CALL     	R22 1 2 ; R22 := R22()
	588	[7440]	SETTABLE 	R21 K63 R22 ; R21["mInitialWorldCursor"] := R22
	589	[7440]	JMP      	792 ; PC := 792
	590	[7441]	GETUPVAL 	R21 U8 ; R21 := U8
	591	[7441]	GETUPVAL 	R22 U9 ; R22 := U9
	592	[7441]	GETTABLE 	R22 R22 K102 ; R22 := R22["EDIT_REGION_FRAMING"]
	593	[7441]	EQ       	0 R21 R22 ; if R21 ~= R22 then PC := 599
	594	[7441]	JMP      	599 ; PC := 599
	595	[7442]	GETGLOBAL	R21 K103 ; R21 := mDrag
	596	[7442]	SELF     	R21 R21 K104 ; R22 := R21; R21 := R21[0xd033d908]
	597	[7442]	CALL     	R21 2 1 ; R21(R22)
	598	[7442]	JMP      	792 ; PC := 792
	599	[7443]	GETUPVAL 	R21 U8 ; R21 := U8
	600	[7443]	GETUPVAL 	R22 U9 ; R22 := U9
	601	[7443]	GETTABLE 	R22 R22 K105 ; R22 := R22["EDIT_SHORTCUT_CONTROL_POINTS"]
	602	[7443]	EQ       	0 R21 R22 ; if R21 ~= R22 then PC := 633
	603	[7443]	JMP      	633 ; PC := 633
	604	[7443]	GETGLOBAL	R21 K37 ; R21 := 0x7b998233
	605	[7443]	GETUPVAL 	R22 U10 ; R22 := U10
	606	[7443]	GETTABLE 	R22 R22 K106 ; R22 := R22["mMovingControlPoint"]
	607	[7443]	CALL     	R21 2 2 ; R21 := R21(R22)
	608	[7443]	TEST     	R21 1 ; if R21 then PC := 633
	609	[7443]	JMP      	633 ; PC := 633
	610	[7444]	GETUPVAL 	R21 U10 ; R21 := U10
	611	[7444]	SETTABLE 	R21 K107 K48 ; R21["mControlPointHeld"] := true
	612	[7445]	GETUPVAL 	R21 U10 ; R21 := U10
	613	[7445]	GETUPVAL 	R22 U11 ; R22 := U11
	614	[7445]	CALL     	R22 1 2 ; R22 := R22()
	615	[7445]	SETTABLE 	R21 K63 R22 ; R21["mInitialWorldCursor"] := R22
	616	[7446]	GETUPVAL 	R21 U10 ; R21 := U10
	617	[7446]	GETGLOBAL	R22 K71 ; R22 := 0xa421af95
	618	[7446]	GETUPVAL 	R23 U10 ; R23 := U10
	619	[7446]	GETTABLE 	R23 R23 K106 ; R23 := R23["mMovingControlPoint"]
	620	[7446]	GETTABLE 	R23 R23 K72 ; R23 := R23["position"]
	621	[7446]	GETTABLE 	R23 R23 K43 ; R23 := R23["x"]
	622	[7446]	GETUPVAL 	R24 U10 ; R24 := U10
	623	[7446]	GETTABLE 	R24 R24 K106 ; R24 := R24["mMovingControlPoint"]
	624	[7446]	GETTABLE 	R24 R24 K72 ; R24 := R24["position"]
	625	[7446]	GETTABLE 	R24 R24 K44 ; R24 := R24["y"]
	626	[7446]	GETUPVAL 	R25 U10 ; R25 := U10
	627	[7446]	GETTABLE 	R25 R25 K106 ; R25 := R25["mMovingControlPoint"]
	628	[7446]	GETTABLE 	R25 R25 K72 ; R25 := R25["position"]
	629	[7446]	GETTABLE 	R25 R25 K73 ; R25 := R25["z"]
	630	[7446]	CALL     	R22 4 2 ; R22 := R22(R23,R24,R25)
	631	[7446]	SETTABLE 	R21 K60 R22 ; R21["mInitialPosition"] := R22
	632	[7446]	JMP      	792 ; PC := 792
	633	[7447]	GETUPVAL 	R21 U15 ; R21 := U15
	634	[7447]	TEST     	R21 0 ; if not R21 then PC := 745
	635	[7447]	JMP      	745 ; PC := 745
	636	[7448]	GETGLOBAL	R21 K108 ; R21 := mSuperPoly
	637	[7448]	GETUPVAL 	R22 U15 ; R22 := U15
	638	[7448]	GETTABLE 	R21 R21 R22 ; R21 := R21[R22]
	639	[7448]	TEST     	R21 0 ; if not R21 then PC := 792
	640	[7448]	JMP      	792 ; PC := 792
	641	[7449]	GETUPVAL 	R21 U13 ; R21 := U13
	642	[7449]	GETTABLE 	R21 R21 K82 ; R21 := R21["mShiftDown"]
	643	[7449]	TEST     	R21 0 ; if not R21 then PC := 712
	644	[7449]	JMP      	712 ; PC := 712
	645	[7452]	GETGLOBAL	R21 K108 ; R21 := mSuperPoly
	646	[7452]	GETUPVAL 	R22 U16 ; R22 := U16
	647	[7452]	GETTABLE 	R21 R21 R22 ; R21 := R21[R22]
	648	[7452]	TEST     	R21 0 ; if not R21 then PC := 792
	649	[7452]	JMP      	792 ; PC := 792
	650	[7454]	GETUPVAL 	R21 U11 ; R21 := U11
	651	[7454]	CALL     	R21 1 2 ; R21 := R21()
	652	[7456]	GETGLOBAL	R22 K108 ; R22 := mSuperPoly
	653	[7456]	GETUPVAL 	R23 U15 ; R23 := U15
	654	[7456]	GETTABLE 	R22 R22 R23 ; R22 := R22[R23]
	655	[7456]	SELF     	R22 R22 K109 ; R23 := R22; R22 := R22[0x5ff54ca6]
	656	[7456]	MOVE     	R24 R21 ; R24 := R21
	657	[7456]	CALL     	R22 3 2 ; R22 := R22(R23,R24)
	658	[7457]	GETGLOBAL	R23 K108 ; R23 := mSuperPoly
	659	[7457]	GETUPVAL 	R24 U15 ; R24 := U15
	660	[7457]	GETTABLE 	R23 R23 R24 ; R23 := R23[R24]
	661	[7457]	SELF     	R23 R23 K110 ; R24 := R23; R23 := R23[0xf04f37dd]
	662	[7457]	CALL     	R23 2 2 ; R23 := R23(R24)
	663	[7458]	GETUPVAL 	R24 U17 ; R24 := U17
	664	[7458]	MOVE     	R25 R23 ; R25 := R23
	665	[7458]	MOVE     	R26 R22 ; R26 := R22
	666	[7458]	CALL     	R24 3 2 ; R24 := R24(R25,R26)
	667	[7460]	GETGLOBAL	R25 K111 ; R25 := mStichStart
	668	[7460]	EQ       	0 R25 K10 ; if R25 ~= nil then PC := 672
	669	[7460]	JMP      	672 ; PC := 672
	670	[7461]	SETGLOBALHASH	R24 K111 ; mStichStart := R24
	671	[7461]	JMP      	792 ; PC := 792
	672	[7463]	GETGLOBAL	R25 K111 ; R25 := mStichStart
	673	[7464]	MOVE     	R26 R24 ; R26 := R24
	674	[7465]	GETGLOBAL	R27 K108 ; R27 := mSuperPoly
	675	[7465]	GETUPVAL 	R28 U16 ; R28 := U16
	676	[7465]	GETTABLE 	R27 R27 R28 ; R27 := R27[R28]
	677	[7465]	SELF     	R27 R27 K110 ; R28 := R27; R27 := R27[0xf04f37dd]
	678	[7465]	CALL     	R27 2 2 ; R27 := R27(R28)
	679	[7467]	LOADK    	R28 := 1.000000
	680	[7467]	LEN      	R29 R27 ; R29 := # R27
	681	[7467]	LOADK    	R30 := 1.000000
	682	[7467]	FORPREP  	R28 697 ; R28 -= R30; PC := 697
	683	[7468]	GETGLOBAL	R32 K108 ; R32 := mSuperPoly
	684	[7468]	GETUPVAL 	R33 U16 ; R33 := U16
	685	[7468]	GETTABLE 	R32 R32 R33 ; R32 := R32[R33]
	686	[7468]	SELF     	R32 R32 K112 ; R33 := R32; R32 := R32[0x94c6cf60]
	687	[7468]	GETTABLE 	R34 R27 R31 ; R34 := R27[R31]
	688	[7468]	CALL     	R32 3 2 ; R32 := R32(R33,R34)
	689	[7468]	SETTABLE 	R27 R31 R32 ; R27[R31] := R32
	690	[7469]	GETGLOBAL	R32 K108 ; R32 := mSuperPoly
	691	[7469]	GETUPVAL 	R33 U15 ; R33 := U15
	692	[7469]	GETTABLE 	R32 R32 R33 ; R32 := R32[R33]
	693	[7469]	SELF     	R32 R32 K109 ; R33 := R32; R32 := R32[0x5ff54ca6]
	694	[7469]	GETTABLE 	R34 R27 R31 ; R34 := R27[R31]
	695	[7469]	CALL     	R32 3 2 ; R32 := R32(R33,R34)
	696	[7469]	SETTABLE 	R27 R31 R32 ; R27[R31] := R32
	697	[7467]	FORLOOP  	R28 683 ; R28 += R30; if R28 <= R29 then begin PC := 683; R31 := R28 end
	698	[7471]	GETGLOBAL	R32 K108 ; R32 := mSuperPoly
	699	[7471]	GETUPVAL 	R33 U15 ; R33 := U15
	700	[7471]	GETTABLE 	R32 R32 R33 ; R32 := R32[R33]
	701	[7471]	SELF     	R32 R32 K113 ; R33 := R32; R32 := R32[0xa644477e]
	702	[7471]	MOVE     	R34 R25 ; R34 := R25
	703	[7471]	MOVE     	R35 R26 ; R35 := R26
	704	[7471]	MOVE     	R36 R27 ; R36 := R27
	705	[7471]	CALL     	R32 5 1 ; R32(R33,R34,R35,R36)
	706	[7472]	GETGLOBAL	R32 K108 ; R32 := mSuperPoly
	707	[7472]	GETUPVAL 	R33 U15 ; R33 := U15
	708	[7472]	GETTABLE 	R32 R32 R33 ; R32 := R32[R33]
	709	[7472]	SELF     	R32 R32 K114 ; R33 := R32; R32 := R32[0x0744d776]
	710	[7472]	CALL     	R32 2 1 ; R32(R33)
	711	[7474]	JMP      	792 ; PC := 792
	712	[7476]	GETUPVAL 	R32 U13 ; R32 := U13
	713	[7476]	GETTABLE 	R32 R32 K92 ; R32 := R32["mAltDown"]
	714	[7476]	TEST     	R32 0 ; if not R32 then PC := 728
	715	[7476]	JMP      	728 ; PC := 728
	716	[7477]	GETGLOBAL	R32 K108 ; R32 := mSuperPoly
	717	[7477]	GETUPVAL 	R33 U15 ; R33 := U15
	718	[7477]	GETTABLE 	R32 R32 R33 ; R32 := R32[R33]
	719	[7477]	SELF     	R32 R32 K115 ; R33 := R32; R32 := R32[0x7ceafc23]
	720	[7477]	NEWTABLE 	R34 0 0 ; R34 := {}
	721	[7477]	CALL     	R32 3 1 ; R32(R33,R34)
	722	[7478]	GETGLOBAL	R32 K108 ; R32 := mSuperPoly
	723	[7478]	GETUPVAL 	R33 U15 ; R33 := U15
	724	[7478]	GETTABLE 	R32 R32 R33 ; R32 := R32[R33]
	725	[7478]	SELF     	R32 R32 K114 ; R33 := R32; R32 := R32[0x0744d776]
	726	[7478]	CALL     	R32 2 1 ; R32(R33)
	727	[7478]	JMP      	792 ; PC := 792
	728	[7479]	GETUPVAL 	R32 U13 ; R32 := U13
	729	[7479]	GETTABLE 	R32 R32 K81 ; R32 := R32["mControlDown"]
	730	[7479]	TEST     	R32 1 ; if R32 then PC := 792
	731	[7479]	JMP      	792 ; PC := 792
	732	[7480]	GETGLOBAL	R32 K108 ; R32 := mSuperPoly
	733	[7480]	GETUPVAL 	R33 U15 ; R33 := U15
	734	[7480]	GETTABLE 	R32 R32 R33 ; R32 := R32[R33]
	735	[7480]	SELF     	R32 R32 K116 ; R33 := R32; R32 := R32[0xf5934be3]
	736	[7480]	GETUPVAL 	R34 U11 ; R34 := U11
	737	[7480]	CALL     	R34 1 0 ; R34,... := R34()
	738	[7480]	CALL     	R32 0 1 ; R32(R33,...)
	739	[7481]	GETGLOBAL	R32 K108 ; R32 := mSuperPoly
	740	[7481]	GETUPVAL 	R33 U15 ; R33 := U15
	741	[7481]	GETTABLE 	R32 R32 R33 ; R32 := R32[R33]
	742	[7481]	SELF     	R32 R32 K114 ; R33 := R32; R32 := R32[0x0744d776]
	743	[7481]	CALL     	R32 2 1 ; R32(R33)
	744	[7483]	JMP      	792 ; PC := 792
	745	[7484]	GETGLOBAL	R32 K35 ; R32 := 0x34291f5c
	746	[7484]	GETTABLE 	R32 R32 K40 ; R32 := R32[0x781669d7]
	747	[7484]	CALL     	R32 1 2 ; R32 := R32()
	748	[7484]	TEST     	R32 0 ; if not R32 then PC := 763
	749	[7484]	JMP      	763 ; PC := 763
	750	[7485]	GETGLOBAL	R32 K20 ; R32 := mHover
	751	[7485]	GETTABLE 	R32 R32 K22 ; R32 := R32["Region"]
	752	[7485]	TEST     	R32 0 ; if not R32 then PC := 759
	753	[7485]	JMP      	759 ; PC := 759
	754	[7486]	GETUPVAL 	R32 U18 ; R32 := U18
	755	[7486]	GETGLOBAL	R33 K20 ; R33 := mHover
	756	[7486]	GETTABLE 	R33 R33 K22 ; R33 := R33["Region"]
	757	[7486]	CALL     	R32 2 1 ; R32(R33)
	758	[7486]	JMP      	792 ; PC := 792
	759	[7488]	GETUPVAL 	R32 U6 ; R32 := U6
	760	[7488]	GETTABLE 	R32 R32 K117 ; R32 := R32["NodeClick"]
	761	[7488]	SETUPVAL 	R32 U19 ; U19 := R32
	762	[7489]	JMP      	792 ; PC := 792
	763	[7490]	GETGLOBAL	R32 K20 ; R32 := mHover
	764	[7490]	GETTABLE 	R32 R32 K21 ; R32 := R32["Node"]
	765	[7490]	TEST     	R32 0 ; if not R32 then PC := 771
	766	[7490]	JMP      	771 ; PC := 771
	767	[7491]	GETUPVAL 	R32 U6 ; R32 := U6
	768	[7491]	GETTABLE 	R32 R32 K117 ; R32 := R32["NodeClick"]
	769	[7491]	SETUPVAL 	R32 U19 ; U19 := R32
	770	[7491]	JMP      	792 ; PC := 792
	771	[7492]	GETGLOBAL	R32 K20 ; R32 := mHover
	772	[7492]	GETTABLE 	R32 R32 K22 ; R32 := R32["Region"]
	773	[7492]	TEST     	R32 0 ; if not R32 then PC := 780
	774	[7492]	JMP      	780 ; PC := 780
	775	[7493]	GETUPVAL 	R32 U18 ; R32 := U18
	776	[7493]	GETGLOBAL	R33 K20 ; R33 := mHover
	777	[7493]	GETTABLE 	R33 R33 K22 ; R33 := R33["Region"]
	778	[7493]	CALL     	R32 2 1 ; R32(R33)
	779	[7493]	JMP      	792 ; PC := 792
	780	[7495]	GETUPVAL 	R32 U20 ; R32 := U20
	781	[7495]	GETTABLE 	R32 R32 K118 ; R32 := R32["IsVisible"]
	782	[7495]	TEST     	R32 1 ; if R32 then PC := 792
	783	[7495]	JMP      	792 ; PC := 792
	784	[7495]	GETGLOBAL	R32 K35 ; R32 := 0x34291f5c
	785	[7495]	GETTABLE 	R32 R32 K119 ; R32 := R32[0x86647daf]
	786	[7495]	CALL     	R32 1 2 ; R32 := R32()
	787	[7495]	TEST     	R32 1 ; if R32 then PC := 792
	788	[7495]	JMP      	792 ; PC := 792
	789	[7496]	GETGLOBAL	R32 K103 ; R32 := mDrag
	790	[7496]	SELF     	R32 R32 K104 ; R33 := R32; R32 := R32[0xd033d908]
	791	[7496]	CALL     	R32 2 1 ; R32(R33)
	792	[7499]	OP_LOADBOOL	R32 0 0 ; R32 := false
	793	[7499]	RETURN   	R32 2 ; return R32 
	794	[7500]	RETURN   	R0 1 ; return 

function #151 <?:7503,7510> (21 instructions, 84 bytes at 000002112AFDDFF0)
0 params, 4 slots, 2 upvalues, 0 locals, 9 constants, 0 functions
	1	[7504]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[7504]	GETUPVAL 	R1 U0 ; R1 := U0
	3	[7504]	GETTABLE 	R1 R1 K1 ; R1 := R1["JunctionTasks"]
	4	[7504]	CALL     	R0 2 2 ; R0 := R0(R1)
	5	[7504]	TEST     	R0 1 ; if R0 then PC := 21
	6	[7504]	JMP      	21 ; PC := 21
	7	[7505]	GETUPVAL 	R0 U0 ; R0 := U0
	8	[7505]	GETTABLE 	R0 R0 K1 ; R0 := R0["JunctionTasks"]
	9	[7505]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xe4162eed]
	10	[7505]	LOADK    	R2 K3 ; R2 := "EndDrag"
	11	[7505]	LOADK    	R3 K4 ; R3 := ""
	12	[7505]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	13	[7506]	GETUPVAL 	R0 U1 ; R0 := U1
	14	[7506]	SETTABLE 	R0 K5 K6 ; R0["JunctionDrag"] := false
	15	[7507]	GETUPVAL 	R0 U0 ; R0 := U0
	16	[7507]	GETTABLE 	R0 R0 K1 ; R0 := R0["JunctionTasks"]
	17	[7507]	SELF     	R0 R0 K7 ; R1 := R0; R0 := R0[0x32302b4a]
	18	[7507]	CALL     	R0 2 1 ; R0(R1)
	19	[7508]	GETUPVAL 	R0 U0 ; R0 := U0
	20	[7508]	SETTABLE 	R0 K1 K8 ; R0["JunctionTasks"] := nil
	21	[7510]	RETURN   	R0 1 ; return 

function #152 <?:7513,7524> (42 instructions, 168 bytes at 000002111D3343B0)
0 params, 7 slots, 3 upvalues, 0 locals, 14 constants, 0 functions
	1	[7514]	GETGLOBAL	R0 K0 ; R0 := 0x34291f5c
	2	[7514]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x781669d7]
	3	[7514]	CALL     	R0 1 2 ; R0 := R0()
	4	[7514]	TEST     	R0 0 ; if not R0 then PC := 17
	5	[7514]	JMP      	17 ; PC := 17
	6	[7514]	GETGLOBAL	R0 K2 ; R0 := mHover
	7	[7514]	GETTABLE 	R0 R0 K3 ; R0 := R0["Node"]
	8	[7514]	GETTABLE 	R0 R0 K4 ; R0 := R0["isJunction"]
	9	[7514]	TEST     	R0 0 ; if not R0 then PC := 17
	10	[7514]	JMP      	17 ; PC := 17
	11	[7515]	GETUPVAL 	R0 U0 ; R0 := U0
	12	[7515]	GETGLOBAL	R1 K2 ; R1 := mHover
	13	[7515]	GETTABLE 	R1 R1 K3 ; R1 := R1["Node"]
	14	[7515]	OP_LOADBOOL	R2 0 0 ; R2 := false
	15	[7515]	CALL     	R0 3 1 ; R0(R1,R2)
	16	[7515]	JMP      	29 ; PC := 29
	17	[7517]	GETGLOBAL	R0 K5 ; R0 := 0x25312c9b
	18	[7517]	GETGLOBAL	R1 K6 ; R1 := 0xae91e43b
	19	[7517]	LOADK    	R2 K7 ; R2 := "InfoTip"
	20	[7517]	LOADK    	R3 := 0.000000
	21	[7517]	NEWTABLE 	R4 1 0 ; R4 := {}
	22	[7517]	LOADK    	R5 K9 ; R5 := "_alpha"
	23	[7517]	SETLIST  	R4 1 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
	24	[7517]	NEWTABLE 	R5 1 0 ; R5 := {}
	25	[7517]	LOADK    	R6 := 100.000000
	26	[7517]	SETLIST  	R5 1 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
	27	[7517]	LOADK    	R6 K10 ; R6 := 0.200000
	28	[7517]	CALL     	R0 7 1 ; R0(R1,R2,R3,R4,R5,R6)
	29	[7519]	GETGLOBAL	R0 K0 ; R0 := 0x34291f5c
	30	[7519]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x781669d7]
	31	[7519]	CALL     	R0 1 2 ; R0 := R0()
	32	[7519]	TEST     	R0 0 ; if not R0 then PC := 42
	33	[7519]	JMP      	42 ; PC := 42
	34	[7520]	GETUPVAL 	R0 U1 ; R0 := U1
	35	[7520]	GETGLOBAL	R1 K2 ; R1 := mHover
	36	[7520]	GETTABLE 	R1 R1 K3 ; R1 := R1["Node"]
	37	[7520]	SETTABLE 	R0 K11 R1 ; R0["TooltipNode"] := R1
	38	[7521]	GETUPVAL 	R0 U1 ; R0 := U1
	39	[7521]	SETTABLE 	R0 K12 K13 ; R0["mNodeVisible"] := true
	40	[7522]	GETUPVAL 	R0 U2 ; R0 := U2
	41	[7522]	CALL     	R0 1 1 ; R0()
	42	[7524]	RETURN   	R0 1 ; return 

function #153 <?:7527,7544> (57 instructions, 228 bytes at 000002111D334500)
0 params, 9 slots, 3 upvalues, 0 locals, 21 constants, 1 function
	1	[7528]	GETGLOBAL	R0 K0 ; R0 := 0x34291f5c
	2	[7528]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x781669d7]
	3	[7528]	CALL     	R0 1 2 ; R0 := R0()
	4	[7528]	TEST     	R0 0 ; if not R0 then PC := 17
	5	[7528]	JMP      	17 ; PC := 17
	6	[7528]	GETGLOBAL	R0 K2 ; R0 := 0x7b998233
	7	[7528]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[7528]	GETTABLE 	R1 R1 K3 ; R1 := R1["JunctionTasks"]
	9	[7528]	CALL     	R0 2 2 ; R0 := R0(R1)
	10	[7528]	TEST     	R0 1 ; if R0 then PC := 17
	11	[7528]	JMP      	17 ; PC := 17
	12	[7529]	GETGLOBAL	R0 K4 ; R0 := _T
	13	[7529]	SETTABLE 	R0 K5 K6 ; R0["JunctionTasksUIRadialSector"] := nil
	14	[7530]	GETUPVAL 	R0 U1 ; R0 := U1
	15	[7530]	GETTABLE 	R0 R0 K7 ; R0 := R0[0xd75fc7ea]
	16	[7530]	CALL     	R0 1 1 ; R0()
	17	[7532]	GETGLOBAL	R0 K8 ; R0 := 0x25312c9b
	18	[7532]	GETGLOBAL	R1 K9 ; R1 := 0xae91e43b
	19	[7532]	LOADK    	R2 K10 ; R2 := "InfoTip"
	20	[7532]	LOADK    	R3 := 0.000000
	21	[7532]	NEWTABLE 	R4 1 0 ; R4 := {}
	22	[7532]	LOADK    	R5 K12 ; R5 := "_alpha"
	23	[7532]	SETLIST  	R4 1 1 ; R4[(1-1)*FPF+i] := R(4+i), 1 <= i <= 1
	24	[7532]	NEWTABLE 	R5 1 0 ; R5 := {}
	25	[7532]	LOADK    	R6 := 0.000000
	26	[7532]	SETLIST  	R5 1 1 ; R5[(1-1)*FPF+i] := R(5+i), 1 <= i <= 1
	27	[7532]	LOADK    	R6 K13 ; R6 := 0.050000
	28	[7532]	LOADK    	R7 := 0.000000
	29	[7535]	CLOSURE  	R8 0 ; R8 := closure(Function #1)
	30	[7532]	CALL     	R0 9 1 ; R0(R1,R2,R3,R4,R5,R6,R7,R8)
	31	[7536]	GETGLOBAL	R0 K0 ; R0 := 0x34291f5c
	32	[7536]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x781669d7]
	33	[7536]	CALL     	R0 1 2 ; R0 := R0()
	34	[7536]	TEST     	R0 0 ; if not R0 then PC := 57
	35	[7536]	JMP      	57 ; PC := 57
	36	[7537]	GETGLOBAL	R0 K2 ; R0 := 0x7b998233
	37	[7537]	GETUPVAL 	R1 U1 ; R1 := U1
	38	[7537]	GETTABLE 	R1 R1 K14 ; R1 := R1["TooltipNode"]
	39	[7537]	CALL     	R0 2 2 ; R0 := R0(R1)
	40	[7537]	TEST     	R0 1 ; if R0 then PC := 51
	41	[7537]	JMP      	51 ; PC := 51
	42	[7538]	GETGLOBAL	R0 K9 ; R0 := 0xae91e43b
	43	[7538]	SELF     	R0 R0 K15 ; R1 := R0; R0 := R0[0x67bc869f]
	44	[7538]	GETUPVAL 	R2 U1 ; R2 := U1
	45	[7538]	GETTABLE 	R2 R2 K14 ; R2 := R2["TooltipNode"]
	46	[7538]	GETTABLE 	R2 R2 K16 ; R2 := R2["clipName"]
	47	[7538]	LOADK    	R3 := 9.000000
	48	[7538]	GETGLOBAL	R4 K17 ; R4 := 0x0032441c
	49	[7538]	GETTABLE 	R4 R4 K18 ; R4 := R4["UIColor_White"]
	50	[7538]	CALL     	R0 5 1 ; R0(R1,R2,R3,R4)
	51	[7540]	GETUPVAL 	R0 U1 ; R0 := U1
	52	[7540]	SETTABLE 	R0 K14 K6 ; R0["TooltipNode"] := nil
	53	[7541]	GETUPVAL 	R0 U1 ; R0 := U1
	54	[7541]	SETTABLE 	R0 K19 K20 ; R0["mNodeVisible"] := false
	55	[7542]	GETUPVAL 	R0 U2 ; R0 := U2
	56	[7542]	CALL     	R0 1 1 ; R0()
	57	[7544]	RETURN   	R0 1 ; return 

function #154 <?:7546,7588> (166 instructions, 664 bytes at 000002113280A970)
2 params, 12 slots, 6 upvalues, 0 locals, 38 constants, 0 functions
	1	[7547]	GETGLOBAL	R2 K0 ; R2 := mInputBlocked
	2	[7547]	TEST     	R2 1 ; if R2 then PC := 166
	3	[7547]	JMP      	166 ; PC := 166
	4	[7547]	GETGLOBAL	R2 K1 ; R2 := _T
	5	[7547]	GETTABLE 	R2 R2 K2 ; R2 := R2["MouseInWorldStateWindow"]
	6	[7547]	TEST     	R2 1 ; if R2 then PC := 166
	7	[7547]	JMP      	166 ; PC := 166
	8	[7547]	GETGLOBAL	R2 K1 ; R2 := _T
	9	[7547]	GETTABLE 	R2 R2 K3 ; R2 := R2["MouseInChatArea"]
	10	[7547]	TEST     	R2 1 ; if R2 then PC := 166
	11	[7547]	JMP      	166 ; PC := 166
	12	[7547]	GETGLOBAL	R2 K1 ; R2 := _T
	13	[7547]	GETTABLE 	R2 R2 K4 ; R2 := R2["JunctionTasksUIRadialSector"]
	14	[7547]	EQ       	0 R2 K5 ; if R2 ~= nil then PC := 166
	15	[7547]	JMP      	166 ; PC := 166
	16	[7547]	GETGLOBAL	R2 K6 ; R2 := mInfoTip
	17	[7547]	GETTABLE 	R2 R2 K7 ; R2 := R2["NodeSelectionOpen"]
	18	[7547]	TEST     	R2 1 ; if R2 then PC := 166
	19	[7547]	JMP      	166 ; PC := 166
	20	[7548]	GETGLOBAL	R2 K8 ; R2 := Zoom
	21	[7548]	GETTABLE 	R2 R2 K9 ; R2 := R2["MIN_ZOOM"]
	22	[7549]	GETGLOBAL	R3 K8 ; R3 := Zoom
	23	[7549]	GETTABLE 	R3 R3 K10 ; R3 := R3["MAX_ZOOM"]
	24	[7550]	LOADNIL  	R4 R4 ; R4 := nil
	25	[7551]	GETGLOBAL	R5 K11 ; R5 := 0x34291f5c
	26	[7551]	GETTABLE 	R5 R5 K12 ; R5 := R5[0x781669d7]
	27	[7551]	CALL     	R5 1 2 ; R5 := R5()
	28	[7551]	TEST     	R5 1 ; if R5 then PC := 37
	29	[7551]	JMP      	37 ; PC := 37
	30	[7552]	GETGLOBAL	R5 K8 ; R5 := Zoom
	31	[7552]	GETTABLE 	R5 R5 K10 ; R5 := R5["MAX_ZOOM"]
	32	[7552]	GETGLOBAL	R6 K13 ; R6 := mSmoothZoom
	33	[7552]	GETTABLE 	R6 R6 K14 ; R6 := R6["mTargetVal"]
	34	[7552]	SUB      	R5 R5 R6 ; R5 := R5 - R6
	35	[7552]	DIV      	R4 R5 K15 ; R4 := R5 / 2.000000
	36	[7552]	JMP      	42 ; PC := 42
	37	[7554]	GETGLOBAL	R5 K16 ; R5 := 0x5bced4c4
	38	[7554]	GETTABLE 	R5 R5 K17 ; R5 := R5[0xe4a5b3ca]
	39	[7554]	MOVE     	R6 R1 ; R6 := R1
	40	[7554]	CALL     	R5 2 2 ; R5 := R5(R6)
	41	[7554]	MOVE     	R4 R5 ; R4 := R5
	42	[7556]	GETGLOBAL	R5 K11 ; R5 := 0x34291f5c
	43	[7556]	GETTABLE 	R5 R5 K18 ; R5 := R5[0x1467d5f4]
	44	[7556]	CALL     	R5 1 2 ; R5 := R5()
	45	[7556]	TEST     	R5 0 ; if not R5 then PC := 48
	46	[7556]	JMP      	48 ; PC := 48
	47	[7557]	DIV      	R4 R4 K19 ; R4 := R4 / 10.000000
	48	[7559]	LT       	0 R4 K20 ; if R4 >= 0.050000 then PC := 56
	49	[7559]	JMP      	56 ; PC := 56
	50	[7559]	GETGLOBAL	R5 K11 ; R5 := 0x34291f5c
	51	[7559]	GETTABLE 	R5 R5 K12 ; R5 := R5[0x781669d7]
	52	[7559]	CALL     	R5 1 2 ; R5 := R5()
	53	[7559]	TEST     	R5 1 ; if R5 then PC := 56
	54	[7559]	JMP      	56 ; PC := 56
	55	[7560]	LOADK    	R4 K20 ; R4 := 0.050000
	56	[7562]	GETUPVAL 	R5 U0 ; R5 := U0
	57	[7562]	GETUPVAL 	R6 U1 ; R6 := U1
	58	[7562]	GETTABLE 	R6 R6 K21 ; R6 := R6["EDIT_REGION_FRAMING"]
	59	[7562]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 64
	60	[7562]	JMP      	64 ; PC := 64
	61	[7563]	LOADK    	R4 K20 ; R4 := 0.050000
	62	[7564]	LOADK    	R2 := -999.000000
	63	[7565]	LOADK    	R3 := 999.000000
	64	[7567]	GETGLOBAL	R5 K22 ; R5 := 0x03f57322
	65	[7567]	MOVE     	R6 R1 ; R6 := R1
	66	[7567]	CALL     	R5 2 2 ; R5 := R5(R6)
	67	[7567]	LT       	0 R5 K23 ; if R5 >= 0.000000 then PC := 137
	68	[7567]	JMP      	137 ; PC := 137
	69	[7568]	GETGLOBAL	R5 K24 ; R5 := 0x7b998233
	70	[7568]	GETGLOBAL	R6 K25 ; R6 := mHover
	71	[7568]	CALL     	R5 2 2 ; R5 := R5(R6)
	72	[7568]	TEST     	R5 1 ; if R5 then PC := 108
	73	[7568]	JMP      	108 ; PC := 108
	74	[7568]	GETGLOBAL	R5 K24 ; R5 := 0x7b998233
	75	[7568]	GETGLOBAL	R6 K25 ; R6 := mHover
	76	[7568]	GETTABLE 	R6 R6 K26 ; R6 := R6["Region"]
	77	[7568]	CALL     	R5 2 2 ; R5 := R5(R6)
	78	[7568]	TEST     	R5 1 ; if R5 then PC := 108
	79	[7568]	JMP      	108 ; PC := 108
	80	[7568]	GETGLOBAL	R5 K25 ; R5 := mHover
	81	[7568]	GETTABLE 	R5 R5 K26 ; R5 := R5["Region"]
	82	[7568]	GETGLOBAL	R6 K27 ; R6 := mZoomedRegion
	83	[7568]	EQ       	1 R5 R6 ; if R5 == R6 then PC := 108
	84	[7568]	JMP      	108 ; PC := 108
	85	[7569]	GETUPVAL 	R5 U2 ; R5 := U2
	86	[7569]	GETUPVAL 	R6 U3 ; R6 := U3
	87	[7569]	GETTABLE 	R6 R6 K28 ; R6 := R6[0x74a11ec6]
	88	[7569]	GETGLOBAL	R7 K29 ; R7 := 0xae91e43b
	89	[7569]	SELF     	R7 R7 K30 ; R8 := R7; R7 := R7[0x6b837788]
	90	[7569]	CALL     	R7 2 2 ; R7 := R7(R8)
	91	[7569]	DIV      	R7 R7 K15 ; R7 := R7 / 2.000000
	92	[7569]	CALL     	R6 2 2 ; R6 := R6(R7)
	93	[7569]	GETUPVAL 	R7 U3 ; R7 := U3
	94	[7569]	GETTABLE 	R7 R7 K28 ; R7 := R7[0x74a11ec6]
	95	[7569]	GETGLOBAL	R8 K29 ; R8 := 0xae91e43b
	96	[7569]	SELF     	R8 R8 K31 ; R9 := R8; R8 := R8[0xaf9fda9f]
	97	[7569]	CALL     	R8 2 2 ; R8 := R8(R9)
	98	[7569]	DIV      	R8 R8 K15 ; R8 := R8 / 2.000000
	99	[7569]	CALL     	R7 2 0 ; R7,... := R7(R8)
	100	[7569]	CALL     	R5 0 1 ; R5(R6,...)
	101	[7570]	GETUPVAL 	R5 U4 ; R5 := U4
	102	[7570]	GETGLOBAL	R6 K25 ; R6 := mHover
	103	[7570]	GETTABLE 	R6 R6 K26 ; R6 := R6["Region"]
	104	[7570]	LOADNIL  	R7 R7 ; R7 := nil
	105	[7570]	OP_LOADBOOL	R8 1 0 ; R8 := true
	106	[7570]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	107	[7571]	RETURN   	R0 1 ; return 
	108	[7574]	MOVE     	R5 R3 ; R5 := R3
	109	[7575]	GETGLOBAL	R6 K24 ; R6 := 0x7b998233
	110	[7575]	GETGLOBAL	R7 K27 ; R7 := mZoomedRegion
	111	[7575]	CALL     	R6 2 2 ; R6 := R6(R7)
	112	[7575]	TEST     	R6 1 ; if R6 then PC := 122
	113	[7575]	JMP      	122 ; PC := 122
	114	[7576]	GETGLOBAL	R6 K16 ; R6 := 0x5bced4c4
	115	[7576]	GETTABLE 	R6 R6 K32 ; R6 := R6[0xb62ecfe0]
	116	[7576]	MOVE     	R7 R5 ; R7 := R5
	117	[7576]	GETGLOBAL	R8 K27 ; R8 := mZoomedRegion
	118	[7576]	GETTABLE 	R8 R8 K33 ; R8 := R8["zoomedFraming"]
	119	[7576]	GETTABLE 	R8 R8 K34 ; R8 := R8["z"]
	120	[7576]	CALL     	R6 3 2 ; R6 := R6(R7,R8)
	121	[7576]	MOVE     	R5 R6 ; R5 := R6
	122	[7578]	GETGLOBAL	R6 K13 ; R6 := mSmoothZoom
	123	[7578]	GETTABLE 	R6 R6 K14 ; R6 := R6["mTargetVal"]
	124	[7578]	LT       	0 R6 R5 ; if R6 >= R5 then PC := 166
	125	[7578]	JMP      	166 ; PC := 166
	126	[7579]	GETGLOBAL	R6 K13 ; R6 := mSmoothZoom
	127	[7579]	SELF     	R6 R6 K35 ; R7 := R6; R6 := R6[0x188e2bee]
	128	[7579]	GETGLOBAL	R8 K36 ; R8 := 0x42dcc9f5
	129	[7579]	GETGLOBAL	R9 K13 ; R9 := mSmoothZoom
	130	[7579]	GETTABLE 	R9 R9 K14 ; R9 := R9["mTargetVal"]
	131	[7579]	ADD      	R9 R9 R4 ; R9 := R9 + R4
	132	[7579]	MOVE     	R10 R2 ; R10 := R2
	133	[7579]	MOVE     	R11 R5 ; R11 := R5
	134	[7579]	CALL     	R8 4 0 ; R8,... := R8(R9,R10,R11)
	135	[7579]	CALL     	R6 0 1 ; R6(R7,...)
	136	[7580]	JMP      	166 ; PC := 166
	137	[7581]	GETGLOBAL	R6 K22 ; R6 := 0x03f57322
	138	[7581]	MOVE     	R7 R1 ; R7 := R1
	139	[7581]	CALL     	R6 2 2 ; R6 := R6(R7)
	140	[7581]	LT       	0 K23 R6 ; if 0.000000 >= R6 then PC := 166
	141	[7581]	JMP      	166 ; PC := 166
	142	[7582]	GETGLOBAL	R6 K13 ; R6 := mSmoothZoom
	143	[7582]	SELF     	R6 R6 K35 ; R7 := R6; R6 := R6[0x188e2bee]
	144	[7582]	GETGLOBAL	R8 K36 ; R8 := 0x42dcc9f5
	145	[7582]	GETGLOBAL	R9 K13 ; R9 := mSmoothZoom
	146	[7582]	GETTABLE 	R9 R9 K14 ; R9 := R9["mTargetVal"]
	147	[7582]	SUB      	R9 R9 R4 ; R9 := R9 - R4
	148	[7582]	MOVE     	R10 R2 ; R10 := R2
	149	[7582]	MOVE     	R11 R3 ; R11 := R3
	150	[7582]	CALL     	R8 4 0 ; R8,... := R8(R9,R10,R11)
	151	[7582]	CALL     	R6 0 1 ; R6(R7,...)
	152	[7583]	GETGLOBAL	R6 K24 ; R6 := 0x7b998233
	153	[7583]	GETGLOBAL	R7 K27 ; R7 := mZoomedRegion
	154	[7583]	CALL     	R6 2 2 ; R6 := R6(R7)
	155	[7583]	TEST     	R6 1 ; if R6 then PC := 166
	156	[7583]	JMP      	166 ; PC := 166
	157	[7583]	GETGLOBAL	R6 K13 ; R6 := mSmoothZoom
	158	[7583]	GETTABLE 	R6 R6 K14 ; R6 := R6["mTargetVal"]
	159	[7583]	GETGLOBAL	R7 K8 ; R7 := Zoom
	160	[7583]	GETTABLE 	R7 R7 K37 ; R7 := R7["ZOOM_OUT_THRESHOLD"]
	161	[7583]	LE       	0 R6 R7 ; if R6 > R7 then PC := 166
	162	[7583]	JMP      	166 ; PC := 166
	163	[7584]	GETUPVAL 	R6 U5 ; R6 := U5
	164	[7584]	OP_LOADBOOL	R7 0 0 ; R7 := false
	165	[7584]	CALL     	R6 2 1 ; R6(R7)
	166	[7588]	RETURN   	R0 1 ; return 

function #155 <?:7590,7612> (81 instructions, 324 bytes at 000002112907E590)
0 params, 3 slots, 5 upvalues, 0 locals, 22 constants, 0 functions
	1	[7591]	GETGLOBAL	R0 K0 ; R0 := mHover
	2	[7591]	GETTABLE 	R0 R0 K1 ; R0 := R0["Node"]
	3	[7591]	EQ       	1 R0 K2 ; if R0 == nil then PC := 81
	4	[7591]	JMP      	81 ; PC := 81
	5	[7592]	GETGLOBAL	R0 K0 ; R0 := mHover
	6	[7592]	GETTABLE 	R0 R0 K1 ; R0 := R0["Node"]
	7	[7592]	GETTABLE 	R0 R0 K3 ; R0 := R0["isShortcut"]
	8	[7592]	TEST     	R0 0 ; if not R0 then PC := 36
	9	[7592]	JMP      	36 ; PC := 36
	10	[7592]	GETGLOBAL	R0 K0 ; R0 := mHover
	11	[7592]	GETTABLE 	R0 R0 K1 ; R0 := R0["Node"]
	12	[7592]	GETTABLE 	R0 R0 K4 ; R0 := R0["locked"]
	13	[7592]	TEST     	R0 1 ; if R0 then PC := 24
	14	[7592]	JMP      	24 ; PC := 24
	15	[7592]	GETGLOBAL	R0 K5 ; R0 := 0x7b998233
	16	[7592]	GETGLOBAL	R1 K0 ; R1 := mHover
	17	[7592]	GETTABLE 	R1 R1 K1 ; R1 := R1["Node"]
	18	[7592]	GETTABLE 	R1 R1 K6 ; R1 := R1["radialSector"]
	19	[7592]	GETTABLE 	R1 R1 K7 ; R1 := R1["mission"]
	20	[7592]	GETTABLE 	R1 R1 K8 ; R1 := R1["levelOverride"]
	21	[7592]	CALL     	R0 2 2 ; R0 := R0(R1)
	22	[7592]	TEST     	R0 1 ; if R0 then PC := 27
	23	[7592]	JMP      	27 ; PC := 27
	24	[7592]	GETUPVAL 	R0 U0 ; R0 := U0
	25	[7592]	TEST     	R0 0 ; if not R0 then PC := 36
	26	[7592]	JMP      	36 ; PC := 36
	27	[7593]	GETUPVAL 	R0 U1 ; R0 := U1
	28	[7593]	GETGLOBAL	R1 K9 ; R1 := mRegions
	29	[7593]	GETGLOBAL	R2 K0 ; R2 := mHover
	30	[7593]	GETTABLE 	R2 R2 K1 ; R2 := R2["Node"]
	31	[7593]	GETTABLE 	R2 R2 K10 ; R2 := R2["targetRegion"]
	32	[7593]	ADD      	R2 R2 K11 ; R2 := R2 + 1.000000
	33	[7593]	GETTABLE 	R1 R1 R2 ; R1 := R1[R2]
	34	[7593]	CALL     	R0 2 1 ; R0(R1)
	35	[7593]	JMP      	81 ; PC := 81
	36	[7594]	GETGLOBAL	R0 K0 ; R0 := mHover
	37	[7594]	GETTABLE 	R0 R0 K1 ; R0 := R0["Node"]
	38	[7594]	GETTABLE 	R0 R0 K4 ; R0 := R0["locked"]
	39	[7594]	TEST     	R0 1 ; if R0 then PC := 81
	40	[7594]	JMP      	81 ; PC := 81
	41	[7595]	GETUPVAL 	R0 U2 ; R0 := U2
	42	[7595]	GETTABLE 	R0 R0 K12 ; R0 := R0[0x659d451f]
	43	[7595]	GETGLOBAL	R1 K13 ; R1 := 0x3ec6380d
	44	[7595]	CALL     	R0 2 1 ; R0(R1)
	45	[7598]	GETGLOBAL	R0 K14 ; R0 := 0x34291f5c
	46	[7598]	GETTABLE 	R0 R0 K15 ; R0 := R0[0x781669d7]
	47	[7598]	CALL     	R0 1 2 ; R0 := R0()
	48	[7599]	TEST     	R0 0 ; if not R0 then PC := 61
	49	[7599]	JMP      	61 ; PC := 61
	50	[7599]	GETGLOBAL	R0 K14 ; R0 := 0x34291f5c
	51	[7599]	GETTABLE 	R0 R0 K15 ; R0 := R0[0x781669d7]
	52	[7599]	CALL     	R0 1 2 ; R0 := R0()
	53	[7599]	TEST     	R0 0 ; if not R0 then PC := 64
	54	[7599]	JMP      	64 ; PC := 64
	55	[7599]	GETGLOBAL	R0 K5 ; R0 := 0x7b998233
	56	[7599]	GETUPVAL 	R1 U3 ; R1 := U3
	57	[7599]	GETTABLE 	R1 R1 K16 ; R1 := R1["TooltipNode"]
	58	[7599]	CALL     	R0 2 2 ; R0 := R0(R1)
	59	[7599]	TEST     	R0 1 ; if R0 then PC := 64
	60	[7599]	JMP      	64 ; PC := 64
	61	[7601]	GETUPVAL 	R0 U4 ; R0 := U4
	62	[7601]	CALL     	R0 1 1 ; R0()
	63	[7601]	JMP      	67 ; PC := 67
	64	[7603]	GETUPVAL 	R0 U3 ; R0 := U3
	65	[7603]	GETTABLE 	R0 R0 K17 ; R0 := R0[0xc59bc2e0]
	66	[7603]	CALL     	R0 1 1 ; R0()
	67	[7606]	GETUPVAL 	R0 U2 ; R0 := U2
	68	[7606]	GETTABLE 	R0 R0 K12 ; R0 := R0[0x659d451f]
	69	[7606]	GETGLOBAL	R1 K18 ; R1 := 0x0032441c
	70	[7606]	GETTABLE 	R1 R1 K19 ; R1 := R1["UISound_Select"]
	71	[7606]	CALL     	R0 2 1 ; R0(R1)
	72	[7607]	GETUPVAL 	R0 U2 ; R0 := U2
	73	[7607]	GETTABLE 	R0 R0 K12 ; R0 := R0[0x659d451f]
	74	[7607]	GETGLOBAL	R1 K18 ; R1 := 0x0032441c
	75	[7607]	GETTABLE 	R1 R1 K20 ; R1 := R1["UISound_ButtonSelect"]
	76	[7607]	CALL     	R0 2 1 ; R0(R1)
	77	[7609]	GETGLOBAL	R0 K21 ; R0 := mCountDown
	78	[7609]	GETGLOBAL	R1 K0 ; R1 := mHover
	79	[7609]	GETTABLE 	R1 R1 K1 ; R1 := R1["Node"]
	80	[7609]	SETTABLE 	R0 K1 R1 ; R0["Node"] := R1
	81	[7612]	RETURN   	R0 1 ; return 

function #156 <?:7614,7616> (4 instructions, 16 bytes at 000002112907E620)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[7615]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[7615]	TAILCALL 	R0 1 0 ; R0,... := R0()
	3	[7615]	RETURN   	R0 0 ; return R0,... 
	4	[7616]	RETURN   	R0 1 ; return 

function #157 <?:7618,7628> (17 instructions, 68 bytes at 000002112907E6B0)
0 params, 2 slots, 1 upvalue, 0 locals, 7 constants, 0 functions
	1	[7619]	GETGLOBAL	R0 K0 ; R0 := 0x34291f5c
	2	[7619]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x1467d5f4]
	3	[7619]	CALL     	R0 1 2 ; R0 := R0()
	4	[7619]	TEST     	R0 0 ; if not R0 then PC := 10
	5	[7619]	JMP      	10 ; PC := 10
	6	[7619]	GETGLOBAL	R0 K2 ; R0 := mHover
	7	[7619]	GETTABLE 	R0 R0 K3 ; R0 := R0["Region"]
	8	[7619]	EQ       	0 R0 K4 ; if R0 ~= nil then PC := 12
	9	[7619]	JMP      	12 ; PC := 12
	10	[7620]	OP_LOADBOOL	R0 1 0 ; R0 := true
	11	[7620]	RETURN   	R0 2 ; return R0 
	12	[7626]	GETGLOBAL	R0 K2 ; R0 := mHover
	13	[7626]	SETTABLE 	R0 K5 K6 ; R0["InSelectClick"] := true
	14	[7627]	GETUPVAL 	R0 U0 ; R0 := U0
	15	[7627]	TAILCALL 	R0 1 0 ; R0,... := R0()
	16	[7627]	RETURN   	R0 0 ; return R0,... 
	17	[7628]	RETURN   	R0 1 ; return 

function #158 <?:7630,7637> (12 instructions, 48 bytes at 0000021191FDA7D0)
0 params, 2 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[7631]	GETGLOBAL	R0 K0 ; R0 := mHover
	2	[7631]	GETTABLE 	R0 R0 K1 ; R0 := R0["InSelectClick"]
	3	[7631]	TEST     	R0 1 ; if R0 then PC := 7
	4	[7631]	JMP      	7 ; PC := 7
	5	[7632]	OP_LOADBOOL	R0 1 0 ; R0 := true
	6	[7632]	RETURN   	R0 2 ; return R0 
	7	[7635]	GETGLOBAL	R0 K0 ; R0 := mHover
	8	[7635]	SETTABLE 	R0 K1 K2 ; R0["InSelectClick"] := false
	9	[7636]	GETUPVAL 	R0 U0 ; R0 := U0
	10	[7636]	TAILCALL 	R0 1 0 ; R0,... := R0()
	11	[7636]	RETURN   	R0 0 ; return R0,... 
	12	[7637]	RETURN   	R0 1 ; return 

function #159 <?:7639,7647> (11 instructions, 44 bytes at 0000021191FDA920)
0 params, 2 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[7640]	GETGLOBAL	R0 K0 ; R0 := mInputBlocked
	2	[7640]	TEST     	R0 0 ; if not R0 then PC := 5
	3	[7640]	JMP      	5 ; PC := 5
	4	[7641]	RETURN   	R0 1 ; return 
	5	[7644]	GETUPVAL 	R0 U0 ; R0 := U0
	6	[7644]	TEST     	R0 0 ; if not R0 then PC := 11
	7	[7644]	JMP      	11 ; PC := 11
	8	[7645]	GETGLOBAL	R0 K1 ; R0 := mDrag
	9	[7645]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0xcc5f3150]
	10	[7645]	CALL     	R0 2 1 ; R0(R1)
	11	[7647]	RETURN   	R0 1 ; return 

function #160 <?:7649,7651> (3 instructions, 12 bytes at 00000211309BAF60)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[7650]	OP_LOADBOOL	R0 1 0 ; R0 := true
	2	[7650]	RETURN   	R0 2 ; return R0 
	3	[7651]	RETURN   	R0 1 ; return 

function #161 <?:7653,7696> (129 instructions, 516 bytes at 00000211309BAFF0)
0 params, 5 slots, 9 upvalues, 0 locals, 42 constants, 0 functions
	1	[7654]	GETGLOBAL	R0 K0 ; R0 := mInputBlocked
	2	[7654]	TEST     	R0 1 ; if R0 then PC := 12
	3	[7654]	JMP      	12 ; PC := 12
	4	[7654]	GETUPVAL 	R0 U0 ; R0 := U0
	5	[7654]	GETTABLE 	R0 R0 K1 ; R0 := R0["DioOpen"]
	6	[7654]	TEST     	R0 1 ; if R0 then PC := 12
	7	[7654]	JMP      	12 ; PC := 12
	8	[7654]	GETGLOBAL	R0 K2 ; R0 := mInfoTip
	9	[7654]	GETTABLE 	R0 R0 K3 ; R0 := R0["NodeSelectionOpen"]
	10	[7654]	TEST     	R0 0 ; if not R0 then PC := 13
	11	[7654]	JMP      	13 ; PC := 13
	12	[7655]	RETURN   	R0 1 ; return 
	13	[7658]	GETGLOBAL	R0 K4 ; R0 := _T
	14	[7658]	GETTABLE 	R0 R0 K5 ; R0 := R0["MouseInWorldStateWindow"]
	15	[7658]	TEST     	R0 1 ; if R0 then PC := 21
	16	[7658]	JMP      	21 ; PC := 21
	17	[7658]	GETGLOBAL	R0 K4 ; R0 := _T
	18	[7658]	GETTABLE 	R0 R0 K6 ; R0 := R0["MouseInChatArea"]
	19	[7658]	TEST     	R0 0 ; if not R0 then PC := 22
	20	[7658]	JMP      	22 ; PC := 22
	21	[7659]	RETURN   	R0 1 ; return 
	22	[7662]	GETUPVAL 	R0 U1 ; R0 := U1
	23	[7662]	TEST     	R0 0 ; if not R0 then PC := 29
	24	[7662]	JMP      	29 ; PC := 29
	25	[7663]	GETGLOBAL	R0 K7 ; R0 := mDrag
	26	[7663]	SELF     	R0 R0 K8 ; R1 := R0; R0 := R0[0xd033d908]
	27	[7663]	CALL     	R0 2 1 ; R0(R1)
	28	[7663]	JMP      	129 ; PC := 129
	29	[7664]	GETGLOBAL	R0 K9 ; R0 := mSmoothZoom
	30	[7664]	GETTABLE 	R0 R0 K10 ; R0 := R0["mTargetVal"]
	31	[7664]	GETGLOBAL	R1 K11 ; R1 := Zoom
	32	[7664]	GETTABLE 	R1 R1 K12 ; R1 := R1["STARTING_ZOOM"]
	33	[7664]	EQ       	1 R0 R1 ; if R0 == R1 then PC := 129
	34	[7664]	JMP      	129 ; PC := 129
	35	[7665]	GETGLOBAL	R0 K7 ; R0 := mDrag
	36	[7665]	SELF     	R0 R0 K13 ; R1 := R0; R0 := R0[0x4c4f8717]
	37	[7665]	LOADK    	R2 K14 ; R2 := "x"
	38	[7665]	LOADK    	R3 := 0.500000
	39	[7665]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	40	[7666]	GETGLOBAL	R0 K7 ; R0 := mDrag
	41	[7666]	SELF     	R0 R0 K13 ; R1 := R0; R0 := R0[0x4c4f8717]
	42	[7666]	LOADK    	R2 K15 ; R2 := "y"
	43	[7666]	LOADK    	R3 := 0.500000
	44	[7666]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	45	[7667]	GETGLOBAL	R0 K9 ; R0 := mSmoothZoom
	46	[7667]	SELF     	R0 R0 K16 ; R1 := R0; R0 := R0[0x188e2bee]
	47	[7667]	GETGLOBAL	R2 K11 ; R2 := Zoom
	48	[7667]	GETTABLE 	R2 R2 K12 ; R2 := R2["STARTING_ZOOM"]
	49	[7667]	CALL     	R0 3 1 ; R0(R1,R2)
	50	[7669]	GETGLOBAL	R0 K17 ; R0 := mFxNodes
	51	[7669]	GETUPVAL 	R1 U2 ; R1 := U2
	52	[7669]	GETTABLE 	R1 R1 K19 ; R1 := R1[0x06d055f9]
	53	[7669]	GETGLOBAL	R2 K20 ; R2 := mVorsPrizeQuestActiveNode
	54	[7669]	LOADK    	R3 := 1.000000
	55	[7669]	LOADK    	R4 := 2.000000
	56	[7669]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	57	[7669]	SETTABLE 	R0 K18 R1 ; R0["NotificationTime"] := R1
	58	[7671]	GETGLOBAL	R0 K21 ; R0 := 0x7b998233
	59	[7671]	GETGLOBAL	R1 K22 ; R1 := mZoomedRegion
	60	[7671]	CALL     	R0 2 2 ; R0 := R0(R1)
	61	[7671]	TEST     	R0 1 ; if R0 then PC := 88
	62	[7671]	JMP      	88 ; PC := 88
	63	[7671]	GETGLOBAL	R0 K21 ; R0 := 0x7b998233
	64	[7671]	GETGLOBAL	R1 K22 ; R1 := mZoomedRegion
	65	[7671]	GETTABLE 	R1 R1 K23 ; R1 := R1["instance"]
	66	[7671]	CALL     	R0 2 2 ; R0 := R0(R1)
	67	[7671]	TEST     	R0 1 ; if R0 then PC := 88
	68	[7671]	JMP      	88 ; PC := 88
	69	[7671]	GETGLOBAL	R0 K21 ; R0 := 0x7b998233
	70	[7671]	GETGLOBAL	R1 K22 ; R1 := mZoomedRegion
	71	[7671]	GETTABLE 	R1 R1 K24 ; R1 := R1["zoomedInEffects"]
	72	[7671]	CALL     	R0 2 2 ; R0 := R0(R1)
	73	[7671]	TEST     	R0 1 ; if R0 then PC := 88
	74	[7671]	JMP      	88 ; PC := 88
	75	[7672]	GETGLOBAL	R0 K22 ; R0 := mZoomedRegion
	76	[7672]	GETTABLE 	R0 R0 K23 ; R0 := R0["instance"]
	77	[7672]	SELF     	R0 R0 K25 ; R1 := R0; R0 := R0[0xc9f6a7d7]
	78	[7672]	GETGLOBAL	R2 K22 ; R2 := mZoomedRegion
	79	[7672]	GETTABLE 	R2 R2 K24 ; R2 := R2["zoomedInEffects"]
	80	[7672]	CALL     	R0 3 2 ; R0 := R0(R1,R2)
	81	[7673]	GETGLOBAL	R1 K21 ; R1 := 0x7b998233
	82	[7673]	MOVE     	R2 R0 ; R2 := R0
	83	[7673]	CALL     	R1 2 2 ; R1 := R1(R2)
	84	[7673]	TEST     	R1 1 ; if R1 then PC := 88
	85	[7673]	JMP      	88 ; PC := 88
	86	[7674]	SELF     	R1 R0 K26 ; R2 := R0; R1 := R0[0xa2880940]
	87	[7674]	CALL     	R1 2 1 ; R1(R2)
	88	[7677]	GETUPVAL 	R1 U3 ; R1 := U3
	89	[7677]	LOADNIL  	R2 R2 ; R2 := nil
	90	[7677]	CALL     	R1 2 1 ; R1(R2)
	91	[7678]	LOADNIL  	R1 R1 ; R1 := nil
	92	[7678]	SETGLOBALHASH	R1 K27 ; mZoomedSuper := R1
	93	[7680]	GETGLOBAL	R1 K28 ; R1 := 0x34291f5c
	94	[7680]	GETTABLE 	R1 R1 K29 ; R1 := R1[0x781669d7]
	95	[7680]	CALL     	R1 1 2 ; R1 := R1()
	96	[7680]	TEST     	R1 0 ; if not R1 then PC := 103
	97	[7680]	JMP      	103 ; PC := 103
	98	[7682]	GETUPVAL 	R1 U4 ; R1 := U4
	99	[7682]	GETTABLE 	R1 R1 K30 ; R1 := R1[0x64ac06bf]
	100	[7682]	CALL     	R1 1 1 ; R1()
	101	[7683]	GETGLOBAL	R1 K31 ; R1 := mHover
	102	[7683]	SETTABLE 	R1 K32 K33 ; R1["node"] := nil
	103	[7686]	GETUPVAL 	R1 U5 ; R1 := U5
	104	[7686]	CALL     	R1 1 1 ; R1()
	105	[7688]	GETUPVAL 	R1 U2 ; R1 := U2
	106	[7688]	GETTABLE 	R1 R1 K34 ; R1 := R1[0x659d451f]
	107	[7688]	GETGLOBAL	R2 K35 ; R2 := 0xe0344d6e
	108	[7688]	CALL     	R1 2 1 ; R1(R2)
	109	[7690]	GETUPVAL 	R1 U6 ; R1 := U6
	110	[7690]	GETTABLE 	R1 R1 K36 ; R1 := R1[1.000000]
	111	[7690]	SELF     	R1 R1 K16 ; R2 := R1; R1 := R1[0x188e2bee]
	112	[7690]	GETUPVAL 	R3 U7 ; R3 := U7
	113	[7690]	GETTABLE 	R3 R3 K37 ; R3 := R3["red"]
	114	[7690]	CALL     	R1 3 1 ; R1(R2,R3)
	115	[7691]	GETUPVAL 	R1 U6 ; R1 := U6
	116	[7691]	GETTABLE 	R1 R1 K38 ; R1 := R1[2.000000]
	117	[7691]	SELF     	R1 R1 K16 ; R2 := R1; R1 := R1[0x188e2bee]
	118	[7691]	GETUPVAL 	R3 U7 ; R3 := U7
	119	[7691]	GETTABLE 	R3 R3 K39 ; R3 := R3["green"]
	120	[7691]	CALL     	R1 3 1 ; R1(R2,R3)
	121	[7692]	GETUPVAL 	R1 U6 ; R1 := U6
	122	[7692]	GETTABLE 	R1 R1 K40 ; R1 := R1[3.000000]
	123	[7692]	SELF     	R1 R1 K16 ; R2 := R1; R1 := R1[0x188e2bee]
	124	[7692]	GETUPVAL 	R3 U7 ; R3 := U7
	125	[7692]	GETTABLE 	R3 R3 K41 ; R3 := R3["blue"]
	126	[7692]	CALL     	R1 3 1 ; R1(R2,R3)
	127	[7694]	GETUPVAL 	R1 U8 ; R1 := U8
	128	[7694]	CALL     	R1 1 1 ; R1()
	129	[7696]	RETURN   	R0 1 ; return 

function #162 <?:7698,7700> (6 instructions, 24 bytes at 00000211309BB080)
0 params, 4 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[7699]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[7699]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xe4162eed]
	3	[7699]	LOADK    	R2 K2 ; R2 := "onKeyUp_MENU_RIGHT_CLICK"
	4	[7699]	LOADK    	R3 K3 ; R3 := ""
	5	[7699]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	6	[7700]	RETURN   	R0 1 ; return 

function #163 <?:7702,7704> (6 instructions, 24 bytes at 000002111CDF6090)
0 params, 4 slots, 0 upvalues, 0 locals, 4 constants, 0 functions
	1	[7703]	GETGLOBAL	R0 K0 ; R0 := 0xae91e43b
	2	[7703]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0xe4162eed]
	3	[7703]	LOADK    	R2 K2 ; R2 := "onKeyDown_MENU_RIGHT_CLICK"
	4	[7703]	LOADK    	R3 K3 ; R3 := ""
	5	[7703]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	6	[7704]	RETURN   	R0 1 ; return 

function #164 <?:7706,7708> (6 instructions, 24 bytes at 000002111CDF6170)
2 params, 5 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[7707]	GETUPVAL 	R2 U0 ; R2 := U0
	2	[7707]	GETTABLE 	R2 R2 K0 ; R2 := R2[0x0ca789f3]
	3	[7707]	MOVE     	R3 R0 ; R3 := R0
	4	[7707]	MOVE     	R4 R1 ; R4 := R1
	5	[7707]	CALL     	R2 3 1 ; R2(R3,R4)
	6	[7708]	RETURN   	R0 1 ; return 

function #165 <?:7710,7713> (9 instructions, 36 bytes at 000002111B2CD050)
2 params, 5 slots, 1 upvalue, 0 locals, 3 constants, 0 functions
	1	[7711]	SUB      	R2 R1 K0 ; R2 := R1 - 1.000000
	2	[7711]	UNM      	R2 R2 ; R2 := ^ R2
	3	[7711]	MUL      	R1 R2 K1 ; R1 := R2 * 3.000000
	4	[7712]	GETUPVAL 	R2 U0 ; R2 := U0
	5	[7712]	GETTABLE 	R2 R2 K2 ; R2 := R2[0x0ca789f3]
	6	[7712]	MOVE     	R3 R0 ; R3 := R0
	7	[7712]	MOVE     	R4 R1 ; R4 := R1
	8	[7712]	CALL     	R2 3 1 ; R2(R3,R4)
	9	[7713]	RETURN   	R0 1 ; return 

function #166 <?:7715,7826> (391 instructions, 1564 bytes at 000002111B2CD160)
3 params, 16 slots, 15 upvalues, 0 locals, 73 constants, 0 functions
	1	[7716]	EQ       	0 R1 K0 ; if R1 ~= "EN_TOUCH_PINCH" then PC := 19
	2	[7716]	JMP      	19 ; PC := 19
	3	[7717]	GETUPVAL 	R3 U0 ; R3 := U0
	4	[7717]	GETTABLE 	R3 R3 K1 ; R3 := R3[0x06d055f9]
	5	[7717]	EQ       	1 R2 K2 ; if R2 == "1" then PC := 8
	6	[7717]	JMP      	8 ; PC := 8
	7	[7717]	OP_LOADBOOL	R4 0 1 ; R4 := false; PC := 8
	8	[7717]	OP_LOADBOOL	R4 1 0 ; R4 := true
	9	[7717]	OP_LOADBOOL	R5 1 0 ; R5 := true
	10	[7717]	OP_LOADBOOL	R6 0 0 ; R6 := false
	11	[7717]	CALL     	R3 4 2 ; R3 := R3(R4,R5,R6)
	12	[7718]	GETUPVAL 	R4 U1 ; R4 := U1
	13	[7718]	SETTABLE 	R4 K3 R3 ; R4["isLMBDown"] := R3
	14	[7719]	TEST     	R3 1 ; if R3 then PC := 19
	15	[7719]	JMP      	19 ; PC := 19
	16	[7720]	GETGLOBAL	R4 K4 ; R4 := mDrag
	17	[7720]	SELF     	R4 R4 K5 ; R5 := R4; R4 := R4[0xcc5f3150]
	18	[7720]	CALL     	R4 2 1 ; R4(R5)
	19	[7723]	GETUPVAL 	R4 U2 ; R4 := U2
	20	[7723]	TEST     	R4 0 ; if not R4 then PC := 391
	21	[7723]	JMP      	391 ; PC := 391
	22	[7724]	GETGLOBAL	R4 K6 ; R4 := 0x9ba7909f
	23	[7724]	SELF     	R4 R4 K7 ; R5 := R4; R4 := R4[0xbcfb64ab]
	24	[7724]	GETUPVAL 	R6 U0 ; R6 := U0
	25	[7724]	GETTABLE 	R6 R6 K8 ; R6 := R6[0xc472e470]
	26	[7724]	CALL     	R6 1 0 ; R6,... := R6()
	27	[7724]	CALL     	R4 0 2 ; R4 := R4(R5,...)
	28	[7725]	GETGLOBAL	R5 K9 ; R5 := 0x7b998233
	29	[7725]	MOVE     	R6 R4 ; R6 := R4
	30	[7725]	CALL     	R5 2 2 ; R5 := R5(R6)
	31	[7725]	TEST     	R5 1 ; if R5 then PC := 38
	32	[7725]	JMP      	38 ; PC := 38
	33	[7725]	SELF     	R5 R4 K10 ; R6 := R4; R5 := R4[0x40eb8ac7]
	34	[7725]	CALL     	R5 2 2 ; R5 := R5(R6)
	35	[7725]	EQ       	0 R5 K11 ; if R5 ~= "MessageBox" then PC := 38
	36	[7725]	JMP      	38 ; PC := 38
	37	[7726]	RETURN   	R0 1 ; return 
	38	[7729]	EQ       	0 R1 K12 ; if R1 ~= "EN_LSHIFT" then PC := 55
	39	[7729]	JMP      	55 ; PC := 55
	40	[7730]	GETUPVAL 	R5 U3 ; R5 := U3
	41	[7730]	EQ       	1 R2 K2 ; if R2 == "1" then PC := 44
	42	[7730]	JMP      	44 ; PC := 44
	43	[7730]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 44
	44	[7730]	OP_LOADBOOL	R6 1 0 ; R6 := true
	45	[7730]	SETTABLE 	R5 K13 R6 ; R5["mShiftDown"] := R6
	46	[7731]	GETUPVAL 	R5 U4 ; R5 := U4
	47	[7731]	GETUPVAL 	R6 U5 ; R6 := U5
	48	[7731]	GETTABLE 	R6 R6 K14 ; R6 := R6["EDIT_NODE_DECOS"]
	49	[7731]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 55
	50	[7731]	JMP      	55 ; PC := 55
	51	[7732]	GETUPVAL 	R5 U6 ; R5 := U6
	52	[7732]	CALL     	R5 1 1 ; R5()
	53	[7733]	GETUPVAL 	R5 U7 ; R5 := U7
	54	[7733]	CALL     	R5 1 1 ; R5()
	55	[7736]	EQ       	0 R1 K15 ; if R1 ~= "EN_LCONTROL" then PC := 72
	56	[7736]	JMP      	72 ; PC := 72
	57	[7737]	GETUPVAL 	R5 U3 ; R5 := U3
	58	[7737]	EQ       	1 R2 K2 ; if R2 == "1" then PC := 61
	59	[7737]	JMP      	61 ; PC := 61
	60	[7737]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 61
	61	[7737]	OP_LOADBOOL	R6 1 0 ; R6 := true
	62	[7737]	SETTABLE 	R5 K16 R6 ; R5["mControlDown"] := R6
	63	[7738]	GETUPVAL 	R5 U4 ; R5 := U4
	64	[7738]	GETUPVAL 	R6 U5 ; R6 := U5
	65	[7738]	GETTABLE 	R6 R6 K14 ; R6 := R6["EDIT_NODE_DECOS"]
	66	[7738]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 72
	67	[7738]	JMP      	72 ; PC := 72
	68	[7739]	GETUPVAL 	R5 U6 ; R5 := U6
	69	[7739]	CALL     	R5 1 1 ; R5()
	70	[7740]	GETUPVAL 	R5 U7 ; R5 := U7
	71	[7740]	CALL     	R5 1 1 ; R5()
	72	[7743]	EQ       	0 R1 K17 ; if R1 ~= "EN_LALT" then PC := 89
	73	[7743]	JMP      	89 ; PC := 89
	74	[7744]	GETUPVAL 	R5 U3 ; R5 := U3
	75	[7744]	EQ       	1 R2 K2 ; if R2 == "1" then PC := 78
	76	[7744]	JMP      	78 ; PC := 78
	77	[7744]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 78
	78	[7744]	OP_LOADBOOL	R6 1 0 ; R6 := true
	79	[7744]	SETTABLE 	R5 K18 R6 ; R5["mAltDown"] := R6
	80	[7745]	GETUPVAL 	R5 U4 ; R5 := U4
	81	[7745]	GETUPVAL 	R6 U5 ; R6 := U5
	82	[7745]	GETTABLE 	R6 R6 K14 ; R6 := R6["EDIT_NODE_DECOS"]
	83	[7745]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 89
	84	[7745]	JMP      	89 ; PC := 89
	85	[7746]	GETUPVAL 	R5 U6 ; R5 := U6
	86	[7746]	CALL     	R5 1 1 ; R5()
	87	[7747]	GETUPVAL 	R5 U7 ; R5 := U7
	88	[7747]	CALL     	R5 1 1 ; R5()
	89	[7751]	EQ       	0 R1 K19 ; if R1 ~= "EN_E" then PC := 106
	90	[7751]	JMP      	106 ; PC := 106
	91	[7751]	EQ       	0 R2 K2 ; if R2 ~= "1" then PC := 106
	92	[7751]	JMP      	106 ; PC := 106
	93	[7752]	GETUPVAL 	R5 U8 ; R5 := U8
	94	[7752]	GETUPVAL 	R6 U0 ; R6 := U0
	95	[7752]	GETTABLE 	R6 R6 K20 ; R6 := R6[0x38a41ce7]
	96	[7752]	GETUPVAL 	R7 U4 ; R7 := U4
	97	[7752]	GETUPVAL 	R8 U0 ; R8 := U0
	98	[7752]	GETTABLE 	R8 R8 K21 ; R8 := R8["INCREMENT"]
	99	[7752]	LOADK    	R9 := 1.000000
	100	[7752]	GETUPVAL 	R10 U5 ; R10 := U5
	101	[7752]	GETTABLE 	R10 R10 K22 ; R10 := R10["MAX_VALUE"]
	102	[7752]	SUB      	R10 R10 K23 ; R10 := R10 - 1.000000
	103	[7752]	CALL     	R6 5 0 ; R6,... := R6(R7,R8,R9,R10)
	104	[7752]	CALL     	R5 0 1 ; R5(R6,...)
	105	[7752]	JMP      	121 ; PC := 121
	106	[7753]	EQ       	0 R1 K24 ; if R1 ~= "EN_S" then PC := 121
	107	[7753]	JMP      	121 ; PC := 121
	108	[7753]	EQ       	0 R2 K2 ; if R2 ~= "1" then PC := 121
	109	[7753]	JMP      	121 ; PC := 121
	110	[7753]	GETGLOBAL	R5 K9 ; R5 := 0x7b998233
	111	[7753]	GETGLOBAL	R6 K25 ; R6 := mRadialSolarMap
	112	[7753]	CALL     	R5 2 2 ; R5 := R5(R6)
	113	[7753]	TEST     	R5 1 ; if R5 then PC := 121
	114	[7753]	JMP      	121 ; PC := 121
	115	[7754]	GETGLOBAL	R5 K25 ; R5 := mRadialSolarMap
	116	[7754]	SELF     	R5 R5 K26 ; R6 := R5; R5 := R5[0x720bebd9]
	117	[7754]	CALL     	R5 2 1 ; R5(R6)
	118	[7755]	GETGLOBAL	R5 K27 ; R5 := 0xd644c2f1
	119	[7755]	LOADK    	R6 K28 ; R6 := "SolarMap Serialized"
	120	[7755]	CALL     	R5 2 1 ; R5(R6)
	121	[7758]	EQ       	0 R1 K29 ; if R1 ~= "EN_A" then PC := 189
	122	[7758]	JMP      	189 ; PC := 189
	123	[7758]	EQ       	0 R2 K2 ; if R2 ~= "1" then PC := 189
	124	[7758]	JMP      	189 ; PC := 189
	125	[7758]	GETUPVAL 	R5 U4 ; R5 := U4
	126	[7758]	GETUPVAL 	R6 U5 ; R6 := U5
	127	[7758]	GETTABLE 	R6 R6 K30 ; R6 := R6["EDIT_EDGES"]
	128	[7758]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 189
	129	[7758]	JMP      	189 ; PC := 189
	130	[7759]	GETGLOBAL	R5 K9 ; R5 := 0x7b998233
	131	[7759]	GETUPVAL 	R6 U9 ; R6 := U9
	132	[7759]	GETTABLE 	R6 R6 K31 ; R6 := R6["mEdgeNode1"]
	133	[7759]	CALL     	R5 2 2 ; R5 := R5(R6)
	134	[7759]	TEST     	R5 1 ; if R5 then PC := 304
	135	[7759]	JMP      	304 ; PC := 304
	136	[7759]	GETGLOBAL	R5 K9 ; R5 := 0x7b998233
	137	[7759]	GETUPVAL 	R6 U9 ; R6 := U9
	138	[7759]	GETTABLE 	R6 R6 K32 ; R6 := R6["mEdgeNode2"]
	139	[7759]	CALL     	R5 2 2 ; R5 := R5(R6)
	140	[7759]	TEST     	R5 1 ; if R5 then PC := 304
	141	[7759]	JMP      	304 ; PC := 304
	142	[7760]	GETGLOBAL	R5 K33 ; R5 := mFlatEdges
	143	[7760]	GETGLOBAL	R6 K33 ; R6 := mFlatEdges
	144	[7760]	LEN      	R6 R6 ; R6 := # R6
	145	[7760]	NEWTABLE 	R7 0 3 ; R7 := {}
	146	[7761]	GETUPVAL 	R8 U9 ; R8 := U9
	147	[7761]	GETTABLE 	R8 R8 K31 ; R8 := R8["mEdgeNode1"]
	148	[7761]	SETTABLE 	R7 K34 R8 ; R7[0xae91e43b] := R8
	149	[7762]	GETUPVAL 	R8 U9 ; R8 := U9
	150	[7762]	GETTABLE 	R8 R8 K32 ; R8 := R8["mEdgeNode2"]
	151	[7762]	SETTABLE 	R7 K35 R8 ; R7[0x32302b4a] := R8
	152	[7763]	GETUPVAL 	R8 U9 ; R8 := U9
	153	[7763]	GETTABLE 	R8 R8 K31 ; R8 := R8["mEdgeNode1"]
	154	[7763]	GETTABLE 	R8 R8 K37 ; R8 := R8["isShortcut"]
	155	[7763]	TEST     	R8 0 ; if not R8 then PC := 160
	156	[7763]	JMP      	160 ; PC := 160
	157	[7763]	GETUPVAL 	R8 U9 ; R8 := U9
	158	[7763]	GETTABLE 	R8 R8 K32 ; R8 := R8["mEdgeNode2"]
	159	[7763]	GETTABLE 	R8 R8 K37 ; R8 := R8["isShortcut"]
	160	[7763]	SETTABLE 	R7 K36 R8 ; R7["IsShortcut"] := R8
	161	[7764]	SETTABLE 	R5 R6 R7 ; R5[R6] := R7
	162	[7766]	GETGLOBAL	R5 K25 ; R5 := mRadialSolarMap
	163	[7766]	SELF     	R5 R5 K38 ; R6 := R5; R5 := R5[0xfc9e0a51]
	164	[7766]	GETUPVAL 	R7 U9 ; R7 := U9
	165	[7766]	GETTABLE 	R7 R7 K31 ; R7 := R7["mEdgeNode1"]
	166	[7766]	GETTABLE 	R7 R7 K39 ; R7 := R7["radialSector"]
	167	[7766]	GETUPVAL 	R8 U9 ; R8 := U9
	168	[7766]	GETTABLE 	R8 R8 K32 ; R8 := R8["mEdgeNode2"]
	169	[7766]	GETTABLE 	R8 R8 K39 ; R8 := R8["radialSector"]
	170	[7766]	CALL     	R5 4 1 ; R5(R6,R7,R8)
	171	[7768]	GETGLOBAL	R5 K25 ; R5 := mRadialSolarMap
	172	[7768]	SELF     	R5 R5 K41 ; R6 := R5; R5 := R5[0xb4b2b7b0]
	173	[7768]	CALL     	R5 2 2 ; R5 := R5(R6)
	174	[7768]	SETGLOBALHASH	R5 K40 ; mMapEdges := R5
	175	[7769]	GETUPVAL 	R5 U9 ; R5 := U9
	176	[7769]	SETTABLE 	R5 K31 K42 ; R5["mEdgeNode1"] := nil
	177	[7770]	GETUPVAL 	R5 U9 ; R5 := U9
	178	[7770]	SETTABLE 	R5 K32 K42 ; R5["mEdgeNode2"] := nil
	179	[7771]	GETGLOBAL	R5 K43 ; R5 := 0xae91e43b
	180	[7771]	SELF     	R5 R5 K44 ; R6 := R5; R5 := R5[0x5f56eeab]
	181	[7771]	LOADK    	R7 K45 ; R7 := "ScreenModeLabel"
	182	[7771]	LOADK    	R8 := 29.000000
	183	[7771]	GETUPVAL 	R9 U10 ; R9 := U10
	184	[7771]	CALL     	R9 1 0 ; R9,... := R9()
	185	[7771]	CALL     	R5 0 1 ; R5(R6,...)
	186	[7772]	GETUPVAL 	R5 U11 ; R5 := U11
	187	[7772]	CALL     	R5 1 1 ; R5()
	188	[7773]	JMP      	304 ; PC := 304
	189	[7775]	EQ       	0 R1 K46 ; if R1 ~= "EN_D" then PC := 287
	190	[7775]	JMP      	287 ; PC := 287
	191	[7775]	EQ       	0 R2 K2 ; if R2 ~= "1" then PC := 287
	192	[7775]	JMP      	287 ; PC := 287
	193	[7775]	GETUPVAL 	R5 U4 ; R5 := U4
	194	[7775]	GETUPVAL 	R6 U5 ; R6 := U5
	195	[7775]	GETTABLE 	R6 R6 K30 ; R6 := R6["EDIT_EDGES"]
	196	[7775]	EQ       	0 R5 R6 ; if R5 ~= R6 then PC := 287
	197	[7775]	JMP      	287 ; PC := 287
	198	[7776]	GETGLOBAL	R5 K9 ; R5 := 0x7b998233
	199	[7776]	GETUPVAL 	R6 U9 ; R6 := U9
	200	[7776]	GETTABLE 	R6 R6 K31 ; R6 := R6["mEdgeNode1"]
	201	[7776]	CALL     	R5 2 2 ; R5 := R5(R6)
	202	[7776]	TEST     	R5 1 ; if R5 then PC := 304
	203	[7776]	JMP      	304 ; PC := 304
	204	[7776]	GETGLOBAL	R5 K9 ; R5 := 0x7b998233
	205	[7776]	GETUPVAL 	R6 U9 ; R6 := U9
	206	[7776]	GETTABLE 	R6 R6 K32 ; R6 := R6["mEdgeNode2"]
	207	[7776]	CALL     	R5 2 2 ; R5 := R5(R6)
	208	[7776]	TEST     	R5 1 ; if R5 then PC := 304
	209	[7776]	JMP      	304 ; PC := 304
	210	[7777]	LOADK    	R5 := 1.000000
	211	[7777]	GETGLOBAL	R6 K33 ; R6 := mFlatEdges
	212	[7777]	LEN      	R6 R6 ; R6 := # R6
	213	[7777]	LOADK    	R7 := 1.000000
	214	[7777]	FORPREP  	R5 259 ; R5 -= R7; PC := 259
	215	[7778]	GETGLOBAL	R9 K33 ; R9 := mFlatEdges
	216	[7778]	GETTABLE 	R9 R9 R8 ; R9 := R9[R8]
	217	[7779]	GETTABLE 	R10 R9 K34 ; R10 := R9["NodeA"]
	218	[7779]	GETTABLE 	R10 R10 K47 ; R10 := R10["name"]
	219	[7779]	GETUPVAL 	R11 U9 ; R11 := U9
	220	[7779]	GETTABLE 	R11 R11 K31 ; R11 := R11["mEdgeNode1"]
	221	[7779]	GETTABLE 	R11 R11 K39 ; R11 := R11["radialSector"]
	222	[7779]	GETTABLE 	R11 R11 K47 ; R11 := R11["name"]
	223	[7779]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 233
	224	[7779]	JMP      	233 ; PC := 233
	225	[7779]	GETTABLE 	R10 R9 K35 ; R10 := R9["NodeB"]
	226	[7779]	GETTABLE 	R10 R10 K47 ; R10 := R10["name"]
	227	[7779]	GETUPVAL 	R11 U9 ; R11 := U9
	228	[7779]	GETTABLE 	R11 R11 K32 ; R11 := R11["mEdgeNode2"]
	229	[7779]	GETTABLE 	R11 R11 K39 ; R11 := R11["radialSector"]
	230	[7779]	GETTABLE 	R11 R11 K47 ; R11 := R11["name"]
	231	[7779]	EQ       	1 R10 R11 ; if R10 == R11 then PC := 249
	232	[7779]	JMP      	249 ; PC := 249
	233	[7780]	GETTABLE 	R10 R9 K35 ; R10 := R9["NodeB"]
	234	[7780]	GETTABLE 	R10 R10 K47 ; R10 := R10["name"]
	235	[7780]	GETUPVAL 	R11 U9 ; R11 := U9
	236	[7780]	GETTABLE 	R11 R11 K31 ; R11 := R11["mEdgeNode1"]
	237	[7780]	GETTABLE 	R11 R11 K39 ; R11 := R11["radialSector"]
	238	[7780]	GETTABLE 	R11 R11 K47 ; R11 := R11["name"]
	239	[7780]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 259
	240	[7780]	JMP      	259 ; PC := 259
	241	[7780]	GETTABLE 	R10 R9 K34 ; R10 := R9["NodeA"]
	242	[7780]	GETTABLE 	R10 R10 K47 ; R10 := R10["name"]
	243	[7780]	GETUPVAL 	R11 U9 ; R11 := U9
	244	[7780]	GETTABLE 	R11 R11 K32 ; R11 := R11["mEdgeNode2"]
	245	[7780]	GETTABLE 	R11 R11 K39 ; R11 := R11["radialSector"]
	246	[7780]	GETTABLE 	R11 R11 K47 ; R11 := R11["name"]
	247	[7780]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 259
	248	[7780]	JMP      	259 ; PC := 259
	249	[7782]	GETGLOBAL	R10 K48 ; R10 := 0x1211d00f
	250	[7782]	SELF     	R10 R10 K49 ; R11 := R10; R10 := R10[0x59c96e77]
	251	[7782]	GETTABLE 	R12 R9 K50 ; R12 := R9["Instance"]
	252	[7782]	CALL     	R10 3 1 ; R10(R11,R12)
	253	[7783]	GETGLOBAL	R10 K51 ; R10 := 0x33bdd652
	254	[7783]	GETTABLE 	R10 R10 K52 ; R10 := R10[0x9c1f3b5a]
	255	[7783]	GETGLOBAL	R11 K33 ; R11 := mFlatEdges
	256	[7783]	MOVE     	R12 R8 ; R12 := R8
	257	[7783]	CALL     	R10 3 1 ; R10(R11,R12)
	258	[7784]	JMP      	260 ; PC := 260
	259	[7777]	FORLOOP  	R5 215 ; R5 += R7; if R5 <= R6 then begin PC := 215; R8 := R5 end
	260	[7788]	GETGLOBAL	R10 K25 ; R10 := mRadialSolarMap
	261	[7788]	SELF     	R10 R10 K53 ; R11 := R10; R10 := R10[0x84b7abdc]
	262	[7788]	GETUPVAL 	R12 U9 ; R12 := U9
	263	[7788]	GETTABLE 	R12 R12 K31 ; R12 := R12["mEdgeNode1"]
	264	[7788]	GETTABLE 	R12 R12 K39 ; R12 := R12["radialSector"]
	265	[7788]	GETUPVAL 	R13 U9 ; R13 := U9
	266	[7788]	GETTABLE 	R13 R13 K32 ; R13 := R13["mEdgeNode2"]
	267	[7788]	GETTABLE 	R13 R13 K39 ; R13 := R13["radialSector"]
	268	[7788]	CALL     	R10 4 1 ; R10(R11,R12,R13)
	269	[7790]	GETGLOBAL	R10 K25 ; R10 := mRadialSolarMap
	270	[7790]	SELF     	R10 R10 K41 ; R11 := R10; R10 := R10[0xb4b2b7b0]
	271	[7790]	CALL     	R10 2 2 ; R10 := R10(R11)
	272	[7790]	SETGLOBALHASH	R10 K40 ; mMapEdges := R10
	273	[7792]	GETUPVAL 	R10 U9 ; R10 := U9
	274	[7792]	SETTABLE 	R10 K31 K42 ; R10["mEdgeNode1"] := nil
	275	[7793]	GETUPVAL 	R10 U9 ; R10 := U9
	276	[7793]	SETTABLE 	R10 K32 K42 ; R10["mEdgeNode2"] := nil
	277	[7794]	GETGLOBAL	R10 K43 ; R10 := 0xae91e43b
	278	[7794]	SELF     	R10 R10 K44 ; R11 := R10; R10 := R10[0x5f56eeab]
	279	[7794]	LOADK    	R12 K45 ; R12 := "ScreenModeLabel"
	280	[7794]	LOADK    	R13 := 29.000000
	281	[7794]	GETUPVAL 	R14 U10 ; R14 := U10
	282	[7794]	CALL     	R14 1 0 ; R14,... := R14()
	283	[7794]	CALL     	R10 0 1 ; R10(R11,...)
	284	[7795]	GETUPVAL 	R10 U11 ; R10 := U11
	285	[7795]	CALL     	R10 1 1 ; R10()
	286	[7796]	JMP      	304 ; PC := 304
	287	[7797]	EQ       	0 R1 K54 ; if R1 ~= "EN_C" then PC := 304
	288	[7797]	JMP      	304 ; PC := 304
	289	[7797]	EQ       	0 R2 K2 ; if R2 ~= "1" then PC := 304
	290	[7797]	JMP      	304 ; PC := 304
	291	[7797]	GETUPVAL 	R10 U4 ; R10 := U4
	292	[7797]	GETUPVAL 	R11 U5 ; R11 := U5
	293	[7797]	GETTABLE 	R11 R11 K30 ; R11 := R11["EDIT_EDGES"]
	294	[7797]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 304
	295	[7797]	JMP      	304 ; PC := 304
	296	[7798]	GETGLOBAL	R10 K9 ; R10 := 0x7b998233
	297	[7798]	GETUPVAL 	R11 U9 ; R11 := U9
	298	[7798]	GETTABLE 	R11 R11 K31 ; R11 := R11["mEdgeNode1"]
	299	[7798]	CALL     	R10 2 2 ; R10 := R10(R11)
	300	[7798]	TEST     	R10 1 ; if R10 then PC := 304
	301	[7798]	JMP      	304 ; PC := 304
	302	[7799]	GETUPVAL 	R10 U11 ; R10 := U11
	303	[7799]	CALL     	R10 1 1 ; R10()
	304	[7803]	EQ       	0 R1 K55 ; if R1 ~= "EN_R" then PC := 333
	305	[7803]	JMP      	333 ; PC := 333
	306	[7803]	EQ       	0 R2 K2 ; if R2 ~= "1" then PC := 333
	307	[7803]	JMP      	333 ; PC := 333
	308	[7803]	GETUPVAL 	R10 U4 ; R10 := U4
	309	[7803]	GETUPVAL 	R11 U5 ; R11 := U5
	310	[7803]	GETTABLE 	R11 R11 K56 ; R11 := R11["EDIT_REGION_FRAMING"]
	311	[7803]	EQ       	0 R10 R11 ; if R10 ~= R11 then PC := 333
	312	[7803]	JMP      	333 ; PC := 333
	313	[7804]	GETUPVAL 	R10 U9 ; R10 := U9
	314	[7804]	GETUPVAL 	R11 U0 ; R11 := U0
	315	[7804]	GETTABLE 	R11 R11 K20 ; R11 := R11[0x38a41ce7]
	316	[7804]	GETUPVAL 	R12 U9 ; R12 := U9
	317	[7804]	GETTABLE 	R12 R12 K57 ; R12 := R12["mFramingRegion"]
	318	[7804]	GETUPVAL 	R13 U0 ; R13 := U0
	319	[7804]	GETTABLE 	R13 R13 K21 ; R13 := R13["INCREMENT"]
	320	[7804]	LOADK    	R14 := 1.000000
	321	[7804]	GETGLOBAL	R15 K58 ; R15 := mRegions
	322	[7804]	LEN      	R15 R15 ; R15 := # R15
	323	[7804]	CALL     	R11 5 2 ; R11 := R11(R12,R13,R14,R15)
	324	[7804]	SETTABLE 	R10 K57 R11 ; R10["mFramingRegion"] := R11
	325	[7805]	GETUPVAL 	R10 U12 ; R10 := U12
	326	[7805]	GETGLOBAL	R11 K58 ; R11 := mRegions
	327	[7805]	GETUPVAL 	R12 U9 ; R12 := U9
	328	[7805]	GETTABLE 	R12 R12 K57 ; R12 := R12["mFramingRegion"]
	329	[7805]	GETTABLE 	R11 R11 R12 ; R11 := R11[R12]
	330	[7805]	CALL     	R10 2 1 ; R10(R11)
	331	[7806]	GETUPVAL 	R10 U13 ; R10 := U13
	332	[7806]	CALL     	R10 1 1 ; R10()
	333	[7808]	EQ       	0 R1 K59 ; if R1 ~= "EN_L" then PC := 347
	334	[7808]	JMP      	347 ; PC := 347
	335	[7808]	EQ       	0 R2 K2 ; if R2 ~= "1" then PC := 347
	336	[7808]	JMP      	347 ; PC := 347
	337	[7809]	GETGLOBAL	R10 K60 ; R10 := mVisibleTags
	338	[7809]	NOT      	R10 R10 ; R10 := not R10
	339	[7809]	SETGLOBALHASH	R10 K60 ; mVisibleTags := R10
	340	[7810]	GETGLOBAL	R10 K27 ; R10 := 0xd644c2f1
	341	[7810]	LOADK    	R11 K61 ; R11 := "Visible Tags:"
	342	[7810]	GETGLOBAL	R12 K62 ; R12 := 0x64fb1586
	343	[7810]	GETGLOBAL	R13 K60 ; R13 := mVisibleTags
	344	[7810]	CALL     	R12 2 2 ; R12 := R12(R13)
	345	[7810]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	346	[7810]	CALL     	R10 2 1 ; R10(R11)
	347	[7812]	EQ       	0 R1 K63 ; if R1 ~= "EN_U" then PC := 391
	348	[7812]	JMP      	391 ; PC := 391
	349	[7812]	EQ       	0 R2 K2 ; if R2 ~= "1" then PC := 391
	350	[7812]	JMP      	391 ; PC := 391
	351	[7813]	GETGLOBAL	R10 K64 ; R10 := _T
	352	[7813]	GETTABLE 	R10 R10 K65 ; R10 := R10["MAP_HideExtraUI"]
	353	[7813]	EQ       	0 R10 K42 ; if R10 ~= nil then PC := 357
	354	[7813]	JMP      	357 ; PC := 357
	355	[7814]	GETGLOBAL	R10 K64 ; R10 := _T
	356	[7814]	SETTABLE 	R10 K65 K66 ; R10["MAP_HideExtraUI"] := false
	357	[7816]	GETGLOBAL	R10 K64 ; R10 := _T
	358	[7816]	GETGLOBAL	R11 K64 ; R11 := _T
	359	[7816]	GETTABLE 	R11 R11 K65 ; R11 := R11["MAP_HideExtraUI"]
	360	[7816]	NOT      	R11 R11 ; R11 := not R11
	361	[7816]	SETTABLE 	R10 K65 R11 ; R10["MAP_HideExtraUI"] := R11
	362	[7817]	GETGLOBAL	R10 K27 ; R10 := 0xd644c2f1
	363	[7817]	LOADK    	R11 K67 ; R11 := "Visible Extra UI:"
	364	[7817]	GETGLOBAL	R12 K62 ; R12 := 0x64fb1586
	365	[7817]	GETGLOBAL	R13 K64 ; R13 := _T
	366	[7817]	GETTABLE 	R13 R13 K65 ; R13 := R13["MAP_HideExtraUI"]
	367	[7817]	CALL     	R12 2 2 ; R12 := R12(R13)
	368	[7817]	CONCAT   	R11 R11 R12 ; R11 := R11 .. R12
	369	[7817]	CALL     	R10 2 1 ; R10(R11)
	370	[7818]	GETGLOBAL	R10 K64 ; R10 := _T
	371	[7818]	GETTABLE 	R10 R10 K65 ; R10 := R10["MAP_HideExtraUI"]
	372	[7818]	TEST     	R10 0 ; if not R10 then PC := 378
	373	[7818]	JMP      	378 ; PC := 378
	374	[7819]	GETGLOBAL	R10 K64 ; R10 := _T
	375	[7819]	GETTABLE 	R10 R10 K68 ; R10 := R10[0x80172c74]
	376	[7819]	CALL     	R10 1 1 ; R10()
	377	[7819]	JMP      	382 ; PC := 382
	378	[7821]	GETGLOBAL	R10 K64 ; R10 := _T
	379	[7821]	GETTABLE 	R10 R10 K69 ; R10 := R10[0x3b0face1]
	380	[7821]	OP_LOADBOOL	R11 1 0 ; R11 := true
	381	[7821]	CALL     	R10 2 1 ; R10(R11)
	382	[7823]	GETUPVAL 	R10 U14 ; R10 := U14
	383	[7823]	GETTABLE 	R10 R10 K70 ; R10 := R10["Movie"]
	384	[7823]	SELF     	R10 R10 K71 ; R11 := R10; R10 := R10[0xaade900e]
	385	[7823]	LOADK    	R12 K72 ; R12 := "_root"
	386	[7823]	LOADK    	R13 := 11.000000
	387	[7823]	GETGLOBAL	R14 K64 ; R14 := _T
	388	[7823]	GETTABLE 	R14 R14 K65 ; R14 := R14["MAP_HideExtraUI"]
	389	[7823]	NOT      	R14 R14 ; R14 := not R14
	390	[7823]	CALL     	R10 5 1 ; R10(R11,R12,R13,R14)
	391	[7826]	RETURN   	R0 1 ; return 

function #167 <?:7828,7830> (6 instructions, 24 bytes at 000002111FBD61C0)
1 param, 4 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[7829]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[7829]	GETGLOBAL	R2 K0 ; R2 := 0x03f57322
	3	[7829]	MOVE     	R3 R0 ; R3 := R0
	4	[7829]	CALL     	R2 2 0 ; R2,... := R2(R3)
	5	[7829]	CALL     	R1 0 1 ; R1(R2,...)
	6	[7830]	RETURN   	R0 1 ; return 

function #168 <?:7832,7834> (6 instructions, 24 bytes at 000002112CF00910)
1 param, 4 slots, 1 upvalue, 0 locals, 1 constant, 0 functions
	1	[7833]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[7833]	GETGLOBAL	R2 K0 ; R2 := 0x03f57322
	3	[7833]	MOVE     	R3 R0 ; R3 := R0
	4	[7833]	CALL     	R2 2 0 ; R2,... := R2(R3)
	5	[7833]	CALL     	R1 0 1 ; R1(R2,...)
	6	[7834]	RETURN   	R0 1 ; return 

function #169 <?:7836,7845> (23 instructions, 92 bytes at 000002112CF009A0)
1 param, 4 slots, 1 upvalue, 0 locals, 7 constants, 0 functions
	1	[7837]	GETGLOBAL	R1 K0 ; R1 := mNodeAlphaValues
	2	[7837]	GETTABLE 	R1 R1 K1 ; R1 := R1["NodeLayerAlpha"]
	3	[7837]	GETGLOBAL	R2 K0 ; R2 := mNodeAlphaValues
	4	[7837]	GETTABLE 	R2 R2 K2 ; R2 := R2["MinNodeAlphaToClick"]
	5	[7837]	LE       	1 R1 R2 ; if R1 <= R2 then PC := 11
	6	[7837]	JMP      	11 ; PC := 11
	7	[7837]	GETGLOBAL	R1 K3 ; R1 := mInfoTip
	8	[7837]	GETTABLE 	R1 R1 K4 ; R1 := R1["NodeSelectionOpen"]
	9	[7837]	TEST     	R1 0 ; if not R1 then PC := 12
	10	[7837]	JMP      	12 ; PC := 12
	11	[7838]	RETURN   	R0 1 ; return 
	12	[7840]	GETGLOBAL	R1 K5 ; R1 := 0x03f57322
	13	[7840]	MOVE     	R2 R0 ; R2 := R0
	14	[7840]	CALL     	R1 2 2 ; R1 := R1(R2)
	15	[7840]	MOVE     	R0 R1 ; R0 := R1
	16	[7841]	GETUPVAL 	R1 U0 ; R1 := U0
	17	[7841]	GETTABLE 	R1 R1 R0 ; R1 := R1[R0]
	18	[7842]	GETGLOBAL	R2 K6 ; R2 := 0x7b998233
	19	[7842]	MOVE     	R3 R1 ; R3 := R1
	20	[7842]	CALL     	R2 2 2 ; R2 := R2(R3)
	21	[7842]	TEST     	R2 1 ; if R2 then PC := 23
	22	[7842]	JMP      	23 ; PC := 23
	23	[7845]	RETURN   	R0 1 ; return 

function #170 <?:7847,7850> (16 instructions, 64 bytes at 000002113025F390)
1 param, 6 slots, 1 upvalue, 0 locals, 6 constants, 0 functions
	1	[7848]	GETGLOBAL	R1 K0 ; R1 := 0xae91e43b
	2	[7848]	SELF     	R1 R1 K1 ; R2 := R1; R1 := R1[0x0c33ebb2]
	3	[7848]	LOADK    	R3 K2 ; R3 := "_root"
	4	[7848]	LOADK    	R4 K3 ; R4 := "noMenuSelection"
	5	[7848]	EQ       	1 R0 K4 ; if R0 == "true" then PC := 8
	6	[7848]	JMP      	8 ; PC := 8
	7	[7848]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 8
	8	[7848]	OP_LOADBOOL	R5 1 0 ; R5 := true
	9	[7848]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	10	[7849]	GETUPVAL 	R1 U0 ; R1 := U0
	11	[7849]	EQ       	1 R0 K4 ; if R0 == "true" then PC := 14
	12	[7849]	JMP      	14 ; PC := 14
	13	[7849]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 14
	14	[7849]	OP_LOADBOOL	R2 1 0 ; R2 := true
	15	[7849]	SETTABLE 	R1 K5 R2 ; R1["Open"] := R2
	16	[7850]	RETURN   	R0 1 ; return 

function #171 <?:7852,7856> (9 instructions, 36 bytes at 0000021125560140)
1 param, 3 slots, 2 upvalues, 0 locals, 2 constants, 0 functions
	1	[7853]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[7853]	EQ       	1 R0 K1 ; if R0 == "true" then PC := 5
	3	[7853]	JMP      	5 ; PC := 5
	4	[7853]	OP_LOADBOOL	R2 0 1 ; R2 := false; PC := 5
	5	[7853]	OP_LOADBOOL	R2 1 0 ; R2 := true
	6	[7853]	SETTABLE 	R1 K0 R2 ; R1["DioOpen"] := R2
	7	[7855]	GETUPVAL 	R1 U1 ; R1 := U1
	8	[7855]	CALL     	R1 1 1 ; R1()
	9	[7856]	RETURN   	R0 1 ; return 

function #172 <?:7858,7864> (12 instructions, 48 bytes at 000002111CE78D60)
4 params, 6 slots, 3 upvalues, 0 locals, 2 constants, 0 functions
	1	[7859]	GETUPVAL 	R4 U0 ; R4 := U0
	2	[7859]	CALL     	R4 1 1 ; R4()
	3	[7861]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	4	[7861]	GETUPVAL 	R5 U1 ; R5 := U1
	5	[7861]	GETTABLE 	R5 R5 K1 ; R5 := R5["cameraSpot"]
	6	[7861]	CALL     	R4 2 2 ; R4 := R4(R5)
	7	[7861]	TEST     	R4 1 ; if R4 then PC := 12
	8	[7861]	JMP      	12 ; PC := 12
	9	[7862]	GETUPVAL 	R4 U2 ; R4 := U2
	10	[7862]	OP_LOADBOOL	R5 1 0 ; R5 := true
	11	[7862]	CALL     	R4 2 1 ; R4(R5)
	12	[7864]	RETURN   	R0 1 ; return 

function #173 <?:7866,7871> (7 instructions, 28 bytes at 000002111CE78E70)
0 params, 4 slots, 2 upvalues, 0 locals, 2 constants, 1 function
	1	[7867]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[7867]	SELF     	R0 R0 K0 ; R1 := R0; R0 := R0[0xbd2e96ea]
	3	[7867]	LOADK    	R2 K1 ; R2 := 0.050000
	4	[7870]	CLOSURE  	R3 0 ; R3 := closure(Function #1)
	5	[7870]	GETUPVAL 	R0 U1 ; R0 := U1
	6	[7867]	CALL     	R0 4 1 ; R0(R1,R2,R3)
	7	[7871]	RETURN   	R0 1 ; return 

function #174 <?:7873,7875> (3 instructions, 12 bytes at 000002111F424870)
0 params, 2 slots, 0 upvalues, 0 locals, 1 constant, 0 functions
	1	[7874]	GETGLOBAL	R0 K0 ; R0 := mInputBlocked
	2	[7874]	RETURN   	R0 2 ; return R0 
	3	[7875]	RETURN   	R0 1 ; return 

function #175 <?:7877,7880> (5 instructions, 20 bytes at 000002111F424900)
1 param, 2 slots, 0 upvalues, 0 locals, 2 constants, 0 functions
	1	[7878]	GETGLOBAL	R1 K0 ; R1 := _T
	2	[7878]	SETTABLE 	R1 K1 R0 ; R1["mTrigger"] := R0
	3	[7879]	OP_LOADBOOL	R1 1 0 ; R1 := true
	4	[7879]	RETURN   	R1 2 ; return R1 
	5	[7880]	RETURN   	R0 1 ; return 

function #176 <?:7882,7905> (71 instructions, 284 bytes at 0000021128407A10)
0 params, 11 slots, 3 upvalues, 0 locals, 18 constants, 0 functions
	1	[7883]	GETGLOBAL	R0 K0 ; R0 := 0x25d99d89
	2	[7883]	SELF     	R0 R0 K1 ; R1 := R0; R0 := R0[0x25a6e75e]
	3	[7883]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[7883]	SELF     	R0 R0 K2 ; R1 := R0; R0 := R0[0x8e7c3b5e]
	5	[7883]	CALL     	R0 2 2 ; R0 := R0(R1)
	6	[7884]	GETUPVAL 	R1 U0 ; R1 := U0
	7	[7884]	GETTABLE 	R1 R1 K3 ; R1 := R1["OROKIN_TOWER_NODE_TAG"]
	8	[7886]	LOADK    	R2 := 1.000000
	9	[7886]	GETUPVAL 	R3 U1 ; R3 := U1
	10	[7886]	LEN      	R3 R3 ; R3 := # R3
	11	[7886]	LOADK    	R4 := 1.000000
	12	[7886]	FORPREP  	R2 68 ; R2 -= R4; PC := 68
	13	[7887]	GETGLOBAL	R6 K4 ; R6 := 0xce225efa
	14	[7887]	CALL     	R6 1 1 ; R6()
	15	[7888]	GETUPVAL 	R6 U1 ; R6 := U1
	16	[7888]	GETTABLE 	R6 R6 R5 ; R6 := R6[R5]
	17	[7889]	GETTABLE 	R7 R6 K5 ; R7 := R6["name"]
	18	[7889]	EQ       	0 R7 R1 ; if R7 ~= R1 then PC := 47
	19	[7889]	JMP      	47 ; PC := 47
	20	[7890]	GETGLOBAL	R7 K7 ; R7 := mDebugUnlockAllMissions
	21	[7890]	TEST     	R7 1 ; if R7 then PC := 26
	22	[7890]	JMP      	26 ; PC := 26
	23	[7890]	GETUPVAL 	R7 U0 ; R7 := U0
	24	[7890]	GETTABLE 	R7 R7 K8 ; R7 := R7[0x70bc04d0]
	25	[7890]	CALL     	R7 1 2 ; R7 := R7()
	26	[7890]	SETTABLE 	R6 K6 R7 ; R6["locationEnabled"] := R7
	27	[7891]	GETTABLE 	R7 R6 K6 ; R7 := R6["locationEnabled"]
	28	[7891]	SETTABLE 	R6 K9 R7 ; R6["edgesLocked"] := R7
	29	[7892]	GETGLOBAL	R7 K10 ; R7 := 0x7b998233
	30	[7892]	GETTABLE 	R8 R6 K11 ; R8 := R6["deco"]
	31	[7892]	CALL     	R7 2 2 ; R7 := R7(R8)
	32	[7892]	TEST     	R7 1 ; if R7 then PC := 68
	33	[7892]	JMP      	68 ; PC := 68
	34	[7892]	GETGLOBAL	R7 K10 ; R7 := 0x7b998233
	35	[7892]	GETTABLE 	R8 R6 K11 ; R8 := R6["deco"]
	36	[7892]	GETTABLE 	R8 R8 K12 ; R8 := R8["mInstance"]
	37	[7892]	CALL     	R7 2 2 ; R7 := R7(R8)
	38	[7892]	TEST     	R7 1 ; if R7 then PC := 68
	39	[7892]	JMP      	68 ; PC := 68
	40	[7893]	GETTABLE 	R7 R6 K11 ; R7 := R6["deco"]
	41	[7893]	GETTABLE 	R7 R7 K12 ; R7 := R7["mInstance"]
	42	[7893]	SELF     	R7 R7 K13 ; R8 := R7; R7 := R7[0x768274d6]
	43	[7893]	GETTABLE 	R9 R6 K6 ; R9 := R6["locationEnabled"]
	44	[7893]	OP_LOADBOOL	R10 1 0 ; R10 := true
	45	[7893]	CALL     	R7 4 1 ; R7(R8,R9,R10)
	46	[7894]	JMP      	68 ; PC := 68
	47	[7896]	GETTABLE 	R7 R6 K14 ; R7 := R6["radialSector"]
	48	[7896]	GETTABLE 	R7 R7 K15 ; R7 := R7["mission"]
	49	[7896]	GETTABLE 	R7 R7 K16 ; R7 := R7["questReq"]
	50	[7897]	GETGLOBAL	R8 K10 ; R8 := 0x7b998233
	51	[7897]	MOVE     	R9 R7 ; R9 := R7
	52	[7897]	CALL     	R8 2 2 ; R8 := R8(R9)
	53	[7897]	TEST     	R8 1 ; if R8 then PC := 68
	54	[7897]	JMP      	68 ; PC := 68
	55	[7898]	EQ       	1 R0 R7 ; if R0 == R7 then PC := 63
	56	[7898]	JMP      	63 ; PC := 63
	57	[7898]	GETUPVAL 	R8 U0 ; R8 := U0
	58	[7898]	GETTABLE 	R8 R8 K17 ; R8 := R8[0x52fb05b3]
	59	[7898]	MOVE     	R9 R7 ; R9 := R7
	60	[7898]	CALL     	R8 2 2 ; R8 := R8(R9)
	61	[7898]	JMP      	64 ; PC := 64
	62	[7898]	OP_LOADBOOL	R8 0 1 ; R8 := false; PC := 63
	63	[7898]	OP_LOADBOOL	R8 1 0 ; R8 := true
	64	[7898]	SETTABLE 	R6 K6 R8 ; R6["locationEnabled"] := R8
	65	[7899]	GETTABLE 	R8 R6 K6 ; R8 := R6["locationEnabled"]
	66	[7899]	NOT      	R8 R8 ; R8 := not R8
	67	[7899]	SETTABLE 	R6 K9 R8 ; R6["edgesLocked"] := R8
	68	[7886]	FORLOOP  	R2 13 ; R2 += R4; if R2 <= R3 then begin PC := 13; R5 := R2 end
	69	[7904]	GETUPVAL 	R8 U2 ; R8 := U2
	70	[7904]	CALL     	R8 1 1 ; R8()
	71	[7905]	RETURN   	R0 1 ; return 

function #177 <?:7907,7929> (67 instructions, 268 bytes at 00000211343B2B90)
0 params, 7 slots, 2 upvalues, 0 locals, 19 constants, 0 functions
	1	[7908]	GETGLOBAL	R0 K0 ; R0 := mFxNodes
	2	[7908]	NEWTABLE 	R1 0 0 ; R1 := {}
	3	[7908]	SETTABLE 	R0 K1 R1 ; R0["Pending"] := R1
	4	[7909]	GETGLOBAL	R0 K0 ; R0 := mFxNodes
	5	[7909]	NEWTABLE 	R1 0 0 ; R1 := {}
	6	[7909]	SETTABLE 	R0 K2 R1 ; R0["Quest"] := R1
	7	[7912]	GETGLOBAL	R0 K3 ; R0 := 0xcfc01047
	8	[7912]	GETUPVAL 	R1 U0 ; R1 := U0
	9	[7912]	CALL     	R0 2 4 ; R0,R1,R2 := R0(R1)
	10	[7912]	JMP      	65 ; PC := 65
	11	[7913]	GETTABLE 	R5 R4 K4 ; R5 := R4["isShortcut"]
	12	[7913]	TEST     	R5 1 ; if R5 then PC := 65
	13	[7913]	JMP      	65 ; PC := 65
	14	[7913]	GETTABLE 	R5 R4 K5 ; R5 := R4["isJunction"]
	15	[7913]	TEST     	R5 1 ; if R5 then PC := 65
	16	[7913]	JMP      	65 ; PC := 65
	17	[7914]	GETTABLE 	R5 R4 K6 ; R5 := R4["special"]
	18	[7914]	TEST     	R5 1 ; if R5 then PC := 60
	19	[7914]	JMP      	60 ; PC := 60
	20	[7915]	GETGLOBAL	R5 K7 ; R5 := _T
	21	[7915]	GETTABLE 	R5 R5 K8 ; R5 := R5["CachedSortieMissions"]
	22	[7915]	GETTABLE 	R5 R5 R3 ; R5 := R5[R3]
	23	[7915]	EQ       	0 R5 K9 ; if R5 ~= nil then PC := 60
	24	[7915]	JMP      	60 ; PC := 60
	25	[7916]	GETGLOBAL	R5 K7 ; R5 := _T
	26	[7916]	GETTABLE 	R5 R5 K10 ; R5 := R5["CachedActiveMissions"]
	27	[7916]	GETTABLE 	R5 R5 R3 ; R5 := R5[R3]
	28	[7916]	EQ       	0 R5 K9 ; if R5 ~= nil then PC := 60
	29	[7916]	JMP      	60 ; PC := 60
	30	[7917]	GETGLOBAL	R5 K7 ; R5 := _T
	31	[7917]	GETTABLE 	R5 R5 K11 ; R5 := R5["CachedAlerts"]
	32	[7917]	GETTABLE 	R5 R5 R3 ; R5 := R5[R3]
	33	[7917]	EQ       	0 R5 K9 ; if R5 ~= nil then PC := 60
	34	[7917]	JMP      	60 ; PC := 60
	35	[7918]	GETGLOBAL	R5 K7 ; R5 := _T
	36	[7918]	GETTABLE 	R5 R5 K12 ; R5 := R5["CachedInvasionInfo"]
	37	[7918]	GETTABLE 	R5 R5 R3 ; R5 := R5[R3]
	38	[7918]	EQ       	0 R5 K9 ; if R5 ~= nil then PC := 60
	39	[7918]	JMP      	60 ; PC := 60
	40	[7919]	GETGLOBAL	R5 K13 ; R5 := 0x0032441c
	41	[7919]	GETTABLE 	R5 R5 K14 ; R5 := R5["CachedGoalInfo"]
	42	[7919]	GETTABLE 	R5 R5 R3 ; R5 := R5[R3]
	43	[7919]	EQ       	0 R5 K9 ; if R5 ~= nil then PC := 60
	44	[7919]	JMP      	60 ; PC := 60
	45	[7920]	GETGLOBAL	R5 K13 ; R5 := 0x0032441c
	46	[7920]	GETTABLE 	R5 R5 K15 ; R5 := R5["MergedGoalNodes"]
	47	[7920]	GETTABLE 	R5 R5 R3 ; R5 := R5[R3]
	48	[7920]	EQ       	0 R5 K9 ; if R5 ~= nil then PC := 60
	49	[7920]	JMP      	60 ; PC := 60
	50	[7921]	GETGLOBAL	R5 K7 ; R5 := _T
	51	[7921]	GETTABLE 	R5 R5 K16 ; R5 := R5["CachedSyndicateMissions"]
	52	[7921]	GETTABLE 	R5 R5 R3 ; R5 := R5[R3]
	53	[7921]	EQ       	0 R5 K9 ; if R5 ~= nil then PC := 60
	54	[7921]	JMP      	60 ; PC := 60
	55	[7922]	GETGLOBAL	R5 K7 ; R5 := _T
	56	[7922]	GETTABLE 	R5 R5 K17 ; R5 := R5["CachedSkullNodes"]
	57	[7922]	GETTABLE 	R5 R5 R3 ; R5 := R5[R3]
	58	[7922]	EQ       	1 R5 K9 ; if R5 == nil then PC := 65
	59	[7922]	JMP      	65 ; PC := 65
	60	[7925]	GETUPVAL 	R5 U1 ; R5 := U1
	61	[7925]	MOVE     	R6 R4 ; R6 := R4
	62	[7925]	CALL     	R5 2 1 ; R5(R6)
	63	[7926]	GETGLOBAL	R5 K18 ; R5 := 0xce225efa
	64	[7926]	CALL     	R5 1 1 ; R5()
	65	[7912]	TFORLOOP 	R0 2 ; R3,R4 := R0(R1,R2); if R3 ~= nil then begin PC = 11; R2 := R3 end
	66	[7927]	JMP      	11 ; PC := 11
	67	[7929]	RETURN   	R0 1 ; return 

function #178 <?:7931,7951> (50 instructions, 200 bytes at 000002112CA546C0)
1 param, 14 slots, 1 upvalue, 0 locals, 17 constants, 0 functions
	1	[7932]	GETGLOBAL	R1 K0 ; R1 := 0x03f57322
	2	[7932]	MOVE     	R2 R0 ; R2 := R0
	3	[7932]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[7932]	MOVE     	R0 R1 ; R0 := R1
	5	[7933]	EQ       	0 R0 K1 ; if R0 ~= nil then PC := 8
	6	[7933]	JMP      	8 ; PC := 8
	7	[7934]	RETURN   	R0 1 ; return 
	8	[7937]	GETGLOBAL	R1 K2 ; R1 := mFxNodes
	9	[7937]	NEWTABLE 	R2 0 0 ; R2 := {}
	10	[7937]	SETTABLE 	R1 K3 R2 ; R1["Invasion"] := R2
	11	[7938]	GETGLOBAL	R1 K4 ; R1 := 0xcfc01047
	12	[7938]	GETGLOBAL	R2 K5 ; R2 := mParticles
	13	[7938]	GETTABLE 	R2 R2 K6 ; R2 := R2["InvasionFx"]
	14	[7938]	CALL     	R1 2 4 ; R1,R2,R3 := R1(R2)
	15	[7938]	JMP      	26 ; PC := 26
	16	[7939]	GETGLOBAL	R6 K7 ; R6 := 0x7b998233
	17	[7939]	GETTABLE 	R7 R5 K8 ; R7 := R5["mInstance"]
	18	[7939]	CALL     	R6 2 2 ; R6 := R6(R7)
	19	[7939]	TEST     	R6 1 ; if R6 then PC := 23
	20	[7939]	JMP      	23 ; PC := 23
	21	[7940]	SELF     	R6 R5 K9 ; R7 := R5; R6 := R5[0xa2880940]
	22	[7940]	CALL     	R6 2 1 ; R6(R7)
	23	[7943]	GETGLOBAL	R6 K5 ; R6 := mParticles
	24	[7943]	GETTABLE 	R6 R6 K6 ; R6 := R6["InvasionFx"]
	25	[7943]	SETTABLE 	R6 R4 K1 ; R6[R4] := nil
	26	[7938]	TFORLOOP 	R1 2 ; R4,R5 := R1(R2,R3); if R4 ~= nil then begin PC = 16; R3 := R4 end
	27	[7943]	JMP      	16 ; PC := 16
	28	[7946]	GETGLOBAL	R6 K4 ; R6 := 0xcfc01047
	29	[7946]	GETUPVAL 	R7 U0 ; R7 := U0
	30	[7946]	CALL     	R6 2 4 ; R6,R7,R8 := R6(R7)
	31	[7946]	JMP      	48 ; PC := 48
	32	[7947]	GETGLOBAL	R11 K10 ; R11 := _T
	33	[7947]	GETTABLE 	R11 R11 K11 ; R11 := R11["CachedInvasionInfo"]
	34	[7947]	GETTABLE 	R11 R11 R9 ; R11 := R11[R9]
	35	[7947]	EQ       	1 R11 K1 ; if R11 == nil then PC := 48
	36	[7947]	JMP      	48 ; PC := 48
	37	[7947]	GETTABLE 	R11 R10 K12 ; R11 := R10["radialSector"]
	38	[7947]	GETTABLE 	R11 R11 K13 ; R11 := R11["region"]
	39	[7947]	EQ       	0 R11 R0 ; if R11 ~= R0 then PC := 48
	40	[7947]	JMP      	48 ; PC := 48
	41	[7948]	GETGLOBAL	R11 K14 ; R11 := 0x33bdd652
	42	[7948]	GETTABLE 	R11 R11 K15 ; R11 := R11[0x23d5322f]
	43	[7948]	GETGLOBAL	R12 K2 ; R12 := mFxNodes
	44	[7948]	GETTABLE 	R12 R12 K3 ; R12 := R12["Invasion"]
	45	[7948]	NEWTABLE 	R13 0 1 ; R13 := {}
	46	[7948]	SETTABLE 	R13 K16 R10 ; R13["Node"] := R10
	47	[7948]	CALL     	R11 3 1 ; R11(R12,R13)
	48	[7946]	TFORLOOP 	R6 2 ; R9,R10 := R6(R7,R8); if R9 ~= nil then begin PC = 32; R8 := R9 end
	49	[7949]	JMP      	32 ; PC := 32
	50	[7951]	RETURN   	R0 1 ; return 

function #179 <?:7953,8007> (215 instructions, 860 bytes at 0000021125D02B20)
1 param, 14 slots, 3 upvalues, 0 locals, 46 constants, 0 functions
	1	[7954]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[7954]	GETGLOBAL	R2 K1 ; R2 := 0xae91e43b
	3	[7954]	CALL     	R1 2 2 ; R1 := R1(R2)
	4	[7954]	TEST     	R1 0 ; if not R1 then PC := 7
	5	[7954]	JMP      	7 ; PC := 7
	6	[7955]	RETURN   	R0 1 ; return 
	7	[7958]	GETGLOBAL	R1 K2 ; R1 := mCountDown
	8	[7958]	GETTABLE 	R1 R1 K3 ; R1 := R1["Node"]
	9	[7958]	EQ       	1 R1 K4 ; if R1 == nil then PC := 107
	10	[7958]	JMP      	107 ; PC := 107
	11	[7958]	GETGLOBAL	R1 K2 ; R1 := mCountDown
	12	[7958]	GETTABLE 	R1 R1 K5 ; R1 := R1["TransitioningOut"]
	13	[7958]	TEST     	R1 1 ; if R1 then PC := 107
	14	[7958]	JMP      	107 ; PC := 107
	15	[7958]	GETGLOBAL	R1 K2 ; R1 := mCountDown
	16	[7958]	GETTABLE 	R1 R1 K6 ; R1 := R1["Timer"]
	17	[7958]	EQ       	1 R1 K7 ; if R1 == -1.000000 then PC := 107
	18	[7958]	JMP      	107 ; PC := 107
	19	[7959]	GETGLOBAL	R1 K2 ; R1 := mCountDown
	20	[7959]	SETTABLE 	R1 K5 K8 ; R1["TransitioningOut"] := true
	21	[7960]	OP_LOADBOOL	R1 1 0 ; R1 := true
	22	[7960]	SETGLOBALHASH	R1 K9 ; mInputBlocked := R1
	23	[7961]	GETUPVAL 	R1 U0 ; R1 := U0
	24	[7961]	GETGLOBAL	R2 K2 ; R2 := mCountDown
	25	[7961]	GETTABLE 	R2 R2 K3 ; R2 := R2["Node"]
	26	[7961]	CALL     	R1 2 4 ; R1,R2,R3 := R1(R2)
	27	[7963]	GETGLOBAL	R4 K2 ; R4 := mCountDown
	28	[7963]	GETGLOBAL	R5 K11 ; R5 := mDrag
	29	[7963]	GETTABLE 	R5 R5 K12 ; R5 := R5["mCurrentScroll"]
	30	[7963]	GETTABLE 	R5 R5 K13 ; R5 := R5["x"]
	31	[7963]	SETTABLE 	R4 K10 R5 ; R4["InitialX"] := R5
	32	[7964]	GETGLOBAL	R4 K2 ; R4 := mCountDown
	33	[7964]	GETGLOBAL	R5 K11 ; R5 := mDrag
	34	[7964]	GETTABLE 	R5 R5 K12 ; R5 := R5["mCurrentScroll"]
	35	[7964]	GETTABLE 	R5 R5 K15 ; R5 := R5["y"]
	36	[7964]	SETTABLE 	R4 K14 R5 ; R4["InitialY"] := R5
	37	[7965]	GETGLOBAL	R4 K2 ; R4 := mCountDown
	38	[7965]	GETGLOBAL	R5 K17 ; R5 := mSmoothZoom
	39	[7965]	GETTABLE 	R5 R5 K18 ; R5 := R5["mCurVal"]
	40	[7965]	SETTABLE 	R4 K16 R5 ; R4["InitialZoom"] := R5
	41	[7967]	GETGLOBAL	R4 K2 ; R4 := mCountDown
	42	[7967]	SETTABLE 	R4 K19 R1 ; R4["TargetX"] := R1
	43	[7968]	GETGLOBAL	R4 K2 ; R4 := mCountDown
	44	[7968]	SETTABLE 	R4 K20 R2 ; R4["TargetY"] := R2
	45	[7969]	GETGLOBAL	R4 K2 ; R4 := mCountDown
	46	[7969]	SETTABLE 	R4 K21 R3 ; R4["TargetZoom"] := R3
	47	[7971]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	48	[7971]	GETUPVAL 	R5 U1 ; R5 := U1
	49	[7971]	GETTABLE 	R5 R5 K22 ; R5 := R5["cameraSpot"]
	50	[7971]	CALL     	R4 2 2 ; R4 := R4(R5)
	51	[7971]	TEST     	R4 1 ; if R4 then PC := 64
	52	[7971]	JMP      	64 ; PC := 64
	53	[7972]	GETGLOBAL	R4 K2 ; R4 := mCountDown
	54	[7972]	GETUPVAL 	R5 U1 ; R5 := U1
	55	[7972]	GETTABLE 	R5 R5 K22 ; R5 := R5["cameraSpot"]
	56	[7972]	SELF     	R5 R5 K24 ; R6 := R5; R5 := R5[0xaac2f3a5]
	57	[7972]	CALL     	R5 2 2 ; R5 := R5(R6)
	58	[7972]	SETTABLE 	R4 K23 R5 ; R4["InitialFOV"] := R5
	59	[7973]	GETGLOBAL	R4 K2 ; R4 := mCountDown
	60	[7973]	GETGLOBAL	R5 K2 ; R5 := mCountDown
	61	[7973]	GETTABLE 	R5 R5 K23 ; R5 := R5["InitialFOV"]
	62	[7973]	DIV      	R5 R5 K26 ; R5 := R5 / 4.000000
	63	[7973]	SETTABLE 	R4 K25 R5 ; R4["TargetFOV"] := R5
	64	[7976]	GETGLOBAL	R4 K27 ; R4 := mPlayerPos
	65	[7976]	SETTABLE 	R4 K28 K8 ; R4["Locked"] := true
	66	[7977]	GETGLOBAL	R4 K0 ; R4 := 0x7b998233
	67	[7977]	GETUPVAL 	R5 U2 ; R5 := U2
	68	[7977]	CALL     	R4 2 2 ; R4 := R4(R5)
	69	[7977]	TEST     	R4 1 ; if R4 then PC := 77
	70	[7977]	JMP      	77 ; PC := 77
	71	[7978]	GETGLOBAL	R4 K27 ; R4 := mPlayerPos
	72	[7978]	GETUPVAL 	R5 U2 ; R5 := U2
	73	[7978]	SELF     	R5 R5 K30 ; R6 := R5; R5 := R5[0xd1586535]
	74	[7978]	CALL     	R5 2 2 ; R5 := R5(R6)
	75	[7978]	SETTABLE 	R4 K29 R5 ; R4["Previous"] := R5
	76	[7978]	JMP      	81 ; PC := 81
	77	[7980]	GETGLOBAL	R4 K27 ; R4 := mPlayerPos
	78	[7980]	GETGLOBAL	R5 K31 ; R5 := 0xa421af95
	79	[7980]	CALL     	R5 1 2 ; R5 := R5()
	80	[7980]	SETTABLE 	R4 K29 R5 ; R4["Previous"] := R5
	81	[7982]	GETGLOBAL	R4 K27 ; R4 := mPlayerPos
	82	[7982]	GETGLOBAL	R5 K27 ; R5 := mPlayerPos
	83	[7982]	GETTABLE 	R5 R5 K29 ; R5 := R5["Previous"]
	84	[7982]	GETGLOBAL	R6 K31 ; R6 := 0xa421af95
	85	[7982]	LOADK    	R7 := 0.000000
	86	[7982]	LOADK    	R8 := 0.000000
	87	[7982]	GETGLOBAL	R9 K2 ; R9 := mCountDown
	88	[7982]	GETTABLE 	R9 R9 K21 ; R9 := R9["TargetZoom"]
	89	[7982]	GETGLOBAL	R10 K2 ; R10 := mCountDown
	90	[7982]	GETTABLE 	R10 R10 K16 ; R10 := R10["InitialZoom"]
	91	[7982]	SUB      	R9 R9 R10 ; R9 := R9 - R10
	92	[7982]	CALL     	R6 4 2 ; R6 := R6(R7,R8,R9)
	93	[7982]	SUB      	R5 R5 R6 ; R5 := R5 - R6
	94	[7982]	SETTABLE 	R4 K32 R5 ; R4["Target"] := R5
	95	[7983]	GETGLOBAL	R4 K27 ; R4 := mPlayerPos
	96	[7983]	GETTABLE 	R4 R4 K33 ; R4 := R4["Prop"]
	97	[7983]	SELF     	R4 R4 K34 ; R5 := R4; R4 := R4[0xd0f998cd]
	98	[7983]	LOADK    	R6 := 1.000000
	99	[7983]	CALL     	R4 3 1 ; R4(R5,R6)
	100	[7984]	GETGLOBAL	R4 K27 ; R4 := mPlayerPos
	101	[7984]	GETTABLE 	R4 R4 K33 ; R4 := R4["Prop"]
	102	[7984]	SELF     	R4 R4 K35 ; R5 := R4; R4 := R4[0x188e2bee]
	103	[7984]	LOADK    	R6 := 1.000000
	104	[7984]	CALL     	R4 3 1 ; R4(R5,R6)
	105	[7985]	GETGLOBAL	R4 K27 ; R4 := mPlayerPos
	106	[7985]	SETTABLE 	R4 K36 K7 ; R4["Region"] := -1.000000
	107	[7988]	GETGLOBAL	R4 K1 ; R4 := 0xae91e43b
	108	[7988]	SELF     	R4 R4 K37 ; R5 := R4; R4 := R4[0x67bc869f]
	109	[7988]	LOADK    	R6 K38 ; R6 := "_root"
	110	[7988]	LOADK    	R7 := 10.000000
	111	[7988]	MUL      	R8 R0 K39 ; R8 := R0 * 100.000000
	112	[7988]	CALL     	R4 5 1 ; R4(R5,R6,R7,R8)
	113	[7990]	SUB      	R4 K40 R0 ; R4 := 1.000000 - R0
	114	[7992]	GETGLOBAL	R5 K2 ; R5 := mCountDown
	115	[7992]	GETTABLE 	R5 R5 K16 ; R5 := R5["InitialZoom"]
	116	[7992]	EQ       	1 R5 K4 ; if R5 == nil then PC := 122
	117	[7992]	JMP      	122 ; PC := 122
	118	[7992]	GETGLOBAL	R5 K2 ; R5 := mCountDown
	119	[7992]	GETTABLE 	R5 R5 K21 ; R5 := R5["TargetZoom"]
	120	[7992]	EQ       	0 R5 K4 ; if R5 ~= nil then PC := 123
	121	[7992]	JMP      	123 ; PC := 123
	122	[7992]	OP_LOADBOOL	R5 0 1 ; R5 := false; PC := 123
	123	[7992]	OP_LOADBOOL	R5 1 0 ; R5 := true
	124	[7993]	GETGLOBAL	R6 K2 ; R6 := mCountDown
	125	[7993]	GETTABLE 	R6 R6 K23 ; R6 := R6["InitialFOV"]
	126	[7993]	EQ       	1 R6 K4 ; if R6 == nil then PC := 132
	127	[7993]	JMP      	132 ; PC := 132
	128	[7993]	GETGLOBAL	R6 K2 ; R6 := mCountDown
	129	[7993]	GETTABLE 	R6 R6 K25 ; R6 := R6["TargetFOV"]
	130	[7993]	EQ       	0 R6 K4 ; if R6 ~= nil then PC := 133
	131	[7993]	JMP      	133 ; PC := 133
	132	[7993]	OP_LOADBOOL	R6 0 1 ; R6 := false; PC := 133
	133	[7993]	OP_LOADBOOL	R6 1 0 ; R6 := true
	134	[7994]	TEST     	R5 1 ; if R5 then PC := 138
	135	[7994]	JMP      	138 ; PC := 138
	136	[7994]	TEST     	R6 0 ; if not R6 then PC := 192
	137	[7994]	JMP      	192 ; PC := 192
	138	[7995]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	139	[7995]	GETUPVAL 	R8 U1 ; R8 := U1
	140	[7995]	GETTABLE 	R8 R8 K22 ; R8 := R8["cameraSpot"]
	141	[7995]	CALL     	R7 2 2 ; R7 := R7(R8)
	142	[7995]	TEST     	R7 1 ; if R7 then PC := 158
	143	[7995]	JMP      	158 ; PC := 158
	144	[7995]	TEST     	R6 0 ; if not R6 then PC := 158
	145	[7995]	JMP      	158 ; PC := 158
	146	[7996]	GETUPVAL 	R7 U1 ; R7 := U1
	147	[7996]	GETTABLE 	R7 R7 K22 ; R7 := R7["cameraSpot"]
	148	[7996]	SELF     	R7 R7 K41 ; R8 := R7; R7 := R7[0xacea6d71]
	149	[7996]	GETGLOBAL	R9 K42 ; R9 := 0x9bafffe3
	150	[7996]	GETGLOBAL	R10 K2 ; R10 := mCountDown
	151	[7996]	GETTABLE 	R10 R10 K23 ; R10 := R10["InitialFOV"]
	152	[7996]	GETGLOBAL	R11 K2 ; R11 := mCountDown
	153	[7996]	GETTABLE 	R11 R11 K25 ; R11 := R11["TargetFOV"]
	154	[7996]	MOVE     	R12 R4 ; R12 := R4
	155	[7996]	CALL     	R9 4 0 ; R9,... := R9(R10,R11,R12)
	156	[7996]	CALL     	R7 0 1 ; R7(R8,...)
	157	[7996]	JMP      	170 ; PC := 170
	158	[7997]	TEST     	R5 0 ; if not R5 then PC := 170
	159	[7997]	JMP      	170 ; PC := 170
	160	[7998]	GETGLOBAL	R7 K17 ; R7 := mSmoothZoom
	161	[7998]	SELF     	R7 R7 K34 ; R8 := R7; R7 := R7[0xd0f998cd]
	162	[7998]	GETGLOBAL	R9 K42 ; R9 := 0x9bafffe3
	163	[7998]	GETGLOBAL	R10 K2 ; R10 := mCountDown
	164	[7998]	GETTABLE 	R10 R10 K16 ; R10 := R10["InitialZoom"]
	165	[7998]	GETGLOBAL	R11 K2 ; R11 := mCountDown
	166	[7998]	GETTABLE 	R11 R11 K21 ; R11 := R11["TargetZoom"]
	167	[7998]	MOVE     	R12 R4 ; R12 := R4
	168	[7998]	CALL     	R9 4 0 ; R9,... := R9(R10,R11,R12)
	169	[7998]	CALL     	R7 0 1 ; R7(R8,...)
	170	[8000]	GETGLOBAL	R7 K11 ; R7 := mDrag
	171	[8000]	SELF     	R7 R7 K43 ; R8 := R7; R7 := R7[0x4c4f8717]
	172	[8000]	LOADK    	R9 K13 ; R9 := "x"
	173	[8000]	GETGLOBAL	R10 K42 ; R10 := 0x9bafffe3
	174	[8000]	GETGLOBAL	R11 K2 ; R11 := mCountDown
	175	[8000]	GETTABLE 	R11 R11 K10 ; R11 := R11["InitialX"]
	176	[8000]	GETGLOBAL	R12 K2 ; R12 := mCountDown
	177	[8000]	GETTABLE 	R12 R12 K19 ; R12 := R12["TargetX"]
	178	[8000]	MOVE     	R13 R4 ; R13 := R4
	179	[8000]	CALL     	R10 4 0 ; R10,... := R10(R11,R12,R13)
	180	[8000]	CALL     	R7 0 1 ; R7(R8,...)
	181	[8001]	GETGLOBAL	R7 K11 ; R7 := mDrag
	182	[8001]	SELF     	R7 R7 K43 ; R8 := R7; R7 := R7[0x4c4f8717]
	183	[8001]	LOADK    	R9 K15 ; R9 := "y"
	184	[8001]	GETGLOBAL	R10 K42 ; R10 := 0x9bafffe3
	185	[8001]	GETGLOBAL	R11 K2 ; R11 := mCountDown
	186	[8001]	GETTABLE 	R11 R11 K14 ; R11 := R11["InitialY"]
	187	[8001]	GETGLOBAL	R12 K2 ; R12 := mCountDown
	188	[8001]	GETTABLE 	R12 R12 K20 ; R12 := R12["TargetY"]
	189	[8001]	MOVE     	R13 R4 ; R13 := R4
	190	[8001]	CALL     	R10 4 0 ; R10,... := R10(R11,R12,R13)
	191	[8001]	CALL     	R7 0 1 ; R7(R8,...)
	192	[8004]	GETGLOBAL	R7 K0 ; R7 := 0x7b998233
	193	[8004]	GETUPVAL 	R8 U2 ; R8 := U2
	194	[8004]	CALL     	R7 2 2 ; R7 := R7(R8)
	195	[8004]	TEST     	R7 1 ; if R7 then PC := 215
	196	[8004]	JMP      	215 ; PC := 215
	197	[8004]	GETGLOBAL	R7 K27 ; R7 := mPlayerPos
	198	[8004]	GETTABLE 	R7 R7 K29 ; R7 := R7["Previous"]
	199	[8004]	EQ       	1 R7 K4 ; if R7 == nil then PC := 215
	200	[8004]	JMP      	215 ; PC := 215
	201	[8004]	GETGLOBAL	R7 K27 ; R7 := mPlayerPos
	202	[8004]	GETTABLE 	R7 R7 K32 ; R7 := R7["Target"]
	203	[8004]	EQ       	1 R7 K4 ; if R7 == nil then PC := 215
	204	[8004]	JMP      	215 ; PC := 215
	205	[8005]	GETUPVAL 	R7 U2 ; R7 := U2
	206	[8005]	SELF     	R7 R7 K44 ; R8 := R7; R7 := R7[0x9307aa51]
	207	[8005]	GETGLOBAL	R9 K45 ; R9 := 0x5db3ce80
	208	[8005]	GETGLOBAL	R10 K27 ; R10 := mPlayerPos
	209	[8005]	GETTABLE 	R10 R10 K29 ; R10 := R10["Previous"]
	210	[8005]	GETGLOBAL	R11 K27 ; R11 := mPlayerPos
	211	[8005]	GETTABLE 	R11 R11 K32 ; R11 := R11["Target"]
	212	[8005]	MOVE     	R12 R4 ; R12 := R4
	213	[8005]	CALL     	R9 4 0 ; R9,... := R9(R10,R11,R12)
	214	[8005]	CALL     	R7 0 1 ; R7(R8,...)
	215	[8007]	RETURN   	R0 1 ; return 

function #180 <?:8009,8014> (10 instructions, 40 bytes at 000002112E89F9D0)
0 params, 2 slots, 1 upvalue, 0 locals, 2 constants, 0 functions
	1	[8010]	GETGLOBAL	R0 K0 ; R0 := 0x34291f5c
	2	[8010]	GETTABLE 	R0 R0 K1 ; R0 := R0[0x1467d5f4]
	3	[8010]	CALL     	R0 1 2 ; R0 := R0()
	4	[8010]	TEST     	R0 0 ; if not R0 then PC := 8
	5	[8010]	JMP      	8 ; PC := 8
	6	[8011]	GETUPVAL 	R0 U0 ; R0 := U0
	7	[8011]	CALL     	R0 1 1 ; R0()
	8	[8013]	OP_LOADBOOL	R0 1 0 ; R0 := true
	9	[8013]	RETURN   	R0 2 ; return R0 
	10	[8014]	RETURN   	R0 1 ; return 

function #181 <?:8016,8018> (3 instructions, 12 bytes at 0000021121163E50)
0 params, 2 slots, 1 upvalue, 0 locals, 0 constants, 0 functions
	1	[8017]	OP_LOADBOOL	R0 1 0 ; R0 := true
	2	[8017]	SETUPVAL 	R0 U0 ; U0 := R0
	3	[8018]	RETURN   	R0 1 ; return 

function #182 <?:8020,8033> (49 instructions, 196 bytes at 0000021121163EE0)
0 params, 6 slots, 1 upvalue, 0 locals, 15 constants, 0 functions
	1	[8021]	GETGLOBAL	R0 K0 ; R0 := 0x7b998233
	2	[8021]	GETGLOBAL	R1 K1 ; R1 := mMapLoader
	3	[8021]	CALL     	R0 2 2 ; R0 := R0(R1)
	4	[8021]	TEST     	R0 1 ; if R0 then PC := 49
	5	[8021]	JMP      	49 ; PC := 49
	6	[8022]	GETGLOBAL	R0 K2 ; R0 := 0x89326c93
	7	[8022]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0xfb64e76c]
	8	[8022]	CALL     	R0 2 2 ; R0 := R0(R1)
	9	[8023]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	10	[8023]	MOVE     	R2 R0 ; R2 := R0
	11	[8023]	CALL     	R1 2 2 ; R1 := R1(R2)
	12	[8023]	TEST     	R1 1 ; if R1 then PC := 20
	13	[8023]	JMP      	20 ; PC := 20
	14	[8023]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	15	[8023]	SELF     	R2 R0 K4 ; R3 := R0; R2 := R0[0xbb610e5b]
	16	[8023]	CALL     	R2 2 0 ; R2,... := R2(R3)
	17	[8023]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	18	[8023]	TEST     	R1 0 ; if not R1 then PC := 21
	19	[8023]	JMP      	21 ; PC := 21
	20	[8024]	RETURN   	R0 1 ; return 
	21	[8027]	SELF     	R1 R0 K4 ; R2 := R0; R1 := R0[0xbb610e5b]
	22	[8027]	CALL     	R1 2 2 ; R1 := R1(R2)
	23	[8027]	SELF     	R1 R1 K5 ; R2 := R1; R1 := R1[0xf2deaf69]
	24	[8027]	GETGLOBAL	R3 K6 ; R3 := 0x7ed0a956
	25	[8027]	LOADK    	R4 K7 ; R4 := "/Lotus/Types/Friendly/Tenno/OperatorHubAvatar"
	26	[8027]	CALL     	R3 2 0 ; R3,... := R3(R4)
	27	[8027]	CALL     	R1 0 2 ; R1 := R1(R2,...)
	28	[8027]	TEST     	R1 1 ; if R1 then PC := 39
	29	[8027]	JMP      	39 ; PC := 39
	30	[8028]	GETGLOBAL	R1 K1 ; R1 := mMapLoader
	31	[8028]	SELF     	R1 R1 K8 ; R2 := R1; R1 := R1[0xf5f8978e]
	32	[8028]	GETGLOBAL	R3 K9 ; R3 := 0x0469f296
	33	[8028]	LOADK    	R4 K10 ; R4 := "Player"
	34	[8028]	CALL     	R3 2 2 ; R3 := R3(R4)
	35	[8028]	SELF     	R4 R0 K4 ; R5 := R0; R4 := R0[0xbb610e5b]
	36	[8028]	CALL     	R4 2 2 ; R4 := R4(R5)
	37	[8028]	OP_LOADBOOL	R5 1 0 ; R5 := true
	38	[8028]	CALL     	R1 5 1 ; R1(R2,R3,R4,R5)
	39	[8030]	GETUPVAL 	R1 U0 ; R1 := U0
	40	[8030]	GETTABLE 	R1 R1 K11 ; R1 := R1[0x659d451f]
	41	[8030]	GETGLOBAL	R2 K12 ; R2 := 0x0032441c
	42	[8030]	GETTABLE 	R2 R2 K13 ; R2 := R2["UISound_ButtonSelect"]
	43	[8030]	CALL     	R1 2 1 ; R1(R2)
	44	[8031]	GETUPVAL 	R1 U0 ; R1 := U0
	45	[8031]	GETTABLE 	R1 R1 K11 ; R1 := R1[0x659d451f]
	46	[8031]	GETGLOBAL	R2 K12 ; R2 := 0x0032441c
	47	[8031]	GETTABLE 	R2 R2 K14 ; R2 := R2["UISound_DialogOpen"]
	48	[8031]	CALL     	R1 2 1 ; R1(R2)
	49	[8033]	RETURN   	R0 1 ; return 

function #183 <?:8035,8038> (5 instructions, 20 bytes at 0000021117E70C10)
1 param, 2 slots, 2 upvalues, 0 locals, 0 constants, 0 functions
	1	[8036]	GETUPVAL 	R1 U0 ; R1 := U0
	2	[8036]	CALL     	R1 1 1 ; R1()
	3	[8037]	GETUPVAL 	R1 U1 ; R1 := U1
	4	[8037]	CALL     	R1 1 1 ; R1()
	5	[8038]	RETURN   	R0 1 ; return 

function #184 <?:8040,8042> (3 instructions, 12 bytes at 0000021121163F70)
0 params, 2 slots, 0 upvalues, 0 locals, 0 constants, 0 functions
	1	[8041]	OP_LOADBOOL	R0 1 0 ; R0 := true
	2	[8041]	RETURN   	R0 2 ; return R0 
	3	[8042]	RETURN   	R0 1 ; return 

function #185 <?:8044,8046> (4 instructions, 16 bytes at 0000021123F39610)
0 params, 2 slots, 0 upvalues, 0 locals, 2 constants, 0 functions
	1	[8045]	GETGLOBAL	R0 K0 ; R0 := mRailJack
	2	[8045]	GETTABLE 	R0 R0 K1 ; R0 := R0[0xa2cabe13]
	3	[8045]	CALL     	R0 1 1 ; R0()
	4	[8046]	RETURN   	R0 1 ; return 

function #186 <?:8048,8052> (14 instructions, 56 bytes at 0000021123F396A0)
1 param, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[8049]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[8049]	GETGLOBAL	R2 K1 ; R2 := mInfoTip
	3	[8049]	GETTABLE 	R2 R2 K2 ; R2 := R2["NodeMissionList"]
	4	[8049]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[8049]	TEST     	R1 1 ; if R1 then PC := 14
	6	[8049]	JMP      	14 ; PC := 14
	7	[8050]	GETGLOBAL	R1 K1 ; R1 := mInfoTip
	8	[8050]	GETTABLE 	R1 R1 K2 ; R1 := R1["NodeMissionList"]
	9	[8050]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xdf42446e]
	10	[8050]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	11	[8050]	MOVE     	R4 R0 ; R4 := R0
	12	[8050]	CALL     	R3 2 0 ; R3,... := R3(R4)
	13	[8050]	CALL     	R1 0 1 ; R1(R2,...)
	14	[8052]	RETURN   	R0 1 ; return 

function #187 <?:8054,8058> (14 instructions, 56 bytes at 00000211920849F0)
1 param, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[8055]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[8055]	GETGLOBAL	R2 K1 ; R2 := mInfoTip
	3	[8055]	GETTABLE 	R2 R2 K2 ; R2 := R2["NodeMissionList"]
	4	[8055]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[8055]	TEST     	R1 1 ; if R1 then PC := 14
	6	[8055]	JMP      	14 ; PC := 14
	7	[8056]	GETGLOBAL	R1 K1 ; R1 := mInfoTip
	8	[8056]	GETTABLE 	R1 R1 K2 ; R1 := R1["NodeMissionList"]
	9	[8056]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0xbce5a201]
	10	[8056]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	11	[8056]	MOVE     	R4 R0 ; R4 := R0
	12	[8056]	CALL     	R3 2 0 ; R3,... := R3(R4)
	13	[8056]	CALL     	R1 0 1 ; R1(R2,...)
	14	[8058]	RETURN   	R0 1 ; return 

function #188 <?:8060,8064> (14 instructions, 56 bytes at 0000021116440F60)
1 param, 5 slots, 0 upvalues, 0 locals, 5 constants, 0 functions
	1	[8061]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[8061]	GETGLOBAL	R2 K1 ; R2 := mInfoTip
	3	[8061]	GETTABLE 	R2 R2 K2 ; R2 := R2["NodeMissionList"]
	4	[8061]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[8061]	TEST     	R1 1 ; if R1 then PC := 14
	6	[8061]	JMP      	14 ; PC := 14
	7	[8062]	GETGLOBAL	R1 K1 ; R1 := mInfoTip
	8	[8062]	GETTABLE 	R1 R1 K2 ; R1 := R1["NodeMissionList"]
	9	[8062]	SELF     	R1 R1 K3 ; R2 := R1; R1 := R1[0x070daa5a]
	10	[8062]	GETGLOBAL	R3 K4 ; R3 := 0x03f57322
	11	[8062]	MOVE     	R4 R0 ; R4 := R0
	12	[8062]	CALL     	R3 2 0 ; R3,... := R3(R4)
	13	[8062]	CALL     	R1 0 1 ; R1(R2,...)
	14	[8064]	RETURN   	R0 1 ; return 

function #189 <?:8066,8070> (14 instructions, 56 bytes at 00000211164410A0)
1 param, 5 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[8067]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[8067]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[8067]	GETTABLE 	R2 R2 K1 ; R2 := R2["SelectorList"]
	4	[8067]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[8067]	TEST     	R1 1 ; if R1 then PC := 14
	6	[8067]	JMP      	14 ; PC := 14
	7	[8068]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[8068]	GETTABLE 	R1 R1 K1 ; R1 := R1["SelectorList"]
	9	[8068]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xdf42446e]
	10	[8068]	GETGLOBAL	R3 K3 ; R3 := 0x03f57322
	11	[8068]	MOVE     	R4 R0 ; R4 := R0
	12	[8068]	CALL     	R3 2 0 ; R3,... := R3(R4)
	13	[8068]	CALL     	R1 0 1 ; R1(R2,...)
	14	[8070]	RETURN   	R0 1 ; return 

function #190 <?:8072,8076> (14 instructions, 56 bytes at 000002111B2D1390)
1 param, 5 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[8073]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[8073]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[8073]	GETTABLE 	R2 R2 K1 ; R2 := R2["SelectorList"]
	4	[8073]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[8073]	TEST     	R1 1 ; if R1 then PC := 14
	6	[8073]	JMP      	14 ; PC := 14
	7	[8074]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[8074]	GETTABLE 	R1 R1 K1 ; R1 := R1["SelectorList"]
	9	[8074]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xbce5a201]
	10	[8074]	GETGLOBAL	R3 K3 ; R3 := 0x03f57322
	11	[8074]	MOVE     	R4 R0 ; R4 := R0
	12	[8074]	CALL     	R3 2 0 ; R3,... := R3(R4)
	13	[8074]	CALL     	R1 0 1 ; R1(R2,...)
	14	[8076]	RETURN   	R0 1 ; return 

function #191 <?:8078,8082> (14 instructions, 56 bytes at 0000021133B781A0)
1 param, 5 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[8079]	GETGLOBAL	R1 K0 ; R1 := 0x7b998233
	2	[8079]	GETUPVAL 	R2 U0 ; R2 := U0
	3	[8079]	GETTABLE 	R2 R2 K1 ; R2 := R2["SelectorList"]
	4	[8079]	CALL     	R1 2 2 ; R1 := R1(R2)
	5	[8079]	TEST     	R1 1 ; if R1 then PC := 14
	6	[8079]	JMP      	14 ; PC := 14
	7	[8080]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[8080]	GETTABLE 	R1 R1 K1 ; R1 := R1["SelectorList"]
	9	[8080]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0x070daa5a]
	10	[8080]	GETGLOBAL	R3 K3 ; R3 := 0x03f57322
	11	[8080]	MOVE     	R4 R0 ; R4 := R0
	12	[8080]	CALL     	R3 2 0 ; R3,... := R3(R4)
	13	[8080]	CALL     	R1 0 1 ; R1(R2,...)
	14	[8082]	RETURN   	R0 1 ; return 

function #192 <?:8084,8087> (15 instructions, 60 bytes at 000002119192CA10)
0 params, 5 slots, 3 upvalues, 0 locals, 4 constants, 1 function
	1	[8085]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[8085]	SELF     	R0 R0 K0 ; R1 := R0; R0 := R0[0x775c858b]
	3	[8085]	GETUPVAL 	R2 U1 ; R2 := U1
	4	[8085]	GETTABLE 	R2 R2 K1 ; R2 := R2["ExpansionTimerId"]
	5	[8085]	CALL     	R0 3 1 ; R0(R1,R2)
	6	[8086]	GETUPVAL 	R0 U1 ; R0 := U1
	7	[8086]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[8086]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xbd2e96ea]
	9	[8086]	LOADK    	R3 K3 ; R3 := 0.100000
	10	[8086]	CLOSURE  	R4 0 ; R4 := closure(Function #1)
	11	[8086]	GETUPVAL 	R0 U2 ; R0 := U2
	12	[8086]	GETUPVAL 	R0 U1 ; R0 := U1
	13	[8086]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	14	[8086]	SETTABLE 	R0 K1 R1 ; R0["ExpansionTimerId"] := R1
	15	[8087]	RETURN   	R0 1 ; return 

function #193 <?:8089,8092> (15 instructions, 60 bytes at 000002113253F2C0)
0 params, 5 slots, 3 upvalues, 0 locals, 4 constants, 1 function
	1	[8090]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[8090]	SELF     	R0 R0 K0 ; R1 := R0; R0 := R0[0x775c858b]
	3	[8090]	GETUPVAL 	R2 U1 ; R2 := U1
	4	[8090]	GETTABLE 	R2 R2 K1 ; R2 := R2["ExpansionTimerId"]
	5	[8090]	CALL     	R0 3 1 ; R0(R1,R2)
	6	[8091]	GETUPVAL 	R0 U1 ; R0 := U1
	7	[8091]	GETUPVAL 	R1 U0 ; R1 := U0
	8	[8091]	SELF     	R1 R1 K2 ; R2 := R1; R1 := R1[0xbd2e96ea]
	9	[8091]	LOADK    	R3 K3 ; R3 := 0.100000
	10	[8091]	CLOSURE  	R4 0 ; R4 := closure(Function #1)
	11	[8091]	GETUPVAL 	R0 U2 ; R0 := U2
	12	[8091]	GETUPVAL 	R0 U1 ; R0 := U1
	13	[8091]	CALL     	R1 4 2 ; R1 := R1(R2,R3,R4)
	14	[8091]	SETTABLE 	R0 K1 R1 ; R0["ExpansionTimerId"] := R1
	15	[8092]	RETURN   	R0 1 ; return 

function #194 <?:8094,8100> (13 instructions, 52 bytes at 000002111A89B6C0)
0 params, 3 slots, 1 upvalue, 0 locals, 4 constants, 0 functions
	1	[8095]	GETGLOBAL	R0 K0 ; R0 := mInfoTip
	2	[8095]	GETTABLE 	R0 R0 K1 ; R0 := R0["NodeSelectionOpen"]
	3	[8095]	TEST     	R0 0 ; if not R0 then PC := 13
	4	[8095]	JMP      	13 ; PC := 13
	5	[8096]	GETGLOBAL	R0 K0 ; R0 := mInfoTip
	6	[8096]	GETTABLE 	R0 R0 K2 ; R0 := R0["NodeMissionList"]
	7	[8096]	SELF     	R0 R0 K3 ; R1 := R0; R0 := R0[0x368ad758]
	8	[8096]	OP_LOADBOOL	R2 0 0 ; R2 := false
	9	[8096]	CALL     	R0 3 1 ; R0(R1,R2)
	10	[8097]	GETUPVAL 	R0 U0 ; R0 := U0
	11	[8097]	CALL     	R0 1 1 ; R0()
	12	[8098]	RETURN   	R0 1 ; return 
	13	[8100]	RETURN   	R0 1 ; return 

function #195 <?:8102,8107> (9 instructions, 36 bytes at 0000021132CD6B00)
0 params, 2 slots, 4 upvalues, 0 locals, 0 constants, 0 functions
	1	[8103]	GETUPVAL 	R0 U0 ; R0 := U0
	2	[8103]	CALL     	R0 1 1 ; R0()
	3	[8104]	GETUPVAL 	R0 U1 ; R0 := U1
	4	[8104]	CALL     	R0 1 1 ; R0()
	5	[8105]	GETUPVAL 	R0 U2 ; R0 := U2
	6	[8105]	CALL     	R0 1 1 ; R0()
	7	[8106]	GETUPVAL 	R0 U3 ; R0 := U3
	8	[8106]	CALL     	R0 1 1 ; R0()
	9	[8107]	RETURN   	R0 1 ; return 
